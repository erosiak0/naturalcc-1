{"id": 1680, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581function \u2581to \u2581 fill \u2581the \u2581 contents \u2581of \u2581a \u2581 git \u2581repo \u2581to \u2581a \u2581 map \u2581of \u2581 repositories ."], "references": ["\u2581// \u2581problems In Files \u2581runs \u2581go lint \u2581on \u2581the \u2581files . \u2581It \u2581returns \u2581a \u2581 map \u2581from \u2581the \u2581file \u2581to \u2581// \u2581a \u2581 map \u2581from \u2581the \u2581line \u2581in \u2581the \u2581patch"], "bleu": 0.10004617559472921, "rouge_l": 0.28621700879765394}
{"id": 1647, "predictions": ["\u2581// \u2581convert Suite Meta \u2581converts \u2581 RAM - Meta \u2581to \u2581 api store \u2581 format ."], "references": ["\u2581// \u2581convert Suite Meta \u2581converts \u2581a \u2581 junit \u2581result \u2581in \u2581 gcs \u2581to \u2581a \u2581 Result Store \u2581 Suite ."], "bleu": 0.2553379185002146, "rouge_l": 0.5446428571428571}
{"id": 608, "predictions": ["\u2581// \u2581Save Snapshot \u2581saves \u2581a \u2581snapshot \u2581of \u2581a \u2581 Member ' s \u2581 container ."], "references": ["\u2581// \u2581Save Snapshot \u2581 downloads \u2581a \u2581snapshot \u2581file \u2581from \u2581 this \u2581member , \u2581locally . \u2581// \u2581It ' s \u2581meant \u2581to \u2581requested \u2581remotely , \u2581so \u2581that \u2581local \u2581member \u2581can \u2581store"], "bleu": 0.08241059162765495, "rouge_l": 0.3353951890034364}
{"id": 2015, "predictions": ["\u2581// \u2581patch L vm Node Specific Config Keys \u2581 modifies \u2581the \u2581 set \u2581of \u2581 keys \u2581for \u2581a \u2581 VM ."], "references": ["\u2581// \u2581The \u2581 l vm . thin pool _ name \u2581and \u2581 l vm . v g _ name \u2581 config \u2581 keys \u2581are \u2581node - specific \u2581and \u2581need \u2581//"], "bleu": 0.06555193661974819, "rouge_l": 0.22803738317757008}
{"id": 940, "predictions": ["\u2581// \u2581run Leader \u2581is \u2581used \u2581to \u2581 trigger \u2581a \u2581leader . \u2581It \u2581is \u2581used \u2581to \u2581 trigger \u2581the \u2581// \u2581leader \u2581and \u2581 trigger \u2581the \u2581 Raft \u2581state ."], "references": ["\u2581// \u2581run Leader \u2581runs \u2581the \u2581 FSM \u2581for \u2581a \u2581leader . \u2581Do \u2581the \u2581setup \u2581here \u2581and \u2581drop \u2581into \u2581// \u2581the \u2581leader Loop \u2581for \u2581the \u2581 hot \u2581loop ."], "bleu": 0.1475256903804988, "rouge_l": 0.46428571428571425}
{"id": 1658, "predictions": ["\u2581// \u2581try Merge \u2581adds \u2581a \u2581new \u2581 set \u2581of \u2581 items \u2581to \u2581the \u2581 set \u2581of \u2581 active \u2581 data . \u2581// \u2581// \u2581If \u2581the \u2581 merge Func \u2581is"], "references": ["\u2581// \u2581try Merge \u2581attempts \u2581 1 \u2581 merge \u2581and \u2581returns \u2581a \u2581bool \u2581indicating \u2581if \u2581we \u2581should \u2581try \u2581// \u2581to \u2581 merge \u2581the \u2581remaining \u2581 PR s \u2581and \u2581possibly \u2581an \u2581error"], "bleu": 0.10833590135431663, "rouge_l": 0.3041551246537396}
{"id": 1929, "predictions": ["\u2581// \u2581 Image Get \u2581returns \u2581the \u2581image \u2581 data \u2581for \u2581the \u2581given \u2581project ."], "references": ["\u2581// \u2581 Image Get \u2581gets \u2581an \u2581 Image \u2581object \u2581from \u2581the \u2581database . \u2581// \u2581If \u2581strict Matching \u2581is \u2581false , \u2581The \u2581fingerprint \u2581argument \u2581will \u2581be \u2581 queried \u2581with \u2581a \u2581LIKE"], "bleu": 0.08823741634370692, "rouge_l": 0.2986013986013986}
{"id": 1550, "predictions": ["\u2581// \u2581Should Report \u2581returns \u2581true \u2581if \u2581the \u2581 status \u2581is \u2581 set ."], "references": ["\u2581// \u2581Should Report \u2581returns \u2581if \u2581 this \u2581 p row job \u2581should \u2581be \u2581reported \u2581by \u2581the \u2581 gerrit \u2581reporter"], "bleu": 0.20522771238299164, "rouge_l": 0.4231912784935579}
{"id": 39, "predictions": ["\u2581// \u2581 advertise Matches Cluster \u2581checks \u2581if \u2581the \u2581 map \u2581of \u2581 this \u2581node \u2581 contains \u2581a \u2581 set \u2581of \u2581// \u2581 advertise s \u2581and \u2581returns \u2581the \u2581 set \u2581of"], "references": ["\u2581// \u2581 advertise Matches Cluster \u2581 confirm s \u2581peer \u2581URLs \u2581match \u2581those \u2581in \u2581the \u2581cluster \u2581peer \u2581list ."], "bleu": 0.16352670859125373, "rouge_l": 0.3490701001430615}
{"id": 969, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581the \u2581snapshot \u2581of \u2581the \u2581 Raft \u2581 data ."], "references": ["\u2581// \u2581take Snapshot \u2581is \u2581used \u2581to \u2581take \u2581a \u2581new \u2581snapshot . \u2581This \u2581must \u2581only \u2581be \u2581called \u2581from \u2581// \u2581the \u2581snapshot \u2581thread , \u2581never \u2581the \u2581main \u2581thread . \u2581This \u2581returns \u2581the"], "bleu": 0.05215876353651557, "rouge_l": 0.24729729729729732}
{"id": 1984, "predictions": ["\u2581// \u2581 Exec Container \u2581executes \u2581a \u2581 container \u2581with \u2581the \u2581specified \u2581 container \u2581and \u2581arguments ."], "references": ["\u2581// \u2581 Exec Container \u2581requests \u2581that \u2581 LXD \u2581spawn s \u2581a \u2581command \u2581inside \u2581the \u2581 container"], "bleu": 0.26920508809559307, "rouge_l": 0.5}
{"id": 259, "predictions": ["\u2581// \u2581 apply Conf Change \u2581updates \u2581the \u2581 config \u2581state \u2581for \u2581the \u2581given \u2581 Conf Change \u2581// \u2581and \u2581 apply \u2581the \u2581 Conf Change \u2581to \u2581the \u2581 raft \u2581server ."], "references": ["\u2581// \u2581 apply Conf Change \u2581applies \u2581a \u2581 Conf Change \u2581to \u2581the \u2581server . \u2581It \u2581is \u2581only \u2581// \u2581invoked \u2581with \u2581a \u2581 Conf Change \u2581that \u2581has \u2581already \u2581passed \u2581through \u2581"], "bleu": 0.32705341718250747, "rouge_l": 0.43333333333333335}
{"id": 1815, "predictions": ["\u2581// \u2581 Sync Configs \u2581updates \u2581the \u2581 config \u2581 set \u2581of \u2581 config \u2581configs"], "references": ["\u2581// \u2581 Sync Configs \u2581 sync s \u2581new \u2581configs"], "bleu": 0.2676032275663791, "rouge_l": 0.543026706231454}
{"id": 49, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581snapshot \u2581from \u2581the \u2581given \u2581 raft ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581snapshot \u2581named \u2581by \u2581snap name \u2581and \u2581returns \u2581the \u2581snapshot ."], "bleu": 0.3900793834627842, "rouge_l": 0.5809523809523809}
{"id": 925, "predictions": ["\u2581// \u2581next Configuration \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581current \u2581configuration \u2581configuration"], "references": ["\u2581// \u2581next Configuration \u2581generates \u2581a \u2581new \u2581 Configuration \u2581from \u2581the \u2581current \u2581one \u2581and \u2581a \u2581// \u2581configuration \u2581change \u2581request . \u2581It ' s \u2581 split \u2581from \u2581 append Configuration Entry \u2581so"], "bleu": 0.055140912627813024, "rouge_l": 0.30942028985507253}
{"id": 1963, "predictions": ["\u2581// \u2581 Network Create Pending \u2581 - \u2581 Requests \u2581a \u2581 set \u2581of \u2581network \u2581nodes \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Network Create Pending \u2581creates \u2581a \u2581new \u2581pending \u2581network \u2581on \u2581the \u2581node \u2581with \u2581// \u2581the \u2581given \u2581 name ."], "bleu": 0.2604066818943325, "rouge_l": 0.4594142259414226}
{"id": 945, "predictions": ["\u2581// \u2581restore User Snapshot \u2581restore s \u2581the \u2581snapshot \u2581of \u2581the \u2581 raft ."], "references": ["\u2581// \u2581restore User Snapshot \u2581is \u2581used \u2581to \u2581manually \u2581 consume \u2581an \u2581external \u2581snapshot , \u2581such \u2581// \u2581as \u2581if \u2581 restoring \u2581from \u2581a \u2581backup . \u2581We \u2581will \u2581use \u2581the \u2581current \u2581"], "bleu": 0.08327766790020474, "rouge_l": 0.30391459074733096}
{"id": 452, "predictions": ["\u2581// \u2581member AddCommand Func \u2581is \u2581a \u2581 Command \u2581command \u2581for \u2581 validating \u2581the \u2581member \u2581of \u2581a \u2581 set \u2581of \u2581members ."], "references": ["\u2581// \u2581member AddCommand Func \u2581executes \u2581the \u2581\" member \u2581 add \" \u2581command ."], "bleu": 0.18728674627858763, "rouge_l": 0.4300100704934542}
{"id": 685, "predictions": ["\u2581// \u2581handle Flush Task \u2581 flush es \u2581the \u2581 data \u2581from \u2581the \u2581 data \u2581directory ."], "references": ["\u2581// \u2581handle Flush Task \u2581must \u2581be \u2581run \u2581serial ly ."], "bleu": 0.2240750868020436, "rouge_l": 0.4013157894736842}
{"id": 1684, "predictions": ["\u2581// \u2581monitor Disk And Evict \u2581 evict s \u2581the \u2581disk \u2581and \u2581returns \u2581the \u2581 oldest \u2581// \u2581 size \u2581of \u2581the \u2581disk \u2581usage \u2581and \u2581the \u2581last \u2581 eviction ."], "references": ["\u2581// \u2581monitor Disk And Evict \u2581loops \u2581 monitoring \u2581the \u2581disk , \u2581 evict ing \u2581cache \u2581entries \u2581// \u2581when \u2581the \u2581disk \u2581passes \u2581either \u2581 min Percent Blocks Free \u2581until \u2581the \u2581disk"], "bleu": 0.21213068001548416, "rouge_l": 0.4455056179775281}
{"id": 939, "predictions": ["\u2581// \u2581run Candidate \u2581is \u2581used \u2581to \u2581 trigger \u2581a \u2581 Raft \u2581 status \u2581of \u2581the \u2581 Raft \u2581// \u2581 model ."], "references": ["\u2581// \u2581run Candidate \u2581runs \u2581the \u2581 FSM \u2581for \u2581a \u2581candidate ."], "bleu": 0.13817790393734294, "rouge_l": 0.39739413680781754}
{"id": 58, "predictions": ["\u2581// \u2581step Candidate \u2581 examine s \u2581the \u2581 status \u2581of \u2581the \u2581 Raft \u2581 status \u2581of \u2581the \u2581 raft \u2581// \u2581 raft ."], "references": ["\u2581// \u2581step Candidate \u2581is \u2581shared \u2581by \u2581 State Candidate \u2581and \u2581 State Pre Candidate ; \u2581the \u2581difference \u2581is \u2581// \u2581whether \u2581they \u2581respond \u2581to \u2581 Msg Vote Resp \u2581or \u2581 Msg"], "bleu": 0.09135155993213463, "rouge_l": 0.29486404833836855}
{"id": 258, "predictions": ["\u2581// \u2581 apply Entry Normal \u2581 apply s \u2581the \u2581entry \u2581to \u2581the \u2581 raft \u2581server ."], "references": ["\u2581// \u2581 apply Entry Normal \u2581 apple s \u2581an \u2581 Entry Normal \u2581 type \u2581 raft pb \u2581request \u2581to \u2581the \u2581 Etcd Server"], "bleu": 0.29799423601798425, "rouge_l": 0.496742671009772}
{"id": 522, "predictions": ["\u2581// \u2581 getCluster From Remote Peers \u2581returns \u2581a \u2581 Raft \u2581cluster \u2581that \u2581 satisfies \u2581the \u2581// \u2581 raft . Client Peers \u2581interface ."], "references": ["\u2581// \u2581If \u2581log err \u2581is \u2581true , \u2581it \u2581prints \u2581out \u2581more \u2581error \u2581messages ."], "bleu": 0.05856458233275369, "rouge_l": 0.11306765523632993}
{"id": 250, "predictions": ["\u2581// \u2581start \u2581starts \u2581the \u2581 Etcd Server ."], "references": ["\u2581// \u2581start \u2581prepare s \u2581and \u2581starts \u2581server \u2581in \u2581a \u2581new \u2581goroutine . \u2581It \u2581is \u2581no \u2581longer \u2581safe \u2581to \u2581// \u2581modify \u2581a \u2581server ' s \u2581fields \u2581after \u2581it \u2581has \u2581been \u2581sent"], "bleu": 0.015330090830857419, "rouge_l": 0.190625}
{"id": 732, "predictions": ["\u2581// \u2581 write \u2581writes \u2581the \u2581given \u2581 data \u2581to \u2581the \u2581log ."], "references": ["\u2581// \u2581 write \u2581is \u2581thread - unsafe \u2581by \u2581design \u2581and \u2581should \u2581not \u2581be \u2581called \u2581concurrently ."], "bleu": 0.14651637512439772, "rouge_l": 0.2785388127853881}
{"id": 1945, "predictions": ["\u2581// \u2581 Image Insert \u2581inserts \u2581a \u2581new \u2581 set \u2581of \u2581 data \u2581to \u2581the \u2581database ."], "references": ["\u2581// \u2581 Image Insert \u2581inserts \u2581a \u2581new \u2581image ."], "bleu": 0.42649937722961534, "rouge_l": 0.6740331491712707}
{"id": 257, "predictions": ["\u2581// \u2581 publish \u2581 publishes \u2581a \u2581local \u2581node \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 publish \u2581registers \u2581server \u2581information \u2581into \u2581the \u2581cluster . \u2581The \u2581information \u2581// \u2581is \u2581the \u2581JSON \u2581representation \u2581of \u2581 this \u2581server ' s \u2581member \u2581struct , \u2581updated \u2581with \u2581the \u2581//"], "bleu": 0.06452444352670002, "rouge_l": 0.26521739130434785}
{"id": 937, "predictions": ["\u2581// \u2581run Follower \u2581runs \u2581the \u2581 periodic \u2581 periodic \u2581 periodic \u2581 call \u2581to \u2581 trigger \u2581the \u2581 Raft \u2581// \u2581state \u2581of \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581run Follower \u2581runs \u2581the \u2581 FSM \u2581for \u2581a \u2581 follower ."], "bleu": 0.2250265947708922, "rouge_l": 0.45101663585951934}
{"id": 142, "predictions": ["\u2581// \u2581check Cluster Compatibility From Header \u2581checks \u2581if \u2581the \u2581given \u2581 ID \u2581is \u2581valid"], "references": ["\u2581// \u2581check Cluster Compatibility From Header \u2581checks \u2581the \u2581cluster \u2581compatibility \u2581of \u2581// \u2581the \u2581local \u2581member \u2581from \u2581the \u2581given \u2581header . \u2581// \u2581It \u2581checks \u2581whether \u2581the \u2581version \u2581of \u2581local \u2581member \u2581is"], "bleu": 0.1699137237154154, "rouge_l": 0.42657342657342656}
{"id": 156, "predictions": ["\u2581// \u2581 Restore \u2581restore s \u2581a \u2581 config \u2581file ."], "references": ["\u2581// \u2581 Restore \u2581restore s \u2581a \u2581new \u2581etcd \u2581 data \u2581directory \u2581from \u2581given \u2581snapshot \u2581file ."], "bleu": 0.3558557800955676, "rouge_l": 0.6646489104116223}
{"id": 2038, "predictions": ["\u2581// \u2581 Rebalance \u2581returns \u2581a \u2581new \u2581 raft \u2581node ."], "references": ["\u2581// \u2581 Rebalance \u2581the \u2581 raft \u2581cluster , \u2581trying \u2581to \u2581see \u2581if \u2581we \u2581have \u2581a \u2581 spare \u2581 online \u2581node \u2581// \u2581that \u2581we \u2581can \u2581 promote \u2581to \u2581database \u2581node \u2581if"], "bleu": 0.040576514093271565, "rouge_l": 0.27518796992481204}
{"id": 730, "predictions": ["\u2581// \u2581iterate \u2581executes \u2581a \u2581log \u2581entry , \u2581 this \u2581function \u2581is \u2581called \u2581when \u2581the \u2581log \u2581is \u2581// \u2581 canceled ."], "references": ["\u2581// \u2581iterate \u2581iterates \u2581over \u2581log \u2581file . \u2581It \u2581doesn ' t \u2581not \u2581 allocate \u2581new \u2581memory \u2581for \u2581every \u2581kv \u2581pair . \u2581// \u2581Therefore , \u2581the \u2581kv \u2581pair \u2581is \u2581only \u2581valid"], "bleu": 0.06588573707862014, "rouge_l": 0.23164556962025318}
{"id": 183, "predictions": ["\u2581// \u2581 New Backend Quota \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Backend ."], "references": ["\u2581// \u2581 New Backend Quota \u2581creates \u2581a \u2581quota \u2581layer \u2581with \u2581the \u2581given \u2581storage \u2581limit ."], "bleu": 0.3336118221483976, "rouge_l": 0.548314606741573}
{"id": 2039, "predictions": ["\u2581// \u2581 Promote \u2581is \u2581used \u2581to \u2581 promote \u2581a \u2581node \u2581to \u2581the \u2581node ."], "references": ["\u2581// \u2581 Promote \u2581makes \u2581a \u2581 LXD \u2581node \u2581which \u2581is \u2581not \u2581a \u2581database \u2581node , \u2581become \u2581part \u2581of \u2581the \u2581// \u2581 raft \u2581cluster ."], "bleu": 0.1037145449942874, "rouge_l": 0.40197693574958815}
{"id": 1605, "predictions": ["\u2581// \u2581 Body \u2581returns \u2581the \u2581 body \u2581of \u2581the \u2581 content \u2581 data ."], "references": ["\u2581// \u2581 Body \u2581creates \u2581a \u2581 view \u2581for \u2581 p row \u2581job \u2581metadata ."], "bleu": 0.1892240568795935, "rouge_l": 0.42857142857142855}
{"id": 1376, "predictions": ["\u2581// \u2581parse Issue Comments \u2581parses \u2581a \u2581 view \u2581of \u2581a \u2581 repositories ."], "references": ["\u2581// \u2581parse Issue Comments \u2581returns \u2581a \u2581list \u2581of \u2581comments \u2581to \u2581delete , \u2581a \u2581list \u2581of \u2581 table \u2581// \u2581entries , \u2581and \u2581the \u2581 ID \u2581of \u2581the \u2581 comment \u2581to \u2581update"], "bleu": 0.08550035685780794, "rouge_l": 0.3473309608540925}
{"id": 1158, "predictions": ["\u2581// \u2581Validate Webhook \u2581validates \u2581the \u2581 url \u2581and \u2581returns \u2581the \u2581 status \u2581 code ."], "references": ["\u2581// \u2581Validate Webhook \u2581ensures \u2581that \u2581the \u2581provided \u2581request \u2581 conform s \u2581to \u2581the \u2581// \u2581 format \u2581of \u2581a \u2581GitHub \u2581webhook \u2581and \u2581the \u2581payload \u2581can \u2581be \u2581validated \u2581with \u2581// \u2581the \u2581provided"], "bleu": 0.0689816059082601, "rouge_l": 0.2934707903780069}
{"id": 1083, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 content \u2581of \u2581the \u2581 config \u2581file ."], "references": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 config map \u2581with \u2581the \u2581 data \u2581from \u2581the \u2581identified \u2581files"], "bleu": 0.42212606939038927, "rouge_l": 0.541620421753607}
{"id": 1715, "predictions": ["\u2581// \u2581 sync \u2581returns \u2581a \u2581boolean \u2581indicating \u2581whether \u2581the \u2581given \u2581issue \u2581is \u2581// \u2581 synced \u2581to \u2581a \u2581 set \u2581of \u2581 repositories ."], "references": ["\u2581// \u2581 sync \u2581checks \u2581to \u2581see \u2581if \u2581an \u2581issue \u2581is \u2581already \u2581on \u2581 github \u2581and \u2581tries \u2581to \u2581create \u2581a \u2581new \u2581issue \u2581for \u2581it \u2581if \u2581it \u2581is \u2581not . \u2581// \u2581True"], "bleu": 0.10053072701122982, "rouge_l": 0.33172205438066465}
{"id": 2041, "predictions": ["\u2581// \u2581 List \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581 raft \u2581nodes ."], "references": ["\u2581// \u2581 List \u2581the \u2581nodes \u2581of \u2581the \u2581cluster ."], "bleu": 0.21142141714303078, "rouge_l": 0.563944530046225}
{"id": 1584, "predictions": ["\u2581// \u2581 Job Path \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 GCS \u2581upload \u2581bucket ."], "references": ["\u2581// \u2581 Job Path \u2581returns \u2581a \u2581 link \u2581to \u2581the \u2581 GCS \u2581directory \u2581for \u2581the \u2581job \u2581specified \u2581in \u2581 src"], "bleu": 0.28894155874357685, "rouge_l": 0.5013698630136987}
{"id": 1713, "predictions": ["\u2581// \u2581load Cache \u2581is \u2581used \u2581to \u2581load \u2581the \u2581 Vault \u2581 config \u2581for \u2581the \u2581 org ."], "references": ["\u2581// \u2581load Cache \u2581 loads \u2581the \u2581valid \u2581labels \u2581for \u2581the \u2581repo , \u2581the \u2581currently \u2581authenticated \u2581user , \u2581and \u2581the \u2581issue \u2581cache \u2581from \u2581 github ."], "bleu": 0.11347898845425655, "rouge_l": 0.36830188679245285}
{"id": 1594, "predictions": ["\u2581// \u2581 loadConfig \u2581 loads \u2581the \u2581 config \u2581from \u2581a \u2581 config \u2581file ."], "references": ["\u2581// \u2581 loadConfig \u2581 loads \u2581one \u2581or \u2581multiple \u2581 config \u2581files \u2581and \u2581returns \u2581a \u2581 config \u2581object ."], "bleu": 0.3440887804979443, "rouge_l": 0.6723446893787575}
{"id": 989, "predictions": ["\u2581// \u2581 Dep rec ation s Check \u2581checks \u2581the \u2581 language \u2581 name \u2581of \u2581the \u2581command"], "references": ["\u2581// \u2581 Dep rec ration s Check \u2581will \u2581either \u2581log , \u2581or \u2581fix , \u2581deprecated \u2581 items \u2581in \u2581the \u2581application"], "bleu": 0.2042068334116357, "rouge_l": 0.43571428571428567}
{"id": 765, "predictions": ["\u2581// \u2581 Put \u2581adds \u2581a \u2581new \u2581 key \u2581to \u2581the \u2581list \u2581of \u2581 items \u2581that \u2581are \u2581not \u2581in \u2581the \u2581// \u2581list \u2581of \u2581 items \u2581in \u2581the \u2581tree ."], "references": ["\u2581// \u2581 Put \u2581inserts \u2581the \u2581 key - value \u2581pair ."], "bleu": 0.1029370476768733, "rouge_l": 0.33394160583941607}
{"id": 1597, "predictions": ["\u2581// \u2581 finalize Config \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 set \u2581of \u2581 models \u2581that \u2581have \u2581been \u2581 set \u2581in \u2581the \u2581 config ."], "references": ["\u2581// \u2581 finalize JobConfig \u2581 mutate s \u2581and \u2581 fixes \u2581entries \u2581for \u2581job specs"], "bleu": 0.10008350737965103, "rouge_l": 0.2701505757307352}
{"id": 433, "predictions": ["\u2581// \u2581check Intervals \u2581returns \u2581the \u2581 set \u2581of \u2581intervals \u2581for \u2581the \u2581given \u2581 Request Op ."], "references": ["\u2581// \u2581check Intervals \u2581tests \u2581whether \u2581puts \u2581and \u2581deletes \u2581overlap \u2581for \u2581a \u2581list \u2581of \u2581 ops . \u2581If \u2581// \u2581there \u2581is \u2581an \u2581overlap , \u2581returns \u2581an \u2581error . \u2581If \u2581no \u2581overlap"], "bleu": 0.07309601795775379, "rouge_l": 0.24729729729729732}
{"id": 796, "predictions": ["\u2581// \u2581parse Item \u2581returns \u2581true \u2581if \u2581the \u2581item \u2581is \u2581 empty ."], "references": ["\u2581// \u2581parse Item \u2581is \u2581a \u2581complex \u2581function \u2581because \u2581it \u2581needs \u2581to \u2581handle \u2581both \u2581forward \u2581and \u2581reverse \u2581iteration \u2581// \u2581implementation . \u2581We \u2581store \u2581 keys \u2581such \u2581that \u2581their \u2581versions \u2581are \u2581sorted"], "bleu": 0.04962965758858181, "rouge_l": 0.22101449275362317}
{"id": 692, "predictions": ["\u2581// \u2581 Flatten \u2581merges \u2581the \u2581 compaction s \u2581from \u2581the \u2581 table ."], "references": ["\u2581// \u2581 Flatten \u2581can \u2581be \u2581used \u2581to \u2581force \u2581 compaction s \u2581on \u2581the \u2581 L SM \u2581tree \u2581so \u2581all \u2581the \u2581tables \u2581fall \u2581on \u2581the \u2581same \u2581// \u2581level . \u2581This \u2581ensures"], "bleu": 0.08148570259275134, "rouge_l": 0.3907473309608541}
{"id": 339, "predictions": ["\u2581// \u2581service Health Command Func \u2581is \u2581a \u2581 helper \u2581function \u2581for \u2581 kubeadm - completion \u2581command"], "references": ["\u2581// \u2581ep Health Command Func \u2581executes \u2581the \u2581\" endpoint - health \" \u2581command ."], "bleu": 0.16467029855845897, "rouge_l": 0.4048672566371681}
{"id": 385, "predictions": ["\u2581// \u2581Validate Configuration Change \u2581ensures \u2581that \u2581the \u2581 Raft \u2581 config \u2581 type \u2581is \u2581 set ."], "references": ["\u2581// \u2581Validate Configuration Change \u2581takes \u2581a \u2581 proposed \u2581 Conf Change \u2581and \u2581// \u2581ensures \u2581that \u2581it \u2581is \u2581still \u2581valid ."], "bleu": 0.2170226764908127, "rouge_l": 0.42620087336244544}
{"id": 920, "predictions": ["\u2581// \u2581run FSM \u2581is \u2581used \u2581to \u2581 trigger \u2581a \u2581 Raft"], "references": ["\u2581// \u2581run FSM \u2581is \u2581a \u2581long \u2581running \u2581goroutine \u2581responsible \u2581for \u2581applying \u2581logs \u2581// \u2581to \u2581the \u2581 FSM . \u2581This \u2581is \u2581done \u2581async \u2581of \u2581other \u2581logs \u2581since \u2581we \u2581don ' t"], "bleu": 0.06338349501054427, "rouge_l": 0.2701107011070111}
{"id": 355, "predictions": ["\u2581// \u2581serve Peers \u2581is \u2581used \u2581to \u2581 connect \u2581to \u2581the \u2581 Etcd \u2581server \u2581and \u2581returns \u2581the \u2581// \u2581connection \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581configure \u2581peer \u2581 handlers \u2581after \u2581 raft http . Transport \u2581started"], "bleu": 0.06964541799727335, "rouge_l": 0.2484725050916497}
{"id": 2003, "predictions": ["\u2581// \u2581 Console Container \u2581 attaches \u2581a \u2581 container \u2581to \u2581the \u2581 container ' s \u2581 container"], "references": ["\u2581// \u2581 Console Container \u2581requests \u2581that \u2581 LXD \u2581 attaches \u2581to \u2581the \u2581console \u2581device \u2581of \u2581a \u2581 container ."], "bleu": 0.29003752873541777, "rouge_l": 0.5500450856627592}
{"id": 1986, "predictions": ["\u2581// \u2581Create Container File \u2581creates \u2581a \u2581 container \u2581file \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 path ."], "references": ["\u2581// \u2581Create Container File \u2581tells \u2581 LXD \u2581to \u2581create \u2581a \u2581file \u2581in \u2581the \u2581 container"], "bleu": 0.24405051724608798, "rouge_l": 0.4929292929292929}
{"id": 737, "predictions": ["\u2581// \u2581 Internal \u2581function \u2581for \u2581 KV ."], "references": ["\u2581// \u2581produce KV s \u2581pick s \u2581up \u2581ranges \u2581from \u2581range Ch , \u2581generates \u2581 KV \u2581lists \u2581and \u2581sends \u2581them \u2581to \u2581kv Chan ."], "bleu": 0.036774976148415406, "rouge_l": 0.23735408560311283}
{"id": 1825, "predictions": ["\u2581// \u2581terminate Dup es \u2581removes \u2581all \u2581 items \u2581in \u2581the \u2581 set \u2581of \u2581 items ."], "references": ["\u2581// \u2581terminate Dup es \u2581abort s \u2581 pre submit s \u2581that \u2581have \u2581a \u2581newer \u2581version . \u2581It \u2581 modifies \u2581 p js \u2581// \u2581in - place \u2581when \u2581it \u2581abort s"], "bleu": 0.10613242539437312, "rouge_l": 0.2885135135135135}
{"id": 181, "predictions": ["\u2581// \u2581 Embed Config \u2581creates \u2581a \u2581new \u2581 DER - RPC \u2581server ."], "references": ["\u2581// \u2581 Embed Config \u2581returns \u2581etcd \u2581 embed . Config ."], "bleu": 0.2891784933232572, "rouge_l": 0.507628294036061}
{"id": 1618, "predictions": ["\u2581// \u2581 Labels And Annotations For Spec \u2581returns \u2581the \u2581labels \u2581for \u2581the \u2581given \u2581spec"], "references": ["\u2581// \u2581 Labels And Annotations For Spec \u2581returns \u2581a \u2581 minimal \u2581 set \u2581of \u2581labels \u2581to \u2581 add \u2581to \u2581 p row jobs \u2581or \u2581its \u2581 owned \u2581resources . \u2581//"], "bleu": 0.18047302396249, "rouge_l": 0.3839160839160839}
{"id": 382, "predictions": ["\u2581// \u2581 Write Error \u2581writes \u2581a \u2581response \u2581with \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581 Write Error \u2581logs \u2581and \u2581writes \u2581the \u2581given \u2581 Error \u2581to \u2581the \u2581 ResponseWriter \u2581// \u2581If \u2581 Error \u2581is \u2581an \u2581etcd Err , \u2581it \u2581is \u2581rendered \u2581to \u2581the \u2581"], "bleu": 0.07673292733354292, "rouge_l": 0.30942028985507253}
{"id": 846, "predictions": ["\u2581// \u2581handle Command \u2581handles \u2581a \u2581command \u2581to \u2581 get \u2581a \u2581 rpc \u2581command ."], "references": ["\u2581// \u2581handle Command \u2581is \u2581used \u2581to \u2581 decode \u2581and \u2581 dispatch \u2581a \u2581single \u2581command ."], "bleu": 0.21884820673336214, "rouge_l": 0.548314606741573}
{"id": 823, "predictions": ["\u2581// \u2581Create \u2581a \u2581new \u2581 CRC d \u2581file \u2581at \u2581the \u2581given \u2581version ."], "references": ["\u2581// \u2581Create \u2581is \u2581used \u2581to \u2581start \u2581a \u2581new \u2581snapshot"], "bleu": 0.15807437922444714, "rouge_l": 0.37596302003081655}
{"id": 609, "predictions": ["\u2581// \u2581 Restore Snapshot \u2581restore s \u2581a \u2581snapshot \u2581of \u2581the \u2581 Member ' s \u2581snapshot ."], "references": ["\u2581// \u2581 Restore Snapshot \u2581restore s \u2581a \u2581cluster \u2581from \u2581a \u2581given \u2581snapshot \u2581file \u2581on \u2581disk . \u2581// \u2581It ' s \u2581meant \u2581to \u2581requested \u2581remotely , \u2581so \u2581that \u2581local \u2581member \u2581can"], "bleu": 0.19753470156058942, "rouge_l": 0.41216216216216217}
{"id": 1301, "predictions": ["\u2581// \u2581Ensure Build able Job \u2581adds \u2581a \u2581build able \u2581job \u2581to \u2581the \u2581 Client ' s \u2581 status ."], "references": ["\u2581// \u2581Ensure Build able Job \u2581attempts \u2581to \u2581detect \u2581a \u2581job \u2581that \u2581hasn ' t \u2581yet \u2581 ran \u2581and \u2581populated \u2581// \u2581its \u2581parameters . \u2581If \u2581detected , \u2581it \u2581tries \u2581to \u2581run"], "bleu": 0.1572255855802321, "rouge_l": 0.392282958199357}
{"id": 1931, "predictions": ["\u2581// \u2581image Fill \u2581returns \u2581the \u2581 set \u2581of \u2581 content \u2581of \u2581the \u2581image ."], "references": ["\u2581// \u2581 Fill \u2581extra \u2581image \u2581fields \u2581such \u2581as \u2581properties \u2581and \u2581 alias . \u2581This \u2581is \u2581called \u2581after \u2581// \u2581fetching \u2581a \u2581single \u2581row \u2581from \u2581the \u2581images \u2581 table ."], "bleu": 0.045987737272173396, "rouge_l": 0.22459499263622976}
{"id": 296, "predictions": ["\u2581// \u2581 dial Setup Opts \u2581returns \u2581a \u2581 Dial Option \u2581that \u2581sets \u2581up \u2581 dial s \u2581on \u2581the \u2581// \u2581connection ."], "references": ["\u2581// \u2581 dial Setup Opts \u2581gives \u2581the \u2581 dial \u2581opts \u2581prior \u2581to \u2581any \u2581authentication ."], "bleu": 0.25306188056493334, "rouge_l": 0.4582159624413146}
{"id": 1843, "predictions": ["\u2581// \u2581 Fetch Artifacts \u2581 loads \u2581the \u2581 content \u2581of \u2581a \u2581repository \u2581from \u2581the \u2581datastore ."], "references": ["\u2581// \u2581 Fetch Artifacts \u2581constructs \u2581and \u2581returns \u2581 Artifact \u2581objects \u2581for \u2581each \u2581artifact \u2581 name \u2581in \u2581the \u2581list . \u2581// \u2581This \u2581includes \u2581getting \u2581any \u2581handles \u2581needed \u2581for \u2581read \u2581 write"], "bleu": 0.10337337995132273, "rouge_l": 0.32972972972972975}
{"id": 151, "predictions": ["\u2581// \u2581save DB \u2581saves \u2581the \u2581 DB \u2581database \u2581to \u2581the \u2581database ."], "references": ["\u2581// \u2581save DB \u2581copies \u2581the \u2581 v 3 \u2581backend \u2581and \u2581 strip s \u2581cluster \u2581information ."], "bleu": 0.17125878499579691, "rouge_l": 0.4178082191780822}
{"id": 1033, "predictions": ["\u2581// \u2581 Dial \u2581 establish es \u2581a \u2581connection \u2581to \u2581a \u2581 TCP \u2581connection ."], "references": ["\u2581// \u2581 Dial \u2581 dial s \u2581and \u2581authenticate s \u2581to \u2581an \u2581 SMTP \u2581server . \u2581The \u2581returned \u2581 Send Closer \u2581// \u2581should \u2581be \u2581closed \u2581when \u2581done \u2581using \u2581it ."], "bleu": 0.09477064089250448, "rouge_l": 0.30631276901004306}
{"id": 1072, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 gen \u2581instance ."], "references": ["\u2581// \u2581 New \u2581resource \u2581generator"], "bleu": 0.23462350320528, "rouge_l": 0.42558139534883715}
{"id": 481, "predictions": ["\u2581// \u2581Get Cluster \u2581returns \u2581a \u2581list \u2581of \u2581 active \u2581 IP \u2581addresses \u2581for \u2581the \u2581given \u2581service"], "references": ["\u2581// \u2581Get Cluster \u2581gets \u2581the \u2581cluster \u2581information \u2581via \u2581DNS \u2581discovery . \u2581// \u2581Also \u2581see s \u2581each \u2581entry \u2581as \u2581a \u2581separate \u2581instance ."], "bleu": 0.1088975589689416, "rouge_l": 0.20469798657718125}
{"id": 458, "predictions": ["\u2581// \u2581Verify \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 WAL \u2581and \u2581 WAL \u2581files ."], "references": ["\u2581// \u2581Verify \u2581reads \u2581through \u2581the \u2581given \u2581 WAL \u2581and \u2581verifies \u2581that \u2581it \u2581is \u2581not \u2581 corrupt ed . \u2581// \u2581It \u2581creates \u2581a \u2581new \u2581decoder \u2581to \u2581read \u2581through \u2581the \u2581records \u2581of"], "bleu": 0.07793912552484203, "rouge_l": 0.3353951890034364}
{"id": 1748, "predictions": ["\u2581// \u2581fetch Recent Events And Comments \u2581fetches \u2581the \u2581 oldest \u2581events \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581fetch Recent Events And Comments \u2581retrieves \u2581events \u2581from \u2581 DB , \u2581but \u2581only \u2581fetches \u2581events \u2581created \u2581since \u2581last \u2581 call"], "bleu": 0.2904636095832844, "rouge_l": 0.4314765694076038}
{"id": 1657, "predictions": ["\u2581// \u2581 Merge \u2581 reduce s \u2581the \u2581 pre submit s \u2581list \u2581of \u2581 pre submit s \u2581to \u2581the \u2581 set \u2581of \u2581 pre submit s \u2581// \u2581 pre submit"], "references": ["\u2581// \u2581 accumulate \u2581returns \u2581the \u2581supplied \u2581 PR s \u2581sorted \u2581into \u2581three \u2581buckets \u2581based \u2581on \u2581their \u2581// \u2581 accumulated \u2581state \u2581across \u2581the \u2581 pre submit s ."], "bleu": 0.19500507550993698, "rouge_l": 0.3896631823461092}
{"id": 1872, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 cli ."], "references": ["\u2581// \u2581 Run \u2581clone s \u2581the \u2581configured \u2581 refs"], "bleu": 0.29150322793751426, "rouge_l": 0.5820610687022901}
{"id": 234, "predictions": ["\u2581// \u2581list Entries Type \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581entries \u2581in \u2581the \u2581given \u2581 raft . Entry ."], "references": ["\u2581// \u2581list Entries Type \u2581filters \u2581and \u2581prints \u2581entries \u2581based \u2581on \u2581the \u2581entry - type \u2581flag ,"], "bleu": 0.18493046910349434, "rouge_l": 0.34014869888475835}
{"id": 1918, "predictions": ["\u2581// \u2581 init App Armor \u2581initializes \u2581the \u2581 app Armor _ token"], "references": ["\u2581// \u2581Initialize \u2581 App Armor - specific \u2581attributes ."], "bleu": 0.15537125692760353, "rouge_l": 0.39102564102564097}
{"id": 526, "predictions": ["\u2581// \u2581 getVersion \u2581returns \u2581the \u2581version \u2581of \u2581the \u2581peer \u2581with \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581 getVersion \u2581returns \u2581the \u2581 Versions \u2581of \u2581the \u2581given \u2581member \u2581via \u2581its \u2581// \u2581peer URLs . \u2581Returns \u2581the \u2581last \u2581error \u2581if \u2581it \u2581fails \u2581to \u2581 get \u2581the \u2581version ."], "bleu": 0.15407588744372644, "rouge_l": 0.4611683848797251}
{"id": 479, "predictions": ["\u2581// \u2581Get DNS ClusterName s \u2581returns \u2581the \u2581list \u2581of \u2581DNS \u2581names \u2581for \u2581the \u2581cluster"], "references": ["\u2581// \u2581Get DNS ClusterName s \u2581uses \u2581DNS \u2581 SRV \u2581records \u2581to \u2581 get \u2581a \u2581list \u2581of \u2581initial \u2581nodes \u2581for \u2581cluster \u2581bootstrap ping ."], "bleu": 0.20732707103151352, "rouge_l": 0.4660441426146011}
{"id": 1522, "predictions": ["\u2581// \u2581 Lib \u2581checks \u2581if \u2581the \u2581 container \u2581is \u2581valid"], "references": ["\u2581// \u2581 createContext \u2581has \u2581the \u2581user \u2581create \u2581a \u2581context ."], "bleu": 0.17827531042796255, "rouge_l": 0.3}
{"id": 2011, "predictions": ["\u2581// \u2581Get Container Backup File \u2581 - \u2581 get \u2581backup File"], "references": ["\u2581// \u2581Get Container Backup File \u2581requests \u2581the \u2581 container \u2581backup \u2581 content"], "bleu": 0.42161204844881867, "rouge_l": 0.603960396039604}
{"id": 1809, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 kubelet ."], "references": ["\u2581// \u2581 Run \u2581will \u2581 watch \u2581for \u2581the \u2581process \u2581being \u2581wrapped \u2581to \u2581 exit \u2581// \u2581and \u2581then \u2581 post \u2581the \u2581 status \u2581of \u2581that \u2581process \u2581and \u2581any \u2581artifacts \u2581// \u2581to"], "bleu": 0.022691073230444843, "rouge_l": 0.23828125}
{"id": 478, "predictions": ["\u2581// \u2581 Peer URLs Map And Token \u2581 searches \u2581for \u2581the \u2581 CA \u2581 config \u2581for \u2581a \u2581 set \u2581of \u2581 certs \u2581// \u2581to \u2581use \u2581for \u2581bootstrap \u2581 auth \u2581"], "references": ["\u2581// \u2581 Peer URLs Map And Token \u2581sets \u2581up \u2581an \u2581initial \u2581peer \u2581URLs Map \u2581and \u2581cluster \u2581 token \u2581for \u2581bootstrap \u2581or \u2581discovery ."], "bleu": 0.24315949752483765, "rouge_l": 0.3865652724968314}
{"id": 275, "predictions": ["\u2581// \u2581 Run \u2581the \u2581revision ."], "references": ["\u2581// \u2581 Run \u2581runs \u2581revision - based \u2581compact or ."], "bleu": 0.233601780743345, "rouge_l": 0.5980392156862745}
{"id": 1524, "predictions": ["\u2581// \u2581 select Context \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 Kubernetes \u2581 config \u2581from \u2581the \u2581 config \u2581// \u2581if \u2581it \u2581is \u2581not \u2581found ."], "references": ["\u2581// \u2581 select Context \u2581allows \u2581the \u2581user \u2581to \u2581choose \u2581a \u2581context \u2581// \u2581This \u2581may \u2581in volve \u2581creating \u2581a \u2581cluster"], "bleu": 0.14710052131359536, "rouge_l": 0.2796027501909855}
{"id": 1458, "predictions": ["\u2581// \u2581 Put \u2581 - \u2581 Put s \u2581a \u2581file \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581 Put \u2581copies \u2581the \u2581 content \u2581reader \u2581until \u2581the \u2581end \u2581into \u2581the \u2581cache \u2581at \u2581 key \u2581// \u2581if \u2581 content SHA 256 \u2581is \u2581not \u2581\"\" \u2581then \u2581the \u2581 contents"], "bleu": 0.06704593774764558, "rouge_l": 0.2559440559440559}
{"id": 52, "predictions": ["\u2581// \u2581send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 raft ."], "references": ["\u2581// \u2581send \u2581 persist s \u2581state \u2581to \u2581 s table \u2581storage \u2581and \u2581then \u2581sends \u2581to \u2581its \u2581 mailbox ."], "bleu": 0.0833653695721539, "rouge_l": 0.3918629550321199}
{"id": 477, "predictions": ["\u2581// \u2581 New Config \u2581creates \u2581a \u2581new \u2581 config ."], "references": ["\u2581// \u2581 New Config \u2581creates \u2581a \u2581new \u2581 Config \u2581populated \u2581with \u2581default \u2581values ."], "bleu": 0.5409856324062988, "rouge_l": 0.7281167108753316}
{"id": 551, "predictions": ["\u2581// \u2581 Renew \u2581 renew s \u2581the \u2581 TTL \u2581of \u2581the \u2581lease ."], "references": ["\u2581// \u2581 Renew \u2581 renew s \u2581an \u2581existing \u2581lease . \u2581If \u2581the \u2581given \u2581lease \u2581does \u2581not \u2581exist \u2581or \u2581// \u2581has \u2581expired , \u2581an \u2581error \u2581will \u2581be \u2581returned ."], "bleu": 0.15497500589417146, "rouge_l": 0.41185296324081017}
{"id": 1699, "predictions": ["\u2581// \u2581 Terminate Older Pre submit Jobs \u2581 Terminate s \u2581the \u2581 pre submit s \u2581of \u2581the \u2581 pre submit s \u2581of \u2581the \u2581// \u2581 pre submit s \u2581of \u2581the"], "references": ["\u2581// \u2581 Terminate Older Pre submit Jobs \u2581abort s \u2581all \u2581 pre submit \u2581jobs \u2581from \u2581the \u2581given \u2581list \u2581that \u2581have \u2581a \u2581newer \u2581version . \u2581It \u2581calls \u2581// \u2581the \u2581cleanup \u2581callback"], "bleu": 0.2812488198404138, "rouge_l": 0.4666666666666668}
{"id": 59, "predictions": ["\u2581// \u2581restore \u2581is \u2581used \u2581to \u2581restore \u2581a \u2581 raft \u2581state ."], "references": ["\u2581// \u2581restore \u2581recover s \u2581the \u2581state \u2581machine \u2581from \u2581a \u2581snapshot . \u2581It \u2581restore s \u2581the \u2581log \u2581and \u2581the \u2581// \u2581configuration \u2581of \u2581state \u2581machine ."], "bleu": 0.05682910073087609, "rouge_l": 0.2677787532923617}
{"id": 1161, "predictions": ["\u2581// \u2581 Handle All \u2581is \u2581used \u2581to \u2581 get \u2581a \u2581 set \u2581of \u2581 login s \u2581for \u2581the \u2581given \u2581// \u2581 config ."], "references": ["\u2581// \u2581 Handle All \u2581checks \u2581all \u2581 orgs \u2581and \u2581 repos \u2581that \u2581enabled \u2581 this \u2581plugin \u2581for \u2581open \u2581 PR s \u2581to \u2581// \u2581determine \u2581if \u2581the \u2581\" needs - rebase"], "bleu": 0.14052803532474023, "rouge_l": 0.33172205438066465}
{"id": 1985, "predictions": ["\u2581// \u2581Get Container File \u2581returns \u2581a \u2581 container \u2581file \u2581for \u2581a \u2581given \u2581 path"], "references": ["\u2581// \u2581Get Container File \u2581retrieves \u2581the \u2581provided \u2581 path \u2581from \u2581the \u2581 container"], "bleu": 0.31535540524901323, "rouge_l": 0.4474327628361858}
{"id": 1087, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581agent \u2581and \u2581runs \u2581the \u2581 config ."], "references": ["\u2581// \u2581 Start \u2581will \u2581begin \u2581polling \u2581the \u2581 config \u2581file \u2581at \u2581the \u2581 path . \u2581If \u2581the \u2581first \u2581load \u2581// \u2581fails , \u2581 Start \u2581will \u2581return \u2581the \u2581error \u2581and \u2581abort"], "bleu": 0.06822629237462612, "rouge_l": 0.30942028985507253}
{"id": 738, "predictions": ["\u2581// \u2581 Orchestra t e \u2581is \u2581called \u2581when \u2581a \u2581 call \u2581to \u2581 call \u2581 this \u2581 call \u2581to \u2581 get \u2581the \u2581 key \u2581// \u2581and \u2581 1 \u2581 data"], "references": ["\u2581// \u2581 Orchestra t e \u2581runs \u2581 Stream . \u2581It \u2581pick s \u2581up \u2581ranges \u2581from \u2581the \u2581 SS Tables , \u2581then \u2581runs \u2581 Num Go \u2581number \u2581of \u2581// \u2581goroutines \u2581to"], "bleu": 0.18391565202644336, "rouge_l": 0.3}
{"id": 1084, "predictions": ["\u2581// \u2581 Filter Changes \u2581returns \u2581a \u2581 map \u2581of \u2581 ConfigMap \u2581updates \u2581to \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 Filter Changes \u2581determines \u2581which \u2581of \u2581the \u2581changes \u2581are \u2581relevant \u2581for \u2581 config \u2581updating , \u2581returning \u2581mapping \u2581of \u2581// \u2581 config \u2581 map \u2581to \u2581 key \u2581to \u2581 filename"], "bleu": 0.13673605824867563, "rouge_l": 0.3588235294117647}
{"id": 540, "predictions": ["\u2581// \u2581move Vi ct ims \u2581moves \u2581 this \u2581 watch \u2581to \u2581the \u2581 map \u2581of \u2581 watchers ."], "references": ["\u2581// \u2581move Vi ct ims \u2581tries \u2581to \u2581update \u2581 watches \u2581with \u2581already \u2581pending \u2581event \u2581 data"], "bleu": 0.27602580646531577, "rouge_l": 0.4756335282651072}
{"id": 1873, "predictions": ["\u2581// \u2581 add SSHKey s \u2581adds \u2581SSH \u2581agent \u2581to \u2581SSH \u2581agent"], "references": ["\u2581// \u2581 add SSHKey s \u2581will \u2581start \u2581the \u2581 ssh - agent \u2581and \u2581 add \u2581all \u2581the \u2581specified \u2581// \u2581 keys , \u2581returning \u2581the \u2581 ssh - agent \u2581environment \u2581variables"], "bleu": 0.07416969631855261, "rouge_l": 0.22509225092250923}
{"id": 1554, "predictions": ["\u2581// \u2581commands For Base Ref \u2581implements \u2581the \u2581 git \u2581command . git - check \u2581command ."], "references": ["\u2581// \u2581commands For Base Ref \u2581returns \u2581the \u2581list \u2581of \u2581commands \u2581needed \u2581to \u2581initialize \u2581and \u2581// \u2581configure \u2581a \u2581local \u2581 git \u2581directory , \u2581as \u2581well \u2581as \u2581fetch \u2581and \u2581check \u2581out \u2581the"], "bleu": 0.13604701898500005, "rouge_l": 0.32972972972972975}
{"id": 1356, "predictions": ["\u2581// \u2581configure Team Repos \u2581 - \u2581 enable \u2581 teams \u2581of \u2581a \u2581team ."], "references": ["\u2581// \u2581configure Team Repos \u2581updates \u2581the \u2581list \u2581of \u2581 repos \u2581that \u2581the \u2581team \u2581has \u2581permissions \u2581for \u2581when \u2581necessary"], "bleu": 0.20792427518059642, "rouge_l": 0.3667334669338677}
{"id": 1520, "predictions": ["\u2581// \u2581 select Project \u2581returns \u2581the \u2581 active \u2581 GCP \u2581 controller \u2581 name \u2581for \u2581a \u2581given \u2581 app ."], "references": ["\u2581// \u2581 select Project \u2581returns \u2581the \u2581user - selected \u2581project , \u2581defaulting \u2581to \u2581the \u2581current \u2581 g cloud \u2581one ."], "bleu": 0.294467310498826, "rouge_l": 0.4}
{"id": 700, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581item \u2581with \u2581the \u2581given \u2581 key . \u2581If \u2581the \u2581 key \u2581is \u2581not \u2581found , \u2581it \u2581// \u2581will \u2581return \u2581an \u2581error \u2581if \u2581the \u2581 key \u2581is"], "references": ["\u2581// \u2581Get \u2581looks \u2581for \u2581 key \u2581and \u2581returns \u2581corresponding \u2581 Item . \u2581// \u2581If \u2581 key \u2581is \u2581not \u2581found , \u2581 Err Key NotFound \u2581is \u2581returned ."], "bleu": 0.24498104427059889, "rouge_l": 0.49593495934959353}
{"id": 830, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 contents \u2581of \u2581the \u2581snapshot \u2581and \u2581 remove \u2581it ."], "references": ["\u2581// \u2581 Close \u2581is \u2581used \u2581to \u2581indicate \u2581a \u2581successful \u2581end ."], "bleu": 0.16188613565728213, "rouge_l": 0.3164721141374838}
{"id": 1207, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Run \u2581is \u2581the \u2581main \u2581 path \u2581of \u2581execution \u2581for \u2581the \u2581 controller \u2581loop ."], "bleu": 0.1641932816209669, "rouge_l": 0.5502577319587628}
{"id": 150, "predictions": ["\u2581// \u2581handle Backup \u2581handles \u2581a \u2581backup \u2581file ."], "references": ["\u2581// \u2581handle Backup \u2581handles \u2581a \u2581request \u2581that \u2581int ends \u2581to \u2581do \u2581a \u2581backup ."], "bleu": 0.31206086840746133, "rouge_l": 0.6065340909090908}
{"id": 218, "predictions": ["\u2581// \u2581 exec Watch Command Func \u2581handles \u2581all \u2581 exec \u2581command \u2581to \u2581 exit \u2581 config ."], "references": ["\u2581// \u2581 exec Watch Command Func \u2581executes \u2581the \u2581\" exec - watch \" \u2581command ."], "bleu": 0.3575297164449809, "rouge_l": 0.5689119170984456}
{"id": 879, "predictions": ["\u2581// \u2581 replicate s \u2581the \u2581 Raft \u2581 FSM \u2581for \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581 replicate \u2581is \u2581a \u2581long \u2581running \u2581routine \u2581that \u2581 replicate s \u2581log \u2581entries \u2581to \u2581a \u2581single \u2581// \u2581 follower ."], "bleu": 0.14111870877185895, "rouge_l": 0.3309222423146474}
{"id": 611, "predictions": ["\u2581// \u2581 New Raw Node \u2581returns \u2581a \u2581new \u2581 Raw Node ."], "references": ["\u2581// \u2581 New Raw Node \u2581returns \u2581a \u2581new \u2581 Raw Node \u2581given \u2581configuration \u2581and \u2581a \u2581list \u2581of \u2581 raft \u2581peers ."], "bleu": 0.43958660925809645, "rouge_l": 0.693181818181818}
{"id": 154, "predictions": ["\u2581// \u2581Save \u2581saves \u2581the \u2581 v 3 \u2581 config \u2581to \u2581the \u2581database ."], "references": ["\u2581// \u2581Save \u2581fetches \u2581snapshot \u2581from \u2581remote \u2581etcd \u2581server \u2581and \u2581saves \u2581 data \u2581to \u2581target \u2581 path ."], "bleu": 0.1180971982560758, "rouge_l": 0.3906083244397012}
{"id": 1979, "predictions": ["\u2581// \u2581Create Container From Backup \u2581creates \u2581a \u2581new \u2581 container \u2581with \u2581the \u2581given \u2581 container"], "references": ["\u2581// \u2581Create Container From Backup \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581make \u2581it \u2581easier \u2581to \u2581// \u2581create \u2581a \u2581 container \u2581from \u2581a \u2581backup"], "bleu": 0.21885291513685512, "rouge_l": 0.41816623821765214}
{"id": 902, "predictions": ["\u2581// \u2581restore Snapshot \u2581restore s \u2581a \u2581snapshot \u2581of \u2581the \u2581snapshot \u2581from \u2581the \u2581snapshot"], "references": ["\u2581// \u2581restore Snapshot \u2581attempts \u2581to \u2581restore \u2581the \u2581latest \u2581snapshots , \u2581and \u2581fails \u2581if \u2581 none \u2581// \u2581of \u2581them \u2581can \u2581be \u2581restore d . \u2581This \u2581is \u2581called \u2581at \u2581initialization \u2581time ,"], "bleu": 0.055300293915668555, "rouge_l": 0.21708185053380782}
{"id": 1059, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 gen \u2581instance ."], "references": ["\u2581// \u2581 New \u2581generator \u2581for \u2581adding \u2581 travis \u2581or \u2581 gitlab"], "bleu": 0.22447582175704436, "rouge_l": 0.37770897832817335}
{"id": 624, "predictions": ["\u2581// \u2581 Start Node \u2581starts \u2581a \u2581new \u2581node \u2581from \u2581the \u2581 raft ."], "references": ["\u2581// \u2581 Start Node \u2581returns \u2581a \u2581new \u2581 Node \u2581given \u2581configuration \u2581and \u2581a \u2581list \u2581of \u2581 raft \u2581peers . \u2581// \u2581It \u2581appends \u2581a \u2581 Conf Change Add Node \u2581entry \u2581for"], "bleu": 0.09462169906246147, "rouge_l": 0.3907473309608541}
{"id": 1661, "predictions": ["\u2581// \u2581 Search s \u2581the \u2581 owner \u2581of \u2581the \u2581given \u2581pool \u2581and \u2581returns \u2581the \u2581 ID \u2581of \u2581the \u2581// \u2581 controller \u2581 ID ."], "references": ["\u2581// \u2581divide Pool \u2581splits \u2581up \u2581the \u2581list \u2581of \u2581pull \u2581requests \u2581and \u2581 p row \u2581jobs \u2581into \u2581a \u2581 group \u2581// \u2581per \u2581repo \u2581and \u2581branch . \u2581It \u2581only \u2581keeps \u2581 ProwJob"], "bleu": 0.05899985410492294, "rouge_l": 0.2541666666666667}
{"id": 155, "predictions": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581snapshot \u2581file \u2581information ."], "bleu": 0.39553325358771796, "rouge_l": 0.5865384615384615}
{"id": 1917, "predictions": ["\u2581// \u2581Get Image Server \u2581returns \u2581the \u2581 Image Server \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Image Server \u2581returns \u2581a \u2581 Image Server \u2581struct \u2581for \u2581the \u2581remote"], "bleu": 0.4169392927528885, "rouge_l": 0.7236061684460261}
{"id": 253, "predictions": ["\u2581// \u2581 Move Leader \u2581is \u2581used \u2581to \u2581check \u2581the \u2581leader \u2581for \u2581a \u2581given \u2581 status"], "references": ["\u2581// \u2581 Move Leader \u2581 transfers \u2581the \u2581leader \u2581to \u2581the \u2581given \u2581transfer e e ."], "bleu": 0.28787878181011267, "rouge_l": 0.4666666666666668}
{"id": 1265, "predictions": ["\u2581// \u2581 GetJob Log \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581job ."], "references": ["\u2581// \u2581 GetJob Log \u2581returns \u2581the \u2581job \u2581logs , \u2581works \u2581for \u2581both \u2581 kubernetes \u2581and \u2581 jenkins \u2581agent \u2581types ."], "bleu": 0.274393003466561, "rouge_l": 0.47843137254901963}
{"id": 346, "predictions": ["\u2581// \u2581send \u2581sends \u2581a \u2581 watch - formatted \u2581response \u2581to \u2581the \u2581 watch ."], "references": ["\u2581// \u2581send \u2581filters \u2581out \u2581repeated \u2581events \u2581by \u2581discard ing \u2581 revisions \u2581older \u2581// \u2581than \u2581the \u2581last \u2581one \u2581sent \u2581over \u2581the \u2581 watch \u2581channel ."], "bleu": 0.1029197389572383, "rouge_l": 0.3517298187808896}
{"id": 1876, "predictions": ["\u2581// \u2581parse Tri age Data \u2581parses \u2581a \u2581 tri age \u2581 data \u2581from \u2581a \u2581 slice \u2581of \u2581 tri age \u2581 data ."], "references": ["\u2581// \u2581parse Tri age Data \u2581unmarshal s \u2581raw \u2581 json \u2581 data \u2581into \u2581a \u2581 tri age Data \u2581struct \u2581and \u2581creates \u2581a \u2581Build Indexer \u2581for \u2581// \u2581every \u2581job ."], "bleu": 0.25864064613640686, "rouge_l": 0.48980852378011125}
{"id": 123, "predictions": ["\u2581// \u2581purge File \u2581reads \u2581a \u2581file \u2581from \u2581the \u2581file \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581file ."], "references": ["\u2581// \u2581purge File \u2581is \u2581the \u2581internal \u2581implementation \u2581for \u2581 Purge File \u2581which \u2581can \u2581 post \u2581purge d \u2581files \u2581to \u2581purge c \u2581if \u2581non - nil ."], "bleu": 0.09537462352210097, "rouge_l": 0.25939050318922746}
{"id": 827, "predictions": ["\u2581// \u2581 Open \u2581returns \u2581a \u2581new \u2581 Snapshot \u2581object ."], "references": ["\u2581// \u2581 Open \u2581takes \u2581a \u2581snapshot \u2581 ID \u2581and \u2581returns \u2581a \u2581 ReadCloser \u2581for \u2581that \u2581snapshot ."], "bleu": 0.14888726794604665, "rouge_l": 0.4953596287703016}
{"id": 380, "predictions": ["\u2581// \u2581 Leave \u2581is \u2581used \u2581to \u2581 remove \u2581a \u2581 renewal \u2581of \u2581the \u2581 barrier \u2581and \u2581returns \u2581the \u2581// \u2581 active \u2581 data ."], "references": ["\u2581// \u2581 Leave \u2581waits \u2581for \u2581\" count \" \u2581processes \u2581to \u2581leave \u2581the \u2581 barrier \u2581then \u2581returns"], "bleu": 0.14521383677815447, "rouge_l": 0.4149659863945578}
{"id": 1670, "predictions": ["\u2581// \u2581 Sync Resources \u2581is \u2581used \u2581to \u2581 sync \u2581resources \u2581from \u2581the \u2581 Storage \u2581// \u2581 All \u2581resources \u2581in \u2581the \u2581 Storage \u2581interface ."], "references": ["\u2581// \u2581 Sync Resources \u2581will \u2581update \u2581resources \u2581every \u2581 10 \u2581 min s . \u2581// \u2581It \u2581will \u2581 append \u2581newly \u2581added \u2581resources \u2581to \u2581 ran ch . Resources , \u2581//"], "bleu": 0.15019769239682873, "rouge_l": 0.3994047619047618}
{"id": 186, "predictions": ["\u2581// \u2581 TimeToLive HTTP \u2581returns \u2581the \u2581 Lease Internal Response \u2581for \u2581the \u2581given \u2581lease ID ."], "references": ["\u2581// \u2581 TimeToLive HTTP \u2581retrieves \u2581lease \u2581information \u2581of \u2581the \u2581given \u2581lease \u2581 ID ."], "bleu": 0.3222538601891173, "rouge_l": 0.6073008849557523}
{"id": 67, "predictions": ["\u2581// \u2581 Lock \u2581 unlock s \u2581the \u2581 mutex"], "references": ["\u2581// \u2581 Lock \u2581locks \u2581the \u2581 mutex \u2581with \u2581a \u2581 cancelable \u2581context . \u2581If \u2581the \u2581context \u2581is \u2581 canceled \u2581// \u2581while \u2581trying \u2581to \u2581acquire \u2581the \u2581lock , \u2581the \u2581 mutex"], "bleu": 0.038092009703792035, "rouge_l": 0.32720306513409964}
{"id": 2025, "predictions": ["\u2581// \u2581 Profile Config \u2581returns \u2581the \u2581 config \u2581for \u2581the \u2581given \u2581project ."], "references": ["\u2581// \u2581 Profile Config \u2581gets \u2581the \u2581profile \u2581configuration \u2581 map \u2581from \u2581the \u2581 DB ."], "bleu": 0.279167640244994, "rouge_l": 0.5641618497109826}
{"id": 1681, "predictions": ["\u2581// \u2581 undo Preset \u2581 loads \u2581the \u2581 Pod \u2581 vars \u2581from \u2581the \u2581 Pod \u2581 map \u2581to \u2581the \u2581 Kubernetes \u2581 VM ."], "references": ["\u2581// \u2581 remove \u2581merged \u2581 presets \u2581from \u2581a \u2581pod spec"], "bleu": 0.07575731225158963, "rouge_l": 0.25416666666666665}
{"id": 810, "predictions": ["\u2581// \u2581drop Prefix \u2581removes \u2581the \u2581prefix \u2581of \u2581the \u2581 set \u2581of \u2581 data \u2581in \u2581the \u2581 set \u2581of \u2581// \u2581 data ."], "references": ["\u2581// \u2581drop Prefix \u2581runs \u2581a \u2581 L 0 -> L 1 \u2581 compaction , \u2581and \u2581then \u2581runs \u2581same \u2581level \u2581 compaction \u2581on \u2581the \u2581rest \u2581of \u2581the \u2581// \u2581levels . \u2581"], "bleu": 0.10339109070731912, "rouge_l": 0.3368098159509202}
{"id": 1530, "predictions": ["\u2581// \u2581 ForEach \u2581the \u2581specified \u2581list \u2581of \u2581 repositories \u2581to \u2581the \u2581specified \u2581repository ."], "references": ["\u2581// \u2581 ForEach PR \u2581iterates \u2581over \u2581all \u2581 PR s \u2581that \u2581fit \u2581the \u2581specified \u2581 criteria , \u2581calling \u2581the \u2581 munge \u2581function \u2581on \u2581every \u2581 PR . \u2581// \u2581If \u2581the"], "bleu": 0.06904950985252116, "rouge_l": 0.3412587412587413}
{"id": 880, "predictions": ["\u2581// \u2581 Actual \u2581 helper \u2581function \u2581to \u2581 add \u2581a \u2581new \u2581 set \u2581of \u2581 shards \u2581to \u2581the \u2581 Raft \u2581// \u2581 set ."], "references": ["\u2581// \u2581pipeline Replicate \u2581is \u2581used \u2581when \u2581we \u2581have \u2581synchronized \u2581our \u2581state \u2581with \u2581the \u2581 follower , \u2581// \u2581and \u2581want \u2581to \u2581switch \u2581to \u2581a \u2581higher \u2581performance \u2581pipeline \u2581mode \u2581of \u2581replication ."], "bleu": 0.07016304628569683, "rouge_l": 0.21785714285714283}
{"id": 708, "predictions": ["\u2581// \u2581 seek From \u2581implements \u2581the \u2581 Iterator \u2581interface ."], "references": ["\u2581// \u2581 seek From \u2581bring s \u2581 us \u2581to \u2581a \u2581 key \u2581that \u2581is \u2581>= \u2581input \u2581 key ."], "bleu": 0.15516043600937746, "rouge_l": 0.3918629550321199}
{"id": 1586, "predictions": ["\u2581// \u2581 Extra Links \u2581returns \u2581the \u2581 Extra \u2581 data \u2581for \u2581a \u2581given \u2581 src ."], "references": ["\u2581// \u2581 Extra Links \u2581fetches \u2581started . json \u2581and \u2581extracts \u2581links \u2581from \u2581metadata . links ."], "bleu": 0.2240750868020436, "rouge_l": 0.3125}
{"id": 1686, "predictions": ["\u2581// \u2581union \u2581returns \u2581the \u2581 org \u2581repo \u2581 config \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581union \u2581returns \u2581a \u2581new \u2581 org Repo Config \u2581that \u2581represents \u2581the \u2581 set \u2581union \u2581of \u2581the \u2581// \u2581 repos \u2581specified \u2581by \u2581the \u2581receiver \u2581and \u2581the \u2581parameter \u2581 org Repo"], "bleu": 0.08625382105559652, "rouge_l": 0.37731958762886597}
{"id": 1819, "predictions": ["\u2581// used \u2581internally \u2581to \u2581 add \u2581a \u2581new \u2581 pre submit s \u2581 pre submit s \u2581to \u2581the \u2581 set \u2581of \u2581 pre - existing \u2581// \u2581 pre - existing"], "references": ["\u2581// \u2581added Blocking Pre submit s \u2581determines \u2581new \u2581blocking \u2581 pre submit s \u2581based \u2581on \u2581a \u2581// \u2581 config \u2581update . \u2581 New \u2581blocking \u2581 pre submit s \u2581are \u2581either"], "bleu": 0.22095731396358687, "rouge_l": 0.3666666666666667}
{"id": 1540, "predictions": ["\u2581// \u2581prepare Log files \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581adds \u2581the \u2581given \u2581// \u2581 config \u2581to \u2581the \u2581log \u2581file ."], "references": ["\u2581// \u2581 Copy \u2581log files \u2581specific \u2581to \u2581 this \u2581node \u2581based \u2581on \u2581the \u2581 cloud - provider , \u2581system \u2581services , \u2581etc \u2581// \u2581to \u2581a \u2581temporary \u2581directory . \u2581Also \u2581create"], "bleu": 0.06892441213359227, "rouge_l": 0.26604361370716506}
{"id": 1916, "predictions": ["\u2581// \u2581Get Container Server \u2581returns \u2581the \u2581 container ' s \u2581 container \u2581 name"], "references": ["\u2581// \u2581Get Container Server \u2581returns \u2581a \u2581 Container Server \u2581struct \u2581for \u2581the \u2581remote"], "bleu": 0.34791594751284466, "rouge_l": 0.4474327628361858}
{"id": 492, "predictions": ["\u2581// \u2581scan \u2581returns \u2581the \u2581next \u2581event \u2581from \u2581the \u2581 history ."], "references": ["\u2581// \u2581scan \u2581enumerate s \u2581events \u2581from \u2581the \u2581index \u2581 history \u2581and \u2581stops \u2581at \u2581the \u2581first \u2581point \u2581// \u2581where \u2581the \u2581 key \u2581matches ."], "bleu": 0.08333419026210014, "rouge_l": 0.3871260199456029}
{"id": 812, "predictions": ["\u2581// \u2581do Compact \u2581is \u2581called \u2581when \u2581 compaction \u2581is \u2581 compaction ."], "references": ["\u2581// \u2581do Compact \u2581pick s \u2581some \u2581 table \u2581on \u2581level \u2581 l \u2581and \u2581compact s \u2581it \u2581away \u2581to \u2581the \u2581next \u2581level ."], "bleu": 0.09666537353116829, "rouge_l": 0.33516483516483514}
{"id": 941, "predictions": ["\u2581// \u2581start Stop Replication \u2581starts \u2581a \u2581 syn chron isation \u2581node ."], "references": ["\u2581// \u2581start Stop Replication \u2581will \u2581 set \u2581up \u2581state \u2581and \u2581start \u2581asynchronous \u2581replication \u2581to \u2581// \u2581new \u2581peers , \u2581and \u2581stop \u2581replication \u2581to \u2581removed \u2581peers . \u2581 Before \u2581removing \u2581a \u2581peer"], "bleu": 0.07256952215994865, "rouge_l": 0.26521739130434785}
{"id": 637, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581 model \u2581with \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581node \u2581at \u2581the \u2581given \u2581 path . \u2581// \u2581If \u2581the \u2581node \u2581is \u2581a \u2581directory , \u2581recursive \u2581must \u2581be \u2581true \u2581to \u2581delete \u2581it ."], "bleu": 0.14422049352449248, "rouge_l": 0.41185296324081017}
{"id": 299, "predictions": ["\u2581// \u2581 dial \u2581returns \u2581a \u2581connection \u2581to \u2581the \u2581specified \u2581target ."], "references": ["\u2581// \u2581 dial \u2581configure s \u2581and \u2581 dial s \u2581any \u2581 grpc \u2581 balancer \u2581target ."], "bleu": 0.16002934088205126, "rouge_l": 0.3584018801410106}
{"id": 1835, "predictions": ["\u2581// \u2581 Update PullRequest \u2581updates \u2581the \u2581pull \u2581request \u2581with \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581 Update PullRequest \u2581 modifies \u2581the \u2581 title , \u2581 body , \u2581open \u2581state"], "bleu": 0.24915540491572113, "rouge_l": 0.41123595505617977}
{"id": 460, "predictions": ["\u2581// \u2581 notify \u2581is \u2581called \u2581when \u2581a \u2581 watch \u2581event \u2581is \u2581 watched ."], "references": ["\u2581// \u2581 notify \u2581function \u2581notifies \u2581the \u2581watcher . \u2581If \u2581the \u2581watcher \u2581 interest s \u2581in \u2581the \u2581given \u2581 path , \u2581// \u2581the \u2581function \u2581will \u2581return \u2581true ."], "bleu": 0.07476578574345658, "rouge_l": 0.27685325264750377}
{"id": 1065, "predictions": ["\u2581// \u2581 Package JSON Check \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 json \u2581package \u2581// \u2581for \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Package JSON Check \u2581will \u2581compare \u2581the \u2581current \u2581default \u2581 Buff a lo \u2581// \u2581package . json \u2581against \u2581the \u2581applications \u2581package . json . \u2581If \u2581they \u2581are \u2581// \u2581different"], "bleu": 0.17109937877592135, "rouge_l": 0.37423312883435583}
{"id": 1551, "predictions": ["\u2581// \u2581 Run \u2581the \u2581 git \u2581 git \u2581 git \u2581 git \u2581 git \u2581 git \u2581 git \u2581 git \u2581 git \u2581 git \u2581 git \u2581 path \u2581is \u2581//"], "references": ["\u2581// \u2581 Run \u2581clone s \u2581the \u2581 refs \u2581under \u2581the \u2581 pre scribe d \u2581directory \u2581and \u2581optionally \u2581// \u2581configure s \u2581the \u2581 git \u2581 username \u2581and \u2581 email \u2581in \u2581the"], "bleu": 0.16618655166630525, "rouge_l": 0.3333333333333333}
{"id": 966, "predictions": ["\u2581// \u2581Validate Config \u2581validates \u2581the \u2581 config \u2581configuration"], "references": ["\u2581// \u2581Validate Config \u2581is \u2581used \u2581to \u2581validate \u2581a \u2581 sane \u2581configuration"], "bleu": 0.2270229421855783, "rouge_l": 0.511744966442953}
{"id": 1944, "predictions": ["\u2581// \u2581 Image Update \u2581updates \u2581the \u2581 Image ' s \u2581 Image Update \u2581and \u2581returns \u2581the \u2581 ID \u2581of \u2581the \u2581image ."], "references": ["\u2581// \u2581 Image Update \u2581updates \u2581the \u2581image \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.3083012995502152, "rouge_l": 0.5992141453831041}
{"id": 1619, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581create \u2581a \u2581pod \u2581 container \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 ProwJob To Pod \u2581converts \u2581a \u2581 ProwJob \u2581to \u2581a \u2581 Pod \u2581that \u2581will \u2581run \u2581the \u2581tests ."], "bleu": 0.10401329400126784, "rouge_l": 0.35396518375241776}
{"id": 682, "predictions": ["\u2581// \u2581 write Requests \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581 db ."], "references": ["\u2581// \u2581 write Requests \u2581is \u2581called \u2581serial ly \u2581by \u2581only \u2581one \u2581goroutine ."], "bleu": 0.27824623288353134, "rouge_l": 0.38461538461538464}
{"id": 1981, "predictions": ["\u2581// \u2581Create Container From Image \u2581creates \u2581a \u2581 container ."], "references": ["\u2581// \u2581Create Container From Image \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581make \u2581it \u2581easier \u2581to \u2581create \u2581a \u2581 container \u2581from \u2581an \u2581existing \u2581image"], "bleu": 0.1770203839767508, "rouge_l": 0.4683301343570058}
{"id": 129, "predictions": ["\u2581// \u2581 watch \u2581is \u2581used \u2581to \u2581 watch \u2581a \u2581 watch \u2581event \u2581to \u2581a \u2581 key ."], "references": ["\u2581// \u2581 Watch \u2581function \u2581returns \u2581a \u2581 Watcher . \u2581// \u2581If \u2581recursive \u2581is \u2581true , \u2581the \u2581first \u2581change \u2581after \u2581index \u2581under \u2581 key \u2581will \u2581be \u2581sent \u2581to \u2581the \u2581event \u2581channel"], "bleu": 0.07282365245427402, "rouge_l": 0.24318936877076414}
{"id": 412, "predictions": ["\u2581// \u2581Remove \u2581removes \u2581a \u2581node \u2581from \u2581the \u2581node ."], "references": ["\u2581// \u2581Remove \u2581function \u2581 remove \u2581the \u2581node ."], "bleu": 0.31239399369202553, "rouge_l": 0.594541910331384}
{"id": 157, "predictions": ["\u2581// \u2581 New Auth Store \u2581creates \u2581a \u2581new \u2581 auth Store \u2581instance \u2581with \u2581the \u2581given \u2581// \u2581 token ."], "references": ["\u2581// \u2581 New Auth Store \u2581creates \u2581a \u2581new \u2581 Auth Store ."], "bleu": 0.4775586214302964, "rouge_l": 0.7398015435501654}
{"id": 1155, "predictions": ["\u2581// \u2581Get T id e Context Policy \u2581returns \u2581the \u2581 T id e Context Policy \u2581from \u2581the \u2581given \u2581// \u2581branch \u2581and \u2581returns \u2581the \u2581corresponding \u2581policy ."], "references": ["\u2581// \u2581Get T id e Context Policy \u2581parses \u2581the \u2581 p row \u2581 config \u2581to \u2581find \u2581context \u2581 merge \u2581options . \u2581// \u2581If \u2581 none \u2581are \u2581 set , \u2581it"], "bleu": 0.24655368371574757, "rouge_l": 0.35260115606936415}
{"id": 1215, "predictions": ["\u2581// \u2581 Clean All \u2581deletes \u2581all \u2581 items \u2581from \u2581the \u2581given \u2581session"], "references": ["\u2581// \u2581 Clean All \u2581clean s \u2581all \u2581of \u2581the \u2581resources \u2581for \u2581all \u2581of \u2581the \u2581regions \u2581 visible \u2581to \u2581// \u2581the \u2581provided \u2581AWS \u2581session ."], "bleu": 0.12322239197678952, "rouge_l": 0.41924398625429554}
{"id": 1757, "predictions": ["\u2581// \u2581 Env For Spec \u2581returns \u2581the \u2581 set \u2581of \u2581 env \u2581variables \u2581for \u2581the \u2581spec"], "references": ["\u2581// \u2581 Env For Spec \u2581returns \u2581a \u2581mapping \u2581of \u2581environment \u2581variables \u2581// \u2581to \u2581their \u2581values \u2581that \u2581should \u2581be \u2581available \u2581for \u2581a \u2581job \u2581spec"], "bleu": 0.25173441766710725, "rouge_l": 0.496742671009772}
{"id": 563, "predictions": ["\u2581// \u2581 New Put Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Put Command"], "references": ["\u2581// \u2581 New Put Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" put \" ."], "bleu": 0.41232116527739854, "rouge_l": 0.548314606741573}
{"id": 1271, "predictions": ["\u2581// \u2581Get Policy \u2581returns \u2581a \u2581policy \u2581for \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581Get Policy \u2581returns \u2581the \u2581 protection \u2581policy \u2581for \u2581the \u2581branch , \u2581after \u2581merging \u2581in \u2581 pre submit s ."], "bleu": 0.19267926355343126, "rouge_l": 0.49045226130653274}
{"id": 779, "predictions": ["\u2581// \u2581acquire Directory Lock \u2581returns \u2581a \u2581new \u2581 dir \u2581for \u2581the \u2581given \u2581 pid"], "references": ["\u2581// \u2581 Acquire Directory Lock \u2581acquire s \u2581exclusive \u2581access \u2581to \u2581a \u2581directory ."], "bleu": 0.1437791910008819, "rouge_l": 0.2982885085574572}
{"id": 1505, "predictions": ["\u2581// \u2581process Next Item \u2581processes \u2581the \u2581next \u2581item \u2581in \u2581the \u2581 controller ."], "references": ["\u2581// \u2581process Next Item \u2581attempts \u2581to \u2581upload \u2581 container \u2581logs \u2581to \u2581 GCS"], "bleu": 0.27824623288353134, "rouge_l": 0.38461538461538464}
{"id": 1149, "predictions": ["\u2581// \u2581 Query \u2581returns \u2581a \u2581 set \u2581of \u2581 organizations \u2581that \u2581are \u2581 set \u2581to \u2581 this \u2581query ."], "references": ["\u2581// \u2581 Query \u2581returns \u2581the \u2581corresponding \u2581 github \u2581 search \u2581string \u2581for \u2581the \u2581 t id e \u2581query ."], "bleu": 0.22537412722674852, "rouge_l": 0.47368421052631576}
{"id": 635, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 TTL \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581store ."], "references": ["\u2581// \u2581Set \u2581creates \u2581or \u2581 replace \u2581the \u2581node \u2581at \u2581 nodePath ."], "bleu": 0.1437791910008819, "rouge_l": 0.4680306905370844}
{"id": 1903, "predictions": ["\u2581// \u2581 get GCS Dir sFor Protocol \u2581returns \u2581a \u2581 map \u2581of \u2581 keys \u2581for \u2581a \u2581given \u2581 org ."], "references": ["\u2581// \u2581 get GCS Dir sFor PR \u2581returns \u2581a \u2581 map \u2581from \u2581bucket \u2581names \u2581 -> \u2581 set \u2581of \u2581\" directories \" \u2581containing \u2581 pre submit \u2581 data"], "bleu": 0.2805905274796126, "rouge_l": 0.5258620689655172}
{"id": 946, "predictions": ["\u2581// \u2581 append Configuration Entry \u2581adds \u2581a \u2581new \u2581 Raft \u2581entry \u2581to \u2581the \u2581 Raft \u2581state ."], "references": ["\u2581// \u2581 append Configuration Entry \u2581changes \u2581the \u2581configuration \u2581and \u2581adds \u2581a \u2581new \u2581// \u2581configuration \u2581entry \u2581to \u2581the \u2581log . \u2581This \u2581must \u2581only \u2581be \u2581called \u2581from \u2581the \u2581// \u2581main \u2581thread ."], "bleu": 0.19154634953856078, "rouge_l": 0.48637873754152827}
{"id": 1347, "predictions": ["\u2581// \u2581 insert Link \u2581adds \u2581a \u2581 link \u2581to \u2581the \u2581 view ' s \u2581 view ."], "references": ["\u2581// \u2581 insert Link \u2581attempts \u2581to \u2581 set \u2581metadata . links . result store . url \u2581to \u2581 view URL . \u2581// \u2581// \u2581returns \u2581true \u2581if \u2581started \u2581metadata \u2581was \u2581updated"], "bleu": 0.11767646173056052, "rouge_l": 0.36478405315614615}
{"id": 1450, "predictions": ["\u2581// \u2581load Labels \u2581 loads \u2581the \u2581labels \u2581from \u2581the \u2581repository \u2581 name \u2581and \u2581 loads \u2581them ."], "references": ["\u2581// \u2581load Labels \u2581returns \u2581what \u2581labels \u2581exist \u2581in \u2581 github"], "bleu": 0.1487964117124549, "rouge_l": 0.3885350318471337}
{"id": 786, "predictions": ["\u2581// \u2581 getTable ForKey \u2581returns \u2581the \u2581 table \u2581 table \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 getTable ForKey \u2581acquire s \u2581a \u2581read - lock \u2581to \u2581access \u2581 s . tables . \u2581It \u2581returns \u2581a \u2581list \u2581of \u2581 table Handlers ."], "bleu": 0.14409510001862777, "rouge_l": 0.3652694610778443}
{"id": 1316, "predictions": ["\u2581// \u2581 Prune Comments \u2581removes \u2581all \u2581comments \u2581from \u2581the \u2581 set \u2581of \u2581 relation \u2581and \u2581 remove \u2581// \u2581the \u2581 comment \u2581to \u2581the \u2581 model ."], "references": ["\u2581// \u2581 Prune Comments \u2581fetches \u2581issue \u2581comments \u2581if \u2581they \u2581have \u2581not \u2581yet \u2581been \u2581fetched \u2581for \u2581 this \u2581webhook \u2581event \u2581// \u2581and \u2581then \u2581deletes \u2581any \u2581bot \u2581comments \u2581indicated \u2581by \u2581the \u2581func"], "bleu": 0.13246958755063698, "rouge_l": 0.2820809248554913}
{"id": 1890, "predictions": ["\u2581// \u2581 Traverse \u2581the \u2581 GCS \u2581 Artifact \u2581from \u2581the \u2581 GCS Artifact \u2581and \u2581returns \u2581a \u2581list \u2581of \u2581// \u2581 GCS \u2581 IDs"], "references": ["\u2581// \u2581 Artifacts \u2581lists \u2581all \u2581artifacts \u2581available \u2581for \u2581the \u2581given \u2581job \u2581source"], "bleu": 0.07483887206915212, "rouge_l": 0.18172790466732872}
{"id": 240, "predictions": ["\u2581// \u2581 slice \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 raft \u2581log \u2581entries ."], "references": ["\u2581// \u2581 slice \u2581returns \u2581a \u2581 slice \u2581of \u2581log \u2581entries \u2581from \u2581 lo \u2581through \u2581 hi -1, \u2581inclusive ."], "bleu": 0.18759202316167214, "rouge_l": 0.47368421052631576}
{"id": 825, "predictions": ["\u2581// \u2581 getSnapshot s \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581 active \u2581 data \u2581 data \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 getSnapshot s \u2581returns \u2581all \u2581the \u2581known \u2581snapshots ."], "bleu": 0.2245166162074563, "rouge_l": 0.5219251336898396}
{"id": 1785, "predictions": ["\u2581// \u2581describe Cluster \u2581returns \u2581the \u2581 OpenShift \u2581 Cluster \u2581 Cluster \u2581 type \u2581of \u2581the \u2581// \u2581given \u2581options ."], "references": ["\u2581// \u2581describe Cluster \u2581returns \u2581details \u2581from \u2581 g cloud \u2581 container \u2581clusters \u2581describe ."], "bleu": 0.20158074753947833, "rouge_l": 0.4361593462717058}
{"id": 2014, "predictions": ["\u2581// \u2581patch Rename Custom Volume \u2581rename s \u2581 patches \u2581the \u2581 name \u2581of \u2581the \u2581volume \u2581with \u2581the \u2581specified \u2581 name ."], "references": ["\u2581// \u2581 Patches \u2581begin \u2581here"], "bleu": 0.06429451441231726, "rouge_l": 0.17304964539007092}
{"id": 1019, "predictions": ["\u2581// \u2581 Load Plugins \u2581 loads \u2581all \u2581 plugins \u2581from \u2581the \u2581 plugins ."], "references": ["\u2581// \u2581 Load Plugins \u2581will \u2581 add \u2581listeners \u2581for \u2581any \u2581 plugins \u2581that \u2581support \u2581\" events \""], "bleu": 0.23613139558382978, "rouge_l": 0.4438669438669438}
{"id": 1186, "predictions": ["\u2581// \u2581 Serve External Plugin Help \u2581serves \u2581the \u2581given \u2581 ServeMux \u2581and \u2581returns \u2581the \u2581// \u2581 handlers \u2581for \u2581the \u2581 handlers \u2581that \u2581is \u2581 exposed \u2581to \u2581the \u2581 handlers"], "references": ["\u2581// \u2581 Serve External Plugin Help \u2581returns \u2581a \u2581 HandlerFunc \u2581that \u2581serves \u2581plugin \u2581help \u2581information \u2581that \u2581is \u2581// \u2581provided \u2581by \u2581the \u2581specified \u2581 External Plugin Help Provider ."], "bleu": 0.23770841795864292, "rouge_l": 0.4223889209463358}
{"id": 1501, "predictions": ["\u2581// \u2581 compile s Block a des \u2581 compile s \u2581the \u2581given \u2581 Block , \u2581and \u2581returns \u2581a \u2581 slice \u2581of \u2581// \u2581 refs \u2581that \u2581are \u2581not \u2581in \u2581the \u2581"], "references": ["\u2581// \u2581 compile Applicable Block a des \u2581filters \u2581the \u2581specified \u2581block a des \u2581and \u2581 compile s \u2581those \u2581that \u2581 apply \u2581to \u2581the \u2581repo ."], "bleu": 0.1535686541317235, "rouge_l": 0.4066666666666666}
{"id": 110, "predictions": ["\u2581// \u2581 Restart \u2581restart s \u2581a \u2581new \u2581member ."], "references": ["\u2581// \u2581 Restart \u2581starts \u2581the \u2581member \u2581using \u2581the \u2581preserved \u2581 data \u2581 dir ."], "bleu": 0.1667989371287012, "rouge_l": 0.41838134430727025}
{"id": 255, "predictions": ["\u2581// \u2581configure \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sets \u2581the \u2581 raft \u2581 config \u2581change \u2581for \u2581the \u2581// \u2581 raft \u2581server ."], "references": ["\u2581// \u2581configure \u2581sends \u2581a \u2581configuration \u2581change \u2581through \u2581 consensus \u2581and \u2581// \u2581then \u2581waits \u2581for \u2581it \u2581to \u2581be \u2581applied \u2581to \u2581the \u2581server . \u2581It \u2581// \u2581will \u2581block \u2581until \u2581the \u2581change \u2581is"], "bleu": 0.08090790089149184, "rouge_l": 0.2993865030674847}
{"id": 323, "predictions": ["\u2581// \u2581 publish Entries \u2581 publishes \u2581all \u2581the \u2581entries \u2581in \u2581the \u2581 raft \u2581state ."], "references": ["\u2581// \u2581 publish Entries \u2581writes \u2581committed \u2581log \u2581entries \u2581to \u2581commit \u2581channel \u2581and \u2581returns \u2581// \u2581whether \u2581all \u2581entries \u2581could \u2581be \u2581published ."], "bleu": 0.17259843637795366, "rouge_l": 0.37754199823165346}
{"id": 525, "predictions": ["\u2581// \u2581 Function \u2581to \u2581 test \u2581if \u2581the \u2581version \u2581is \u2581valid ."], "references": ["\u2581// \u2581decide Cluster Version \u2581decide s \u2581the \u2581cluster \u2581version \u2581based \u2581on \u2581the \u2581versions \u2581 map . \u2581// \u2581The \u2581returned \u2581version \u2581is \u2581the \u2581 min \u2581server \u2581version \u2581in \u2581the \u2581 map"], "bleu": 0.038990513239941516, "rouge_l": 0.17681159420289855}
{"id": 1930, "predictions": ["\u2581// \u2581 Image Get From Any Project \u2581returns \u2581the \u2581 Image \u2581 Image \u2581 data \u2581from \u2581the \u2581// \u2581given \u2581 Image ."], "references": ["\u2581// \u2581 Image Get From Any Project \u2581returns \u2581an \u2581image \u2581matching \u2581the \u2581given \u2581fingerprint , \u2581if \u2581// \u2581it \u2581 exists \u2581in \u2581any \u2581project ."], "bleu": 0.3521969250483225, "rouge_l": 0.5176803394625177}
{"id": 263, "predictions": ["\u2581// \u2581 Pick \u2581implements \u2581the \u2581 Balance \u2581interface ."], "references": ["\u2581// \u2581 Pick \u2581is \u2581called \u2581for \u2581every \u2581client \u2581request ."], "bleu": 0.24855227187657006, "rouge_l": 0.41709401709401706}
{"id": 683, "predictions": ["\u2581// \u2581ensure Room ForWrite \u2581ensures \u2581that \u2581the \u2581 data \u2581is \u2581 empty ."], "references": ["\u2581// \u2581ensure Room ForWrite \u2581is \u2581always \u2581called \u2581serial ly ."], "bleu": 0.2891784933232572, "rouge_l": 0.5343065693430658}
{"id": 90, "predictions": ["\u2581// \u2581 ClientConfig \u2581returns \u2581the \u2581 TLS \u2581configuration \u2581for \u2581the \u2581 TLS \u2581 info"], "references": ["\u2581// \u2581 ClientConfig \u2581generates \u2581a \u2581 tls . Config \u2581object \u2581for \u2581use \u2581by \u2581an \u2581HTTP \u2581client ."], "bleu": 0.14695235444496824, "rouge_l": 0.3170478170478171}
{"id": 2028, "predictions": ["\u2581// \u2581 Profile Containers Get \u2581returns \u2581a \u2581list \u2581of \u2581 active \u2581 active \u2581 active \u2581 active \u2581// \u2581 active \u2581 organizations ."], "references": ["\u2581// \u2581 Profile Containers Get \u2581gets \u2581the \u2581names \u2581of \u2581the \u2581containers \u2581associated \u2581with \u2581the \u2581// \u2581profile \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.22023814946586626, "rouge_l": 0.40160936356986104}
{"id": 1235, "predictions": ["\u2581// \u2581 New Count Plugin \u2581returns \u2581a \u2581new \u2581 cobra . Command \u2581for \u2581 validating \u2581the \u2581 type \u2581of \u2581// \u2581 type ."], "references": ["\u2581// \u2581 New Count Plugin \u2581counts \u2581events \u2581and \u2581number \u2581of \u2581issues \u2581in \u2581given \u2581state , \u2581and \u2581for \u2581how \u2581long ."], "bleu": 0.21451278268552823, "rouge_l": 0.3297297297297297}
{"id": 815, "predictions": ["\u2581// \u2581 findFirst Invalid Txn \u2581is \u2581used \u2581to \u2581 remove \u2581the \u2581 data \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581 Range \u2581is \u2581 [ low T s , \u2581high T s ) ."], "bleu": 0.11306082351602978, "rouge_l": 0.3160621761658031}
{"id": 1936, "predictions": ["\u2581// \u2581 Image Alias Get \u2581returns \u2581the \u2581 alias \u2581for \u2581the \u2581given \u2581project ."], "references": ["\u2581// \u2581 Image Alias Get \u2581returns \u2581the \u2581 alias \u2581with \u2581the \u2581given \u2581 name \u2581in \u2581the \u2581given \u2581project ."], "bleu": 0.5599621492763002, "rouge_l": 0.7669245647969052}
{"id": 687, "predictions": ["\u2581// \u2581calculate Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 DB ."], "references": ["\u2581// \u2581This \u2581function \u2581does \u2581a \u2581file walk , \u2581calculates \u2581the \u2581 size \u2581of \u2581 v log \u2581and \u2581 s st \u2581files \u2581and \u2581stores \u2581it \u2581in \u2581// \u2581 y . L"], "bleu": 0.10613242539437312, "rouge_l": 0.370945945945946}
{"id": 1189, "predictions": ["\u2581// \u2581 Update Repo \u2581updates \u2581the \u2581repository \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581 Update Repo \u2581updates \u2581all \u2581branches \u2581in \u2581the \u2581repo \u2581with \u2581the \u2581specified \u2581defaults"], "bleu": 0.3481302097077456, "rouge_l": 0.5150784077201447}
{"id": 947, "predictions": ["\u2581// \u2581 dispatch Logs \u2581returns \u2581the \u2581logs \u2581for \u2581a \u2581given \u2581log \u2581 call ."], "references": ["\u2581// \u2581 dispatch Log \u2581is \u2581called \u2581on \u2581the \u2581leader \u2581to \u2581 push \u2581a \u2581log \u2581to \u2581disk , \u2581 mark \u2581it \u2581// \u2581as \u2581 inflight \u2581and \u2581begin \u2581replication \u2581of \u2581it ."], "bleu": 0.0642578093873745, "rouge_l": 0.3412587412587413}
{"id": 1312, "predictions": ["\u2581// \u2581Find Base Profile \u2581returns \u2581a \u2581 slice \u2581of \u2581 repositories \u2581that \u2581are \u2581in \u2581the \u2581given \u2581bucket ."], "references": ["\u2581// \u2581Find Base Profile \u2581finds \u2581the \u2581 coverage \u2581profile \u2581file \u2581from \u2581the \u2581latest \u2581 healthy \u2581build \u2581// \u2581stored \u2581in \u2581given \u2581 gcs \u2581directory"], "bleu": 0.17071304221716335, "rouge_l": 0.3818466353677621}
{"id": 1659, "predictions": ["\u2581// \u2581process Changes \u2581returns \u2581the \u2581changes \u2581to \u2581the \u2581current \u2581commit"], "references": ["\u2581// \u2581pr Changes \u2581gets \u2581the \u2581files \u2581changed \u2581by \u2581the \u2581 PR , \u2581either \u2581from \u2581the \u2581cache \u2581or \u2581by \u2581// \u2581querying \u2581GitHub ."], "bleu": 0.047742793586775585, "rouge_l": 0.2341650671785029}
{"id": 984, "predictions": ["\u2581// \u2581 Redirect \u2581 redirects \u2581the \u2581 status \u2581to \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Redirect \u2581a \u2581request \u2581with \u2581the \u2581given \u2581 status \u2581to \u2581the \u2581given \u2581 URL ."], "bleu": 0.30568585798080344, "rouge_l": 0.6770255271920089}
{"id": 1635, "predictions": ["\u2581// \u2581 Update Issues \u2581updates \u2581issue \u2581 items \u2581from \u2581issue ."], "references": ["\u2581// \u2581 Update Issues \u2581 downloads \u2581new \u2581issues \u2581and \u2581saves \u2581in \u2581database"], "bleu": 0.30297388532167924, "rouge_l": 0.4314002828854314}
{"id": 778, "predictions": ["\u2581// \u2581validate \u2581checks \u2581if \u2581the \u2581level \u2581is \u2581a \u2581valid \u2581 table ."], "references": ["\u2581// \u2581Check \u2581does \u2581some \u2581 s anity \u2581check \u2581on \u2581one \u2581level \u2581of \u2581 data \u2581or \u2581in - memory \u2581index ."], "bleu": 0.06707852829493063, "rouge_l": 0.23921568627450981}
{"id": 442, "predictions": ["\u2581// \u2581identify DataDir OrDie \u2581returns \u2581the \u2581 dir \u2581of \u2581the \u2581given \u2581 dir , \u2581if \u2581any ."], "references": ["\u2581// \u2581identify DataDir OrDie \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581 data \u2581 dir . \u2581// \u2581 Die s \u2581if \u2581the \u2581 data dir \u2581is \u2581invalid ."], "bleu": 0.2690997203603549, "rouge_l": 0.5676449534717252}
{"id": 29, "predictions": ["\u2581// \u2581Save DB From \u2581saves \u2581a \u2581 DB \u2581from \u2581the \u2581 r ."], "references": ["\u2581// \u2581Save DB From \u2581saves \u2581snapshot \u2581of \u2581the \u2581database \u2581from \u2581the \u2581given \u2581reader . \u2581It \u2581// \u2581guarantees \u2581the \u2581save \u2581operation \u2581is \u2581atomic ."], "bleu": 0.18778450050080986, "rouge_l": 0.42324371205550737}
{"id": 427, "predictions": ["\u2581// \u2581 New Get Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 get \u2581command"], "references": ["\u2581// \u2581 New Get Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" get \" ."], "bleu": 0.40533998401867943, "rouge_l": 0.5641618497109826}
{"id": 1826, "predictions": ["\u2581// \u2581 Throttle \u2581 increments \u2581the \u2581 rate \u2581of \u2581the \u2581 rate \u2581of \u2581the \u2581given \u2581 rate ."], "references": ["\u2581// \u2581 Throttle \u2581client \u2581to \u2581a \u2581 rate \u2581of \u2581at \u2581most \u2581 hourly Tokens \u2581requests \u2581per \u2581hour , \u2581// \u2581allowing \u2581 burst \u2581tokens ."], "bleu": 0.14358505370074257, "rouge_l": 0.4178082191780822}
{"id": 1968, "predictions": ["\u2581// \u2581 Network Get Interface \u2581returns \u2581a \u2581 Network \u2581interface \u2581for \u2581the \u2581 Cluster \u2581object ."], "references": ["\u2581// \u2581 Network Get Interface \u2581returns \u2581the \u2581network \u2581associated \u2581with \u2581the \u2581interface \u2581with \u2581// \u2581the \u2581given \u2581 name ."], "bleu": 0.32323339053965333, "rouge_l": 0.5627306273062731}
{"id": 476, "predictions": ["\u2581// \u2581Add OutputPath s \u2581adds \u2581 config \u2581to \u2581 stdout \u2581and \u2581 map \u2581of \u2581 config ."], "references": ["\u2581// \u2581Add OutputPath s \u2581adds \u2581output \u2581paths \u2581to \u2581the \u2581existing \u2581output \u2581paths , \u2581 resolving \u2581conflicts ."], "bleu": 0.2928298013714697, "rouge_l": 0.4705882352941176}
{"id": 573, "predictions": ["\u2581// \u2581 Receive s \u2581the \u2581 leadership \u2581function \u2581for \u2581the \u2581given \u2581command \u2581and \u2581returns \u2581the \u2581// \u2581current \u2581leader ."], "references": ["\u2581// \u2581transfer Leadership Command Func \u2581executes \u2581the \u2581\" compaction \" \u2581command ."], "bleu": 0.08097785064266201, "rouge_l": 0.269018743109151}
{"id": 180, "predictions": ["\u2581// \u2581 Flags \u2581returns \u2581the \u2581flags \u2581for \u2581the \u2581etcd ."], "references": ["\u2581// \u2581 Flags \u2581returns \u2581etcd \u2581flags \u2581in \u2581string \u2581 slice ."], "bleu": 0.3570381007186144, "rouge_l": 0.56656346749226}
{"id": 254, "predictions": ["\u2581// \u2581 Transfer Leadership \u2581 roll s \u2581back \u2581the \u2581 leadership \u2581for \u2581the \u2581given \u2581 leadership ."], "references": ["\u2581// \u2581 Transfer Leadership \u2581 transfers \u2581the \u2581leader \u2581to \u2581the \u2581chosen \u2581transfer e e ."], "bleu": 0.2928298013714697, "rouge_l": 0.505699481865285}
{"id": 390, "predictions": ["\u2581// \u2581 close Require Leader \u2581is \u2581used \u2581to \u2581 close \u2581the \u2581 Consul \u2581 leadership \u2581for \u2581the \u2581// \u2581 active \u2581 HA \u2581 manager ."], "references": ["\u2581// \u2581 close Require Leader \u2581scan s \u2581 keepAlive s \u2581for \u2581 ctx s \u2581that \u2581have \u2581require \u2581leader \u2581// \u2581and \u2581closes \u2581the \u2581associated \u2581channels ."], "bleu": 0.21165084929516936, "rouge_l": 0.36}
{"id": 1631, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 Pull Server \u2581 call \u2581to \u2581 this \u2581server ."], "references": ["\u2581// \u2581 Run \u2581will \u2581block \u2581listening \u2581to \u2581all \u2581 subscriptions \u2581and \u2581return \u2581once \u2581the \u2581context \u2581is \u2581cancelled \u2581// \u2581or \u2581one \u2581of \u2581the \u2581subscription \u2581has \u2581a \u2581un recoverable \u2581error ."], "bleu": 0.07159754572326511, "rouge_l": 0.2579281183932347}
{"id": 1650, "predictions": ["\u2581// \u2581 New Controller \u2581creates \u2581a \u2581new \u2581 Controller \u2581instance"], "references": ["\u2581// \u2581 New Controller \u2581makes \u2581a \u2581 Controller \u2581out \u2581of \u2581the \u2581given \u2581clients ."], "bleu": 0.2796750486305988, "rouge_l": 0.5663129973474801}
{"id": 598, "predictions": ["\u2581// \u2581 Dial Etcd GRPC Server \u2581returns \u2581a \u2581 grpc \u2581connection \u2581to \u2581the \u2581 grpc \u2581server ."], "references": ["\u2581// \u2581 Dial Etcd GRPC Server \u2581creates \u2581a \u2581raw \u2581gRPC \u2581connection \u2581to \u2581an \u2581etcd \u2581member ."], "bleu": 0.38053710786825434, "rouge_l": 0.6093906093906094}
{"id": 1355, "predictions": ["\u2581// \u2581configure Org Meta \u2581updates \u2581the \u2581 org \u2581 name \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581configure Org Meta \u2581will \u2581update \u2581 github \u2581to \u2581have \u2581the \u2581non - nil \u2581wanted \u2581metadata \u2581values ."], "bleu": 0.21249144372615247, "rouge_l": 0.40744274809160297}
{"id": 1969, "predictions": ["\u2581// \u2581 NetworkConfig Get \u2581returns \u2581the \u2581network \u2581 config \u2581for \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 NetworkConfig Get \u2581returns \u2581the \u2581 config \u2581 map \u2581of \u2581the \u2581network \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.4033687971800765, "rouge_l": 0.6912181303116147}
{"id": 12, "predictions": ["\u2581// \u2581new Txn Resp \u2581creates \u2581a \u2581new \u2581transaction \u2581response ."], "references": ["\u2581// \u2581new Txn Resp \u2581 allocate s \u2581a \u2581txn \u2581response \u2581for \u2581a \u2581txn \u2581request \u2581given \u2581a \u2581 path ."], "bleu": 0.16042755994627522, "rouge_l": 0.45717344753747313}
{"id": 944, "predictions": ["\u2581// \u2581check Leader Lease \u2581checks \u2581the \u2581leader \u2581for \u2581the \u2581leader"], "references": ["\u2581// \u2581check Leader Lease \u2581is \u2581used \u2581to \u2581check \u2581if \u2581we \u2581can \u2581 contact \u2581a \u2581 quorum \u2581of \u2581nodes \u2581// \u2581within \u2581the \u2581last \u2581leader \u2581lease \u2581interval . \u2581If \u2581not , \u2581we"], "bleu": 0.05164842248150801, "rouge_l": 0.27518796992481204}
{"id": 392, "predictions": ["\u2581// \u2581 recv KeepAlive \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581 keepalive \u2581 alive"], "references": ["\u2581// \u2581 recv KeepAlive \u2581updates \u2581a \u2581lease \u2581based \u2581on \u2581its \u2581 Lease KeepAlive Response"], "bleu": 0.25748661016289676, "rouge_l": 0.35714285714285715}
{"id": 813, "predictions": ["\u2581// \u2581 get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581 get \u2581returns \u2581the \u2581found \u2581value \u2581if \u2581any . \u2581If \u2581not \u2581found , \u2581we \u2581return \u2581nil ."], "bleu": 0.23726680569473446, "rouge_l": 0.46262188515709646}
{"id": 1281, "predictions": ["\u2581// \u2581make Build \u2581creates \u2581a \u2581build \u2581build \u2581from \u2581a \u2581 set \u2581of \u2581 v 1 alpha 1 \u2581and \u2581returns \u2581a \u2581new \u2581build ."], "references": ["\u2581// \u2581make Build \u2581creates \u2581a \u2581build \u2581from \u2581the \u2581 p row job , \u2581using \u2581the \u2581 p row job ' s \u2581build spec ."], "bleu": 0.27277193738978894, "rouge_l": 0.46629603891591376}
{"id": 1875, "predictions": ["\u2581// \u2581load Clusters \u2581returns \u2581list \u2581of \u2581clusters"], "references": ["\u2581// \u2581load Clusters \u2581parses \u2581and \u2581filters \u2581the \u2581 json \u2581 data , \u2581then \u2581populate s \u2581every \u2581 Cluster \u2581struct \u2581with \u2581// \u2581 aggregated \u2581job \u2581 data \u2581and \u2581 totals ."], "bleu": 0.012934746051157991, "rouge_l": 0.14581673306772908}
{"id": 1932, "predictions": ["\u2581// \u2581 Image Locate \u2581returns \u2581the \u2581 Locate \u2581node \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Locate \u2581returns \u2581the \u2581address \u2581of \u2581an \u2581 online \u2581node \u2581that \u2581has \u2581a \u2581local \u2581copy \u2581of \u2581// \u2581the \u2581given \u2581image , \u2581or \u2581an \u2581 empty \u2581string \u2581if \u2581the"], "bleu": 0.13093585840137667, "rouge_l": 0.43416370106761565}
{"id": 1595, "predictions": ["\u2581// \u2581 Expect s \u2581a \u2581 json \u2581file \u2581and \u2581writes \u2581it \u2581to \u2581the \u2581 config \u2581file ."], "references": ["\u2581// \u2581yaml To Config \u2581converts \u2581a \u2581yaml \u2581file \u2581into \u2581a \u2581 Config \u2581object"], "bleu": 0.10802314890908067, "rouge_l": 0.2732362821948488}
{"id": 1187, "predictions": ["\u2581// \u2581 Acquire \u2581 submit s \u2581a \u2581 org \u2581to \u2581the \u2581 model ."], "references": ["\u2581// \u2581 protect \u2581 protect s \u2581branches \u2581specified \u2581in \u2581the \u2581 pre submit \u2581and \u2581branch - protection \u2581 config \u2581sections ."], "bleu": 0.10551084458475582, "rouge_l": 0.3860759493670886}
{"id": 387, "predictions": ["\u2581// \u2581Remove Member \u2581removes \u2581a \u2581member \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581Remove Member \u2581removes \u2581a \u2581member \u2581from \u2581the \u2581store . \u2581// \u2581The \u2581given \u2581 id \u2581MUST \u2581exist , \u2581or \u2581the \u2581function \u2581panic s ."], "bleu": 0.19901749213140854, "rouge_l": 0.4928186714542191}
{"id": 534, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581function \u2581to \u2581 get \u2581the \u2581last \u2581revision \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581since \u2581returns \u2581 revisions \u2581since \u2581the \u2581given \u2581rev . \u2581 Only \u2581the \u2581revision \u2581with \u2581the \u2581// \u2581largest \u2581sub \u2581revision \u2581will \u2581be \u2581returned \u2581if \u2581multiple \u2581 revisions \u2581have \u2581the \u2581same"], "bleu": 0.04897448923303683, "rouge_l": 0.2837209302325582}
{"id": 645, "predictions": ["\u2581// \u2581 New Make Mirror Command \u2581returns \u2581a \u2581new \u2581 cobra . Command \u2581for \u2581 mirror ing \u2581a \u2581 mirror ."], "references": ["\u2581// \u2581 New Make Mirror Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" make Mirror \" ."], "bleu": 0.35788354361456914, "rouge_l": 0.5901495162708883}
{"id": 51, "predictions": ["\u2581// \u2581 post \u2581sends \u2581a \u2581pipeline \u2581to \u2581the \u2581pipeline"], "references": ["\u2581// \u2581 post \u2581 POST s \u2581a \u2581 data \u2581payload \u2581to \u2581a \u2581 url . \u2581Returns \u2581nil \u2581if \u2581the \u2581 POST \u2581succeeds , \u2581// \u2581error \u2581on \u2581any \u2581failure ."], "bleu": 0.0327420479222823, "rouge_l": 0.2884160756501182}
{"id": 1685, "predictions": ["\u2581// \u2581difference \u2581returns \u2581a \u2581 org Repo Config \u2581from \u2581the \u2581 org \u2581configuration ."], "references": ["\u2581// \u2581difference \u2581returns \u2581a \u2581new \u2581 org Repo Config \u2581that \u2581represents \u2581the \u2581 set \u2581difference \u2581of \u2581// \u2581the \u2581 repos \u2581specified \u2581by \u2581the \u2581receiver \u2581and \u2581the \u2581parameter \u2581 org Repo"], "bleu": 0.15038559194516346, "rouge_l": 0.4692307692307692}
{"id": 101, "predictions": ["\u2581// \u2581wait Leader \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 set \u2581of \u2581nodes \u2581are \u2581 active ."], "references": ["\u2581// \u2581wait Leader \u2581waits \u2581until \u2581given \u2581members \u2581 agree \u2581on \u2581the \u2581same \u2581leader ."], "bleu": 0.1702602472176709, "rouge_l": 0.4048672566371681}
{"id": 686, "predictions": ["\u2581// \u2581 flush Mem Table \u2581 flush es \u2581the \u2581 table \u2581 data \u2581from \u2581the \u2581 table ."], "references": ["\u2581// \u2581 flush Mem table \u2581must \u2581keep \u2581running \u2581until \u2581we \u2581send \u2581it \u2581an \u2581 empty \u2581 flush Task . \u2581If \u2581there \u2581// \u2581are \u2581errors \u2581during \u2581handling \u2581the \u2581 flush \u2581task"], "bleu": 0.13402707188479995, "rouge_l": 0.3189542483660131}
{"id": 1854, "predictions": ["\u2581// \u2581upload \u2581returns \u2581a \u2581 URL \u2581for \u2581the \u2581given \u2581 status ."], "references": ["\u2581// \u2581upload \u2581the \u2581result \u2581downloaded \u2581from \u2581 path \u2581into \u2581project ."], "bleu": 0.16261701715194898, "rouge_l": 0.43821839080459773}
{"id": 1725, "predictions": ["\u2581// \u2581list Build IDs \u2581returns \u2581all \u2581 keys \u2581in \u2581the \u2581bucket ."], "references": ["\u2581// \u2581Gets \u2581all \u2581build \u2581 ids \u2581for \u2581a \u2581job ."], "bleu": 0.13065113298388567, "rouge_l": 0.3696969696969697}
{"id": 1396, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 URL ."], "references": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581 Bo skos \u2581client \u2581for \u2581the \u2581specified \u2581 URL \u2581and \u2581resource \u2581 owner . \u2581// \u2581// \u2581 Clients \u2581created \u2581with \u2581 this \u2581function \u2581default \u2581to"], "bleu": 0.09029581511349671, "rouge_l": 0.40531561461794013}
{"id": 971, "predictions": ["\u2581// \u2581 GraphNode Check \u2581 asks \u2581 this \u2581 call \u2581to \u2581 show \u2581the \u2581 content \u2581of \u2581the \u2581 app"], "references": ["\u2581// \u2581 Webpack Check \u2581will \u2581compare \u2581the \u2581current \u2581default \u2581 Buff a lo \u2581// \u2581 webpack . config . js \u2581against \u2581the \u2581applications \u2581 webpack . config . js ."], "bleu": 0.0641729547505681, "rouge_l": 0.270253164556962}
{"id": 1712, "predictions": ["\u2581// \u2581Create And Sync \u2581creates \u2581a \u2581new \u2581 Issue \u2581 sync ."], "references": ["\u2581// \u2581Create And Sync \u2581is \u2581the \u2581main \u2581work h orse \u2581function \u2581of \u2581 Issue Creator . \u2581It \u2581initializes \u2581the \u2581 Issue Creator , \u2581// \u2581 asks \u2581each \u2581source \u2581for \u2581its"], "bleu": 0.07902598128872206, "rouge_l": 0.30942028985507253}
{"id": 1305, "predictions": ["\u2581// \u2581Get Enqueue d Builds \u2581returns \u2581a \u2581 map \u2581of \u2581 enqueue d \u2581 items \u2581from \u2581the \u2581provided \u2581// \u2581build ."], "references": ["\u2581// \u2581Get Enqueue d Builds \u2581lists \u2581all \u2581 enqueue d \u2581builds \u2581for \u2581the \u2581provided \u2581jobs ."], "bleu": 0.30094298890378757, "rouge_l": 0.6094459582198002}
{"id": 260, "predictions": ["\u2581// \u2581monitor Versions \u2581is \u2581used \u2581to \u2581monitor \u2581the \u2581version \u2581of \u2581the \u2581cluster"], "references": ["\u2581// \u2581monitor Versions \u2581checks \u2581the \u2581member ' s \u2581version \u2581every \u2581monitor Version Interval . \u2581// \u2581It \u2581updates \u2581the \u2581cluster \u2581version \u2581if \u2581all \u2581members \u2581 agree s \u2581on \u2581a \u2581higher \u2581one"], "bleu": 0.056788720057911184, "rouge_l": 0.30942028985507253}
{"id": 272, "predictions": ["\u2581// \u2581node To Member \u2581converts \u2581a \u2581 Node \u2581 Node \u2581to \u2581a \u2581 Member ."], "references": ["\u2581// \u2581node To Member \u2581builds \u2581member \u2581from \u2581a \u2581 key \u2581value \u2581node . \u2581// \u2581the \u2581child \u2581nodes \u2581of \u2581the \u2581given \u2581node \u2581MUST \u2581be \u2581sorted \u2581by \u2581 key ."], "bleu": 0.11786415110826444, "rouge_l": 0.35285610990600136}
{"id": 746, "predictions": ["\u2581// \u2581print Histogram \u2581prints \u2581the \u2581 data \u2581in \u2581the \u2581buffer"], "references": ["\u2581// \u2581print Histogram \u2581prints \u2581the \u2581histogram \u2581 data \u2581in \u2581a \u2581human - readable \u2581 format ."], "bleu": 0.32255216969638445, "rouge_l": 0.5907990314769976}
{"id": 73, "predictions": ["\u2581// \u2581 Start Serve \u2581starts \u2581the \u2581server \u2581and \u2581starts \u2581listening \u2581on \u2581the \u2581server ."], "references": ["\u2581// \u2581 Start Serve \u2581starts \u2581 serving \u2581agent \u2581server ."], "bleu": 0.3641410562218426, "rouge_l": 0.6014084507042253}
{"id": 1278, "predictions": ["\u2581// \u2581inject Source \u2581takes \u2581a \u2581build \u2581and \u2581returns \u2581a \u2581boolean \u2581indicating \u2581whether \u2581the \u2581// \u2581 container \u2581is \u2581valid ."], "references": ["\u2581// \u2581inject Source \u2581adds \u2581the \u2581custom \u2581source \u2581 container \u2581to \u2581 call \u2581clone refs \u2581correctly . \u2581// \u2581// \u2581Returns \u2581true \u2581if \u2581it \u2581added \u2581 this \u2581 container \u2581// \u2581// \u2581Does"], "bleu": 0.08841444414901635, "rouge_l": 0.2745980707395499}
{"id": 265, "predictions": ["\u2581// \u2581accept Loop \u2581is \u2581a \u2581goroutine \u2581that \u2581will \u2581 listen \u2581for \u2581the \u2581 TLS \u2581listener"], "references": ["\u2581// \u2581accept Loop \u2581launch es \u2581each \u2581 TLS \u2581handshake \u2581in \u2581a \u2581separate \u2581goroutine \u2581// \u2581to \u2581prevent \u2581a \u2581 hanging \u2581 TLS \u2581connection \u2581from \u2581blocking \u2581other \u2581connections ."], "bleu": 0.09053716289420637, "rouge_l": 0.36228656273199694}
{"id": 912, "predictions": ["\u2581// \u2581 Restore \u2581restore s \u2581the \u2581 Raft \u2581 data \u2581from \u2581the \u2581 raft ."], "references": ["\u2581// \u2581 Restore \u2581is \u2581used \u2581to \u2581manually \u2581force \u2581 Raft \u2581to \u2581 consume \u2581an \u2581external \u2581snapshot , \u2581such \u2581// \u2581as \u2581if \u2581 restoring \u2581from \u2581a \u2581backup . \u2581We \u2581will \u2581use"], "bleu": 0.07610397786452734, "rouge_l": 0.3353951890034364}
{"id": 364, "predictions": ["\u2581// \u2581 New Config \u2581creates \u2581a \u2581new \u2581 config ."], "references": ["\u2581// \u2581 New Config \u2581creates \u2581a \u2581new \u2581client v 3. Config \u2581from \u2581a \u2581yaml \u2581file ."], "bleu": 0.38358133516250553, "rouge_l": 0.5907990314769976}
{"id": 988, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 App \u2581with \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 App \u2581and \u2581adds \u2581some \u2581 sane , \u2581and \u2581useful , \u2581defaults ."], "bleu": 0.13370300088423734, "rouge_l": 0.45143385753931536}
{"id": 1279, "predictions": ["\u2581// \u2581 Authenticate s \u2581the \u2581 container ' s \u2581 container \u2581 config \u2581to \u2581 container"], "references": ["\u2581// \u2581injected Steps \u2581returns \u2581initial \u2581containers , \u2581a \u2581final \u2581 container \u2581and \u2581an \u2581additional \u2581volume ."], "bleu": 0.10878661088699644, "rouge_l": 0.1875}
{"id": 1762, "predictions": ["\u2581// \u2581load \u2581returns \u2581the \u2581 group \u2581of \u2581the \u2581 group , \u2581 excluding \u2581the \u2581given \u2581 Reader ."], "references": ["\u2581// \u2581Use \u2581load \u2581to \u2581read \u2581a \u2581generated \u2581files \u2581 config \u2581file , \u2581and \u2581populate \u2581 g \u2581with \u2581the \u2581commands . \u2581// \u2581\" paths - from - repo \" \u2581commands \u2581are"], "bleu": 0.0494417790684278, "rouge_l": 0.2790849673202615}
{"id": 1130, "predictions": ["\u2581// \u2581 Move Project Card \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581project \u2581 card ."], "references": ["\u2581// \u2581 Move Project Card \u2581moves \u2581a \u2581specific \u2581project \u2581 card \u2581to \u2581a \u2581specified \u2581column \u2581in \u2581the \u2581same \u2581project"], "bleu": 0.3015885196229486, "rouge_l": 0.46081208687440983}
{"id": 1887, "predictions": ["\u2581// \u2581 Gather \u2581 Metrics \u2581metrics \u2581for \u2581a \u2581 set \u2581of \u2581metrics ."], "references": ["\u2581// \u2581 Gather ProwJob Metrics \u2581gather s \u2581prometheus \u2581metrics \u2581for \u2581 p row jobs ."], "bleu": 0.20061216213411467, "rouge_l": 0.5641618497109826}
{"id": 182, "predictions": ["\u2581// \u2581 P Pro f Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581 P Pro f Handlers \u2581 handlers"], "references": ["\u2581// \u2581 P Pro f Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581 pprof \u2581 handlers \u2581keyed \u2581by \u2581the \u2581HTTP \u2581 path ."], "bleu": 0.5548788696313449, "rouge_l": 0.6876006441223833}
{"id": 1691, "predictions": ["\u2581// \u2581 Acquire \u2581returns \u2581a \u2581resource \u2581for \u2581the \u2581given \u2581 entity ."], "references": ["\u2581// \u2581 Acquire \u2581gets \u2581a \u2581resource \u2581with \u2581associated \u2581lease d \u2581resources"], "bleu": 0.22997519112894443, "rouge_l": 0.43821839080459773}
{"id": 977, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Engine \u2581instance ."], "references": ["\u2581// \u2581 New \u2581 render . Engine \u2581ready \u2581to \u2581go \u2581with \u2581your \u2581 Options \u2581// \u2581and \u2581some \u2581defaults \u2581we \u2581think \u2581you \u2581might \u2581like ."], "bleu": 0.0665455091918004, "rouge_l": 0.3285457809694794}
{"id": 706, "predictions": ["\u2581// \u2581parse KV \u2581is \u2581used \u2581to \u2581parse \u2581a \u2581 KV \u2581 iterator ."], "references": ["\u2581// \u2581parse KV \u2581would \u2581 allocate \u2581a \u2581new \u2581 byte \u2581 slice \u2581for \u2581 key \u2581and \u2581for \u2581value ."], "bleu": 0.13326170715421812, "rouge_l": 0.4231912784935579}
{"id": 1646, "predictions": ["\u2581// \u2581 Update \u2581the \u2581 admission \u2581 status \u2581of \u2581the \u2581 admission \u2581 api ."], "references": ["\u2581// \u2581only Update Status \u2581returns \u2581the \u2581response \u2581to \u2581the \u2581request"], "bleu": 0.10343603005129705, "rouge_l": 0.3319727891156462}
{"id": 1692, "predictions": ["\u2581// \u2581 Release One \u2581 releases \u2581the \u2581given \u2581 data \u2581from \u2581the \u2581 api ."], "references": ["\u2581// \u2581 Release One \u2581will \u2581release \u2581a \u2581resource \u2581as \u2581well \u2581as \u2581lease d \u2581resources \u2581associated \u2581to \u2581it"], "bleu": 0.20036355246442353, "rouge_l": 0.24721377912867276}
{"id": 760, "predictions": ["\u2581// \u2581 Finish \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 data \u2581in \u2581 b ."], "references": ["\u2581// \u2581 Finish \u2581finishes \u2581the \u2581 table \u2581by \u2581appending \u2581the \u2581index ."], "bleu": 0.1892240568795935, "rouge_l": 0.4535315985130111}
{"id": 1834, "predictions": ["\u2581// \u2581read Acc Results With Values \u2581 - \u2581 get \u2581the \u2581 data \u2581from \u2581a \u2581 map"], "references": ["\u2581// \u2581read Paginated Results With Values \u2581is \u2581an \u2581override \u2581that \u2581allows \u2581control \u2581over \u2581the \u2581query \u2581string ."], "bleu": 0.1661742929957894, "rouge_l": 0.3529411764705882}
{"id": 403, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 set \u2581of \u2581 active \u2581 data ."], "references": ["\u2581// \u2581 Next \u2581gets \u2581the \u2581next \u2581 set \u2581of \u2581updates \u2581from \u2581the \u2581etcd \u2581 resolver . \u2581// \u2581 Calls \u2581to \u2581 Next \u2581should \u2581be \u2581serialized ; \u2581 concurrent \u2581calls \u2581are"], "bleu": 0.14122777346144497, "rouge_l": 0.42657342657342656}
{"id": 1899, "predictions": ["\u2581// \u2581Generate Plugin Help \u2581generates \u2581the \u2581help \u2581help \u2581for \u2581 this \u2581agent ."], "references": ["\u2581// \u2581Generate Plugin Help \u2581 compile s \u2581and \u2581returns \u2581the \u2581help \u2581information \u2581for \u2581all \u2581 plugins ."], "bleu": 0.24574795500254085, "rouge_l": 0.5859124866595516}
{"id": 1821, "predictions": ["\u2581// \u2581 Translate Blocking Pre submit s \u2581is \u2581used \u2581to \u2581 submit \u2581a \u2581 pre submit s \u2581to \u2581a \u2581 map \u2581of \u2581 pre - existing \u2581 pre - existing"], "references": ["\u2581// \u2581 migrated Blocking Pre submit s \u2581determines \u2581blocking \u2581 pre submit s \u2581that \u2581have \u2581had \u2581// \u2581their \u2581 status \u2581 contexts \u2581 migrated . \u2581This \u2581is \u2581a \u2581best -"], "bleu": 0.22798055018612587, "rouge_l": 0.4666666666666668}
{"id": 343, "predictions": ["\u2581// \u2581Build \u2581builds \u2581the \u2581 balancer \u2581 balancer ."], "references": ["\u2581// \u2581Build \u2581is \u2581called \u2581initially \u2581when \u2581creating \u2581\" cc Balancer Wrapper \" . \u2581// \u2581\" grpc . Dial \" \u2581is \u2581called \u2581to \u2581 this \u2581client \u2581connection . \u2581// \u2581Then ,"], "bleu": 0.020466264135212756, "rouge_l": 0.18697318007662836}
{"id": 1151, "predictions": ["\u2581// \u2581 Org Exception sAnd Repos \u2581returns \u2581the \u2581 set \u2581of \u2581 organizations \u2581that \u2581are \u2581// \u2581registered \u2581in \u2581the \u2581 org ."], "references": ["\u2581// \u2581 Org Exception sAnd Repos \u2581determines \u2581which \u2581 orgs \u2581and \u2581 repos \u2581a \u2581 set \u2581of \u2581queries \u2581cover . \u2581// \u2581 Output \u2581is \u2581returned \u2581as \u2581a \u2581mapping \u2581from \u2581'"], "bleu": 0.2331213761506836, "rouge_l": 0.41165644171779137}
{"id": 1966, "predictions": ["\u2581// \u2581 Network Get \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581network ."], "references": ["\u2581// \u2581 Network Get \u2581returns \u2581the \u2581network \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.5321141152259716, "rouge_l": 0.71484375}
{"id": 1623, "predictions": ["\u2581// \u2581 Inject Entry point \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 slice \u2581of \u2581 Inject Entry \u2581// \u2581to Inject \u2581 set \u2581the \u2581 container ' s \u2581"], "references": ["\u2581// \u2581 Inject Entry point \u2581will \u2581make \u2581the \u2581 entrypoint \u2581binary \u2581in \u2581the \u2581 tools \u2581volume \u2581the \u2581 container ' s \u2581 entrypoint , \u2581which \u2581will \u2581output \u2581to \u2581the \u2581log"], "bleu": 0.31248083011283456, "rouge_l": 0.43333333333333335}
{"id": 599, "predictions": ["\u2581// \u2581Create Etcd ClientConfig \u2581creates \u2581a \u2581new \u2581 config ."], "references": ["\u2581// \u2581Create Etcd ClientConfig \u2581creates \u2581a \u2581client \u2581configuration \u2581from \u2581member ."], "bleu": 0.5338964887591194, "rouge_l": 0.6609907120743034}
{"id": 1787, "predictions": ["\u2581// \u2581parse XML \u2581parses \u2581the \u2581 body \u2581of \u2581a \u2581 xml \u2581XML \u2581string \u2581into \u2581a \u2581 GCS Dir ."], "references": ["\u2581// \u2581parse XML \u2581extracts \u2581a \u2581 gcs Dir \u2581object \u2581from \u2581XML . \u2581If \u2581 this \u2581returns \u2581a \u2581nil \u2581 gcs Dir , \u2581// \u2581the \u2581XML \u2581indicated \u2581that \u2581 this \u2581was"], "bleu": 0.09692781698396034, "rouge_l": 0.35305466237942124}
{"id": 1380, "predictions": ["\u2581// \u2581 Format Record \u2581prints \u2581a \u2581record \u2581to \u2581the \u2581given \u2581record ."], "references": ["\u2581// \u2581 Format Record \u2581describes \u2581the \u2581record \u2581in \u2581a \u2581human - readable \u2581// \u2581manner \u2581for \u2581 inclusion \u2581into \u2581build \u2581logs"], "bleu": 0.16698072090365443, "rouge_l": 0.3588235294117647}
{"id": 1172, "predictions": ["\u2581// \u2581has Synced \u2581returns \u2581true \u2581if \u2581the \u2581 controller \u2581is \u2581 synced \u2581to \u2581be \u2581 synced ."], "references": ["\u2581// \u2581has Synced \u2581returns \u2581true \u2581when \u2581every \u2581 p row job \u2581and \u2581pipeline \u2581 informer \u2581has \u2581 synced ."], "bleu": 0.3148247452065883, "rouge_l": 0.5500450856627592}
{"id": 970, "predictions": ["\u2581// \u2581compact Logs \u2581removes \u2581the \u2581logs \u2581from \u2581the \u2581 raft \u2581log ."], "references": ["\u2581// \u2581compact Logs \u2581takes \u2581the \u2581last \u2581inclusive \u2581index \u2581of \u2581a \u2581snapshot \u2581// \u2581and \u2581 trim s \u2581the \u2581logs \u2581that \u2581are \u2581no \u2581longer \u2581needed ."], "bleu": 0.0936287706953132, "rouge_l": 0.31443298969072164}
{"id": 1536, "predictions": ["\u2581// \u2581check Config Validity \u2581checks \u2581if \u2581the \u2581 config \u2581is \u2581valid"], "references": ["\u2581// \u2581Check \u2581if \u2581the \u2581 config \u2581provided \u2581through \u2581the \u2581flags \u2581take \u2581valid \u2581values ."], "bleu": 0.26253019470824807, "rouge_l": 0.4698331193838254}
{"id": 531, "predictions": ["\u2581// \u2581 put \u2581stores \u2581the \u2581given \u2581 data \u2581into \u2581the \u2581 key ."], "references": ["\u2581// \u2581 put \u2581puts \u2581a \u2581revision \u2581to \u2581the \u2581 key Index ."], "bleu": 0.2658483576665877, "rouge_l": 0.5640686922060767}
{"id": 807, "predictions": ["\u2581// \u2581 init \u2581initializes \u2581the \u2581 data ."], "references": ["\u2581// \u2581These \u2581variables \u2581are \u2581global \u2581and \u2581have \u2581 cumulative \u2581values \u2581for \u2581all \u2581kv \u2581stores ."], "bleu": 0.07949903911132591, "rouge_l": 0.24729729729729732}
{"id": 586, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581range \u2581to \u2581the \u2581cache ."], "references": ["\u2581// \u2581Add \u2581adds \u2581the \u2581response \u2581of \u2581a \u2581request \u2581to \u2581the \u2581cache \u2581if \u2581its \u2581revision \u2581is \u2581larger \u2581than \u2581the \u2581 compacted \u2581revision \u2581of \u2581the \u2581cache ."], "bleu": 0.09067559614765734, "rouge_l": 0.42434782608695654}
{"id": 356, "predictions": ["\u2581// \u2581 New Store \u2581creates \u2581a \u2581new \u2581 Store ."], "references": ["\u2581// \u2581 New Store \u2581returns \u2581a \u2581new \u2581store . \u2581It \u2581is \u2581useful \u2581to \u2581create \u2581a \u2581store \u2581inside \u2581// \u2581 mvc c \u2581pkg . \u2581It \u2581should \u2581only \u2581be \u2581used \u2581for \u2581testing"], "bleu": 0.05815280688479283, "rouge_l": 0.3669172932330827}
{"id": 79, "predictions": ["\u2581// \u2581 Op Delete \u2581deletes \u2581a \u2581 key \u2581from \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Op Delete \u2581returns \u2581\" delete \" \u2581operation \u2581based \u2581on \u2581given \u2581 key \u2581and \u2581operation \u2581options ."], "bleu": 0.2152063795907075, "rouge_l": 0.43884892086330934}
{"id": 2012, "predictions": ["\u2581// \u2581 R sync Send \u2581 - \u2581 sync s \u2581the \u2581connection \u2581to \u2581a \u2581remote \u2581 path"], "references": ["\u2581// \u2581 R sync Send \u2581sets \u2581up \u2581the \u2581sending \u2581half \u2581of \u2581an \u2581 rsync , \u2581to \u2581recursively \u2581send \u2581the \u2581// \u2581directory \u2581pointed \u2581to \u2581by \u2581 path \u2581over \u2581the \u2581websocket ."], "bleu": 0.14999976662462458, "rouge_l": 0.40531561461794013}
{"id": 1274, "predictions": ["\u2581// \u2581 p row JobStatus \u2581 modifies \u2581the \u2581 status \u2581of \u2581the \u2581build ."], "references": ["\u2581// \u2581 p row JobStatus \u2581returns \u2581the \u2581desired \u2581state \u2581and \u2581 description \u2581based \u2581on \u2581the \u2581build \u2581 status ."], "bleu": 0.2989609839526766, "rouge_l": 0.5899419729206964}
{"id": 654, "predictions": ["\u2581// \u2581print Response Key \u2581prints \u2581the \u2581 status \u2581 code \u2581for \u2581the \u2581response ."], "references": ["\u2581// \u2581print Response Key \u2581only \u2581supports \u2581to \u2581print \u2581 key \u2581correctly ."], "bleu": 0.2676032275663791, "rouge_l": 0.4680306905370844}
{"id": 1160, "predictions": ["\u2581// \u2581 Handle Event \u2581updates \u2581the \u2581given \u2581request \u2581event ."], "references": ["\u2581// \u2581 Handle Event \u2581handles \u2581a \u2581GitHub \u2581 PR \u2581event \u2581to \u2581determine \u2581if \u2581the \u2581\" needs - rebase \" \u2581// \u2581 label \u2581needs \u2581to \u2581be \u2581added \u2581or \u2581removed . \u2581It"], "bleu": 0.05340169573435527, "rouge_l": 0.27518796992481204}
{"id": 1179, "predictions": ["\u2581// \u2581 p row JobStatus \u2581 modifies \u2581the \u2581provided \u2581 Pipeline Info \u2581field \u2581of \u2581the \u2581given \u2581 Pipeline ."], "references": ["\u2581// \u2581 p row JobStatus \u2581returns \u2581the \u2581desired \u2581state \u2581and \u2581 description \u2581based \u2581on \u2581the \u2581pipeline \u2581 status"], "bleu": 0.2680165156355778, "rouge_l": 0.48886910062333044}
{"id": 542, "predictions": ["\u2581// \u2581 notify \u2581notifies \u2581the \u2581 watch \u2581events \u2581for \u2581 this \u2581 watch ."], "references": ["\u2581// \u2581 notify \u2581notifies \u2581the \u2581fact \u2581that \u2581given \u2581event \u2581at \u2581the \u2581given \u2581rev \u2581just \u2581happened \u2581to \u2581// \u2581 watchers \u2581that \u2581 watch \u2581on \u2581the \u2581 key \u2581of \u2581the \u2581event ."], "bleu": 0.13069093612729119, "rouge_l": 0.3839160839160839}
{"id": 482, "predictions": ["\u2581// \u2581Get Client \u2581returns \u2581a \u2581 SRV \u2581record \u2581for \u2581the \u2581given \u2581service \u2581 name ."], "references": ["\u2581// \u2581Get Client \u2581looks \u2581up \u2581the \u2581client \u2581endpoints \u2581for \u2581a \u2581service \u2581and \u2581 domain ."], "bleu": 0.19251614434393563, "rouge_l": 0.4666666666666668}
{"id": 135, "predictions": ["\u2581// \u2581stop Etcd \u2581is \u2581used \u2581to \u2581stop \u2581the \u2581etcd \u2581server"], "references": ["\u2581// \u2581 SIG QUIT \u2581to \u2581 exit \u2581with \u2581 stacks trace"], "bleu": 0.12623203108004888, "rouge_l": 0.18885448916408668}
{"id": 809, "predictions": ["\u2581// \u2581drop Tree \u2581removes \u2581all \u2581the \u2581 data \u2581from \u2581the \u2581current \u2581 set \u2581of \u2581 manifests ."], "references": ["\u2581// \u2581drop Tree \u2581pick s \u2581all \u2581tables \u2581from \u2581all \u2581levels , \u2581creates \u2581a \u2581manifest \u2581 changeset , \u2581// \u2581applies \u2581it , \u2581and \u2581then \u2581 decrement s \u2581the \u2581 refs \u2581of"], "bleu": 0.08660240563910805, "rouge_l": 0.3242524916943521}
{"id": 1922, "predictions": ["\u2581// \u2581ensure Image Aliases \u2581ensures \u2581that \u2581the \u2581 Image \u2581 Image \u2581 contains \u2581the \u2581given \u2581 alias ."], "references": ["\u2581// \u2581Create \u2581the \u2581specified \u2581image \u2581 ali ses , \u2581updating \u2581those \u2581that \u2581already \u2581exist"], "bleu": 0.08562365224473284, "rouge_l": 0.19182389937106917}
{"id": 1855, "predictions": ["\u2581// \u2581Apply Default \u2581applies \u2581the \u2581default \u2581 config \u2581to \u2581the \u2581default \u2581 config ."], "references": ["\u2581// \u2581Apply Default \u2581applies \u2581the \u2581defaults \u2581for \u2581the \u2581 ProwJob \u2581 decoration . \u2581If \u2581a \u2581field \u2581has \u2581a \u2581zero \u2581value , \u2581it \u2581// \u2581replaces \u2581that \u2581with \u2581the \u2581value \u2581 set"], "bleu": 0.11731817232444079, "rouge_l": 0.3412587412587413}
{"id": 11, "predictions": ["\u2581// \u2581 post \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581 kafka \u2581service ."], "references": ["\u2581// \u2581 post \u2581 posts \u2581the \u2581given \u2581request . \u2581// \u2581It \u2581returns \u2581nil \u2581when \u2581request \u2581is \u2581sent \u2581out \u2581and \u2581processed \u2581successfully ."], "bleu": 0.09994680606571214, "rouge_l": 0.2793040293040293}
{"id": 1602, "predictions": ["\u2581// \u2581Set Pre submit ing \u2581sets \u2581 pre - mail \u2581 style \u2581 style \u2581of \u2581a \u2581 set \u2581of \u2581 items \u2581to \u2581a \u2581 set \u2581of \u2581 js \u2581 headers"], "references": ["\u2581// \u2581Set Pre submit Regexes \u2581 compile s \u2581and \u2581validates \u2581all \u2581the \u2581regular \u2581expressions \u2581for \u2581// \u2581the \u2581provided \u2581 pre submit s ."], "bleu": 0.13351899845512327, "rouge_l": 0.23193916349809887}
{"id": 121, "predictions": ["\u2581// \u2581 Watch \u2581returns \u2581a \u2581 watch . Watcher \u2581that \u2581 watches \u2581the \u2581 watch \u2581for \u2581the \u2581given \u2581// \u2581 key ."], "references": ["\u2581// \u2581 Watch \u2581creates \u2581a \u2581new \u2581watcher \u2581in \u2581the \u2581stream \u2581and \u2581returns \u2581its \u2581 Watch ID ."], "bleu": 0.126254971485354, "rouge_l": 0.36746987951807225}
{"id": 800, "predictions": ["\u2581// \u2581compare AndAdd \u2581compares \u2581the \u2581 status \u2581of \u2581the \u2581 healthcheck ."], "references": ["\u2581// \u2581compare AndAdd \u2581will \u2581check \u2581whether \u2581we \u2581can \u2581run \u2581 this \u2581compact Def . \u2581That \u2581it \u2581doesn ' t \u2581overlap \u2581with \u2581any \u2581// \u2581other \u2581running \u2581 compaction . \u2581If \u2581it"], "bleu": 0.04962965758858181, "rouge_l": 0.26521739130434785}
{"id": 510, "predictions": ["\u2581// \u2581new Proxy Func \u2581creates \u2581a \u2581new \u2581proxy Func \u2581that \u2581will \u2581 add \u2581the \u2581given \u2581// \u2581 URL \u2581to \u2581the \u2581proxy ."], "references": ["\u2581// \u2581new Proxy Func \u2581builds \u2581a \u2581proxy \u2581function \u2581from \u2581the \u2581given \u2581string , \u2581which \u2581should \u2581// \u2581represent \u2581a \u2581 URL \u2581that \u2581can \u2581be \u2581used \u2581as \u2581a \u2581proxy . \u2581It \u2581performs"], "bleu": 0.16220338731792405, "rouge_l": 0.48650306748466265}
{"id": 919, "predictions": ["\u2581// \u2581assert LogEntry Equal \u2581checks \u2581if \u2581the \u2581given \u2581 Sub Log \u2581is \u2581valid ."], "references": ["\u2581// \u2581assert LogEntry Equal \u2581compares \u2581the \u2581 2 \u2581 raft \u2581 Log \u2581entries \u2581and \u2581reports \u2581any \u2581differences \u2581to \u2581the \u2581supplied \u2581testing . T \u2581instance \u2581// \u2581it \u2581return \u2581true \u2581if \u2581the"], "bleu": 0.09865243055173982, "rouge_l": 0.3412587412587413}
{"id": 628, "predictions": ["\u2581// \u2581 New GRPC Driver Health \u2581returns \u2581a \u2581new \u2581 GRPC \u2581client \u2581that \u2581will \u2581 connect \u2581to \u2581the \u2581// \u2581given \u2581 dial Func ."], "references": ["\u2581// \u2581 New GRPC 17 Health \u2581returns \u2581a \u2581new \u2581health \u2581 balancer \u2581with \u2581gRPC \u2581 v 1.7 ."], "bleu": 0.25381494737245897, "rouge_l": 0.5376602564102564}
{"id": 1453, "predictions": ["\u2581// \u2581 classify Labels \u2581returns \u2581a \u2581 map \u2581of \u2581labels \u2581to \u2581the \u2581given \u2581 label ."], "references": ["\u2581// \u2581 classify Labels \u2581will \u2581 put \u2581labels \u2581into \u2581the \u2581required , \u2581 arch a i c , \u2581dead \u2581maps \u2581as \u2581appropriate ."], "bleu": 0.16438111611833178, "rouge_l": 0.4470684039087948}
{"id": 2004, "predictions": ["\u2581// \u2581Get Container Console Log \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 container \u2581log"], "references": ["\u2581// \u2581Get Container Console Log \u2581requests \u2581that \u2581 LXD \u2581 attaches \u2581to \u2581the \u2581console \u2581device \u2581of \u2581a \u2581 container . \u2581// \u2581// \u2581Note \u2581that \u2581it ' s \u2581the \u2581caller '"], "bleu": 0.128515618774749, "rouge_l": 0.3839160839160839}
{"id": 1078, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 empty \u2581 group ."], "references": ["\u2581// \u2581 New \u2581generator \u2581for \u2581creating \u2581a \u2581 Buff a lo \u2581 Web \u2581application"], "bleu": 0.18563688094442687, "rouge_l": 0.4698331193838254}
{"id": 1672, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581function \u2581to \u2581 fill \u2581the \u2581 git \u2581repo \u2581 name \u2581and \u2581 content \u2581of \u2581the \u2581 git \u2581repo ."], "references": ["\u2581// \u2581problems In Files \u2581runs \u2581build ifier \u2581on \u2581the \u2581files . \u2581It \u2581returns \u2581a \u2581 map \u2581from \u2581the \u2581file \u2581to \u2581// \u2581a \u2581list \u2581of \u2581problems \u2581with \u2581that \u2581file ."], "bleu": 0.05817267541733789, "rouge_l": 0.18552311435523114}
{"id": 1557, "predictions": ["\u2581// \u2581commands For Pull Refs \u2581is \u2581a \u2581convenience \u2581method \u2581that \u2581returns \u2581the \u2581 git \u2581 Git \u2581 Git \u2581// \u2581 refs \u2581for \u2581the \u2581given \u2581 refs ."], "references": ["\u2581// \u2581commands For Pull Refs \u2581returns \u2581the \u2581list \u2581of \u2581commands \u2581needed \u2581to \u2581fetch \u2581and \u2581// \u2581 merge \u2581any \u2581pull \u2581 refs \u2581as \u2581well \u2581as \u2581 submodules . \u2581These \u2581commands \u2581should"], "bleu": 0.20463790767801304, "rouge_l": 0.41709401709401706}
{"id": 1532, "predictions": ["\u2581// \u2581Get Combined Status \u2581returns \u2581 status \u2581of \u2581the \u2581 controller ."], "references": ["\u2581// \u2581Get Combined Status \u2581retrieves \u2581the \u2581 Combined Status \u2581for \u2581the \u2581specified \u2581reference ."], "bleu": 0.291099242890319, "rouge_l": 0.5310945273631842}
{"id": 1919, "predictions": ["\u2581// \u2581 app Armor Can Stack \u2581returns \u2581true \u2581if \u2581the \u2581 armor _ armor _ armor _ armor _ armor _ armor _ user _ armor _ armor _ db"], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581 App Armor \u2581stack ing \u2581support \u2581is \u2581available ."], "bleu": 0.0631372362157204, "rouge_l": 0.20032840722495893}
{"id": 1544, "predictions": ["\u2581// \u2581 Describe \u2581returns \u2581the \u2581 label \u2581for \u2581the \u2581 label ."], "references": ["\u2581// \u2581 Describe \u2581generates \u2581a \u2581human \u2581readable \u2581 description \u2581of \u2581the \u2581behavior \u2581that \u2581 this \u2581// \u2581configuration \u2581specifies ."], "bleu": 0.12833423930513493, "rouge_l": 0.43394308943089427}
{"id": 524, "predictions": ["\u2581// \u2581 getVersion s \u2581returns \u2581the \u2581version \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 getVersion s \u2581returns \u2581the \u2581versions \u2581of \u2581the \u2581members \u2581in \u2581the \u2581given \u2581cluster . \u2581// \u2581The \u2581 key \u2581of \u2581the \u2581returned \u2581 map \u2581is \u2581the \u2581member ' s \u2581"], "bleu": 0.11028819844634034, "rouge_l": 0.45018450184501846}
{"id": 1348, "predictions": ["\u2581// \u2581 Help Provider \u2581returns \u2581the \u2581help \u2581 set \u2581of \u2581the \u2581 plugins \u2581in \u2581the \u2581// \u2581 OS C \u2581 Server \u2581 Spec ."], "references": ["\u2581// \u2581 Help Provider \u2581construct \u2581the \u2581plugin help . Plugin Help \u2581for \u2581 this \u2581plugin ."], "bleu": 0.15858053013682752, "rouge_l": 0.36309523809523814}
{"id": 1219, "predictions": ["\u2581// \u2581 New Controller \u2581creates \u2581a \u2581new \u2581 Controller \u2581instance ."], "references": ["\u2581// \u2581 New Controller \u2581returns \u2581a \u2581new \u2581 gerrit \u2581 controller \u2581client"], "bleu": 0.38716614958597584, "rouge_l": 0.603960396039604}
{"id": 1016, "predictions": ["\u2581// \u2581Validate Templates \u2581returns \u2581a \u2581 set \u2581of \u2581 templates \u2581that \u2581are \u2581not \u2581in \u2581the \u2581 templates ."], "references": ["\u2581// \u2581Validate Templates \u2581returns \u2581a \u2581 gen ny . Run Fn \u2581that \u2581will \u2581walk \u2581the \u2581// \u2581given \u2581 box \u2581and \u2581run \u2581each \u2581of \u2581the \u2581files \u2581found \u2581through \u2581each \u2581of \u2581the"], "bleu": 0.18109740027907523, "rouge_l": 0.3588235294117647}
{"id": 1704, "predictions": ["\u2581// \u2581handle \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581given \u2581pull \u2581 data ."], "references": ["\u2581// \u2581 1. \u2581Check \u2581commit \u2581messages \u2581in \u2581the \u2581pull \u2581request \u2581for \u2581the \u2581sign - off \u2581string \u2581// \u2581 2. \u2581Check \u2581the \u2581existing \u2581 status \u2581context \u2581value \u2581// \u2581 3. \u2581Check"], "bleu": 0.04344553129835821, "rouge_l": 0.21708185053380782}
{"id": 426, "predictions": ["\u2581// \u2581 New Check Data scale Command \u2581returns \u2581a \u2581command \u2581to \u2581 get \u2581the \u2581 set \u2581of \u2581 active \u2581 workload s"], "references": ["\u2581// \u2581 New Check Data scale Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" check \u2581 data scale \" ."], "bleu": 0.3899499205807209, "rouge_l": 0.5283464566929134}
{"id": 165, "predictions": ["\u2581// \u2581 URL Strings Equal \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581logger \u2581is \u2581a \u2581valid \u2581 URL ."], "references": ["\u2581// \u2581 URL Strings Equal \u2581returns \u2581\" true \" \u2581if \u2581given \u2581URLs \u2581are \u2581valid \u2581// \u2581and \u2581resolved \u2581to \u2581same \u2581 IP \u2581addresses . \u2581Otherwise , \u2581return \u2581\" false \" \u2581//"], "bleu": 0.17418065164056462, "rouge_l": 0.4458471760797342}
{"id": 18, "predictions": ["\u2581// \u2581 Compile \u2581 asks \u2581the \u2581 latency \u2581to \u2581a \u2581 latency ."], "references": ["\u2581// \u2581 Succ \u2581updates \u2581the \u2581 Follower Stats \u2581with \u2581a \u2581successful \u2581send"], "bleu": 0.16544619993389978, "rouge_l": 0.4029062087186261}
{"id": 324, "predictions": ["\u2581// \u2581open WAL \u2581is \u2581a \u2581 helper \u2581to \u2581open \u2581a \u2581new \u2581snapshot ."], "references": ["\u2581// \u2581open WAL \u2581returns \u2581a \u2581 WAL \u2581ready \u2581for \u2581reading ."], "bleu": 0.21972813874997157, "rouge_l": 0.507628294036061}
{"id": 241, "predictions": ["\u2581// \u2581 NewSession \u2581creates \u2581a \u2581new \u2581session \u2581with \u2581the \u2581given \u2581client ."], "references": ["\u2581// \u2581 NewSession \u2581gets \u2581the \u2581lease d \u2581session \u2581for \u2581a \u2581client ."], "bleu": 0.2545093860020286, "rouge_l": 0.5}
{"id": 1638, "predictions": ["\u2581// \u2581options For Repo \u2581returns \u2581a \u2581 Approve \u2581that \u2581 satisfies \u2581the \u2581 org . Backend \u2581interface ."], "references": ["\u2581// \u2581options For Repo \u2581gets \u2581the \u2581 plugins . Approve \u2581struct \u2581that \u2581is \u2581applicable \u2581to \u2581the \u2581indicated \u2581repo ."], "bleu": 0.23086189768053078, "rouge_l": 0.48412698412698413}
{"id": 1183, "predictions": ["\u2581// \u2581make Pipeline Run \u2581creates \u2581a \u2581pipeline \u2581 Run \u2581for \u2581the \u2581pipeline ."], "references": ["\u2581// \u2581make Pipeline \u2581creates \u2581a \u2581 Pipeline Run \u2581from \u2581a \u2581 p row \u2581job \u2581using \u2581the \u2581 Pipeline Run Spec \u2581defined \u2581in \u2581the \u2581 p row \u2581job"], "bleu": 0.08652406610773881, "rouge_l": 0.3762528912875867}
{"id": 972, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 empty \u2581 Generator \u2581instance ."], "references": ["\u2581// \u2581 New \u2581generator \u2581for \u2581adding \u2581 VCS \u2581to \u2581an \u2581application"], "bleu": 0.2044800736021839, "rouge_l": 0.3505747126436781}
{"id": 1250, "predictions": ["\u2581// \u2581Validate \u2581validates \u2581the \u2581GitHub \u2581options"], "references": ["\u2581// \u2581Validate \u2581validates \u2581GitHub \u2581options ."], "bleu": 0.488923022434901, "rouge_l": 0.8333333333333334}
{"id": 1346, "predictions": ["\u2581// \u2581 Events For Plugin \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581 type \u2581 review \u2581 review \u2581// \u2581for \u2581the \u2581given \u2581plugin ."], "references": ["\u2581// \u2581 Events For Plugin \u2581returns \u2581the \u2581registered \u2581events \u2581for \u2581the \u2581passed \u2581plugin ."], "bleu": 0.28200049157537727, "rouge_l": 0.6077898550724636}
{"id": 1409, "predictions": ["\u2581// \u2581 Query PullRequest s \u2581returns \u2581a \u2581list \u2581of \u2581issues \u2581for \u2581a \u2581query ."], "references": ["\u2581// \u2581 Query PullRequest s \u2581is \u2581a \u2581query \u2581function \u2581that \u2581returns \u2581a \u2581list \u2581of \u2581open \u2581pull \u2581requests \u2581 owned \u2581by \u2581the \u2581user \u2581whose \u2581access \u2581 token \u2581// \u2581is \u2581consumed \u2581by"], "bleu": 0.16913606612795665, "rouge_l": 0.3839160839160839}
{"id": 1253, "predictions": ["\u2581// \u2581 Git Client \u2581returns \u2581a \u2581 git \u2581client \u2581for \u2581the \u2581GitHub \u2581API"], "references": ["\u2581// \u2581 Git Client \u2581returns \u2581a \u2581 Git \u2581client ."], "bleu": 0.5296074933406222, "rouge_l": 0.7124087591240876}
{"id": 471, "predictions": ["\u2581// \u2581 write KeyEvent \u2581writes \u2581the \u2581 key - value \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 write KeyEvent \u2581 trim s \u2581the \u2581prefix \u2581of \u2581 key \u2581 path \u2581in \u2581a \u2581single \u2581 Event \u2581under \u2581// \u2581 Store Keys Prefix , \u2581serialize s \u2581it \u2581and"], "bleu": 0.10315156032159929, "rouge_l": 0.3353951890034364}
{"id": 1856, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581the \u2581field \u2581values \u2581on \u2581 GCS Upload \u2581with \u2581the \u2581rules \u2581defined \u2581in \u2581// \u2581the \u2581proto \u2581definition \u2581for \u2581 this \u2581message . \u2581If \u2581any \u2581rules \u2581are \u2581 violated"], "references": ["\u2581// \u2581Validate \u2581ensures \u2581all \u2581the \u2581values \u2581 set \u2581in \u2581the \u2581 Decoration Config \u2581are \u2581valid ."], "bleu": 0.07346761234551784, "rouge_l": 0.414027149321267}
{"id": 134, "predictions": ["\u2581// \u2581run Etcd \u2581is \u2581used \u2581to \u2581run \u2581a \u2581etcd \u2581server"], "references": ["\u2581// \u2581start \u2581but \u2581do \u2581not \u2581wait \u2581for \u2581it \u2581to \u2581complete"], "bleu": 0.13950796967929133, "rouge_l": 0.2}
{"id": 120, "predictions": ["\u2581// \u2581 add \u2581adds \u2581a \u2581new \u2581 watch \u2581to \u2581a \u2581 watch ."], "references": ["\u2581// \u2581 add \u2581puts \u2581a \u2581watcher \u2581into \u2581receiving \u2581a \u2581broadcast \u2581if \u2581its \u2581revision \u2581at \u2581least \u2581// \u2581meets \u2581the \u2581broadcast \u2581revision . \u2581Returns \u2581true \u2581if \u2581added ."], "bleu": 0.07522401520746681, "rouge_l": 0.2902458366375893}
{"id": 1521, "predictions": ["\u2581// \u2581create Cluster \u2581creates \u2581a \u2581new \u2581cluster ."], "references": ["\u2581// \u2581create Cluster \u2581causes \u2581 g cloud \u2581to \u2581create \u2581a \u2581cluster \u2581in \u2581project , \u2581returning \u2581the \u2581context \u2581 name"], "bleu": 0.0835170731043272, "rouge_l": 0.34502262443438914}
{"id": 1970, "predictions": ["\u2581// \u2581 Network Create \u2581creates \u2581a \u2581new \u2581 Network ."], "references": ["\u2581// \u2581 Network Create \u2581creates \u2581a \u2581new \u2581network ."], "bleu": 0.6989307622784944, "rouge_l": 0.8501742160278747}
{"id": 279, "predictions": ["\u2581// \u2581 Describe Message \u2581returns \u2581the \u2581 description \u2581of \u2581a \u2581message ."], "references": ["\u2581// \u2581 Describe Message \u2581returns \u2581a \u2581 conc is e \u2581human - readable \u2581 description \u2581of \u2581a \u2581// \u2581 Message \u2581for \u2581debugging ."], "bleu": 0.2368322726521595, "rouge_l": 0.5407801418439716}
{"id": 1925, "predictions": ["\u2581// \u2581 Images Get Expired \u2581returns \u2581all \u2581the \u2581 blobs \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Images Get Expired \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581images \u2581that \u2581have \u2581expired \u2581since \u2581the \u2581// \u2581given \u2581time ."], "bleu": 0.2918645193628924, "rouge_l": 0.5130841121495328}
{"id": 77, "predictions": ["\u2581// \u2581 Handle Interrupt s \u2581is \u2581called \u2581when \u2581a \u2581signal \u2581is \u2581received ."], "references": ["\u2581// \u2581 Handle Interrupt s \u2581calls \u2581the \u2581handler \u2581function s \u2581on \u2581receiving \u2581a \u2581 SIGINT \u2581or \u2581 SIGTERM ."], "bleu": 0.23697654997898265, "rouge_l": 0.4231912784935579}
{"id": 1823, "predictions": ["\u2581// \u2581can Execute Concurrent ly \u2581checks \u2581if \u2581the \u2581given \u2581 controller \u2581is \u2581 set ."], "references": ["\u2581// \u2581can Execute Concurrent ly \u2581checks \u2581whether \u2581the \u2581provided \u2581 ProwJob \u2581can \u2581// \u2581be \u2581executed \u2581concurrently ."], "bleu": 0.35630237986973784, "rouge_l": 0.5562310030395137}
{"id": 388, "predictions": ["\u2581// \u2581Validate Cluster And Assign IDs \u2581validates \u2581the \u2581cluster \u2581and \u2581 assign s \u2581them \u2581to \u2581 Raft \u2581cluster"], "references": ["\u2581// \u2581Validate Cluster And Assign IDs \u2581validates \u2581the \u2581local \u2581cluster \u2581by \u2581matching \u2581the \u2581 Peer URLs \u2581// \u2581with \u2581the \u2581existing \u2581cluster . \u2581If \u2581the \u2581validation \u2581succeeds , \u2581it \u2581assigns \u2581the"], "bleu": 0.23426193365371392, "rouge_l": 0.438562091503268}
{"id": 1840, "predictions": ["\u2581// \u2581 List Artifacts \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 GCS \u2581 content \u2581of \u2581the \u2581 GCS ."], "references": ["\u2581// \u2581 List Artifacts \u2581gets \u2581the \u2581names \u2581of \u2581all \u2581artifacts \u2581available \u2581from \u2581the \u2581given \u2581source"], "bleu": 0.20158074753947833, "rouge_l": 0.4206896551724138}
{"id": 1377, "predictions": ["\u2581// \u2581 Resolve \u2581 concatenate s \u2581the \u2581 contents \u2581of \u2581a \u2581template \u2581to \u2581a \u2581template ."], "references": ["\u2581// \u2581 createComment \u2581take \u2581a \u2581 ProwJob \u2581and \u2581a \u2581list \u2581of \u2581entries \u2581generated \u2581with \u2581// \u2581create Entry \u2581and \u2581returns \u2581a \u2581nicely \u2581formatted \u2581 comment . \u2581It \u2581may \u2581fail \u2581if \u2581template"], "bleu": 0.05702335656014934, "rouge_l": 0.24729729729729732}
{"id": 222, "predictions": ["\u2581// \u2581check Post Response \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581response \u2581// \u2581 body ."], "references": ["\u2581// \u2581check Post Response \u2581checks \u2581the \u2581response \u2581of \u2581the \u2581HTTP \u2581 POST \u2581request \u2581that \u2581sends \u2581// \u2581 raft \u2581message ."], "bleu": 0.2405680447798904, "rouge_l": 0.48995983935742976}
{"id": 1832, "predictions": ["\u2581// \u2581request Raw \u2581returns \u2581a \u2581 slice \u2581of \u2581bytes \u2581for \u2581a \u2581request ."], "references": ["\u2581// \u2581request Raw \u2581makes \u2581a \u2581request \u2581with \u2581retries \u2581and \u2581returns \u2581the \u2581response \u2581 body . \u2581// \u2581Returns \u2581an \u2581error \u2581if \u2581the \u2581 exit \u2581 code \u2581is \u2581not \u2581one \u2581of \u2581the"], "bleu": 0.06496622227650835, "rouge_l": 0.26049822064056943}
{"id": 164, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 merge \u2581two \u2581 keys \u2581and \u2581their \u2581 contents \u2581of \u2581the \u2581 URL ."], "references": ["\u2581// \u2581urls Equal \u2581checks \u2581equality \u2581of \u2581 url . URL S \u2581between \u2581two \u2581arrays . \u2581// \u2581This \u2581check \u2581pass \u2581even \u2581if \u2581an \u2581 URL \u2581is \u2581in \u2581hostname \u2581and \u2581 opposite"], "bleu": 0.06418707653030953, "rouge_l": 0.2353697749196142}
{"id": 1560, "predictions": ["\u2581// \u2581 resolve \u2581 resolves \u2581the \u2581 experimental \u2581configuration \u2581for \u2581the \u2581 experimental \u2581 Kubernetes \u2581cluster"], "references": ["\u2581// \u2581 resolve \u2581 loads \u2581all \u2581of \u2581the \u2581clients \u2581we \u2581need \u2581and \u2581caches \u2581them \u2581for \u2581future \u2581calls ."], "bleu": 0.20551496929737734, "rouge_l": 0.34923664122137404}
{"id": 1081, "predictions": ["\u2581// \u2581 Cleanup \u2581 loads \u2581the \u2581 contents \u2581of \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 Cleanup \u2581all \u2581of \u2581the \u2581generated \u2581files"], "bleu": 0.1598921499894403, "rouge_l": 0.4277699859747546}
{"id": 1902, "predictions": ["\u2581// \u2581 get PR Build Data \u2581builds \u2581a \u2581 set \u2581of \u2581 readings \u2581from \u2581the \u2581given \u2581 Bucket Bucket Bucket ."], "references": ["\u2581// \u2581 get PR Build Data \u2581concurrently \u2581fetches \u2581metadata \u2581on \u2581each \u2581build \u2581of \u2581each \u2581job \u2581run \u2581on \u2581a \u2581 PR"], "bleu": 0.2988309778054086, "rouge_l": 0.3919678714859438}
{"id": 1508, "predictions": ["\u2581// \u2581 Filter Pre submit s \u2581returns \u2581a \u2581 filter \u2581that \u2581matches \u2581the \u2581given \u2581 filter , \u2581// \u2581and \u2581updates \u2581the \u2581 filter \u2581that \u2581matches \u2581the \u2581 filter ."], "references": ["\u2581// \u2581 Filter Pre submit s \u2581determines \u2581which \u2581 pre submit s \u2581should \u2581run \u2581and \u2581which \u2581should \u2581be \u2581skipped \u2581// \u2581by \u2581 evaluating \u2581the \u2581user - provided \u2581 filter ."], "bleu": 0.24852048249991399, "rouge_l": 0.4393351800554017}
{"id": 1310, "predictions": ["\u2581// \u2581Get Build ID \u2581returns \u2581the \u2581 ID \u2581of \u2581a \u2581Build ID"], "references": ["\u2581// \u2581Get Build ID \u2581calls \u2581out \u2581to \u2581` to t ` \u2581in \u2581order \u2581// \u2581to \u2581 v end \u2581build \u2581 identifier \u2581for \u2581the \u2581job"], "bleu": 0.11571869242514281, "rouge_l": 0.2620274914089347}
{"id": 1188, "predictions": ["\u2581// \u2581 Update Org \u2581updates \u2581the \u2581 org \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581 Update Org \u2581updates \u2581all \u2581 repos \u2581in \u2581the \u2581 org \u2581with \u2581the \u2581specified \u2581defaults"], "bleu": 0.37563621335595104, "rouge_l": 0.5928725701943846}
{"id": 1583, "predictions": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 form \u2581of \u2581 keys ."], "references": ["\u2581// \u2581 Len ses \u2581gets \u2581all \u2581 views \u2581of \u2581all \u2581artifact \u2581files \u2581matching \u2581each \u2581regexp \u2581with \u2581a \u2581registered \u2581len s"], "bleu": 0.12584668067442265, "rouge_l": 0.25523012552301255}
{"id": 1788, "predictions": ["\u2581// \u2581 Render \u2581 - \u2581 render \u2581a \u2581 page \u2581 page ."], "references": ["\u2581// \u2581 Render \u2581writes \u2581HTML \u2581representing \u2581 this \u2581 gcs Dir \u2581to \u2581the \u2581provided \u2581output ."], "bleu": 0.16234136350505612, "rouge_l": 0.4062153163152054}
{"id": 1528, "predictions": ["\u2581// \u2581Create Issue \u2581creates \u2581a \u2581new \u2581issue ."], "references": ["\u2581// \u2581Create Issue \u2581tries \u2581to \u2581create \u2581and \u2581return \u2581a \u2581new \u2581 github \u2581issue ."], "bleu": 0.19050491663203453, "rouge_l": 0.6065340909090908}
{"id": 106, "predictions": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581member ."], "references": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581member \u2581with \u2581the \u2581same \u2581server \u2581configuration . \u2581The \u2581returned \u2581// \u2581member \u2581will \u2581not \u2581 set \u2581 Peer Listeners \u2581and \u2581 Client Listeners ."], "bleu": 0.08446700144679672, "rouge_l": 0.38791732909379967}
{"id": 80, "predictions": ["\u2581// \u2581 Op Put \u2581creates \u2581a \u2581new \u2581operation ."], "references": ["\u2581// \u2581 Op Put \u2581returns \u2581\" put \" \u2581operation \u2581based \u2581on \u2581given \u2581 key - value \u2581and \u2581operation \u2581options ."], "bleu": 0.12586799654831038, "rouge_l": 0.38730158730158726}
{"id": 1194, "predictions": ["\u2581// \u2581reload Secret \u2581updates \u2581the \u2581 secret \u2581file \u2581and \u2581returns \u2581the \u2581current \u2581 secret ."], "references": ["\u2581// \u2581reload Secret \u2581will \u2581begin \u2581polling \u2581the \u2581 secret \u2581file \u2581at \u2581the \u2581 path . \u2581If \u2581the \u2581first \u2581load \u2581// \u2581fails , \u2581 Start \u2581with \u2581return \u2581the \u2581error \u2581and \u2581abort"], "bleu": 0.12466383462185707, "rouge_l": 0.41924398625429554}
{"id": 163, "predictions": ["\u2581// \u2581 resolve TCPAddr s \u2581returns \u2581a \u2581 slice \u2581of \u2581 URL \u2581 URL \u2581for \u2581the \u2581given \u2581logger ."], "references": ["\u2581// \u2581 resolve TCPAddr s \u2581is \u2581a \u2581convenience \u2581wrapper \u2581for \u2581 net . Resolve TCPAddr . \u2581// \u2581 resolve TCPAddr s \u2581return \u2581a \u2581new \u2581 set \u2581of \u2581 url ."], "bleu": 0.16788390368295686, "rouge_l": 0.392282958199357}
{"id": 1820, "predictions": ["\u2581// \u2581removed Blocking Pre submit s \u2581removes \u2581all \u2581 pre - signed \u2581 pre - signed \u2581 pre - existing \u2581 pre - existing \u2581 items \u2581from \u2581a \u2581 map"], "references": ["\u2581// \u2581removed Blocking Pre submit s \u2581determines \u2581stale \u2581blocking \u2581 pre submit s \u2581based \u2581on \u2581a \u2581// \u2581 config \u2581update . \u2581 Pre submit s \u2581that \u2581are \u2581no \u2581longer \u2581blocking"], "bleu": 0.2171788734284664, "rouge_l": 0.3333333333333333}
{"id": 1285, "predictions": ["\u2581// \u2581message Filter \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 filter \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 add \u2581// \u2581the \u2581 filter \u2581to \u2581the \u2581 filter ."], "references": ["\u2581// \u2581message Filter \u2581builds \u2581a \u2581 filter \u2581for \u2581jobs \u2581based \u2581on \u2581the \u2581message Body \u2581matching \u2581the \u2581 trigger \u2581regex \u2581of \u2581the \u2581jobs ."], "bleu": 0.1317213082746385, "rouge_l": 0.39278815196394073}
{"id": 1653, "predictions": ["\u2581// \u2581 filter Sub Pools \u2581returns \u2581a \u2581 map \u2581of \u2581 items \u2581that \u2581have \u2581a \u2581 filter \u2581that \u2581is \u2581// \u2581 active ."], "references": ["\u2581// \u2581 filter Sub pools \u2581filters \u2581non - pool \u2581 PR s \u2581out \u2581of \u2581the \u2581initially \u2581identified \u2581sub pools , \u2581// \u2581deleting \u2581any \u2581 pools \u2581that \u2581become \u2581 empty ."], "bleu": 0.13521543733863856, "rouge_l": 0.3685800604229607}
{"id": 158, "predictions": ["\u2581// \u2581 New Token Provider \u2581returns \u2581a \u2581new \u2581 Token Provider \u2581that \u2581uses \u2581the \u2581given \u2581// \u2581 token Opts \u2581and \u2581the \u2581given \u2581 token Opts \u2581and \u2581the \u2581provided \u2581 token"], "references": ["\u2581// \u2581 New Token Provider \u2581creates \u2581a \u2581new \u2581 token \u2581provider ."], "bleu": 0.19965747160974665, "rouge_l": 0.4644670050761421}
{"id": 1363, "predictions": ["\u2581// \u2581 Handle Login \u2581is \u2581used \u2581to \u2581 add \u2581a \u2581 login \u2581session \u2581to \u2581the \u2581 oauth ."], "references": ["\u2581// \u2581 Handle Login \u2581handles \u2581GitHub \u2581 login \u2581request \u2581from \u2581front - end . \u2581It \u2581starts \u2581a \u2581new \u2581 git \u2581 oauth \u2581session \u2581and \u2581// \u2581redirect \u2581user \u2581to \u2581GitHub \u2581OAuth"], "bleu": 0.13929297913764602, "rouge_l": 0.3588235294117647}
{"id": 948, "predictions": ["\u2581// \u2581process Logs \u2581is \u2581called \u2581when \u2581a \u2581log \u2581is \u2581not \u2581available ."], "references": ["\u2581// \u2581process Logs \u2581is \u2581used \u2581to \u2581 apply \u2581all \u2581the \u2581committed \u2581entries \u2581that \u2581haven ' t \u2581been \u2581// \u2581applied \u2581up \u2581to \u2581the \u2581given \u2581index \u2581limit . \u2581// \u2581This \u2581can \u2581be"], "bleu": 0.06753354994476571, "rouge_l": 0.22101449275362317}
{"id": 568, "predictions": ["\u2581// \u2581 set Command Func \u2581sets \u2581the \u2581 set \u2581of \u2581arguments \u2581to \u2581 set \u2581the \u2581 content \u2581of \u2581the \u2581 auth \u2581client"], "references": ["\u2581// \u2581 set Command Func \u2581executes \u2581the \u2581\" set \" \u2581command ."], "bleu": 0.21800193956058223, "rouge_l": 0.43482688391038704}
{"id": 1633, "predictions": ["\u2581// \u2581 Run \u2581the \u2581 container"], "references": ["\u2581// \u2581 Run \u2581will \u2581start \u2581the \u2581 init upload \u2581job \u2581to \u2581upload \u2581the \u2581artifacts , \u2581logs \u2581and \u2581clone \u2581 status ."], "bleu": 0.04013324562376129, "rouge_l": 0.33664459161147897}
{"id": 1997, "predictions": ["\u2581// \u2581Get Container Log file \u2581returns \u2581the \u2581 contents \u2581of \u2581a \u2581 container"], "references": ["\u2581// \u2581Get Container Log file \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581requested \u2581 logfile \u2581// \u2581// \u2581Note \u2581that \u2581it ' s \u2581the \u2581caller ' s \u2581responsibility \u2581to \u2581 close \u2581the"], "bleu": 0.16937453175168252, "rouge_l": 0.43416370106761565}
{"id": 555, "predictions": ["\u2581// \u2581 expire Exists \u2581checks \u2581if \u2581the \u2581 Lease \u2581is \u2581expired \u2581or \u2581not ."], "references": ["\u2581// \u2581 expire Exists \u2581returns \u2581true \u2581if \u2581expiry \u2581 items \u2581exist . \u2581// \u2581It \u2581 pop s \u2581only \u2581when \u2581expiry \u2581item \u2581 exists . \u2581// \u2581\" next \" \u2581is \u2581true"], "bleu": 0.09087426552401023, "rouge_l": 0.2986013986013986}
{"id": 1141, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581convert \u2581fields \u2581to \u2581 this \u2581 slice \u2581of \u2581fields ."], "references": ["\u2581// \u2581 ProwJob Fields \u2581extracts \u2581logrus \u2581fields \u2581from \u2581a \u2581 p row job \u2581useful \u2581for \u2581logging ."], "bleu": 0.11267270561269, "rouge_l": 0.3090172239108409}
{"id": 1030, "predictions": ["\u2581// \u2581build \u2581a \u2581 name \u2581for \u2581a \u2581 name"], "references": ["\u2581// build RouteName \u2581builds \u2581a \u2581 route \u2581based \u2581on \u2581the \u2581 path \u2581passed ."], "bleu": 0.12109261383365659, "rouge_l": 0.3347050754458162}
{"id": 856, "predictions": ["\u2581// \u2581 Observe \u2581 marks \u2581the \u2581 Raft \u2581 data \u2581from \u2581the \u2581 Raft \u2581state ."], "references": ["\u2581// \u2581 observe \u2581sends \u2581an \u2581observation \u2581to \u2581every \u2581observer ."], "bleu": 0.10878661088699644, "rouge_l": 0.24078947368421053}
{"id": 1537, "predictions": ["\u2581// \u2581create System d Log file \u2581creates \u2581a \u2581 systemd \u2581log \u2581file \u2581for \u2581a \u2581service"], "references": ["\u2581// \u2581Create \u2581 logfile \u2581for \u2581 systemd \u2581service \u2581in \u2581 outputDir \u2581with \u2581the \u2581given \u2581journal ctl \u2581output Mode ."], "bleu": 0.09860814573660683, "rouge_l": 0.23040604343720492}
{"id": 1295, "predictions": ["\u2581// \u2581request \u2581returns \u2581a \u2581http . Response \u2581with \u2581the \u2581given \u2581 URL \u2581and \u2581 path ."], "references": ["\u2581// \u2581request \u2581executes \u2581a \u2581request \u2581with \u2581the \u2581provided \u2581method \u2581and \u2581 path . \u2581// \u2581It \u2581retries \u2581on \u2581transport \u2581failures \u2581and \u2581500 s . \u2581measure \u2581is \u2581provided \u2581// \u2581to \u2581 enable"], "bleu": 0.12293235893999263, "rouge_l": 0.370945945945946}
{"id": 1464, "predictions": ["\u2581// \u2581 Read Tail \u2581reads \u2581the \u2581 contents \u2581of \u2581an \u2581artifact \u2581into \u2581a \u2581 GCS Artifact"], "references": ["\u2581// \u2581 Read Tail \u2581reads \u2581the \u2581last \u2581 n \u2581bytes \u2581from \u2581a \u2581file \u2581in \u2581 GCS"], "bleu": 0.4052127766461669, "rouge_l": 0.625}
{"id": 13, "predictions": ["\u2581// \u2581 apply Compare \u2581compares \u2581 data \u2581to \u2581 b ."], "references": ["\u2581// \u2581 apply Compare \u2581applies \u2581the \u2581compare \u2581request . \u2581// \u2581If \u2581the \u2581comparison \u2581succeeds , \u2581it \u2581returns \u2581true . \u2581Otherwise , \u2581returns \u2581false ."], "bleu": 0.1017722551082467, "rouge_l": 0.2677787532923617}
{"id": 197, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581 z Tree \u2581from \u2581the \u2581 Interval Tree"], "references": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581node \u2581with \u2581the \u2581given \u2581interval \u2581from \u2581the \u2581tree , \u2581returning \u2581// \u2581true \u2581if \u2581a \u2581node \u2581is \u2581in \u2581fact \u2581removed ."], "bleu": 0.08729682786613689, "rouge_l": 0.29877551020408166}
{"id": 1244, "predictions": ["\u2581// \u2581 Run Requested \u2581runs \u2581the \u2581given \u2581pull \u2581job \u2581and \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581// \u2581API ."], "references": ["\u2581// \u2581 Run Requested \u2581executes \u2581the \u2581 config . Pre submit s \u2581that \u2581are \u2581requested"], "bleu": 0.21314568971111159, "rouge_l": 0.4206896551724138}
{"id": 488, "predictions": ["\u2581// \u2581user AddCommand Func \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581command \u2581to \u2581 add \u2581a \u2581user \u2581to \u2581the \u2581command"], "references": ["\u2581// \u2581user AddCommand Func \u2581executes \u2581the \u2581\" user \u2581 add \" \u2581command ."], "bleu": 0.21951524426618454, "rouge_l": 0.5174973488865324}
{"id": 419, "predictions": ["\u2581// \u2581is To r n Entry \u2581returns \u2581true \u2581if \u2581the \u2581 data \u2581is \u2581a \u2581 r \u2581entry ."], "references": ["\u2581// \u2581is To r n Entry \u2581determines \u2581whether \u2581the \u2581last \u2581entry \u2581of \u2581the \u2581 WAL \u2581was \u2581partial ly \u2581written \u2581// \u2581and \u2581 corrupt ed \u2581because \u2581of \u2581a \u2581to r n"], "bleu": 0.19201689376060707, "rouge_l": 0.3986928104575163}
{"id": 537, "predictions": ["\u2581// \u2581cancel Watcher \u2581 marks \u2581the \u2581given \u2581 watch \u2581watcher \u2581and \u2581 marks \u2581it \u2581to \u2581the \u2581 watch . \u2581// \u2581 All \u2581 items \u2581are \u2581 held \u2581by \u2581 this"], "references": ["\u2581// \u2581cancel Watcher \u2581removes \u2581references \u2581of \u2581the \u2581watcher \u2581from \u2581the \u2581 watch able Store"], "bleu": 0.11563084454999199, "rouge_l": 0.3891547049441786}
{"id": 640, "predictions": ["\u2581// \u2581 Delete Expired Keys \u2581deletes \u2581the \u2581 keys \u2581of \u2581the \u2581 active \u2581 keys ."], "references": ["\u2581// \u2581 Delete Expired Keys \u2581will \u2581delete \u2581all \u2581expired \u2581 keys"], "bleu": 0.3168900267453786, "rouge_l": 0.53643216080402}
{"id": 160, "predictions": ["\u2581// \u2581 remove Peer \u2581removes \u2581the \u2581peer \u2581from \u2581the \u2581 Transport ."], "references": ["\u2581// \u2581the \u2581caller \u2581of \u2581 this \u2581function \u2581must \u2581have \u2581the \u2581peers \u2581 mutex ."], "bleu": 0.12029921003317644, "rouge_l": 0.3793532338308458}
{"id": 495, "predictions": ["\u2581// \u2581open Backend \u2581returns \u2581a \u2581backend \u2581that \u2581will \u2581 write \u2581the \u2581backend \u2581to \u2581the \u2581// \u2581 config ."], "references": ["\u2581// \u2581open Backend \u2581returns \u2581a \u2581backend \u2581using \u2581the \u2581current \u2581etcd \u2581 db ."], "bleu": 0.3370129264673147, "rouge_l": 0.5980392156862745}
{"id": 1240, "predictions": ["\u2581// \u2581 Metric \u2581returns \u2581the \u2581metric \u2581 data \u2581for \u2581the \u2581given \u2581 entity ."], "references": ["\u2581// \u2581 Metric \u2581returns \u2581a \u2581metric \u2581object \u2581with \u2581metrics \u2581filled \u2581in"], "bleu": 0.25748661016289676, "rouge_l": 0.40884718498659517}
{"id": 844, "predictions": ["\u2581// \u2581 listen \u2581for \u2581incoming \u2581connections ."], "references": ["\u2581// \u2581 listen \u2581is \u2581used \u2581to \u2581handling \u2581incoming \u2581connections ."], "bleu": 0.3257195287655278, "rouge_l": 0.6841121495327103}
{"id": 198, "predictions": ["\u2581// \u2581 Insert \u2581inserts \u2581a \u2581new \u2581 Interval \u2581to \u2581the \u2581 Interval Tree"], "references": ["\u2581// \u2581 Insert \u2581adds \u2581a \u2581node \u2581with \u2581the \u2581given \u2581interval \u2581into \u2581the \u2581tree ."], "bleu": 0.18218265528203464, "rouge_l": 0.36791314837153194}
{"id": 924, "predictions": ["\u2581// \u2581check Configuration \u2581ensures \u2581that \u2581the \u2581configuration \u2581configuration \u2581is \u2581valid ."], "references": ["\u2581// \u2581check Configuration \u2581tests \u2581a \u2581cluster \u2581membership \u2581configuration \u2581for \u2581common \u2581// \u2581errors ."], "bleu": 0.19561803044642362, "rouge_l": 0.41049798115746977}
{"id": 1950, "predictions": ["\u2581// \u2581 Images Get By NodeID \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581images \u2581in \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Images Get By NodeID \u2581returns \u2581all \u2581images \u2581that \u2581the \u2581 LXD \u2581node \u2581instance \u2581has \u2581with \u2581the \u2581given \u2581node \u2581 id ."], "bleu": 0.29087513684413696, "rouge_l": 0.5070656691604322}
{"id": 1210, "predictions": ["\u2581// \u2581Make Fake Repo \u2581creates \u2581a \u2581new \u2581repo \u2581 path ."], "references": ["\u2581// \u2581Make Fake Repo \u2581creates \u2581the \u2581given \u2581repo \u2581and \u2581makes \u2581an \u2581initial \u2581commit ."], "bleu": 0.3413204028714309, "rouge_l": 0.5481386392811297}
{"id": 1664, "predictions": ["\u2581// \u2581 New Storage \u2581returns \u2581a \u2581new \u2581storage \u2581storage \u2581storage ."], "references": ["\u2581// \u2581 New Storage \u2581instantiate s \u2581a \u2581new \u2581 Storage \u2581with \u2581a \u2581 Persistence Layer \u2581implementation \u2581// \u2581If \u2581storage \u2581string \u2581is \u2581not \u2581 empty , \u2581it \u2581will \u2581read \u2581resource \u2581"], "bleu": 0.06701988620057787, "rouge_l": 0.3151291512915129}
{"id": 1889, "predictions": ["\u2581// \u2581new GCS Job Source \u2581creates \u2581a \u2581 GCS Job Source \u2581from \u2581a \u2581source \u2581 name ."], "references": ["\u2581// \u2581new GCS Job Source \u2581creates \u2581a \u2581new \u2581 gcs Job Source \u2581from \u2581a \u2581given \u2581bucket \u2581and \u2581job Prefix"], "bleu": 0.47997598873207786, "rouge_l": 0.6600541027953111}
{"id": 472, "predictions": ["\u2581// \u2581 write KeyError \u2581writes \u2581an \u2581error \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 write KeyError \u2581logs \u2581and \u2581writes \u2581the \u2581given \u2581 Error \u2581to \u2581the \u2581 ResponseWriter . \u2581// \u2581If \u2581 Error \u2581is \u2581not \u2581an \u2581etcd Err , \u2581the \u2581error \u2581will \u2581be"], "bleu": 0.13779710754144425, "rouge_l": 0.44202898550724634}
{"id": 541, "predictions": ["\u2581// \u2581 kvs To Events \u2581converts \u2581the \u2581 contents \u2581of \u2581a \u2581 slice \u2581into \u2581a \u2581 slice \u2581of \u2581// \u2581 blobs ."], "references": ["\u2581// \u2581 kvs To Events \u2581gets \u2581all \u2581events \u2581for \u2581the \u2581 watchers \u2581from \u2581all \u2581 key - value \u2581pairs"], "bleu": 0.23498697990013487, "rouge_l": 0.39546191247974066}
{"id": 533, "predictions": ["\u2581// \u2581 get \u2581returns \u2581the \u2581current \u2581 set \u2581of \u2581 items \u2581that \u2581are \u2581stored \u2581in \u2581the \u2581 key ."], "references": ["\u2581// \u2581 get \u2581gets \u2581the \u2581modified , \u2581created \u2581revision \u2581and \u2581version \u2581of \u2581the \u2581 key \u2581that \u2581 satisfies \u2581the \u2581given \u2581at Rev . \u2581// \u2581 Rev \u2581must \u2581be \u2581higher \u2581than"], "bleu": 0.11342237832301029, "rouge_l": 0.35305466237942124}
{"id": 814, "predictions": ["\u2581// \u2581 seek Total \u2581returns \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581transaction ."], "references": ["\u2581// \u2581 seek Total \u2581ret r ive s \u2581the \u2581total \u2581of \u2581all \u2581accounts \u2581by \u2581 seeking \u2581for \u2581each \u2581account \u2581 key ."], "bleu": 0.15409434368665487, "rouge_l": 0.4368845120859445}
{"id": 567, "predictions": ["\u2581// \u2581 New Set Command \u2581returns \u2581a \u2581command \u2581to \u2581 set \u2581the \u2581 cli \u2581flags \u2581for \u2581the \u2581 key"], "references": ["\u2581// \u2581 New Set Command \u2581returns \u2581the \u2581CLI \u2581command \u2581for \u2581\" set \" ."], "bleu": 0.3264128346656048, "rouge_l": 0.49846782431052095}
{"id": 1838, "predictions": ["\u2581// \u2581 Is Merge able \u2581checks \u2581if \u2581the \u2581given \u2581 SHA 4 \u2581 contains \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Is Merge able \u2581determines \u2581if \u2581a \u2581 PR \u2581can \u2581be \u2581merged . \u2581// \u2581 Merge ability \u2581is \u2581calculated \u2581by \u2581a \u2581background \u2581job \u2581on \u2581GitHub \u2581and \u2581is \u2581not \u2581immediately"], "bleu": 0.15022005249274362, "rouge_l": 0.3138263665594856}
{"id": 673, "predictions": ["\u2581// \u2581 encode Entry \u2581encodes \u2581a \u2581 Entry \u2581entry \u2581into \u2581the \u2581buffer ."], "references": ["\u2581// \u2581Encodes \u2581 e \u2581to \u2581buf . \u2581Returns \u2581number \u2581of \u2581bytes \u2581written ."], "bleu": 0.1135935489027116, "rouge_l": 0.23076923076923084}
{"id": 1225, "predictions": ["\u2581// \u2581 Upload \u2581 uploads \u2581the \u2581upload \u2581to \u2581upload ."], "references": ["\u2581// \u2581 Upload \u2581 uploads \u2581all \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581// \u2581upload Targets \u2581 map \u2581to \u2581 GCS \u2581in \u2581parallel . \u2581The \u2581 map \u2581is \u2581// \u2581keyed \u2581on"], "bleu": 0.07100150482848158, "rouge_l": 0.4127819548872181}
{"id": 1744, "predictions": ["\u2581// \u2581 Fetch Issue Events \u2581fetches \u2581the \u2581events \u2581from \u2581the \u2581specified \u2581issue ."], "references": ["\u2581// \u2581 Fetch Issue Events \u2581from \u2581 github \u2581and \u2581return \u2581the \u2581full \u2581list , \u2581until \u2581it \u2581matches \u2581' latest ' \u2581// \u2581The \u2581entire \u2581last \u2581 page \u2581will \u2581be \u2581included \u2581so"], "bleu": 0.1016776327105769, "rouge_l": 0.30391459074733096}
{"id": 176, "predictions": ["\u2581// \u2581lease KeepAlive Command Func \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581lease \u2581 alive"], "references": ["\u2581// \u2581lease KeepAlive Command Func \u2581executes \u2581the \u2581\" lease \u2581keep - alive \" \u2581command ."], "bleu": 0.3239315891946681, "rouge_l": 0.4797752808988765}
{"id": 251, "predictions": ["\u2581// \u2581 Process \u2581is \u2581part \u2581of \u2581the \u2581 raft . Server \u2581interface ."], "references": ["\u2581// \u2581 Process \u2581takes \u2581a \u2581 raft \u2581message \u2581and \u2581applies \u2581it \u2581to \u2581the \u2581server ' s \u2581 raft \u2581state \u2581// \u2581machine , \u2581respect ing \u2581any \u2581timeout \u2581of \u2581the \u2581given \u2581context"], "bleu": 0.06496622227650835, "rouge_l": 0.26049822064056943}
{"id": 1548, "predictions": ["\u2581// \u2581 SetDefault s \u2581sets \u2581the \u2581default \u2581values \u2581for \u2581the \u2581 config ."], "references": ["\u2581// \u2581 SetDefault s \u2581sets \u2581default \u2581options \u2581for \u2581 config \u2581updating"], "bleu": 0.4160751652217845, "rouge_l": 0.7614424410540915}
{"id": 1531, "predictions": ["\u2581// \u2581Get Collaborator s \u2581returns \u2581a \u2581list \u2581of \u2581 collaborator s \u2581in \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581Get Collaborator s \u2581returns \u2581all \u2581 github \u2581users \u2581who \u2581are \u2581members \u2581or \u2581outside \u2581 collaborator s \u2581of \u2581the \u2581repo ."], "bleu": 0.2918186599890913, "rouge_l": 0.5165114309906859}
{"id": 386, "predictions": ["\u2581// \u2581Add Member \u2581adds \u2581a \u2581member \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581Add Member \u2581adds \u2581a \u2581new \u2581 Member \u2581into \u2581the \u2581cluster , \u2581and \u2581saves \u2581the \u2581given \u2581member ' s \u2581// \u2581 raft Attributes \u2581into \u2581the \u2581store . \u2581The \u2581given \u2581member"], "bleu": 0.07431266990320709, "rouge_l": 0.3669172932330827}
{"id": 1394, "predictions": ["\u2581// \u2581 Mark And Sweep \u2581will \u2581 mark \u2581the \u2581 ingress \u2581 Gateway \u2581and \u2581 releases \u2581the \u2581 ingress \u2581// \u2581and \u2581 releases \u2581the \u2581 ingress \u2581 data"], "references": ["\u2581// \u2581 Mark And Sweep \u2581looks \u2581at \u2581the \u2581provided \u2581 set , \u2581and \u2581removes \u2581resources \u2581older \u2581than \u2581its \u2581 TTL \u2581that \u2581have \u2581been \u2581previously \u2581 tagged ."], "bleu": 0.184464457323676, "rouge_l": 0.36483253588516745}
{"id": 918, "predictions": ["\u2581// \u2581 Wait T il Up \u2581waits \u2581for \u2581all \u2581nodes \u2581in \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Wait T il Up toDate \u2581blocks \u2581until \u2581all \u2581nodes \u2581in \u2581the \u2581cluster \u2581have \u2581 gotten \u2581their \u2581// \u2581commit ed Index \u2581 upto \u2581the \u2581 Index \u2581from \u2581the \u2581last"], "bleu": 0.1892433981249229, "rouge_l": 0.47758007117437723}
{"id": 787, "predictions": ["\u2581// \u2581 get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581 get \u2581returns \u2581value \u2581for \u2581a \u2581given \u2581 key \u2581or \u2581the \u2581 key \u2581after \u2581that . \u2581If \u2581not \u2581found , \u2581return \u2581nil ."], "bleu": 0.1819747511129052, "rouge_l": 0.49233252623083124}
{"id": 735, "predictions": ["\u2581// \u2581 ToList \u2581implements \u2581 Stream List ."], "references": ["\u2581// \u2581 ToList \u2581is \u2581a \u2581default \u2581implementation \u2581of \u2581 Key ToList . \u2581It \u2581pick s \u2581up \u2581all \u2581valid \u2581versions \u2581of \u2581the \u2581 key , \u2581// \u2581skipping \u2581over \u2581deleted \u2581or \u2581expired"], "bleu": 0.02111642300649355, "rouge_l": 0.23828125}
{"id": 894, "predictions": ["\u2581// \u2581 Read Peers JSON \u2581reads \u2581the \u2581 config \u2581file \u2581from \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Read Peers JSON \u2581 consume s \u2581a \u2581legacy \u2581peers . json \u2581file \u2581in \u2581the \u2581 format \u2581of \u2581the \u2581old \u2581JSON \u2581// \u2581peer \u2581store \u2581and \u2581creates \u2581a \u2581new -"], "bleu": 0.14619203591550758, "rouge_l": 0.370945945945946}
{"id": 1600, "predictions": ["\u2581// \u2581Validate Controller \u2581validates \u2581the \u2581 controller \u2581 URL"], "references": ["\u2581// \u2581Validate Controller \u2581validates \u2581the \u2581provided \u2581 controller \u2581 config ."], "bleu": 0.5269148435889403, "rouge_l": 0.7858293075684382}
{"id": 325, "predictions": ["\u2581// \u2581 replay WAL \u2581is \u2581part \u2581of \u2581the \u2581 raft . Node \u2581interface ."], "references": ["\u2581// \u2581 replay WAL \u2581 replay s \u2581 WAL \u2581entries \u2581into \u2581the \u2581 raft \u2581instance ."], "bleu": 0.2937601590012107, "rouge_l": 0.5269978401727862}
{"id": 1935, "predictions": ["\u2581// \u2581 Image Aliases Get \u2581returns \u2581a \u2581list \u2581of \u2581 aliases \u2581that \u2581are \u2581 owned \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Aliases Get \u2581returns \u2581the \u2581names \u2581of \u2581the \u2581 aliases \u2581of \u2581all \u2581images ."], "bleu": 0.346697783111003, "rouge_l": 0.5803996194100857}
{"id": 1803, "predictions": ["\u2581// \u2581create REST Config \u2581returns \u2581a \u2581REST \u2581representation \u2581of \u2581the \u2581 Kubernetes \u2581 kubeconfig \u2581file ."], "references": ["\u2581// \u2581create REST Config \u2581for \u2581cluster \u2581API \u2581server , \u2581pass \u2581 empty \u2581 config \u2581file \u2581for \u2581in - cluster"], "bleu": 0.1996172379724422, "rouge_l": 0.39391143911439114}
{"id": 1383, "predictions": ["\u2581// \u2581 NewClient In Cluster \u2581returns \u2581a \u2581new \u2581 Client \u2581for \u2581the \u2581given \u2581namespace \u2581and \u2581 URL ."], "references": ["\u2581// \u2581 NewClient In Cluster \u2581creates \u2581a \u2581 Client \u2581that \u2581works \u2581from \u2581within \u2581a \u2581pod ."], "bleu": 0.2966090320349725, "rouge_l": 0.5350877192982456}
{"id": 884, "predictions": ["\u2581// \u2581 set Previous Log \u2581stores \u2581the \u2581current \u2581log \u2581entry \u2581to \u2581the \u2581current \u2581 Raft \u2581log ."], "references": ["\u2581// \u2581 set Previous Log \u2581is \u2581used \u2581to \u2581setup \u2581the \u2581 Prev LogEntry \u2581and \u2581 Prev Log Term \u2581for \u2581an \u2581// \u2581 Append Entries Request \u2581given \u2581the \u2581next \u2581index \u2581to"], "bleu": 0.139941685558328, "rouge_l": 0.3242524916943521}
{"id": 2022, "predictions": ["\u2581// \u2581 Profiles \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581profiles \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Profiles \u2581returns \u2581a \u2581string \u2581list \u2581of \u2581profiles ."], "bleu": 0.3850322886878712, "rouge_l": 0.7732394366197185}
{"id": 895, "predictions": ["\u2581// \u2581 Read Config JSON \u2581reads \u2581the \u2581 config \u2581file \u2581from \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Read Config JSON \u2581reads \u2581a \u2581new - style \u2581peers . json \u2581and \u2581returns \u2581a \u2581configuration \u2581// \u2581structure . \u2581This \u2581can \u2581be \u2581used \u2581to \u2581perform \u2581manual \u2581recovery \u2581when \u2581running"], "bleu": 0.15009391540027314, "rouge_l": 0.2885135135135135}
{"id": 162, "predictions": ["\u2581// \u2581 resolve TCPAddr Default \u2581returns \u2581a \u2581 net . TCPAddr \u2581for \u2581a \u2581 net . TCPAddr \u2581// \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 resolve \u2581the \u2581 IP \u2581address"], "references": ["\u2581// \u2581taken \u2581from \u2581go ' s \u2581 Resolve TCP \u2581 code \u2581but \u2581uses \u2581 configurable \u2581 ctx"], "bleu": 0.05495757364749458, "rouge_l": 0.2281226626776365}
{"id": 432, "predictions": ["\u2581// \u2581Redis Command Func \u2581 - \u2581 add \u2581a \u2581 set \u2581of \u2581arguments \u2581to \u2581the \u2581 app ' s \u2581 key ."], "references": ["\u2581// \u2581rm Command Func \u2581executes \u2581the \u2581\" rm \" \u2581command ."], "bleu": 0.0866852806734874, "rouge_l": 0.3224101479915434}
{"id": 845, "predictions": ["\u2581// \u2581handle Conn \u2581is \u2581used \u2581to \u2581handle \u2581a \u2581connection \u2581to \u2581a \u2581 raft \u2581connection ."], "references": ["\u2581// \u2581handle Conn \u2581is \u2581used \u2581to \u2581handle \u2581an \u2581 inbound \u2581connection \u2581for \u2581its \u2581 lifespan . \u2581The \u2581// \u2581handler \u2581will \u2581 exit \u2581when \u2581the \u2581passed \u2581context \u2581is \u2581cancelled \u2581or \u2581the"], "bleu": 0.1764159532231498, "rouge_l": 0.41924398625429554}
{"id": 1742, "predictions": ["\u2581// \u2581 Fetch Issues \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 repositories \u2581that \u2581have \u2581been \u2581 set \u2581to \u2581// \u2581the \u2581given \u2581time ."], "references": ["\u2581// \u2581 Fetch Issues \u2581from \u2581GitHub , \u2581until \u2581' latest ' \u2581time"], "bleu": 0.16133948681475338, "rouge_l": 0.31059063136456216}
{"id": 1628, "predictions": ["\u2581// \u2581 Send Hook \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581 Request ."], "references": ["\u2581// \u2581 Send Hook \u2581sends \u2581a \u2581GitHub \u2581event \u2581of \u2581 type \u2581eventType \u2581to \u2581the \u2581provided \u2581address ."], "bleu": 0.3608235085882498, "rouge_l": 0.6019736842105263}
{"id": 1804, "predictions": ["\u2581// \u2581register Resource \u2581creates \u2581a \u2581resource \u2581resource ."], "references": ["\u2581// \u2581register Resource \u2581sends \u2581a \u2581request \u2581to \u2581create \u2581 CRD s \u2581and \u2581waits \u2581for \u2581them \u2581to \u2581initialize"], "bleu": 0.10245981675678217, "rouge_l": 0.3004926108374384}
{"id": 1807, "predictions": ["\u2581// \u2581 Trusted PullRequest \u2581returns \u2581a \u2581list \u2581of \u2581 trusted \u2581images \u2581for \u2581a \u2581given \u2581image ."], "references": ["\u2581// \u2581 Trusted PullRequest \u2581returns \u2581whether \u2581or \u2581not \u2581the \u2581given \u2581 PR \u2581should \u2581be \u2581tested . \u2581// \u2581It \u2581first \u2581checks \u2581if \u2581the \u2581 author \u2581is \u2581in \u2581the \u2581 org ,"], "bleu": 0.12998514369010894, "rouge_l": 0.2885135135135135}
{"id": 1364, "predictions": ["\u2581// \u2581 Handle Logout \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 logout \u2581request ."], "references": ["\u2581// \u2581 Handle Logout \u2581handles \u2581GitHub \u2581 logout \u2581request \u2581from \u2581front - end . \u2581It \u2581invalidate s \u2581cookie \u2581sessions \u2581and \u2581// \u2581redirect \u2581back \u2581to \u2581the \u2581front \u2581 page ."], "bleu": 0.12472517766947791, "rouge_l": 0.3500717360114778}
{"id": 1385, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Cloud \u2581 Client \u2581instance ."], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581an \u2581authenticated \u2581 Client \u2581using \u2581the \u2581 keys \u2581in \u2581the \u2581 Cluster ."], "bleu": 0.2334831726572945, "rouge_l": 0.4682017543859649}
{"id": 933, "predictions": ["\u2581// \u2581check RPC Header \u2581checks \u2581if \u2581the \u2581RPC \u2581header \u2581is \u2581valid ."], "references": ["\u2581// \u2581check RPC Header \u2581 house s \u2581logic \u2581about \u2581whether \u2581 this \u2581instance \u2581of \u2581 Raft \u2581can \u2581process \u2581// \u2581the \u2581given \u2581RPC \u2581message ."], "bleu": 0.11964691478965164, "rouge_l": 0.3668384879725086}
{"id": 1031, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 empty \u2581 group ."], "references": ["\u2581// \u2581 New \u2581 mailer \u2581generator . \u2581It \u2581will \u2581 init \u2581the \u2581 mailer s \u2581directory \u2581if \u2581it \u2581doesn ' t \u2581already \u2581exist"], "bleu": 0.08190914903219249, "rouge_l": 0.27651858567543064}
{"id": 1927, "predictions": ["\u2581// \u2581 ImageSource Get \u2581returns \u2581the \u2581 info \u2581of \u2581the \u2581given \u2581image ."], "references": ["\u2581// \u2581 ImageSource Get \u2581returns \u2581the \u2581image \u2581source \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.4761663737003947, "rouge_l": 0.6622436670687575}
{"id": 1112, "predictions": ["\u2581// \u2581Add Label \u2581adds \u2581a \u2581new \u2581 label \u2581to \u2581the \u2581current \u2581release ."], "references": ["\u2581// \u2581Add Label \u2581adds \u2581a \u2581 label"], "bleu": 0.3934995962231127, "rouge_l": 0.7400346620450605}
{"id": 1154, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581the \u2581field \u2581values \u2581on \u2581 T id e Context Policy \u2581with \u2581the \u2581rules \u2581defined \u2581in \u2581// \u2581the \u2581proto \u2581definition \u2581for \u2581 this \u2581message . \u2581If \u2581any \u2581rules"], "references": ["\u2581// \u2581Validate \u2581returns \u2581an \u2581error \u2581if \u2581any \u2581 contexts \u2581are \u2581listed \u2581more \u2581than \u2581once \u2581in \u2581the \u2581 config ."], "bleu": 0.06987283777978615, "rouge_l": 0.297768479776848}
{"id": 425, "predictions": ["\u2581// \u2581 New Check Perf Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Check Perf Command"], "references": ["\u2581// \u2581 New Check Perf Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" check \u2581 perf \" ."], "bleu": 0.39954799026548116, "rouge_l": 0.523854961832061}
{"id": 1533, "predictions": ["\u2581// \u2581Get Issues \u2581returns \u2581a \u2581list \u2581of \u2581 Issue s \u2581for \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581Get Issues \u2581gets \u2581all \u2581the \u2581issues \u2581in \u2581a \u2581repo \u2581that \u2581 meet \u2581the \u2581list \u2581options ."], "bleu": 0.16410501441288758, "rouge_l": 0.4326241134751773}
{"id": 309, "predictions": ["\u2581// \u2581 Dispatch \u2581is \u2581a \u2581 helper \u2581to \u2581 watch \u2581events \u2581from \u2581the \u2581stream ."], "references": ["\u2581// \u2581 dispatchEvent \u2581sends \u2581a \u2581 Watch Response \u2581to \u2581the \u2581appropriate \u2581watcher \u2581stream"], "bleu": 0.15310245441182443, "rouge_l": 0.5065243179122182}
{"id": 307, "predictions": ["\u2581// \u2581 Request Progress \u2581implements \u2581the \u2581 notify \u2581method \u2581of \u2581the \u2581 watch . Interface ."], "references": ["\u2581// \u2581 Request Progress \u2581requests \u2581a \u2581progress \u2581 notify \u2581response \u2581be \u2581sent \u2581in \u2581all \u2581 watch \u2581channels ."], "bleu": 0.24865189035154486, "rouge_l": 0.523854961832061}
{"id": 44, "predictions": ["\u2581// \u2581 get Iface Link Message \u2581returns \u2581a \u2581 net link Message \u2581from \u2581a \u2581 net . Net link"], "references": ["\u2581// \u2581 Used \u2581to \u2581 get \u2581a \u2581 name \u2581of \u2581interface ."], "bleu": 0.12879862858915844, "rouge_l": 0.40352811466372657}
{"id": 1534, "predictions": ["\u2581// \u2581Get Repo Labels \u2581returns \u2581the \u2581list \u2581of \u2581 label \u2581for \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581Get Repo Labels \u2581gets \u2581all \u2581the \u2581labels \u2581that \u2581valid \u2581in \u2581the \u2581specified \u2581repo ."], "bleu": 0.25748661016289676, "rouge_l": 0.4666666666666668}
{"id": 518, "predictions": ["\u2581// \u2581 merge \u2581merges \u2581the \u2581 data \u2581into \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 merge \u2581merges \u2581 data \u2581from \u2581bb \u2581into \u2581bb src ."], "bleu": 0.35453206016838706, "rouge_l": 0.6902404526166903}
{"id": 1446, "predictions": ["\u2581// \u2581 write Template \u2581writes \u2581a \u2581template \u2581to \u2581the \u2581given \u2581template ."], "references": ["\u2581// \u2581Writes \u2581the \u2581 golang \u2581 text \u2581template \u2581at \u2581 templatePath \u2581to \u2581 outputPath \u2581using \u2581the \u2581given \u2581 data"], "bleu": 0.094311410533197, "rouge_l": 0.3719512195121951}
{"id": 1718, "predictions": ["\u2581// \u2581new PipelineConfig \u2581returns \u2581a \u2581 watch . PipelineConfig \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 watch \u2581// \u2581the \u2581configuration \u2581of \u2581the \u2581 controller ."], "references": ["\u2581// \u2581new PipelineConfig \u2581returns \u2581a \u2581client \u2581and \u2581 informer \u2581 capable \u2581of \u2581 mutating \u2581and \u2581 monitoring \u2581the \u2581specified \u2581 config ."], "bleu": 0.22067731046885494, "rouge_l": 0.48204022988505746}
{"id": 1184, "predictions": ["\u2581// \u2581matching Configs \u2581returns \u2581all \u2581 plugins \u2581that \u2581match \u2581the \u2581given \u2581 label ."], "references": ["\u2581// \u2581matching Configs \u2581filters \u2581irrelevant \u2581 Require Mt ch ing Label \u2581configs \u2581from \u2581// \u2581the \u2581list \u2581of \u2581all \u2581configs . \u2581// \u2581` branch ` \u2581should \u2581be \u2581 empty \u2581for \u2581"], "bleu": 0.0642578093873745, "rouge_l": 0.2559440559440559}
{"id": 1842, "predictions": ["\u2581// \u2581 p row To GCS \u2581 loads \u2581the \u2581 contents \u2581of \u2581a \u2581 GCS ."], "references": ["\u2581// \u2581 p row To GCS \u2581returns \u2581the \u2581 GCS \u2581 key \u2581corresponding \u2581to \u2581the \u2581given \u2581 p row \u2581 key"], "bleu": 0.3226259991258578, "rouge_l": 0.5276816608996538}
{"id": 1884, "predictions": ["\u2581// \u2581 add Job \u2581adds \u2581a \u2581new \u2581job \u2581to \u2581the \u2581 Cron ."], "references": ["\u2581// \u2581 add Job \u2581adds \u2581a \u2581 cron \u2581entry \u2581for \u2581a \u2581job \u2581to \u2581 cron Agent"], "bleu": 0.3900756812161481, "rouge_l": 0.6093229744728079}
{"id": 783, "predictions": ["\u2581// \u2581 init Tables \u2581initializes \u2581the \u2581 table \u2581 table \u2581 table ."], "references": ["\u2581// \u2581 init Tables \u2581replaces \u2581 s . tables \u2581with \u2581given \u2581tables . \u2581This \u2581is \u2581done \u2581during \u2581loading ."], "bleu": 0.18227301762182052, "rouge_l": 0.3627353815659069}
{"id": 2046, "predictions": ["\u2581// \u2581query Check ClusterState For Accept \u2581checks \u2581if \u2581the \u2581given \u2581 name \u2581is \u2581enabled ."], "references": ["\u2581// \u2581Check \u2581that \u2581cluster - related \u2581 preconditions \u2581are \u2581met \u2581for \u2581accept ing \u2581a \u2581new \u2581node ."], "bleu": 0.0856127425234383, "rouge_l": 0.18541033434650459}
{"id": 43, "predictions": ["\u2581// \u2581 get Iface Addr \u2581returns \u2581the \u2581 net link Message \u2581from \u2581the \u2581 net . Net link"], "references": ["\u2581// \u2581 Used \u2581to \u2581 get \u2581an \u2581address \u2581of \u2581interface ."], "bleu": 0.11794224053267105, "rouge_l": 0.28841607565011823}
{"id": 633, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 Event \u2581object \u2581with \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 get \u2581event . \u2581// \u2581If \u2581recursive \u2581is \u2581true , \u2581it \u2581will \u2581return \u2581all \u2581the \u2581 content \u2581under \u2581the \u2581node \u2581 path . \u2581// \u2581If \u2581sorted"], "bleu": 0.1236552163711529, "rouge_l": 0.3907473309608541}
{"id": 1221, "predictions": ["\u2581// \u2581 Sync \u2581 sync s \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Sync \u2581looks \u2581for \u2581newly \u2581made \u2581 gerrit \u2581changes \u2581// \u2581and \u2581creates \u2581 p row jobs \u2581according \u2581to \u2581specs"], "bleu": 0.09552121719521177, "rouge_l": 0.31443298969072164}
{"id": 820, "predictions": ["\u2581// \u2581 NewFile Snapshot Store With Logger \u2581creates \u2581a \u2581new \u2581 File Snapshot Store \u2581with \u2581the \u2581given \u2581// \u2581 name \u2581and \u2581 size ."], "references": ["\u2581// \u2581 NewFile Snapshot Store With Logger \u2581creates \u2581a \u2581new \u2581 File Snapshot Store \u2581based \u2581// \u2581on \u2581a \u2581base \u2581directory . \u2581The \u2581` retain ` \u2581parameter \u2581controls \u2581how \u2581many \u2581//"], "bleu": 0.4605495121176486, "rouge_l": 0.5809523809523809}
{"id": 1893, "predictions": ["\u2581// \u2581target URL \u2581returns \u2581a \u2581 URL \u2581for \u2581the \u2581request ' s \u2581 URL"], "references": ["\u2581// \u2581target URL \u2581determines \u2581the \u2581 URL \u2581used \u2581for \u2581more \u2581details \u2581in \u2581the \u2581 status \u2581// \u2581context \u2581on \u2581GitHub . \u2581If \u2581no \u2581 PR \u2581 dashboard \u2581is \u2581configured , \u2581we"], "bleu": 0.06904950985252116, "rouge_l": 0.3412587412587413}
{"id": 145, "predictions": ["\u2581// \u2581Validate Secure Endpoints \u2581validates \u2581the \u2581 secure \u2581endpoints \u2581and \u2581returns \u2581a \u2581list \u2581of \u2581strings \u2581// \u2581that \u2581are \u2581 HTTPS ."], "references": ["\u2581// \u2581Validate Secure Endpoints \u2581scan s \u2581the \u2581given \u2581endpoints \u2581against \u2581 tls \u2581 info , \u2581returning \u2581only \u2581those \u2581// \u2581endpoints \u2581that \u2581could \u2581be \u2581validated \u2581as \u2581 secure ."], "bleu": 0.15555892433613014, "rouge_l": 0.39791258969341164}
{"id": 1005, "predictions": ["\u2581// \u2581 Format Address \u2581returns \u2581the \u2581 format \u2581of \u2581the \u2581address \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581 Format Address \u2581formats \u2581an \u2581address \u2581and \u2581a \u2581 name \u2581as \u2581a \u2581valid \u2581RFC \u2581 532 2 \u2581address ."], "bleu": 0.20627416081678596, "rouge_l": 0.4456621004566209}
{"id": 111, "predictions": ["\u2581// \u2581 Terminate \u2581is \u2581used \u2581to \u2581 trigger \u2581a \u2581 graceful \u2581shutdown ."], "references": ["\u2581// \u2581 Terminate \u2581stops \u2581the \u2581member \u2581and \u2581removes \u2581the \u2581 data \u2581 dir ."], "bleu": 0.18934058951353838, "rouge_l": 0.4414957780458384}
{"id": 1687, "predictions": ["\u2581// \u2581 clear Stale Comments \u2581 clear s \u2581the \u2581 content \u2581of \u2581the \u2581given \u2581pull \u2581event \u2581to \u2581the \u2581given \u2581// \u2581revision ."], "references": ["\u2581// \u2581 clear Stale Comments \u2581deletes \u2581old \u2581comments \u2581that \u2581are \u2581no \u2581longer \u2581applicable ."], "bleu": 0.2108445456905127, "rouge_l": 0.3472485768500949}
{"id": 1549, "predictions": ["\u2581// \u2581validate Plugins \u2581checks \u2581that \u2581all \u2581the \u2581 plugins \u2581are \u2581valid ."], "references": ["\u2581// \u2581validate Plugins \u2581will \u2581return \u2581error \u2581if \u2581// \u2581there \u2581are \u2581unknown \u2581or \u2581 duplicated \u2581 plugins ."], "bleu": 0.16291446197325232, "rouge_l": 0.4013157894736842}
{"id": 42, "predictions": ["\u2581// \u2581 GetDefault Host \u2581returns \u2581the \u2581default \u2581host \u2581 name"], "references": ["\u2581// \u2581 GetDefault Host \u2581obtain s \u2581the \u2581first \u2581 IP \u2581address \u2581of \u2581machine \u2581from \u2581the \u2581routing \u2581 table \u2581and \u2581returns \u2581the \u2581 IP \u2581address \u2581as \u2581string . \u2581// \u2581An \u2581IPv"], "bleu": 0.05646541848850381, "rouge_l": 0.32105263157894737}
{"id": 1203, "predictions": ["\u2581// \u2581Make Command \u2581creates \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581the \u2581given \u2581 api ."], "references": ["\u2581// \u2581Make Command \u2581returns \u2581a \u2581` download ` \u2581command ."], "bleu": 0.17609282679116184, "rouge_l": 0.4979591836734694}
{"id": 1129, "predictions": ["\u2581// \u2581 Delete Project Card \u2581deletes \u2581the \u2581project \u2581 card"], "references": ["\u2581// \u2581 Delete Project Card \u2581deletes \u2581the \u2581project \u2581 card \u2581of \u2581a \u2581specific \u2581issue \u2581or \u2581 PR"], "bleu": 0.4965853037914095, "rouge_l": 0.7076566125290022}
{"id": 379, "predictions": ["\u2581// \u2581 Enter \u2581is \u2581used \u2581to \u2581 provision \u2581a \u2581 key ."], "references": ["\u2581// \u2581 Enter \u2581waits \u2581for \u2581\" count \" \u2581processes \u2581to \u2581 enter \u2581the \u2581 barrier \u2581then \u2581returns"], "bleu": 0.15756568859158712, "rouge_l": 0.4013157894736842}
{"id": 1284, "predictions": ["\u2581// \u2581 New Issue Comment \u2581creates \u2581a \u2581new \u2581 search \u2581 comment ."], "references": ["\u2581// \u2581 New Issue Comment \u2581creates \u2581a \u2581 Comment \u2581from \u2581a \u2581 github . Issue Comment"], "bleu": 0.4420993350130781, "rouge_l": 0.6770255271920089}
{"id": 1928, "predictions": ["\u2581// \u2581 Image Exists \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581image \u2581 exists ."], "references": ["\u2581// \u2581 Image Exists \u2581returns \u2581whether \u2581an \u2581image \u2581with \u2581the \u2581given \u2581fingerprint \u2581 exists ."], "bleu": 0.4242430706745843, "rouge_l": 0.7052023121387283}
{"id": 431, "predictions": ["\u2581// \u2581 New Remove Command \u2581returns \u2581a \u2581command \u2581to \u2581 remove \u2581a \u2581 key \u2581from \u2581the \u2581 cli . Command ."], "references": ["\u2581// \u2581 New Remove Command \u2581returns \u2581the \u2581CLI \u2581command \u2581for \u2581\" rm \" ."], "bleu": 0.2875338096125626, "rouge_l": 0.47424684159378033}
{"id": 1615, "predictions": ["\u2581// \u2581 Checkout PullRequest \u2581updates \u2581the \u2581pull \u2581pull \u2581for \u2581the \u2581given \u2581revision ."], "references": ["\u2581// \u2581 Checkout PullRequest \u2581does \u2581exactly \u2581that ."], "bleu": 0.27824623288353134, "rouge_l": 0.4975530179445351}
{"id": 1632, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 collect \u2581 api \u2581 Started \u2581from \u2581 api \u2581spec"], "references": ["\u2581// \u2581spec To Started \u2581 translate \u2581a \u2581job spec \u2581into \u2581a \u2581started \u2581struct \u2581// \u2581optionally \u2581overwrite \u2581 Repo Version \u2581with \u2581provided \u2581main Ref SHA"], "bleu": 0.0594142290325436, "rouge_l": 0.1476997578692494}
{"id": 75, "predictions": ["\u2581// \u2581 Transport \u2581implements \u2581the \u2581 Transport \u2581interface ."], "references": ["\u2581// \u2581 Transport \u2581 communicate s \u2581with \u2581etcd \u2581 tester ."], "bleu": 0.23278666914796883, "rouge_l": 0.4911433172302737}
{"id": 1954, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 group ."], "references": ["\u2581// \u2581 Start \u2581all \u2581the \u2581tasks \u2581in \u2581the \u2581 group ."], "bleu": 0.41027677084858105, "rouge_l": 0.716442953020134}
{"id": 1140, "predictions": ["\u2581// \u2581 Partition Active \u2581returns \u2581a \u2581channel \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581partition \u2581for \u2581the \u2581// \u2581given \u2581 criteria ."], "references": ["\u2581// \u2581 Partition Active \u2581separate s \u2581the \u2581provided \u2581 p row jobs \u2581into \u2581pending \u2581and \u2581triggered \u2581// \u2581and \u2581returns \u2581them \u2581inside \u2581channels \u2581so \u2581that \u2581they \u2581can \u2581be \u2581consumed \u2581in \u2581parallel"], "bleu": 0.1323058773227008, "rouge_l": 0.2580060422960725}
{"id": 649, "predictions": ["\u2581// \u2581Set Latency \u2581sets \u2581the \u2581 latency \u2581for \u2581the \u2581given \u2581 dev"], "references": ["\u2581// \u2581Set Latency \u2581adds \u2581 latency \u2581in \u2581 millisecond \u2581scale \u2581with \u2581random \u2581 variations ."], "bleu": 0.18614186692801712, "rouge_l": 0.43571428571428567}
{"id": 1471, "predictions": ["\u2581// \u2581 Intersect s \u2581returns \u2581true \u2581if \u2581the \u2581two \u2581 Branch er \u2581objects \u2581are \u2581equal ."], "references": ["\u2581// \u2581 Intersect s \u2581checks \u2581if \u2581other \u2581 Branch er \u2581would \u2581 trigger \u2581for \u2581the \u2581same \u2581branch ."], "bleu": 0.2736368741631547, "rouge_l": 0.523854961832061}
{"id": 1894, "predictions": ["\u2581// \u2581new BuildConfig \u2581creates \u2581a \u2581new \u2581 buildConfig \u2581from \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581new BuildConfig \u2581returns \u2581a \u2581client \u2581and \u2581 informer \u2581 capable \u2581of \u2581 mutating \u2581and \u2581 monitoring \u2581the \u2581specified \u2581 config ."], "bleu": 0.14689890756841023, "rouge_l": 0.4807355516637478}
{"id": 1251, "predictions": ["\u2581// \u2581 Assign s \u2581a \u2581 GitHub \u2581 config \u2581to \u2581a \u2581GitHub \u2581object"], "references": ["\u2581// \u2581GitHub Client With Log Fields \u2581returns \u2581a \u2581GitHub \u2581client \u2581with \u2581extra \u2581logging \u2581fields"], "bleu": 0.12508461584656377, "rouge_l": 0.2207478890229192}
{"id": 1808, "predictions": ["\u2581// \u2581build All \u2581builds \u2581a \u2581 set \u2581of \u2581pull s \u2581events \u2581from \u2581the \u2581given \u2581event ."], "references": ["\u2581// \u2581build All \u2581ensures \u2581that \u2581all \u2581builds \u2581that \u2581should \u2581run \u2581and \u2581will \u2581be \u2581required \u2581are \u2581built"], "bleu": 0.1513851459876605, "rouge_l": 0.25}
{"id": 395, "predictions": ["\u2581// \u2581 New KV \u2581creates \u2581a \u2581new \u2581 KV \u2581 v 3 \u2581 key"], "references": ["\u2581// \u2581 New KV \u2581 wraps \u2581a \u2581 KV \u2581instance \u2581so \u2581that \u2581all \u2581requests \u2581are \u2581wire d \u2581through \u2581a \u2581 l easing \u2581protocol ."], "bleu": 0.15850001501785593, "rouge_l": 0.40197693574958815}
{"id": 489, "predictions": ["\u2581// \u2581user Get Command Func \u2581handles \u2581the \u2581command \u2581to \u2581 get \u2581a \u2581user ' s \u2581 role"], "references": ["\u2581// \u2581user Get Command Func \u2581executes \u2581the \u2581\" user \u2581 get \" \u2581command ."], "bleu": 0.3146660996956416, "rouge_l": 0.5252960172228203}
{"id": 1643, "predictions": ["\u2581// \u2581read Request \u2581reads \u2581the \u2581 admission \u2581 type \u2581of \u2581a \u2581 admission \u2581request ."], "references": ["\u2581// \u2581read Request \u2581extracts \u2581the \u2581request \u2581from \u2581the \u2581 Admission Review \u2581reader"], "bleu": 0.1892240568795935, "rouge_l": 0.3779429987608426}
{"id": 1897, "predictions": ["\u2581// \u2581de Meter \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sets \u2581the \u2581 page \u2581of \u2581 status \u2581 code \u2581for \u2581a \u2581 page ."], "references": ["\u2581// \u2581de paginate \u2581adds \u2581de pagination \u2581on \u2581 top \u2581of \u2581the \u2581retry \u2581and \u2581 rate \u2581limit ing \u2581logic \u2581provided \u2581by \u2581retry ."], "bleu": 0.08899891914341411, "rouge_l": 0.2677395757132407}
{"id": 1447, "predictions": ["\u2581// \u2581 Labels \u2581returns \u2581the \u2581labels \u2581of \u2581the \u2581configuration ."], "references": ["\u2581// \u2581 Labels \u2581returns \u2581a \u2581sorted \u2581list \u2581of \u2581labels \u2581unique \u2581by \u2581 name"], "bleu": 0.2827207475294753, "rouge_l": 0.42479108635097496}
{"id": 881, "predictions": ["\u2581// \u2581 Append \u2581a \u2581 set \u2581of \u2581 shards \u2581to \u2581the \u2581 set \u2581of \u2581 shards ."], "references": ["\u2581// \u2581pipeline Send \u2581is \u2581used \u2581to \u2581send \u2581 data \u2581over \u2581a \u2581pipeline . \u2581It \u2581is \u2581a \u2581 helper \u2581to \u2581// \u2581pipeline Replicate ."], "bleu": 0.08255976279377998, "rouge_l": 0.29209896249002393}
{"id": 105, "predictions": ["\u2581// \u2581 NewClient V 3 \u2581creates \u2581a \u2581new \u2581 Client V 3 Client"], "references": ["\u2581// \u2581 NewClient V 3 \u2581creates \u2581a \u2581new \u2581 grpc \u2581client \u2581connection \u2581to \u2581the \u2581member"], "bleu": 0.5802722053343896, "rouge_l": 0.6346820809248555}
{"id": 1598, "predictions": ["\u2581// \u2581validate Component Config \u2581ensures \u2581that \u2581the \u2581 Kubernetes \u2581 config \u2581is \u2581valid"], "references": ["\u2581// \u2581validate Component Config \u2581validates \u2581the \u2581 infrastructure \u2581component \u2581configuration"], "bleu": 0.30576902884505114, "rouge_l": 0.5343065693430658}
{"id": 808, "predictions": ["\u2581// \u2581 revert To Manifest \u2581 revert s \u2581the \u2581 data \u2581from \u2581the \u2581manifest \u2581to \u2581the \u2581 Manifest Map ."], "references": ["\u2581// \u2581 revert To Manifest \u2581checks \u2581that \u2581all \u2581necessary \u2581 table \u2581files \u2581exist \u2581and \u2581removes \u2581all \u2581 table \u2581files \u2581not \u2581// \u2581referenced \u2581by \u2581the \u2581manifest . \u2581 id Map \u2581is"], "bleu": 0.17232681928681598, "rouge_l": 0.42468354430379746}
{"id": 454, "predictions": ["\u2581// \u2581member Update Command Func \u2581handles \u2581a \u2581command \u2581to \u2581 get \u2581a \u2581member \u2581of \u2581a \u2581member \u2581of \u2581a \u2581member"], "references": ["\u2581// \u2581member Update Command Func \u2581executes \u2581the \u2581\" member \u2581update \" \u2581command ."], "bleu": 0.24515235346013312, "rouge_l": 0.38812301166489926}
{"id": 1024, "predictions": ["\u2581// \u2581 Run \u2581runs \u2581the \u2581 updater \u2581to \u2581 enable \u2581 graceful ly \u2581 enable \u2581 termination"], "references": ["\u2581// \u2581 Run \u2581all \u2581compatible \u2581checks"], "bleu": 0.13445273575332958, "rouge_l": 0.28549141965678626}
{"id": 1407, "predictions": ["\u2581// \u2581 Dial Context \u2581 dial s \u2581the \u2581 dialer \u2581with \u2581the \u2581given \u2581address \u2581and \u2581address ."], "references": ["\u2581// \u2581 Dial Context \u2581connects \u2581to \u2581the \u2581address \u2581on \u2581the \u2581named \u2581network \u2581using \u2581the \u2581provided \u2581context ."], "bleu": 0.23287896954139942, "rouge_l": 0.4117647058823529}
{"id": 1509, "predictions": ["\u2581// \u2581Make Command \u2581creates \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 cli ."], "references": ["\u2581// \u2581Make Command \u2581returns \u2581a \u2581` filter ` \u2581command ."], "bleu": 0.17609282679116184, "rouge_l": 0.4979591836734694}
{"id": 1395, "predictions": ["\u2581// \u2581 List All \u2581implements \u2581 cm s ."], "references": ["\u2581// \u2581 List All \u2581populate s \u2581a \u2581 set \u2581will \u2581all \u2581available \u2581 NAT Gateway \u2581resources ."], "bleu": 0.18162604815061817, "rouge_l": 0.4372759856630824}
{"id": 588, "predictions": ["\u2581// \u2581 Invalidate \u2581 marks \u2581the \u2581 key \u2581and \u2581 key \u2581 set \u2581to \u2581the \u2581cache ."], "references": ["\u2581// \u2581 Invalidate \u2581invalidate s \u2581the \u2581cache \u2581entries \u2581that \u2581 intersect ing \u2581with \u2581the \u2581given \u2581range \u2581from \u2581 key \u2581to \u2581end key ."], "bleu": 0.14411934035302232, "rouge_l": 0.4381484437350359}
{"id": 498, "predictions": ["\u2581// \u2581update Command Func \u2581handles \u2581the \u2581 test \u2581 config ."], "references": ["\u2581// \u2581update Command Func \u2581executes \u2581the \u2581\" update \" \u2581command ."], "bleu": 0.3448444257953326, "rouge_l": 0.5454545454545454}
{"id": 2044, "predictions": ["\u2581// \u2581query Check Node State For Bootstrap Or Join \u2581is \u2581used \u2581to \u2581query \u2581the \u2581node \u2581// \u2581and \u2581 join \u2581the \u2581node \u2581to \u2581the \u2581 raft \u2581node ."], "references": ["\u2581// \u2581Check \u2581that \u2581node - related \u2581 preconditions \u2581are \u2581met \u2581for \u2581bootstrap ping \u2581or \u2581 joining \u2581a \u2581// \u2581cluster ."], "bleu": 0.06143498010483918, "rouge_l": 0.21863799283154123}
{"id": 1296, "predictions": ["\u2581// \u2581 doRequest \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581HTTP \u2581request \u2581to \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581 doRequest \u2581executes \u2581a \u2581request \u2581with \u2581the \u2581provided \u2581method \u2581and \u2581 path \u2581// \u2581exactly \u2581once . \u2581It \u2581sets \u2581up \u2581authentication \u2581if \u2581the \u2581 jenkins \u2581client \u2581// \u2581is \u2581configured \u2581accordingly"], "bleu": 0.08258780937272003, "rouge_l": 0.2885135135135135}
{"id": 28, "predictions": ["\u2581// \u2581free To \u2581 releases \u2581all \u2581 items \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581free To \u2581free s \u2581the \u2581 inflight s \u2581smaller \u2581or \u2581equal \u2581to \u2581the \u2581given \u2581` to ` \u2581 flight ."], "bleu": 0.12277940403006411, "rouge_l": 0.395004625346901}
{"id": 112, "predictions": ["\u2581// \u2581 Metric \u2581returns \u2581the \u2581metric \u2581 name \u2581for \u2581the \u2581member ."], "references": ["\u2581// \u2581 Metric \u2581gets \u2581the \u2581metric \u2581value \u2581for \u2581a \u2581member"], "bleu": 0.24712442545253582, "rouge_l": 0.646969696969697}
{"id": 851, "predictions": ["\u2581// \u2581 Append Entries \u2581is \u2581used \u2581to \u2581 append \u2581a \u2581new \u2581 Append Entries \u2581request \u2581to \u2581a \u2581 net ."], "references": ["\u2581// \u2581 Append Entries \u2581is \u2581used \u2581to \u2581pipeline \u2581a \u2581new \u2581 append \u2581entries \u2581request ."], "bleu": 0.4297641362823879, "rouge_l": 0.7038461538461538}
{"id": 967, "predictions": ["\u2581// \u2581run Snapshots \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581snapshot \u2581of \u2581the \u2581 Raft \u2581// \u2581 data ."], "references": ["\u2581// \u2581run Snapshots \u2581is \u2581a \u2581long \u2581running \u2581goroutine \u2581used \u2581to \u2581manage \u2581taking \u2581// \u2581new \u2581snapshots \u2581of \u2581the \u2581 FSM . \u2581It \u2581runs \u2581in \u2581parallel \u2581to \u2581the \u2581 FSM \u2581and \u2581//"], "bleu": 0.15556095782878396, "rouge_l": 0.3986928104575163}
{"id": 221, "predictions": ["\u2581// \u2581create PostRequest \u2581creates \u2581a \u2581new \u2581 URL \u2581from \u2581the \u2581 URL \u2581and \u2581returns \u2581the \u2581 URL ."], "references": ["\u2581// \u2581create PostRequest \u2581creates \u2581a \u2581HTTP \u2581 POST \u2581request \u2581that \u2581sends \u2581 raft \u2581message ."], "bleu": 0.27602580646531577, "rouge_l": 0.4929292929292929}
{"id": 1960, "predictions": ["\u2581// \u2581 Network IDs Not Pending \u2581returns \u2581the \u2581 IDs \u2581of \u2581all \u2581the \u2581network \u2581 IDs \u2581of \u2581the \u2581// \u2581cluster ."], "references": ["\u2581// \u2581 Network IDs Not Pending \u2581returns \u2581a \u2581 map \u2581 assoc i ating \u2581each \u2581network \u2581 name \u2581to \u2581its \u2581 ID . \u2581// \u2581// \u2581 Pending \u2581networks \u2581are \u2581skipped"], "bleu": 0.23785158451030664, "rouge_l": 0.41806853582554515}
{"id": 224, "predictions": ["\u2581// \u2581check Version Compatibility \u2581verifies \u2581the \u2581version \u2581of \u2581 semver \u2581version"], "references": ["\u2581// \u2581check Version Compatibility \u2581checks \u2581whether \u2581the \u2581given \u2581version \u2581is \u2581compatible \u2581// \u2581with \u2581the \u2581local \u2581version ."], "bleu": 0.20664899513533228, "rouge_l": 0.48139797068771134}
{"id": 949, "predictions": ["\u2581// \u2581process Log \u2581is \u2581used \u2581to \u2581process \u2581a \u2581log \u2581log"], "references": ["\u2581// \u2581process Log \u2581is \u2581invoked \u2581to \u2581process \u2581the \u2581application \u2581of \u2581a \u2581single \u2581committed \u2581log \u2581entry ."], "bleu": 0.2358212605511366, "rouge_l": 0.5907990314769976}
{"id": 1581, "predictions": ["\u2581// \u2581 New Filtered Matcher Informer \u2581constructs \u2581a \u2581new \u2581 informer \u2581for \u2581 get \u2581 type \u2581 type . \u2581// \u2581Always \u2581prefer \u2581using \u2581an \u2581 informer \u2581factory \u2581to \u2581 get"], "references": ["\u2581// \u2581 New Filtered ProwJob Informer \u2581constructs \u2581a \u2581new \u2581 informer \u2581for \u2581 ProwJob \u2581 type . \u2581// \u2581Always \u2581prefer \u2581using \u2581an \u2581 informer \u2581factory \u2581to \u2581 get \u2581a \u2581shared"], "bleu": 0.7546697757057081, "rouge_l": 0.8666666666666667}
{"id": 421, "predictions": ["\u2581// \u2581 Start At \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581 Start At \u2581restart s \u2581mock \u2581server \u2581at \u2581given \u2581index ."], "bleu": 0.2707089559145445, "rouge_l": 0.3860759493670886}
{"id": 639, "predictions": ["\u2581// \u2581 Read \u2581 this \u2581 path \u2581to \u2581the \u2581node ."], "references": ["\u2581// \u2581 Internal Get \u2581gets \u2581the \u2581node \u2581of \u2581the \u2581given \u2581 nodePath ."], "bleu": 0.17095746935849984, "rouge_l": 0.41049798115746977}
{"id": 1527, "predictions": ["\u2581// \u2581 Dispatch \u2581sends \u2581a \u2581 InfluxDB \u2581request \u2581to \u2581the \u2581 InfluxDB \u2581backend ."], "references": ["\u2581// \u2581 Dispatch \u2581receives \u2581channels \u2581to \u2581each \u2581 type \u2581of \u2581events , \u2581and \u2581 dispatch \u2581them \u2581to \u2581each \u2581 plugins ."], "bleu": 0.11866621633148909, "rouge_l": 0.3860759493670886}
{"id": 1052, "predictions": ["\u2581// \u2581Perform \u2581sends \u2581a \u2581job \u2581to \u2581the \u2581 api ."], "references": ["\u2581// \u2581Perform \u2581a \u2581job \u2581as \u2581soon \u2581as \u2581possibly \u2581using \u2581a \u2581goroutine ."], "bleu": 0.17876312353452062, "rouge_l": 0.44721407624633425}
{"id": 816, "predictions": ["\u2581// \u2581Create \u2581a \u2581new \u2581 Snapshot \u2581 Snapshot"], "references": ["\u2581// \u2581Create \u2581replaces \u2581the \u2581stored \u2581snapshot \u2581with \u2581a \u2581new \u2581one \u2581using \u2581the \u2581given \u2581args"], "bleu": 0.12535928505955085, "rouge_l": 0.346590909090909}
{"id": 1375, "predictions": ["\u2581// \u2581report Status \u2581prints \u2581the \u2581 status \u2581of \u2581the \u2581specified \u2581message ."], "references": ["\u2581// \u2581report Status \u2581should \u2581be \u2581called \u2581on \u2581any \u2581 p row job \u2581 status \u2581changes"], "bleu": 0.17910485893821793, "rouge_l": 0.363095238095238}
{"id": 601, "predictions": ["\u2581// \u2581Check Compact \u2581checks \u2581the \u2581 status \u2581of \u2581a \u2581revision \u2581of \u2581a \u2581member ."], "references": ["\u2581// \u2581Check Compact \u2581ensures \u2581that \u2581 historical \u2581 data \u2581before \u2581given \u2581revision \u2581has \u2581been \u2581 compacted ."], "bleu": 0.15272609446787713, "rouge_l": 0.3804573804573805}
{"id": 547, "predictions": ["\u2581// \u2581 Unsafe Delete \u2581deletes \u2581a \u2581bucket \u2581from \u2581the \u2581 data \u2581bucket ."], "references": ["\u2581// \u2581 Unsafe Delete \u2581must \u2581be \u2581called \u2581holding \u2581the \u2581lock \u2581on \u2581the \u2581tx ."], "bleu": 0.267768029597763, "rouge_l": 0.4414957780458384}
{"id": 1542, "predictions": ["\u2581// \u2581Make Command \u2581creates \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581the \u2581 cli . Command"], "references": ["\u2581// \u2581Make Command \u2581returns \u2581a \u2581` junit ` \u2581command ."], "bleu": 0.17609282679116184, "rouge_l": 0.4979591836734694}
{"id": 784, "predictions": ["\u2581// \u2581delete Tables \u2581removes \u2581all \u2581the \u2581tables \u2581in \u2581the \u2581 table ."], "references": ["\u2581// \u2581delete Tables \u2581 remove \u2581tables \u2581 idx 0, \u2581... , \u2581 idx 1 -1 ."], "bleu": 0.15937425748101036, "rouge_l": 0.4178082191780822}
{"id": 615, "predictions": ["\u2581// \u2581Apply Conf Change \u2581implements \u2581the \u2581 Raw Node \u2581interface ."], "references": ["\u2581// \u2581Apply Conf Change \u2581applies \u2581a \u2581 config \u2581change \u2581to \u2581the \u2581local \u2581node ."], "bleu": 0.27144212553462616, "rouge_l": 0.4698331193838254}
{"id": 196, "predictions": ["\u2581// \u2581visit \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581interval \u2581is \u2581 empty ."], "references": ["\u2581// \u2581visit \u2581will \u2581 call \u2581a \u2581node \u2581visitor \u2581on \u2581each \u2581node \u2581that \u2581 overlaps \u2581the \u2581given \u2581interval"], "bleu": 0.15756568859158712, "rouge_l": 0.3344298245614035}
{"id": 1358, "predictions": ["\u2581// \u2581 Run \u2581the \u2581 container"], "references": ["\u2581// \u2581 Run \u2581will \u2581upload \u2581files \u2581to \u2581 GCS \u2581as \u2581 pre scribe d \u2581by \u2581// \u2581the \u2581options . \u2581Any \u2581extra \u2581files \u2581can \u2581be \u2581passed \u2581as \u2581// \u2581a \u2581parameter \u2581and"], "bleu": 0.008333508372144402, "rouge_l": 0.1983739837398374}
{"id": 394, "predictions": ["\u2581// \u2581send KeepAlive Loop \u2581sends \u2581a \u2581 keepalive \u2581loop \u2581to \u2581the \u2581 active \u2581server ."], "references": ["\u2581// \u2581send KeepAlive Loop \u2581sends \u2581keep \u2581 alive \u2581requests \u2581for \u2581the \u2581 lifetime \u2581of \u2581the \u2581given \u2581stream ."], "bleu": 0.2933618058173303, "rouge_l": 0.5366568914956013}
{"id": 2032, "predictions": ["\u2581// \u2581Get Server \u2581returns \u2581the \u2581server ' s \u2581 data \u2581from \u2581the \u2581server ."], "references": ["\u2581// \u2581 Server \u2581handling \u2581function s \u2581// \u2581Get Server \u2581returns \u2581the \u2581server \u2581 status \u2581as \u2581a \u2581 Server \u2581struct"], "bleu": 0.2981362561408351, "rouge_l": 0.41295938104448743}
{"id": 1609, "predictions": ["\u2581// \u2581 Load Profile \u2581 loads \u2581the \u2581 Profile \u2581from \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Load Profile \u2581 loads \u2581a \u2581profile \u2581from \u2581the \u2581given \u2581 filename . \u2581// \u2581If \u2581the \u2581 filename \u2581is \u2581\"-\" , \u2581it \u2581instead \u2581reads \u2581from \u2581stdin ."], "bleu": 0.24327070380810126, "rouge_l": 0.485177151120752}
{"id": 1775, "predictions": ["\u2581// \u2581 Callback \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581of \u2581the \u2581 content"], "references": ["\u2581// \u2581 Callback \u2581is \u2581used \u2581to \u2581retrieve \u2581new \u2581log \u2581segments"], "bleu": 0.15310245441182443, "rouge_l": 0.2489795918367347}
{"id": 57, "predictions": ["\u2581// \u2581tick Heartbeat \u2581is \u2581used \u2581to \u2581 sleep \u2581a \u2581new \u2581heartbeat ."], "references": ["\u2581// \u2581tick Heartbeat \u2581is \u2581run \u2581by \u2581leader s \u2581to \u2581send \u2581a \u2581 Msg B eat \u2581after \u2581 r . heartbeat Timeout ."], "bleu": 0.1455700558599925, "rouge_l": 0.391025641025641}
{"id": 1438, "predictions": ["\u2581// \u2581Get Files Approve rs \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581files \u2581that \u2581are \u2581 satisfied"], "references": ["\u2581// \u2581Get Files Approve rs \u2581returns \u2581a \u2581 map \u2581from \u2581files \u2581 -> \u2581list \u2581of \u2581current \u2581 approve rs ."], "bleu": 0.3690434076431517, "rouge_l": 0.5446428571428571}
{"id": 104, "predictions": ["\u2581// \u2581 listen GRPC \u2581is \u2581used \u2581to \u2581 listen \u2581for \u2581a \u2581 GRPC \u2581connection \u2581to \u2581the \u2581member"], "references": ["\u2581// \u2581 listen GRPC \u2581starts \u2581a \u2581 grpc \u2581server \u2581over \u2581a \u2581unix \u2581 domain \u2581socket \u2581on \u2581the \u2581member"], "bleu": 0.2494857379691192, "rouge_l": 0.5116495806150979}
{"id": 371, "predictions": ["\u2581// \u2581 auth Enable Command Func \u2581 - \u2581 set \u2581the \u2581command \u2581to \u2581 set \u2581the \u2581 auth \u2581command"], "references": ["\u2581// \u2581 auth Enable Command Func \u2581executes \u2581the \u2581\" auth \u2581 enable \" \u2581command ."], "bleu": 0.3264128346656048, "rouge_l": 0.5408866995073891}
{"id": 1705, "predictions": ["\u2581// \u2581 Markdown SHA List \u2581generates \u2581a \u2581 QR \u2581 name \u2581for \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581 Mar dk own SHA List \u2581prints \u2581the \u2581list \u2581of \u2581commits \u2581in \u2581a \u2581markdown - friendly \u2581way ."], "bleu": 0.11869311983700981, "rouge_l": 0.3376383763837638}
{"id": 1220, "predictions": ["\u2581// \u2581Save Last Sync \u2581updates \u2581the \u2581 sync \u2581 sync \u2581 data \u2581for \u2581the \u2581 controller ."], "references": ["\u2581// \u2581Save Last Sync \u2581saves \u2581last \u2581 sync \u2581time \u2581in \u2581 Unix \u2581to \u2581a \u2581volume"], "bleu": 0.23909453161355018, "rouge_l": 0.44248704663212435}
{"id": 733, "predictions": ["\u2581// \u2581populate Discard Stats \u2581reads \u2581the \u2581stats \u2581from \u2581the \u2581 data ."], "references": ["\u2581// \u2581populate Discard Stats \u2581populate s \u2581 v log . lf Discard Stats \u2581// \u2581This \u2581function \u2581will \u2581be \u2581called \u2581while \u2581 initializing \u2581value Log"], "bleu": 0.11571869242514281, "rouge_l": 0.31443298969072164}
{"id": 1403, "predictions": ["\u2581// \u2581 Sync All \u2581 synchronize s \u2581all \u2581the \u2581resources \u2581in \u2581the \u2581 set \u2581of \u2581 active \u2581// \u2581resources ."], "references": ["\u2581// \u2581 Sync All \u2581signals \u2581update \u2581for \u2581all \u2581resources \u2581hold \u2581by \u2581the \u2581client ."], "bleu": 0.1969221590285716, "rouge_l": 0.48605577689243035}
{"id": 842, "predictions": ["\u2581// \u2581 get Conn \u2581returns \u2581a \u2581connection \u2581to \u2581a \u2581 net . Conn ."], "references": ["\u2581// \u2581 get Conn \u2581is \u2581used \u2581to \u2581 get \u2581a \u2581connection \u2581from \u2581the \u2581pool ."], "bleu": 0.28802043766303254, "rouge_l": 0.4797752808988765}
{"id": 998, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 g . Generator \u2581instance ."], "references": ["\u2581// \u2581 New \u2581generator \u2581for \u2581creating \u2581 webpack \u2581asset \u2581files"], "bleu": 0.2044800736021839, "rouge_l": 0.3696969696969697}
{"id": 1190, "predictions": ["\u2581// \u2581 Update Branch \u2581creates \u2581a \u2581new \u2581branch \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581branch ."], "references": ["\u2581// \u2581 Update Branch \u2581updates \u2581the \u2581branch \u2581with \u2581the \u2581specified \u2581configuration"], "bleu": 0.2863424630911014, "rouge_l": 0.53643216080402}
{"id": 802, "predictions": ["\u2581// \u2581 put Node \u2581adds \u2581the \u2581given \u2581 height \u2581to \u2581the \u2581 slice \u2581of \u2581the \u2581 bloom \u2581 height ."], "references": ["\u2581// \u2581 put Node \u2581 allocate s \u2581a \u2581node \u2581in \u2581the \u2581aren a . \u2581The \u2581node \u2581is \u2581aligned \u2581on \u2581a \u2581pointer - size d \u2581// \u2581boundary . \u2581The \u2581aren a"], "bleu": 0.1159736209803545, "rouge_l": 0.270253164556962}
{"id": 10, "predictions": ["\u2581// \u2581pick \u2581a \u2581 raft \u2581message \u2581from \u2581the \u2581 raft \u2581stream ."], "references": ["\u2581// \u2581pick \u2581pick s \u2581a \u2581 chan \u2581for \u2581sending \u2581the \u2581given \u2581message . \u2581The \u2581 picked \u2581 chan \u2581and \u2581the \u2581 picked \u2581 chan \u2581// \u2581string \u2581 name \u2581are \u2581returned"], "bleu": 0.04775343112354423, "rouge_l": 0.30942028985507253}
{"id": 1529, "predictions": ["\u2581// \u2581Create Status \u2581creates \u2581a \u2581new \u2581 status \u2581for \u2581a \u2581repository ."], "references": ["\u2581// \u2581Create Status \u2581creates \u2581or \u2581updates \u2581a \u2581 status \u2581context \u2581on \u2581the \u2581indicated \u2581reference ."], "bleu": 0.2758277772476023, "rouge_l": 0.5809523809523809}
{"id": 1079, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 gen \u2581instance ."], "references": ["\u2581// \u2581 New \u2581generator \u2581for \u2581creating \u2581basic \u2581asset \u2581files"], "bleu": 0.23462350320528, "rouge_l": 0.31881533101045295}
{"id": 1514, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581if \u2581the \u2581options \u2581are \u2581valid ."], "references": ["\u2581// \u2581Validate \u2581ensures \u2581that \u2581the \u2581configuration \u2581options \u2581are \u2581valid"], "bleu": 0.32466791547509893, "rouge_l": 0.6666666666666666}
{"id": 206, "predictions": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581the \u2581interval \u2581is \u2581in \u2581the \u2581 set \u2581of \u2581interval"], "references": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581the \u2581interval \u2581tree ' s \u2581 keys \u2581cover \u2581the \u2581entire \u2581given \u2581interval ."], "bleu": 0.42217995726299534, "rouge_l": 0.5760151085930123}
{"id": 1182, "predictions": ["\u2581// \u2581make Pipeline Git Resource \u2581takes \u2581a \u2581job \u2581and \u2581job \u2581and \u2581returns \u2581a \u2581new \u2581 Pipeline Resource"], "references": ["\u2581// \u2581make Pipeline Git Resource \u2581creates \u2581a \u2581pipeline \u2581 git \u2581resource \u2581from \u2581 p row \u2581job"], "bleu": 0.2928298013714697, "rouge_l": 0.4265734265734266}
{"id": 1706, "predictions": ["\u2581// \u2581 Path For Spec \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the \u2581 container \u2581spec"], "references": ["\u2581// \u2581 Path For Spec \u2581determines \u2581the \u2581 GCS \u2581 path \u2581prefix \u2581for \u2581files \u2581uploaded \u2581// \u2581for \u2581a \u2581specific \u2581job \u2581spec"], "bleu": 0.2672309937171966, "rouge_l": 0.5058043117744611}
{"id": 1737, "predictions": ["\u2581// \u2581 Content For GitHub Post \u2581returns \u2581a \u2581 description \u2581of \u2581 Content - side \u2581 description \u2581of \u2581 Profiles"], "references": ["\u2581// \u2581 Content For GitHub Post \u2581constructs \u2581the \u2581message \u2581 cov bot \u2581 posts"], "bleu": 0.294467310498826, "rouge_l": 0.48605577689243035}
{"id": 1896, "predictions": ["\u2581// \u2581retry \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581response \u2581 type ."], "references": ["\u2581// \u2581retry \u2581handles \u2581 rate \u2581limit ing \u2581and \u2581retry \u2581logic \u2581for \u2581a \u2581 github \u2581API \u2581 call ."], "bleu": 0.11957343700241443, "rouge_l": 0.3667334669338677}
{"id": 1627, "predictions": ["\u2581// \u2581handle \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 label \u2581for \u2581the \u2581given \u2581 label ."], "references": ["\u2581// \u2581handle \u2581 interact s \u2581with \u2581GitHub \u2581to \u2581 drive \u2581the \u2581pull \u2581request \u2581to \u2581the \u2581// \u2581proper \u2581state \u2581by \u2581adding \u2581and \u2581removing \u2581comments \u2581and \u2581labels . \u2581If \u2581a \u2581// \u2581"], "bleu": 0.063106717705742, "rouge_l": 0.2885135135135135}
{"id": 100, "predictions": ["\u2581// \u2581HTTP Members \u2581returns \u2581the \u2581 slice \u2581of \u2581members \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581HTTP Members \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 active \u2581members \u2581as \u2581client . Members"], "bleu": 0.26402045326692036, "rouge_l": 0.49364161849710986}
{"id": 1765, "predictions": ["\u2581// \u2581Create Database \u2581creates \u2581a \u2581new \u2581 InfluxDB \u2581database ."], "references": ["\u2581// \u2581Create Database \u2581creates \u2581and \u2581connects \u2581a \u2581new \u2581instance \u2581of \u2581an \u2581 InfluxDB \u2581// \u2581It \u2581is \u2581created \u2581based \u2581on \u2581the \u2581fields \u2581 set \u2581in \u2581the \u2581configuration ."], "bleu": 0.08435167492510562, "rouge_l": 0.4492635024549918}
{"id": 1817, "predictions": ["\u2581// \u2581 New Controller \u2581creates \u2581a \u2581new \u2581 Controller ."], "references": ["\u2581// \u2581 New Controller \u2581constructs \u2581a \u2581new \u2581 controller \u2581to \u2581 reconcile \u2581 sta uses \u2581on \u2581 config \u2581change"], "bleu": 0.19078159573063605, "rouge_l": 0.45717344753747313}
{"id": 192, "predictions": ["\u2581// \u2581watcher Set ByKey \u2581returns \u2581a \u2581 set \u2581of \u2581 set \u2581 set \u2581that \u2581 contains \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581watcher Set ByKey \u2581gets \u2581the \u2581 set \u2581of \u2581 watchers \u2581that \u2581receive \u2581events \u2581on \u2581the \u2581given \u2581 key ."], "bleu": 0.44033133386391016, "rouge_l": 0.6859437751004015}
{"id": 1656, "predictions": ["\u2581// \u2581un Exposed Contexts \u2581extracts \u2581the \u2581 status \u2581of \u2581the \u2581 contexts \u2581 set \u2581in \u2581the \u2581context . \u2581// \u2581 For \u2581 this \u2581 call , \u2581the \u2581context \u2581is \u2581returned"], "references": ["\u2581// \u2581un successful Contexts \u2581determines \u2581which \u2581 contexts \u2581from \u2581the \u2581list \u2581that \u2581we \u2581care \u2581about \u2581are \u2581// \u2581failed . \u2581 For \u2581instance , \u2581we \u2581do \u2581not \u2581care \u2581about \u2581our \u2581own"], "bleu": 0.08928953574702554, "rouge_l": 0.3333333333333333}
{"id": 1410, "predictions": ["\u2581// \u2581Get Head Contexts \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581specified \u2581 dashboard ."], "references": ["\u2581// \u2581Get Head Contexts \u2581returns \u2581the \u2581 status \u2581checks ' \u2581 contexts \u2581of \u2581the \u2581 head \u2581commit \u2581of \u2581the \u2581 PR ."], "bleu": 0.30749911719882217, "rouge_l": 0.5875656742556917}
{"id": 2040, "predictions": ["\u2581// \u2581 Purge \u2581removes \u2581the \u2581node \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581 Purge \u2581removes \u2581a \u2581node \u2581entirely \u2581from \u2581the \u2581cluster \u2581database ."], "bleu": 0.3780379795765553, "rouge_l": 0.8049853372434018}
{"id": 729, "predictions": ["\u2581// \u2581open ReadOnly \u2581open s \u2581the \u2581 logfile \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581 logfile ."], "references": ["\u2581// \u2581open ReadOnly \u2581assumes \u2581that \u2581we \u2581have \u2581a \u2581 write \u2581lock \u2581on \u2581 logFile ."], "bleu": 0.1378592993183041, "rouge_l": 0.3605911330049261}
{"id": 236, "predictions": ["\u2581// \u2581new Log With Size \u2581returns \u2581a \u2581new \u2581 raft Log \u2581instance ."], "references": ["\u2581// \u2581new Log With Size \u2581returns \u2581a \u2581log \u2581using \u2581the \u2581given \u2581storage \u2581and \u2581max \u2581// \u2581message \u2581 size ."], "bleu": 0.34272823692740445, "rouge_l": 0.5441030723488601}
{"id": 270, "predictions": ["\u2581// \u2581 Handle \u2581is \u2581the \u2581handler \u2581for \u2581 GET \u2581requests"], "references": ["\u2581// \u2581 Handle \u2581interpret s \u2581 r \u2581and \u2581performs \u2581an \u2581operation \u2581on \u2581 s . store \u2581according \u2581to \u2581 r . Method \u2581// \u2581and \u2581other \u2581fields . \u2581If \u2581 r"], "bleu": 0.03357453870906747, "rouge_l": 0.18345864661654135}
{"id": 327, "predictions": ["\u2581// \u2581 New Watch Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581' docker \u2581 watch ' \u2581command"], "references": ["\u2581// \u2581 New Watch Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" watch \" ."], "bleu": 0.44897710722021167, "rouge_l": 0.6777777777777778}
{"id": 247, "predictions": ["\u2581// \u2581advance \u2581returns \u2581the \u2581next \u2581index \u2581in \u2581the \u2581 Message ."], "references": ["\u2581// \u2581advance \u2581advance s \u2581the \u2581read \u2581only \u2581request \u2581queue \u2581kept \u2581by \u2581the \u2581 readonly \u2581struct . \u2581// \u2581It \u2581 dequeue s \u2581the \u2581requests \u2581until \u2581it \u2581finds \u2581the \u2581read \u2581only \u2581request"], "bleu": 0.036450685428881746, "rouge_l": 0.2701107011070111}
{"id": 1128, "predictions": ["\u2581// \u2581Create Project Card \u2581creates \u2581a \u2581 Project \u2581 card ."], "references": ["\u2581// \u2581Create Project Card \u2581creates \u2581a \u2581project \u2581 card \u2581under \u2581a \u2581given \u2581column ."], "bleu": 0.4460504164176434, "rouge_l": 0.7047496790757382}
{"id": 1539, "predictions": ["\u2581// \u2581create System d Log Dir \u2581creates \u2581a \u2581 systemd \u2581log \u2581file \u2581for \u2581the \u2581given \u2581 VM ."], "references": ["\u2581// \u2581Create \u2581log files \u2581for \u2581 systemd \u2581services \u2581in \u2581 outputDir ."], "bleu": 0.11451997463067552, "rouge_l": 0.34580498866213155}
{"id": 108, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581member \u2581of \u2581the \u2581member ."], "references": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581member , \u2581but \u2581the \u2581 data \u2581 dir \u2581of \u2581the \u2581member \u2581is \u2581preserved ."], "bleu": 0.29216430108845853, "rouge_l": 0.6531049250535332}
{"id": 1026, "predictions": ["\u2581// \u2581Go \u2581renders \u2581 data \u2581from \u2581a \u2581 map"], "references": ["\u2581// \u2581Go TemplateEngine \u2581implements \u2581the \u2581 TemplateEngine \u2581interface \u2581for \u2581using \u2581standard \u2581Go \u2581 templates"], "bleu": 0.12109261383365659, "rouge_l": 0.3347050754458162}
{"id": 1740, "predictions": ["\u2581// \u2581 get GitHub Client \u2581returns \u2581a \u2581client \u2581for \u2581the \u2581API \u2581client ."], "references": ["\u2581// \u2581 get GitHub Client \u2581create \u2581the \u2581 github \u2581client \u2581that \u2581we \u2581use \u2581to \u2581 communicate \u2581with \u2581 github"], "bleu": 0.23697654997898265, "rouge_l": 0.4231912784935579}
{"id": 1758, "predictions": ["\u2581// \u2581 Env ForType \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 scope \u2581of \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 Env ForType \u2581returns \u2581the \u2581 slice \u2581of \u2581environment \u2581variables \u2581to \u2581export \u2581for \u2581job Type"], "bleu": 0.37754323999245865, "rouge_l": 0.4756335282651072}
{"id": 741, "predictions": ["\u2581// \u2581 Dec r Ref \u2581 decrement s \u2581the \u2581 data \u2581from \u2581the \u2581file ."], "references": ["\u2581// \u2581 Dec r Ref \u2581 decrement s \u2581the \u2581 ref count \u2581and \u2581possibly \u2581deletes \u2581the \u2581 table"], "bleu": 0.5460078439371484, "rouge_l": 0.6559139784946237}
{"id": 885, "predictions": ["\u2581// \u2581 Withdraw Logs \u2581adds \u2581a \u2581 set \u2581of \u2581entries \u2581to \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581 setNew Logs \u2581is \u2581used \u2581to \u2581setup \u2581the \u2581logs \u2581which \u2581should \u2581be \u2581appended \u2581for \u2581a \u2581request ."], "bleu": 0.11326622904675611, "rouge_l": 0.3577712609970674}
{"id": 2024, "predictions": ["\u2581// \u2581 Profiles Get \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581profiles \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Profiles Get \u2581returns \u2581the \u2581profiles \u2581with \u2581the \u2581given \u2581names \u2581in \u2581the \u2581given \u2581project ."], "bleu": 0.35677496312186124, "rouge_l": 0.6414300736067298}
{"id": 1592, "predictions": ["\u2581// \u2581 Receive Issue Event \u2581 collect s \u2581the \u2581 data \u2581for \u2581a \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Receive Issue Event \u2581computes \u2581 age \u2581 percentiles \u2581and \u2581saves \u2581them \u2581to \u2581 InfluxDB"], "bleu": 0.2928298013714697, "rouge_l": 0.48751248751248744}
{"id": 1415, "predictions": ["\u2581// \u2581 Percentile \u2581returns \u2581a \u2581time \u2581that \u2581is \u2581the \u2581 percentiles \u2581of \u2581the \u2581 percentiles \u2581of \u2581// \u2581the \u2581bundle d States ."], "references": ["\u2581// \u2581 Percentile \u2581returns \u2581given \u2581 percentile \u2581for \u2581 age \u2581of \u2581all \u2581 active \u2581states \u2581at \u2581time \u2581 t"], "bleu": 0.17855149299161602, "rouge_l": 0.34602917341977313}
{"id": 1588, "predictions": ["\u2581// \u2581de dispatcher External \u2581is \u2581called \u2581when \u2581the \u2581 handlers \u2581should \u2581be \u2581 notified \u2581when \u2581// \u2581a \u2581 dispatcher \u2581is \u2581 set ."], "references": ["\u2581// \u2581de mux External \u2581dispatches \u2581the \u2581provided \u2581payload \u2581to \u2581the \u2581external \u2581 plugins ."], "bleu": 0.08607692533178168, "rouge_l": 0.3392029657089898}
{"id": 149, "predictions": ["\u2581// \u2581update dir Command Func \u2581handles \u2581the \u2581 cli \u2581flags \u2581and \u2581 clear s \u2581the \u2581 data ."], "references": ["\u2581// \u2581update dir Command Func \u2581executes \u2581the \u2581\" update dir \" \u2581command ."], "bleu": 0.2680165156355778, "rouge_l": 0.4651416122004358}
{"id": 1629, "predictions": ["\u2581// \u2581 CreateOrUpdate itor Clean \u2581removes \u2581the \u2581resources \u2581from \u2581the \u2581given \u2581resource \u2581and \u2581removes \u2581it \u2581from \u2581the \u2581// \u2581 map \u2581of \u2581 templates ."], "references": ["\u2581// \u2581 Clean \u2581by \u2581 jan itor \u2581 script"], "bleu": 0.0824055698798382, "rouge_l": 0.33008658008658004}
{"id": 882, "predictions": ["\u2581// \u2581 Decode \u2581the \u2581 set \u2581of \u2581 shards \u2581on \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581pipeline Decode \u2581is \u2581used \u2581to \u2581 decode \u2581the \u2581responses \u2581of \u2581pipeline d \u2581requests ."], "bleu": 0.11256866154603391, "rouge_l": 0.34269662921348315}
{"id": 117, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581 key \u2581and \u2581returns \u2581the \u2581 key \u2581and \u2581the \u2581 key \u2581and \u2581field \u2581 name"], "references": ["\u2581// \u2581Parse \u2581will \u2581load \u2581options \u2581from \u2581the \u2581specified \u2581 map"], "bleu": 0.09629943614188137, "rouge_l": 0.29221556886227545}
{"id": 701, "predictions": ["\u2581// \u2581 Commit With \u2581applies \u2581the \u2581given \u2581callback \u2581to \u2581the \u2581transaction . \u2581// \u2581// \u2581 Only \u2581 this \u2581function \u2581will \u2581panic \u2581if \u2581the \u2581 Txn \u2581is \u2581not \u2581 checked \u2581or"], "references": ["\u2581// \u2581 Commit With \u2581act s \u2581like \u2581 Commit , \u2581but \u2581takes \u2581a \u2581callback , \u2581which \u2581gets \u2581run \u2581via \u2581a \u2581// \u2581goroutine \u2581to \u2581avoid \u2581blocking \u2581 this \u2581function . \u2581The"], "bleu": 0.16954555291875742, "rouge_l": 0.3}
{"id": 301, "predictions": ["\u2581// \u2581 round robin s Backoff \u2581 rounds \u2581up \u2581a \u2581backoff \u2581period \u2581for \u2581a \u2581period \u2581period"], "references": ["\u2581// \u2581 round Robin Quorum Backoff \u2581retries \u2581against \u2581 quorum \u2581between \u2581each \u2581backoff . \u2581// \u2581This \u2581is \u2581intended \u2581for \u2581use \u2581with \u2581a \u2581 round \u2581 robin \u2581load \u2581 balancer ."], "bleu": 0.07504695770013659, "rouge_l": 0.32972972972972975}
{"id": 569, "predictions": ["\u2581// \u2581wait On Last Rev \u2581waits \u2581for \u2581the \u2581given \u2581 key \u2581to \u2581be \u2581deleted"], "references": ["\u2581// \u2581wait On Lowest \u2581will \u2581wait \u2581on \u2581the \u2581last \u2581 key \u2581with \u2581a \u2581revision \u2581 < \u2581rw m . my Key . Revision \u2581with \u2581a \u2581// \u2581given \u2581prefix . \u2581If"], "bleu": 0.06704593774764558, "rouge_l": 0.2559440559440559}
{"id": 1198, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 History \u2581instance ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 History \u2581struct \u2581with \u2581the \u2581specific ed \u2581record Log \u2581 size \u2581limit ."], "bleu": 0.3281243725184486, "rouge_l": 0.5877944325481799}
{"id": 634, "predictions": ["\u2581// \u2581Create \u2581creates \u2581a \u2581new \u2581 container \u2581with \u2581the \u2581given \u2581 path \u2581and \u2581 key ."], "references": ["\u2581// \u2581Create \u2581creates \u2581the \u2581node \u2581at \u2581 nodePath . \u2581Create \u2581will \u2581help \u2581to \u2581create \u2581intermediate \u2581directories \u2581with \u2581no \u2581 ttl . \u2581// \u2581If \u2581the \u2581node \u2581has \u2581already \u2581exist ed ,"], "bleu": 0.07309601795775379, "rouge_l": 0.2885135135135135}
{"id": 212, "predictions": ["\u2581// \u2581 Pro claim \u2581returns \u2581the \u2581 election \u2581value \u2581for \u2581the \u2581given \u2581 ctx ."], "references": ["\u2581// \u2581 Pro claim \u2581lets \u2581the \u2581leader \u2581 announce \u2581a \u2581new \u2581value \u2581without \u2581another \u2581 election ."], "bleu": 0.2580191241170539, "rouge_l": 0.5562310030395137}
{"id": 1716, "predictions": ["\u2581// \u2581GetAWS Creds \u2581extracts \u2581the \u2581 data \u2581from \u2581the \u2581 Resource"], "references": ["\u2581// \u2581GetAWS Creds \u2581tries \u2581to \u2581fetch \u2581AWS \u2581credentials \u2581from \u2581a \u2581resource"], "bleu": 0.22416933501922287, "rouge_l": 0.36363636363636365}
{"id": 1753, "predictions": ["\u2581// \u2581 Read HTTP \u2581returns \u2581the \u2581 data \u2581of \u2581the \u2581HTTP \u2581request ."], "references": ["\u2581// \u2581 Read HTTP \u2581fetches \u2581file \u2581 contents \u2581from \u2581a \u2581 URL \u2581with \u2581retries ."], "bleu": 0.24794277351227223, "rouge_l": 0.423121387283237}
{"id": 1750, "predictions": ["\u2581// \u2581 Issues \u2581returns \u2581a \u2581list \u2581of \u2581 repositories \u2581that \u2581match \u2581the \u2581given \u2581issue ."], "references": ["\u2581// \u2581 Issues \u2581is \u2581the \u2581main \u2581work \u2581method \u2581of \u2581 Fla ky Job Reporter . \u2581It \u2581fetches \u2581and \u2581parses \u2581 fla ky \u2581job \u2581 data , \u2581// \u2581then \u2581 sync"], "bleu": 0.07197469847714015, "rouge_l": 0.2515463917525773}
{"id": 1614, "predictions": ["\u2581// \u2581 Merge \u2581merges \u2581the \u2581 git - related \u2581 data \u2581into \u2581a \u2581 git - dir ."], "references": ["\u2581// \u2581 Merge \u2581attempts \u2581to \u2581 merge \u2581commit like \u2581into \u2581the \u2581current \u2581branch . \u2581It \u2581returns \u2581true \u2581// \u2581if \u2581the \u2581 merge \u2581completes . \u2581It \u2581returns \u2581an \u2581error \u2581if \u2581the"], "bleu": 0.08563567336311237, "rouge_l": 0.2790849673202615}
{"id": 459, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 WAL \u2581and \u2581 flush es \u2581the \u2581 WAL ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581current \u2581 WAL \u2581file \u2581and \u2581directory ."], "bleu": 0.35831291876413535, "rouge_l": 0.6802973977695167}
{"id": 1678, "predictions": ["\u2581// \u2581 Read Tail \u2581implements \u2581the \u2581 Log Artifact \u2581interface ."], "references": ["\u2581// \u2581 Read Tail \u2581reads \u2581the \u2581last \u2581 n \u2581bytes \u2581of \u2581the \u2581pod \u2581log"], "bleu": 0.26253019470824807, "rouge_l": 0.4698331193838254}
{"id": 190, "predictions": ["\u2581// \u2581delete \u2581removes \u2581the \u2581 group \u2581from \u2581the \u2581 group , \u2581and \u2581removes \u2581the \u2581 contents \u2581of \u2581// \u2581the \u2581 group ."], "references": ["\u2581// \u2581delete \u2581removes \u2581a \u2581watcher \u2581from \u2581the \u2581 group ."], "bleu": 0.25823077599534505, "rouge_l": 0.5362637362637362}
{"id": 136, "predictions": ["\u2581// \u2581 Handle \u2581the \u2581 test \u2581 UI _ mode _ mode _ mode _ mode _ mode _ mode _ mode _ DATA _ DATA _ bar _ DATA"], "references": ["\u2581// \u2581stop \u2581proxy , \u2581etcd , \u2581delete \u2581 data \u2581directory"], "bleu": 0.044644767873512764, "rouge_l": 0.10990990990990988}
{"id": 1427, "predictions": ["\u2581// \u2581Keep Cover ing Approve rs \u2581returns \u2581a \u2581list \u2581of \u2581 overlapping \u2581 items \u2581that \u2581match \u2581the \u2581 set \u2581of \u2581 predicates \u2581that \u2581are \u2581 satisfied"], "references": ["\u2581// \u2581Keep Cover ing Approve rs \u2581finds \u2581who \u2581we \u2581should \u2581keep \u2581as \u2581 suggested \u2581 approve rs \u2581given \u2581a \u2581 pre - selection \u2581// \u2581known Approve rs \u2581must \u2581be \u2581a"], "bleu": 0.2028648744339716, "rouge_l": 0.3173410404624277}
{"id": 336, "predictions": ["\u2581// \u2581 Compact \u2581 clear s \u2581the \u2581storage \u2581index \u2581to \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581 Compact \u2581discard s \u2581all \u2581log \u2581entries \u2581prior \u2581to \u2581compact Index . \u2581// \u2581It \u2581is \u2581the \u2581application ' s \u2581responsibility \u2581to \u2581not \u2581attempt \u2581to \u2581compact \u2581an \u2581index \u2581// \u2581greater"], "bleu": 0.0642578093873745, "rouge_l": 0.2986013986013986}
{"id": 1940, "predictions": ["\u2581// \u2581 Image Alias Add \u2581creates \u2581a \u2581new \u2581 alias \u2581for \u2581the \u2581given \u2581image ."], "references": ["\u2581// \u2581 Image Alias Add \u2581inserts \u2581an \u2581 alias \u2581 en to \u2581the \u2581database ."], "bleu": 0.35831291876413535, "rouge_l": 0.6}
{"id": 115, "predictions": ["\u2581// \u2581 New Cluster V 3 \u2581creates \u2581a \u2581new \u2581cluster \u2581 V 3 \u2581 Cluster"], "references": ["\u2581// \u2581 New Cluster V 3 \u2581returns \u2581a \u2581launch ed \u2581cluster \u2581with \u2581a \u2581 grpc \u2581client \u2581connection \u2581// \u2581for \u2581each \u2581cluster \u2581member ."], "bleu": 0.23883662767689054, "rouge_l": 0.456359102244389}
{"id": 838, "predictions": ["\u2581// \u2581 Close Streams \u2581closes \u2581the \u2581 Network Transport ."], "references": ["\u2581// \u2581 Close Streams \u2581closes \u2581the \u2581current \u2581streams ."], "bleu": 0.5900468726392808, "rouge_l": 0.7439024390243903}
{"id": 1773, "predictions": ["\u2581// \u2581make Review s \u2581returns \u2581a \u2581 functional \u2581 type ."], "references": ["\u2581// \u2581make Review s \u2581renders \u2581 review \u2581policy \u2581into \u2581the \u2581corresponding \u2581GitHub \u2581 api \u2581object . \u2581// \u2581// \u2581Returns \u2581nil \u2581if \u2581the \u2581policy \u2581is \u2581nil , \u2581or \u2581 approval s"], "bleu": 0.06338349501054427, "rouge_l": 0.3151291512915129}
{"id": 1291, "predictions": ["\u2581// \u2581 Conditional Request \u2581checks \u2581if \u2581the \u2581request \u2581is \u2581valid \u2581and \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581request \u2581// \u2581was \u2581not \u2581found ."], "references": ["\u2581// \u2581 Crumb Request \u2581requests \u2581a \u2581 CSRF \u2581 protection \u2581 token \u2581from \u2581 Jenkins \u2581to \u2581// \u2581use \u2581it \u2581in \u2581subsequent \u2581requests . \u2581 Required \u2581for \u2581 Jenkins \u2581 masters"], "bleu": 0.060258746541727415, "rouge_l": 0.18711656441717792}
{"id": 652, "predictions": ["\u2581// \u2581txn Command Func \u2581handles \u2581a \u2581command \u2581to \u2581create \u2581a \u2581 Command Func ."], "references": ["\u2581// \u2581txn Command Func \u2581executes \u2581the \u2581\" txn \" \u2581command ."], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 562, "predictions": ["\u2581// \u2581 compaction Command Func \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 compaction \u2581// \u2581for \u2581the \u2581command \u2581in \u2581the \u2581 set \u2581of \u2581 compaction s ."], "references": ["\u2581// \u2581 compaction Command Func \u2581executes \u2581the \u2581\" compaction \" \u2581command ."], "bleu": 0.18012107375362474, "rouge_l": 0.4849823321554771}
{"id": 1741, "predictions": ["\u2581// \u2581quota Check AndWait \u2581is \u2581used \u2581to \u2581check \u2581if \u2581the \u2581client \u2581is \u2581 alive ."], "references": ["\u2581// \u2581limits Check AndWait \u2581make \u2581sure \u2581we \u2581have \u2581not \u2581reached \u2581the \u2581limit \u2581or \u2581wait"], "bleu": 0.12300686288463772, "rouge_l": 0.27758816837315126}
{"id": 96, "predictions": ["\u2581// \u2581 role Grant Permission Command Func \u2581sets \u2581the \u2581 role \u2581grant \u2581 role \u2581to \u2581the \u2581 role"], "references": ["\u2581// \u2581 role Grant Permission Command Func \u2581executes \u2581the \u2581\" role \u2581grant - permission \" \u2581command ."], "bleu": 0.4104424101861004, "rouge_l": 0.5743879472693033}
{"id": 1679, "predictions": ["\u2581// \u2581new Problems \u2581returns \u2581a \u2581new \u2581 map \u2581of \u2581 type \u2581 set \u2581to \u2581 empty \u2581 map ."], "references": ["\u2581// \u2581new Problems \u2581compares \u2581the \u2581list \u2581of \u2581problems \u2581with \u2581the \u2581list \u2581of \u2581past \u2581comments \u2581on \u2581// \u2581the \u2581 PR \u2581to \u2581decide \u2581which \u2581are \u2581new ."], "bleu": 0.10704750718084244, "rouge_l": 0.31054545454545457}
{"id": 1622, "predictions": ["\u2581// \u2581 ssh Volume \u2581returns \u2581a \u2581 core . Volume \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581volume \u2581// \u2581 secret \u2581 key \u2581for \u2581the \u2581 secret ."], "references": ["\u2581// \u2581 ssh Volume \u2581converts \u2581a \u2581 secret \u2581holding \u2581 ssh \u2581 keys \u2581into \u2581the \u2581corresponding \u2581volume \u2581and \u2581mount . \u2581// \u2581// \u2581This \u2581is \u2581used \u2581by \u2581 Clone Refs \u2581to"], "bleu": 0.1687244849514422, "rouge_l": 0.3666666666666667}
{"id": 1492, "predictions": ["\u2581// \u2581find \u2581% For File \u2581 searches \u2581for \u2581a \u2581given \u2581file \u2581and \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581// \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581find Owners For File \u2581returns \u2581the \u2581 OWNER S \u2581file \u2581 path \u2581 f ur the st \u2581down \u2581the \u2581tree \u2581for \u2581a \u2581specified \u2581file \u2581// \u2581using \u2581 owner Map"], "bleu": 0.13274877092647897, "rouge_l": 0.3823361823361824}
{"id": 152, "predictions": ["\u2581// \u2581 New Watch Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 observing \u2581 agents ."], "references": ["\u2581// \u2581 New Watch Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" watcher \u2581runner \" ."], "bleu": 0.47631009147745074, "rouge_l": 0.6703296703296704}
{"id": 1211, "predictions": ["\u2581// \u2581Add Commit \u2581adds \u2581a \u2581new \u2581commit \u2581to \u2581the \u2581local \u2581directory"], "references": ["\u2581// \u2581Add Commit \u2581adds \u2581the \u2581files \u2581to \u2581a \u2581new \u2581commit \u2581in \u2581the \u2581repo ."], "bleu": 0.3413204028714309, "rouge_l": 0.6264441591784339}
{"id": 832, "predictions": ["\u2581// \u2581 finalize \u2581 flush es \u2581all \u2581buffered \u2581 data \u2581and \u2581 flush es \u2581the \u2581 data \u2581to \u2581disk ."], "references": ["\u2581// \u2581 finalize \u2581is \u2581used \u2581to \u2581 close \u2581all \u2581of \u2581our \u2581resources ."], "bleu": 0.1352045976914347, "rouge_l": 0.37809917355371897}
{"id": 797, "predictions": ["\u2581// \u2581 Seek \u2581moves \u2581the \u2581 iterator \u2581to \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Seek \u2581would \u2581 seek \u2581to \u2581the \u2581provided \u2581 key \u2581if \u2581present . \u2581If \u2581 absent , \u2581it \u2581would \u2581 seek \u2581to \u2581the \u2581next \u2581smallest \u2581 key \u2581// \u2581greater"], "bleu": 0.06313600930179904, "rouge_l": 0.3978260869565217}
{"id": 1578, "predictions": ["\u2581// \u2581 Dump Profile \u2581prints \u2581the \u2581profile \u2581from \u2581the \u2581given \u2581 Writer"], "references": ["\u2581// \u2581 Dump Profile \u2581 dumps \u2581the \u2581profiles \u2581given \u2581to \u2581writer \u2581in \u2581go \u2581 coverage \u2581 format ."], "bleu": 0.1972644133873444, "rouge_l": 0.45042194092827004}
{"id": 1603, "predictions": ["\u2581// \u2581 set Branch er \u2581adjust s \u2581the \u2581 Branch er \u2581pair \u2581of \u2581the \u2581given \u2581branch ."], "references": ["\u2581// \u2581 set Branch er Regexes \u2581 compile s \u2581and \u2581validates \u2581all \u2581the \u2581regular \u2581expressions \u2581for \u2581// \u2581the \u2581provided \u2581branch \u2581 specifiers ."], "bleu": 0.2210902301002785, "rouge_l": 0.48683160415003984}
{"id": 1645, "predictions": ["\u2581// \u2581 write Response \u2581builds \u2581a \u2581 admission \u2581 admission \u2581response ."], "references": ["\u2581// \u2581 write Response \u2581gets \u2581the \u2581response \u2581from \u2581only Update Status \u2581and \u2581writes \u2581it \u2581to \u2581 w ."], "bleu": 0.1972644133873444, "rouge_l": 0.3860759493670886}
{"id": 538, "predictions": ["\u2581// \u2581 sync Watchers Loop \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581runs \u2581a \u2581 watch . Watcher \u2581// \u2581 sync ing \u2581all \u2581of \u2581the \u2581 watch \u2581to \u2581the \u2581 watch"], "references": ["\u2581// \u2581 sync Watchers Loop \u2581 sync s \u2581the \u2581watcher \u2581in \u2581the \u2581un synced \u2581 map \u2581every \u2581100 ms ."], "bleu": 0.18391565202644336, "rouge_l": 0.4149659863945578}
{"id": 1587, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 remove \u2581all \u2581 plugins \u2581that \u2581are \u2581 HTTPS ."], "references": ["\u2581// \u2581need De mux \u2581returns \u2581whether \u2581there \u2581are \u2581any \u2581external \u2581 plugins \u2581that \u2581need \u2581to \u2581// \u2581 get \u2581the \u2581present \u2581event ."], "bleu": 0.12635478946719764, "rouge_l": 0.31362467866323906}
{"id": 943, "predictions": ["\u2581// \u2581verify Leader \u2581is \u2581used \u2581to \u2581verify \u2581the \u2581leader \u2581of \u2581the \u2581leader \u2581// \u2581 expires ."], "references": ["\u2581// \u2581verify Leader \u2581must \u2581be \u2581called \u2581from \u2581the \u2581main \u2581thread \u2581for \u2581 safety . \u2581// \u2581 Cause s \u2581the \u2581 followers \u2581to \u2581attempt \u2581an \u2581immediate \u2581heartbeat ."], "bleu": 0.09727427233967392, "rouge_l": 0.3112244897959183}
{"id": 2026, "predictions": ["\u2581// \u2581 Profile Config Clear \u2581removes \u2581all \u2581 keys \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581 Profile Config Clear \u2581resets \u2581the \u2581 config \u2581of \u2581the \u2581profile \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.2635729096944705, "rouge_l": 0.5015416238437821}
{"id": 344, "predictions": ["\u2581// \u2581record Transition \u2581is \u2581the \u2581state \u2581of \u2581the \u2581 raft \u2581state ."], "references": ["\u2581// \u2581record Transition \u2581records \u2581state \u2581change \u2581happening \u2581in \u2581every \u2581sub Conn \u2581and \u2581based \u2581on \u2581// \u2581that \u2581it \u2581evaluates \u2581what \u2581 aggregated \u2581state \u2581should \u2581be . \u2581// \u2581It \u2581can \u2581only \u2581transition"], "bleu": 0.05131440122676713, "rouge_l": 0.30942028985507253}
{"id": 1237, "predictions": ["\u2581// \u2581update Metrics \u2581updates \u2581the \u2581metrics \u2581for \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 helper \u2581to \u2581update \u2581disk \u2581metrics"], "bleu": 0.13065113298388567, "rouge_l": 0.3315217391304348}
{"id": 1593, "predictions": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581configuration \u2581from \u2581the \u2581given \u2581configuration ."], "references": ["\u2581// \u2581 Load \u2581 loads \u2581and \u2581parses \u2581the \u2581 config \u2581at \u2581 path ."], "bleu": 0.34617729081707266, "rouge_l": 0.5310945273631842}
{"id": 834, "predictions": ["\u2581// \u2581 New Network Transport With Config \u2581creates \u2581a \u2581new \u2581 Network Transport \u2581with \u2581the \u2581given \u2581configuration ."], "references": ["\u2581// \u2581 New Network Transport With Config \u2581creates \u2581a \u2581new \u2581network \u2581transport \u2581with \u2581the \u2581given \u2581 config \u2581struct"], "bleu": 0.6272517339014033, "rouge_l": 0.7222222222222221}
{"id": 828, "predictions": ["\u2581// \u2581 Reap Snapshots \u2581removes \u2581all \u2581snapshots \u2581from \u2581the \u2581 File Snapshot Store"], "references": ["\u2581// \u2581 Reap Snapshots \u2581 reap s \u2581any \u2581snapshots \u2581beyond \u2581the \u2581retain \u2581count ."], "bleu": 0.276857765580105, "rouge_l": 0.4414957780458384}
{"id": 975, "predictions": ["\u2581// \u2581 Panic Handler \u2581returns \u2581a \u2581handler \u2581that \u2581handles \u2581a \u2581panic \u2581if \u2581it \u2581is \u2581not \u2581 set ."], "references": ["\u2581// \u2581 Panic Handler \u2581recover s \u2581from \u2581panic s \u2581 graceful ly \u2581and \u2581calls \u2581// \u2581the \u2581error \u2581handling \u2581 code \u2581for \u2581a \u2581500 \u2581error ."], "bleu": 0.1487895350818259, "rouge_l": 0.31629629629629635}
{"id": 623, "predictions": ["\u2581// \u2581print c URL \u2581prints \u2581the \u2581 URL \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581print c URL \u2581prints \u2581the \u2581 c URL \u2581equivalent \u2581request \u2581to \u2581stderr . \u2581// \u2581It \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581 body \u2581of \u2581the \u2581request \u2581cannot \u2581// \u2581be \u2581read"], "bleu": 0.14570270169955218, "rouge_l": 0.4862318840579709}
{"id": 1132, "predictions": ["\u2581// \u2581 Push \u2581adds \u2581a \u2581new \u2581 InfluxDB \u2581to \u2581the \u2581 InfluxDB \u2581database ."], "references": ["\u2581// \u2581 Push \u2581a \u2581point \u2581to \u2581the \u2581database"], "bleu": 0.2102369368326755, "rouge_l": 0.6692789968652038}
{"id": 89, "predictions": ["\u2581// \u2581 ServerConfig \u2581returns \u2581the \u2581 TLS \u2581configuration \u2581for \u2581the \u2581 TLS \u2581 info"], "references": ["\u2581// \u2581 ServerConfig \u2581generates \u2581a \u2581 tls . Config \u2581object \u2581for \u2581use \u2581by \u2581an \u2581HTTP \u2581server ."], "bleu": 0.14695235444496824, "rouge_l": 0.3170478170478171}
{"id": 1677, "predictions": ["\u2581// \u2581 Read At Most \u2581reads \u2581the \u2581 contents \u2581of \u2581a \u2581 Pod Log Artifact \u2581to \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Read At Most \u2581reads \u2581at \u2581most \u2581 n \u2581bytes"], "bleu": 0.2592494576098376, "rouge_l": 0.4513742071881607}
{"id": 345, "predictions": ["\u2581// \u2581do Serialize \u2581is \u2581the \u2581same \u2581as \u2581 Encode \u2581but \u2581it \u2581takes \u2581a \u2581 secret \u2581and \u2581stores \u2581it \u2581// \u2581into \u2581the \u2581 Etcd Server ."], "references": ["\u2581// \u2581do Serialize \u2581handles \u2581the \u2581 auth \u2581logic , \u2581with \u2581permissions \u2581 checked \u2581by \u2581\" chk \", \u2581for \u2581a \u2581serialized \u2581request \u2581\" get \" . \u2581Returns \u2581a \u2581non - nil"], "bleu": 0.09744534984478934, "rouge_l": 0.2504398826979472}
{"id": 1525, "predictions": ["\u2581// \u2581 apply Create \u2581creates \u2581a \u2581new \u2581 app \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581arguments ."], "references": ["\u2581// \u2581 apply Create \u2581will \u2581dry - run \u2581create \u2581and \u2581then \u2581 pipe \u2581 this \u2581to \u2581 kubectl \u2581 apply . \u2581// \u2581// \u2581If \u2581we \u2581use \u2581the \u2581create \u2581verb \u2581it"], "bleu": 0.11129152625886096, "rouge_l": 0.2837209302325582}
{"id": 2023, "predictions": ["\u2581// \u2581 Profile Get \u2581returns \u2581a \u2581 Profile \u2581by \u2581 name ."], "references": ["\u2581// \u2581 Profile Get \u2581returns \u2581the \u2581profile \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.44569465355269594, "rouge_l": 0.6354166666666667}
{"id": 302, "predictions": ["\u2581// \u2581is Halt Err \u2581returns \u2581true \u2581if \u2581the \u2581 status \u2581is \u2581a \u2581 graceful \u2581shutdown ."], "references": ["\u2581// \u2581is Halt Err \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581error \u2581and \u2581context \u2581indicate \u2581no \u2581forward \u2581// \u2581progress \u2581can \u2581be \u2581made , \u2581even \u2581after \u2581 reconnecting ."], "bleu": 0.26996153554871416, "rouge_l": 0.45658682634730546}
{"id": 1747, "predictions": ["\u2581// \u2581fetch Recent Issues \u2581deletes \u2581all \u2581 repositories \u2581that \u2581have \u2581been \u2581 set \u2581in \u2581the \u2581 fetcher ."], "references": ["\u2581// \u2581fetch Recent Issues \u2581retrieves \u2581issues \u2581from \u2581 DB , \u2581but \u2581only \u2581fetches \u2581issues \u2581modified \u2581since \u2581last \u2581 call"], "bleu": 0.19500740212091697, "rouge_l": 0.32275132275132273}
{"id": 532, "predictions": ["\u2581// \u2581 evict \u2581removes \u2581a \u2581 key \u2581from \u2581the \u2581 key ."], "references": ["\u2581// \u2581 tombstone \u2581puts \u2581a \u2581revision , \u2581pointing \u2581to \u2581a \u2581 tombstone , \u2581to \u2581the \u2581 key Index . \u2581// \u2581It \u2581also \u2581creates \u2581a \u2581new \u2581 empty \u2581generation \u2581in \u2581the"], "bleu": 0.06004676067680603, "rouge_l": 0.3536231884057971}
{"id": 217, "predictions": ["\u2581// \u2581 New Exec Watch Command \u2581returns \u2581a \u2581command \u2581to \u2581 watch \u2581 exec \u2581command"], "references": ["\u2581// \u2581 New Exec Watch Command \u2581returns \u2581the \u2581CLI \u2581command \u2581for \u2581\" exec - watch \" ."], "bleu": 0.4196878597585917, "rouge_l": 0.5562310030395137}
{"id": 1299, "predictions": ["\u2581// \u2581Get BuildInfo \u2581retrieves \u2581information \u2581about \u2581a \u2581specific \u2581resource ."], "references": ["\u2581// \u2581Get JobInfo \u2581retrieves \u2581 Jenkins \u2581job \u2581information"], "bleu": 0.18850319022747347, "rouge_l": 0.4535315985130111}
{"id": 795, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Close \u2581would \u2581 close \u2581the \u2581 iterator . \u2581It \u2581is \u2581important \u2581to \u2581 call \u2581 this \u2581when \u2581you ' re \u2581done \u2581with \u2581iteration ."], "bleu": 0.06291798059072845, "rouge_l": 0.3758802816901408}
{"id": 1858, "predictions": ["\u2581// \u2581Apply Default \u2581applies \u2581the \u2581default \u2581configuration \u2581configuration \u2581to \u2581the \u2581 GCS Configuration ."], "references": ["\u2581// \u2581Apply Default \u2581applies \u2581the \u2581defaults \u2581for \u2581 GCS Configuration \u2581 decorations . \u2581If \u2581a \u2581field \u2581has \u2581a \u2581zero \u2581value , \u2581// \u2581it \u2581replaces \u2581that \u2581with \u2581the \u2581value \u2581 set"], "bleu": 0.13818884025314393, "rouge_l": 0.3839160839160839}
{"id": 788, "predictions": ["\u2581// \u2581 Conflicts Tables \u2581returns \u2581the \u2581number \u2581of \u2581tables \u2581in \u2581the \u2581 set \u2581of \u2581 keys \u2581in \u2581the \u2581// \u2581 table ."], "references": ["\u2581// \u2581 overlapping Tables \u2581returns \u2581the \u2581tables \u2581that \u2581 intersect \u2581with \u2581 key \u2581range . \u2581Returns \u2581a \u2581half - interval . \u2581// \u2581This \u2581function \u2581should \u2581already \u2581have \u2581 acquired \u2581a"], "bleu": 0.10134272790924152, "rouge_l": 0.37423312883435583}
{"id": 330, "predictions": ["\u2581// \u2581 Entries \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581 Entries \u2581implements \u2581the \u2581 Storage \u2581interface ."], "bleu": 0.23901088824528133, "rouge_l": 0.5865384615384615}
{"id": 1058, "predictions": ["\u2581// \u2581Build Path Helper \u2581returns \u2581a \u2581 Route Helper Func \u2581that \u2581will \u2581 add \u2581a \u2581 route \u2581to \u2581the \u2581 Route Info ."], "references": ["\u2581// \u2581Build Path Helper \u2581Builds \u2581a \u2581 route Helper func \u2581for \u2581a \u2581particular \u2581 Route Info"], "bleu": 0.25270455578796175, "rouge_l": 0.5829713292788878}
{"id": 1526, "predictions": ["\u2581// \u2581determine Skipped Pre submit s \u2581returns \u2581a \u2581 pre submit s \u2581job \u2581for \u2581a \u2581given \u2581 set \u2581of \u2581// \u2581 pre - existing \u2581 pre - existing \u2581 pre"], "references": ["\u2581// \u2581determine Skipped Pre submit s \u2581identifies \u2581the \u2581largest \u2581 set \u2581of \u2581 contexts \u2581we \u2581can \u2581actually \u2581// \u2581 post \u2581skipped \u2581 contexts \u2581for , \u2581given \u2581a \u2581 set \u2581of"], "bleu": 0.27501804610524816, "rouge_l": 0.43333333333333335}
{"id": 1946, "predictions": ["\u2581// \u2581 Image Get Pools \u2581returns \u2581the \u2581list \u2581of \u2581 pools \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Get Pools \u2581 get \u2581the \u2581names \u2581of \u2581all \u2581storage \u2581 pools \u2581on \u2581which \u2581a \u2581given \u2581image \u2581 exists ."], "bleu": 0.23011232462942058, "rouge_l": 0.522707797772065}
{"id": 1901, "predictions": ["\u2581// \u2581list Job Builds \u2581builds \u2581a \u2581job \u2581 slice \u2581of \u2581job \u2581names ."], "references": ["\u2581// \u2581list Job Builds \u2581concurrently \u2581lists \u2581builds \u2581for \u2581the \u2581given \u2581job \u2581prefixes \u2581that \u2581have \u2581been \u2581run \u2581on \u2581a \u2581 PR"], "bleu": 0.1797219959497527, "rouge_l": 0.40861244019138754}
{"id": 1136, "predictions": ["\u2581// \u2581 Pre submit Spec \u2581 pre - initialize s \u2581the \u2581 set \u2581of \u2581 pre submit s \u2581 data \u2581to \u2581the \u2581 set \u2581of \u2581 p ."], "references": ["\u2581// \u2581 Pre submit Spec \u2581initializes \u2581a \u2581 ProwJob Spec \u2581for \u2581a \u2581given \u2581 pre submit \u2581job ."], "bleu": 0.2121642520847466, "rouge_l": 0.45252225519287836}
{"id": 1441, "predictions": ["\u2581// \u2581Get Files \u2581returns \u2581a \u2581list \u2581of \u2581files \u2581that \u2581match \u2581the \u2581 URL \u2581and \u2581 URL ."], "references": ["\u2581// \u2581Get Files \u2581returns \u2581 owners \u2581files \u2581that \u2581still \u2581need \u2581 approval ."], "bleu": 0.25281168697394946, "rouge_l": 0.5464725643896976}
{"id": 1515, "predictions": ["\u2581// \u2581 Complete \u2581completes \u2581the \u2581options \u2581for \u2581 this \u2581options ."], "references": ["\u2581// \u2581 Complete \u2581internal ize s \u2581command \u2581line \u2581arguments"], "bleu": 0.21200626759025185, "rouge_l": 0.3055091819699499}
{"id": 1304, "predictions": ["\u2581// \u2581Build From Spec \u2581builds \u2581a \u2581 Kubernetes \u2581build \u2581spec \u2581from \u2581the \u2581spec \u2581spec ."], "references": ["\u2581// \u2581Build From Spec \u2581triggers \u2581a \u2581 Jenkins \u2581build \u2581for \u2581the \u2581provided \u2581 ProwJob Spec . \u2581// \u2581 p row JobID \u2581help s \u2581 us \u2581track \u2581the \u2581build \u2581before \u2581it"], "bleu": 0.10590468537741983, "rouge_l": 0.37731958762886597}
{"id": 366, "predictions": ["\u2581// \u2581 Update Capability \u2581updates \u2581the \u2581 capability \u2581 config \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Update Capability \u2581updates \u2581the \u2581enabled Map \u2581when \u2581the \u2581cluster \u2581version \u2581increase s ."], "bleu": 0.3708163623065084, "rouge_l": 0.5191489361702127}
{"id": 269, "predictions": ["\u2581// \u2581Build \u2581is \u2581responsible \u2581for \u2581 configuring \u2581the \u2581 resolver ."], "references": ["\u2581// \u2581Build \u2581creates \u2581or \u2581reuse s \u2581an \u2581etcd \u2581 resolver \u2581for \u2581the \u2581etcd \u2581cluster \u2581 name \u2581identified \u2581by \u2581the \u2581 authority \u2581part \u2581of \u2581the \u2581target ."], "bleu": 0.060000071370554915, "rouge_l": 0.3526011560693642}
{"id": 1789, "predictions": ["\u2581// \u2581 Render \u2581renders \u2581the \u2581record \u2581in \u2581 format ."], "references": ["\u2581// \u2581 Render \u2581writes \u2581HTML \u2581representing \u2581 this \u2581 Record \u2581to \u2581the \u2581provided \u2581output ."], "bleu": 0.16367554144167565, "rouge_l": 0.3860759493670886}
{"id": 1111, "predictions": ["\u2581// \u2581Get Issue Labels \u2581returns \u2581a \u2581list \u2581of \u2581 repositories \u2581that \u2581have \u2581 relation ."], "references": ["\u2581// \u2581Get Issue Labels \u2581gets \u2581labels \u2581on \u2581an \u2581issue"], "bleu": 0.22894156860669912, "rouge_l": 0.3490701001430615}
{"id": 53, "predictions": ["\u2581// \u2581send Heartbeat \u2581is \u2581used \u2581to \u2581send \u2581a \u2581heartbeat \u2581to \u2581the \u2581 raft ."], "references": ["\u2581// \u2581send Heartbeat \u2581sends \u2581a \u2581heartbeat \u2581RPC \u2581to \u2581the \u2581given \u2581peer ."], "bleu": 0.22894156860669912, "rouge_l": 0.6240409207161125}
{"id": 130, "predictions": ["\u2581// \u2581 notify \u2581notifies \u2581the \u2581event \u2581 watchers \u2581for \u2581the \u2581 watch \u2581event ."], "references": ["\u2581// \u2581 notify \u2581function \u2581accepts \u2581an \u2581event \u2581and \u2581 notify \u2581to \u2581the \u2581 watchers ."], "bleu": 0.21884820673336214, "rouge_l": 0.548314606741573}
{"id": 1255, "predictions": ["\u2581// \u2581find Changes \u2581returns \u2581a \u2581list \u2581of \u2581 items \u2581that \u2581are \u2581 satisfied \u2581by \u2581the \u2581 KBFS List"], "references": ["\u2581// \u2581find Changes \u2581compares \u2581the \u2581new List \u2581of \u2581 coverage \u2581against \u2581the \u2581base \u2581list \u2581and \u2581returns \u2581the \u2581result"], "bleu": 0.1712473044894657, "rouge_l": 0.3333333333333333}
{"id": 92, "predictions": ["\u2581// \u2581 apply V 2 Request \u2581 apply s \u2581the \u2581 v 2 Request \u2581 v 2 Request \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 apply V 2 Request \u2581interpret s \u2581 r \u2581as \u2581a \u2581 call \u2581to \u2581 v 2 store . X \u2581// \u2581and \u2581returns \u2581a \u2581 Response \u2581interpreted \u2581from \u2581"], "bleu": 0.23717718159504203, "rouge_l": 0.44907975460122695}
{"id": 1971, "predictions": ["\u2581// \u2581 Network Update \u2581updates \u2581a \u2581 Cluster \u2581object \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Network Update \u2581updates \u2581the \u2581network \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.6026080978557137, "rouge_l": 0.7959667852906288}
{"id": 1904, "predictions": ["\u2581// \u2581image Delete From Disk \u2581removes \u2581the \u2581image \u2581file \u2581from \u2581the \u2581 path"], "references": ["\u2581// \u2581 Helper \u2581to \u2581delete \u2581an \u2581image \u2581file \u2581from \u2581the \u2581local \u2581images \u2581directory ."], "bleu": 0.267768029597763, "rouge_l": 0.36791314837153194}
{"id": 453, "predictions": ["\u2581// \u2581member Remove Command Func \u2581removes \u2581a \u2581 Command \u2581command ."], "references": ["\u2581// \u2581member Remove Command Func \u2581executes \u2581the \u2581\" member \u2581 remove \" \u2581command ."], "bleu": 0.3679134727458049, "rouge_l": 0.6264441591784339}
{"id": 1402, "predictions": ["\u2581// \u2581 Update All \u2581updates \u2581all \u2581resources \u2581in \u2581the \u2581 config ."], "references": ["\u2581// \u2581 Update All \u2581signals \u2581update \u2581for \u2581all \u2581resources \u2581hold \u2581by \u2581the \u2581client ."], "bleu": 0.2997983280608584, "rouge_l": 0.6069651741293532}
{"id": 1428, "predictions": ["\u2581// \u2581Get Suggested Approve rs \u2581returns \u2581the \u2581 set \u2581of \u2581 organizations \u2581that \u2581match \u2581the \u2581 filter"], "references": ["\u2581// \u2581Get Suggested Approve rs \u2581solve s \u2581the \u2581exact \u2581cover \u2581problem , \u2581finding \u2581an \u2581 approve r \u2581 capable \u2581of \u2581// \u2581 ap prov ing \u2581every \u2581 OWNER S \u2581file"], "bleu": 0.1433161958538347, "rouge_l": 0.40531561461794013}
{"id": 577, "predictions": ["\u2581// \u2581 New Del Command \u2581returns \u2581a \u2581command \u2581for \u2581 remove \u2581 key - value \u2581pairs"], "references": ["\u2581// \u2581 New Del Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" del \" ."], "bleu": 0.39567167294524297, "rouge_l": 0.5191489361702127}
{"id": 1463, "predictions": ["\u2581// \u2581 ReadAll \u2581reads \u2581all \u2581 GCS Artifact \u2581from \u2581stdin \u2581and \u2581returns \u2581the \u2581 size \u2581of \u2581all \u2581 Artifact Artifact s ."], "references": ["\u2581// \u2581 ReadAll \u2581will \u2581either \u2581read \u2581the \u2581entire \u2581file \u2581or \u2581throw \u2581an \u2581error \u2581if \u2581file \u2581 size \u2581is \u2581too \u2581big"], "bleu": 0.12740810460323607, "rouge_l": 0.28818897637795277}
{"id": 322, "predictions": ["\u2581// \u2581 New Migrate Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581` kubeadm \u2581 Migrate Command `"], "references": ["\u2581// \u2581 New Migrate Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" migrate \" ."], "bleu": 0.4393160369685383, "rouge_l": 0.6161616161616161}
{"id": 168, "predictions": ["\u2581// \u2581lease Grant Command Func \u2581is \u2581used \u2581to \u2581 revoke \u2581a \u2581 set \u2581of \u2581 identities"], "references": ["\u2581// \u2581lease Grant Command Func \u2581executes \u2581the \u2581\" lease \u2581grant \" \u2581command ."], "bleu": 0.28175950490399515, "rouge_l": 0.35138248847926273}
{"id": 184, "predictions": ["\u2581// \u2581 New Cluster Proxy \u2581returns \u2581a \u2581new \u2581 Cluster Proxy ."], "references": ["\u2581// \u2581 New Cluster Proxy \u2581takes \u2581optional \u2581prefix \u2581to \u2581fetch \u2581 grpc - proxy \u2581member \u2581endpoints . \u2581// \u2581The \u2581returned \u2581channel \u2581is \u2581closed \u2581when \u2581there \u2581is \u2581 grpc - proxy"], "bleu": 0.09125134314003602, "rouge_l": 0.30942028985507253}
{"id": 1173, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 controller \u2581and \u2581runs \u2581the \u2581worker ."], "references": ["\u2581// \u2581 Run \u2581starts \u2581threads \u2581workers , \u2581returning \u2581after \u2581receiving \u2581a \u2581stop \u2581signal ."], "bleu": 0.2561998602394406, "rouge_l": 0.3793532338308458}
{"id": 565, "predictions": ["\u2581// \u2581 New Handler \u2581returns \u2581a \u2581new \u2581 EBS Proxy ."], "references": ["\u2581// \u2581 New Handler \u2581creates \u2581a \u2581new \u2581HTTP \u2581handler , \u2581listening \u2581on \u2581the \u2581given \u2581transport , \u2581// \u2581which \u2581will \u2581proxy \u2581requests \u2581to \u2581an \u2581etcd \u2581cluster . \u2581// \u2581The \u2581handler \u2581will"], "bleu": 0.06701988620057787, "rouge_l": 0.3151291512915129}
{"id": 1192, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 config ."], "references": ["\u2581// \u2581 Run \u2581 uploads \u2581artifacts \u2581with \u2581the \u2581specified \u2581options \u2581 forever . \u2581// \u2581// \u2581Sends \u2581a \u2581stop \u2581message \u2581to \u2581the \u2581artifact \u2581 uploader \u2581when \u2581it \u2581is \u2581interrupted ."], "bleu": 0.024868171908627612, "rouge_l": 0.2942122186495177}
{"id": 1466, "predictions": ["\u2581// \u2581options For Repo \u2581returns \u2581a \u2581 slice \u2581of \u2581 plugins \u2581that \u2581are \u2581 owned \u2581by \u2581the \u2581// \u2581given \u2581repo ."], "references": ["\u2581// \u2581options For Repo \u2581gets \u2581the \u2581 plugins . Welcome \u2581struct \u2581that \u2581is \u2581applicable \u2581to \u2581the \u2581indicated \u2581repo ."], "bleu": 0.2179301929852717, "rouge_l": 0.5045492142266336}
{"id": 1920, "predictions": ["\u2581// \u2581 container Device Add \u2581 add \u2581 container \u2581 info \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581Add \u2581a \u2581device \u2581to \u2581a \u2581 container"], "bleu": 0.11502783619900048, "rouge_l": 0.3546511627906977}
{"id": 1057, "predictions": ["\u2581// \u2581 Name \u2581returns \u2581the \u2581 route \u2581 name \u2581for \u2581the \u2581 route ."], "references": ["\u2581// \u2581 Name \u2581allows \u2581users \u2581to \u2581 set \u2581custom \u2581names \u2581for \u2581the \u2581 routes ."], "bleu": 0.23589918172513238, "rouge_l": 0.548314606741573}
{"id": 1589, "predictions": ["\u2581// \u2581 dispatch \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 dispatch \u2581creates \u2581a \u2581new \u2581request \u2581using \u2581the \u2581provided \u2581payload \u2581and \u2581 headers \u2581// \u2581and \u2581dispatches \u2581the \u2581request \u2581to \u2581the \u2581provided \u2581endpoint ."], "bleu": 0.08910249643100833, "rouge_l": 0.4380610412926392}
{"id": 987, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 empty \u2581 group ."], "references": ["\u2581// \u2581 New \u2581generator \u2581for \u2581creating \u2581a \u2581 Buff a lo \u2581API \u2581application"], "bleu": 0.19561803044642362, "rouge_l": 0.41049798115746977}
{"id": 484, "predictions": ["\u2581// \u2581 ReadDir \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581files \u2581in \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581 ReadDir \u2581returns \u2581the \u2581filenames \u2581in \u2581the \u2581given \u2581directory \u2581in \u2581sorted \u2581order ."], "bleu": 0.42311785416105785, "rouge_l": 0.642857142857143}
{"id": 1921, "predictions": ["\u2581// \u2581profile Device Add \u2581creates \u2581a \u2581 dev \u2581 thin \u2581device \u2581for \u2581the \u2581given \u2581 container ."], "references": ["\u2581// \u2581Add \u2581a \u2581device \u2581to \u2581a \u2581profile"], "bleu": 0.09083627868206415, "rouge_l": 0.27031019202363366}
{"id": 736, "predictions": ["\u2581// \u2581Register Ranges \u2581adds \u2581a \u2581new \u2581 set \u2581of \u2581ranges \u2581to \u2581the \u2581stream ."], "references": ["\u2581// \u2581 key Range \u2581is \u2581 [ start , \u2581end ), \u2581including \u2581start , \u2581 excluding \u2581end . \u2581Do \u2581ensure \u2581that \u2581the \u2581start , \u2581// \u2581end \u2581 byte \u2581slices \u2581are"], "bleu": 0.035446223952392705, "rouge_l": 0.12797202797202795}
{"id": 1090, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 config \u2581for \u2581the \u2581 Agent ' s \u2581 data ."], "references": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 config . \u2581 Useful \u2581for \u2581testing ."], "bleu": 0.4071220775553065, "rouge_l": 0.6047087980173481}
{"id": 107, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581member \u2581of \u2581the \u2581member ."], "references": ["\u2581// \u2581 Close \u2581stops \u2581the \u2581member ' s \u2581etcd server \u2581and \u2581closes \u2581its \u2581connections"], "bleu": 0.19437836223653274, "rouge_l": 0.40450928381962864}
{"id": 287, "predictions": ["\u2581// \u2581 evict Entries Array \u2581 evict s \u2581the \u2581 data \u2581of \u2581the \u2581 contents \u2581of \u2581the \u2581 data \u2581array ."], "references": ["\u2581// \u2581 shrink Entries Array \u2581discard s \u2581the \u2581underlying \u2581array \u2581used \u2581by \u2581the \u2581entries \u2581 slice \u2581// \u2581if \u2581most \u2581of \u2581it \u2581isn ' t \u2581being \u2581used . \u2581This \u2581avoids \u2581holding"], "bleu": 0.08376791574635366, "rouge_l": 0.38006230529595014}
{"id": 1209, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Local Git \u2581object"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581 Local Git \u2581and \u2581a \u2581 git . Client \u2581pointing \u2581at \u2581it ."], "bleu": 0.15764435741090713, "rouge_l": 0.47550111358574615}
{"id": 1576, "predictions": ["\u2581// \u2581 set Previous Report State \u2581sets \u2581the \u2581current \u2581state \u2581of \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 set Previous Report State \u2581sets \u2581the \u2581 github \u2581 key \u2581for \u2581 Prev Report States \u2581// \u2581to \u2581current \u2581state . \u2581This \u2581is \u2581a \u2581work - around \u2581for \u2581plan"], "bleu": 0.21874242445215208, "rouge_l": 0.4611683848797251}
{"id": 1543, "predictions": ["\u2581// \u2581 warn Deprecated \u2581 marks \u2581the \u2581 throttler \u2581of \u2581the \u2581 throttler \u2581of \u2581the \u2581 throttler \u2581of \u2581the \u2581// \u2581time ."], "references": ["\u2581// \u2581 warn Deprecated \u2581prints \u2581a \u2581 deprecation \u2581 warning \u2581for \u2581a \u2581particular \u2581configuration \u2581// \u2581option ."], "bleu": 0.17855149299161602, "rouge_l": 0.4199655765920826}
{"id": 1726, "predictions": ["\u2581// \u2581 Filter Profile Paths \u2581returns \u2581the \u2581 set \u2581of \u2581profile \u2581names \u2581for \u2581the \u2581given \u2581profile ."], "references": ["\u2581// \u2581 Filter Profile Paths \u2581produces \u2581a \u2581new \u2581profile \u2581that \u2581removes \u2581either \u2581everything \u2581matching \u2581or \u2581everything \u2581// \u2581not \u2581matching \u2581the \u2581provided \u2581paths , \u2581depending \u2581on \u2581the \u2581value \u2581of \u2581include ."], "bleu": 0.1433161958538347, "rouge_l": 0.3242524916943521}
{"id": 1574, "predictions": ["\u2581// \u2581Make Command \u2581creates \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 this \u2581command"], "references": ["\u2581// \u2581Make Command \u2581returns \u2581an \u2581` aggregate ` \u2581command ."], "bleu": 0.18798317647335086, "rouge_l": 0.3562043795620438}
{"id": 759, "predictions": ["\u2581// \u2581 Append \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 Builder ."], "references": ["\u2581// \u2581 blockIndex \u2581generates \u2581the \u2581block \u2581index \u2581for \u2581the \u2581 table . \u2581// \u2581It \u2581is \u2581mainly \u2581a \u2581list \u2581of \u2581all \u2581the \u2581block \u2581base \u2581offsets ."], "bleu": 0.06545424245068056, "rouge_l": 0.35583333333333333}
{"id": 758, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 key \u2581to \u2581the \u2581 Builder ."], "references": ["\u2581// \u2581Add \u2581adds \u2581a \u2581 key - value \u2581pair \u2581to \u2581the \u2581block . \u2581// \u2581If \u2581 doNot Restart \u2581is \u2581true , \u2581we \u2581will \u2581not \u2581restart \u2581even \u2581if \u2581 b ."], "bleu": 0.08696665232244635, "rouge_l": 0.44202898550724634}
{"id": 979, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 slack \u2581sender"], "references": ["\u2581// Send \u2581a \u2581message \u2581using \u2581 SMTP \u2581configuration \u2581or \u2581returns \u2581an \u2581error \u2581if \u2581something \u2581goes \u2581wrong ."], "bleu": 0.10332449756766614, "rouge_l": 0.3438556933483653}
{"id": 1116, "predictions": ["\u2581// \u2581Get File \u2581returns \u2581the \u2581file \u2581 path \u2581for \u2581the \u2581given \u2581file ."], "references": ["\u2581// \u2581Get File \u2581returns \u2581the \u2581bytes \u2581of \u2581the \u2581file ."], "bleu": 0.4211813371894875, "rouge_l": 0.7124087591240876}
{"id": 1996, "predictions": ["\u2581// \u2581Get Container Log files \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581file \u2581for \u2581a \u2581given \u2581 name"], "references": ["\u2581// \u2581Get Container Log files \u2581returns \u2581a \u2581list \u2581of \u2581log files \u2581for \u2581the \u2581 container"], "bleu": 0.3889055611527109, "rouge_l": 0.5689119170984456}
{"id": 681, "predictions": ["\u2581// \u2581 get Mem Tables \u2581returns \u2581the \u2581 Mem \u2581tables \u2581for \u2581the \u2581 DB ."], "references": ["\u2581// \u2581 get Mem tables \u2581returns \u2581the \u2581current \u2581 mem tables \u2581and \u2581 get \u2581references ."], "bleu": 0.26931261122575345, "rouge_l": 0.5772870662460569}
{"id": 1311, "predictions": ["\u2581// \u2581list GCS Objects \u2581 - \u2581 get \u2581bucket \u2581objects ."], "references": ["\u2581// list Gcs Objects \u2581 get \u2581the \u2581 slice \u2581of \u2581 gcs \u2581objects \u2581under \u2581a \u2581given \u2581 path"], "bleu": 0.10851293189170719, "rouge_l": 0.33044420368364036}
{"id": 1242, "predictions": ["\u2581// \u2581run And Skip Jobs \u2581handles \u2581all \u2581jobs \u2581that \u2581have \u2581been \u2581 set \u2581by \u2581the \u2581job ."], "references": ["\u2581// \u2581run And Skip Jobs \u2581executes \u2581the \u2581 config . Pre submit s \u2581that \u2581are \u2581requested \u2581and \u2581 posts \u2581skipped \u2581 statuses \u2581// \u2581for \u2581the \u2581 reporting \u2581jobs \u2581that \u2581are"], "bleu": 0.14999976662462458, "rouge_l": 0.3242524916943521}
{"id": 1617, "predictions": ["\u2581// \u2581retry Cmd \u2581executes \u2581the \u2581command \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581command ."], "references": ["\u2581// \u2581retry Cmd \u2581will \u2581retry \u2581the \u2581command \u2581a \u2581few \u2581times \u2581with \u2581backoff . \u2581Use \u2581 this \u2581for \u2581any \u2581// \u2581commands \u2581that \u2581will \u2581be \u2581 talk ing \u2581to \u2581GitHub , \u2581such"], "bleu": 0.07854678303343589, "rouge_l": 0.2885135135135135}
{"id": 1302, "predictions": ["\u2581// \u2581 Launch Build \u2581is \u2581a \u2581 helper \u2581to \u2581create \u2581a \u2581Build \u2581for \u2581the \u2581given \u2581 container ."], "references": ["\u2581// \u2581 Launch Build \u2581launch es \u2581a \u2581regular \u2581or \u2581parameterized \u2581 Jenkins \u2581build , \u2581depending \u2581on \u2581// \u2581whether \u2581or \u2581not \u2581we \u2581have \u2581` params ` \u2581to \u2581 POST"], "bleu": 0.12594762230173656, "rouge_l": 0.3347050754458162}
{"id": 45, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581a \u2581 set \u2581of \u2581 keys \u2581from \u2581the \u2581 net ."], "references": ["\u2581// \u2581 ls Command Func \u2581executes \u2581the \u2581\" ls \" \u2581command ."], "bleu": 0.101824256461955, "rouge_l": 0.27664399092970515}
{"id": 766, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get \u2581gets \u2581the \u2581value \u2581associated \u2581with \u2581the \u2581 key . \u2581It \u2581returns \u2581a \u2581valid \u2581value \u2581if \u2581it \u2581finds \u2581equal \u2581or \u2581earlier \u2581// \u2581version \u2581of \u2581the \u2581same \u2581 key ."], "bleu": 0.05771575197709481, "rouge_l": 0.40516605166051656}
{"id": 576, "predictions": ["\u2581// \u2581 Prepend Command Func \u2581 - \u2581 allocate s \u2581a \u2581 set \u2581of \u2581 auth \u2581 keys \u2581and \u2581 releases \u2581the \u2581 auth \u2581 token \u2581to \u2581the \u2581// \u2581"], "references": ["\u2581// \u2581 rmdir Command Func \u2581executes \u2581the \u2581\" rmdir \" \u2581command ."], "bleu": 0.06987283777978615, "rouge_l": 0.25803722504230114}
{"id": 927, "predictions": ["\u2581// \u2581 decode Peers \u2581decodes \u2581the \u2581 data \u2581from \u2581the \u2581given \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 decode Peers \u2581is \u2581used \u2581to \u2581deserialize \u2581an \u2581old \u2581list \u2581of \u2581peers \u2581into \u2581a \u2581 Configuration . \u2581// \u2581This \u2581is \u2581here \u2581for \u2581backwards \u2581compatibility \u2581with \u2581old \u2581log \u2581entries \u2581and"], "bleu": 0.0970783975836776, "rouge_l": 0.24729729729729732}
{"id": 1802, "predictions": ["\u2581// \u2581new CRD Client \u2581returns \u2581a \u2581new \u2581 CRD \u2581for \u2581 Kubernetes \u2581client ."], "references": ["\u2581// \u2581new Client From Flags \u2581creates \u2581a \u2581 CRD \u2581rest \u2581client \u2581from \u2581provided \u2581flags ."], "bleu": 0.15775529073055347, "rouge_l": 0.548314606741573}
{"id": 1697, "predictions": ["\u2581// \u2581Create Token Handlers \u2581creates \u2581a \u2581 token \u2581 handlers \u2581for \u2581a \u2581 token ."], "references": ["\u2581// \u2581Create Token Handlers \u2581goes \u2581through \u2581the \u2581list \u2581of \u2581 token \u2581files , \u2581and \u2581create \u2581 handlers"], "bleu": 0.256838227570315, "rouge_l": 0.4944275582573455}
{"id": 1736, "predictions": ["\u2581// \u2581make Table \u2581builds \u2581a \u2581new \u2581 table \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581values ."], "references": ["\u2581// \u2581make Table \u2581checks \u2581each \u2581 coverage \u2581change \u2581and \u2581produce \u2581the \u2581 table \u2581 content \u2581for \u2581 coverage \u2581bot \u2581 post \u2581// \u2581It \u2581also \u2581report \u2581on \u2581whether \u2581any \u2581 coverage"], "bleu": 0.07854678303343589, "rouge_l": 0.24729729729729732}
{"id": 85, "predictions": ["\u2581// \u2581 search Index \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581 search Index \u2581returns \u2581the \u2581last \u2581array \u2581index \u2581of \u2581names \u2581whose \u2581 raft \u2581index \u2581section \u2581is \u2581// \u2581equal \u2581to \u2581or \u2581smaller \u2581than \u2581the \u2581given \u2581index . \u2581// \u2581The \u2581given"], "bleu": 0.16011492100746832, "rouge_l": 0.5304347826086957}
{"id": 1153, "predictions": ["\u2581// \u2581 For Repo \u2581returns \u2581a \u2581single \u2581 T id e Queries \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 owner \u2581of \u2581the \u2581repository ."], "references": ["\u2581// \u2581 For Repo \u2581returns \u2581the \u2581 t id e \u2581queries \u2581that \u2581 apply \u2581to \u2581a \u2581repo ."], "bleu": 0.21651956746181059, "rouge_l": 0.5071806500377929}
{"id": 926, "predictions": ["\u2581// \u2581 encode Peers \u2581encodes \u2581the \u2581given \u2581 Configuration \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 encode Peers \u2581is \u2581used \u2581to \u2581serialize \u2581a \u2581 Configuration \u2581into \u2581the \u2581old \u2581peers \u2581 format . \u2581// \u2581This \u2581is \u2581here \u2581for \u2581backwards \u2581compatibility \u2581when \u2581 operating \u2581with \u2581a"], "bleu": 0.14006451554424204, "rouge_l": 0.370945945945946}
{"id": 475, "predictions": ["\u2581// \u2581wait Deletes \u2581waits \u2581for \u2581the \u2581delete \u2581operation \u2581to \u2581delete \u2581the \u2581 contents \u2581of \u2581// \u2581the \u2581delete - only \u2581cache ."], "references": ["\u2581// \u2581wait Deletes \u2581efficiently \u2581waits \u2581until \u2581all \u2581 keys \u2581matching \u2581the \u2581prefix \u2581and \u2581no \u2581greater \u2581// \u2581than \u2581the \u2581create \u2581revision ."], "bleu": 0.13596634387289888, "rouge_l": 0.38095238095238093}
{"id": 1859, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581whether \u2581the \u2581 GCS Configuration \u2581is \u2581valid ."], "references": ["\u2581// \u2581Validate \u2581ensures \u2581all \u2581the \u2581values \u2581 set \u2581in \u2581the \u2581 GCS Configuration \u2581are \u2581valid ."], "bleu": 0.2579440768820882, "rouge_l": 0.5734430082256169}
{"id": 1541, "predictions": ["\u2581// \u2581 write Success Marker File \u2581writes \u2581the \u2581 contents \u2581of \u2581the \u2581 container \u2581to \u2581the \u2581 GCS \u2581// \u2581file ."], "references": ["\u2581// \u2581 Write \u2581a \u2581marker \u2581file \u2581to \u2581 GCS \u2581named \u2581after \u2581 this \u2581node \u2581to \u2581indicate \u2581log exporter ' s \u2581 success . \u2581// \u2581The \u2581directory \u2581to \u2581which \u2581we \u2581"], "bleu": 0.07627740073422004, "rouge_l": 0.26604361370716506}
{"id": 261, "predictions": ["\u2581// \u2581go Attach \u2581is \u2581called \u2581by \u2581the \u2581server \u2581to \u2581 get \u2581the \u2581 container ' s \u2581 Attach ."], "references": ["\u2581// \u2581go Attach \u2581creates \u2581a \u2581goroutine \u2581on \u2581a \u2581given \u2581function \u2581and \u2581tracks \u2581it \u2581using \u2581// \u2581the \u2581etcd server \u2581wait group ."], "bleu": 0.11939445591803963, "rouge_l": 0.247766043866775}
{"id": 664, "predictions": ["\u2581// \u2581 init Heap \u2581 set \u2581the \u2581 iterator \u2581and \u2581 clear s \u2581all \u2581elements ."], "references": ["\u2581// \u2581 init Heap \u2581checks \u2581all \u2581iterators \u2581and \u2581initializes \u2581our \u2581heap \u2581and \u2581array \u2581of \u2581 keys . \u2581// \u2581Whenever \u2581we \u2581reverse \u2581direction , \u2581we \u2581need \u2581to \u2581run \u2581 this ."], "bleu": 0.10613242539437312, "rouge_l": 0.2885135135135135}
{"id": 1349, "predictions": ["\u2581// \u2581 get Patch \u2581returns \u2581the \u2581patch \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581 get Patch \u2581gets \u2581the \u2581patch \u2581for \u2581the \u2581provided \u2581 PR \u2581and \u2581creates \u2581a \u2581local \u2581// \u2581copy \u2581of \u2581it . \u2581It \u2581returns \u2581its \u2581location \u2581in \u2581the \u2581filesystem \u2581and \u2581any"], "bleu": 0.1294218946231826, "rouge_l": 0.43416370106761565}
{"id": 1947, "predictions": ["\u2581// \u2581 Image Get ChildNodes sFrom IDs \u2581returns \u2581a \u2581list \u2581of \u2581 owned \u2581 VMs \u2581for \u2581a \u2581given \u2581 datacenter ."], "references": ["\u2581// \u2581 Image Get PoolName sFrom IDs \u2581 get \u2581the \u2581names \u2581of \u2581all \u2581storage \u2581 pools \u2581on \u2581which \u2581a \u2581given \u2581image \u2581 exists ."], "bleu": 0.20065924425462722, "rouge_l": 0.5269978401727862}
{"id": 391, "predictions": ["\u2581// \u2581reset Recv \u2581is \u2581used \u2581to \u2581reset \u2581the \u2581 write \u2581lock ."], "references": ["\u2581// \u2581reset Recv \u2581open s \u2581a \u2581new \u2581lease \u2581stream \u2581and \u2581starts \u2581sending \u2581keep \u2581 alive \u2581requests ."], "bleu": 0.14108806271271043, "rouge_l": 0.3344298245614035}
{"id": 63, "predictions": ["\u2581// \u2581 reduce Un broadcast Size \u2581is \u2581used \u2581to \u2581 reduce \u2581the \u2581 size \u2581of \u2581the \u2581 raft \u2581 data \u2581to \u2581the \u2581 raft ."], "references": ["\u2581// \u2581 reduce Un committed Size \u2581accounts \u2581for \u2581the \u2581newly \u2581committed \u2581entries \u2581by \u2581 decreasing \u2581// \u2581the \u2581 uncommitted \u2581entry \u2581 size \u2581limit ."], "bleu": 0.19004145843928574, "rouge_l": 0.45063801208865006}
{"id": 1176, "predictions": ["\u2581// \u2581 enqueue Key \u2581adds \u2581a \u2581new \u2581 key \u2581to \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 enqueue Key \u2581 schedules \u2581an \u2581item \u2581for \u2581 reconciliation"], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 1137, "predictions": ["\u2581// \u2581 Post submit Spec \u2581 posts \u2581a \u2581 post ing \u2581spec \u2581to \u2581the \u2581 set \u2581of \u2581 post ing s"], "references": ["\u2581// \u2581 Post submit Spec \u2581initializes \u2581a \u2581 ProwJob Spec \u2581for \u2581a \u2581given \u2581 post submit \u2581job ."], "bleu": 0.2630046508839862, "rouge_l": 0.4680306905370844}
{"id": 1926, "predictions": ["\u2581// \u2581 ImageSource Insert \u2581is \u2581part \u2581of \u2581the \u2581 Cluster \u2581interface ."], "references": ["\u2581// \u2581 ImageSource Insert \u2581inserts \u2581a \u2581new \u2581image \u2581source ."], "bleu": 0.3026643726685863, "rouge_l": 0.46212121212121204}
{"id": 905, "predictions": ["\u2581// \u2581Apply \u2581applies \u2581the \u2581given \u2581 Raft \u2581to \u2581the \u2581 Raft \u2581state"], "references": ["\u2581// \u2581Apply \u2581is \u2581used \u2581to \u2581 apply \u2581a \u2581command \u2581to \u2581the \u2581 FSM \u2581in \u2581a \u2581highly \u2581consistent \u2581// \u2581manner . \u2581This \u2581returns \u2581a \u2581future \u2581that \u2581can \u2581be \u2581used \u2581to \u2581wait"], "bleu": 0.05333053777138808, "rouge_l": 0.26521739130434785}
{"id": 1272, "predictions": ["\u2581// \u2581 Update Issue Events \u2581updates \u2581issue \u2581events ."], "references": ["\u2581// \u2581 Update Issue Events \u2581fetches \u2581all \u2581events \u2581until \u2581we \u2581find \u2581the \u2581most \u2581recent \u2581we \u2581// \u2581have \u2581in \u2581 db , \u2581and \u2581saves \u2581everything \u2581in \u2581database"], "bleu": 0.08125884912981246, "rouge_l": 0.3152454780361757}
{"id": 684, "predictions": ["\u2581// \u2581 write Level 0 Table \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581 write - disk \u2581 data ."], "references": ["\u2581// \u2581 Write Level 0 Table \u2581 flush es \u2581 mem table ."], "bleu": 0.15774545980684188, "rouge_l": 0.5174973488865324}
{"id": 1836, "predictions": ["\u2581// \u2581 getMetadata \u2581fetches \u2581 label \u2581 label \u2581from \u2581 path"], "references": ["\u2581// \u2581 getLabels \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581retrieves \u2581a \u2581 paginated \u2581list \u2581of \u2581labels \u2581from \u2581a \u2581 github \u2581URI \u2581 path ."], "bleu": 0.06502668060500671, "rouge_l": 0.3748902546093065}
{"id": 2007, "predictions": ["\u2581// \u2581Get Container Backup \u2581gets \u2581the \u2581 container \u2581 info \u2581for \u2581the \u2581specified \u2581 container"], "references": ["\u2581// \u2581Get Container Backup \u2581returns \u2581a \u2581 Backup \u2581struct \u2581for \u2581the \u2581provided \u2581 container \u2581and \u2581backup \u2581names"], "bleu": 0.2636932645412711, "rouge_l": 0.5562310030395137}
{"id": 1988, "predictions": ["\u2581// \u2581Get Container Snapshot Names \u2581returns \u2581the \u2581names \u2581of \u2581the \u2581 container \u2581 name \u2581of \u2581the \u2581 container ."], "references": ["\u2581// \u2581Get Container Snapshot Names \u2581returns \u2581a \u2581list \u2581of \u2581snapshot \u2581names \u2581for \u2581the \u2581 container"], "bleu": 0.3751840463233443, "rouge_l": 0.6009852216748769}
{"id": 1604, "predictions": ["\u2581// \u2581Set Post submit \u2581replaces \u2581 post \u2581 post - related \u2581 post - style \u2581 headers ."], "references": ["\u2581// \u2581Set Post submit Regexes \u2581 compile s \u2581and \u2581validates \u2581all \u2581the \u2581regular \u2581expressions \u2581for \u2581// \u2581the \u2581provided \u2581 post submit s ."], "bleu": 0.1758145576976709, "rouge_l": 0.3818466353677621}
{"id": 1993, "predictions": ["\u2581// \u2581 Update Container Snapshot \u2581updates \u2581the \u2581 container \u2581snapshot \u2581of \u2581the \u2581given \u2581 container ."], "references": ["\u2581// \u2581 Update Container Snapshot \u2581requests \u2581that \u2581 LXD \u2581updates \u2581the \u2581 container \u2581snapshot"], "bleu": 0.5071960939456881, "rouge_l": 0.6747787610619468}
{"id": 361, "predictions": ["\u2581// \u2581 Zero ToEnd \u2581 translate s \u2581the \u2581 contents \u2581of \u2581the \u2581 File \u2581to \u2581the \u2581 File ."], "references": ["\u2581// \u2581 Zero ToEnd \u2581 zeros \u2581a \u2581file \u2581starting \u2581from \u2581 SEEK _ CUR \u2581to \u2581its \u2581 SEEK _ END . \u2581May \u2581temporarily \u2581// \u2581 shorten \u2581the \u2581 length \u2581of"], "bleu": 0.16788390368295686, "rouge_l": 0.35305466237942124}
{"id": 607, "predictions": ["\u2581// \u2581 Write Health Key \u2581writes \u2581the \u2581 key \u2581to \u2581the \u2581 Member ' s \u2581 config ."], "references": ["\u2581// \u2581 Write Health Key \u2581writes \u2581a \u2581health \u2581 key \u2581to \u2581 this \u2581member ."], "bleu": 0.39670882908365773, "rouge_l": 0.6777777777777778}
{"id": 469, "predictions": ["\u2581// \u2581parse \u2581parses \u2581a \u2581string \u2581into \u2581a \u2581 map \u2581of \u2581strings ."], "references": ["\u2581// \u2581parse \u2581parses \u2581the \u2581given \u2581string \u2581and \u2581returns \u2581a \u2581 map \u2581listing \u2581the \u2581values \u2581specified \u2581for \u2581each \u2581 key ."], "bleu": 0.15290597861843513, "rouge_l": 0.47843137254901963}
{"id": 1703, "predictions": ["\u2581// \u2581check Existing Labels \u2581checks \u2581if \u2581the \u2581given \u2581 git \u2581 key \u2581is \u2581in \u2581the \u2581 model ."], "references": ["\u2581// \u2581check Existing Labels \u2581will \u2581check \u2581the \u2581provided \u2581 PR \u2581for \u2581the \u2581 d co \u2581sign \u2581off \u2581labels , \u2581// \u2581returning \u2581bool ' s \u2581indicating \u2581whether \u2581the \u2581' yes '"], "bleu": 0.11916879116027321, "rouge_l": 0.3189542483660131}
{"id": 188, "predictions": ["\u2581// \u2581 add \u2581adds \u2581a \u2581new \u2581 watch \u2581to \u2581the \u2581 group ."], "references": ["\u2581// \u2581 add \u2581puts \u2581a \u2581watcher \u2581in \u2581the \u2581 group ."], "bleu": 0.3661926362999429, "rouge_l": 0.6768377253814147}
{"id": 2030, "predictions": ["\u2581// \u2581 Profiles Expand Config \u2581returns \u2581a \u2581 map \u2581of \u2581profile \u2581names \u2581for \u2581the \u2581profile \u2581// \u2581 set \u2581to \u2581the \u2581given \u2581profile ."], "references": ["\u2581// \u2581 Profiles Expand Config \u2581expand s \u2581the \u2581given \u2581 container \u2581 config \u2581with \u2581the \u2581 config \u2581// \u2581values \u2581of \u2581the \u2581given \u2581profiles ."], "bleu": 0.24006978356462588, "rouge_l": 0.46629603891591376}
{"id": 1264, "predictions": ["\u2581// \u2581Get \u2581a \u2581job \u2581by \u2581 ID ."], "references": ["\u2581// \u2581Get ProwJob \u2581finds \u2581the \u2581corresponding \u2581 P row job \u2581resource \u2581from \u2581the \u2581provided \u2581job \u2581 name \u2581and \u2581build \u2581 ID"], "bleu": 0.05469456170663171, "rouge_l": 0.3190376569037656}
{"id": 463, "predictions": ["\u2581// \u2581 mk V 2 Node \u2581returns \u2581a \u2581 v 2 Node \u2581 v 2 Node \u2581 v 2 \u2581node \u2581 v 2 \u2581 v 2 \u2581 v 2 \u2581"], "references": ["\u2581// \u2581 mk V 2 Node \u2581creates \u2581a \u2581 V 2 \u2581 Node Extern \u2581from \u2581a \u2581 V 3 \u2581 KeyValue"], "bleu": 0.23337388721354071, "rouge_l": 0.5265604249667994}
{"id": 674, "predictions": ["\u2581// \u2581Set Entry \u2581sets \u2581the \u2581 Entry \u2581of \u2581the \u2581batch ."], "references": ["\u2581// \u2581Set Entry \u2581is \u2581the \u2581equivalent \u2581of \u2581 Txn . Set Entry ."], "bleu": 0.2164869374624441, "rouge_l": 0.5746971736204576}
{"id": 833, "predictions": ["\u2581// \u2581 write Meta \u2581writes \u2581the \u2581 meta \u2581 meta \u2581file \u2581to \u2581the \u2581file ."], "references": ["\u2581// \u2581 write Meta \u2581is \u2581used \u2581to \u2581 write \u2581out \u2581the \u2581metadata \u2581we \u2581have ."], "bleu": 0.26518122980477765, "rouge_l": 0.4666666666666668}
{"id": 1047, "predictions": ["\u2581// \u2581 New EventSource \u2581returns \u2581a \u2581new \u2581 EventSource ."], "references": ["\u2581// \u2581 New EventSource \u2581returns \u2581a \u2581new \u2581 EventSource \u2581instance \u2581while \u2581ensuring \u2581// \u2581that \u2581the \u2581http . ResponseWriter \u2581is \u2581 able \u2581to \u2581handle \u2581 EventSource \u2581messages . \u2581// \u2581It \u2581also"], "bleu": 0.12378999522835797, "rouge_l": 0.45864661654135336}
{"id": 1398, "predictions": ["\u2581// \u2581 Acquire Wait \u2581waits \u2581for \u2581the \u2581given \u2581 entity \u2581to \u2581the \u2581given \u2581 entity . \u2581// \u2581// \u2581 Only \u2581 this \u2581method \u2581will \u2581return \u2581an \u2581error \u2581if \u2581the \u2581"], "references": ["\u2581// \u2581 Acquire Wait \u2581blocks \u2581until \u2581 Acquire \u2581returns \u2581the \u2581specified \u2581resource \u2581or \u2581the \u2581// \u2581provided \u2581context \u2581is \u2581cancelled \u2581or \u2581its \u2581deadline \u2581exceeded ."], "bleu": 0.13351899845512327, "rouge_l": 0.2645600991325899}
{"id": 1874, "predictions": ["\u2581// \u2581 Issues \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581 Tri age \u2581files \u2581that \u2581match \u2581the \u2581given \u2581// \u2581 org ."], "references": ["\u2581// \u2581 Issues \u2581is \u2581the \u2581main \u2581work \u2581function \u2581of \u2581the \u2581 Tri age File r . \u2581It \u2581fetches \u2581and \u2581parses \u2581cluster \u2581 data , \u2581// \u2581then \u2581 sync s \u2581the"], "bleu": 0.15906094116454772, "rouge_l": 0.38006230529595014}
{"id": 1359, "predictions": ["\u2581// \u2581 Format \u2581returns \u2581a \u2581 byte \u2581 slice \u2581containing \u2581the \u2581fields \u2581of \u2581the \u2581given \u2581log \u2581entry ."], "references": ["\u2581// \u2581 Format \u2581implements \u2581logrus . Formatter ' s \u2581 Format . \u2581We \u2581 allocate \u2581a \u2581new \u2581 Fields \u2581// \u2581 map \u2581in \u2581order \u2581to \u2581not \u2581modify \u2581the \u2581caller '"], "bleu": 0.07969297374419262, "rouge_l": 0.2790849673202615}
{"id": 1256, "predictions": ["\u2581// \u2581Create Database \u2581creates \u2581a \u2581new \u2581 gorm \u2581 db ."], "references": ["\u2581// \u2581Create Database \u2581for \u2581the \u2581MySQL Config"], "bleu": 0.21200626759025185, "rouge_l": 0.3472485768500949}
{"id": 950, "predictions": ["\u2581// \u2581process RPC \u2581is \u2581part \u2581of \u2581the \u2581RPC \u2581RPC \u2581interface ."], "references": ["\u2581// \u2581process RPC \u2581is \u2581called \u2581to \u2581handle \u2581an \u2581incoming \u2581RPC \u2581request . \u2581This \u2581must \u2581only \u2581be \u2581// \u2581called \u2581from \u2581the \u2581main \u2581thread ."], "bleu": 0.11976926891314636, "rouge_l": 0.3318223028105167}
{"id": 229, "predictions": ["\u2581// \u2581Set P flags FromEnv \u2581sets \u2581the \u2581 P flags \u2581environment \u2581variables \u2581to \u2581be \u2581used \u2581in \u2581the \u2581// \u2581 set \u2581of \u2581flags ."], "references": ["\u2581// \u2581Set P flags FromEnv \u2581is \u2581similar \u2581to \u2581 SetFlags FromEnv . \u2581However , \u2581the \u2581accepted \u2581flag set \u2581 type \u2581is \u2581 p flag . FlagSet \u2581// \u2581and \u2581it \u2581does"], "bleu": 0.17346098407954508, "rouge_l": 0.33172205438066465}
{"id": 580, "predictions": ["\u2581// \u2581 New Expect With Env \u2581creates \u2581a \u2581new \u2581 exec . Command \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581arguments ."], "references": ["\u2581// \u2581 New Expect With Env \u2581creates \u2581a \u2581new \u2581process \u2581with \u2581user \u2581defined \u2581 env \u2581variables \u2581for \u2581expect \u2581testing ."], "bleu": 0.4395285386678049, "rouge_l": 0.5879518072289156}
{"id": 1702, "predictions": ["\u2581// \u2581check Existing Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 status \u2581of \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581check Existing Status \u2581will \u2581retrieve \u2581the \u2581current \u2581 status \u2581of \u2581the \u2581 D CO \u2581context \u2581for \u2581// \u2581the \u2581provided \u2581 SHA ."], "bleu": 0.31229944144771343, "rouge_l": 0.6205007824726134}
{"id": 656, "predictions": ["\u2581// \u2581 grpc HandlerFunc \u2581returns \u2581a \u2581handler \u2581that \u2581handles \u2581 grpc \u2581 handlers \u2581for \u2581a \u2581gRPC \u2581server ."], "references": ["\u2581// \u2581 grpc HandlerFunc \u2581returns \u2581an \u2581http . Handler \u2581that \u2581delegate s \u2581to \u2581 grpc Server \u2581on \u2581incoming \u2581gRPC \u2581// \u2581connections \u2581or \u2581other Handler \u2581otherwise . \u2581Given \u2581in \u2581gRPC \u2581"], "bleu": 0.15938594748838525, "rouge_l": 0.3986928104575163}
{"id": 62, "predictions": ["\u2581// \u2581increase Un broadcast Size \u2581is \u2581used \u2581to \u2581 reduce \u2581the \u2581 size \u2581of \u2581the \u2581given \u2581 data . \u2581// \u2581If \u2581the \u2581 raft \u2581 data \u2581is \u2581not \u2581found ,"], "references": ["\u2581// \u2581increase Un committed Size \u2581computes \u2581the \u2581 size \u2581of \u2581the \u2581 proposed \u2581entries \u2581and \u2581// \u2581determines \u2581whether \u2581they \u2581would \u2581 push \u2581leader \u2581over \u2581its \u2581max Un committed Size \u2581limit"], "bleu": 0.2131922460941227, "rouge_l": 0.4}
{"id": 744, "predictions": ["\u2581// \u2581 Calc Histogram \u2581returns \u2581a \u2581 size \u2581of \u2581the \u2581 size \u2581of \u2581the \u2581 size \u2581of \u2581the \u2581// \u2581 size \u2581of \u2581the \u2581 size \u2581of \u2581the \u2581 size \u2581of"], "references": ["\u2581// \u2581 newSize Histogram \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 keyValue Size Histogram \u2581with \u2581// \u2581properly \u2581initialized \u2581fields ."], "bleu": 0.09881511482966875, "rouge_l": 0.3403068340306834}
{"id": 1259, "predictions": ["\u2581// \u2581 Mark Complete \u2581returns \u2581all \u2581the \u2581 active \u2581completion \u2581of \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Mark Complete \u2581 figures \u2581out \u2581which \u2581 ARN s \u2581were \u2581in \u2581previous \u2581passes \u2581but \u2581not \u2581// \u2581 this \u2581one , \u2581and \u2581 eliminate s \u2581them . \u2581It \u2581should"], "bleu": 0.09472403025585548, "rouge_l": 0.2934707903780069}
{"id": 942, "predictions": ["\u2581// \u2581 Config \u2581for \u2581 Raft \u2581 data ."], "references": ["\u2581// \u2581configuration Change Ch If Stable \u2581returns \u2581 r . configuration Change Ch \u2581if \u2581it ' s \u2581safe \u2581// \u2581to \u2581process \u2581requests \u2581from \u2581it , \u2581or \u2581nil \u2581otherwise . \u2581This"], "bleu": 0.016276220793949598, "rouge_l": 0.14022988505747128}
{"id": 731, "predictions": ["\u2581// \u2581sorted F ids \u2581returns \u2581a \u2581 slice \u2581of \u2581 slice \u2581of \u2581all \u2581 ids \u2581in \u2581the \u2581log ."], "references": ["\u2581// \u2581sorted F ids \u2581returns \u2581the \u2581file \u2581 id ' s \u2581not \u2581pending \u2581deletion , \u2581sorted . \u2581Assumes \u2581we \u2581have \u2581shared \u2581access \u2581to \u2581// \u2581files Map ."], "bleu": 0.17134102069061266, "rouge_l": 0.2950932964754665}
{"id": 888, "predictions": ["\u2581// \u2581 Append Entries \u2581adds \u2581a \u2581 Raft \u2581 Request Entries \u2581request \u2581to \u2581the \u2581 raft . Append Entries Request ."], "references": ["\u2581// \u2581 Append Entries \u2581sends \u2581the \u2581appropriate \u2581RPC \u2581to \u2581the \u2581target \u2581node ."], "bleu": 0.19228544753133758, "rouge_l": 0.4300100704934542}
{"id": 1938, "predictions": ["\u2581// \u2581 Image Alias Delete \u2581deletes \u2581a \u2581 alias \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Alias Delete \u2581deletes \u2581the \u2581 alias \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.43142401352131887, "rouge_l": 0.7052023121387283}
{"id": 1833, "predictions": ["\u2581// \u2581 get UserData \u2581returns \u2581the \u2581user ' s \u2581user ' s \u2581user ."], "references": ["\u2581// \u2581 Not \u2581thread - safe \u2581 - \u2581callers \u2581need \u2581to \u2581hold \u2581 c . mut ."], "bleu": 0.10089587713517954, "rouge_l": 0.19022869022869024}
{"id": 1675, "predictions": ["\u2581// \u2581 Read At \u2581implements \u2581the \u2581 Blob \u2581interface ."], "references": ["\u2581// \u2581 Read At \u2581implements \u2581reading \u2581a \u2581range \u2581of \u2581bytes \u2581from \u2581the \u2581pod \u2581logs \u2581endpoint"], "bleu": 0.29106084527270426, "rouge_l": 0.46329113924050636}
{"id": 1957, "predictions": ["\u2581// \u2581 GetUser Module Version Get \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581current \u2581module"], "references": ["\u2581// \u2581 zfs Module Version Get \u2581returns \u2581the \u2581 Z FS \u2581module \u2581version"], "bleu": 0.4546697236991713, "rouge_l": 0.6711491442542787}
{"id": 1389, "predictions": ["\u2581// \u2581Register \u2581a \u2581 text \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Register Lens \u2581registers \u2581new \u2581viewer s"], "bleu": 0.12571192676522522, "rouge_l": 0.21143847487001732}
{"id": 193, "predictions": ["\u2581// \u2581 Compare \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581 Interval"], "references": ["\u2581// \u2581 Compare \u2581on \u2581an \u2581interval \u2581gives \u2581== \u2581if \u2581the \u2581interval \u2581 overlaps ."], "bleu": 0.18218265528203464, "rouge_l": 0.36791314837153194}
{"id": 97, "predictions": ["\u2581// \u2581 role Revoke Permission Command Func \u2581handles \u2581the \u2581command \u2581to \u2581 get \u2581all \u2581 roles"], "references": ["\u2581// \u2581 role Revoke Permission Command Func \u2581executes \u2581the \u2581\" role \u2581 revoke - permission \" \u2581command ."], "bleu": 0.3957483702441513, "rouge_l": 0.523854961832061}
{"id": 414, "predictions": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581node ."], "references": ["\u2581// \u2581 Clone \u2581function \u2581clone \u2581the \u2581node \u2581recursively \u2581and \u2581return \u2581the \u2581new \u2581node . \u2581// \u2581If \u2581the \u2581node \u2581is \u2581a \u2581directory , \u2581it \u2581will \u2581clone \u2581all \u2581the \u2581 content \u2581under"], "bleu": 0.04290443997281641, "rouge_l": 0.27518796992481204}
{"id": 172, "predictions": ["\u2581// \u2581lease TimeToLive Command Func \u2581is \u2581used \u2581to \u2581 get \u2581a \u2581lease \u2581 type"], "references": ["\u2581// \u2581lease TimeToLive Command Func \u2581executes \u2581the \u2581\" lease \u2581time to live \" \u2581command ."], "bleu": 0.3014523109212233, "rouge_l": 0.34269662921348315}
{"id": 951, "predictions": ["\u2581// \u2581process Heartbeat \u2581is \u2581used \u2581to \u2581 trigger \u2581a \u2581heartbeat \u2581to \u2581a \u2581 Raft"], "references": ["\u2581// \u2581process Heartbeat \u2581is \u2581a \u2581special \u2581handler \u2581used \u2581just \u2581for \u2581heartbeat \u2581requests \u2581// \u2581so \u2581that \u2581they \u2581can \u2581be \u2581fast - path ed \u2581if \u2581a \u2581transport \u2581supports \u2581it . \u2581This \u2581must"], "bleu": 0.09087426552401023, "rouge_l": 0.2986013986013986}
{"id": 1564, "predictions": ["\u2581// \u2581Build Cluster Clients \u2581returns \u2581a \u2581 map \u2581of \u2581cluster \u2581cluster"], "references": ["\u2581// \u2581Build Cluster Clients \u2581returns \u2581 Pod \u2581clients \u2581for \u2581build \u2581clusters ."], "bleu": 0.3959377364332706, "rouge_l": 0.5176803394625177}
{"id": 668, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 iterator ."], "references": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581element . \u2581If \u2581it \u2581is \u2581the \u2581same \u2581as \u2581the \u2581current \u2581 key , \u2581ignore \u2581it ."], "bleu": 0.1604848546074325, "rouge_l": 0.47984267453294005}
{"id": 1229, "predictions": ["\u2581// \u2581 Image Too Big \u2581checks \u2581if \u2581the \u2581 content \u2581 contains \u2581a \u2581 content \u2581 length ."], "references": ["\u2581// \u2581 Image Too Big \u2581checks \u2581if \u2581image \u2581is \u2581bigger \u2581than \u2581 github \u2581limits"], "bleu": 0.37754323999245865, "rouge_l": 0.5115303983228512}
{"id": 1915, "predictions": ["\u2581// \u2581Parse Remote \u2581parses \u2581the \u2581given \u2581raw \u2581string \u2581and \u2581returns \u2581the \u2581 URL ."], "references": ["\u2581// \u2581Parse Remote \u2581splits \u2581remote \u2581and \u2581object"], "bleu": 0.17395797375642236, "rouge_l": 0.4053156146179402}
{"id": 1331, "predictions": ["\u2581// \u2581 New Agent \u2581returns \u2581a \u2581new \u2581agent \u2581agent"], "references": ["\u2581// \u2581 New Agent \u2581bootstrap s \u2581a \u2581new \u2581 config . Agent \u2581struct \u2581from \u2581the \u2581passed \u2581dependencies ."], "bleu": 0.16620830006469264, "rouge_l": 0.41924398625429554}
{"id": 826, "predictions": ["\u2581// \u2581read Meta \u2581reads \u2581a \u2581file \u2581from \u2581the \u2581 meta \u2581file ."], "references": ["\u2581// \u2581read Meta \u2581is \u2581used \u2581to \u2581read \u2581the \u2581 meta \u2581 data \u2581for \u2581a \u2581given \u2581named \u2581backup"], "bleu": 0.19063821217883892, "rouge_l": 0.4013157894736842}
{"id": 30, "predictions": ["\u2581// \u2581 DB FilePath \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 DB \u2581file \u2581for \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 DB FilePath \u2581returns \u2581the \u2581file \u2581 path \u2581for \u2581the \u2581snapshot \u2581of \u2581the \u2581database \u2581with \u2581// \u2581given \u2581 id . \u2581If \u2581the \u2581snapshot \u2581does \u2581not \u2581exist , \u2581it \u2581returns"], "bleu": 0.27300305660535196, "rouge_l": 0.5491961414790998}
{"id": 383, "predictions": ["\u2581// \u2581 Member ByName \u2581returns \u2581a \u2581 Member \u2581member \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Member ByName \u2581returns \u2581a \u2581 Member \u2581with \u2581the \u2581given \u2581 name \u2581if \u2581 exists . \u2581// \u2581If \u2581more \u2581than \u2581one \u2581member \u2581has \u2581the \u2581given \u2581 name , \u2581it"], "bleu": 0.17309927456186694, "rouge_l": 0.43416370106761565}
{"id": 1201, "predictions": ["\u2581// \u2581 Flush \u2581 flush es \u2581the \u2581 contents \u2581of \u2581the \u2581 history \u2581to \u2581the \u2581 GCS ."], "references": ["\u2581// \u2581 Flush \u2581writes \u2581the \u2581action \u2581 history \u2581to \u2581persistent \u2581storage \u2581if \u2581configured \u2581to \u2581do \u2581so ."], "bleu": 0.1951797195341104, "rouge_l": 0.4595103578154426}
{"id": 1283, "predictions": ["\u2581// \u2581new Assignee s \u2581returns \u2581a \u2581 slice \u2581of \u2581 histograms \u2581with \u2581the \u2581given \u2581issue ."], "references": ["\u2581// \u2581new Assignee s \u2581creates \u2581a \u2581new \u2581 Label \u2581for \u2581each \u2581 label \u2581in \u2581the \u2581issue"], "bleu": 0.2545984531673679, "rouge_l": 0.5625}
{"id": 1895, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 name \u2581and \u2581 name ."], "references": ["\u2581// \u2581 NewClient \u2581makes \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581specified \u2581 token \u2581and \u2581dry - run \u2581 status ."], "bleu": 0.3698609382069886, "rouge_l": 0.6500000000000001}
{"id": 883, "predictions": ["\u2581// \u2581 Append \u2581a \u2581new \u2581 set \u2581of \u2581 data \u2581to \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581setup Append Entries \u2581is \u2581used \u2581to \u2581setup \u2581an \u2581 append \u2581entries \u2581request ."], "bleu": 0.1082597837309053, "rouge_l": 0.3469852104664391}
{"id": 1306, "predictions": ["\u2581// \u2581 Abort \u2581 initiate s \u2581a \u2581job ."], "references": ["\u2581// \u2581 Abort \u2581abort s \u2581the \u2581provided \u2581 Jenkins \u2581build \u2581for \u2581job ."], "bleu": 0.2152373268412755, "rouge_l": 0.5281385281385281}
{"id": 863, "predictions": ["\u2581// \u2581 Delete Range \u2581deletes \u2581the \u2581range \u2581of \u2581the \u2581range \u2581in \u2581the \u2581store ."], "references": ["\u2581// \u2581 Delete Range \u2581implements \u2581the \u2581 Log Store \u2581interface ."], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 938, "predictions": ["\u2581// \u2581live Bootstrap \u2581sets \u2581the \u2581 Raft \u2581configuration \u2581for \u2581the \u2581 Raft"], "references": ["\u2581// \u2581live Bootstrap \u2581attempts \u2581to \u2581seed \u2581an \u2581initial \u2581configuration \u2581for \u2581the \u2581cluster . \u2581See \u2581// \u2581the \u2581 Raft \u2581object ' s \u2581member \u2581 Bootstrap Cluster \u2581for \u2581more \u2581details . \u2581This"], "bleu": 0.08167076721933071, "rouge_l": 0.3536231884057971}
{"id": 906, "predictions": ["\u2581// \u2581 Barrier \u2581is \u2581used \u2581to \u2581 unlock \u2581a \u2581new \u2581 Raft \u2581instance ."], "references": ["\u2581// \u2581 Barrier \u2581is \u2581used \u2581to \u2581issue \u2581a \u2581command \u2581that \u2581blocks \u2581until \u2581all \u2581 prec eeding \u2581// \u2581operations \u2581have \u2581been \u2581applied \u2581to \u2581the \u2581 FSM . \u2581It \u2581can \u2581be \u2581used"], "bleu": 0.14287984117470287, "rouge_l": 0.3839160839160839}
{"id": 678, "predictions": ["\u2581// \u2581commit \u2581is \u2581part \u2581of \u2581the \u2581 Batch \u2581interface ."], "references": ["\u2581// \u2581 Caller \u2581to \u2581commit \u2581must \u2581hold \u2581a \u2581 write \u2581lock ."], "bleu": 0.12977836824680314, "rouge_l": 0.3577712609970674}
{"id": 1596, "predictions": ["\u2581// \u2581 ReadFile Maybe Stdin \u2581reads \u2581the \u2581 contents \u2581of \u2581a \u2581file \u2581and \u2581returns \u2581it ."], "references": ["\u2581// \u2581 ReadFile Maybe GZIP \u2581 wraps \u2581ioutil . ReadFile , \u2581returning \u2581the \u2581 decompressed \u2581 contents \u2581// \u2581if \u2581the \u2581file \u2581is \u2581 gzipped , \u2581or \u2581otherwise \u2581the \u2581raw \u2581"], "bleu": 0.117454836277896, "rouge_l": 0.32972972972972975}
{"id": 132, "predictions": ["\u2581// \u2581 Files \u2581returns \u2581true \u2581if \u2581the \u2581 path \u2581is \u2581 mounted ."], "references": ["\u2581// \u2581 isHidden \u2581checks \u2581to \u2581see \u2581if \u2581 key \u2581 path \u2581is \u2581considered \u2581 hidden \u2581to \u2581 watch \u2581 path \u2581 i . e . \u2581the \u2581// \u2581last \u2581element \u2581is"], "bleu": 0.06496622227650835, "rouge_l": 0.3473309608540925}
{"id": 86, "predictions": ["\u2581// \u2581 isValid Seq \u2581checks \u2581if \u2581the \u2581given \u2581 data \u2581is \u2581a \u2581valid \u2581sequence \u2581number ."], "references": ["\u2581// \u2581names \u2581should \u2581have \u2581been \u2581sorted \u2581based \u2581on \u2581sequence \u2581number . \u2581// \u2581 isValid Seq \u2581checks \u2581whether \u2581 seq \u2581increase s \u2581 continuous ly ."], "bleu": 0.20980200245708325, "rouge_l": 0.32846153846153847}
{"id": 6, "predictions": ["\u2581// \u2581 New Cert Pool \u2581returns \u2581a \u2581new \u2581 Cert Pool"], "references": ["\u2581// \u2581 New Cert Pool \u2581creates \u2581 x 509 \u2581cert Pool \u2581with \u2581provided \u2581 CA \u2581files ."], "bleu": 0.2598473546935531, "rouge_l": 0.48139797068771134}
{"id": 237, "predictions": ["\u2581// \u2581find Conflict \u2581returns \u2581the \u2581first \u2581entry \u2581in \u2581the \u2581 raft \u2581log ."], "references": ["\u2581// \u2581find Conflict \u2581finds \u2581the \u2581index \u2581of \u2581the \u2581conflict . \u2581// \u2581It \u2581returns \u2581the \u2581first \u2581pair \u2581of \u2581 conflicting \u2581entries \u2581between \u2581the \u2581existing \u2581// \u2581entries \u2581and \u2581the \u2581given \u2581entries ,"], "bleu": 0.07602176207561004, "rouge_l": 0.30391459074733096}
{"id": 1100, "predictions": ["\u2581// \u2581 Delete Comment \u2581deletes \u2581a \u2581 comment \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 Delete Comment \u2581deletes \u2581a \u2581 comment ."], "bleu": 0.6652049901111008, "rouge_l": 0.8798076923076923}
{"id": 648, "predictions": ["\u2581// \u2581 Drop Port \u2581removes \u2581the \u2581port \u2581from \u2581the \u2581 iptables"], "references": ["\u2581// \u2581 Drop Port \u2581drop s \u2581all \u2581 tcp \u2581packets \u2581that \u2581are \u2581received \u2581from \u2581the \u2581given \u2581port \u2581and \u2581sent \u2581to \u2581the \u2581given \u2581port ."], "bleu": 0.12226976810816462, "rouge_l": 0.3748902546093065}
{"id": 2009, "predictions": ["\u2581// \u2581 Rename Container Backup \u2581rename s \u2581a \u2581backup \u2581 container"], "references": ["\u2581// \u2581 Rename Container Backup \u2581requests \u2581that \u2581 LXD \u2581rename s \u2581the \u2581backup"], "bleu": 0.4136817680097794, "rouge_l": 0.6567967698519516}
{"id": 1538, "predictions": ["\u2581// \u2581create Full System d Log file \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581file \u2581to \u2581 listen \u2581for \u2581// \u2581the \u2581given \u2581file ."], "references": ["\u2581// \u2581create Full System d Log file \u2581creates \u2581 logfile \u2581for \u2581full \u2581 systemd \u2581journal \u2581in \u2581the \u2581 outputDir ."], "bleu": 0.33257789882723987, "rouge_l": 0.5181467181467182}
{"id": 501, "predictions": ["\u2581// \u2581 Rate \u2581implements \u2581the \u2581 Queue \u2581interface ."], "references": ["\u2581// \u2581 Rate \u2581function \u2581returns \u2581the \u2581package \u2581 rate \u2581and \u2581 byte \u2581 rate"], "bleu": 0.1667989371287012, "rouge_l": 0.41838134430727025}
{"id": 1878, "predictions": ["\u2581// \u2581 top Jobs Failed \u2581returns \u2581the \u2581number \u2581of \u2581jobs \u2581that \u2581have \u2581 tracked \u2581// \u2581 items \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 top Jobs Failed \u2581returns \u2581the \u2581 top \u2581' count ' \u2581job \u2581names \u2581sorted \u2581by \u2581number \u2581of \u2581fail ing \u2581builds ."], "bleu": 0.3412408690215054, "rouge_l": 0.463173880030372}
{"id": 1700, "predictions": ["\u2581// \u2581 Push Metrics \u2581 push s \u2581a \u2581metrics \u2581to \u2581the \u2581specified \u2581endpoint ."], "references": ["\u2581// \u2581 Push Metrics \u2581is \u2581meant \u2581to \u2581run \u2581in \u2581a \u2581goroutine \u2581and \u2581 continuous ly \u2581 push \u2581// \u2581metrics \u2581to \u2581the \u2581provided \u2581endpoint ."], "bleu": 0.1954269769886269, "rouge_l": 0.5527182866556837}
{"id": 1924, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 StatusCode ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581suitable \u2581string \u2581representation \u2581for \u2581the \u2581 status \u2581 code"], "bleu": 0.23883928011928646, "rouge_l": 0.5746971736204576}
{"id": 1998, "predictions": ["\u2581// \u2581Get Container Metadata \u2581returns \u2581the \u2581metadata \u2581metadata \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Container Metadata \u2581returns \u2581 container \u2581metadata ."], "bleu": 0.35831291876413535, "rouge_l": 0.6335311572700296}
{"id": 1992, "predictions": ["\u2581// \u2581 Migrate Container Snapshot \u2581 mounts \u2581the \u2581snapshot \u2581of \u2581a \u2581 container ."], "references": ["\u2581// \u2581 Migrate Container Snapshot \u2581requests \u2581that \u2581 LXD \u2581prepare s \u2581for \u2581a \u2581snapshot \u2581migration"], "bleu": 0.3336118221483976, "rouge_l": 0.4797752808988765}
{"id": 1991, "predictions": ["\u2581// \u2581Create Container Snapshot \u2581creates \u2581a \u2581snapshot \u2581of \u2581the \u2581given \u2581snapshot ."], "references": ["\u2581// \u2581Create Container Snapshot \u2581requests \u2581that \u2581 LXD \u2581creates \u2581a \u2581new \u2581snapshot \u2581for \u2581the \u2581 container"], "bleu": 0.2537738058562776, "rouge_l": 0.5570776255707762}
{"id": 870, "predictions": ["\u2581// \u2581 Disconnect \u2581removes \u2581the \u2581given \u2581peer \u2581from \u2581the \u2581 addr ."], "references": ["\u2581// \u2581 Disconnect \u2581is \u2581used \u2581to \u2581 remove \u2581the \u2581ability \u2581to \u2581 route \u2581to \u2581a \u2581given \u2581peer ."], "bleu": 0.15436774579486767, "rouge_l": 0.45042194092827004}
{"id": 638, "predictions": ["\u2581// \u2581walk \u2581walk s \u2581the \u2581root \u2581node \u2581and \u2581 path \u2581and \u2581returns \u2581the \u2581node ."], "references": ["\u2581// \u2581walk \u2581walk s \u2581all \u2581the \u2581 nodePath \u2581and \u2581 apply \u2581the \u2581walk Func \u2581on \u2581each \u2581directory"], "bleu": 0.24539423329460236, "rouge_l": 0.4944275582573455}
{"id": 1827, "predictions": ["\u2581// \u2581 NewClient WithFields \u2581returns \u2581a \u2581new \u2581 Client ."], "references": ["\u2581// \u2581 NewClient WithFields \u2581creates \u2581a \u2581new \u2581fully \u2581 operational \u2581GitHub \u2581client . \u2581 With \u2581// \u2581added \u2581logging \u2581fields . \u2581// \u2581' getToken ' \u2581is \u2581a \u2581generator \u2581for \u2581the \u2581GitHub"], "bleu": 0.05815280688479283, "rouge_l": 0.3669172932330827}
{"id": 480, "predictions": ["\u2581// \u2581check Bind URLs \u2581checks \u2581if \u2581the \u2581 URL \u2581 URL \u2581is \u2581valid"], "references": ["\u2581// \u2581check Bind URLs \u2581returns \u2581an \u2581error \u2581if \u2581any \u2581 URL \u2581uses \u2581a \u2581 domain \u2581 name ."], "bleu": 0.2216375149200713, "rouge_l": 0.5015416238437821}
{"id": 1523, "predictions": ["\u2581// \u2581context Config \u2581returns \u2581the \u2581 config \u2581for \u2581the \u2581 config ."], "references": ["\u2581// \u2581context Config \u2581returns \u2581the \u2581 loader \u2581and \u2581 config , \u2581which \u2581can \u2581create \u2581a \u2581client config ."], "bleu": 0.34324293361300307, "rouge_l": 0.5791139240506329}
{"id": 1101, "predictions": ["\u2581// \u2581 Delete Stale Comments \u2581deletes \u2581all \u2581 repositories \u2581 comment \u2581for \u2581given \u2581 org ."], "references": ["\u2581// \u2581 Delete Stale Comments \u2581deletes \u2581comments \u2581 flagged \u2581by \u2581is Stale ."], "bleu": 0.3708163623065084, "rouge_l": 0.5622119815668203}
{"id": 21, "predictions": ["\u2581// \u2581start \u2581starts \u2581a \u2581new \u2581goroutine \u2581to \u2581 write \u2581a \u2581new \u2581stream \u2581to \u2581the \u2581given \u2581// \u2581 raft ."], "references": ["\u2581// \u2581start StreamWriter \u2581creates \u2581a \u2581stream Write \u2581and \u2581starts \u2581a \u2581long \u2581running \u2581go - routine \u2581that \u2581accepts \u2581// \u2581messages \u2581and \u2581writes \u2581to \u2581the \u2581attached \u2581outgoing \u2581connection ."], "bleu": 0.0915431977301294, "rouge_l": 0.2950932964754665}
{"id": 1486, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 container ."], "references": ["\u2581// \u2581 NewClient \u2581is \u2581the \u2581 constructor \u2581for \u2581 Client"], "bleu": 0.24855227187657006, "rouge_l": 0.41709401709401706}
{"id": 957, "predictions": ["\u2581// \u2581 recalculate \u2581 modifies \u2581the \u2581 contents \u2581of \u2581the \u2581 commitment \u2581object \u2581to \u2581the \u2581 filter ."], "references": ["\u2581// \u2581 Internal \u2581 helper \u2581to \u2581calculate \u2581new \u2581commit Index \u2581from \u2581match Indexes . \u2581// \u2581Must \u2581be \u2581called \u2581with \u2581lock \u2581 held ."], "bleu": 0.0838968973762499, "rouge_l": 0.28638497652582157}
{"id": 2027, "predictions": ["\u2581// \u2581 Profile Config Add \u2581 add \u2581the \u2581profile \u2581to \u2581the \u2581 DB"], "references": ["\u2581// \u2581 Profile Config Add \u2581adds \u2581a \u2581 config \u2581to \u2581the \u2581profile \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.30808280803942306, "rouge_l": 0.6269270298047277}
{"id": 1245, "predictions": ["\u2581// \u2581skip Requested \u2581returns \u2581a \u2581 set \u2581of \u2581jobs \u2581that \u2581were \u2581 set \u2581to \u2581be \u2581 watched \u2581for \u2581// \u2581the \u2581given \u2581jobs ."], "references": ["\u2581// \u2581skip Requested \u2581 posts \u2581skipped \u2581 statuses \u2581for \u2581the \u2581 config . Pre submit s \u2581that \u2581are \u2581requested"], "bleu": 0.1268354694168578, "rouge_l": 0.3876092136616362}
{"id": 658, "predictions": ["\u2581// \u2581try \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581next \u2581 ops \u2581for \u2581the \u2581 key ."], "references": ["\u2581// \u2581fallback \u2581computes \u2581the \u2581 ops \u2581to \u2581fetch \u2581all \u2581possible \u2581 conflicting \u2581// \u2581 l easing \u2581 keys \u2581for \u2581a \u2581list \u2581of \u2581 ops ."], "bleu": 0.08625665610315236, "rouge_l": 0.32846153846153847}
{"id": 1290, "predictions": ["\u2581// \u2581Build ID \u2581generates \u2581a \u2581unique \u2581 ID \u2581for \u2581the \u2581build ."], "references": ["\u2581// \u2581Build ID \u2581extracts \u2581the \u2581build \u2581 identifier \u2581used \u2581for \u2581// \u2581 p lac ing \u2581and \u2581discover ing \u2581build \u2581artifacts . \u2581// \u2581This \u2581 identifier \u2581can \u2581either \u2581origin ate \u2581from"], "bleu": 0.056788720057911184, "rouge_l": 0.30942028985507253}
{"id": 1425, "predictions": ["\u2581// \u2581Get Reverse Map \u2581 - \u2581 get \u2581a \u2581 map \u2581of \u2581 map \u2581 map \u2581 map"], "references": ["\u2581// \u2581Get Reverse Map \u2581returns \u2581a \u2581 map \u2581from \u2581people \u2581 -> \u2581 OWNER S \u2581files \u2581for \u2581which \u2581they \u2581are \u2581an \u2581 approve r"], "bleu": 0.19667307171343001, "rouge_l": 0.4642313546423136}
{"id": 1107, "predictions": ["\u2581// \u2581Create Status \u2581creates \u2581a \u2581new \u2581 status \u2581for \u2581the \u2581current \u2581release ."], "references": ["\u2581// \u2581Create Status \u2581adds \u2581a \u2581 status \u2581context \u2581to \u2581a \u2581commit ."], "bleu": 0.22718709780542312, "rouge_l": 0.5640686922060767}
{"id": 553, "predictions": ["\u2581// \u2581 revoke Expired Lease s \u2581is \u2581used \u2581to \u2581 revoke \u2581the \u2581 revoke \u2581 rate \u2581of \u2581the \u2581lease \u2581// \u2581and \u2581 revoke s \u2581the \u2581 revocation \u2581 token ."], "references": ["\u2581// \u2581 revoke Expired Lease s \u2581finds \u2581all \u2581 leases \u2581past \u2581their \u2581expiry \u2581and \u2581sends \u2581them \u2581to \u2581 e px i red \u2581channel \u2581for \u2581// \u2581to \u2581be \u2581 revoked ."], "bleu": 0.22571180478829558, "rouge_l": 0.3666666666666667}
{"id": 714, "predictions": ["\u2581// \u2581 Next \u2581advance s \u2581the \u2581 iterator \u2581to \u2581the \u2581next \u2581 iterator ."], "references": ["\u2581// \u2581 Next \u2581advance s \u2581our \u2581 concat \u2581 iterator ."], "bleu": 0.42311785416105785, "rouge_l": 0.7359249329758714}
{"id": 500, "predictions": ["\u2581// \u2581 Insert \u2581adds \u2581the \u2581 Request Stats \u2581to \u2581the \u2581queue ."], "references": ["\u2581// \u2581 Insert \u2581function \u2581 insert \u2581a \u2581 Request Stats \u2581into \u2581the \u2581queue \u2581and \u2581update \u2581the \u2581records"], "bleu": 0.21097586262231463, "rouge_l": 0.5350877192982455}
{"id": 256, "predictions": ["\u2581// \u2581 sync \u2581 sync s \u2581the \u2581etcd \u2581server"], "references": ["\u2581// \u2581 sync \u2581 propose s \u2581a \u2581 SYNC \u2581request \u2581and \u2581is \u2581non - blocking . \u2581// \u2581This \u2581makes \u2581no \u2581 guarantee \u2581that \u2581the \u2581request \u2581will \u2581be \u2581 proposed \u2581or"], "bleu": 0.04143486185313345, "rouge_l": 0.28045977011494255}
{"id": 745, "predictions": ["\u2581// \u2581build Histogram \u2581creates \u2581a \u2581new \u2581 size \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581build Histogram \u2581builds \u2581the \u2581 key - value \u2581 size \u2581histogram . \u2581// \u2581When \u2581 keyPrefix \u2581is \u2581 set , \u2581only \u2581the \u2581 keys \u2581that \u2581have \u2581prefix \u2581\" keyPrefix"], "bleu": 0.06690764505445929, "rouge_l": 0.30391459074733096}
{"id": 1080, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 gen \u2581instance ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581generator \u2581that \u2581performs \u2581buff a lo \u2581// \u2581related \u2581rx \u2581checks"], "bleu": 0.15047064317406994, "rouge_l": 0.30886075949367087}
{"id": 546, "predictions": ["\u2581// \u2581 Unsafe Range \u2581will \u2581 Unsafe \u2581 this \u2581method \u2581to \u2581 Unsafe \u2581 Unsafe Range , \u2581 prepend s \u2581the \u2581 key \u2581to \u2581the \u2581bucket . \u2581// \u2581 A"], "references": ["\u2581// \u2581 Unsafe Range \u2581must \u2581be \u2581called \u2581holding \u2581the \u2581lock \u2581on \u2581the \u2581tx ."], "bleu": 0.1262744724314408, "rouge_l": 0.3405103668261563}
{"id": 554, "predictions": ["\u2581// \u2581checkpoint Scheduled Lease s \u2581 loads \u2581the \u2581 data \u2581for \u2581the \u2581 set \u2581of \u2581 leases \u2581in \u2581the \u2581 set \u2581of \u2581 data"], "references": ["\u2581// \u2581checkpoint Scheduled Lease s \u2581finds \u2581all \u2581scheduled \u2581lease \u2581 checkpoints \u2581that \u2581are \u2581due \u2581and \u2581// \u2581 submit s \u2581them \u2581to \u2581the \u2581check pointer \u2581to \u2581 persist \u2581them \u2581to \u2581the"], "bleu": 0.16816550724319185, "rouge_l": 0.363095238095238}
{"id": 2006, "predictions": ["\u2581// \u2581Get Container Backups \u2581returns \u2581the \u2581 container ' s \u2581 contents \u2581of \u2581the \u2581 container ."], "references": ["\u2581// \u2581Get Container Backups \u2581returns \u2581a \u2581list \u2581of \u2581 backups \u2581for \u2581the \u2581 container"], "bleu": 0.35412968165085734, "rouge_l": 0.5909580193756728}
{"id": 428, "predictions": ["\u2581// \u2581 New Get Command \u2581returns \u2581a \u2581command \u2581to \u2581 get \u2581the \u2581command \u2581 set"], "references": ["\u2581// \u2581 New Get Command \u2581returns \u2581the \u2581CLI \u2581command \u2581for \u2581\" get \" ."], "bleu": 0.4071220775553065, "rouge_l": 0.5551763367463025}
{"id": 1150, "predictions": ["\u2581// \u2581 For Repo \u2581implements \u2581the \u2581 Query \u2581interface ."], "references": ["\u2581// \u2581 For Repo \u2581indicates \u2581if \u2581the \u2581 t id e \u2581query \u2581applies \u2581to \u2581the \u2581specified \u2581repo ."], "bleu": 0.18747179147308266, "rouge_l": 0.47550111358574615}
{"id": 396, "predictions": ["\u2581// \u2581 remove \u2581the \u2581item \u2581in \u2581the \u2581 set , \u2581if \u2581it \u2581does \u2581not \u2581exist ."], "references": ["\u2581// \u2581res c ind \u2581 releases \u2581a \u2581lease \u2581from \u2581 this \u2581client ."], "bleu": 0.09672649511413092, "rouge_l": 0.28110599078341014}
{"id": 490, "predictions": ["\u2581// \u2581user \u2581password Command Func \u2581is \u2581a \u2581command \u2581to \u2581 set \u2581the \u2581password \u2581 set"], "references": ["\u2581// \u2581user ChangePassword Command Func \u2581executes \u2581the \u2581\" user \u2581 passwd \" \u2581command ."], "bleu": 0.15310245441182443, "rouge_l": 0.416382252559727}
{"id": 1025, "predictions": ["\u2581// \u2581 Used \u2581to \u2581check \u2581if \u2581the \u2581file \u2581is \u2581 empty ."], "references": ["\u2581// only Relevant Files \u2581processes \u2581only \u2581 . go \u2581files \u2581 excluding \u2581folders \u2581like \u2581node _ modules \u2581and \u2581 vendor ."], "bleu": 0.061715225299305954, "rouge_l": 0.23106060606060605}
{"id": 213, "predictions": ["\u2581// \u2581 Re sign \u2581 marks \u2581the \u2581 election \u2581and \u2581 increments \u2581the \u2581state \u2581of \u2581the \u2581// \u2581 election ."], "references": ["\u2581// \u2581 Re sign \u2581lets \u2581a \u2581leader \u2581start \u2581a \u2581new \u2581 election ."], "bleu": 0.22738612304909625, "rouge_l": 0.44111570247933884}
{"id": 1400, "predictions": ["\u2581// \u2581 Release All \u2581 releases \u2581all \u2581resources \u2581in \u2581the \u2581specified \u2581destination ."], "references": ["\u2581// \u2581 Release All \u2581returns \u2581all \u2581resources \u2581hold \u2581by \u2581the \u2581client \u2581back \u2581to \u2581 bo skos \u2581and \u2581 set \u2581them \u2581to \u2581dest \u2581state ."], "bleu": 0.14342968270026346, "rouge_l": 0.41042893187552554}
{"id": 1387, "predictions": ["\u2581// \u2581Get Disk Usage \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 path"], "references": ["\u2581// \u2581Get Disk Usage \u2581 wraps \u2581syscall . Stat fs \u2581for \u2581usage \u2581in \u2581 GC ing \u2581the \u2581disk"], "bleu": 0.21884144707425857, "rouge_l": 0.40744274809160297}
{"id": 641, "predictions": ["\u2581// \u2581check Dir \u2581returns \u2581a \u2581 Node ."], "references": ["\u2581// \u2581check Dir \u2581will \u2581check \u2581whether \u2581the \u2581component \u2581is \u2581a \u2581directory \u2581under \u2581parent \u2581node . \u2581// \u2581If \u2581it \u2581is \u2581a \u2581directory , \u2581 this \u2581function \u2581will \u2581return \u2581the \u2581pointer \u2581to"], "bleu": 0.021946084682305116, "rouge_l": 0.23828125}
{"id": 646, "predictions": ["\u2581// \u2581 New Zap Core Logger Builder \u2581creates \u2581a \u2581new \u2581 Zap Core Logger Builder ."], "references": ["\u2581// \u2581 New Zap Core Logger Builder \u2581generates \u2581a \u2581zap \u2581 core \u2581logger \u2581builder ."], "bleu": 0.44844165354587767, "rouge_l": 0.6489361702127661}
{"id": 2031, "predictions": ["\u2581// \u2581 Profiles Expand Devices \u2581returns \u2581a \u2581list \u2581of \u2581devices \u2581that \u2581are \u2581 discovered \u2581in \u2581the \u2581// \u2581given \u2581devices ."], "references": ["\u2581// \u2581 Profiles Expand Devices \u2581expand s \u2581the \u2581given \u2581 container \u2581devices \u2581with \u2581the \u2581devices \u2581// \u2581defined \u2581in \u2581the \u2581given \u2581profiles ."], "bleu": 0.261888745754878, "rouge_l": 0.47213622291021673}
{"id": 249, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581server ."], "references": ["\u2581// \u2581 Start \u2581performs \u2581any \u2581initialization \u2581of \u2581the \u2581 Server \u2581necessary \u2581for \u2581it \u2581to \u2581// \u2581begin \u2581 serving \u2581requests . \u2581It \u2581must \u2581be \u2581called \u2581before \u2581Do \u2581or \u2581 Process ."], "bleu": 0.014314649590731681, "rouge_l": 0.24302788844621512}
{"id": 1793, "predictions": ["\u2581// \u2581Set Review \u2581sets \u2581the \u2581specified \u2581 status \u2581of \u2581the \u2581given \u2581instance ."], "references": ["\u2581// \u2581Set Review \u2581writes \u2581a \u2581 review \u2581 comment \u2581base \u2581on \u2581the \u2581change \u2581 id \u2581+ \u2581revision"], "bleu": 0.14463893788984455, "rouge_l": 0.3255069370330843}
{"id": 195, "predictions": ["\u2581// \u2581update Max \u2581updates \u2581the \u2581maximum \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581 set \u2581of \u2581 this \u2581 Interval Node ."], "references": ["\u2581// \u2581update Max \u2581updates \u2581the \u2581maximum \u2581values \u2581for \u2581a \u2581node \u2581and \u2581its \u2581 ancestors"], "bleu": 0.2719326877457978, "rouge_l": 0.4149659863945578}
{"id": 146, "predictions": ["\u2581// \u2581 put New KV \u2581stores \u2581the \u2581given \u2581 key \u2581value \u2581pair ."], "references": ["\u2581// \u2581 put New KV \u2581attempts \u2581to \u2581create \u2581the \u2581given \u2581 key , \u2581only \u2581 succeed ing \u2581if \u2581the \u2581 key \u2581did \u2581// \u2581not \u2581yet \u2581exist ."], "bleu": 0.18548568529517828, "rouge_l": 0.47031611410948343}
{"id": 2000, "predictions": ["\u2581// \u2581Get Container Template Files \u2581returns \u2581the \u2581list \u2581of \u2581 templates \u2581for \u2581the \u2581given \u2581 container"], "references": ["\u2581// \u2581Get Container Template Files \u2581returns \u2581the \u2581list \u2581of \u2581names \u2581of \u2581template \u2581files \u2581for \u2581a \u2581 container ."], "bleu": 0.5272893320327073, "rouge_l": 0.6984732824427481}
{"id": 2037, "predictions": ["\u2581// \u2581 Level Open \u2581open s \u2581a \u2581database \u2581with \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Opens \u2581the \u2581node - level \u2581database \u2581with \u2581the \u2581correct \u2581parameters \u2581for \u2581 LXD ."], "bleu": 0.17617947638518647, "rouge_l": 0.41123595505617977}
{"id": 1506, "predictions": ["\u2581// \u2581handle Err \u2581is \u2581called \u2581when \u2581the \u2581 controller \u2581is \u2581 set \u2581to \u2581the \u2581 controller ."], "references": ["\u2581// \u2581handle Err \u2581checks \u2581if \u2581an \u2581error \u2581happened \u2581and \u2581makes \u2581sure \u2581we \u2581will \u2581retry \u2581later ."], "bleu": 0.14216645907653844, "rouge_l": 0.24375624375624372}
{"id": 536, "predictions": ["\u2581// \u2581find Generation \u2581finds \u2581the \u2581generation \u2581for \u2581the \u2581given \u2581revision ."], "references": ["\u2581// \u2581find Generation \u2581finds \u2581out \u2581the \u2581generation \u2581of \u2581the \u2581 key Index \u2581that \u2581the \u2581// \u2581given \u2581rev \u2581belongs \u2581to . \u2581If \u2581the \u2581given \u2581rev \u2581is \u2581at \u2581the \u2581gap \u2581of \u2581two"], "bleu": 0.07416969631855261, "rouge_l": 0.40516605166051656}
{"id": 418, "predictions": ["\u2581// \u2581longest Connected \u2581returns \u2581the \u2581first \u2581 ID \u2581of \u2581the \u2581 set \u2581of \u2581 active \u2581 data ."], "references": ["\u2581// \u2581longest Connected \u2581choose s \u2581the \u2581member \u2581with \u2581longest \u2581 active - since - time . \u2581// \u2581It \u2581returns \u2581false , \u2581if \u2581nothing \u2581is \u2581 active ."], "bleu": 0.10386674056600585, "rouge_l": 0.34317862165963425}
{"id": 1115, "predictions": ["\u2581// \u2581 Assign Issue \u2581 assign s \u2581a \u2581repository \u2581to \u2581a \u2581repository ."], "references": ["\u2581// \u2581 Assign Issue \u2581adds \u2581 assignee s ."], "bleu": 0.29899503549981366, "rouge_l": 0.657935285053929}
{"id": 603, "predictions": ["\u2581// \u2581 Rev Hash \u2581returns \u2581the \u2581 maintenance \u2581of \u2581the \u2581 maintenance ."], "references": ["\u2581// \u2581 Rev Hash \u2581fetches \u2581current \u2581revision \u2581and \u2581hash \u2581on \u2581 this \u2581member ."], "bleu": 0.267768029597763, "rouge_l": 0.4414957780458384}
{"id": 1096, "predictions": ["\u2581// \u2581Create Comment \u2581creates \u2581a \u2581new \u2581 comment \u2581for \u2581a \u2581release ."], "references": ["\u2581// \u2581Create Comment \u2581adds \u2581a \u2581 comment \u2581to \u2581a \u2581 PR"], "bleu": 0.24712442545253582, "rouge_l": 0.6135057471264368}
{"id": 539, "predictions": ["\u2581// \u2581 sync Vi ct ims Loop \u2581runs \u2581the \u2581 Vi ct ims \u2581to \u2581 watch ."], "references": ["\u2581// \u2581 sync Vi ct ims Loop \u2581tries \u2581to \u2581 write \u2581 precomputed \u2581watcher \u2581responses \u2581to \u2581// \u2581 watchers \u2581that \u2581had \u2581a \u2581blocked \u2581watcher \u2581channel"], "bleu": 0.2719843659174844, "rouge_l": 0.460377358490566}
{"id": 493, "predictions": ["\u2581// \u2581clone \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 history \u2581 history ."], "references": ["\u2581// \u2581clone \u2581will \u2581be \u2581protected \u2581by \u2581a \u2581stop - world \u2581lock \u2581// \u2581do \u2581not \u2581need \u2581to \u2581obtain \u2581internal \u2581lock"], "bleu": 0.08199827724270688, "rouge_l": 0.18597560975609756}
{"id": 170, "predictions": ["\u2581// \u2581lease Revoke Command Func \u2581is \u2581used \u2581to \u2581 revoke \u2581a \u2581 revoke \u2581command"], "references": ["\u2581// \u2581lease Revoke Command Func \u2581executes \u2581the \u2581\" lease \u2581grant \" \u2581command ."], "bleu": 0.33649324423301513, "rouge_l": 0.4474327628361858}
{"id": 2010, "predictions": ["\u2581// \u2581 Delete Container Backup \u2581deletes \u2581the \u2581 container \u2581 info \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 Delete Container Backup \u2581requests \u2581that \u2581 LXD \u2581deletes \u2581the \u2581 container \u2581backup"], "bleu": 0.46892438882117243, "rouge_l": 0.6245733788395904}
{"id": 1792, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Client ."], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 gerrit \u2581client"], "bleu": 0.48633831680799433, "rouge_l": 0.6842948717948718}
{"id": 1118, "predictions": ["\u2581// \u2581 List TeamMember s \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 roles \u2581that \u2581are \u2581stored \u2581in \u2581the \u2581// \u2581current \u2581release ."], "references": ["\u2581// \u2581 List TeamMember s \u2581return \u2581a \u2581fake \u2581team \u2581with \u2581a \u2581single \u2581\" sig - lead \" \u2581GitHub \u2581team member"], "bleu": 0.22115966812339863, "rouge_l": 0.2939759036144578}
{"id": 1723, "predictions": ["\u2581// \u2581list Sub Dirs \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 keys \u2581in \u2581the \u2581 GCS \u2581bucket ."], "references": ["\u2581// \u2581Lists \u2581the \u2581 GCS \u2581\" directory \u2581paths \" \u2581immediately \u2581under \u2581prefix ."], "bleu": 0.1487964117124549, "rouge_l": 0.34154535274356107}
{"id": 7, "predictions": ["\u2581// \u2581 New Cert \u2581creates \u2581a \u2581new \u2581certificate \u2581from \u2581the \u2581given \u2581 key \u2581file"], "references": ["\u2581// \u2581 New Cert \u2581generates \u2581 TLS \u2581cert \u2581by \u2581using \u2581the \u2581given \u2581cert , key \u2581and \u2581parse \u2581function ."], "bleu": 0.21081416843475398, "rouge_l": 0.41295938104448743}
{"id": 1243, "predictions": ["\u2581// \u2581validate Context Overlap \u2581checks \u2581if \u2581the \u2581given \u2581 set \u2581of \u2581 signatures \u2581are \u2581valid . \u2581// \u2581It \u2581returns \u2581the \u2581first \u2581error \u2581if \u2581the \u2581 set \u2581of \u2581 contains \u2581all"], "references": ["\u2581// \u2581validate Context Overlap \u2581ensures \u2581that \u2581there \u2581will \u2581be \u2581no \u2581overlap \u2581in \u2581 contexts \u2581between \u2581a \u2581 set \u2581of \u2581jobs \u2581running \u2581and \u2581a \u2581 set \u2581to \u2581skip"], "bleu": 0.16899950539944233, "rouge_l": 0.31881533101045295}
{"id": 516, "predictions": ["\u2581// \u2581 Recv Append Req \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581 raft \u2581server ."], "references": ["\u2581// \u2581 Recv Append Req \u2581updates \u2581the \u2581 Server Stats \u2581in \u2581response \u2581to \u2581an \u2581 Append Request \u2581// \u2581from \u2581the \u2581given \u2581leader \u2581being \u2581received"], "bleu": 0.18358932876325576, "rouge_l": 0.3517298187808896}
{"id": 0, "predictions": ["\u2581// \u2581 New ST M \u2581creates \u2581a \u2581new \u2581 ST Txn Response ."], "references": ["\u2581// \u2581 New ST M \u2581 initiate s \u2581a \u2581new \u2581 ST M \u2581instance , \u2581using \u2581 serializable \u2581snapshot \u2581 isolation \u2581by \u2581default ."], "bleu": 0.233631933121766, "rouge_l": 0.5130361648444071}
{"id": 1585, "predictions": ["\u2581// \u2581 Run Path \u2581 resolves \u2581the \u2581 contents \u2581of \u2581the \u2581 key \u2581and \u2581returns \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Run Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 GCS \u2581directory \u2581for \u2581the \u2581job \u2581run \u2581specified \u2581in \u2581 src ."], "bleu": 0.240205958445105, "rouge_l": 0.5295974743488556}
{"id": 37, "predictions": ["\u2581// \u2581Verify Join Existing \u2581checks \u2581if \u2581the \u2581cluster \u2581is \u2581 join ed \u2581to \u2581the \u2581cluster"], "references": ["\u2581// \u2581Verify Join Existing \u2581 s anity - checks \u2581the \u2581initial \u2581 config \u2581for \u2581 join \u2581existing \u2581cluster \u2581// \u2581case \u2581and \u2581returns \u2581an \u2581error \u2581for \u2581things \u2581that \u2581should \u2581never \u2581happen"], "bleu": 0.10315156032159929, "rouge_l": 0.3353951890034364}
{"id": 1257, "predictions": ["\u2581// \u2581Should Report \u2581returns \u2581true \u2581if \u2581the \u2581 status \u2581is \u2581 set ."], "references": ["\u2581// \u2581Should Report \u2581returns \u2581if \u2581 this \u2581 p row job \u2581should \u2581be \u2581reported \u2581by \u2581the \u2581 github \u2581reporter"], "bleu": 0.20522771238299164, "rouge_l": 0.4231912784935579}
{"id": 1273, "predictions": ["\u2581// \u2581 enqueue Key \u2581adds \u2581a \u2581new \u2581 key \u2581to \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 enqueue Key \u2581 schedules \u2581an \u2581item \u2581for \u2581 reconciliation ."], "bleu": 0.27668736912821895, "rouge_l": 0.5460358056265985}
{"id": 1513, "predictions": ["\u2581// \u2581 Receive Issue \u2581implements \u2581 Open Plugin Wrapper ."], "references": ["\u2581// \u2581 Receive Issue \u2581creates \u2581a \u2581fake \u2581\" opened \" \u2581event"], "bleu": 0.3174567515536576, "rouge_l": 0.37770897832817335}
{"id": 1082, "predictions": ["\u2581// \u2581 MD DataSources \u2581returns \u2581the \u2581 MD ' s \u2581 MD \u2581for \u2581the \u2581input \u2581string ."], "references": ["\u2581// \u2581 MD TemplateEngine \u2581runs \u2581the \u2581input \u2581through \u2581 github \u2581 flavor ed \u2581markdown \u2581before \u2581sending \u2581it \u2581to \u2581the \u2581 Plus h \u2581engine ."], "bleu": 0.12725934785380094, "rouge_l": 0.37858805275407287}
{"id": 378, "predictions": ["\u2581// \u2581 New Set Dir Command \u2581returns \u2581a \u2581command \u2581to \u2581 set \u2581the \u2581 cli \u2581flags \u2581for \u2581the \u2581// \u2581 cli \u2581command ."], "references": ["\u2581// \u2581 New Set Dir Command \u2581returns \u2581the \u2581CLI \u2581command \u2581for \u2581\" set Dir \" ."], "bleu": 0.32165877113881314, "rouge_l": 0.5299739357080799}
{"id": 917, "predictions": ["\u2581// \u2581 Leader Plus \u2581returns \u2581a \u2581 slice \u2581of \u2581nodes \u2581that \u2581are \u2581 n d ."], "references": ["\u2581// \u2581 Leader Plus \u2581returns \u2581the \u2581leader \u2581+ \u2581 n \u2581additional \u2581nodes \u2581from \u2581the \u2581cluster \u2581// \u2581the \u2581leader \u2581is \u2581always \u2581the \u2581first \u2581node \u2581in \u2581the \u2581returned \u2581 slice ."], "bleu": 0.16173492697812866, "rouge_l": 0.38019390581717455}
{"id": 1276, "predictions": ["\u2581// \u2581default Arguments \u2581returns \u2581a \u2581 slice \u2581of \u2581 Arguments \u2581that \u2581are \u2581 set \u2581in \u2581the \u2581 format \u2581of \u2581 this \u2581 Template"], "references": ["\u2581// \u2581default Arguments \u2581will \u2581 append \u2581each \u2581arg \u2581to \u2581the \u2581template , \u2581except \u2581where \u2581the \u2581argument \u2581 name \u2581is \u2581already \u2581defined ."], "bleu": 0.11328360454400997, "rouge_l": 0.2677395757132407}
{"id": 520, "predictions": ["\u2581// \u2581is Member Bootstrap ped \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581true \u2581if \u2581the \u2581cluster \u2581is \u2581// \u2581 active ."], "references": ["\u2581// \u2581is Member Bootstrap ped \u2581tries \u2581to \u2581check \u2581if \u2581the \u2581given \u2581member \u2581has \u2581been \u2581 bootstrapped \u2581// \u2581in \u2581the \u2581given \u2581cluster ."], "bleu": 0.2525464993528203, "rouge_l": 0.4168564920273349}
{"id": 36, "predictions": ["\u2581// \u2581Verify Bootstrap \u2581checks \u2581if \u2581the \u2581cluster \u2581is \u2581valid ."], "references": ["\u2581// \u2581Verify Bootstrap \u2581 s anity - checks \u2581the \u2581initial \u2581 config \u2581for \u2581bootstrap \u2581case \u2581// \u2581and \u2581returns \u2581an \u2581error \u2581for \u2581things \u2581that \u2581should \u2581never \u2581happen ."], "bleu": 0.047434432659409435, "rouge_l": 0.24959083469721768}
{"id": 411, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581child \u2581node \u2581to \u2581the \u2581node ."], "references": ["\u2581// \u2581Add \u2581function \u2581adds \u2581a \u2581node \u2581to \u2581the \u2581receiver \u2581node . \u2581// \u2581If \u2581the \u2581receiver \u2581is \u2581not \u2581a \u2581directory , \u2581a \u2581\" Not \u2581 A \u2581 Directory \" \u2581error \u2581will"], "bleu": 0.05635678205677782, "rouge_l": 0.40516605166051656}
{"id": 357, "predictions": ["\u2581// \u2581 append Mark Tombstone \u2581adds \u2581a \u2581new \u2581 tombstone \u2581to \u2581the \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581 set \u2581of \u2581// \u2581 items \u2581in \u2581the \u2581 format ."], "references": ["\u2581// \u2581 append Mark Tombstone \u2581appends \u2581 tombstone \u2581 mark \u2581to \u2581normal \u2581revision \u2581bytes ."], "bleu": 0.17995816286711674, "rouge_l": 0.42558139534883715}
{"id": 1818, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Run \u2581 monitors \u2581the \u2581incoming \u2581configuration \u2581changes \u2581to \u2581determine \u2581when \u2581 statuses \u2581need \u2581to \u2581be \u2581// \u2581 reconcile d \u2581on \u2581 PR s \u2581in \u2581 flight \u2581when \u2581blocking"], "bleu": 0.02111642300649355, "rouge_l": 0.23828125}
{"id": 494, "predictions": ["\u2581// \u2581open Snapshot Backend \u2581creates \u2581a \u2581new \u2581backend . Backend ."], "references": ["\u2581// \u2581open Snapshot Backend \u2581rename s \u2581a \u2581snapshot \u2581 db \u2581to \u2581the \u2581current \u2581etcd \u2581 db \u2581and \u2581open s \u2581it ."], "bleu": 0.13893448158621083, "rouge_l": 0.35499515033947615}
{"id": 1795, "predictions": ["\u2581// \u2581query All Changes \u2581returns \u2581the \u2581 set \u2581of \u2581changes \u2581to \u2581the \u2581given \u2581update ."], "references": ["\u2581// \u2581private \u2581handler \u2581implementation \u2581details"], "bleu": 0.08225964699966554, "rouge_l": 0.10990990990990988}
{"id": 785, "predictions": ["\u2581// \u2581try Add Level 0 Table \u2581checks \u2581if \u2581the \u2581 table \u2581 table \u2581 table \u2581 table \u2581 table \u2581 name \u2581is \u2581// \u2581 empty ."], "references": ["\u2581// \u2581try Add Level 0 Table \u2581returns \u2581true \u2581if \u2581ok \u2581and \u2581no \u2581st all ing ."], "bleu": 0.2250265947708922, "rouge_l": 0.39804241435562804}
{"id": 653, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Compact or ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Compact or \u2581based \u2581on \u2581given \u2581\" mode \" ."], "bleu": 0.5019931845457396, "rouge_l": 0.7384987893462469}
{"id": 413, "predictions": ["\u2581// \u2581 Compare \u2581compares \u2581the \u2581 Node ' s \u2581value \u2581to \u2581 comparing \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 Compare \u2581function \u2581compares \u2581node \u2581index \u2581and \u2581value \u2581with \u2581provided \u2581ones . \u2581// \u2581second \u2581result \u2581value \u2581 explain s \u2581result \u2581and \u2581 equals \u2581to \u2581one \u2581of \u2581 Compare ."], "bleu": 0.08236494486988463, "rouge_l": 0.36478405315614615}
{"id": 1676, "predictions": ["\u2581// \u2581 ReadAll \u2581reads \u2581all \u2581 Pod Log Artifact \u2581from \u2581the \u2581pod Log Artifact"], "references": ["\u2581// \u2581 ReadAll \u2581reads \u2581all \u2581available \u2581pod \u2581logs , \u2581fail ing \u2581if \u2581they \u2581are \u2581too \u2581large"], "bleu": 0.2916985568408411, "rouge_l": 0.3952483801295896}
{"id": 297, "predictions": ["\u2581// \u2581 Dial \u2581connects \u2581to \u2581the \u2581 grpc \u2581server ."], "references": ["\u2581// \u2581 Dial \u2581connects \u2581to \u2581a \u2581single \u2581endpoint \u2581using \u2581the \u2581client ' s \u2581 config ."], "bleu": 0.2804403209163222, "rouge_l": 0.5907990314769976}
{"id": 1113, "predictions": ["\u2581// \u2581Remove Label \u2581removes \u2581a \u2581 label \u2581from \u2581the \u2581current \u2581release ."], "references": ["\u2581// \u2581Remove Label \u2581removes \u2581a \u2581 label"], "bleu": 0.5593684915933074, "rouge_l": 0.7735507246376813}
{"id": 1282, "predictions": ["\u2581// \u2581new Labels \u2581returns \u2581a \u2581list \u2581of \u2581 ids \u2581for \u2581the \u2581given \u2581issue ."], "references": ["\u2581// \u2581new Labels \u2581creates \u2581a \u2581new \u2581 Label \u2581for \u2581each \u2581 label \u2581in \u2581the \u2581issue"], "bleu": 0.18760371416609697, "rouge_l": 0.548314606741573}
{"id": 587, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 Range Response \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581Get \u2581looks \u2581up \u2581the \u2581caching \u2581response \u2581for \u2581a \u2581given \u2581request . \u2581// \u2581Get \u2581is \u2581also \u2581responsible \u2581for \u2581lazy \u2581 eviction \u2581when \u2581accessing \u2581 compacted \u2581entries ."], "bleu": 0.041628440046873126, "rouge_l": 0.24458700882117085}
{"id": 1488, "predictions": ["\u2581// \u2581 Expand Aliases \u2581expand s \u2581the \u2581 login s \u2581for \u2581the \u2581 login s ."], "references": ["\u2581// \u2581 Expand Aliases \u2581returns \u2581members \u2581of \u2581multiple \u2581 aliases , \u2581duplicates \u2581are \u2581 pruned"], "bleu": 0.23287896954139942, "rouge_l": 0.3893617021276596}
{"id": 1445, "predictions": ["\u2581// \u2581Generate Template \u2581generates \u2581a \u2581template \u2581template \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 data ."], "references": ["\u2581// \u2581Generate Template \u2581takes \u2581a \u2581template , \u2581 name \u2581and \u2581 data , \u2581and \u2581generates \u2581// \u2581the \u2581corresponding \u2581string ."], "bleu": 0.32251999935859654, "rouge_l": 0.5991071428571428}
{"id": 1386, "predictions": ["\u2581// \u2581 Replace ConfigMap \u2581replaces \u2581the \u2581given \u2581 config \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 config ."], "references": ["\u2581// \u2581 Replace ConfigMap \u2581puts \u2581the \u2581 config map \u2581into \u2581 name . \u2581// \u2581// \u2581 Analog ous \u2581to \u2581 kubectl \u2581 replace \u2581 config map \u2581// \u2581// \u2581If \u2581"], "bleu": 0.1421084012442473, "rouge_l": 0.438562091503268}
{"id": 1424, "predictions": ["\u2581// \u2581 GetAll Potential Approve rs \u2581returns \u2581all \u2581the \u2581 descendants \u2581of \u2581the \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581 set"], "references": ["\u2581// \u2581 GetAll Potential Approve rs \u2581returns \u2581the \u2581people \u2581from \u2581relevant \u2581 owners \u2581files \u2581needed \u2581to \u2581 get \u2581the \u2581 PR \u2581 approved"], "bleu": 0.3388396381401945, "rouge_l": 0.5312046444121916}
{"id": 1321, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581the \u2581 GCS \u2581object \u2581to \u2581be \u2581used \u2581for \u2581 GCS \u2581upload ."], "references": ["\u2581// \u2581Validate \u2581ensures \u2581that \u2581the \u2581 set \u2581of \u2581options \u2581are \u2581// \u2581self - consistent \u2581and \u2581valid ."], "bleu": 0.12469284614528092, "rouge_l": 0.3090172239108409}
{"id": 1086, "predictions": ["\u2581// \u2581 Compose From Generic Matches \u2581returns \u2581a \u2581list \u2581of \u2581strings \u2581that \u2581match \u2581the \u2581 label \u2581 set ."], "references": ["\u2581// \u2581 getLabels From Generic Matches \u2581returns \u2581 label \u2581matches \u2581with \u2581extra \u2581labels \u2581if \u2581those \u2581// \u2581have \u2581been \u2581configured \u2581in \u2581the \u2581plugin \u2581 config ."], "bleu": 0.1800317301004333, "rouge_l": 0.44363636363636366}
{"id": 1967, "predictions": ["\u2581// \u2581network Nodes \u2581returns \u2581a \u2581list \u2581of \u2581nodes \u2581that \u2581are \u2581 tracked \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581Return \u2581the \u2581names \u2581of \u2581the \u2581nodes \u2581the \u2581given \u2581network \u2581is \u2581defined \u2581on ."], "bleu": 0.10521495173810227, "rouge_l": 0.3373893805309734}
{"id": 1159, "predictions": ["\u2581// \u2581 Help Provider \u2581returns \u2581the \u2581help \u2581 plugins \u2581for \u2581the \u2581 plugins ."], "references": ["\u2581// \u2581 Help Provider \u2581constructs \u2581the \u2581 Plugin Help \u2581for \u2581 this \u2581plugin \u2581that \u2581takes \u2581into \u2581account \u2581enabled \u2581 repositories . \u2581// \u2581 Help Provider \u2581defines \u2581the \u2581 type \u2581for"], "bleu": 0.10103130458948929, "rouge_l": 0.3839160839160839}
{"id": 824, "predictions": ["\u2581// \u2581 List \u2581returns \u2581all \u2581the \u2581 active \u2581snapshots ."], "references": ["\u2581// \u2581 List \u2581returns \u2581available \u2581snapshots \u2581in \u2581the \u2581store ."], "bleu": 0.39458812555917666, "rouge_l": 0.6}
{"id": 441, "predictions": ["\u2581// \u2581start Etcd \u2581creates \u2581a \u2581new \u2581etcd \u2581server \u2581and \u2581returns \u2581a \u2581channel \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 watch \u2581// \u2581the \u2581etcd \u2581server ."], "references": ["\u2581// \u2581start Etcd \u2581runs \u2581 Start Etcd \u2581in \u2581addition \u2581to \u2581 hooks \u2581needed \u2581for \u2581 standalone \u2581etcd ."], "bleu": 0.12049514584750938, "rouge_l": 0.3421474358974359}
{"id": 2008, "predictions": ["\u2581// \u2581Create Container Backup \u2581creates \u2581a \u2581backup \u2581 container"], "references": ["\u2581// \u2581Create Container Backup \u2581requests \u2581that \u2581 LXD \u2581creates \u2581a \u2581new \u2581backup \u2581for \u2581the \u2581 container"], "bleu": 0.23751081726122505, "rouge_l": 0.6853932584269663}
{"id": 1822, "predictions": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581 config \u2581from \u2581the \u2581 config \u2581file"], "references": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581 set \u2581of \u2581options , \u2581 p referring \u2581to \u2581use \u2581// \u2581JSON \u2581 config \u2581from \u2581an \u2581 env \u2581var , \u2581but \u2581fall ing \u2581back"], "bleu": 0.1666636645313649, "rouge_l": 0.43416370106761565}
{"id": 2036, "predictions": ["\u2581// \u2581Use Project \u2581returns \u2581a \u2581 container \u2581 name \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Use Project \u2581returns \u2581a \u2581client \u2581that \u2581will \u2581use \u2581a \u2581specific \u2581project ."], "bleu": 0.31314224813827346, "rouge_l": 0.43416370106761565}
{"id": 1857, "predictions": ["\u2581// \u2581Apply Default \u2581applies \u2581the \u2581given \u2581 config \u2581to \u2581the \u2581registry ."], "references": ["\u2581// \u2581Apply Default \u2581applies \u2581the \u2581defaults \u2581for \u2581the \u2581 Utility Images \u2581 decorations . \u2581If \u2581a \u2581field \u2581has \u2581a \u2581zero \u2581value , \u2581// \u2581it \u2581replaces \u2581that \u2581with \u2581the \u2581value \u2581"], "bleu": 0.09397825921862017, "rouge_l": 0.30942028985507253}
{"id": 986, "predictions": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581the \u2581default \u2581context \u2581to \u2581JSON"], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581 json \u2581marshal ing \u2581for \u2581the \u2581context"], "bleu": 0.19766634639198594, "rouge_l": 0.5213675213675214}
{"id": 1999, "predictions": ["\u2581// \u2581Set Container Metadata \u2581sets \u2581the \u2581metadata \u2581for \u2581the \u2581 container"], "references": ["\u2581// \u2581Set Container Metadata \u2581sets \u2581the \u2581 content \u2581of \u2581the \u2581 container \u2581metadata \u2581file ."], "bleu": 0.4513818603768707, "rouge_l": 0.6736196319018404}
{"id": 1777, "predictions": ["\u2581// \u2581execute Template \u2581executes \u2581a \u2581template \u2581and \u2581returns \u2581the \u2581template ."], "references": ["\u2581// \u2581 Log View Template \u2581executes \u2581the \u2581log \u2581viewer \u2581template \u2581ready \u2581for \u2581rendering"], "bleu": 0.1486375602900724, "rouge_l": 0.41049798115746977}
{"id": 1738, "predictions": ["\u2581// \u2581 AddFlags \u2581adds \u2581flags \u2581for \u2581the \u2581 controller"], "references": ["\u2581// \u2581 AddFlags \u2581parses \u2581options \u2581for \u2581 github \u2581client"], "bleu": 0.2907153684841096, "rouge_l": 0.5555555555555556}
{"id": 1320, "predictions": ["\u2581// \u2581 Format Response Raw \u2581 - \u2581 Requests \u2581 body \u2581to \u2581 stdout \u2581in \u2581 url ."], "references": ["\u2581// \u2581 Format Response Raw \u2581nicely \u2581formats \u2581a \u2581response \u2581for \u2581one \u2581does \u2581not \u2581have \u2581an \u2581issue \u2581 comment"], "bleu": 0.2592170537135687, "rouge_l": 0.3333333333333333}
{"id": 497, "predictions": ["\u2581// \u2581 New Update Command \u2581returns \u2581a \u2581new \u2581 cli . Command \u2581for \u2581the \u2581 cli \u2581flags"], "references": ["\u2581// \u2581 New Update Command \u2581returns \u2581the \u2581CLI \u2581command \u2581for \u2581\" update \" ."], "bleu": 0.3575297164449809, "rouge_l": 0.45963401506996776}
{"id": 595, "predictions": ["\u2581// \u2581 Wait \u2581waits \u2581for \u2581the \u2581 Barrier \u2581to \u2581 exit ."], "references": ["\u2581// \u2581 Wait \u2581blocks \u2581on \u2581the \u2581 barrier \u2581 key \u2581until \u2581it \u2581is \u2581deleted . \u2581If \u2581there \u2581is \u2581no \u2581 key , \u2581 Wait \u2581// \u2581assumes \u2581 Release \u2581has \u2581already"], "bleu": 0.055140912627813024, "rouge_l": 0.30942028985507253}
{"id": 590, "predictions": ["\u2581// \u2581 New Unique URL sWith Exception s \u2581returns \u2581a \u2581new \u2581 Unique URL sWith Exception s"], "references": ["\u2581// \u2581 New Unique URL sWith Exception s \u2581implements \u2581\" url . URL \" \u2581 slice \u2581as \u2581flag . Value \u2581interface . \u2581// \u2581Given \u2581value \u2581is \u2581to \u2581be \u2581separated \u2581by"], "bleu": 0.22046633301628452, "rouge_l": 0.36478405315614615}
{"id": 1236, "predictions": ["\u2581// \u2581 Receive Comment \u2581unmarshal s \u2581a \u2581 comment \u2581from \u2581the \u2581 Comment Plugin Wrapper ."], "references": ["\u2581// \u2581 Receive Comment \u2581creates \u2581a \u2581fake \u2581\" comment ed \" \u2581event"], "bleu": 0.23287896954139942, "rouge_l": 0.43990384615384615}
{"id": 1608, "predictions": ["\u2581// \u2581 Dump Profile \u2581 dumps \u2581the \u2581profile \u2581to \u2581the \u2581given \u2581 Profile ."], "references": ["\u2581// \u2581 Dump Profile \u2581 dumps \u2581the \u2581profile \u2581to \u2581the \u2581given \u2581file \u2581destination . \u2581// \u2581If \u2581the \u2581destination \u2581is \u2581\"-\" , \u2581it \u2581instead \u2581writes \u2581to \u2581 stdout ."], "bleu": 0.29669508531782735, "rouge_l": 0.5839469808541973}
{"id": 1267, "predictions": ["\u2581// \u2581Apply \u2581applies \u2581a \u2581 Policy \u2581to \u2581a \u2581 Policy ."], "references": ["\u2581// \u2581Apply \u2581returns \u2581a \u2581policy \u2581that \u2581merges \u2581the \u2581child \u2581into \u2581the \u2581parent"], "bleu": 0.14709132836587344, "rouge_l": 0.25884016973125884}
{"id": 1277, "predictions": ["\u2581// \u2581default Env \u2581returns \u2581the \u2581default \u2581environment \u2581variables \u2581for \u2581the \u2581 container"], "references": ["\u2581// \u2581default Env \u2581adds \u2581the \u2581 map \u2581of \u2581environment \u2581variables \u2581to \u2581the \u2581 container , \u2581except \u2581 keys \u2581already \u2581defined ."], "bleu": 0.1511708113442028, "rouge_l": 0.5198863636363635}
{"id": 1987, "predictions": ["\u2581// \u2581 Delete Container File \u2581deletes \u2581the \u2581 container \u2581file \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 Delete Container File \u2581deletes \u2581a \u2581file \u2581in \u2581the \u2581 container"], "bleu": 0.5038920485259633, "rouge_l": 0.7800511508951408}
{"id": 999, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 gen \u2581instance ."], "references": ["\u2581// \u2581 New \u2581generator \u2581to \u2581generate \u2581 refresh \u2581 templates"], "bleu": 0.24808415001701817, "rouge_l": 0.4}
{"id": 1767, "predictions": ["\u2581// \u2581tags To Where \u2581returns \u2581a \u2581 slice \u2581of \u2581tags \u2581that \u2581are \u2581 set \u2581to \u2581 filter"], "references": ["\u2581// \u2581tags To Where \u2581creates \u2581a \u2581where \u2581query \u2581to \u2581match \u2581tags \u2581element"], "bleu": 0.22612164703205964, "rouge_l": 0.42707117852975496}
{"id": 980, "predictions": ["\u2581// \u2581 New SMTP Sender \u2581returns \u2581a \u2581new \u2581 SMTP \u2581sender \u2581using \u2581the \u2581given \u2581 name \u2581and \u2581password ."], "references": ["\u2581// New SMTP Sender \u2581builds \u2581a \u2581 SMTP \u2581 mail \u2581based \u2581in \u2581passed \u2581 config ."], "bleu": 0.16586105071157167, "rouge_l": 0.5223596574690771}
{"id": 2047, "predictions": ["\u2581// \u2581modify Check ClusterState For Leave \u2581is \u2581used \u2581to \u2581 apply \u2581the \u2581given \u2581 Node \u2581to \u2581the \u2581node . \u2581// \u2581 In \u2581case \u2581of \u2581the \u2581 Node \u2581is \u2581 held"], "references": ["\u2581// \u2581Check \u2581that \u2581cluster - related \u2581 preconditions \u2581are \u2581met \u2581for \u2581leaving \u2581a \u2581cluster ."], "bleu": 0.047973925170118475, "rouge_l": 0.1418604651162791}
{"id": 1983, "predictions": ["\u2581// \u2581 Rename Container \u2581rename s \u2581a \u2581 container \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Rename Container \u2581requests \u2581that \u2581 LXD \u2581rename s \u2581the \u2581 container"], "bleu": 0.37030468338190614, "rouge_l": 0.6711491442542787}
{"id": 1980, "predictions": ["\u2581// \u2581Create Container \u2581creates \u2581a \u2581 container \u2581with \u2581the \u2581given \u2581 container ."], "references": ["\u2581// \u2581Create Container \u2581requests \u2581that \u2581 LXD \u2581creates \u2581a \u2581new \u2581 container"], "bleu": 0.24739977342883948, "rouge_l": 0.5640686922060767}
{"id": 1771, "predictions": ["\u2581// \u2581gather \u2581is \u2581used \u2581to \u2581 collect \u2581all \u2581the \u2581 controller \u2581 data"], "references": ["\u2581// \u2581gather \u2581metrics \u2581from \u2581plan k . \u2581// \u2581 Mean t \u2581to \u2581be \u2581called \u2581inside \u2581a \u2581goroutine ."], "bleu": 0.09723045789389204, "rouge_l": 0.18807810894141833}
{"id": 997, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 gen \u2581instance ."], "references": ["\u2581// \u2581 New \u2581generator \u2581to \u2581create \u2581a \u2581 gr if t \u2581task"], "bleu": 0.21258637840736228, "rouge_l": 0.44721407624633425}
{"id": 1156, "predictions": ["\u2581// \u2581 Is Optional \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 id \u2581is \u2581a \u2581function \u2581that \u2581is \u2581// \u2581not \u2581a \u2581custom \u2581 NotFoundError \u2581or \u2581 this \u2581policy \u2581is \u2581returned ."], "references": ["\u2581// \u2581 Is Optional \u2581checks \u2581whether \u2581a \u2581context \u2581can \u2581be \u2581ignored . \u2581// \u2581Will \u2581return \u2581true \u2581if \u2581// \u2581 - \u2581context \u2581is \u2581registered \u2581as \u2581optional \u2581// \u2581 - \u2581required \u2581"], "bleu": 0.15357707391748981, "rouge_l": 0.3717451523545706}
{"id": 581, "predictions": ["\u2581// \u2581 Expect Func \u2581implements \u2581the \u2581 Process Func \u2581interface ."], "references": ["\u2581// \u2581 Expect Func \u2581returns \u2581the \u2581first \u2581line \u2581satisfy ing \u2581the \u2581function \u2581 f ."], "bleu": 0.2478539992548469, "rouge_l": 0.5239263803680982}
{"id": 847, "predictions": ["\u2581// \u2581 decode Response \u2581decodes \u2581the \u2581response \u2581from \u2581the \u2581passed \u2581connection ."], "references": ["\u2581// \u2581 decode Response \u2581is \u2581used \u2581to \u2581 decode \u2581an \u2581RPC \u2581response \u2581and \u2581reports \u2581whether \u2581// \u2581the \u2581connection \u2581can \u2581be \u2581reused ."], "bleu": 0.1455700558599925, "rouge_l": 0.4468864468864468}
{"id": 850, "predictions": ["\u2581// \u2581 decode Responses \u2581handles \u2581the \u2581response \u2581from \u2581the \u2581pipeline"], "references": ["\u2581// \u2581 decode Responses \u2581is \u2581a \u2581long \u2581running \u2581routine \u2581that \u2581decodes \u2581the \u2581responses \u2581// \u2581sent \u2581on \u2581the \u2581connection ."], "bleu": 0.15516043600937746, "rouge_l": 0.3918629550321199}
{"id": 286, "predictions": ["\u2581// \u2581maybe Term \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581index \u2581is \u2581in \u2581the \u2581 data \u2581 slice ."], "references": ["\u2581// \u2581maybe Term \u2581returns \u2581the \u2581term \u2581of \u2581the \u2581entry \u2581at \u2581index \u2581 i , \u2581if \u2581there \u2581// \u2581is \u2581any ."], "bleu": 0.20976100358692257, "rouge_l": 0.42620087336244544}
{"id": 148, "predictions": ["\u2581// \u2581 New Update Dir Command \u2581returns \u2581a \u2581command \u2581to \u2581update \u2581the \u2581 config"], "references": ["\u2581// \u2581 New Update Dir Command \u2581returns \u2581the \u2581CLI \u2581command \u2581for \u2581\" update dir \" ."], "bleu": 0.4361910814559407, "rouge_l": 0.5269978401727862}
{"id": 1147, "predictions": ["\u2581// \u2581 Patch \u2581applies \u2581the \u2581patch \u2581and \u2581returns \u2581the \u2581 patched \u2581 patched \u2581 doc ."], "references": ["\u2581// \u2581 Patch \u2581applies \u2581the \u2581patch \u2581and \u2581returns \u2581the \u2581 patched \u2581 p row Job ."], "bleu": 0.7541859578343534, "rouge_l": 0.8125000000000001}
{"id": 1404, "predictions": ["\u2581// \u2581 Update One \u2581updates \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Update One \u2581signals \u2581update \u2581for \u2581one \u2581of \u2581the \u2581resources \u2581hold \u2581by \u2581the \u2581client ."], "bleu": 0.2470218646484793, "rouge_l": 0.46112311015118784}
{"id": 1297, "predictions": ["\u2581// \u2581 get JobName \u2581returns \u2581the \u2581 set \u2581of \u2581 Job \u2581 Tags \u2581for \u2581the \u2581given \u2581 entity ."], "references": ["\u2581// \u2581 get JobName \u2581generates \u2581the \u2581correct \u2581job \u2581 name \u2581for \u2581 this \u2581job \u2581 type"], "bleu": 0.21314568971111159, "rouge_l": 0.4643196955280685}
{"id": 1233, "predictions": ["\u2581// \u2581Get Applicable \u2581returns \u2581the \u2581 batched \u2581 content \u2581of \u2581the \u2581given \u2581 org \u2581and \u2581 status ."], "references": ["\u2581// \u2581Get Applicable \u2581returns \u2581the \u2581subset \u2581of \u2581 blocker s \u2581applicable \u2581to \u2581the \u2581specified \u2581branch ."], "bleu": 0.28339296176052864, "rouge_l": 0.4756335282651072}
{"id": 20, "predictions": ["\u2581// \u2581delete \u2581removes \u2581all \u2581 watchers \u2581from \u2581the \u2581 watch ."], "references": ["\u2581// \u2581delete \u2581removes \u2581a \u2581watcher \u2581and \u2581returns \u2581the \u2581number \u2581of \u2581remaining \u2581 watchers ."], "bleu": 0.20625141357032833, "rouge_l": 0.4698331193838254}
{"id": 496, "predictions": ["\u2581// \u2581recover Snapshot Backend \u2581returns \u2581a \u2581backend \u2581that \u2581reads \u2581the \u2581snapshot \u2581from \u2581the \u2581// \u2581given \u2581snapshot ."], "references": ["\u2581// \u2581recover Backend Snapshot \u2581recover s \u2581the \u2581 DB \u2581from \u2581a \u2581snapshot \u2581in \u2581case \u2581etcd \u2581crash es \u2581// \u2581before \u2581updating \u2581the \u2581backend \u2581 db \u2581after \u2581 persist ing \u2581 raft"], "bleu": 0.06258382435886439, "rouge_l": 0.24318936877076414}
{"id": 636, "predictions": ["\u2581// \u2581 get Compare Fail Cause \u2581checks \u2581if \u2581the \u2581given \u2581node \u2581is \u2581a \u2581 set \u2581of \u2581 type \u2581 type \u2581and \u2581 s ."], "references": ["\u2581// \u2581returns \u2581user - readable \u2581cause \u2581of \u2581failed \u2581comparison"], "bleu": 0.05606668411195419, "rouge_l": 0.132034632034632}
{"id": 1669, "predictions": ["\u2581// \u2581Get Resources \u2581returns \u2581the \u2581 set \u2581of \u2581resources \u2581associated \u2581with \u2581the \u2581// \u2581storage ."], "references": ["\u2581// \u2581Get Resources \u2581list \u2581all \u2581resources"], "bleu": 0.16188613565728213, "rouge_l": 0.4128595600676818}
{"id": 712, "predictions": ["\u2581// \u2581 New Concat Iterator \u2581returns \u2581a \u2581new \u2581 Concat Iterator ."], "references": ["\u2581// \u2581 New Concat Iterator \u2581creates \u2581a \u2581new \u2581 concatenate d \u2581 iterator"], "bleu": 0.44569465355269594, "rouge_l": 0.6354166666666667}
{"id": 1449, "predictions": ["\u2581// \u2581 Load Config \u2581 loads \u2581the \u2581configuration \u2581from \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Load Config \u2581reads \u2581the \u2581yaml \u2581 config \u2581at \u2581 path"], "bleu": 0.30130404892785684, "rouge_l": 0.5460358056265985}
{"id": 313, "predictions": ["\u2581// \u2581to PB \u2581converts \u2581a \u2581 watch Request \u2581to \u2581a \u2581 protobuf \u2581 observing ."], "references": ["\u2581// \u2581to PB \u2581converts \u2581an \u2581internal \u2581 watch \u2581request \u2581structure \u2581to \u2581its \u2581 protobuf \u2581 Watch Request \u2581structure ."], "bleu": 0.2752012014434707, "rouge_l": 0.6336166194523135}
{"id": 341, "predictions": ["\u2581// \u2581 New De OW Command \u2581returns \u2581a \u2581command \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581blocked \u2581 deployed \u2581cluster ."], "references": ["\u2581// \u2581 New De frag Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" De frag \" ."], "bleu": 0.1896632646081197, "rouge_l": 0.4625105307497894}
{"id": 1216, "predictions": ["\u2581// \u2581options For Repo \u2581returns \u2581a \u2581 L ised \u2581 L ised \u2581 L \u2581vertices \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581options For Repo \u2581gets \u2581the \u2581 plugins . L gt m \u2581struct \u2581that \u2581is \u2581applicable \u2581to \u2581the \u2581indicated \u2581repo ."], "bleu": 0.18728674627858763, "rouge_l": 0.38095238095238093}
{"id": 1696, "predictions": ["\u2581// \u2581Create Token Handler \u2581creates \u2581a \u2581 Token Handler \u2581for \u2581the \u2581given \u2581 authorizer ."], "references": ["\u2581// \u2581Create Token Handler \u2581parses \u2581the \u2581 token \u2581and \u2581create \u2581a \u2581handler"], "bleu": 0.25748661016289676, "rouge_l": 0.4535315985130111}
{"id": 535, "predictions": ["\u2581// \u2581keep \u2581returns \u2581the \u2581 oldest \u2581item \u2581for \u2581the \u2581given \u2581 key . \u2581If \u2581the \u2581 key \u2581is \u2581not \u2581 empty , \u2581it \u2581returns \u2581// \u2581the \u2581 empty \u2581 key"], "references": ["\u2581// \u2581keep \u2581finds \u2581the \u2581revision \u2581to \u2581be \u2581kept \u2581if \u2581compact \u2581is \u2581called \u2581at \u2581given \u2581at Rev ."], "bleu": 0.06561789050024278, "rouge_l": 0.22393538913362698}
{"id": 1174, "predictions": ["\u2581// \u2581run Worker \u2581starts \u2581the \u2581worker \u2581loop \u2581that \u2581 reconcile s \u2581the \u2581worker \u2581// \u2581and \u2581waits \u2581for \u2581the \u2581worker \u2581to \u2581 reconcile ."], "references": ["\u2581// \u2581run Worker \u2581 dequeue s \u2581to \u2581 reconcile , \u2581until \u2581the \u2581queue \u2581has \u2581closed ."], "bleu": 0.15948715931428456, "rouge_l": 0.47697654213727203}
{"id": 1952, "predictions": ["\u2581// \u2581 Image Get Nodes Without Image \u2581returns \u2581a \u2581list \u2581of \u2581nodes \u2581that \u2581are \u2581used \u2581to \u2581// \u2581 get \u2581the \u2581 Image \u2581 Nodes \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Get Nodes Without Image \u2581returns \u2581the \u2581addresses \u2581of \u2581 online \u2581nodes \u2581which \u2581don ' t \u2581have \u2581the \u2581image ."], "bleu": 0.3066439134043059, "rouge_l": 0.49061662198391426}
{"id": 1504, "predictions": ["\u2581// \u2581 AddFlags \u2581adds \u2581flags \u2581to \u2581the \u2581specified \u2581 FlagSet ."], "references": ["\u2581// \u2581 AddFlags \u2581adds \u2581flags \u2581to \u2581the \u2581 FlagSet \u2581that \u2581populate \u2581// \u2581the \u2581wrapper \u2581options \u2581struct \u2581provided ."], "bleu": 0.3633520843130336, "rouge_l": 0.6608884073672807}
{"id": 1933, "predictions": ["\u2581// \u2581 Image Associate Node \u2581creates \u2581a \u2581new \u2581node \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Associate Node \u2581creates \u2581a \u2581new \u2581entry \u2581in \u2581the \u2581images _ nodes \u2581 table \u2581for \u2581// \u2581tracking \u2581that \u2581the \u2581current \u2581node \u2581has \u2581the \u2581given \u2581image ."], "bleu": 0.20596826470181928, "rouge_l": 0.5033758439609903}
{"id": 2029, "predictions": ["\u2581// \u2581 Profile Cleanup Left over \u2581removes \u2581all \u2581the \u2581profile \u2581 left \u2581and \u2581removes \u2581them \u2581from \u2581// \u2581 this \u2581cluster ."], "references": ["\u2581// \u2581 Profile Cleanup Left over \u2581removes \u2581un referenced \u2581profiles ."], "bleu": 0.3221135973222975, "rouge_l": 0.5298588490770901}
{"id": 529, "predictions": ["\u2581// \u2581 Observe \u2581implements \u2581 Detector ."], "references": ["\u2581// \u2581 Observe \u2581 observe s \u2581an \u2581event \u2581for \u2581given \u2581 id . \u2581It \u2581returns \u2581false \u2581and \u2581exceeded \u2581duration \u2581// \u2581if \u2581the \u2581interval \u2581is \u2581longer \u2581than \u2581the \u2581 expectation ."], "bleu": 0.014314649590731681, "rouge_l": 0.24302788844621512}
{"id": 393, "predictions": ["\u2581// \u2581 Used \u2581to \u2581determine \u2581if \u2581the \u2581loop \u2581is \u2581ready \u2581to \u2581be \u2581 canceled ."], "references": ["\u2581// \u2581deadline Loop \u2581 reap s \u2581any \u2581keep \u2581 alive \u2581channels \u2581that \u2581have \u2581not \u2581received \u2581a \u2581response \u2581// \u2581within \u2581the \u2581lease \u2581 TTL"], "bleu": 0.060680355990719456, "rouge_l": 0.2028262676641729}
{"id": 552, "predictions": ["\u2581// \u2581 Attach \u2581 attaches \u2581a \u2581 Lease ID \u2581to \u2581the \u2581 group ."], "references": ["\u2581// \u2581 Attach \u2581 attaches \u2581 items \u2581to \u2581the \u2581lease \u2581with \u2581given \u2581 ID . \u2581When \u2581the \u2581lease \u2581// \u2581 expires , \u2581the \u2581attached \u2581 items \u2581will \u2581be \u2581automatically \u2581removed"], "bleu": 0.128515618774749, "rouge_l": 0.42657342657342656}
{"id": 1707, "predictions": ["\u2581// \u2581 Alias For Spec \u2581returns \u2581a \u2581 set \u2581of \u2581 alias \u2581for \u2581the \u2581spec"], "references": ["\u2581// \u2581 Alias For Spec \u2581determines \u2581the \u2581 GCS \u2581 path \u2581 aliases \u2581for \u2581a \u2581job \u2581spec"], "bleu": 0.3135859063707743, "rouge_l": 0.5562310030395137}
{"id": 1610, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client ."], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581client \u2581that \u2581 talk s \u2581to \u2581GitHub . \u2581It \u2581will \u2581fail \u2581if \u2581 git \u2581is \u2581not \u2581// \u2581in \u2581the \u2581 PATH ."], "bleu": 0.07518197173827847, "rouge_l": 0.35672514619883045}
{"id": 1977, "predictions": ["\u2581// \u2581Get Containers Full \u2581returns \u2581the \u2581list \u2581of \u2581containers \u2581in \u2581the \u2581 container"], "references": ["\u2581// \u2581Get Containers Full \u2581returns \u2581a \u2581list \u2581of \u2581containers \u2581including \u2581snapshots , \u2581 backups \u2581and \u2581state"], "bleu": 0.363006324357309, "rouge_l": 0.6093229744728079}
{"id": 1477, "predictions": ["\u2581// \u2581Should Run \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581valid ."], "references": ["\u2581// \u2581Should Run \u2581determines \u2581if \u2581the \u2581 pre submit \u2581should \u2581run \u2581against \u2581a \u2581specific \u2581// \u2581base \u2581 ref , \u2581or \u2581in \u2581response \u2581to \u2581a \u2581 set \u2581of \u2581changes . \u2581The"], "bleu": 0.06144125958664295, "rouge_l": 0.30391459074733096}
{"id": 2002, "predictions": ["\u2581// \u2581 Delete Container Template File \u2581removes \u2581the \u2581 container \u2581file \u2581 name \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 Delete Container Template File \u2581deletes \u2581a \u2581template \u2581file \u2581for \u2581a \u2581 container ."], "bleu": 0.3715770152515523, "rouge_l": 0.5689119170984456}
{"id": 187, "predictions": ["\u2581// \u2581new Watcher Batch \u2581returns \u2581a \u2581new \u2581watcher \u2581batch \u2581that \u2581 contains \u2581the \u2581given \u2581// \u2581 set \u2581of \u2581 items \u2581that \u2581were \u2581 set \u2581to \u2581 notify ."], "references": ["\u2581// \u2581new Watcher Batch \u2581maps \u2581 watchers \u2581to \u2581their \u2581matched \u2581events . \u2581It \u2581enables \u2581quick \u2581// \u2581events \u2581look \u2581up \u2581by \u2581watcher ."], "bleu": 0.1432450175903488, "rouge_l": 0.2861930294906166}
{"id": 1630, "predictions": ["\u2581// \u2581 CreateOrUpdate itor \u2581removes \u2581all \u2581 items \u2581from \u2581the \u2581given \u2581 slice \u2581and \u2581removes \u2581them \u2581// \u2581from \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581async \u2581 jan itor \u2581goroutine"], "bleu": 0.06293173924458136, "rouge_l": 0.23135271807838179}
{"id": 704, "predictions": ["\u2581// \u2581 Seek \u2581implements \u2581the \u2581 Iterator \u2581interface ."], "references": ["\u2581// \u2581 Seek \u2581bring s \u2581 us \u2581to \u2581the \u2581first \u2581block \u2581element \u2581that \u2581is \u2581>= \u2581input \u2581 key ."], "bleu": 0.09946155943451722, "rouge_l": 0.4026402640264026}
{"id": 688, "predictions": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 DB ."], "references": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581 ls m \u2581and \u2581value \u2581log \u2581files \u2581in \u2581bytes . \u2581It \u2581can \u2581be \u2581used \u2581to \u2581decide \u2581how \u2581often \u2581to \u2581// \u2581 call"], "bleu": 0.21921281349372848, "rouge_l": 0.45337837837837835}
{"id": 1708, "predictions": ["\u2581// \u2581 Root For Spec \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 Root \u2581spec \u2581for \u2581the \u2581spec"], "references": ["\u2581// \u2581 Root For Spec \u2581determines \u2581the \u2581root \u2581 GCS \u2581 path \u2581for \u2581storing \u2581artifacts \u2581about \u2581// \u2581the \u2581provided \u2581job ."], "bleu": 0.2602905083887341, "rouge_l": 0.5165114309906859}
{"id": 273, "predictions": ["\u2581// \u2581 New Tmp Backend \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Backend ."], "references": ["\u2581// \u2581 New Tmp Backend \u2581creates \u2581a \u2581backend \u2581implementation \u2581for \u2581testing ."], "bleu": 0.3759663529467017, "rouge_l": 0.5640686922060767}
{"id": 487, "predictions": ["\u2581// \u2581 NewUser Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581` docker \u2581 User `"], "references": ["\u2581// \u2581 NewUser Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" user \" ."], "bleu": 0.42818185319516083, "rouge_l": 0.6073008849557523}
{"id": 335, "predictions": ["\u2581// \u2581Apply Snapshot \u2581implements \u2581the \u2581 Snapshot \u2581interface ."], "references": ["\u2581// \u2581Apply Snapshot \u2581overwrite s \u2581the \u2581 contents \u2581of \u2581 this \u2581 Storage \u2581object \u2581with \u2581// \u2581those \u2581of \u2581the \u2581given \u2581snapshot ."], "bleu": 0.07658172084131416, "rouge_l": 0.359882005899705}
{"id": 791, "predictions": ["\u2581// \u2581 Value Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581item \u2581in \u2581the \u2581 Item"], "references": ["\u2581// \u2581 Value Size \u2581returns \u2581the \u2581exact \u2581 size \u2581of \u2581the \u2581value . \u2581// \u2581// \u2581This \u2581can \u2581be \u2581called \u2581to \u2581quickly \u2581estimate \u2581the \u2581 size \u2581of \u2581a \u2581value \u2581without \u2581fetching"], "bleu": 0.22616792214653433, "rouge_l": 0.5030927835051546}
{"id": 245, "predictions": ["\u2581// \u2581 add Request \u2581adds \u2581a \u2581request \u2581to \u2581the \u2581 data \u2581store ."], "references": ["\u2581// \u2581 add Request \u2581adds \u2581a \u2581read \u2581only \u2581re u q est \u2581into \u2581 readonly \u2581struct . \u2581// \u2581` index ` \u2581is \u2581the \u2581commit \u2581index \u2581of \u2581the \u2581 raft \u2581state"], "bleu": 0.13287617742557511, "rouge_l": 0.3473309608540925}
{"id": 1606, "predictions": ["\u2581// \u2581 New Locking \u2581returns \u2581a \u2581new \u2581 mocked \u2581 ServeMux ."], "references": ["\u2581// New Bo skos Handler \u2581constructs \u2581the \u2581 bo skos \u2581handler ."], "bleu": 0.13065113298388567, "rouge_l": 0.3333333333333333}
{"id": 840, "predictions": ["\u2581// \u2581 get Pooled Conn \u2581returns \u2581a \u2581new \u2581 net Conn ."], "references": ["\u2581// \u2581 get Existing Conn \u2581is \u2581used \u2581to \u2581grab \u2581a \u2581 pooled \u2581connection ."], "bleu": 0.19466979646887753, "rouge_l": 0.5310945273631842}
{"id": 1673, "predictions": ["\u2581// \u2581 New Pod Log Artifact \u2581creates \u2581a \u2581new \u2581 Pod Log Artifact"], "references": ["\u2581// \u2581 New Pod Log Artifact \u2581creates \u2581a \u2581new \u2581 Pod Log Artifact"], "bleu": 1.0, "rouge_l": 1.0}
{"id": 1553, "predictions": ["\u2581// \u2581 git Ctx For Refs \u2581returns \u2581the \u2581 git \u2581context \u2581for \u2581the \u2581given \u2581 refs ."], "references": ["\u2581// \u2581 git Ctx For Refs \u2581creates \u2581a \u2581 git Ctx \u2581based \u2581on \u2581the \u2581provide \u2581 refs \u2581and \u2581 baseDir ."], "bleu": 0.32422442578620597, "rouge_l": 0.6198137171888229}
{"id": 985, "predictions": ["\u2581// \u2581 File \u2581returns \u2581a \u2581file \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 File \u2581returns \u2581an \u2581uploaded \u2581file \u2581by \u2581 name , \u2581or \u2581an \u2581error"], "bleu": 0.291099242890319, "rouge_l": 0.5310945273631842}
{"id": 95, "predictions": ["\u2581// \u2581 role Get Command Func \u2581returns \u2581a \u2581command \u2581to \u2581 get \u2581the \u2581 role \u2581 role"], "references": ["\u2581// \u2581 role Get Command Func \u2581executes \u2581the \u2581\" role \u2581 get \" \u2581command ."], "bleu": 0.4021074690812005, "rouge_l": 0.5689119170984456}
{"id": 1814, "predictions": ["\u2581// \u2581 GetConfig s \u2581returns \u2581all \u2581 config \u2581 config \u2581for \u2581all \u2581 plugins ."], "references": ["\u2581// \u2581 GetConfig s \u2581returns \u2581all \u2581configs"], "bleu": 0.37239098949398236, "rouge_l": 0.583732057416268}
{"id": 1625, "predictions": ["\u2581// \u2581 kube Env \u2581returns \u2581a \u2581 slice \u2581of \u2581 env \u2581variables \u2581from \u2581environment \u2581variables ."], "references": ["\u2581// \u2581 kube Env \u2581transforms \u2581a \u2581mapping \u2581of \u2581environment \u2581variables \u2581// \u2581into \u2581their \u2581serialized \u2581 form \u2581for \u2581a \u2581 PodSpec , \u2581sorting \u2581by \u2581// \u2581the \u2581 name \u2581of \u2581the \u2581"], "bleu": 0.12028710568136561, "rouge_l": 0.32972972972972975}
{"id": 874, "predictions": ["\u2581// \u2581 vote \u2581 marks \u2581the \u2581future \u2581and \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 status \u2581of \u2581the \u2581// \u2581 disconnected \u2581channel ."], "references": ["\u2581// \u2581 vote \u2581is \u2581used \u2581to \u2581respond \u2581to \u2581a \u2581verify Future . \u2581// \u2581This \u2581may \u2581block \u2581when \u2581respond ing \u2581on \u2581the \u2581 notify Ch ."], "bleu": 0.11538118437191057, "rouge_l": 0.24813559322033898}
{"id": 140, "predictions": ["\u2581// \u2581 Filters FromRequest \u2581returns \u2581a \u2581 filter Func \u2581that \u2581filters \u2581 filter \u2581from \u2581// \u2581the \u2581 watch \u2581API ."], "references": ["\u2581// \u2581 Filters FromRequest \u2581returns \u2581\" mvc c . Filter Func \" \u2581from \u2581a \u2581given \u2581 watch \u2581create \u2581request ."], "bleu": 0.2784899880299974, "rouge_l": 0.5}
{"id": 1217, "predictions": ["\u2581// \u2581 get Changed Files \u2581returns \u2581the \u2581list \u2581of \u2581 repositories \u2581that \u2581are \u2581 owned \u2581by \u2581the \u2581repository ."], "references": ["\u2581// \u2581 get Changed Files \u2581returns \u2581all \u2581the \u2581changed \u2581files \u2581for \u2581the \u2581provided \u2581pull \u2581request ."], "bleu": 0.3187271473320672, "rouge_l": 0.5223596574690771}
{"id": 968, "predictions": ["\u2581// \u2581should Snapshot \u2581returns \u2581true \u2581if \u2581the \u2581last \u2581 Raft \u2581 data \u2581is \u2581in \u2581the \u2581 Raft \u2581// \u2581 set ."], "references": ["\u2581// \u2581should Snapshot \u2581checks \u2581if \u2581we \u2581 meet \u2581the \u2581conditions \u2581to \u2581take \u2581// \u2581a \u2581new \u2581snapshot ."], "bleu": 0.1324317283199537, "rouge_l": 0.4291996481970096}
{"id": 1582, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 api ."], "references": ["\u2581// \u2581 New \u2581constructs \u2581a \u2581 Spy glass \u2581object \u2581from \u2581a \u2581 Job Agent , \u2581a \u2581 config . Agent , \u2581and \u2581a \u2581storage \u2581 Client ."], "bleu": 0.04088986951654114, "rouge_l": 0.30576441102756885}
{"id": 1990, "predictions": ["\u2581// \u2581Get Container Snapshot \u2581gets \u2581the \u2581snapshot \u2581of \u2581a \u2581 container"], "references": ["\u2581// \u2581Get Container Snapshot \u2581returns \u2581a \u2581 Snapshot \u2581struct \u2581for \u2581the \u2581provided \u2581 container \u2581and \u2581snapshot \u2581names"], "bleu": 0.24181521090264724, "rouge_l": 0.48139797068771134}
{"id": 606, "predictions": ["\u2581// \u2581 Is Leader \u2581returns \u2581whether \u2581or \u2581not \u2581the \u2581 Member \u2581is \u2581a \u2581leader"], "references": ["\u2581// \u2581 Is Leader \u2581returns \u2581true \u2581if \u2581 this \u2581member \u2581is \u2581the \u2581current \u2581cluster \u2581leader ."], "bleu": 0.3189038559775543, "rouge_l": 0.5269978401727862}
{"id": 965, "predictions": ["\u2581// \u2581 DefaultConfig \u2581returns \u2581the \u2581default \u2581configuration \u2581for \u2581the \u2581 container"], "references": ["\u2581// \u2581 DefaultConfig \u2581returns \u2581a \u2581 Config \u2581with \u2581 usable \u2581defaults ."], "bleu": 0.30297388532167924, "rouge_l": 0.4314002828854314}
{"id": 1547, "predictions": ["\u2581// \u2581 Enabled Repos For External Plugin \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 plugins \u2581that \u2581are \u2581// \u2581registered \u2581with \u2581the \u2581given \u2581plugin ."], "references": ["\u2581// \u2581 Enabled Repos For External Plugin \u2581returns \u2581the \u2581 orgs \u2581and \u2581 repos \u2581that \u2581have \u2581enabled \u2581the \u2581passed \u2581// \u2581external \u2581plugin ."], "bleu": 0.4589000277281645, "rouge_l": 0.6407563025210085}
{"id": 1070, "predictions": ["\u2581// \u2581 Dep Ensure \u2581checks \u2581 show \u2581 code \u2581for \u2581 this \u2581command"], "references": ["\u2581// \u2581 Dep Ensure \u2581runs \u2581` dep \u2581ensure \u2581 - v ` \u2581or \u2581` go \u2581 get \u2581 - u ` \u2581depending \u2581on \u2581 app \u2581 tool ing \u2581// \u2581to"], "bleu": 0.08086124506504899, "rouge_l": 0.30391459074733096}
{"id": 1417, "predictions": ["\u2581// \u2581 New DiskCache \u2581returns \u2581a \u2581new \u2581 RoundTripper \u2581that \u2581uses \u2581 consensus \u2581and \u2581 data \u2581to \u2581the \u2581// \u2581given \u2581 consensus \u2581and \u2581 size \u2581and \u2581 size ."], "references": ["\u2581// \u2581 New DiskCache \u2581creates \u2581a \u2581GitHub \u2581cache \u2581 RoundTripper \u2581that \u2581is \u2581back ed \u2581by \u2581a \u2581disk \u2581// \u2581cache ."], "bleu": 0.16832484320875543, "rouge_l": 0.4221453287197232}
{"id": 1730, "predictions": ["\u2581// \u2581 New Opener \u2581returns \u2581a \u2581new \u2581 Opener \u2581implementation ."], "references": ["\u2581// \u2581 New Opener \u2581returns \u2581an \u2581 opener \u2581that \u2581can \u2581read \u2581 GCS \u2581and \u2581local \u2581paths ."], "bleu": 0.2598473546935531, "rouge_l": 0.48139797068771134}
{"id": 1157, "predictions": ["\u2581// \u2581 Missing Required Contexts \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 contexts \u2581 set \u2581in \u2581the \u2581 type \u2581of \u2581the \u2581// \u2581 T id e \u2581context ."], "references": ["\u2581// \u2581 Missing Required Contexts \u2581discard \u2581the \u2581optional \u2581 contexts \u2581and \u2581only \u2581look \u2581of \u2581extra \u2581required \u2581 contexts \u2581that \u2581are \u2581not \u2581provided ."], "bleu": 0.19731275035382392, "rouge_l": 0.43913612565445026}
{"id": 935, "predictions": ["\u2581// \u2581request Config Change \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Index Future \u2581that \u2581// \u2581 expires \u2581the \u2581 Raft \u2581 status \u2581of \u2581the \u2581given \u2581 Raft"], "references": ["\u2581// \u2581request Config Change \u2581is \u2581a \u2581 helper \u2581for \u2581the \u2581above \u2581function s \u2581that \u2581make \u2581// \u2581configuration \u2581change \u2581requests . \u2581' req ' \u2581describes \u2581the \u2581change . \u2581 For \u2581timeout"], "bleu": 0.28583914246859676, "rouge_l": 0.4393351800554017}
{"id": 1880, "predictions": ["\u2581// \u2581 Labels \u2581returns \u2581all \u2581 ids \u2581of \u2581a \u2581cluster ."], "references": ["\u2581// \u2581 Labels \u2581returns \u2581the \u2581labels \u2581to \u2581 apply \u2581to \u2581the \u2581issue \u2581created \u2581for \u2581 this \u2581cluster \u2581on \u2581 github ."], "bleu": 0.1436507942780557, "rouge_l": 0.414161008729389}
{"id": 519, "predictions": ["\u2581// \u2581delete Rev Key \u2581deletes \u2581the \u2581 key \u2581from \u2581the \u2581 key - value \u2581pair ."], "references": ["\u2581// \u2581delete Rev Key \u2581deletes \u2581a \u2581 key \u2581by \u2581revision , \u2581returning \u2581false \u2581if \u2581 key \u2581is \u2581missing"], "bleu": 0.30731655886154974, "rouge_l": 0.523854961832061}
{"id": 2005, "predictions": ["\u2581// \u2581 Delete Container Console Log \u2581deletes \u2581the \u2581 container \u2581console \u2581log \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 Delete Container Console Log \u2581deletes \u2581the \u2581requested \u2581 container ' s \u2581console \u2581log"], "bleu": 0.5560336961016132, "rouge_l": 0.7787234042553192}
{"id": 1763, "predictions": ["\u2581// \u2581load Paths \u2581reads \u2581the \u2581 group \u2581from \u2581the \u2581reader \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581 Group ."], "references": ["\u2581// \u2581Use \u2581load Paths \u2581to \u2581load \u2581a \u2581file \u2581of \u2581new - line \u2581 delimited \u2581paths , \u2581such \u2581as \u2581// \u2581 resolving \u2581file \u2581 data \u2581referenced \u2581in \u2581a \u2581\" paths -"], "bleu": 0.07254514305841674, "rouge_l": 0.22803738317757008}
{"id": 178, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581a \u2581 Command \u2581command \u2581to \u2581 get \u2581the \u2581 top - level \u2581command"], "references": ["\u2581// \u2581alarm Dis arm Command Func \u2581executes \u2581the \u2581\" alarm \u2581dis arm \" \u2581command ."], "bleu": 0.07681104116622756, "rouge_l": 0.23461538461538461}
{"id": 1479, "predictions": ["\u2581// \u2581Set Pre submit s \u2581sets \u2581 pre - \u2581backoff \u2581on \u2581all \u2581 replicas ."], "references": ["\u2581// \u2581Set Pre submit s \u2581updates \u2581 c . Pre submit s \u2581to \u2581jobs , \u2581after \u2581 compiling \u2581and \u2581 validating \u2581their \u2581 regexes ."], "bleu": 0.17119777970322994, "rouge_l": 0.38274509803921564}
{"id": 1841, "predictions": ["\u2581// \u2581 Key To Job \u2581converts \u2581a \u2581 key \u2581into \u2581a \u2581 Job ."], "references": ["\u2581// \u2581 Key To Job \u2581takes \u2581a \u2581spy glass \u2581 URL \u2581and \u2581returns \u2581the \u2581 jobName \u2581and \u2581build ID ."], "bleu": 0.2396490064412833, "rouge_l": 0.5130841121495328}
{"id": 1480, "predictions": ["\u2581// \u2581Set Post submit s \u2581sets \u2581the \u2581 post ing \u2581 post ing \u2581request \u2581to \u2581the \u2581 set \u2581of \u2581 post s ."], "references": ["\u2581// \u2581Set Post submit s \u2581updates \u2581 c . Post submit s \u2581to \u2581jobs , \u2581after \u2581 compiling \u2581and \u2581 validating \u2581their \u2581 regexes ."], "bleu": 0.21558257241738651, "rouge_l": 0.41355932203389834}
{"id": 691, "predictions": ["\u2581// \u2581 Key Txn \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Key Splits \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581 rough \u2581 key \u2581ranges \u2581to \u2581divide \u2581up \u2581iteration \u2581over \u2581// \u2581the \u2581 DB ."], "bleu": 0.11998942139583442, "rouge_l": 0.4143396226415094}
{"id": 451, "predictions": ["\u2581// \u2581 New Member List Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 Member List \u2581command"], "references": ["\u2581// \u2581 New Member List Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" member \u2581list \" ."], "bleu": 0.47176896213068414, "rouge_l": 0.6172953081876725}
{"id": 1671, "predictions": ["\u2581// \u2581Parse Config \u2581parses \u2581the \u2581 config \u2581file \u2581and \u2581returns \u2581the \u2581 Resource \u2581 config"], "references": ["\u2581// \u2581Parse Config \u2581reads \u2581in \u2581 configPath \u2581and \u2581returns \u2581a \u2581list \u2581of \u2581resource \u2581objects \u2581// \u2581on \u2581 success ."], "bleu": 0.14985197605321357, "rouge_l": 0.4032105760151086}
{"id": 605, "predictions": ["\u2581// \u2581 Compact \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 Member ' s \u2581// \u2581 data ."], "references": ["\u2581// \u2581 Compact \u2581compact s \u2581member \u2581storage \u2581with \u2581given \u2581revision . \u2581// \u2581It \u2581blocks \u2581until \u2581it ' s \u2581physical ly \u2581done ."], "bleu": 0.12586347848916266, "rouge_l": 0.2677395757132407}
{"id": 372, "predictions": ["\u2581// \u2581 auth Disable Command Func \u2581 disable s \u2581the \u2581command \u2581for \u2581the \u2581command"], "references": ["\u2581// \u2581 auth Disable Command Func \u2581executes \u2581the \u2581\" auth \u2581 disable \" \u2581command ."], "bleu": 0.43353400970949985, "rouge_l": 0.6168539325842697}
{"id": 862, "predictions": ["\u2581// \u2581 Store Logs \u2581logs \u2581all \u2581logs \u2581in \u2581the \u2581log \u2581log ."], "references": ["\u2581// \u2581 Store Logs \u2581implements \u2581the \u2581 Log Store \u2581interface ."], "bleu": 0.31455601883230705, "rouge_l": 0.5258620689655172}
{"id": 618, "predictions": ["\u2581// \u2581 With Progress \u2581sets \u2581the \u2581progress \u2581 status \u2581of \u2581the \u2581node ."], "references": ["\u2581// \u2581 With Progress \u2581is \u2581a \u2581 helper \u2581to \u2581 introspect \u2581the \u2581 Progress \u2581for \u2581 this \u2581node \u2581and \u2581its \u2581// \u2581peers ."], "bleu": 0.14268536469277468, "rouge_l": 0.42324371205550737}
{"id": 305, "predictions": ["\u2581// \u2581 Err \u2581returns \u2581the \u2581error \u2581if \u2581the \u2581response \u2581is \u2581 empty ."], "references": ["\u2581// \u2581 Err \u2581is \u2581the \u2581error \u2581value \u2581if \u2581 this \u2581 Watch Response \u2581holds \u2581an \u2581error ."], "bleu": 0.17659650147786382, "rouge_l": 0.5208110992529349}
{"id": 191, "predictions": ["\u2581// \u2581choose \u2581returns \u2581a \u2581 slice \u2581of \u2581 watchers \u2581that \u2581were \u2581 left \u2581to \u2581the \u2581given \u2581position ."], "references": ["\u2581// \u2581choose \u2581selects \u2581 watchers \u2581from \u2581the \u2581watcher \u2581 group \u2581to \u2581update"], "bleu": 0.12673718536830808, "rouge_l": 0.4149659863945578}
{"id": 503, "predictions": ["\u2581// \u2581 Unique Strings \u2581returns \u2581a \u2581 slice \u2581of \u2581strings \u2581that \u2581are \u2581 n ly \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Unique Strings \u2581returns \u2581a \u2581 slice \u2581of \u2581randomly \u2581generated \u2581unique \u2581strings ."], "bleu": 0.45298528719709075, "rouge_l": 0.6683266932270916}
{"id": 200, "predictions": ["\u2581// \u2581 replace Parent \u2581adds \u2581the \u2581parent \u2581of \u2581the \u2581interval \u2581tree \u2581to \u2581the \u2581 Interval Tree"], "references": ["\u2581// \u2581 replace Parent \u2581replaces \u2581 x ' s \u2581parent \u2581with \u2581 y"], "bleu": 0.23287896954139942, "rouge_l": 0.42165898617511516}
{"id": 1754, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581timestamp ."], "references": ["\u2581// \u2581Return \u2581valid \u2581 json ."], "bleu": 0.13950796967929133, "rouge_l": 0.26180257510729615}
{"id": 288, "predictions": ["\u2581// \u2581Save Snap \u2581saves \u2581the \u2581snapshot \u2581to \u2581the \u2581 WAL ."], "references": ["\u2581// \u2581Save Snap \u2581saves \u2581the \u2581snapshot \u2581to \u2581disk \u2581and \u2581release \u2581the \u2581locked \u2581// \u2581 wal \u2581files \u2581since \u2581they \u2581will \u2581not \u2581be \u2581used ."], "bleu": 0.22306071315885917, "rouge_l": 0.5530371713508613}
{"id": 238, "predictions": ["\u2581// \u2581next \u2581a \u2581 helper \u2581function \u2581to \u2581 get \u2581the \u2581next \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581 raft \u2581log ."], "references": ["\u2581// \u2581next Ent s \u2581returns \u2581all \u2581the \u2581available \u2581entries \u2581for \u2581execution . \u2581// \u2581If \u2581applied \u2581is \u2581smaller \u2581than \u2581the \u2581index \u2581of \u2581snapshot , \u2581it \u2581returns \u2581all \u2581committed \u2581// \u2581entries \u2581after"], "bleu": 0.06262630531921261, "rouge_l": 0.14969325153374236}
{"id": 777, "predictions": ["\u2581// \u2581rewrite \u2581is \u2581the \u2581 entrypoint \u2581to \u2581rewrite \u2581the \u2581file \u2581to \u2581 connect \u2581to \u2581the \u2581 Manifest File ."], "references": ["\u2581// \u2581Must \u2581be \u2581called \u2581while \u2581 append Lock \u2581is \u2581 held ."], "bleu": 0.08475426399505566, "rouge_l": 0.269018743109151}
{"id": 1439, "predictions": ["\u2581// \u2581 No Issue Approve rs \u2581 - \u2581 No \u2581issue \u2581 page \u2581 rs"], "references": ["\u2581// \u2581 No Issue Approve rs \u2581returns \u2581the \u2581list \u2581of \u2581people \u2581who \u2581have \u2581\" no - issue \" \u2581// \u2581 approved \u2581the \u2581pull - request . \u2581They \u2581are \u2581included \u2581in"], "bleu": 0.1458783355867521, "rouge_l": 0.3353951890034364}
{"id": 1135, "predictions": ["\u2581// \u2581 New Pre submit \u2581creates \u2581a \u2581new \u2581 Pre submit s \u2581request ."], "references": ["\u2581// \u2581 New Pre submit \u2581converts \u2581a \u2581 config . Pre submit \u2581into \u2581a \u2581 p row api . ProwJob . \u2581// \u2581The \u2581 p row api . Refs \u2581are"], "bleu": 0.12575022516903192, "rouge_l": 0.42657342657342656}
{"id": 2035, "predictions": ["\u2581// \u2581Get Server Resources \u2581retrieves \u2581the \u2581 api \u2581resources \u2581for \u2581the \u2581 LXD \u2581 api"], "references": ["\u2581// \u2581Get Server Resources \u2581returns \u2581the \u2581resources \u2581available \u2581to \u2581a \u2581given \u2581 LXD \u2581server"], "bleu": 0.2803950119994004, "rouge_l": 0.5551763367463025}
{"id": 1491, "predictions": ["\u2581// \u2581 decode \u2581decodes \u2581 config \u2581into \u2581JSON \u2581and \u2581 decode \u2581it ."], "references": ["\u2581// \u2581 decode Owners Md Config \u2581will \u2581parse \u2581the \u2581yaml \u2581header \u2581if \u2581it \u2581 exists \u2581and \u2581unmarshal \u2581it \u2581into \u2581a \u2581single Owners Config . \u2581// \u2581If \u2581no \u2581yaml \u2581header \u2581is"], "bleu": 0.05888620369363607, "rouge_l": 0.30391459074733096}
{"id": 1546, "predictions": ["\u2581// \u2581 Enabled Repos For Plugin \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581plugin \u2581that \u2581are \u2581// \u2581registered \u2581with \u2581the \u2581given \u2581plugin ."], "references": ["\u2581// \u2581 Enabled Repos For Plugin \u2581returns \u2581the \u2581 orgs \u2581and \u2581 repos \u2581that \u2581have \u2581enabled \u2581the \u2581passed \u2581plugin ."], "bleu": 0.438257204177357, "rouge_l": 0.6244094488188976}
{"id": 848, "predictions": ["\u2581// \u2581send RPC \u2581sends \u2581a \u2581RPC \u2581 call \u2581to \u2581the \u2581 Flush \u2581RPC ."], "references": ["\u2581// \u2581send RPC \u2581is \u2581used \u2581to \u2581 encode \u2581and \u2581send \u2581the \u2581RPC ."], "bleu": 0.21651956746181053, "rouge_l": 0.5220048899755501}
{"id": 1616, "predictions": ["\u2581// \u2581 Config \u2581implements \u2581 git . Repo . Config ."], "references": ["\u2581// \u2581 Config \u2581runs \u2581 git \u2581 config ."], "bleu": 0.2620251007173263, "rouge_l": 0.6110183639398998}
{"id": 604, "predictions": ["\u2581// \u2581 Rev \u2581implements \u2581the \u2581 Member \u2581interface ."], "references": ["\u2581// \u2581 Rev \u2581fetches \u2581current \u2581revision \u2581on \u2581 this \u2581member ."], "bleu": 0.23278666914796883, "rouge_l": 0.4911433172302737}
{"id": 1535, "predictions": ["\u2581// \u2581 GetUser \u2581retrieves \u2581a \u2581user \u2581by \u2581 login ."], "references": ["\u2581// \u2581 GetUser \u2581gets \u2581the \u2581 github \u2581user \u2581with \u2581the \u2581specified \u2581 login \u2581or \u2581the \u2581currently \u2581authenticated \u2581user . \u2581// \u2581 To \u2581 get \u2581the \u2581currently \u2581authenticated \u2581user \u2581specify \u2581a"], "bleu": 0.04178908527180245, "rouge_l": 0.32105263157894737}
{"id": 94, "predictions": ["\u2581// \u2581 role AddCommand Func \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 role \u2581command"], "references": ["\u2581// \u2581 role AddCommand Func \u2581executes \u2581the \u2581\" role \u2581 add \" \u2581command ."], "bleu": 0.36787632499277756, "rouge_l": 0.5714285714285714}
{"id": 1663, "predictions": ["\u2581// \u2581count To Boolean \u2581converts \u2581the \u2581given \u2581 Profile \u2581to \u2581a \u2581 slice \u2581of \u2581 Attributes ."], "references": ["\u2581// \u2581count To Boolean \u2581converts \u2581a \u2581profile \u2581containing \u2581hit \u2581counts \u2581to \u2581instead \u2581contain \u2581// \u2581only \u2581 1 s \u2581or \u25810 s ."], "bleu": 0.22403763237170912, "rouge_l": 0.40098603122432214}
{"id": 1662, "predictions": ["\u2581// \u2581 Aggregate Profiles \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581profiles \u2581in \u2581the \u2581profile ."], "references": ["\u2581// \u2581 Aggregate Profiles \u2581takes \u2581multiple \u2581 coverage \u2581profiles \u2581and \u2581produces \u2581a \u2581new \u2581// \u2581 coverage \u2581profile \u2581that \u2581counts \u2581the \u2581number \u2581of \u2581profiles \u2581that \u2581hit \u2581a \u2581block \u2581at \u2581least \u2581//"], "bleu": 0.09329970840207648, "rouge_l": 0.2986013986013986}
{"id": 93, "predictions": ["\u2581// \u2581 New Role Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581` docker Role `"], "references": ["\u2581// \u2581 New Role Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" role \" ."], "bleu": 0.49628227001973835, "rouge_l": 0.6489361702127661}
{"id": 118, "predictions": ["\u2581// \u2581 Key \u2581returns \u2581the \u2581 key \u2581for \u2581the \u2581 key"], "references": ["\u2581// \u2581 Key \u2581will \u2581parse \u2581and \u2581return \u2581the \u2581appropriately \u2581typed \u2581 key \u2581for \u2581the \u2581selected \u2581signature \u2581method"], "bleu": 0.2530922969702236, "rouge_l": 0.5501691093573844}
{"id": 1241, "predictions": ["\u2581// \u2581 Format URL \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 URL \u2581in \u2581the \u2581 URL ."], "references": ["\u2581// \u2581 Format URL \u2581will \u2581return \u2581the \u2581 GH \u2581markdown \u2581to \u2581 show \u2581the \u2581image \u2581for \u2581a \u2581specific \u2581 dog URL ."], "bleu": 0.2063735802316553, "rouge_l": 0.5012325390304027}
{"id": 1448, "predictions": ["\u2581// \u2581 Labels For Target \u2581returns \u2581a \u2581list \u2581of \u2581labels \u2581that \u2581match \u2581labels \u2581in \u2581the \u2581target \u2581 label ."], "references": ["\u2581// \u2581 Labels For Target \u2581returns \u2581labels \u2581that \u2581have \u2581a \u2581given \u2581target"], "bleu": 0.3392375549949802, "rouge_l": 0.6052921719955899}
{"id": 1562, "predictions": ["\u2581// \u2581 Helper Client \u2581 - \u2581returns \u2581a \u2581 experimental \u2581client \u2581for \u2581the \u2581 experimental \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes \u2581client"], "references": ["\u2581// \u2581 ProwJob Client \u2581returns \u2581a \u2581 ProwJob \u2581client ."], "bleu": 0.12049514584750938, "rouge_l": 0.4447916666666667}
{"id": 742, "predictions": ["\u2581// \u2581Parse File ID \u2581parses \u2581a \u2581 name \u2581of \u2581a \u2581file \u2581and \u2581returns \u2581a \u2581uint 64 \u2581value ."], "references": ["\u2581// \u2581Parse File ID \u2581reads \u2581the \u2581file \u2581 id \u2581out \u2581of \u2581a \u2581 filename ."], "bleu": 0.24941747177008258, "rouge_l": 0.4929292929292929}
{"id": 485, "predictions": ["\u2581// \u2581compact \u2581compact s \u2581the \u2581 v 3 \u2581 v 3 \u2581 data \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581compact \u2581keyspace \u2581 history \u2581to \u2581a \u2581provided \u2581revision"], "bleu": 0.10216198665886358, "rouge_l": 0.2443257676902537}
{"id": 743, "predictions": ["\u2581// \u2581 Print Histogram \u2581 - \u2581 Print Histogram \u2581 - \u2581 histograms \u2581for \u2581a \u2581 Histogram ."], "references": ["\u2581// \u2581 Print Histogram \u2581builds \u2581and \u2581displays \u2581the \u2581 key - value \u2581 size \u2581histogram . \u2581// \u2581When \u2581 keyPrefix \u2581is \u2581 set , \u2581only \u2581the \u2581 keys \u2581that \u2581have"], "bleu": 0.12110713069306593, "rouge_l": 0.3986928104575163}
{"id": 409, "predictions": ["\u2581// \u2581 List \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 children \u2581of \u2581the \u2581node ."], "references": ["\u2581// \u2581 List \u2581function \u2581return \u2581a \u2581 slice \u2581of \u2581nodes \u2581under \u2581the \u2581receiver \u2581node . \u2581// \u2581If \u2581the \u2581receiver \u2581node \u2581is \u2581not \u2581a \u2581directory , \u2581a \u2581\" Not \u2581 A"], "bleu": 0.07089244790478541, "rouge_l": 0.3839160839160839}
{"id": 843, "predictions": ["\u2581// \u2581 A \u2581 net . Conn \u2581that \u2581will \u2581 connect \u2581to \u2581the \u2581network ."], "references": ["\u2581// \u2581return Conn \u2581returns \u2581a \u2581connection \u2581back \u2581to \u2581the \u2581pool ."], "bleu": 0.12874330508144843, "rouge_l": 0.39559014267185466}
{"id": 1756, "predictions": ["\u2581// \u2581 Resolve Spec FromEnv \u2581 resolves \u2581the \u2581 config \u2581from \u2581the \u2581environment \u2581variable"], "references": ["\u2581// \u2581 Resolve Spec FromEnv \u2581will \u2581determine \u2581the \u2581 Refs \u2581being \u2581// \u2581tested \u2581in \u2581by \u2581parsing \u2581 P row \u2581environment \u2581variable \u2581 contents"], "bleu": 0.2154729262807768, "rouge_l": 0.4660441426146011}
{"id": 1200, "predictions": ["\u2581// \u2581 ServeHTTP \u2581implements \u2581the \u2581http . Handler \u2581interface ."], "references": ["\u2581// \u2581 ServeHTTP \u2581serves \u2581a \u2581JSON \u2581mapping \u2581from \u2581pool \u2581 key \u2581 -> \u2581sorted \u2581records \u2581for \u2581the \u2581pool ."], "bleu": 0.10556727130333551, "rouge_l": 0.3265524625267666}
{"id": 556, "predictions": ["\u2581// \u2581find Expired Lease s \u2581returns \u2581the \u2581maximum \u2581 leases \u2581of \u2581the \u2581 set \u2581of \u2581 leases \u2581// \u2581that \u2581are \u2581 set \u2581to \u2581the \u2581 set \u2581of \u2581 leases \u2581"], "references": ["\u2581// \u2581find Expired Lease s \u2581loops \u2581 leases \u2581in \u2581the \u2581lease Map \u2581until \u2581reaching \u2581expired \u2581limit \u2581// \u2581and \u2581returns \u2581the \u2581expired \u2581 leases \u2581that \u2581needed \u2581to \u2581be \u2581 revoked ."], "bleu": 0.215610692354456, "rouge_l": 0.43333333333333335}
{"id": 1561, "predictions": ["\u2581// \u2581 Helper Client set \u2581returns \u2581the \u2581 experimental \u2581client set \u2581for \u2581 this \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes"], "references": ["\u2581// \u2581 ProwJob Client set \u2581returns \u2581a \u2581 ProwJob \u2581client set \u2581for \u2581use \u2581in \u2581 informer \u2581 factories ."], "bleu": 0.13004800471424346, "rouge_l": 0.46792189679218965}
{"id": 602, "predictions": ["\u2581// \u2581 De Offer \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581create \u2581a \u2581new \u2581 De able \u2581 Member \u2581instance ."], "references": ["\u2581// \u2581 De frag \u2581runs \u2581de fragment ation \u2581on \u2581 this \u2581member ."], "bleu": 0.1258220555845937, "rouge_l": 0.31508264462809915}
{"id": 818, "predictions": ["\u2581// \u2581 Open \u2581returns \u2581a \u2581snapshot \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581snapshot ."], "references": ["\u2581// \u2581 Open \u2581 wraps \u2581an \u2581io . ReadCloser \u2581around \u2581the \u2581snapshot \u2581 contents"], "bleu": 0.2102369368326755, "rouge_l": 0.42857142857142855}
{"id": 1923, "predictions": ["\u2581// \u2581Get Existing Aliases \u2581returns \u2581a \u2581list \u2581of \u2581 aliases \u2581that \u2581are \u2581 aliases \u2581in \u2581the \u2581 set \u2581of \u2581 aliases ."], "references": ["\u2581// \u2581Get Existing Aliases \u2581returns \u2581the \u2581intersection \u2581between \u2581a \u2581list \u2581of \u2581 aliases \u2581and \u2581all \u2581the \u2581existing \u2581ones ."], "bleu": 0.37257484093951504, "rouge_l": 0.593192868719611}
{"id": 338, "predictions": ["\u2581// \u2581 New Endpoint Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 Endpoint Command"], "references": ["\u2581// \u2581 New Endpoint Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" endpoint \" ."], "bleu": 0.46606087123583245, "rouge_l": 0.6321243523316062}
{"id": 1401, "predictions": ["\u2581// \u2581 Release One \u2581 releases \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Release One \u2581returns \u2581one \u2581of \u2581 owned \u2581resources \u2581back \u2581to \u2581 bo skos \u2581and \u2581 set \u2581it \u2581to \u2581dest \u2581state ."], "bleu": 0.11976926891314636, "rouge_l": 0.3871260199456029}
{"id": 1724, "predictions": ["\u2581// \u2581 listAll \u2581returns \u2581all \u2581 keys \u2581in \u2581the \u2581bucket ."], "references": ["\u2581// \u2581Lists \u2581all \u2581 GCS \u2581 keys \u2581with \u2581given \u2581prefix ."], "bleu": 0.20504572236241866, "rouge_l": 0.45454545454545453}
{"id": 1764, "predictions": ["\u2581// \u2581 Match \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581matches \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Match \u2581determines \u2581whether \u2581a \u2581file , \u2581given \u2581here \u2581by \u2581its \u2581full \u2581 path \u2581// \u2581is \u2581included \u2581in \u2581the \u2581generated \u2581files \u2581 group ."], "bleu": 0.11022619122490268, "rouge_l": 0.42230769230769233}
{"id": 46, "predictions": ["\u2581// \u2581print L s \u2581prints \u2581the \u2581 L s \u2581 format \u2581to \u2581the \u2581command ."], "references": ["\u2581// \u2581print L s \u2581writes \u2581a \u2581response \u2581out \u2581in \u2581a \u2581manner \u2581similar \u2581to \u2581the \u2581` ls ` \u2581command \u2581in \u2581unix . \u2581// \u2581 Non - empty \u2581directories \u2581list \u2581their \u2581"], "bleu": 0.10845843803319692, "rouge_l": 0.3353951890034364}
{"id": 216, "predictions": ["\u2581// \u2581check \u2581checks \u2581if \u2581the \u2581given \u2581 data \u2581is \u2581available"], "references": ["\u2581// \u2581check \u2581whether \u2581request \u2581 satisfies \u2581the \u2581quota . \u2581If \u2581there \u2581is \u2581not \u2581enough \u2581space , \u2581// \u2581ignore \u2581request \u2581and \u2581raise \u2581the \u2581free \u2581space \u2581alarm ."], "bleu": 0.03983298429621784, "rouge_l": 0.20573355817875214}
{"id": 831, "predictions": ["\u2581// \u2581 Cancel \u2581cancel s \u2581all \u2581migrations \u2581and \u2581 remove \u2581them \u2581from \u2581the \u2581 File Snapshot Sink"], "references": ["\u2581// \u2581 Cancel \u2581is \u2581used \u2581to \u2581indicate \u2581an \u2581un successful \u2581end ."], "bleu": 0.13445273575332958, "rouge_l": 0.21353558926487748}
{"id": 1062, "predictions": ["\u2581// \u2581 Replace \u2581adds \u2581a \u2581middleware \u2581to \u2581the \u2581stack \u2581stack ."], "references": ["\u2581// \u2581 Replace \u2581a \u2581piece \u2581of \u2581middleware \u2581with \u2581another \u2581piece \u2581of \u2581middleware . \u2581 Gr eat \u2581for \u2581// \u2581testing ."], "bleu": 0.10759110393675154, "rouge_l": 0.36783919597989945}
{"id": 214, "predictions": ["\u2581// \u2581 Leader \u2581retrieves \u2581the \u2581leader \u2581from \u2581the \u2581 election ."], "references": ["\u2581// \u2581 Leader \u2581returns \u2581the \u2581leader \u2581value \u2581for \u2581the \u2581current \u2581 election ."], "bleu": 0.2925171834129552, "rouge_l": 0.7388963660834454}
{"id": 1637, "predictions": ["\u2581// \u2581find Associated Issue \u2581returns \u2581the \u2581 date \u2581of \u2581a \u2581given \u2581 org ."], "references": ["\u2581// \u2581Returns \u2581associated \u2581issue , \u2581or \u25810 \u2581if \u2581it \u2581can ' t \u2581find \u2581any . \u2581// \u2581This \u2581is \u2581really \u2581simple , \u2581and \u2581could \u2581be \u2581 improved \u2581later ."], "bleu": 0.04088952315269273, "rouge_l": 0.17967599410898377}
{"id": 696, "predictions": ["\u2581// \u2581has Conflict \u2581returns \u2581true \u2581if \u2581the \u2581 Txn \u2581is \u2581the \u2581 Conflict \u2581 set ."], "references": ["\u2581// \u2581has Conflict \u2581must \u2581be \u2581called \u2581while \u2581having \u2581a \u2581lock ."], "bleu": 0.1513851459876605, "rouge_l": 0.3065326633165829}
{"id": 205, "predictions": ["\u2581// \u2581 Intersect s \u2581reports \u2581whether \u2581 this \u2581 Interval \u2581is \u2581in \u2581the \u2581 Interval Tree"], "references": ["\u2581// \u2581 Intersect s \u2581returns \u2581true \u2581if \u2581there \u2581is \u2581some \u2581tree \u2581node \u2581 intersect ing \u2581the \u2581given \u2581interval ."], "bleu": 0.1996172379724422, "rouge_l": 0.3376383763837638}
{"id": 1343, "predictions": ["\u2581// \u2581 Review Comment \u2581retrieves \u2581 this \u2581agent \u2581agent \u2581 comment ."], "references": ["\u2581// \u2581 Review Comment EventHandlers \u2581returns \u2581a \u2581 map \u2581of \u2581plugin \u2581names \u2581to \u2581 handlers \u2581for \u2581the \u2581repo ."], "bleu": 0.1814920217421561, "rouge_l": 0.43394308943089427}
{"id": 1337, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 config \u2581agent ."], "references": ["\u2581// \u2581 Start \u2581starts \u2581polling \u2581 path \u2581for \u2581plugin \u2581 config . \u2581If \u2581the \u2581first \u2581attempt \u2581fails , \u2581// \u2581then \u2581start \u2581returns \u2581the \u2581error . \u2581 Future \u2581errors \u2581will \u2581"], "bleu": 0.04665299352571794, "rouge_l": 0.32720306513409964}
{"id": 1258, "predictions": ["\u2581// \u2581 Report \u2581returns \u2581a \u2581list \u2581of \u2581 active \u2581 repositories \u2581that \u2581are \u2581currently \u2581running \u2581on \u2581the \u2581// \u2581 container ."], "references": ["\u2581// \u2581 Report \u2581will \u2581report \u2581via \u2581report lib"], "bleu": 0.10813005337959174, "rouge_l": 0.2250922509225092}
{"id": 1721, "predictions": ["\u2581// \u2581 resolve Sym Link \u2581 resolves \u2581the \u2581 link \u2581to \u2581the \u2581 key \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581bucket ."], "references": ["\u2581// \u2581 resolve \u2581 sym \u2581links \u2581into \u2581the \u2581actual \u2581log \u2581directory \u2581for \u2581a \u2581particular \u2581 test \u2581run"], "bleu": 0.11328360454400997, "rouge_l": 0.3083403538331929}
{"id": 64, "predictions": ["\u2581// \u2581new Periodic \u2581creates \u2581a \u2581new \u2581 periodic \u2581 periodic \u2581instance ."], "references": ["\u2581// \u2581new Periodic \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Periodic \u2581compact or \u2581that \u2581purge s \u2581// \u2581the \u2581log \u2581older \u2581than \u2581 h \u2581 Duration ."], "bleu": 0.17824956275132803, "rouge_l": 0.4575000000000001}
{"id": 936, "predictions": ["\u2581// \u2581run \u2581is \u2581the \u2581main \u2581loop \u2581that \u2581will \u2581run \u2581the \u2581 Raft \u2581state"], "references": ["\u2581// \u2581run \u2581is \u2581a \u2581long \u2581running \u2581goroutine \u2581that \u2581runs \u2581the \u2581 Raft \u2581 FSM ."], "bleu": 0.22793942376569906, "rouge_l": 0.49364161849710986}
{"id": 139, "predictions": ["\u2581// \u2581 New Watch Server \u2581returns \u2581a \u2581new \u2581 watch Server ."], "references": ["\u2581// \u2581 New Watch Server \u2581returns \u2581a \u2581new \u2581 watch \u2581server ."], "bleu": 0.842362674378975, "rouge_l": 0.9166666666666665}
{"id": 262, "predictions": ["\u2581// \u2581 New Round Robin Balance d \u2581creates \u2581a \u2581new \u2581 Round Robin Balance d ."], "references": ["\u2581// \u2581 New Round robin Balance d \u2581returns \u2581a \u2581new \u2581 round robin \u2581 balanced \u2581 picker ."], "bleu": 0.28438803346282526, "rouge_l": 0.5820610687022901}
{"id": 1399, "predictions": ["\u2581// \u2581 Acquire By State \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581 active \u2581 active \u2581 active \u2581 active \u2581// \u2581 active \u2581 active \u2581 active \u2581 data ."], "references": ["\u2581// \u2581 Acquire By State \u2581 asks \u2581 bo skos \u2581for \u2581a \u2581resources \u2581of \u2581certain \u2581 type , \u2581and \u2581 set \u2581the \u2581resource \u2581to \u2581dest \u2581state . \u2581// \u2581Returns \u2581a"], "bleu": 0.185812400307378, "rouge_l": 0.33795013850415506}
{"id": 1338, "predictions": ["\u2581// \u2581 Generic Comment Handlers \u2581returns \u2581the \u2581 comment \u2581for \u2581the \u2581 model \u2581 model \u2581 name ."], "references": ["\u2581// \u2581 Generic Comment Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581plugin \u2581names \u2581to \u2581 handlers \u2581for \u2581the \u2581repo ."], "bleu": 0.34677764799680716, "rouge_l": 0.5379188712522045}
{"id": 1340, "predictions": ["\u2581// \u2581 Issue Comment Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581 comment \u2581to \u2581the \u2581 relation \u2581 status ."], "references": ["\u2581// \u2581 Issue Comment Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581plugin \u2581names \u2581to \u2581 handlers \u2581for \u2581the \u2581repo ."], "bleu": 0.5520516129306314, "rouge_l": 0.6842105263157894}
{"id": 1885, "predictions": ["\u2581// \u2581 remove Job \u2581removes \u2581a \u2581job \u2581from \u2581the \u2581 cron \u2581queue ."], "references": ["\u2581// \u2581 remove Job \u2581removes \u2581the \u2581job \u2581from \u2581 cron Agent"], "bleu": 0.44285001426914733, "rouge_l": 0.7614424410540915}
{"id": 1613, "predictions": ["\u2581// \u2581 Checkout New Branch \u2581creates \u2581a \u2581new \u2581branch \u2581for \u2581the \u2581branch ."], "references": ["\u2581// \u2581 Checkout New Branch \u2581creates \u2581a \u2581new \u2581branch \u2581and \u2581checks \u2581it \u2581out ."], "bleu": 0.6417815203955494, "rouge_l": 0.7358262967430639}
{"id": 179, "predictions": ["\u2581// \u2581 List \u2581the \u2581command - line \u2581command - line \u2581arguments"], "references": ["\u2581// \u2581alarm List Command Func \u2581executes \u2581the \u2581\" alarm \u2581list \" \u2581command ."], "bleu": 0.11941964005964323, "rouge_l": 0.3283983849259758}
{"id": 280, "predictions": ["\u2581// \u2581 Describe Entry \u2581returns \u2581the \u2581 Entry ' s \u2581 type \u2581and \u2581 f ."], "references": ["\u2581// \u2581 Describe Entry \u2581returns \u2581a \u2581 conc is e \u2581human - readable \u2581 description \u2581of \u2581an \u2581// \u2581 Entry \u2581for \u2581debugging ."], "bleu": 0.22155441554367125, "rouge_l": 0.4470684039087948}
{"id": 763, "predictions": ["\u2581// \u2581 Dec r Ref \u2581 decrement s \u2581the \u2581 ref - th \u2581element ."], "references": ["\u2581// \u2581 Dec r Ref \u2581 decrement s \u2581the \u2581 ref count , \u2581de allocating \u2581the \u2581Skip list \u2581when \u2581done \u2581using \u2581it"], "bleu": 0.45285867810157737, "rouge_l": 0.5749785775492716}
{"id": 511, "predictions": ["\u2581// \u2581 isSafe Retry \u2581returns \u2581true \u2581if \u2581the \u2581passed \u2581logger \u2581is \u2581a \u2581 functional \u2581// \u2581option ."], "references": ["\u2581// \u2581 isSafe Retry \u2581returns \u2581\" true \", \u2581if \u2581request \u2581is \u2581safe \u2581for \u2581retry \u2581with \u2581the \u2581given \u2581error ."], "bleu": 0.2672767471127568, "rouge_l": 0.4400360685302073}
{"id": 1482, "predictions": ["\u2581// \u2581 All Post Submit s \u2581returns \u2581all \u2581 post ing \u2581 items \u2581in \u2581the \u2581 set \u2581of \u2581 repositories ."], "references": ["\u2581// \u2581 All Post submit s \u2581returns \u2581all \u2581 p row \u2581 post submit \u2581jobs \u2581in \u2581 repos . \u2581// \u2581if \u2581 repos \u2581is \u2581 empty , \u2581return \u2581all \u2581"], "bleu": 0.2072934247534032, "rouge_l": 0.45607476635514016}
{"id": 1794, "predictions": ["\u2581// \u2581Get Branch Revision \u2581returns \u2581the \u2581revision \u2581of \u2581the \u2581given \u2581revision \u2581of \u2581the \u2581given \u2581// \u2581revision ."], "references": ["\u2581// \u2581Get Branch Revision \u2581returns \u2581 SHA \u2581of \u2581 HEAD \u2581of \u2581a \u2581branch"], "bleu": 0.28433291815307693, "rouge_l": 0.4781634938409854}
{"id": 1475, "predictions": ["\u2581// \u2581Should Run \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 Post submit s \u2581 post ing \u2581 data \u2581is \u2581allowed ."], "references": ["\u2581// \u2581Should Run \u2581determines \u2581if \u2581the \u2581 post submit \u2581should \u2581run \u2581in \u2581response \u2581to \u2581a \u2581// \u2581 set \u2581of \u2581changes . \u2581This \u2581is \u2581evaluated \u2581 laz ily , \u2581if \u2581necessary"], "bleu": 0.10520097091710079, "rouge_l": 0.34746835443037977}
{"id": 1481, "predictions": ["\u2581// \u2581 All Pre submit s \u2581 loads \u2581all \u2581 pre - signed \u2581 items \u2581from \u2581the \u2581 model ."], "references": ["\u2581// \u2581 All Pre submit s \u2581returns \u2581all \u2581 p row \u2581 pre submit \u2581jobs \u2581in \u2581 repos . \u2581// \u2581if \u2581 repos \u2581is \u2581 empty , \u2581return \u2581all \u2581"], "bleu": 0.21433639136453253, "rouge_l": 0.42468354430379746}
{"id": 1975, "predictions": ["\u2581// \u2581 Network Rename \u2581rename s \u2581a \u2581 Cluster ."], "references": ["\u2581// \u2581 Network Rename \u2581rename s \u2581a \u2581network ."], "bleu": 0.6989307622784944, "rouge_l": 0.8501742160278747}
{"id": 1351, "predictions": ["\u2581// \u2581Validate Payload \u2581validates \u2581that \u2581the \u2581payload \u2581is \u2581valid ."], "references": ["\u2581// \u2581Validate Payload \u2581ensures \u2581that \u2581the \u2581request \u2581payload \u2581signature \u2581matches \u2581the \u2581 key ."], "bleu": 0.2009767899728994, "rouge_l": 0.5663129973474801}
{"id": 1144, "predictions": ["\u2581// \u2581Get \u2581takes \u2581 name \u2581of \u2581the \u2581 Fake Resource s , \u2581and \u2581returns \u2581the \u2581corresponding \u2581 doc . , \u2581and \u2581an \u2581error \u2581if \u2581there \u2581is \u2581any ."], "references": ["\u2581// \u2581Get \u2581takes \u2581 name \u2581of \u2581the \u2581 p row Job , \u2581and \u2581returns \u2581the \u2581corresponding \u2581 p row Job \u2581object , \u2581and \u2581an \u2581error \u2581if \u2581there \u2581is \u2581any ."], "bleu": 0.6508100568440572, "rouge_l": 0.7882022471910113}
{"id": 616, "predictions": ["\u2581// \u2581 Step \u2581implements \u2581 Node ."], "references": ["\u2581// \u2581 Step \u2581advance s \u2581the \u2581state \u2581machine \u2581using \u2581the \u2581given \u2581message ."], "bleu": 0.15513171017484098, "rouge_l": 0.3794712286158632}
{"id": 1289, "predictions": ["\u2581// \u2581 Same ID \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581build ."], "references": ["\u2581// \u2581 ProwJob ID \u2581extracts \u2581the \u2581 ProwJob \u2581 identifier \u2581for \u2581the \u2581// \u2581 Jenkins \u2581build \u2581in \u2581order \u2581to \u2581 correlate \u2581the \u2581build \u2581with \u2581// \u2581a \u2581 ProwJob . \u2581If"], "bleu": 0.04775343112354423, "rouge_l": 0.3536231884057971}
{"id": 1313, "predictions": ["\u2581// \u2581 sort Builds \u2581sorts \u2581the \u2581 set \u2581of \u2581strings \u2581in \u2581the \u2581 slice \u2581of \u2581strings ."], "references": ["\u2581// \u2581 sort Builds \u2581converts \u2581all \u2581build \u2581from \u2581str \u2581to \u2581int \u2581and \u2581sorts \u2581all \u2581builds \u2581in \u2581 descending \u2581order \u2581and \u2581// \u2581returns \u2581the \u2581sorted \u2581 slice"], "bleu": 0.15248415234034404, "rouge_l": 0.4033798677443057}
{"id": 1761, "predictions": ["\u2581// \u2581help Provider \u2581returns \u2581a \u2581help \u2581function \u2581for \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581help Provider \u2581provides \u2581information \u2581on \u2581the \u2581plugin"], "bleu": 0.18798317647335086, "rouge_l": 0.39804241435562804}
{"id": 1563, "predictions": ["\u2581// \u2581 Infrastructure Cluster Client \u2581returns \u2581the \u2581 kubernetes \u2581client \u2581 Client"], "references": ["\u2581// \u2581 Infrastructure Cluster Client \u2581returns \u2581a \u2581 Kubernetes \u2581client \u2581for \u2581the \u2581 infrastructure \u2581cluster ."], "bleu": 0.39218053264702657, "rouge_l": 0.6267123287671232}
{"id": 1314, "predictions": ["\u2581// \u2581 GetAll \u2581returns \u2581the \u2581list \u2581of \u2581 Regions \u2581that \u2581are \u2581present \u2581in \u2581the \u2581session ."], "references": ["\u2581// \u2581 GetAll \u2581retrieves \u2581all \u2581regions \u2581from \u2581the \u2581AWS \u2581API"], "bleu": 0.1513851459876605, "rouge_l": 0.32105263157894737}
{"id": 1430, "predictions": ["\u2581// \u2581Get Shuffle d Approve rs \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581 Shuffle rs \u2581in \u2581the \u2581 form"], "references": ["\u2581// \u2581Get Shuffle d Approve rs \u2581shuffle s \u2581the \u2581potential \u2581 approve rs \u2581so \u2581that \u2581we \u2581don ' t \u2581// \u2581always \u2581 suggest \u2581the \u2581same \u2581people ."], "bleu": 0.2229814345910895, "rouge_l": 0.41440217391304346}
{"id": 1601, "predictions": ["\u2581// \u2581default Job Base \u2581sets \u2581default \u2581 config \u2581for \u2581 P row Config ."], "references": ["\u2581// \u2581default Job Base \u2581configure s \u2581common \u2581parameters , \u2581currently \u2581 Agent \u2581and \u2581 Namespace ."], "bleu": 0.2398541654372737, "rouge_l": 0.46112311015118784}
{"id": 1722, "predictions": ["\u2581// \u2581 readJSON \u2581reads \u2581a \u2581 key \u2581from \u2581the \u2581bucket ."], "references": ["\u2581// \u2581reads \u2581specified \u2581JSON \u2581file \u2581in \u2581to \u2581` data `"], "bleu": 0.12605968092174913, "rouge_l": 0.1921259842519685}
{"id": 614, "predictions": ["\u2581// \u2581 Prop os e Conf Change \u2581implements \u2581 Node . Prop os e Conf Change"], "references": ["\u2581// \u2581 Prop os e Conf Change \u2581 propose s \u2581a \u2581 config \u2581change ."], "bleu": 0.4378826865860793, "rouge_l": 0.5840425531914895}
{"id": 1951, "predictions": ["\u2581// \u2581 Image Get Nodes With Image \u2581returns \u2581a \u2581list \u2581of \u2581nodes \u2581that \u2581are \u2581 active \u2581by \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Image Get Nodes With Image \u2581returns \u2581the \u2581addresses \u2581of \u2581 online \u2581nodes \u2581which \u2581already \u2581have \u2581the \u2581image ."], "bleu": 0.4176733805012855, "rouge_l": 0.5615062761506276}
{"id": 677, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581 key \u2581from \u2581the \u2581batch ."], "references": ["\u2581// \u2581 Delete \u2581is \u2581equivalent \u2581of \u2581 Txn . Delete ."], "bleu": 0.23462350320527994, "rouge_l": 0.45454545454545453}
{"id": 486, "predictions": ["\u2581// \u2581de Listening s \u2581a \u2581 v 3 \u2581 Client ."], "references": ["\u2581// \u2581de frag \u2581a \u2581given \u2581endpoint"], "bleu": 0.16108992769687397, "rouge_l": 0.3727087576374745}
{"id": 1341, "predictions": ["\u2581// \u2581 PullRequest Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581pull \u2581request \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 PullRequest Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581plugin \u2581names \u2581to \u2581 handlers \u2581for \u2581the \u2581repo ."], "bleu": 0.5389507919095966, "rouge_l": 0.6821994408201305}
{"id": 1342, "predictions": ["\u2581// \u2581 Review Integrity \u2581returns \u2581the \u2581 contents \u2581of \u2581a \u2581 model ."], "references": ["\u2581// \u2581 Review EventHandlers \u2581returns \u2581a \u2581 map \u2581of \u2581plugin \u2581names \u2581to \u2581 handlers \u2581for \u2581the \u2581repo ."], "bleu": 0.16746459328887509, "rouge_l": 0.5015416238437821}
{"id": 1344, "predictions": ["\u2581// \u2581 Status Validate \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 model ."], "references": ["\u2581// \u2581 Status EventHandlers \u2581returns \u2581a \u2581 map \u2581of \u2581plugin \u2581names \u2581to \u2581 handlers \u2581for \u2581the \u2581repo ."], "bleu": 0.15217389036319548, "rouge_l": 0.5015416238437821}
{"id": 1648, "predictions": ["\u2581// \u2581 New Health \u2581returns \u2581a \u2581new \u2581health - side \u2581 Health"], "references": ["\u2581// \u2581 New Health \u2581creates \u2581a \u2581new \u2581health \u2581request \u2581 multiplexer \u2581and \u2581starts \u2581 serving \u2581the \u2581live ness \u2581endpoint \u2581// \u2581on \u2581the \u2581given \u2581port"], "bleu": 0.14653694526645233, "rouge_l": 0.41924398625429554}
{"id": 1345, "predictions": ["\u2581// \u2581 Push \u2581an \u2581 empty \u2581 push \u2581event \u2581to \u2581the \u2581 model ' s \u2581 model ."], "references": ["\u2581// \u2581 Push EventHandlers \u2581returns \u2581a \u2581 map \u2581of \u2581plugin \u2581names \u2581to \u2581 handlers \u2581for \u2581the \u2581repo ."], "bleu": 0.1552207177944405, "rouge_l": 0.3888888888888889}
{"id": 1503, "predictions": ["\u2581// \u2581 Merge Multiple Profiles \u2581lists \u2581all \u2581profiles \u2581in \u2581the \u2581profile ."], "references": ["\u2581// \u2581 Merge Multiple Profiles \u2581merges \u2581more \u2581than \u2581two \u2581profiles \u2581together . \u2581// \u2581 Merge Multiple Profiles \u2581is \u2581equivalent \u2581to \u2581calling \u2581 Merge Profiles \u2581on \u2581pairs \u2581of \u2581profiles \u2581// \u2581until"], "bleu": 0.09125134314003602, "rouge_l": 0.30942028985507253}
{"id": 1339, "predictions": ["\u2581// \u2581 Issue Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581 handlers \u2581for \u2581a \u2581repository ."], "references": ["\u2581// \u2581 Issue Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581plugin \u2581names \u2581to \u2581 handlers \u2581for \u2581the \u2581repo ."], "bleu": 0.5620639922239585, "rouge_l": 0.7751710654936461}
{"id": 1206, "predictions": ["\u2581// \u2581 New Controller \u2581creates \u2581a \u2581new \u2581 Controller \u2581instance"], "references": ["\u2581// \u2581 New Controller \u2581constructs \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 cri er \u2581 controller ."], "bleu": 0.2358212605511366, "rouge_l": 0.5169491525423728}
{"id": 1097, "predictions": ["\u2581// \u2581Create Review \u2581creates \u2581a \u2581new \u2581 Review \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581Create Review \u2581adds \u2581a \u2581 review \u2581to \u2581a \u2581 PR"], "bleu": 0.1892240568795935, "rouge_l": 0.49061662198391426}
{"id": 1824, "predictions": ["\u2581// \u2581 get Jenkins Jobs \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581jobs \u2581that \u2581have \u2581 set \u2581in \u2581the \u2581 set \u2581of \u2581 items ."], "references": ["\u2581// \u2581 get Jenkins Jobs \u2581returns \u2581all \u2581the \u2581 Jenkins \u2581jobs \u2581for \u2581all \u2581 active \u2581// \u2581 p row jobs \u2581from \u2581the \u2581provided \u2581list . \u2581It \u2581handles \u2581de duplication ."], "bleu": 0.23414279886141412, "rouge_l": 0.429325513196481}
{"id": 363, "predictions": ["\u2581// \u2581 New Raft Logger From Zap Core \u2581creates \u2581a \u2581new \u2581 Raft Logger ."], "references": ["\u2581// \u2581 New Raft Logger From Zap Core \u2581creates \u2581\" raft . Logger \" \u2581from \u2581\" zap . Core \" \u2581// \u2581and \u2581\" zap core . Write Syncer \" ."], "bleu": 0.22440772671729872, "rouge_l": 0.4611683848797251}
{"id": 1911, "predictions": ["\u2581// \u2581 Enter Exclusive \u2581is \u2581used \u2581to \u2581 enter \u2581a \u2581 set \u2581of \u2581 active \u2581 data ."], "references": ["\u2581// \u2581 Enter Exclusive \u2581acquire s \u2581a \u2581lock \u2581on \u2581the \u2581cluster \u2581 db , \u2581so \u2581any \u2581successive \u2581 call \u2581to \u2581// \u2581 Transaction \u2581will \u2581block \u2581until \u2581 Exit Exclusive \u2581has"], "bleu": 0.1185011526180403, "rouge_l": 0.3189542483660131}
{"id": 78, "predictions": ["\u2581// \u2581 Op Get \u2581creates \u2581a \u2581new \u2581operation \u2581operation ."], "references": ["\u2581// \u2581 Op Get \u2581returns \u2581\" get \" \u2581operation \u2581based \u2581on \u2581given \u2581 key \u2581and \u2581operation \u2581options ."], "bleu": 0.17729987371046105, "rouge_l": 0.47550111358574615}
{"id": 1906, "predictions": ["\u2581// \u2581network Load ByName \u2581returns \u2581a \u2581network \u2581instance \u2581from \u2581the \u2581 State ."], "references": ["\u2581// \u2581The \u2581network \u2581structs \u2581and \u2581function s"], "bleu": 0.10571070857151538, "rouge_l": 0.21143847487001732}
{"id": 1048, "predictions": ["\u2581// \u2581 New Simple WithContext \u2581creates \u2581a \u2581new \u2581Simple \u2581 set \u2581of \u2581 middlewares"], "references": ["\u2581// \u2581 New Simple WithContext \u2581creates \u2581a \u2581basic \u2581implementation \u2581of \u2581the \u2581 Worker \u2581interface \u2581// \u2581that \u2581is \u2581back ed \u2581using \u2581just \u2581the \u2581standard \u2581library \u2581and \u2581goroutines ."], "bleu": 0.19881328577564666, "rouge_l": 0.41527987897125573}
{"id": 1956, "predictions": ["\u2581// \u2581 GetUser Tool Version Get \u2581returns \u2581the \u2581 home \u2581version \u2581of \u2581the \u2581 tools \u2581in \u2581the \u2581// \u2581 tools \u2581in \u2581the \u2581system ."], "references": ["\u2581// \u2581 zfs Tool Version Get \u2581returns \u2581the \u2581 Z FS \u2581 tools \u2581version"], "bleu": 0.28200049157537727, "rouge_l": 0.552536231884058}
{"id": 1989, "predictions": ["\u2581// \u2581Get Container Snapshots \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581snapshots \u2581of \u2581the \u2581 container ."], "references": ["\u2581// \u2581Get Container Snapshots \u2581returns \u2581a \u2581list \u2581of \u2581snapshots \u2581for \u2581the \u2581 container"], "bleu": 0.5749089871602278, "rouge_l": 0.8433179723502303}
{"id": 70, "predictions": ["\u2581// \u2581 Schedule \u2581adds \u2581a \u2581job \u2581to \u2581the \u2581 fifo ."], "references": ["\u2581// \u2581 Schedule \u2581 schedules \u2581a \u2581job \u2581that \u2581will \u2581be \u2581 ran \u2581in \u2581 FIFO \u2581order \u2581sequentially ."], "bleu": 0.14337441786709987, "rouge_l": 0.46262188515709646}
{"id": 873, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581the \u2581 Snapshot Snapshot \u2581instance ."], "references": ["\u2581// \u2581 Open \u2581is \u2581a \u2581function \u2581you \u2581can \u2581 call \u2581to \u2581access \u2581the \u2581underlying \u2581snapshot \u2581and \u2581its \u2581// \u2581metadata ."], "bleu": 0.10759110393675154, "rouge_l": 0.3065326633165829}
{"id": 1612, "predictions": ["\u2581// \u2581 Checkout \u2581 checkout s \u2581the \u2581 git \u2581repo ."], "references": ["\u2581// \u2581 Checkout \u2581runs \u2581 git \u2581 checkout ."], "bleu": 0.29502343631964045, "rouge_l": 0.6110183639398998}
{"id": 1799, "predictions": ["\u2581// \u2581 AddFlags \u2581adds \u2581flags \u2581related \u2581to \u2581 Kubernetes \u2581 api \u2581 config \u2581to \u2581the \u2581specified \u2581 FlagSet ."], "references": ["\u2581// \u2581 AddFlags \u2581adds \u2581 kube \u2581client \u2581flags \u2581to \u2581existing \u2581 FlagSet ."], "bleu": 0.25958657290343434, "rouge_l": 0.5821845174973489}
{"id": 690, "predictions": ["\u2581// \u2581 Release \u2581 releases \u2581the \u2581sequence \u2581of \u2581 data \u2581in \u2581the \u2581sequence ."], "references": ["\u2581// \u2581 Release \u2581the \u2581lease d \u2581sequence \u2581to \u2581avoid \u2581was ted \u2581integers . \u2581This \u2581should \u2581be \u2581done \u2581right \u2581// \u2581before \u2581closing \u2581the \u2581associated \u2581 DB . \u2581However \u2581it \u2581is \u2581valid"], "bleu": 0.0642578093873745, "rouge_l": 0.2986013986013986}
{"id": 389, "predictions": ["\u2581// \u2581Keep \u2581returns \u2581the \u2581last \u2581revision \u2581of \u2581the \u2581index \u2581in \u2581the \u2581index ."], "references": ["\u2581// \u2581Keep \u2581finds \u2581all \u2581 revisions \u2581to \u2581be \u2581kept \u2581for \u2581a \u2581 Compaction \u2581at \u2581the \u2581given \u2581rev ."], "bleu": 0.09723045789389204, "rouge_l": 0.25077081192189105}
{"id": 274, "predictions": ["\u2581// \u2581new Revision \u2581creates \u2581a \u2581new \u2581revision \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581clock ."], "references": ["\u2581// \u2581new Revision \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Rev is onal \u2581compact or \u2581that \u2581purge s \u2581// \u2581the \u2581log \u2581older \u2581than \u2581 retention \u2581 revisions \u2581from \u2581the \u2581current \u2581revision"], "bleu": 0.14977184237960275, "rouge_l": 0.3353951890034364}
{"id": 1073, "predictions": ["\u2581// \u2581Add Body \u2581adds \u2581a \u2581 text \u2581 body \u2581to \u2581the \u2581message ."], "references": ["\u2581// \u2581Add Body \u2581the \u2581message \u2581by \u2581receiving \u2581a \u2581 renderer \u2581and \u2581rendering \u2581 data , \u2581first \u2581message \u2581will \u2581be \u2581// \u2581used \u2581as \u2581the \u2581main \u2581message \u2581 Body \u2581rest \u2581of \u2581them"], "bleu": 0.06690764505445929, "rouge_l": 0.3473309608540925}
{"id": 1270, "predictions": ["\u2581// \u2581Get Branch \u2581returns \u2581the \u2581branch \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Branch \u2581returns \u2581the \u2581branch \u2581 config \u2581after \u2581merging \u2581in \u2581any \u2581repo \u2581policies ."], "bleu": 0.3900793834627842, "rouge_l": 0.5809523809523809}
{"id": 1570, "predictions": ["\u2581// \u2581 Receive Event \u2581implements \u2581the \u2581 Receive Event \u2581interface \u2581for \u2581 Multi State ."], "references": ["\u2581// \u2581 Receive Event \u2581will \u2581send \u2581the \u2581event \u2581to \u2581each \u2581individual \u2581state , \u2581and \u2581update \u2581// \u2581them \u2581if \u2581they \u2581change ."], "bleu": 0.166931720783564, "rouge_l": 0.32360742705570295}
{"id": 175, "predictions": ["\u2581// \u2581 New Lease KeepAlive Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 Lease KeepAlive"], "references": ["\u2581// \u2581 New Lease KeepAlive Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lease \u2581keep - alive \" ."], "bleu": 0.4671736677790106, "rouge_l": 0.6190036900369004}
{"id": 1459, "predictions": ["\u2581// \u2581Get \u2581retrieves \u2581a \u2581 key \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581Get \u2581provides \u2581your \u2581read Handler \u2581with \u2581the \u2581 contents \u2581at \u2581 key"], "bleu": 0.16175156313901892, "rouge_l": 0.33983286908078}
{"id": 1205, "predictions": ["\u2581// \u2581 Receive Comment \u2581returns \u2581the \u2581 comment \u2581of \u2581the \u2581 comment \u2581for \u2581the \u2581 comment ."], "references": ["\u2581// \u2581 Receive Comment \u2581adds \u2581matching \u2581comments \u2581to \u2581 InfluxDB"], "bleu": 0.21042990347620458, "rouge_l": 0.3885350318471337}
{"id": 1769, "predictions": ["\u2581// \u2581Parse \u2581a \u2581 Pod Log Artifact \u2581 get \u2581 Artifact \u2581from \u2581a \u2581 Pod Log Artifact"], "references": ["\u2581// \u2581artifact \u2581constructs \u2581an \u2581artifact \u2581handle \u2581for \u2581the \u2581given \u2581job \u2581build"], "bleu": 0.07223943354597204, "rouge_l": 0.07429963459196103}
{"id": 1224, "predictions": ["\u2581// \u2581 Receive Issue Event \u2581 - \u2581returns \u2581 data \u2581for \u2581event \u2581 type ."], "references": ["\u2581// \u2581 Receive Issue Event \u2581adds \u2581issue \u2581events \u2581to \u2581 InfluxDB"], "bleu": 0.31314224813827346, "rouge_l": 0.4747081712062256}
{"id": 1994, "predictions": ["\u2581// \u2581Get ContainerState \u2581retrieves \u2581the \u2581state \u2581of \u2581a \u2581 container"], "references": ["\u2581// \u2581Get ContainerState \u2581returns \u2581a \u2581 ContainerState \u2581entry \u2581for \u2581the \u2581provided \u2581 container \u2581 name"], "bleu": 0.19228435969514687, "rouge_l": 0.46329113924050636}
{"id": 1978, "predictions": ["\u2581// \u2581Get Container \u2581retrieves \u2581the \u2581 container \u2581by \u2581 name ."], "references": ["\u2581// \u2581Get Container \u2581returns \u2581the \u2581 container \u2581entry \u2581for \u2581the \u2581provided \u2581 name"], "bleu": 0.28491283253799404, "rouge_l": 0.6567967698519516}
{"id": 1127, "predictions": ["\u2581// \u2581Get Project Columns \u2581returns \u2581the \u2581 Project Columns \u2581for \u2581the \u2581project ."], "references": ["\u2581// \u2581Get Project Columns \u2581returns \u2581the \u2581list \u2581of \u2581columns \u2581for \u2581a \u2581given \u2581project ."], "bleu": 0.45494972964213315, "rouge_l": 0.6622436670687575}
{"id": 875, "predictions": ["\u2581// \u2581 Suspend \u2581 clear s \u2581the \u2581 set \u2581of \u2581 active \u2581 evaluations ."], "references": ["\u2581// \u2581 notifyAll \u2581is \u2581used \u2581to \u2581 notify \u2581all \u2581the \u2581waiting \u2581verify \u2581futures \u2581// \u2581if \u2581the \u2581 follower \u2581be li eve s \u2581we \u2581are \u2581still \u2581the \u2581leader ."], "bleu": 0.06435667558123334, "rouge_l": 0.2646420824295011}
{"id": 1231, "predictions": ["\u2581// \u2581 Permissions From Level \u2581returns \u2581a \u2581 Permissions \u2581permissions \u2581for \u2581 Permissions ."], "references": ["\u2581// \u2581 Permissions From Level \u2581adapt s \u2581a \u2581repo \u2581permission \u2581level \u2581to \u2581the \u2581// \u2581appropriate \u2581permissions \u2581struct \u2581used \u2581else where"], "bleu": 0.22664603694779173, "rouge_l": 0.39906542056074773}
{"id": 1813, "predictions": ["\u2581// \u2581 GetConfig \u2581returns \u2581the \u2581 config \u2581from \u2581the \u2581 Storage ."], "references": ["\u2581// \u2581 GetConfig \u2581returns \u2581an \u2581existing \u2581if \u2581it \u2581 exists \u2581errors \u2581out \u2581otherwise"], "bleu": 0.27846466558102084, "rouge_l": 0.39713541666666663}
{"id": 959, "predictions": ["\u2581// \u2581generate UUID \u2581generates \u2581a \u2581random \u2581 UUID"], "references": ["\u2581// \u2581generate UUID \u2581is \u2581used \u2581to \u2581generate \u2581a \u2581random \u2581 UUID ."], "bleu": 0.3620679794762826, "rouge_l": 0.6756329113924051}
{"id": 1995, "predictions": ["\u2581// \u2581 Update ContainerState \u2581updates \u2581the \u2581state \u2581of \u2581a \u2581 container"], "references": ["\u2581// \u2581 Update ContainerState \u2581updates \u2581the \u2581 container \u2581to \u2581match \u2581the \u2581requested \u2581state"], "bleu": 0.4885007847039713, "rouge_l": 0.6567967698519516}
{"id": 26, "predictions": ["\u2581// \u2581 add \u2581adds \u2581a \u2581 oldest \u2581item \u2581to \u2581the \u2581 idle s ."], "references": ["\u2581// \u2581 add \u2581adds \u2581an \u2581 inflight \u2581into \u2581 inflight s"], "bleu": 0.27668736912821895, "rouge_l": 0.5723860589812332}
{"id": 1199, "predictions": ["\u2581// \u2581 Record \u2581 - \u2581 Record \u2581a \u2581record \u2581to \u2581the \u2581given \u2581record ."], "references": ["\u2581// \u2581 Record \u2581appends \u2581an \u2581entry \u2581to \u2581the \u2581record log \u2581specified \u2581by \u2581the \u2581pool Key ."], "bleu": 0.18224975425142134, "rouge_l": 0.46112311015118784}
{"id": 1768, "predictions": ["\u2581// \u2581 Push \u2581adds \u2581a \u2581new \u2581 set \u2581of \u2581values \u2581to \u2581the \u2581 InfluxDB \u2581database ."], "references": ["\u2581// \u2581 Push \u2581a \u2581point \u2581to \u2581the \u2581database . \u2581This \u2581appends \u2581to \u2581current \u2581batch point"], "bleu": 0.19923405658137924, "rouge_l": 0.5191489361702127}
{"id": 1982, "predictions": ["\u2581// \u2581 Update Container \u2581updates \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 ETag"], "references": ["\u2581// \u2581 Update Container \u2581updates \u2581the \u2581 container \u2581definition"], "bleu": 0.5956403592718089, "rouge_l": 0.7519260400616331}
{"id": 908, "predictions": ["\u2581// \u2581Add \u2581a \u2581 link \u2581to \u2581the \u2581 Raft"], "references": ["\u2581// \u2581Add Voter \u2581will \u2581 add \u2581the \u2581given \u2581server \u2581to \u2581the \u2581cluster \u2581as \u2581a \u2581 staging \u2581server . \u2581If \u2581the \u2581// \u2581server \u2581is \u2581already \u2581in \u2581the \u2581cluster \u2581as \u2581a \u2581"], "bleu": 0.02737323143902037, "rouge_l": 0.28045977011494255}
{"id": 119, "predictions": ["\u2581// \u2581 fill \u2581applies \u2581the \u2581header \u2581into \u2581the \u2581 headers ."], "references": ["\u2581// \u2581 fill \u2581populate s \u2581 pb . ResponseHeader \u2581using \u2581etcd server \u2581information"], "bleu": 0.19561803044642362, "rouge_l": 0.41049798115746977}
{"id": 1292, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581for \u2581 GET \u2581method \u2581to \u2581 get \u2581the \u2581 Request \u2581 status \u2581of \u2581a \u2581 path ."], "references": ["\u2581// \u2581measure \u2581records \u2581metrics \u2581about \u2581the \u2581provided \u2581method , \u2581 path , \u2581and \u2581 code . \u2581// \u2581start \u2581needs \u2581to \u2581be \u2581recorded \u2581before \u2581doing \u2581the \u2581request ."], "bleu": 0.07643018012947617, "rouge_l": 0.240473061760841}
{"id": 1131, "predictions": ["\u2581// \u2581Create Database Client \u2581creates \u2581a \u2581new \u2581 InfluxDB \u2581instance"], "references": ["\u2581// \u2581Create Database Client \u2581creates \u2581and \u2581connects \u2581a \u2581new \u2581instance \u2581of \u2581an \u2581 InfluxDB \u2581// \u2581It \u2581is \u2581created \u2581based \u2581on \u2581the \u2581fields \u2581 set \u2581in \u2581the \u2581configuration ."], "bleu": 0.09660656269290613, "rouge_l": 0.43640699523052473}
{"id": 1226, "predictions": ["\u2581// \u2581 FileUpload WithMetadata \u2581is \u2581a \u2581wrapper \u2581function \u2581that \u2581returns \u2581a \u2581 Upload Func \u2581that \u2581// \u2581writes \u2581the \u2581given \u2581file \u2581 name \u2581to \u2581the \u2581given \u2581file ."], "references": ["\u2581// \u2581 FileUpload WithMetadata \u2581returns \u2581an \u2581 Upload Func \u2581which \u2581copies \u2581all \u2581// \u2581 data \u2581from \u2581the \u2581file \u2581on \u2581disk \u2581into \u2581 GCS \u2581object \u2581and \u2581also \u2581sets \u2581the \u2581provided \u2581//"], "bleu": 0.17207928299146175, "rouge_l": 0.45185185185185195}
{"id": 1227, "predictions": ["\u2581// \u2581 Data Upload WithMetadata \u2581is \u2581a \u2581 Upload Func \u2581that \u2581sets \u2581the \u2581 data Upload \u2581to \u2581// \u2581be \u2581written \u2581to \u2581the \u2581 data \u2581store ."], "references": ["\u2581// \u2581 Data Upload WithMetadata \u2581returns \u2581an \u2581 Upload Func \u2581which \u2581copies \u2581all \u2581// \u2581 data \u2581from \u2581 src \u2581reader \u2581into \u2581 GCS \u2581and \u2581also \u2581sets \u2581the \u2581provided \u2581metadata \u2581//"], "bleu": 0.2257717662644936, "rouge_l": 0.3878612716763006}
{"id": 1733, "predictions": ["\u2581// \u2581 Writer \u2581returns \u2581a \u2581 WriteCloser \u2581that \u2581will \u2581 write \u2581to \u2581the \u2581 path \u2581of \u2581the \u2581 GCS \u2581 path ."], "references": ["\u2581// \u2581 Writer \u2581returns \u2581a \u2581writer \u2581that \u2581overwrite s \u2581the \u2581 path ."], "bleu": 0.2938250660858313, "rouge_l": 0.5992141453831041}
{"id": 331, "predictions": ["\u2581// \u2581 Term \u2581returns \u2581the \u2581number \u2581of \u2581bits \u2581in \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581 Term \u2581implements \u2581the \u2581 Storage \u2581interface ."], "bleu": 0.19674979811155635, "rouge_l": 0.4699537750385208}
{"id": 1556, "predictions": ["\u2581// \u2581 git Rev Parse \u2581returns \u2581the \u2581 git \u2581 git \u2581 git \u2581 git - parse - parse - parse - parse - git - git - line ."], "references": ["\u2581// \u2581 git Rev Parse \u2581returns \u2581current \u2581commit \u2581from \u2581 HEAD \u2581in \u2581a \u2581 git \u2581tree"], "bleu": 0.20750198923629268, "rouge_l": 0.414027149321267}
{"id": 456, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581a \u2581new \u2581 WAL \u2581and \u2581returns \u2581a \u2581 WAL ."], "references": ["\u2581// \u2581 Open \u2581open s \u2581the \u2581 WAL \u2581at \u2581the \u2581given \u2581snap . \u2581// \u2581The \u2581snap \u2581 SHOULD \u2581have \u2581been \u2581previously \u2581saved \u2581to \u2581the \u2581 WAL , \u2581or \u2581the \u2581following"], "bleu": 0.14029844368590827, "rouge_l": 0.37731958762886597}
{"id": 1139, "predictions": ["\u2581// \u2581 Batch Spec \u2581returns \u2581a \u2581 set \u2581of \u2581 data Spec \u2581for \u2581the \u2581given \u2581 set \u2581of \u2581 refs ."], "references": ["\u2581// \u2581 Batch Spec \u2581initializes \u2581a \u2581 ProwJob Spec \u2581for \u2581a \u2581given \u2581batch \u2581job \u2581and \u2581 ref \u2581spec ."], "bleu": 0.2227227312202058, "rouge_l": 0.555004135649297}
{"id": 1397, "predictions": ["\u2581// \u2581 Acquire \u2581returns \u2581a \u2581resource \u2581from \u2581the \u2581specified \u2581 entity ."], "references": ["\u2581// \u2581public \u2581method \u2581// \u2581 Acquire \u2581 asks \u2581 bo skos \u2581for \u2581a \u2581resource \u2581of \u2581certain \u2581 type \u2581in \u2581certain \u2581state , \u2581and \u2581 set \u2581the \u2581resource \u2581to \u2581dest \u2581state"], "bleu": 0.055140912627813024, "rouge_l": 0.26521739130434785}
{"id": 239, "predictions": ["\u2581// \u2581all Entries \u2581returns \u2581the \u2581list \u2581of \u2581entries \u2581in \u2581the \u2581 raft Log ."], "references": ["\u2581// \u2581all Entries \u2581returns \u2581all \u2581entries \u2581in \u2581the \u2581log ."], "bleu": 0.33887143631861766, "rouge_l": 0.6873239436619719}
{"id": 1644, "predictions": ["\u2581// \u2581handle \u2581handles \u2581a \u2581request \u2581request ."], "references": ["\u2581// \u2581handle \u2581reads \u2581the \u2581request \u2581and \u2581writes \u2581the \u2581response"], "bleu": 0.19740631366145517, "rouge_l": 0.3667334669338677}
{"id": 722, "predictions": ["\u2581// \u2581 Fixed Duration \u2581returns \u2581a \u2581 numeric \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581duration ."], "references": ["\u2581// \u2581 Fixed Duration \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581duration \u2581with \u2581the \u2581// \u2581hours , \u2581minutes , \u2581and \u2581seconds ."], "bleu": 0.4305007396186973, "rouge_l": 0.6795201371036846}
{"id": 575, "predictions": ["\u2581// \u2581 New Remove Dir Command \u2581returns \u2581a \u2581command \u2581to \u2581 remove \u2581a \u2581 Dir Command"], "references": ["\u2581// \u2581 New Remove Dir Command \u2581returns \u2581the \u2581CLI \u2581command \u2581for \u2581\" rmdir \" ."], "bleu": 0.42649937722961534, "rouge_l": 0.5191489361702127}
{"id": 410, "predictions": ["\u2581// \u2581Get Child \u2581returns \u2581a \u2581child \u2581node \u2581of \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Child \u2581function \u2581returns \u2581the \u2581child \u2581node \u2581under \u2581the \u2581directory \u2581node . \u2581// \u2581 On \u2581 success , \u2581it \u2581returns \u2581the \u2581file \u2581node"], "bleu": 0.10306974954353021, "rouge_l": 0.41042893187552554}
{"id": 657, "predictions": ["\u2581// \u2581 add CORS Header \u2581adds \u2581 CORS \u2581header \u2581to \u2581 CORS"], "references": ["\u2581// \u2581 add CORS Header \u2581adds \u2581the \u2581correct \u2581 cors \u2581 headers \u2581given \u2581an \u2581origin"], "bleu": 0.3900793834627842, "rouge_l": 0.5809523809523809}
{"id": 1714, "predictions": ["\u2581// \u2581 set Intersect \u2581returns \u2581the \u2581intersection \u2581of \u2581two \u2581slices ."], "references": ["\u2581// \u2581 set Intersect \u2581removes \u2581any \u2581elements \u2581from \u2581the \u2581first \u2581list \u2581that \u2581are \u2581not \u2581in \u2581the \u2581second , \u2581returning \u2581the \u2581// \u2581new \u2581 set \u2581and \u2581the \u2581removed \u2581elements ."], "bleu": 0.06713662614456299, "rouge_l": 0.27748294162244125}
{"id": 564, "predictions": ["\u2581// \u2581 put Command Func \u2581adds \u2581a \u2581command \u2581to \u2581the \u2581command \u2581and \u2581returns \u2581the \u2581value ."], "references": ["\u2581// \u2581 put Command Func \u2581executes \u2581the \u2581\" put \" \u2581command ."], "bleu": 0.31181814978096556, "rouge_l": 0.5865384615384615}
{"id": 72, "predictions": ["\u2581// \u2581 NewServer \u2581returns \u2581a \u2581new \u2581 Server ."], "references": ["\u2581// \u2581 NewServer \u2581returns \u2581a \u2581new \u2581agent \u2581server ."], "bleu": 0.6606328636027614, "rouge_l": 0.7777777777777778}
{"id": 1552, "predictions": ["\u2581// \u2581 Path For Refs \u2581returns \u2581a \u2581 path \u2581to \u2581a \u2581 path \u2581of \u2581the \u2581 refs \u2581for \u2581the \u2581given \u2581// \u2581 refs ."], "references": ["\u2581// \u2581 Path For Refs \u2581determines \u2581the \u2581full \u2581 path \u2581to \u2581where \u2581// \u2581 refs \u2581should \u2581be \u2581cloned"], "bleu": 0.28859523083492383, "rouge_l": 0.5376602564102564}
{"id": 1238, "predictions": ["\u2581// \u2581 Log Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 workspace ."], "references": ["\u2581// \u2581 Log Status \u2581outputs \u2581current \u2581 status \u2581of \u2581all \u2581resources"], "bleu": 0.35556702356686953, "rouge_l": 0.5922330097087377}
{"id": 359, "predictions": ["\u2581// \u2581 Touch Dir All \u2581 revert s \u2581the \u2581directory \u2581and \u2581directory \u2581 path \u2581to \u2581directory \u2581// \u2581and \u2581returns \u2581directory ."], "references": ["\u2581// \u2581 Touch Dir All \u2581is \u2581similar \u2581to \u2581os . MkdirAll . \u2581It \u2581creates \u2581directories \u2581with \u2581 0700 \u2581permission \u2581if \u2581any \u2581directory \u2581// \u2581does \u2581not \u2581 exists . \u2581 Touch"], "bleu": 0.1725424005679189, "rouge_l": 0.34205607476635513}
{"id": 225, "predictions": ["\u2581// \u2581 set Peer URLs Header \u2581sets \u2581the \u2581 set \u2581of \u2581 headers \u2581for \u2581the \u2581request ."], "references": ["\u2581// \u2581 set Peer URLs Header \u2581reports \u2581local \u2581urls \u2581for \u2581peer \u2581discovery"], "bleu": 0.3381307292971254, "rouge_l": 0.4982497082847141}
{"id": 1701, "predictions": ["\u2581// \u2581 RateLimiter \u2581returns \u2581a \u2581 rate \u2581 limiter ing \u2581instance"], "references": ["\u2581// \u2581 RateLimiter \u2581creates \u2581a \u2581 ratelimit ing \u2581queue \u2581for \u2581a \u2581given \u2581 p row \u2581 controller ."], "bleu": 0.14337441786709987, "rouge_l": 0.3965330444203684}
{"id": 596, "predictions": ["\u2581// \u2581 New Lock SUBSCRIBE r Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Lock Dealer r Command"], "references": ["\u2581// \u2581 New Lock Race r Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lock - race r \u2581runner \" ."], "bleu": 0.24147046134950875, "rouge_l": 0.5058043117744611}
{"id": 1727, "predictions": ["\u2581// \u2581 Load Secrets \u2581 loads \u2581all \u2581 secrets \u2581from \u2581the \u2581 secrets"], "references": ["\u2581// \u2581 Load Secrets \u2581 loads \u2581multiple \u2581paths \u2581of \u2581 secrets \u2581and \u2581 add \u2581them \u2581in \u2581a \u2581 map ."], "bleu": 0.28676081383204916, "rouge_l": 0.525358851674641}
{"id": 103, "predictions": ["\u2581// \u2581is Members Equal \u2581returns \u2581true \u2581if \u2581the \u2581 slice \u2581of \u2581members \u2581is \u2581in \u2581 w ."], "references": ["\u2581// \u2581is Members Equal \u2581checks \u2581whether \u2581two \u2581members \u2581equal \u2581except \u2581 ID \u2581field . \u2581// \u2581The \u2581given \u2581 w mem bs \u2581should \u2581always \u2581 set \u2581 ID \u2581field \u2581to \u2581"], "bleu": 0.11767646173056052, "rouge_l": 0.2837209302325582}
{"id": 102, "predictions": ["\u2581// \u2581wait No Leader \u2581is \u2581used \u2581to \u2581wait \u2581for \u2581a \u2581given \u2581leader ."], "references": ["\u2581// \u2581wait No Leader \u2581waits \u2581until \u2581given \u2581members \u2581lose \u2581leader ."], "bleu": 0.3161487584488943, "rouge_l": 0.5922330097087377}
{"id": 32, "predictions": ["\u2581// \u2581 New Unique Strings Value \u2581creates \u2581a \u2581new \u2581 Unique Strings Value \u2581from \u2581a \u2581string \u2581// \u2581 slice \u2581of \u2581strings ."], "references": ["\u2581// \u2581 New Unique Strings Value \u2581implements \u2581string \u2581 slice \u2581as \u2581\" flag . Value \" \u2581interface . \u2581// \u2581Given \u2581value \u2581is \u2581to \u2581be \u2581separated \u2581by \u2581comma . \u2581// \u2581The"], "bleu": 0.21146701211249547, "rouge_l": 0.37423312883435583}
{"id": 849, "predictions": ["\u2581// \u2581new Net Pipeline \u2581creates \u2581a \u2581new \u2581 net Pipeline \u2581object ."], "references": ["\u2581// \u2581new Net Pipeline \u2581is \u2581used \u2581to \u2581construct \u2581a \u2581 net Pipeline \u2581from \u2581a \u2581given \u2581// \u2581transport \u2581and \u2581connection ."], "bleu": 0.20996714057681126, "rouge_l": 0.538235294117647}
{"id": 1717, "predictions": ["\u2581// \u2581stop per \u2581is \u2581called \u2581when \u2581a \u2581 graceful \u2581shutdown \u2581is \u2581 graceful ly ."], "references": ["\u2581// \u2581stop per \u2581returns \u2581a \u2581channel \u2581that \u2581remains \u2581open \u2581until \u2581an \u2581 interrupt \u2581is \u2581received ."], "bleu": 0.17032825081616246, "rouge_l": 0.44900105152471087}
{"id": 561, "predictions": ["\u2581// \u2581 New Compaction Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 compaction Command ."], "references": ["\u2581// \u2581 New Compaction Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" compaction \" ."], "bleu": 0.4073224091836952, "rouge_l": 0.6168539325842697}
{"id": 1688, "predictions": ["\u2581// \u2581determine Release Note Label \u2581returns \u2581the \u2581 label \u2581of \u2581the \u2581release \u2581object , \u2581// \u2581or \u2581nil \u2581if \u2581the \u2581 body \u2581is \u2581not \u2581found ."], "references": ["\u2581// \u2581determine Release Note Label \u2581returns \u2581the \u2581 label \u2581to \u2581be \u2581added \u2581based \u2581on \u2581the \u2581 contents \u2581of \u2581the \u2581' release - note ' \u2581// \u2581section \u2581of \u2581a \u2581 PR"], "bleu": 0.3279789625792788, "rouge_l": 0.4651026392961877}
{"id": 543, "predictions": ["\u2581// \u2581is Op Func Called \u2581is \u2581a \u2581function \u2581that \u2581returns \u2581true \u2581if \u2581the \u2581operation \u2581is \u2581// \u2581 OR ."], "references": ["\u2581// \u2581Check \u2581if \u2581the \u2581provided \u2581function \u2581is \u2581being \u2581called \u2581in \u2581the \u2581op \u2581options ."], "bleu": 0.10475041522097171, "rouge_l": 0.31154239019407565}
{"id": 897, "predictions": ["\u2581// \u2581 New TCP Transport With Logger \u2581creates \u2581a \u2581new \u2581 Network Transport \u2581with \u2581the \u2581given \u2581 bind \u2581address ."], "references": ["\u2581// \u2581 New TCP Transport With Logger \u2581returns \u2581a \u2581 Network Transport \u2581that \u2581is \u2581built \u2581on \u2581 top \u2581of \u2581// \u2581a \u2581 TCP \u2581streaming \u2581transport \u2581layer , \u2581with \u2581log \u2581output"], "bleu": 0.2538888084100006, "rouge_l": 0.46329113924050636}
{"id": 298, "predictions": ["\u2581// \u2581 dial With Balancer \u2581connects \u2581to \u2581the \u2581 balancer \u2581server \u2581and \u2581returns \u2581the \u2581 picker \u2581// \u2581for \u2581the \u2581 balancer ."], "references": ["\u2581// \u2581 dial With Balancer \u2581 dial s \u2581the \u2581client ' s \u2581current \u2581load \u2581 balanced \u2581 resolver \u2581 group . \u2581The \u2581 scheme \u2581of \u2581the \u2581host \u2581// \u2581of \u2581the"], "bleu": 0.1742988828517692, "rouge_l": 0.37423312883435583}
{"id": 349, "predictions": ["\u2581// \u2581 Is Host sByType \u2581checks \u2581if \u2581host \u2581is \u2581allowed \u2581for \u2581the \u2581given \u2581host"], "references": ["\u2581// \u2581 Is Host Whitelisted \u2581returns \u2581true \u2581if \u2581the \u2581host \u2581is \u2581 whitelisted . \u2581// \u2581If \u2581whitelist \u2581is \u2581 empty , \u2581allow \u2581all ."], "bleu": 0.14750088414337245, "rouge_l": 0.3517298187808896}
{"id": 1193, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581agent \u2581and \u2581 secrets ."], "references": ["\u2581// \u2581 Start \u2581creates \u2581goroutines \u2581to \u2581monitor \u2581the \u2581files \u2581that \u2581contain \u2581the \u2581 secret \u2581value ."], "bleu": 0.14809975431372346, "rouge_l": 0.44309927360774815}
{"id": 1958, "predictions": ["\u2581// \u2581 Identity Pool Volume Create \u2581creates \u2581a \u2581pool \u2581for \u2581a \u2581given \u2581dataset , \u2581// \u2581and \u2581returns \u2581a \u2581 slice \u2581of \u2581 name \u2581of \u2581the \u2581given \u2581dataset , \u2581or \u2581an"], "references": ["\u2581// \u2581 zfs Pool Volume Create \u2581creates \u2581a \u2581 Z FS \u2581dataset \u2581with \u2581a \u2581 set \u2581of \u2581given \u2581properties ."], "bleu": 0.19865160852699823, "rouge_l": 0.4979591836734694}
{"id": 159, "predictions": ["\u2581// \u2581 M end Peer \u2581returns \u2581the \u2581 active \u2581peer \u2581for \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 M end Peer \u2581recover s \u2581the \u2581message \u2581drop ping \u2581behavior \u2581of \u2581the \u2581given \u2581peer ."], "bleu": 0.32235977248679504, "rouge_l": 0.5424901185770752}
{"id": 1755, "predictions": ["\u2581// \u2581 New Job Spec \u2581creates \u2581a \u2581new \u2581job \u2581spec"], "references": ["\u2581// \u2581 New Job Spec \u2581converts \u2581a \u2581 p row api . ProwJob Spec \u2581invocation \u2581into \u2581a \u2581 Job Spec"], "bleu": 0.17653732649977003, "rouge_l": 0.37731958762886597}
{"id": 491, "predictions": ["\u2581// \u2581 decay \u2581the \u2581event \u2581 history ."], "references": ["\u2581// \u2581 addEvent \u2581function \u2581adds \u2581event \u2581into \u2581the \u2581event History"], "bleu": 0.20668251975744228, "rouge_l": 0.43571428571428567}
{"id": 422, "predictions": ["\u2581// \u2581 Stop At \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581 Stop At \u2581stops \u2581mock \u2581server \u2581at \u2581given \u2581index ."], "bleu": 0.3067534346259019, "rouge_l": 0.4093959731543625}
{"id": 1624, "predictions": ["\u2581// \u2581 Place Entry point \u2581creates \u2581a \u2581 container \u2581 container"], "references": ["\u2581// \u2581 Place Entry point \u2581will \u2581copy \u2581 entrypoint \u2581from \u2581the \u2581 entrypoint \u2581image \u2581to \u2581the \u2581 tools \u2581volume"], "bleu": 0.21664849022986635, "rouge_l": 0.44525547445255476}
{"id": 1413, "predictions": ["\u2581// \u2581 Receive Event \u2581sends \u2581a \u2581 status \u2581 ID \u2581to \u2581the \u2581 Bundle d States ."], "references": ["\u2581// \u2581 Receive Event \u2581is \u2581called \u2581when \u2581something \u2581happens \u2581on \u2581an \u2581issue . \u2581The \u2581state \u2581// \u2581for \u2581that \u2581issue \u2581is \u2581updated ."], "bleu": 0.15681001083569376, "rouge_l": 0.25061626951520133}
{"id": 753, "predictions": ["\u2581// \u2581 WaitFor Mark \u2581waits \u2581for \u2581the \u2581given \u2581 mark \u2581to \u2581the \u2581end \u2581of \u2581the \u2581 left ."], "references": ["\u2581// \u2581 WaitFor Mark \u2581waits \u2581until \u2581the \u2581given \u2581index \u2581is \u2581marked \u2581as \u2581done ."], "bleu": 0.28889830842564407, "rouge_l": 0.5115303983228512}
{"id": 893, "predictions": ["\u2581// \u2581 Append Entries \u2581appends \u2581a \u2581 slice \u2581of \u2581 data \u2581to \u2581the \u2581pipeline ."], "references": ["\u2581// \u2581 Append Entries \u2581is \u2581used \u2581to \u2581 add \u2581another \u2581request \u2581to \u2581the \u2581pipeline . \u2581// \u2581The \u2581send \u2581may \u2581block \u2581which \u2581is \u2581an \u2581effective \u2581 form \u2581of \u2581back - pressure"], "bleu": 0.15160987754015437, "rouge_l": 0.37731958762886597}
{"id": 755, "predictions": ["\u2581// \u2581 Decode \u2581decodes \u2581the \u2581 headers \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Decode \u2581decodes \u2581the \u2581header ."], "bleu": 0.43361890903486755, "rouge_l": 0.6944971537001898}
{"id": 1393, "predictions": ["\u2581// \u2581 Write Message \u2581writes \u2581a \u2581message \u2581to \u2581the \u2581client ."], "references": ["\u2581// \u2581 Write Message \u2581adds \u2581 text \u2581to \u2581channel"], "bleu": 0.33180774028439425, "rouge_l": 0.5091819699499166}
{"id": 381, "predictions": ["\u2581// \u2581 Handle Basic \u2581registers \u2581the \u2581HTTP \u2581server \u2581to \u2581serve \u2581the \u2581 handlers \u2581for \u2581the \u2581given \u2581HTTP \u2581server ."], "references": ["\u2581// \u2581 Handle Basic \u2581adds \u2581 handlers \u2581to \u2581a \u2581mux \u2581for \u2581 serving \u2581JSON \u2581etcd \u2581client \u2581requests \u2581// \u2581that \u2581do \u2581not \u2581access \u2581the \u2581 v 2 \u2581store ."], "bleu": 0.1504281456444987, "rouge_l": 0.37019554956169926}
{"id": 650, "predictions": ["\u2581// \u2581Remove Latency \u2581removes \u2581the \u2581 latency \u2581from \u2581the \u2581 BLE \u2581 L 3 \u2581 m"], "references": ["\u2581// \u2581Remove Latency \u2581resets \u2581 latency \u2581configurations ."], "bleu": 0.1702602472176709, "rouge_l": 0.4433139534883721}
{"id": 1499, "predictions": ["\u2581// \u2581 To Message \u2581converts \u2581a \u2581 Periodic \u2581to \u2581a \u2581 protobuf \u2581message ."], "references": ["\u2581// \u2581 To Message \u2581generates \u2581a \u2581 PubSub \u2581 Message \u2581from \u2581a \u2581 Periodic ProwJob Event ."], "bleu": 0.29887948175674806, "rouge_l": 0.5706860706860708}
{"id": 996, "predictions": ["\u2581// \u2581 getSession \u2581returns \u2581the \u2581session \u2581 data \u2581for \u2581the \u2581given \u2581request ."], "references": ["\u2581// \u2581Get \u2581a \u2581session \u2581using \u2581a \u2581request \u2581and \u2581response ."], "bleu": 0.12011055432195765, "rouge_l": 0.3562043795620438}
{"id": 1654, "predictions": ["\u2581// \u2581 filter Sub Pool \u2581removes \u2581a \u2581single \u2581pool \u2581from \u2581the \u2581pool ."], "references": ["\u2581// \u2581 filter Sub pool \u2581filters \u2581 PR s \u2581from \u2581an \u2581initially \u2581identified \u2581sub pool , \u2581returning \u2581the \u2581// \u2581filtered \u2581sub pool . \u2581// \u2581If \u2581the \u2581sub pool \u2581becomes \u2581"], "bleu": 0.08086124506504899, "rouge_l": 0.30391459074733096}
{"id": 660, "predictions": ["\u2581// \u2581release \u2581 releases \u2581the \u2581 pid \u2581from \u2581the \u2581 pid"], "references": ["\u2581// \u2581 Release \u2581deletes \u2581the \u2581 pid \u2581file \u2581and \u2581 releases \u2581our \u2581lock \u2581on \u2581the \u2581directory ."], "bleu": 0.16171157788697413, "rouge_l": 0.4126268320180383}
{"id": 466, "predictions": ["\u2581// \u2581 New URLs Map FromString Map \u2581creates \u2581a \u2581 URLs \u2581 map \u2581from \u2581a \u2581 map \u2581of \u2581strings ."], "references": ["\u2581// \u2581 New URLs Map FromString Map \u2581takes \u2581a \u2581 map \u2581of \u2581strings \u2581and \u2581returns \u2581a \u2581URLs Map . \u2581The \u2581// \u2581string \u2581values \u2581in \u2581the \u2581 map \u2581can \u2581be \u2581multiple"], "bleu": 0.331723767489188, "rouge_l": 0.5018987341772152}
{"id": 2034, "predictions": ["\u2581// \u2581 Has Extension \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581extension \u2581is \u2581 set \u2581in \u2581the \u2581// \u2581 LXD \u2581 controller ."], "references": ["\u2581// \u2581 Has Extension \u2581returns \u2581true \u2581if \u2581the \u2581server \u2581supports \u2581a \u2581given \u2581API \u2581extension"], "bleu": 0.38091370416670794, "rouge_l": 0.5928085519922255}
{"id": 450, "predictions": ["\u2581// \u2581 New Member Update Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Member Update Command ."], "references": ["\u2581// \u2581 New Member Update Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" member \u2581update \" ."], "bleu": 0.4113527157588221, "rouge_l": 0.5424901185770752}
{"id": 242, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581session \u2581and \u2581 remove \u2581the \u2581 TTL \u2581of \u2581the \u2581session ."], "references": ["\u2581// \u2581 Close \u2581 orphans \u2581the \u2581session \u2581and \u2581 revoke s \u2581the \u2581session \u2581lease ."], "bleu": 0.329340597116918, "rouge_l": 0.6489361702127661}
{"id": 220, "predictions": ["\u2581// \u2581 New RoundTripper \u2581creates \u2581a \u2581new \u2581http . RoundTripper \u2581that \u2581will \u2581 write \u2581to \u2581the \u2581// \u2581given \u2581 TLS \u2581 info \u2581and \u2581the \u2581given \u2581timeout ."], "references": ["\u2581// \u2581 New RoundTripper \u2581returns \u2581a \u2581 round Trip per \u2581used \u2581to \u2581send \u2581requests \u2581// \u2581to \u2581 raft http \u2581listener \u2581of \u2581remote \u2581peers ."], "bleu": 0.15224470383400482, "rouge_l": 0.39636127355425604}
{"id": 199, "predictions": ["\u2581// \u2581 Rotate \u2581 consume s \u2581the \u2581 i - th - th \u2581interval \u2581of \u2581the \u2581 Interval \u2581and \u2581returns \u2581the \u2581 left - left \u2581// \u2581corner \u2581of \u2581the \u2581interval"], "references": ["\u2581// \u2581 rotateLeft \u2581moves \u2581 x \u2581so \u2581it \u2581is \u2581 left \u2581of \u2581its \u2581right \u2581child"], "bleu": 0.07261813302549416, "rouge_l": 0.2837209302325582}
{"id": 1642, "predictions": ["\u2581// \u2581 List Directories \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 Coverage \u2581 groups ."], "references": ["\u2581// \u2581 List Directories \u2581gets \u2581a \u2581list \u2581a \u2581sub - directories \u2581that \u2581 contains \u2581source \u2581 code ."], "bleu": 0.232466406738093, "rouge_l": 0.5501002004008017}
{"id": 360, "predictions": ["\u2581// \u2581Create Dir All \u2581creates \u2581a \u2581directory \u2581with \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581Create Dir All \u2581is \u2581similar \u2581to \u2581 Touch Dir All \u2581but \u2581returns \u2581error \u2581// \u2581if \u2581the \u2581 deepest \u2581directory \u2581was \u2581not \u2581 empty ."], "bleu": 0.11008047567984955, "rouge_l": 0.35583333333333333}
{"id": 226, "predictions": ["\u2581// \u2581 add Remote FromRequest \u2581adds \u2581the \u2581 headers \u2581to \u2581the \u2581 Transport er"], "references": ["\u2581// \u2581 add Remote FromRequest \u2581adds \u2581a \u2581remote \u2581peer \u2581according \u2581to \u2581an \u2581http \u2581request \u2581header"], "bleu": 0.3852217506444378, "rouge_l": 0.4797752808988765}
{"id": 1831, "predictions": ["\u2581// \u2581request \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581request"], "references": ["\u2581// \u2581Make \u2581a \u2581request \u2581with \u2581retries . \u2581If \u2581ret \u2581is \u2581not \u2581nil , \u2581unmarshal \u2581the \u2581response \u2581 body \u2581// \u2581into \u2581it . \u2581Returns \u2581an \u2581error \u2581if \u2581the \u2581 exit \u2581"], "bleu": 0.021420711215994048, "rouge_l": 0.23371647509578544}
{"id": 1123, "predictions": ["\u2581// \u2581 List Milestone s \u2581returns \u2581a \u2581list \u2581of \u2581 milestone s \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581 List Milestone s \u2581lists \u2581 milestone s ."], "bleu": 0.32594818888335836, "rouge_l": 0.6777777777777778}
{"id": 443, "predictions": ["\u2581// \u2581open Last \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581last \u2581 write \u2581file ."], "references": ["\u2581// \u2581open Last \u2581open s \u2581the \u2581last \u2581 wal \u2581file \u2581for \u2581read \u2581and \u2581 write ."], "bleu": 0.24170645869639398, "rouge_l": 0.5269978401727862}
{"id": 367, "predictions": ["\u2581// \u2581 New Lock Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 cobra . Command \u2581for \u2581` docker \u2581// \u2581 Lock ` \u2581command"], "references": ["\u2581// \u2581 New Lock Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lock \" ."], "bleu": 0.3145327571557693, "rouge_l": 0.547085201793722}
{"id": 1042, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581a \u2581 key"], "references": ["\u2581// \u2581 Delete \u2581sets \u2581a \u2581header \u2581that \u2581tells \u2581the \u2581browser \u2581to \u2581 remove \u2581the \u2581cookie \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.051779677472365566, "rouge_l": 0.3276047261009667}
{"id": 166, "predictions": ["\u2581// \u2581 New Lease Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Lease Command"], "references": ["\u2581// \u2581 New Lease Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lease \" ."], "bleu": 0.41232116527739854, "rouge_l": 0.548314606741573}
{"id": 61, "predictions": ["\u2581// \u2581check Quorum Active \u2581returns \u2581true \u2581if \u2581the \u2581 raft \u2581 active \u2581 active \u2581 write \u2581// \u2581is \u2581 active ."], "references": ["\u2581// \u2581check Quorum Active \u2581returns \u2581true \u2581if \u2581the \u2581 quorum \u2581is \u2581 active \u2581from \u2581// \u2581the \u2581 view \u2581of \u2581the \u2581local \u2581 raft \u2581state \u2581machine . \u2581Otherwise , \u2581it \u2581returns"], "bleu": 0.3437288424943083, "rouge_l": 0.5320872274143301}
{"id": 1434, "predictions": ["\u2581// \u2581Add \u2581a \u2581new \u2581 button \u2581to \u2581the \u2581 active \u2581 rs"], "references": ["\u2581// \u2581Add LG TM er \u2581adds \u2581a \u2581new \u2581 LG TM \u2581 Approve r"], "bleu": 0.2023183489495035, "rouge_l": 0.45522388059701485}
{"id": 340, "predictions": ["\u2581// \u2581 New Elect Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 distributor ."], "references": ["\u2581// \u2581 New Elect Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" elect \" ."], "bleu": 0.42332605679461044, "rouge_l": 0.6168539325842697}
{"id": 799, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 data \u2581for \u2581the \u2581 merge Operator ."], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581latest \u2581value \u2581for \u2581the \u2581 merge \u2581operator , \u2581which \u2581is \u2581derived \u2581by \u2581// \u2581applying \u2581the \u2581 merge \u2581function \u2581to \u2581all \u2581the \u2581values \u2581added \u2581so \u2581far ."], "bleu": 0.11750935408113905, "rouge_l": 0.3978260869565217}
{"id": 1029, "predictions": ["\u2581// \u2581 Application \u2581registers \u2581a \u2581 POST \u2581request \u2581to \u2581the \u2581 app ."], "references": ["\u2581// \u2581 ANY \u2581accepts \u2581a \u2581request \u2581across \u2581any \u2581HTTP \u2581method \u2581for \u2581the \u2581specified \u2581 path \u2581// \u2581and \u2581 routes \u2581it \u2581to \u2581the \u2581specified \u2581 Handler ."], "bleu": 0.06915514591064895, "rouge_l": 0.38699444885011897}
{"id": 792, "predictions": ["\u2581// \u2581 New Key Iterator \u2581returns \u2581a \u2581new \u2581 Iterator \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 New Key Iterator \u2581is \u2581just \u2581like \u2581 New Iterator , \u2581but \u2581allows \u2581the \u2581user \u2581to \u2581iterate \u2581over \u2581all \u2581versions \u2581of \u2581a \u2581// \u2581single \u2581 key . \u2581 Internally"], "bleu": 0.1638998067429608, "rouge_l": 0.45337837837837835}
{"id": 578, "predictions": ["\u2581// \u2581del Command Func \u2581removes \u2581the \u2581command \u2581from \u2581the \u2581 cli \u2581command"], "references": ["\u2581// \u2581del Command Func \u2581executes \u2581the \u2581\" del \" \u2581command ."], "bleu": 0.31455601883230705, "rouge_l": 0.5258620689655172}
{"id": 896, "predictions": ["\u2581// \u2581 New TCP Transport \u2581creates \u2581a \u2581new \u2581 Network Transport \u2581with \u2581the \u2581given \u2581 bind \u2581address ."], "references": ["\u2581// \u2581 New TCP Transport \u2581returns \u2581a \u2581 Network Transport \u2581that \u2581is \u2581built \u2581on \u2581 top \u2581of \u2581// \u2581a \u2581 TCP \u2581streaming \u2581transport \u2581layer ."], "bleu": 0.23123394321594656, "rouge_l": 0.49703703703703705}
{"id": 1502, "predictions": ["\u2581// \u2581calculate Blocks \u2581returns \u2581the \u2581 set \u2581of \u2581blocks \u2581for \u2581the \u2581given \u2581block ."], "references": ["\u2581// \u2581calculate Blocks \u2581determines \u2581if \u2581a \u2581 PR \u2581should \u2581be \u2581blocked \u2581and \u2581returns \u2581the \u2581summary \u2581describing \u2581the \u2581block ."], "bleu": 0.1644594579903675, "rouge_l": 0.471953578336557}
{"id": 627, "predictions": ["\u2581// \u2581Must Sync \u2581returns \u2581a \u2581bool \u2581indicating \u2581whether \u2581the \u2581given \u2581 data \u2581has \u2581been \u2581// \u2581 set ."], "references": ["\u2581// \u2581Must Sync \u2581returns \u2581true \u2581if \u2581the \u2581hard \u2581state \u2581and \u2581count \u2581of \u2581 Raft \u2581entries \u2581indicate \u2581// \u2581that \u2581a \u2581synchronous \u2581 write \u2581to \u2581persistent \u2581storage \u2581is \u2581required ."], "bleu": 0.13242729771854989, "rouge_l": 0.37654320987654327}
{"id": 47, "predictions": ["\u2581// \u2581 r Print \u2581returns \u2581a \u2581 slice \u2581of \u2581nodes \u2581that \u2581are \u2581 left \u2581to \u2581 c ."], "references": ["\u2581// \u2581 r Print \u2581recursively \u2581prints \u2581out \u2581the \u2581nodes \u2581in \u2581the \u2581node \u2581structure ."], "bleu": 0.2061477352156375, "rouge_l": 0.38364779874213834}
{"id": 1411, "predictions": ["\u2581// \u2581Construct SearchQuery \u2581returns \u2581a \u2581 set \u2581of \u2581 login s \u2581for \u2581the \u2581 dashboard"], "references": ["\u2581// \u2581Construct SearchQuery \u2581returns \u2581the \u2581GitHub \u2581 search \u2581query \u2581string \u2581for \u2581 PR s \u2581that \u2581are \u2581open \u2581and \u2581 author ed \u2581// \u2581by \u2581the \u2581user \u2581passed . \u2581The \u2581 search"], "bleu": 0.10257365769548688, "rouge_l": 0.37731958762886597}
{"id": 1334, "predictions": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581configuration \u2581from \u2581the \u2581 config \u2581file ."], "references": ["\u2581// \u2581 Load \u2581attempts \u2581to \u2581load \u2581 config \u2581from \u2581the \u2581 path . \u2581It \u2581returns \u2581an \u2581error \u2581if \u2581either \u2581// \u2581the \u2581file \u2581can ' t \u2581be \u2581read \u2581or \u2581the \u2581configuration"], "bleu": 0.08829899868900752, "rouge_l": 0.3473309608540925}
{"id": 1772, "predictions": ["\u2581// \u2581 makeRequest \u2581returns \u2581a \u2581 functional \u2581instance \u2581of \u2581 User Change Request ."], "references": ["\u2581// \u2581 makeRequest \u2581renders \u2581a \u2581branch \u2581 protection \u2581policy \u2581into \u2581the \u2581corresponding \u2581GitHub \u2581 api \u2581request ."], "bleu": 0.15791058149723844, "rouge_l": 0.4438669438669438}
{"id": 292, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581connection \u2581and \u2581closes \u2581the \u2581connection ."], "references": ["\u2581// \u2581 Close \u2581shut s \u2581down \u2581the \u2581client ' s \u2581etcd \u2581connections ."], "bleu": 0.19561803044642362, "rouge_l": 0.41049798115746977}
{"id": 295, "predictions": ["\u2581// \u2581 Sync \u2581 sync s \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Sync \u2581 synchronize s \u2581client ' s \u2581endpoints \u2581with \u2581the \u2581known \u2581endpoints \u2581from \u2581the \u2581etcd \u2581membership ."], "bleu": 0.1454347700981691, "rouge_l": 0.46974697469746973}
{"id": 1668, "predictions": ["\u2581// \u2581 GetResource \u2581returns \u2581the \u2581resource \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 GetResource \u2581gets \u2581an \u2581existing \u2581resource , \u2581errors \u2581otherwise"], "bleu": 0.2044800736021839, "rouge_l": 0.3696969696969697}
{"id": 448, "predictions": ["\u2581// \u2581 New Member AddCommand \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 Member AddCommand"], "references": ["\u2581// \u2581 New Member AddCommand \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" member \u2581 add \" ."], "bleu": 0.47631009147745074, "rouge_l": 0.6470588235294118}
{"id": 1049, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581 route ."], "references": ["\u2581// \u2581Register \u2581 Handler \u2581with \u2581the \u2581worker"], "bleu": 0.22679164443904004, "rouge_l": 0.4048672566371681}
{"id": 1639, "predictions": ["\u2581// \u2581local Only Main \u2581returns \u2581a \u2581http . ServeMux \u2581that \u2581serves \u2581the \u2581 login \u2581 login \u2581// \u2581to \u2581the \u2581 URL ."], "references": ["\u2581// \u2581local Only Main \u2581 contains \u2581logic \u2581used \u2581only \u2581when \u2581running \u2581locally , \u2581and \u2581is \u2581 mutually \u2581exclusive \u2581with \u2581// \u2581 prod Only Main ."], "bleu": 0.1599487622984531, "rouge_l": 0.37862068965517237}
{"id": 207, "predictions": ["\u2581// \u2581 S tab \u2581returns \u2581the \u2581 set \u2581of \u2581interval \u2581 set"], "references": ["\u2581// \u2581 S tab \u2581returns \u2581a \u2581 slice \u2581with \u2581all \u2581elements \u2581in \u2581the \u2581tree \u2581 intersect ing \u2581the \u2581interval ."], "bleu": 0.22201322071270546, "rouge_l": 0.47843137254901963}
{"id": 1148, "predictions": ["\u2581// \u2581 Merge Method \u2581returns \u2581a \u2581 merge \u2581of PullRequest Merge Type \u2581for \u2581the \u2581given \u2581// \u2581 org ."], "references": ["\u2581// \u2581 Merge Method \u2581returns \u2581the \u2581 merge \u2581method \u2581to \u2581use \u2581for \u2581a \u2581repo . \u2581The \u2581default \u2581of \u2581 merge \u2581is \u2581// \u2581returned \u2581when \u2581not \u2581overridden ."], "bleu": 0.20375996089710502, "rouge_l": 0.4215618521078092}
{"id": 246, "predictions": ["\u2581// \u2581 recv Ack \u2581is \u2581the \u2581same \u2581as \u2581 recv Ack , \u2581but \u2581it \u2581returns \u2581the \u2581 data \u2581// \u2581if \u2581the \u2581message \u2581is \u2581 active ."], "references": ["\u2581// \u2581 recv Ack \u2581notifies \u2581the \u2581 readonly \u2581struct \u2581that \u2581the \u2581 raft \u2581state \u2581machine \u2581received \u2581// \u2581an \u2581 ack now led g ment \u2581of \u2581the \u2581heartbeat \u2581that \u2581attached \u2581with"], "bleu": 0.1466016974524488, "rouge_l": 0.35260115606936415}
{"id": 1953, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 Task \u2581to \u2581the \u2581 group ."], "references": ["\u2581// \u2581Add \u2581a \u2581new \u2581task \u2581to \u2581the \u2581 group , \u2581returning \u2581its \u2581index ."], "bleu": 0.3221542689451684, "rouge_l": 0.6828358208955225}
{"id": 1959, "predictions": ["\u2581// \u2581 GetUser Pool Volume Exists \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581virtual \u2581machine \u2581with \u2581the \u2581given \u2581// \u2581 name ."], "references": ["\u2581// \u2581 zfs Pool Volume Exists \u2581verifies \u2581if \u2581a \u2581specific \u2581 Z FS \u2581pool \u2581or \u2581volume \u2581 exists ."], "bleu": 0.1423071532720465, "rouge_l": 0.40363937138130684}
{"id": 703, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 DB ."], "references": ["\u2581// \u2581 Update \u2581executes \u2581a \u2581function , \u2581creating \u2581and \u2581 managing \u2581a \u2581read - write \u2581transaction \u2581// \u2581for \u2581the \u2581user . \u2581 Error \u2581returned \u2581by \u2581the \u2581function \u2581is \u2581 relay"], "bleu": 0.021946084682305116, "rouge_l": 0.23828125}
{"id": 932, "predictions": ["\u2581// \u2581 getLast Entry \u2581returns \u2581the \u2581last \u2581 recently - recently \u2581read \u2581from \u2581the \u2581state ."], "references": ["\u2581// \u2581 getLast Entry \u2581returns \u2581the \u2581last \u2581index \u2581and \u2581term \u2581in \u2581 s table \u2581storage . \u2581// \u2581Either \u2581from \u2581the \u2581last \u2581log \u2581or \u2581from \u2581the \u2581last \u2581snapshot ."], "bleu": 0.2238361415003991, "rouge_l": 0.4765625}
{"id": 517, "predictions": ["\u2581// \u2581 Send Append Req \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581 group \u2581stats ."], "references": ["\u2581// \u2581 Send Append Req \u2581updates \u2581the \u2581 Server Stats \u2581in \u2581response \u2581to \u2581an \u2581 Append Request \u2581// \u2581being \u2581sent \u2581by \u2581 this \u2581server"], "bleu": 0.18358932876325576, "rouge_l": 0.3517298187808896}
{"id": 138, "predictions": ["\u2581// \u2581allow Method \u2581returns \u2581true \u2581if \u2581the \u2581request \u2581is \u2581a \u2581handler \u2581for \u2581the \u2581given \u2581// \u2581method ."], "references": ["\u2581// \u2581allow Method \u2581verifies \u2581that \u2581the \u2581given \u2581method \u2581is \u2581one \u2581of \u2581the \u2581allowed \u2581methods , \u2581// \u2581and \u2581if \u2581not , \u2581it \u2581writes \u2581an \u2581error \u2581to \u2581 w . \u2581 A"], "bleu": 0.08850689319348173, "rouge_l": 0.3242524916943521}
{"id": 1472, "predictions": ["\u2581// \u2581Should Run \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581constraints \u2581should \u2581be \u2581// \u2581 watched \u2581for \u2581changes ."], "references": ["\u2581// \u2581Should Run \u2581determines \u2581if \u2581we \u2581can \u2581know \u2581for \u2581certain \u2581that \u2581the \u2581job \u2581should \u2581run . \u2581We \u2581can \u2581either \u2581// \u2581know \u2581for \u2581certain \u2581that \u2581the \u2581job \u2581should \u2581or \u2581should \u2581not"], "bleu": 0.07869499290624131, "rouge_l": 0.3242524916943521}
{"id": 271, "predictions": ["\u2581// \u2581 New Election Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command"], "references": ["\u2581// \u2581 New Election Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" election \u2581runner \" ."], "bleu": 0.4024524859104346, "rouge_l": 0.6451233842538191}
{"id": 1000, "predictions": ["\u2581// \u2581 New Message \u2581returns \u2581a \u2581new \u2581 Message \u2581instance ."], "references": ["\u2581// \u2581 New Message \u2581creates \u2581a \u2581new \u2581message . \u2581It \u2581uses \u2581 UTF -8 \u2581and \u2581quoted - printable \u2581encoding \u2581// \u2581by \u2581default ."], "bleu": 0.13042505617210642, "rouge_l": 0.442429737080689}
{"id": 406, "predictions": ["\u2581// \u2581new Dir \u2581creates \u2581a \u2581new \u2581node \u2581with \u2581the \u2581given \u2581 path \u2581and \u2581 path ."], "references": ["\u2581// \u2581new Dir \u2581creates \u2581a \u2581directory"], "bleu": 0.28175950490399515, "rouge_l": 0.49512987012987014}
{"id": 976, "predictions": ["\u2581// \u2581signature Feed er \u2581returns \u2581a \u2581 map \u2581of \u2581the \u2581feed er \u2581 type ."], "references": ["\u2581// \u2581partial Feed er \u2581returns \u2581template \u2581string \u2581for \u2581the \u2581 name \u2581from \u2581` Template Box `. \u2581// \u2581It \u2581should \u2581be \u2581registered \u2581as \u2581 helper \u2581named \u2581` partial Feed er `"], "bleu": 0.0689816059082601, "rouge_l": 0.2515463917525773}
{"id": 27, "predictions": ["\u2581// \u2581 grow Buf \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581will \u2581 grow \u2581the \u2581 items \u2581from \u2581the \u2581// \u2581buffer ."], "references": ["\u2581// \u2581 grow \u2581the \u2581 inflight \u2581buffer \u2581by \u2581 doub ling \u2581up \u2581to \u2581 inflight s . size . \u2581We \u2581 grow \u2581on \u2581 demand \u2581// \u2581instead \u2581of \u2581 pre"], "bleu": 0.15590965886082397, "rouge_l": 0.3040498442367601}
{"id": 2018, "predictions": ["\u2581// \u2581 RawQuery \u2581creates \u2581a \u2581new \u2581response \u2581with \u2581the \u2581given \u2581 data \u2581and \u2581 ETag"], "references": ["\u2581// \u2581 RawQuery \u2581allows \u2581directly \u2581querying \u2581the \u2581 LXD \u2581API \u2581// \u2581// \u2581This \u2581should \u2581only \u2581be \u2581used \u2581by \u2581internal \u2581 LXD \u2581 tools ."], "bleu": 0.09664179237567953, "rouge_l": 0.2953995157384988}
{"id": 1879, "predictions": ["\u2581// \u2581 Title \u2581returns \u2581a \u2581 title \u2581of \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Title \u2581is \u2581the \u2581string \u2581to \u2581use \u2581as \u2581the \u2581 github \u2581issue \u2581 title ."], "bleu": 0.15914354289598118, "rouge_l": 0.36924939467312345}
{"id": 1120, "predictions": ["\u2581// \u2581 List Collaborator s \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 collaborator s \u2581in \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581 List Collaborator s \u2581lists \u2581the \u2581 collaborator s ."], "bleu": 0.33380800216772966, "rouge_l": 0.648936170212766}
{"id": 1419, "predictions": ["\u2581// \u2581 New FromCache \u2581returns \u2581a \u2581new \u2581 RoundTripper \u2581that \u2581uses \u2581the \u2581given \u2581cache \u2581// \u2581and \u2581cache ."], "references": ["\u2581// \u2581 New FromCache \u2581creates \u2581a \u2581GitHub \u2581cache \u2581 RoundTripper \u2581that \u2581is \u2581back ed \u2581by \u2581the \u2581// \u2581specified \u2581http cache . Cache \u2581implementation ."], "bleu": 0.20506076234468745, "rouge_l": 0.510654490106545}
{"id": 909, "predictions": ["\u2581// \u2581Remove Server \u2581removes \u2581a \u2581 set \u2581of \u2581 Raft \u2581 data \u2581from \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581Remove Server \u2581will \u2581 remove \u2581the \u2581given \u2581server \u2581from \u2581the \u2581cluster . \u2581If \u2581the \u2581current \u2581// \u2581leader \u2581is \u2581being \u2581removed , \u2581it \u2581will \u2581cause \u2581a \u2581new \u2581 election \u2581to"], "bleu": 0.08456327316211384, "rouge_l": 0.2837209302325582}
{"id": 348, "predictions": ["\u2581// \u2581 Origin Allowed \u2581checks \u2581if \u2581the \u2581origin \u2581is \u2581allowed \u2581to \u2581be \u2581used"], "references": ["\u2581// \u2581 Origin Allowed \u2581determines \u2581whether \u2581the \u2581server \u2581will \u2581allow \u2581a \u2581given \u2581 CORS \u2581origin . \u2581// \u2581If \u2581 CORS \u2581is \u2581 empty , \u2581allow \u2581all ."], "bleu": 0.1018502800855832, "rouge_l": 0.3292212798766383}
{"id": 1545, "predictions": ["\u2581// \u2581 Trigger For \u2581returns \u2581a \u2581 trigger \u2581that \u2581matches \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581 Trigger For \u2581finds \u2581the \u2581 Trigger \u2581for \u2581a \u2581repo , \u2581if \u2581one \u2581 exists \u2581// \u2581a \u2581 trigger \u2581can \u2581be \u2581listed \u2581for \u2581the \u2581repo \u2581itself \u2581or \u2581for \u2581the"], "bleu": 0.11910916223801053, "rouge_l": 0.3353951890034364}
{"id": 508, "predictions": ["\u2581// \u2581 Join Cluster \u2581is \u2581a \u2581convenience \u2581method \u2581to \u2581create \u2581a \u2581new \u2581 join \u2581cluster ."], "references": ["\u2581// \u2581 Join Cluster \u2581will \u2581 connect \u2581to \u2581the \u2581discovery \u2581service \u2581at \u2581the \u2581given \u2581 url , \u2581and \u2581// \u2581register \u2581the \u2581server \u2581represented \u2581by \u2581the \u2581given \u2581 id \u2581and \u2581"], "bleu": 0.0970783975836776, "rouge_l": 0.24729729729729732}
{"id": 1085, "predictions": ["\u2581// \u2581 getLabels From RE Matches \u2581returns \u2581a \u2581list \u2581of \u2581 label \u2581names \u2581from \u2581the \u2581 slice \u2581of \u2581strings ."], "references": ["\u2581// \u2581Get \u2581 Labels \u2581from \u2581 Regexp \u2581matches"], "bleu": 0.07681104116622756, "rouge_l": 0.3096446700507614}
{"id": 1641, "predictions": ["\u2581// \u2581 Subset \u2581returns \u2581a \u2581list \u2581of \u2581 Coverage \u2581 items \u2581in \u2581the \u2581given \u2581 group ."], "references": ["\u2581// \u2581 Subset \u2581returns \u2581the \u2581subset \u2581obtained \u2581through \u2581applying \u2581 filter"], "bleu": 0.2186976686325118, "rouge_l": 0.4457978075517661}
{"id": 1280, "predictions": ["\u2581// \u2581determine Timeout \u2581returns \u2581the \u2581timeout \u2581for \u2581the \u2581given \u2581 container ."], "references": ["\u2581// \u2581determine Timeout \u2581decide s \u2581the \u2581timeout \u2581value \u2581used \u2581for \u2581build"], "bleu": 0.23901088824528133, "rouge_l": 0.5258620689655172}
{"id": 983, "predictions": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581 key \u2581in \u2581the \u2581context ."], "references": ["\u2581// \u2581 Value \u2581that \u2581has \u2581previously \u2581stored \u2581on \u2581the \u2581context ."], "bleu": 0.23793665482062618, "rouge_l": 0.49061662198391426}
{"id": 1695, "predictions": ["\u2581// \u2581 GetUser name \u2581retrieves \u2581the \u2581user ' s \u2581 login \u2581 login ."], "references": ["\u2581// \u2581 GetUser name \u2581finds \u2581the \u2581 login \u2581for \u2581each \u2581 token"], "bleu": 0.30130404892785684, "rouge_l": 0.6240409207161125}
{"id": 1590, "predictions": ["\u2581// \u2581 AddFlags \u2581adds \u2581flags \u2581for \u2581the \u2581plugin"], "references": ["\u2581// \u2581 AddFlags \u2581adds \u2581\" state \" \u2581and \u2581\" percentiles \" \u2581to \u2581the \u2581command \u2581help"], "bleu": 0.19473208086431154, "rouge_l": 0.41216216216216217}
{"id": 1709, "predictions": ["\u2581// \u2581 New Single Default Repo Path Builder \u2581creates \u2581a \u2581new \u2581 Repo Path Builder ."], "references": ["\u2581// \u2581 New Single Default Repo Path Builder \u2581returns \u2581a \u2581builder \u2581that \u2581handles \u2581the \u2581legacy \u2581 path \u2581// \u2581encoding \u2581where \u2581a \u2581 path \u2581will \u2581contain \u2581 org \u2581and \u2581repo \u2581for"], "bleu": 0.21024625528449747, "rouge_l": 0.41216216216216217}
{"id": 1739, "predictions": ["\u2581// \u2581Check Flags \u2581checks \u2581if \u2581the \u2581 config \u2581is \u2581valid"], "references": ["\u2581// \u2581Check Flags \u2581looks \u2581for \u2581organization \u2581and \u2581project \u2581flags \u2581to \u2581configure \u2581the \u2581client"], "bleu": 0.1837852585949438, "rouge_l": 0.33983286908078}
{"id": 1837, "predictions": ["\u2581// \u2581state \u2581for \u2581 this \u2581error"], "references": ["\u2581// \u2581convert \u2581to \u2581a \u2581 State Cannot Be Changed \u2581if \u2581appropriate \u2581or \u2581else \u2581return \u2581the \u2581original \u2581error"], "bleu": 0.04199896868947701, "rouge_l": 0.24015748031496065}
{"id": 1905, "predictions": ["\u2581// \u2581do Networks Create \u2581creates \u2581a \u2581 container \u2581with \u2581the \u2581specified \u2581 container"], "references": ["\u2581// \u2581Create \u2581the \u2581network \u2581on \u2581the \u2581system . \u2581The \u2581with Database \u2581flag \u2581is \u2581used \u2581to \u2581decide \u2581// \u2581whether \u2581to \u2581cleanup \u2581the \u2581database \u2581if \u2581an \u2581error \u2581occurs ."], "bleu": 0.03869473870131793, "rouge_l": 0.14109483423284502}
{"id": 1607, "predictions": ["\u2581// \u2581 Error To Status \u2581converts \u2581a \u2581 status \u2581to \u2581a \u2581 status \u2581 code ."], "references": ["\u2581// \u2581 Error To Status \u2581 translate s \u2581error \u2581into \u2581http \u2581 code"], "bleu": 0.32635983266098934, "rouge_l": 0.5622119815668203}
{"id": 672, "predictions": ["\u2581// \u2581 Decode \u2581decodes \u2581the \u2581 headers \u2581from \u2581the \u2581 headers ."], "references": ["\u2581// \u2581Decodes \u2581 h \u2581from \u2581buf ."], "bleu": 0.13065113298388567, "rouge_l": 0.44202898550724634}
{"id": 171, "predictions": ["\u2581// \u2581 New Lease TimeToLive Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Lease"], "references": ["\u2581// \u2581 New Lease TimeToLive Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lease \u2581time to live \" ."], "bleu": 0.33381858677302867, "rouge_l": 0.483647175421209}
{"id": 1169, "predictions": ["\u2581// \u2581 List \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581 active \u2581 active \u2581 items ."], "references": ["\u2581// \u2581 List \u2581reach es \u2581out \u2581to \u2581` deck ` \u2581to \u2581retrieve \u2581the \u2581 ProwJob s \u2581on \u2581the \u2581cluster \u2581via \u2581proxy"], "bleu": 0.12456505785276702, "rouge_l": 0.2638408304498269}
{"id": 1432, "predictions": ["\u2581// \u2581 Intersect Sets Case \u2581returns \u2581the \u2581 set \u2581of \u2581elements \u2581of \u2581two \u2581elements \u2581of \u2581the \u2581given \u2581// \u2581 set \u2581of \u2581strings ."], "references": ["\u2581// \u2581 Intersect Sets Case \u2581runs \u2581the \u2581intersection \u2581between \u2581to \u2581sets . String \u2581in \u2581a \u2581// \u2581case - insensitive \u2581way . \u2581It \u2581returns \u2581the \u2581 name \u2581with \u2581the \u2581case \u2581of"], "bleu": 0.19950846080090498, "rouge_l": 0.3685800604229607}
{"id": 69, "predictions": ["\u2581// \u2581 New FIFO Scheduler \u2581creates \u2581a \u2581new \u2581 FIFO \u2581scheduler ."], "references": ["\u2581// \u2581 New FIFO Scheduler \u2581returns \u2581a \u2581 Scheduler \u2581that \u2581 schedules \u2581jobs \u2581in \u2581 FIFO \u2581// \u2581order \u2581sequentially"], "bleu": 0.2459948317281207, "rouge_l": 0.4959349593495934}
{"id": 462, "predictions": ["\u2581// \u2581 mk Path Depth \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581 path \u2581to \u2581the \u2581given \u2581depth ."], "references": ["\u2581// \u2581 mk Path Depth \u2581makes \u2581a \u2581 path \u2581to \u2581a \u2581 key \u2581that \u2581encodes \u2581its \u2581directory \u2581depth \u2581// \u2581for \u2581fast \u2581directory \u2581listing . \u2581If \u2581a \u2581depth \u2581is \u2581provided ,"], "bleu": 0.18083510101181327, "rouge_l": 0.4315112540192926}
{"id": 764, "predictions": ["\u2581// \u2581 New Skip list \u2581returns \u2581a \u2581Skip list \u2581with \u2581the \u2581given \u2581 size \u2581and \u2581 size ."], "references": ["\u2581// \u2581 New Skip list \u2581makes \u2581a \u2581new \u2581 empty \u2581skip list , \u2581with \u2581a \u2581given \u2581aren a \u2581 size"], "bleu": 0.2834100633992834, "rouge_l": 0.5735042735042736}
{"id": 757, "predictions": ["\u2581// \u2581 key Diff \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581given \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 key Diff \u2581returns \u2581a \u2581suffix \u2581of \u2581new Key \u2581that \u2581is \u2581different \u2581from \u2581 b . base Key ."], "bleu": 0.2428442192252926, "rouge_l": 0.43571428571428567}
{"id": 1908, "predictions": ["\u2581// \u2581 For Local Protected With Prepared Prepared \u2581 loads \u2581the \u2581cluster \u2581 data \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581 For Local Inspection With Prepared Stmts \u2581is \u2581the \u2581same \u2581as \u2581 For Local Inspection \u2581but \u2581it \u2581// \u2581also \u2581prepare s \u2581the \u2581statements \u2581used \u2581in \u2581 auto - generated"], "bleu": 0.1252997134629004, "rouge_l": 0.3588235294117647}
{"id": 1484, "predictions": ["\u2581// \u2581 Clear Compiled Tiny \u2581 clear s \u2581 pre - signed \u2581 pre - signed \u2581 pre - signed \u2581 pre - signed \u2581 style \u2581// \u2581of \u2581the \u2581"], "references": ["\u2581// \u2581 Clear Compiled Regexes \u2581removes \u2581compiled \u2581 regexes \u2581from \u2581the \u2581 pre submit s , \u2581// \u2581useful \u2581for \u2581testing \u2581when \u2581deep \u2581equality \u2581is \u2581needed \u2581between \u2581 pre submit s"], "bleu": 0.16397906895258596, "rouge_l": 0.3}
{"id": 630, "predictions": ["\u2581// \u2581This \u2581function \u2581returns \u2581the \u2581 set \u2581of \u2581signal \u2581 code \u2581that \u2581are \u2581 set \u2581to \u2581the \u2581// \u2581given \u2581signal ."], "references": ["\u2581// \u2581df l Signal \u2581sets \u2581the \u2581given \u2581signal \u2581to \u2581 SIG _ DF L"], "bleu": 0.09449865252803165, "rouge_l": 0.23712342079689017}
{"id": 1766, "predictions": ["\u2581// \u2581 merge Tags \u2581returns \u2581a \u2581 map \u2581of \u2581tags \u2581to \u2581the \u2581tags ."], "references": ["\u2581// \u2581 merge Tags \u2581merges \u2581the \u2581default \u2581tags \u2581with \u2581the \u2581 ext a \u2581tags . \u2581Default \u2581will \u2581be \u2581overridden \u2581if \u2581it \u2581conflicts ."], "bleu": 0.1626503606569206, "rouge_l": 0.41426146010186754}
{"id": 125, "predictions": ["\u2581// \u2581 NewString List \u2581returns \u2581a \u2581new \u2581 Strings Value ."], "references": ["\u2581// \u2581 NewString sValue \u2581implements \u2581string \u2581 slice \u2581as \u2581\" flag . Value \" \u2581interface . \u2581// \u2581Given \u2581value \u2581is \u2581to \u2581be \u2581separated \u2581by \u2581comma ."], "bleu": 0.06235746683221999, "rouge_l": 0.3022295623451693}
{"id": 405, "predictions": ["\u2581// \u2581new KV \u2581creates \u2581a \u2581new \u2581node \u2581with \u2581the \u2581given \u2581 path \u2581and \u2581value ."], "references": ["\u2581// \u2581new KV \u2581creates \u2581a \u2581 Key - Value \u2581pair"], "bleu": 0.31314224813827346, "rouge_l": 0.4979591836734694}
{"id": 1469, "predictions": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 Roles \u2581in \u2581the \u2581 indexer ."], "references": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 ProwJob s \u2581in \u2581the \u2581 indexer \u2581for \u2581a \u2581given \u2581namespace ."], "bleu": 0.4516350043906492, "rouge_l": 0.7357456140350876}
{"id": 1882, "predictions": ["\u2581// \u2581 Queued Jobs \u2581returns \u2581the \u2581jobs \u2581 page ."], "references": ["\u2581// \u2581 Queued Jobs \u2581returns \u2581a \u2581list \u2581of \u2581jobs \u2581that \u2581need \u2581to \u2581be \u2581triggered \u2581// \u2581and \u2581reset \u2581 trigger \u2581in \u2581 jobStatus"], "bleu": 0.14944302010456859, "rouge_l": 0.40978886756238003}
{"id": 910, "predictions": ["\u2581// \u2581 Shutdown \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581 raft \u2581 leadership \u2581for \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581 Shutdown \u2581is \u2581used \u2581to \u2581stop \u2581the \u2581 Raft \u2581background \u2581routine s . \u2581// \u2581This \u2581is \u2581not \u2581a \u2581 graceful \u2581operation . \u2581 Provides \u2581a \u2581future \u2581that \u2581// \u2581can"], "bleu": 0.20779387314535708, "rouge_l": 0.3986928104575163}
{"id": 1900, "predictions": ["\u2581// \u2581 get Pull Commit Hash \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581pull \u2581request \u2581for \u2581the \u2581given \u2581// \u2581 Signed \u2581object ."], "references": ["\u2581// \u2581gets \u2581the \u2581pull \u2581commit \u2581hash \u2581from \u2581metadata"], "bleu": 0.07832899330004497, "rouge_l": 0.21837708830548927}
{"id": 693, "predictions": ["\u2581// \u2581 M map \u2581 - \u2581 get \u2581 data \u2581from \u2581file \u2581 path"], "references": ["\u2581// \u2581 M map \u2581uses \u2581the \u2581 m map \u2581system \u2581 call \u2581to \u2581memory - map \u2581a \u2581file . \u2581If \u2581writable \u2581is \u2581true , \u2581// \u2581memory \u2581 protection \u2581of \u2581the"], "bleu": 0.09329970840207648, "rouge_l": 0.3412587412587413}
{"id": 898, "predictions": ["\u2581// \u2581 New TCP Transport With Config \u2581creates \u2581a \u2581new \u2581 TCP \u2581transport \u2581with \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 New TCP Transport With Config \u2581returns \u2581a \u2581 Network Transport \u2581that \u2581is \u2581built \u2581on \u2581 top \u2581of \u2581// \u2581a \u2581 TCP \u2581streaming \u2581transport \u2581layer , \u2581using \u2581the \u2581given"], "bleu": 0.24213292734848457, "rouge_l": 0.509967845659164}
{"id": 1064, "predictions": ["\u2581// \u2581 Wrap \u2581the \u2581 2 bit \u2581 Handler \u2581for \u2581the \u2581 GET \u2581request ."], "references": ["\u2581// \u2581 Wrap Buff a lo Handler \u2581 wraps \u2581a \u2581buff a lo . Handler \u2581to \u2581// \u2581standard \u2581http . Handler"], "bleu": 0.11803855176119747, "rouge_l": 0.32360742705570295}
{"id": 1056, "predictions": ["\u2581// \u2581 Alias \u2581creates \u2581an \u2581 route Info \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Alias \u2581 path \u2581patterns \u2581to \u2581the \u2581 this \u2581 route . \u2581This \u2581is \u2581not \u2581the \u2581// \u2581same \u2581as \u2581a \u2581redirect ."], "bleu": 0.11384339562526971, "rouge_l": 0.3624787775891341}
{"id": 1626, "predictions": ["\u2581// \u2581 Client \u2581returns \u2581a \u2581client \u2581for \u2581the \u2581 Kubernetes \u2581 Kubernetes \u2581 Kubernetes \u2581client"], "references": ["\u2581// \u2581 Client \u2581returns \u2581a \u2581 Kubernetes \u2581client ."], "bleu": 0.38351936242338275, "rouge_l": 0.698140200286123}
{"id": 754, "predictions": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581header \u2581into \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581header ."], "bleu": 0.44710186192584195, "rouge_l": 0.7400346620450605}
{"id": 1621, "predictions": ["\u2581// \u2581clone Env \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 set \u2581of \u2581 env \u2581variables ."], "references": ["\u2581// \u2581clone Env \u2581encodes \u2581clone refs \u2581 Options \u2581into \u2581 json \u2581and \u2581puts \u2581it \u2581into \u2581an \u2581environment \u2581variable"], "bleu": 0.13872223312687962, "rouge_l": 0.2981427174975562}
{"id": 1185, "predictions": ["\u2581// \u2581 Suggest Code Change \u2581returns \u2581the \u2581 code \u2581of \u2581a \u2581 code \u2581for \u2581a \u2581 code \u2581// \u2581 Change ."], "references": ["\u2581// \u2581 Suggest Code Change \u2581returns \u2581 code \u2581 suggestions \u2581for \u2581a \u2581given \u2581 lint . Problem \u2581// \u2581Returns \u2581 empty \u2581string \u2581if \u2581no \u2581 suggestion \u2581can \u2581be \u2581given"], "bleu": 0.2374149600595278, "rouge_l": 0.544295729764181}
{"id": 643, "predictions": ["\u2581// \u2581 Recovery \u2581implements \u2581the \u2581 Recovery \u2581interface ."], "references": ["\u2581// \u2581 Recovery \u2581recover s \u2581the \u2581store \u2581system \u2581from \u2581a \u2581static \u2581state \u2581// \u2581It \u2581needs \u2581to \u2581recover \u2581the \u2581parent \u2581field \u2581of \u2581the \u2581nodes . \u2581// \u2581It \u2581needs \u2581to \u2581delete \u2581the"], "bleu": 0.028191241370329752, "rouge_l": 0.23371647509578544}
{"id": 629, "predictions": ["\u2581// \u2581Need Update \u2581returns \u2581true \u2581if \u2581the \u2581 GRPC \u2581health \u2581check \u2581is \u2581 healthy"], "references": ["\u2581// \u2581Need Update \u2581returns \u2581true \u2581if \u2581all \u2581connections \u2581are \u2581down \u2581or \u2581// \u2581addresses \u2581do \u2581not \u2581include \u2581current \u2581 pinned \u2581address ."], "bleu": 0.25094849418027587, "rouge_l": 0.3860759493670886}
{"id": 1886, "predictions": ["\u2581// \u2581 Update Comments \u2581updates \u2581the \u2581comments \u2581of \u2581a \u2581given \u2581issue ."], "references": ["\u2581// \u2581 Update Comments \u2581 downloads \u2581issue \u2581and \u2581pull - request \u2581comments \u2581and \u2581save \u2581in \u2581 DB"], "bleu": 0.2073681080883528, "rouge_l": 0.3344298245614035}
{"id": 467, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 set \u2581of \u2581 keys ."], "references": ["\u2581// \u2581String \u2581 turn s \u2581URLs Map \u2581into \u2581discovery - formatted \u2581 name - to - URLs \u2581sorted \u2581by \u2581 name ."], "bleu": 0.07812518573867773, "rouge_l": 0.2670753064798599}
{"id": 1414, "predictions": ["\u2581// \u2581 Receive \u2581performs \u2581a \u2581 map \u2581of \u2581 Bundle d States \u2581to \u2581a \u2581 map \u2581of \u2581 Bundle d States ."], "references": ["\u2581// \u2581 ages \u2581return \u2581the \u2581 age \u2581of \u2581each \u2581 active \u2581states"], "bleu": 0.0866852806734874, "rouge_l": 0.31059063136456216}
{"id": 1369, "predictions": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581the \u2581 Text Unmarshaler \u2581interface \u2581for \u2581 Repo Permission ."], "references": ["\u2581// \u2581 Unmarshal Text \u2581validates \u2581the \u2581 text \u2581is \u2581a \u2581valid \u2581string"], "bleu": 0.26332019392396333, "rouge_l": 0.4535315985130111}
{"id": 523, "predictions": ["\u2581// \u2581 getRemote Peer URLs \u2581returns \u2581a \u2581list \u2581of \u2581 raft \u2581cluster \u2581names \u2581for \u2581the \u2581given \u2581// \u2581cluster ."], "references": ["\u2581// \u2581 getRemote Peer URLs \u2581returns \u2581peer \u2581urls \u2581of \u2581remote \u2581members \u2581in \u2581the \u2581cluster . \u2581The \u2581// \u2581returned \u2581list \u2581is \u2581sorted \u2581in \u2581ascending \u2581 l exicographical \u2581order ."], "bleu": 0.22437234310187848, "rouge_l": 0.4113283884018881}
{"id": 1973, "predictions": ["\u2581// \u2581 NetworkConfig Clear \u2581 clear s \u2581the \u2581network \u2581 data \u2581for \u2581the \u2581given \u2581node ."], "references": ["\u2581// \u2581 NetworkConfig Clear \u2581resets \u2581the \u2581 config \u2581of \u2581the \u2581network \u2581with \u2581the \u2581given \u2581 ID \u2581// \u2581associated \u2581with \u2581the \u2581node \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.15128189545314963, "rouge_l": 0.48906705539358597}
{"id": 1365, "predictions": ["\u2581// \u2581server Error \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sends \u2581a \u2581 fatal \u2581error \u2581message \u2581to \u2581the \u2581// \u2581given \u2581error ."], "references": ["\u2581// \u2581Handles \u2581server \u2581errors ."], "bleu": 0.0690889519686715, "rouge_l": 0.25957446808510637}
{"id": 203, "predictions": ["\u2581// \u2581find \u2581returns \u2581true \u2581if \u2581the \u2581interval \u2581is \u2581 empty ."], "references": ["\u2581// \u2581find \u2581the \u2581exact \u2581node \u2581for \u2581a \u2581given \u2581interval"], "bleu": 0.17033186037639278, "rouge_l": 0.4073455759599332}
{"id": 1181, "predictions": ["\u2581// \u2581 Emoji \u2581returns \u2581a \u2581 set \u2581of \u2581 description \u2581of \u2581a \u2581 set \u2581of \u2581 repositories"], "references": ["\u2581// \u2581 sourceURL \u2581returns \u2581the \u2581source \u2581 URL \u2581from \u2581 p row \u2581jobs \u2581repository \u2581reference"], "bleu": 0.11306082351602978, "rouge_l": 0.3160621761658031}
{"id": 1483, "predictions": ["\u2581// \u2581 All Periodic s \u2581returns \u2581all \u2581 periodic \u2581 items \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581 All Periodic s \u2581returns \u2581all \u2581 p row \u2581 periodic \u2581jobs ."], "bleu": 0.5308492544859768, "rouge_l": 0.6747787610619468}
{"id": 1776, "predictions": ["\u2581// \u2581log Lines All \u2581prints \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581 content \u2581to \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581log Lines All \u2581reads \u2581all \u2581of \u2581an \u2581artifact \u2581and \u2581splits \u2581it \u2581into \u2581lines ."], "bleu": 0.19496249079519765, "rouge_l": 0.3605911330049261}
{"id": 798, "predictions": ["\u2581// \u2581Get Merge Operator \u2581returns \u2581a \u2581 merge Operator \u2581for \u2581the \u2581given \u2581 key \u2581and \u2581 set ."], "references": ["\u2581// \u2581Get Merge Operator \u2581creates \u2581a \u2581new \u2581 Merge Operator \u2581for \u2581a \u2581given \u2581 key \u2581and \u2581returns \u2581a \u2581// \u2581pointer \u2581to \u2581it . \u2581It \u2581also \u2581fires \u2581off \u2581a \u2581goroutine \u2581that"], "bleu": 0.19720950806796014, "rouge_l": 0.5183006535947713}
{"id": 417, "predictions": ["\u2581// \u2581num Connected Since \u2581returns \u2581the \u2581number \u2581of \u2581known \u2581 evaluations ."], "references": ["\u2581// \u2581num Connected Since \u2581counts \u2581how \u2581many \u2581members \u2581are \u2581connected \u2581to \u2581the \u2581local \u2581member \u2581// \u2581since \u2581the \u2581given \u2581time ."], "bleu": 0.16149844496324484, "rouge_l": 0.3588235294117647}
{"id": 1507, "predictions": ["\u2581// \u2581 Aggregate Filter \u2581filters \u2581a \u2581 filter \u2581that \u2581filters \u2581against \u2581the \u2581given \u2581filters ."], "references": ["\u2581// \u2581 Aggregate Filter \u2581builds \u2581a \u2581 filter \u2581that \u2581evaluates \u2581the \u2581child \u2581filters \u2581in \u2581order \u2581// \u2581and \u2581returns \u2581the \u2581first \u2581match"], "bleu": 0.27030684647053965, "rouge_l": 0.5393457117595047}
{"id": 702, "predictions": ["\u2581// \u2581 View \u2581is \u2581used \u2581to \u2581 view \u2581a \u2581transaction ."], "references": ["\u2581// \u2581 View \u2581executes \u2581a \u2581function \u2581creating \u2581and \u2581 managing \u2581a \u2581read - only \u2581transaction \u2581for \u2581the \u2581user . \u2581 Error \u2581// \u2581returned \u2581by \u2581the \u2581function \u2581is \u2581 relay ed"], "bleu": 0.04615824793450715, "rouge_l": 0.3151291512915129}
{"id": 1567, "predictions": ["\u2581// \u2581 Receive Event \u2581implements \u2581the \u2581 cron \u2581interface ."], "references": ["\u2581// \u2581 Receive Event \u2581checks \u2581if \u2581the \u2581event \u2581matches \u2581the \u2581entry \u2581 criteria \u2581// \u2581Returns \u2581a \u2581new \u2581 Active State \u2581or \u2581self , \u2581and \u2581true \u2581if \u2581it \u2581changed ."], "bleu": 0.05901800110153381, "rouge_l": 0.32998454404945904}
{"id": 1569, "predictions": ["\u2581// \u2581 Age \u2581returns \u2581the \u2581time \u2581between \u2581the \u2581time \u2581between \u2581the \u2581 age \u2581of \u2581the \u2581 Multi State ."], "references": ["\u2581// \u2581 Age \u2581returns \u2581the \u2581time \u2581since \u2581all \u2581states \u2581have \u2581been \u2581 activated . \u2581// \u2581It \u2581will \u2581panic \u2581if \u2581any \u2581of \u2581the \u2581state \u2581is \u2581not \u2581 active ."], "bleu": 0.2158900494773686, "rouge_l": 0.4524612272420768}
{"id": 1674, "predictions": ["\u2581// \u2581 Canonical Link \u2581returns \u2581the \u2581canonical \u2581 link \u2581 name \u2581for \u2581the \u2581pod Log Artifact"], "references": ["\u2581// \u2581 Canonical Link \u2581returns \u2581a \u2581 link \u2581to \u2581where \u2581pod \u2581logs \u2581are \u2581stream ed"], "bleu": 0.32635983266098934, "rouge_l": 0.5191489361702127}
{"id": 109, "predictions": ["\u2581// \u2581check Leader Transition \u2581is \u2581used \u2581to \u2581check \u2581if \u2581the \u2581given \u2581state \u2581is \u2581valid"], "references": ["\u2581// \u2581check Leader Transition \u2581waits \u2581for \u2581leader \u2581transition , \u2581returning \u2581the \u2581new \u2581leader \u2581 ID ."], "bleu": 0.22320945183180574, "rouge_l": 0.3293736501079914}
{"id": 953, "predictions": ["\u2581// \u2581 persist Vote \u2581 persist s \u2581the \u2581 vote \u2581to \u2581the \u2581 raft ."], "references": ["\u2581// \u2581 persist Vote \u2581is \u2581used \u2581to \u2581 persist \u2581our \u2581 vote \u2581for \u2581 safety ."], "bleu": 0.2950171843779284, "rouge_l": 0.6414300736067298}
{"id": 2045, "predictions": ["\u2581// \u2581modify Check ClusterState For Bootstrap Or Join \u2581checks \u2581if \u2581the \u2581node \u2581is \u2581 join ed ."], "references": ["\u2581// \u2581Check \u2581that \u2581cluster - related \u2581 preconditions \u2581are \u2581met \u2581for \u2581bootstrap ping \u2581or \u2581// \u2581 joining \u2581a \u2581cluster ."], "bleu": 0.07200980387688768, "rouge_l": 0.159825327510917}
{"id": 1119, "predictions": ["\u2581// \u2581 Is Collaborator \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 name \u2581is \u2581 collaborator d ."], "references": ["\u2581// \u2581 Is Collaborator \u2581returns \u2581true \u2581if \u2581the \u2581user \u2581is \u2581a \u2581 collaborator \u2581of \u2581the \u2581repo ."], "bleu": 0.5087662961554847, "rouge_l": 0.7233201581027668}
{"id": 651, "predictions": ["\u2581// \u2581 New Txn Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Txn Command \u2581command"], "references": ["\u2581// \u2581 New Txn Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" txn \" ."], "bleu": 0.42311785416105785, "rouge_l": 0.6}
{"id": 1877, "predictions": ["\u2581// \u2581 top Clusters \u2581returns \u2581a \u2581list \u2581of \u2581 Cluster \u2581objects \u2581that \u2581are \u2581 set \u2581in \u2581the \u2581given \u2581// \u2581 Cluster ."], "references": ["\u2581// \u2581 top Clusters \u2581gets \u2581the \u2581' count ' \u2581most \u2581important \u2581clusters \u2581from \u2581a \u2581 slice \u2581of \u2581clusters \u2581based \u2581on \u2581number \u2581of \u2581build \u2581failures ."], "bleu": 0.1599487622984531, "rouge_l": 0.2944827586206897}
{"id": 1423, "predictions": ["\u2581// \u2581Get Approve rs \u2581returns \u2581a \u2581 map \u2581of \u2581 organizations \u2581that \u2581are \u2581 satisfied"], "references": ["\u2581// \u2581Get Approve rs \u2581returns \u2581a \u2581 map \u2581from \u2581 owners Files \u2581 -> \u2581people \u2581that \u2581are \u2581 approve rs \u2581in \u2581them"], "bleu": 0.38552694047092, "rouge_l": 0.6272493573264781}
{"id": 278, "predictions": ["\u2581// \u2581 vote Resp Resp \u2581returns \u2581the \u2581 type \u2581of \u2581 type \u2581 type ."], "references": ["\u2581// \u2581 vote ResponseType \u2581maps \u2581 vote \u2581and \u2581 pre vote \u2581message \u2581types \u2581to \u2581their \u2581corresponding \u2581responses ."], "bleu": 0.14417261269035855, "rouge_l": 0.3577712609970674}
{"id": 320, "predictions": ["\u2581// \u2581 Sub \u2581returns \u2581a \u2581new \u2581 set \u2581of \u2581 this \u2581 unsafe ."], "references": ["\u2581// \u2581 Sub \u2581removes \u2581all \u2581elements \u2581in \u2581other \u2581from \u2581the \u2581 set"], "bleu": 0.195647514979229, "rouge_l": 0.3900255754475704}
{"id": 1066, "predictions": ["\u2581// \u2581match \u2581extracts \u2581the \u2581import \u2581 data \u2581from \u2581the \u2581import \u2581string ."], "references": ["\u2581// \u2581match \u2581takes \u2581an \u2581import \u2581 path \u2581and \u2581replacement \u2581 map ."], "bleu": 0.17996531271765898, "rouge_l": 0.4166666666666667}
{"id": 48, "predictions": ["\u2581// \u2581 New Lease Renew er Command \u2581creates \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 renew ing \u2581lease ."], "references": ["\u2581// \u2581 New Lease Renew er Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lease - renew er \u2581runner \" ."], "bleu": 0.4413171997921722, "rouge_l": 0.644191714053615}
{"id": 1384, "predictions": ["\u2581// \u2581 NewClient FromFile \u2581returns \u2581a \u2581 Client \u2581from \u2581a \u2581 config \u2581file"], "references": ["\u2581// \u2581 NewClient FromFile \u2581reads \u2581a \u2581 Cluster \u2581object \u2581at \u2581cluster Path \u2581and \u2581returns \u2581an \u2581// \u2581authenticated \u2581client \u2581using \u2581the \u2581 keys \u2581within ."], "bleu": 0.13970104829864816, "rouge_l": 0.35912531539108494}
{"id": 954, "predictions": ["\u2581// \u2581 setState Term \u2581sets \u2581the \u2581current \u2581position \u2581of \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581 setCurrent Term \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581current \u2581term \u2581in \u2581a \u2581 durable \u2581manner ."], "bleu": 0.12101944068845574, "rouge_l": 0.43884892086330934}
{"id": 689, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 byte \u2581sequence ."], "references": ["\u2581// \u2581 Next \u2581would \u2581return \u2581the \u2581next \u2581integer \u2581in \u2581the \u2581sequence , \u2581updating \u2581the \u2581lease \u2581by \u2581running \u2581a \u2581transaction \u2581// \u2581if \u2581needed ."], "bleu": 0.08171106511503953, "rouge_l": 0.3961038961038961}
{"id": 1110, "predictions": ["\u2581// \u2581Get Repo Labels \u2581returns \u2581a \u2581list \u2581of \u2581 repositories \u2581for \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581Get Repo Labels \u2581gets \u2581labels \u2581in \u2581a \u2581repo ."], "bleu": 0.2490328638846773, "rouge_l": 0.4979591836734694}
{"id": 128, "predictions": ["\u2581// \u2581 New Page Writer \u2581returns \u2581a \u2581new \u2581 Page Writer ."], "references": ["\u2581// \u2581 New Page Writer \u2581creates \u2581a \u2581new \u2581 Page Writer . \u2581 page Bytes \u2581is \u2581the \u2581number \u2581of \u2581bytes \u2581// \u2581to \u2581 write \u2581per \u2581 page . \u2581 page"], "bleu": 0.16983788665142113, "rouge_l": 0.4862318840579709}
{"id": 1478, "predictions": ["\u2581// \u2581Get Pre submit \u2581returns \u2581a \u2581 Pre submit \u2581 pre - submit - request \u2581for \u2581a \u2581given \u2581 name \u2581and \u2581job \u2581 name ."], "references": ["\u2581// \u2581Get Pre submit \u2581returns \u2581the \u2581 pre submit \u2581job \u2581for \u2581the \u2581provided \u2581repo \u2581and \u2581job \u2581 name ."], "bleu": 0.34779770928081405, "rouge_l": 0.6524064171122994}
{"id": 1711, "predictions": ["\u2581// \u2581Register Source OrDie \u2581registers \u2581a \u2581 Source \u2581to \u2581 apply \u2581to \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Register Source OrDie \u2581registers \u2581a \u2581source \u2581of \u2581 auto - file d \u2581issues ."], "bleu": 0.34823528327578535, "rouge_l": 0.505699481865285}
{"id": 1806, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581object \u2581with \u2581the \u2581given \u2581object ."], "references": ["\u2581// \u2581 Update \u2581implements \u2581 ClientInterface"], "bleu": 0.21200626759025185, "rouge_l": 0.3727087576374745}
{"id": 408, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581given \u2581value \u2581to \u2581the \u2581 slice \u2581of \u2581 v 2 \u2581 type ."], "references": ["\u2581// \u2581 Write \u2581function \u2581 set \u2581the \u2581value \u2581of \u2581the \u2581node \u2581to \u2581the \u2581given \u2581value . \u2581// \u2581If \u2581the \u2581receiver \u2581node \u2581is \u2581a \u2581directory , \u2581a \u2581\" Not \u2581 A"], "bleu": 0.11498086121723444, "rouge_l": 0.3189542483660131}
{"id": 447, "predictions": ["\u2581// \u2581 New Member Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Member Command"], "references": ["\u2581// \u2581 New Member Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" member \" ."], "bleu": 0.41232116527739854, "rouge_l": 0.548314606741573}
{"id": 420, "predictions": ["\u2581// \u2581 Start Mock s On Network \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581 Start MockServer s On Network \u2581creates \u2581mock \u2581servers \u2581on \u2581either \u2581' tcp ' \u2581or \u2581' unix ' \u2581 sockets ."], "bleu": 0.11662635953831872, "rouge_l": 0.40018744142455487}
{"id": 133, "predictions": ["\u2581// \u2581create Etcd LogFile \u2581creates \u2581a \u2581log \u2581file \u2581for \u2581the \u2581 app ."], "references": ["\u2581// \u2581just \u2581archive \u2581the \u2581first \u2581file"], "bleu": 0.1135935489027116, "rouge_l": 0.22550831792975967}
{"id": 233, "predictions": ["\u2581// \u2581print Internal Raft Request \u2581prints \u2581the \u2581 raft \u2581request \u2581to \u2581the \u2581given \u2581 raft . Entry ."], "references": ["\u2581// \u2581The \u2581 4 \u2581print \u2581function s \u2581below \u2581print \u2581the \u2581entry \u2581 format \u2581based \u2581on \u2581there \u2581types \u2581// \u2581print Internal Raft Request \u2581is \u2581used \u2581to \u2581print \u2581entry \u2581information \u2581for \u2581"], "bleu": 0.14549879798120413, "rouge_l": 0.2790849673202615}
{"id": 1941, "predictions": ["\u2581// \u2581 Image Alias Update \u2581updates \u2581the \u2581 alias \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Alias Update \u2581updates \u2581the \u2581 alias \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.6073332805155234, "rouge_l": 0.7757225433526012}
{"id": 2043, "predictions": ["\u2581// \u2581 Enabled \u2581returns \u2581true \u2581if \u2581the \u2581node \u2581is \u2581 healthy \u2581or \u2581not ."], "references": ["\u2581// \u2581 Enabled \u2581is \u2581a \u2581convenience \u2581that \u2581returns \u2581true \u2581if \u2581 clustering \u2581is \u2581enabled \u2581on \u2581 this \u2581// \u2581node ."], "bleu": 0.1735436815216006, "rouge_l": 0.5130841121495328}
{"id": 1655, "predictions": ["\u2581// \u2581pool \u2581pool Map \u2581returns \u2581a \u2581 map \u2581of \u2581 map \u2581of \u2581labels \u2581to \u2581a \u2581 map \u2581of \u2581 map"], "references": ["\u2581// \u2581pool PR Map \u2581 collect s \u2581all \u2581sub pool \u2581 PR s \u2581into \u2581a \u2581 map \u2581containing \u2581all \u2581 pooled \u2581 PR s ."], "bleu": 0.1196409980175759, "rouge_l": 0.3921428571428572}
{"id": 1180, "predictions": ["\u2581// \u2581the \u2581 meta - level \u2581 meta \u2581 data \u2581for \u2581the \u2581given \u2581 date ."], "references": ["\u2581// \u2581pipeline Meta \u2581builds \u2581the \u2581pipeline \u2581metadata \u2581from \u2581 p row \u2581job \u2581definition"], "bleu": 0.09147827112247602, "rouge_l": 0.21082949308755758}
{"id": 1962, "predictions": ["\u2581// \u2581 Network Node Join \u2581 joins \u2581the \u2581network \u2581 join \u2581to \u2581the \u2581network ."], "references": ["\u2581// \u2581 Network Node Join \u2581adds \u2581a \u2581new \u2581entry \u2581in \u2581the \u2581networks _ nodes \u2581 table . \u2581// \u2581// \u2581It \u2581should \u2581only \u2581be \u2581used \u2581when \u2581a \u2581new \u2581node \u2581 joins"], "bleu": 0.13499452530651476, "rouge_l": 0.3353951890034364}
{"id": 1976, "predictions": ["\u2581// \u2581Get Containers \u2581returns \u2581all \u2581containers \u2581of \u2581the \u2581 container"], "references": ["\u2581// \u2581Get Containers \u2581returns \u2581a \u2581list \u2581of \u2581containers"], "bleu": 0.3816330911371337, "rouge_l": 0.5669144981412639}
{"id": 907, "predictions": ["\u2581// \u2581Verify Leader \u2581returns \u2581the \u2581leader \u2581of \u2581the \u2581leader ."], "references": ["\u2581// \u2581Verify Leader \u2581is \u2581used \u2581to \u2581ensure \u2581the \u2581current \u2581node \u2581is \u2581still \u2581// \u2581the \u2581leader . \u2581This \u2581can \u2581be \u2581done \u2581to \u2581prevent \u2581stale \u2581reads \u2581when \u2581a \u2581// \u2581new \u2581leader \u2581has"], "bleu": 0.04890048684636384, "rouge_l": 0.32105263157894737}
{"id": 1579, "predictions": ["\u2581// \u2581blocks Equal \u2581returns \u2581true \u2581if \u2581the \u2581two \u2581 keys \u2581are \u2581equal ."], "references": ["\u2581// \u2581blocks Equal \u2581returns \u2581true \u2581if \u2581the \u2581blocks \u2581refer \u2581to \u2581the \u2581same \u2581 code , \u2581otherwise \u2581false . \u2581// \u2581It \u2581does \u2581not \u2581care \u2581about \u2581 Count ."], "bleu": 0.18522164806322391, "rouge_l": 0.423284502698535}
{"id": 676, "predictions": ["\u2581// \u2581Set With TTL \u2581sets \u2581the \u2581 TTL \u2581of \u2581the \u2581 write \u2581to \u2581the \u2581batch ."], "references": ["\u2581// \u2581Set With TTL \u2581is \u2581equivalent \u2581of \u2581 Txn . Set With TTL ."], "bleu": 0.24797984721910182, "rouge_l": 0.4723451327433628}
{"id": 22, "predictions": ["\u2581// \u2581check Stream Support \u2581checks \u2581if \u2581the \u2581given \u2581version \u2581is \u2581supported \u2581by \u2581the \u2581// \u2581given \u2581version ."], "references": ["\u2581// \u2581check Stream Support \u2581checks \u2581whether \u2581the \u2581stream \u2581 type \u2581is \u2581supported \u2581in \u2581the \u2581// \u2581given \u2581version ."], "bleu": 0.4792025481385039, "rouge_l": 0.7390493942218079}
{"id": 1444, "predictions": ["\u2581// \u2581 List No Issue Approval s \u2581returns \u2581all \u2581 active \u2581 items \u2581that \u2581have \u2581been \u2581 set \u2581in \u2581the \u2581 set \u2581of \u2581 active \u2581 orgs"], "references": ["\u2581// \u2581 List No Issue Approval s \u2581returns \u2581the \u2581list \u2581of \u2581\" no - issue \" \u2581 approval s"], "bleu": 0.30096870722978436, "rouge_l": 0.49374540103016934}
{"id": 1640, "predictions": ["\u2581// \u2581 summarize \u2581 collect s \u2581all \u2581 items \u2581and \u2581 replicas ."], "references": ["\u2581// \u2581 summarize \u2581 summarize s \u2581all \u2581 items \u2581in \u2581the \u2581 Group \u2581and \u2581stores \u2581the \u2581result"], "bleu": 0.34423505540060934, "rouge_l": 0.5859124866595516}
{"id": 716, "predictions": ["\u2581// \u2581 Open Existing File \u2581open s \u2581the \u2581file \u2581and \u2581returns \u2581the \u2581file ."], "references": ["\u2581// \u2581 Open Existing File \u2581open s \u2581an \u2581existing \u2581file , \u2581errors \u2581if \u2581it \u2581doesn ' t \u2581exist ."], "bleu": 0.35205756292856305, "rouge_l": 0.5309477756286268}
{"id": 464, "predictions": ["\u2581// \u2581prev Key From Put s \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581 KeyValue c . KeyValue s ."], "references": ["\u2581// \u2581prev Key From Put s \u2581gets \u2581the \u2581prev \u2581 key \u2581that \u2581is \u2581being \u2581 put ; \u2581ignores \u2581// \u2581the \u2581 put \u2581action \u2581response ."], "bleu": 0.2666821526639703, "rouge_l": 0.5323636363636364}
{"id": 285, "predictions": ["\u2581// \u2581maybe LastIndex \u2581returns \u2581true \u2581if \u2581the \u2581current \u2581 data \u2581is \u2581in \u2581the \u2581current \u2581 set ."], "references": ["\u2581// \u2581maybe LastIndex \u2581returns \u2581the \u2581last \u2581index \u2581if \u2581it \u2581has \u2581at \u2581least \u2581one \u2581// \u2581 unstable \u2581entry \u2581or \u2581snapshot ."], "bleu": 0.19520460918812307, "rouge_l": 0.37292576419213974}
{"id": 671, "predictions": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581value \u2581into \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode \u2581encodes \u2581 Pointer \u2581into \u2581 byte \u2581buffer ."], "bleu": 0.33428661215627314, "rouge_l": 0.6768377253814147}
{"id": 40, "predictions": ["\u2581// \u2581 Req Timeout \u2581returns \u2581the \u2581timeout \u2581for \u2581the \u2581 Nomad \u2581 Streaming \u2581 Streaming \u2581 Streaming \u2581 Client ."], "references": ["\u2581// \u2581 Req Timeout \u2581returns \u2581timeout \u2581for \u2581request \u2581to \u2581finish ."], "bleu": 0.2591641360720012, "rouge_l": 0.5446428571428572}
{"id": 499, "predictions": ["\u2581// \u2581Remove And Back \u2581removes \u2581the \u2581 oldest \u2581 items \u2581from \u2581the \u2581queue ."], "references": ["\u2581// \u2581 Front And Back \u2581gets \u2581the \u2581front \u2581and \u2581back \u2581elements \u2581in \u2581the \u2581queue \u2581// \u2581We \u2581must \u2581grab \u2581front \u2581and \u2581back \u2581together \u2581with \u2581the \u2581 protection \u2581of \u2581the \u2581lock"], "bleu": 0.06236258883473895, "rouge_l": 0.26255380200860834}
{"id": 1218, "predictions": ["\u2581// \u2581load Review ers \u2581returns \u2581a \u2581list \u2581of \u2581 items \u2581that \u2581are \u2581 set \u2581in \u2581the \u2581 owner \u2581of \u2581the \u2581 owner \u2581of \u2581the \u2581 owner \u2581of \u2581the \u2581// \u2581"], "references": ["\u2581// \u2581load Review ers \u2581returns \u2581all \u2581 reviewer s \u2581and \u2581 approve rs \u2581from \u2581all \u2581 OWNER S \u2581files \u2581that \u2581// \u2581cover \u2581the \u2581provided \u2581filenames ."], "bleu": 0.17572088410223174, "rouge_l": 0.3256227758007117}
{"id": 1202, "predictions": ["\u2581// \u2581 All Records \u2581returns \u2581all \u2581the \u2581log \u2581records \u2581in \u2581the \u2581 history ."], "references": ["\u2581// \u2581 All Records \u2581generates \u2581a \u2581 map \u2581from \u2581pool \u2581 key \u2581 -> \u2581sorted \u2581records \u2581for \u2581the \u2581pool ."], "bleu": 0.1856313221764489, "rouge_l": 0.39906542056074773}
{"id": 404, "predictions": ["\u2581// \u2581 get Journal Write Syncer \u2581returns \u2581the \u2581 write \u2581 sync \u2581 data \u2581for \u2581the \u2581 sync \u2581 sync ."], "references": ["\u2581// \u2581use \u2581stderr \u2581as \u2581fallback"], "bleu": 0.05809665204409193, "rouge_l": 0.08652482269503546}
{"id": 1974, "predictions": ["\u2581// \u2581 Network Delete \u2581deletes \u2581the \u2581cluster \u2581by \u2581 name ."], "references": ["\u2581// \u2581 Network Delete \u2581deletes \u2581the \u2581network \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.5286382260445096, "rouge_l": 0.7388963660834454}
{"id": 1898, "predictions": ["\u2581// \u2581 New Help Agent \u2581returns \u2581a \u2581help \u2581for \u2581 Help Agent ."], "references": ["\u2581// \u2581 New Help Agent \u2581constructs \u2581a \u2581new \u2581 Help Agent ."], "bleu": 0.5445178846139404, "rouge_l": 0.8058124174372522}
{"id": 776, "predictions": ["\u2581// \u2581as Changes \u2581returns \u2581a \u2581list \u2581of \u2581 manifests \u2581in \u2581the \u2581 Manifest Change ."], "references": ["\u2581// \u2581as Changes \u2581returns \u2581a \u2581sequence \u2581of \u2581changes \u2581that \u2581could \u2581be \u2581used \u2581to \u2581recreate \u2581the \u2581 Manifest \u2581in \u2581its \u2581// \u2581present \u2581state ."], "bleu": 0.24176768676198251, "rouge_l": 0.5070656691604322}
{"id": 504, "predictions": ["\u2581// \u2581 Random Strings \u2581returns \u2581a \u2581 slice \u2581of \u2581strings ."], "references": ["\u2581// \u2581 Random Strings \u2581returns \u2581a \u2581 slice \u2581of \u2581randomly \u2581generated \u2581strings ."], "bleu": 0.7230620614807941, "rouge_l": 0.9030955585464334}
{"id": 559, "predictions": ["\u2581// \u2581 Keys \u2581returns \u2581all \u2581the \u2581 keys \u2581in \u2581the \u2581lease ."], "references": ["\u2581// \u2581 Keys \u2581returns \u2581all \u2581the \u2581 keys \u2581attached \u2581to \u2581the \u2581lease ."], "bleu": 0.7003015589741095, "rouge_l": 0.8736979166666665}
{"id": 1303, "predictions": ["\u2581// \u2581Build \u2581is \u2581the \u2581main \u2581implementation \u2581of \u2581Build . Build ."], "references": ["\u2581// \u2581Build \u2581triggers \u2581a \u2581 Jenkins \u2581build \u2581for \u2581the \u2581provided \u2581 ProwJob . \u2581The \u2581 name \u2581of \u2581// \u2581the \u2581 ProwJob \u2581is \u2581going \u2581to \u2581be \u2581used \u2581as \u2581the \u2581 P"], "bleu": 0.03293691238648973, "rouge_l": 0.18007380073800738}
{"id": 890, "predictions": ["\u2581// \u2581 Install Snapshot \u2581is \u2581part \u2581of \u2581the \u2581 raft . FSM \u2581interface ."], "references": ["\u2581// \u2581 Install Snapshot \u2581is \u2581used \u2581to \u2581 push \u2581a \u2581snapshot \u2581down \u2581to \u2581a \u2581 follower . \u2581The \u2581 data \u2581is \u2581read \u2581from \u2581// \u2581the \u2581 ReadCloser \u2581and \u2581stream ed"], "bleu": 0.11959725930229445, "rouge_l": 0.2986013986013986}
{"id": 311, "predictions": ["\u2581// \u2581 unicast Response \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581true \u2581if \u2581the \u2581response \u2581 status \u2581// \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581 unicast Response \u2581sends \u2581a \u2581 watch \u2581response \u2581to \u2581a \u2581specific \u2581 watch \u2581sub stream ."], "bleu": 0.19383418023456658, "rouge_l": 0.47246127366609286}
{"id": 1032, "predictions": ["\u2581// \u2581 New Dialer \u2581returns \u2581a \u2581new \u2581 Dialer ."], "references": ["\u2581// \u2581 New Dialer \u2581returns \u2581a \u2581new \u2581 SMTP \u2581 Dialer . \u2581The \u2581given \u2581parameters \u2581are \u2581used \u2581to \u2581 connect \u2581// \u2581to \u2581the \u2581 SMTP \u2581server ."], "bleu": 0.16507319836055828, "rouge_l": 0.49918166939443537}
{"id": 2, "predictions": ["\u2581// \u2581cmp s \u2581compares \u2581two \u2581 keys \u2581in \u2581 this \u2581 set ."], "references": ["\u2581// \u2581cmp s \u2581returns \u2581a \u2581cmp \u2581list \u2581testing \u2581no \u2581writes \u2581have \u2581happened \u2581past \u2581rev"], "bleu": 0.1646206123358082, "rouge_l": 0.2207478890229192}
{"id": 1038, "predictions": ["\u2581// \u2581new Flash \u2581returns \u2581a \u2581new \u2581 flash \u2581message"], "references": ["\u2581// new Flash \u2581creates \u2581a \u2581new \u2581 Flash \u2581and \u2581 loads \u2581the \u2581session \u2581 data \u2581inside \u2581its \u2581 data ."], "bleu": 0.08563742975831617, "rouge_l": 0.32275132275132273}
{"id": 620, "predictions": ["\u2581// \u2581 Report Snapshot \u2581implements \u2581 Raw Node . Report Snapshot ."], "references": ["\u2581// \u2581 Report Snapshot \u2581reports \u2581the \u2581 status \u2581of \u2581the \u2581sent \u2581snapshot ."], "bleu": 0.28940550821470035, "rouge_l": 0.4765625000000001}
{"id": 1519, "predictions": ["\u2581// \u2581fetch \u2581returns \u2581a \u2581list \u2581of \u2581 active \u2581 ids \u2581that \u2581are \u2581not \u2581supported \u2581by \u2581the \u2581 controller ."], "references": ["\u2581// \u2581projects \u2581returns \u2581the \u2581list \u2581of \u2581accessible \u2581 gcp \u2581projects"], "bleu": 0.10475041522097171, "rouge_l": 0.3652694610778443}
{"id": 865, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581Get \u2581implements \u2581the \u2581 Stable Store \u2581interface ."], "bleu": 0.21834177214239062, "rouge_l": 0.5313588850174217}
{"id": 1467, "predictions": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 Roles \u2581in \u2581the \u2581 indexer ."], "references": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 ProwJob s \u2581in \u2581the \u2581 indexer ."], "bleu": 0.7003015589741095, "rouge_l": 0.8736979166666665}
{"id": 384, "predictions": ["\u2581// \u2581 Peer URLs \u2581returns \u2581the \u2581list \u2581of \u2581 active \u2581peers ."], "references": ["\u2581// \u2581 Peer URLs \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581peer \u2581addresses . \u2581// \u2581The \u2581returned \u2581list \u2581is \u2581sorted \u2581in \u2581ascending \u2581 l exicographical \u2581order ."], "bleu": 0.15318566085761842, "rouge_l": 0.4575000000000001}
{"id": 613, "predictions": ["\u2581// \u2581 Prop os e \u2581implements \u2581 json . Prop os e ."], "references": ["\u2581// \u2581 Prop os e \u2581 propose s \u2581 data \u2581be \u2581appended \u2581to \u2581the \u2581 raft \u2581log ."], "bleu": 0.2559249578032457, "rouge_l": 0.43884892086330934}
{"id": 194, "predictions": ["\u2581// \u2581 GraphNode \u2581checks \u2581if \u2581the \u2581 \u2581interval \u2581is \u2581in \u2581the \u2581 center \u2581node"], "references": ["\u2581// \u2581 successor \u2581is \u2581the \u2581next \u2581in - order \u2581node \u2581in \u2581the \u2581tree"], "bleu": 0.16451929399933107, "rouge_l": 0.3728606356968216}
{"id": 56, "predictions": ["\u2581// \u2581tick Election \u2581removes \u2581the \u2581 election \u2581from \u2581the \u2581 raft ."], "references": ["\u2581// \u2581tick Election \u2581is \u2581run \u2581by \u2581 followers \u2581and \u2581candidates \u2581after \u2581 r . election Timeout ."], "bleu": 0.15160898993031285, "rouge_l": 0.4013157894736842}
{"id": 293, "predictions": ["\u2581// \u2581 Endpoints \u2581returns \u2581the \u2581list \u2581of \u2581endpoints \u2581that \u2581have \u2581been \u2581 set ."], "references": ["\u2581// \u2581 Endpoints \u2581lists \u2581the \u2581registered \u2581endpoints \u2581for \u2581the \u2581client ."], "bleu": 0.1892240568795935, "rouge_l": 0.49061662198391426}
{"id": 455, "predictions": ["\u2581// \u2581member List Command Func \u2581is \u2581a \u2581command \u2581to \u2581 get \u2581the \u2581list \u2581of \u2581members \u2581// \u2581in \u2581the \u2581list \u2581of \u2581 active \u2581 Command ."], "references": ["\u2581// \u2581member List Command Func \u2581executes \u2581the \u2581\" member \u2581list \" \u2581command ."], "bleu": 0.20222027842300222, "rouge_l": 0.4464775846294603}
{"id": 266, "predictions": ["\u2581// \u2581Set Endpoints \u2581sets \u2581the \u2581endpoints \u2581of \u2581the \u2581 Resolver Group ."], "references": ["\u2581// \u2581Set Endpoints \u2581updates \u2581the \u2581endpoints \u2581for \u2581 Resolver Group . \u2581 All \u2581registered \u2581 resolver \u2581are \u2581updated \u2581// \u2581immediately \u2581with \u2581the \u2581new \u2581endpoints ."], "bleu": 0.14732626148274333, "rouge_l": 0.4575000000000001}
{"id": 1868, "predictions": ["\u2581// \u2581 Update \u2581 wraps \u2581 UserData \u2581with \u2581the \u2581given \u2581 UserData , \u2581if \u2581it \u2581is \u2581not \u2581 set , \u2581// \u2581returns \u2581nil ."], "references": ["\u2581// \u2581 Update \u2581updates \u2581existing \u2581 UserData \u2581with \u2581new \u2581 UserData . \u2581// \u2581If \u2581a \u2581 key \u2581as \u2581an \u2581 empty \u2581string , \u2581the \u2581 key \u2581will \u2581be \u2581deleted"], "bleu": 0.14021274190899655, "rouge_l": 0.3710462287104623}
{"id": 1752, "predictions": ["\u2581// \u2581 Labels \u2581returns \u2581the \u2581labels \u2581for \u2581the \u2581 content \u2581of \u2581the \u2581 form \u2581of \u2581the \u2581 form \u2581of \u2581// \u2581 this \u2581 Fla sass Job ."], "references": ["\u2581// \u2581 Labels \u2581returns \u2581the \u2581labels \u2581to \u2581 apply \u2581to \u2581the \u2581issue \u2581created \u2581for \u2581 this \u2581 fla ky \u2581job \u2581on \u2581 github ."], "bleu": 0.27668736912821895, "rouge_l": 0.4756335282651072}
{"id": 353, "predictions": ["\u2581// \u2581 New URLs Value \u2581returns \u2581a \u2581 URLs Value \u2581that \u2581uses \u2581 s \u2581to \u2581 s ."], "references": ["\u2581// \u2581 New URLs Value \u2581implements \u2581\" url . URL \" \u2581 slice \u2581as \u2581flag . Value \u2581interface . \u2581// \u2581Given \u2581value \u2581is \u2581to \u2581be \u2581separated \u2581by \u2581comma ."], "bleu": 0.15381081617519557, "rouge_l": 0.3674698795180723}
{"id": 871, "predictions": ["\u2581// \u2581 Disconnect All \u2581 disconnect s \u2581the \u2581 In mem Transport ."], "references": ["\u2581// \u2581 Disconnect All \u2581is \u2581used \u2581to \u2581 remove \u2581all \u2581 routes \u2581to \u2581peers ."], "bleu": 0.2563595152470555, "rouge_l": 0.49364161849710986}
{"id": 208, "predictions": ["\u2581// \u2581Union \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581union \u2581of \u2581the \u2581 Interval"], "references": ["\u2581// \u2581Union \u2581merges \u2581a \u2581given \u2581interval \u2581tree \u2581into \u2581the \u2581receiver ."], "bleu": 0.12300686288463772, "rouge_l": 0.3164721141374838}
{"id": 903, "predictions": ["\u2581// \u2581 Bootstrap Cluster \u2581creates \u2581a \u2581new \u2581 Future \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 Raft \u2581 controller \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Bootstrap Cluster \u2581is \u2581equivalent \u2581to \u2581non - member \u2581 Bootstrap Cluster \u2581but \u2581can \u2581be \u2581// \u2581called \u2581on \u2581an \u2581un - bootstrapped \u2581 Raft \u2581instance \u2581after \u2581it \u2581has \u2581been"], "bleu": 0.15343848804826304, "rouge_l": 0.35260115606936415}
{"id": 1461, "predictions": ["\u2581// \u2581 New GCS Artifact \u2581creates \u2581a \u2581new \u2581 GCS Artifact \u2581from \u2581a \u2581 json \u2581 URL"], "references": ["\u2581// \u2581 New GCS Artifact \u2581returns \u2581a \u2581new \u2581 GCS Artifact \u2581with \u2581a \u2581given \u2581handle , \u2581canonical \u2581 link , \u2581and \u2581 path \u2581within \u2581the \u2581job"], "bleu": 0.2915451843319523, "rouge_l": 0.582659808963997}
{"id": 1105, "predictions": ["\u2581// \u2581 Delete Ref \u2581removes \u2581a \u2581reference \u2581from \u2581the \u2581current \u2581release ."], "references": ["\u2581// \u2581 Delete Ref \u2581returns \u2581an \u2581error \u2581indicating \u2581if \u2581deletion \u2581of \u2581the \u2581given \u2581 ref \u2581was \u2581successful"], "bleu": 0.19952865177726084, "rouge_l": 0.3344298245614035}
{"id": 852, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581pipeline \u2581and \u2581 close \u2581the \u2581pipeline"], "references": ["\u2581// \u2581 Closed \u2581is \u2581used \u2581to \u2581shutdown \u2581the \u2581pipeline \u2581connection ."], "bleu": 0.18850319022747347, "rouge_l": 0.36363636363636365}
{"id": 1443, "predictions": ["\u2581// \u2581 List Approval s \u2581returns \u2581all \u2581 Approval s \u2581 items \u2581in \u2581the \u2581 Approve rs ."], "references": ["\u2581// \u2581 List Approval s \u2581returns \u2581the \u2581list \u2581of \u2581 approval s"], "bleu": 0.3370129264673147, "rouge_l": 0.5532879818594103}
{"id": 1102, "predictions": ["\u2581// \u2581Get PullRequest \u2581returns \u2581a \u2581pull \u2581request \u2581for \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581Get PullRequest \u2581returns \u2581details \u2581about \u2581the \u2581 PR ."], "bleu": 0.31455601883230705, "rouge_l": 0.5545454545454546}
{"id": 1797, "predictions": ["\u2581// \u2581 AddFlags \u2581adds \u2581the \u2581specified \u2581 subcommands \u2581to \u2581the \u2581 type"], "references": ["\u2581// \u2581 AddFlags \u2581adds \u2581\" no - pull - requests \" \u2581and \u2581\" no - issues \" \u2581to \u2581the \u2581command \u2581help"], "bleu": 0.15711029402245075, "rouge_l": 0.346590909090909}
{"id": 1864, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 Dataset \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581Set \u2581parses \u2581the \u2581flag \u2581value \u2581into \u2581a \u2581 CommaSeparated Strings"], "bleu": 0.1553712569276035, "rouge_l": 0.42302357836338417}
{"id": 1099, "predictions": ["\u2581// \u2581Create Issue Reaction \u2581creates \u2581a \u2581new \u2581 Issue Reaction"], "references": ["\u2581// \u2581Create Issue Reaction \u2581adds \u2581an \u2581 emoji \u2581to \u2581an \u2581issue ."], "bleu": 0.3006425395194706, "rouge_l": 0.44721407624633425}
{"id": 1098, "predictions": ["\u2581// \u2581Create Comment Reaction \u2581creates \u2581a \u2581new \u2581 comment \u2581for \u2581 this \u2581 Automaton"], "references": ["\u2581// \u2581Create Comment Reaction \u2581adds \u2581 emoji \u2581to \u2581a \u2581 comment ."], "bleu": 0.30130404892785684, "rouge_l": 0.5460358056265985}
{"id": 2021, "predictions": ["\u2581// \u2581 Profile To API \u2581converts \u2581the \u2581profile \u2581to \u2581a \u2581profile ."], "references": ["\u2581// \u2581 Profile To API \u2581is \u2581a \u2581convenience \u2581to \u2581convert \u2581a \u2581 Profile \u2581 db \u2581struct \u2581into \u2581// \u2581an \u2581API \u2581profile \u2581struct ."], "bleu": 0.17290407014325965, "rouge_l": 0.4867021276595745}
{"id": 1465, "predictions": ["\u2581// \u2581 getFirst \u2581returns \u2581whether \u2581the \u2581 GCS Artifact \u2581is \u2581valid ."], "references": ["\u2581// \u2581 gzipped \u2581returns \u2581whether \u2581the \u2581file \u2581is \u2581gzip - encoded \u2581in \u2581 GCS"], "bleu": 0.22779746815932336, "rouge_l": 0.5310945273631842}
{"id": 337, "predictions": ["\u2581// \u2581 Available \u2581returns \u2581the \u2581 URL \u2581of \u2581the \u2581 URL \u2581to \u2581 this \u2581peer ."], "references": ["\u2581// \u2581 unreachable \u2581 notices \u2581the \u2581 picker \u2581that \u2581the \u2581given \u2581 url \u2581is \u2581 unreachable , \u2581// \u2581and \u2581it \u2581should \u2581use \u2581other \u2581possible \u2581urls ."], "bleu": 0.07892413670616552, "rouge_l": 0.3652694610778443}
{"id": 1454, "predictions": ["\u2581// \u2581 Contain \u2581returns \u2581a \u2581string \u2581with \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 linkify \u2581transforms \u2581a \u2581string \u2581into \u2581a \u2581markdown \u2581anchor \u2581 link \u2581// \u2581 I \u2581could \u2581not \u2581find \u2581a \u2581proper \u2581 doc , \u2581so \u2581rules \u2581here \u2581a \u2581mostly \u2581 e"], "bleu": 0.0401556890478535, "rouge_l": 0.22101449275362317}
{"id": 1861, "predictions": ["\u2581// \u2581 New Resource \u2581returns \u2581a \u2581new \u2581resource \u2581 type ."], "references": ["\u2581// \u2581 New Resource \u2581creates \u2581a \u2581new \u2581 Bo skos \u2581 Resource ."], "bleu": 0.32372347808478036, "rouge_l": 0.6567967698519516}
{"id": 1075, "predictions": ["\u2581// \u2581Add Attachment \u2581adds \u2581a \u2581new \u2581attachment \u2581to \u2581the \u2581message ."], "references": ["\u2581// Add Attachment \u2581adds \u2581the \u2581attachment \u2581to \u2581the \u2581list \u2581of \u2581 attachments \u2581the \u2581 Message \u2581has ."], "bleu": 0.1570192809078678, "rouge_l": 0.48139797068771134}
{"id": 87, "predictions": ["\u2581// \u2581 New Listener \u2581returns \u2581a \u2581new \u2581 net . Listener \u2581that \u2581 wraps \u2581the \u2581given \u2581address \u2581and \u2581// \u2581 TLS \u2581 info ."], "references": ["\u2581// \u2581 New Listener \u2581creates \u2581a \u2581new \u2581list ner ."], "bleu": 0.16767849550785174, "rouge_l": 0.4447916666666667}
{"id": 174, "predictions": ["\u2581// \u2581lease List Command Func \u2581is \u2581used \u2581to \u2581 get \u2581a \u2581lease - level \u2581command ."], "references": ["\u2581// \u2581lease List Command Func \u2581executes \u2581the \u2581\" lease \u2581list \" \u2581command ."], "bleu": 0.3168900267453786, "rouge_l": 0.4919354838709677}
{"id": 571, "predictions": ["\u2581// \u2581 New Snapshot Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Kubernetes \u2581 Snapshot Command"], "references": ["\u2581// \u2581 New Snapshot Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" snapshot \" ."], "bleu": 0.38538569180303145, "rouge_l": 0.5191489361702127}
{"id": 350, "predictions": ["\u2581// \u2581 Valid s \u2581returns \u2581the \u2581 set \u2581of \u2581strings \u2581in \u2581the \u2581 Selective StringValue ."], "references": ["\u2581// \u2581 Valid s \u2581returns \u2581the \u2581list \u2581of \u2581valid \u2581strings ."], "bleu": 0.3807134866446316, "rouge_l": 0.6896984924623116}
{"id": 1353, "predictions": ["\u2581// \u2581update String \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581true \u2581if \u2581the \u2581string \u2581// \u2581is \u2581a \u2581valid \u2581string ."], "references": ["\u2581// \u2581update String \u2581will \u2581return \u2581true \u2581and \u2581 set \u2581have \u2581to \u2581want \u2581if f \u2581they \u2581are \u2581 set \u2581and \u2581different ."], "bleu": 0.128610591651874, "rouge_l": 0.2914012738853503}
{"id": 1357, "predictions": ["\u2581// \u2581Should Report \u2581reports \u2581whether \u2581 this \u2581 Client \u2581is \u2581 tracked ."], "references": ["\u2581// \u2581Should Report \u2581tells \u2581if \u2581a \u2581 p row job \u2581should \u2581be \u2581reported \u2581by \u2581 this \u2581reporter"], "bleu": 0.16153126924830918, "rouge_l": 0.3255069370330843}
{"id": 709, "predictions": ["\u2581// \u2581 seek For Prev \u2581returns \u2581the \u2581next \u2581 iterator \u2581in \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 seek For Prev \u2581will \u2581reset \u2581 iterator \u2581and \u2581 seek \u2581to \u2581<= \u2581 key ."], "bleu": 0.3135859063707743, "rouge_l": 0.5562310030395137}
{"id": 1263, "predictions": ["\u2581// \u2581 Helper s \u2581returns \u2581a \u2581list \u2581of \u2581 active \u2581 active \u2581 active \u2581 active \u2581jobs ."], "references": ["\u2581// \u2581 ProwJob s \u2581returns \u2581a \u2581thread - safe \u2581snapshot \u2581of \u2581the \u2581current \u2581 p row \u2581jobs ."], "bleu": 0.18107197870881736, "rouge_l": 0.5}
{"id": 661, "predictions": ["\u2581// \u2581 Encoded Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 Value ."], "references": ["\u2581// \u2581 Encoded Size \u2581is \u2581the \u2581 size \u2581of \u2581the \u2581 Value Struct \u2581when \u2581encoded"], "bleu": 0.5999703042908046, "rouge_l": 0.7757225433526012}
{"id": 557, "predictions": ["\u2581// \u2581 refresh \u2581 refresh es \u2581the \u2581lease"], "references": ["\u2581// \u2581 refresh \u2581 refresh es \u2581the \u2581expiry \u2581of \u2581the \u2581lease ."], "bleu": 0.5575974129541792, "rouge_l": 0.7721518987341772}
{"id": 1745, "predictions": ["\u2581// \u2581is \u2581true Changed \u2581checks \u2581if \u2581the \u2581given \u2581pull \u2581event \u2581is \u2581a \u2581 PR \u2581update ."], "references": ["\u2581// \u2581These \u2581are \u2581the \u2581only \u2581actions \u2581indicating \u2581the \u2581 code \u2581 diffs \u2581may \u2581have \u2581changed ."], "bleu": 0.09672649511413092, "rouge_l": 0.25}
{"id": 1429, "predictions": ["\u2581// \u2581Get StringSlice Set \u2581returns \u2581the \u2581 set \u2581of \u2581all \u2581the \u2581 items \u2581in \u2581the \u2581 form"], "references": ["\u2581// \u2581Get Owners Set \u2581returns \u2581a \u2581 set \u2581containing \u2581all \u2581the \u2581 Owners \u2581files \u2581necessary \u2581to \u2581 get \u2581the \u2581 PR \u2581 approved"], "bleu": 0.15366103284441676, "rouge_l": 0.5355147645650439}
{"id": 1214, "predictions": ["\u2581// \u2581 Rev Parse \u2581returns \u2581the \u2581first \u2581 path \u2581of \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581 Rev Parse \u2581does \u2581 git \u2581rev - parse ."], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 1566, "predictions": ["\u2581// \u2581 Receive Event \u2581implements \u2581the \u2581 Active \u2581interface \u2581for \u2581 Active State ."], "references": ["\u2581// \u2581 Receive Event \u2581checks \u2581if \u2581the \u2581event \u2581matches \u2581the \u2581 exit \u2581 criteria . \u2581// \u2581Returns \u2581a \u2581new \u2581 Inactive State \u2581or \u2581self , \u2581and \u2581true \u2581if \u2581it \u2581changed"], "bleu": 0.09865243055173982, "rouge_l": 0.3412587412587413}
{"id": 821, "predictions": ["\u2581// \u2581 NewFile Snapshot Store \u2581creates \u2581a \u2581new \u2581 File Snapshot Store"], "references": ["\u2581// \u2581 NewFile Snapshot Store \u2581creates \u2581a \u2581new \u2581 File Snapshot Store \u2581based \u2581// \u2581on \u2581a \u2581base \u2581directory . \u2581The \u2581` retain ` \u2581parameter \u2581controls \u2581how \u2581many \u2581// \u2581snapshots \u2581are"], "bleu": 0.22313016014842982, "rouge_l": 0.5304347826086957}
{"id": 424, "predictions": ["\u2581// \u2581 New Check Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581the \u2581 cobra . Command"], "references": ["\u2581// \u2581 New Check Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" check \" ."], "bleu": 0.5158431512363186, "rouge_l": 0.6953367875647668}
{"id": 934, "predictions": ["\u2581// \u2581 set Leader \u2581sets \u2581the \u2581leader \u2581state \u2581of \u2581the \u2581 Raft \u2581state"], "references": ["\u2581// \u2581 set Leader \u2581is \u2581used \u2581to \u2581modify \u2581the \u2581current \u2581leader \u2581of \u2581the \u2581cluster"], "bleu": 0.3014896054317117, "rouge_l": 0.5886610373944512}
{"id": 860, "predictions": ["\u2581// \u2581Get Log \u2581is \u2581thread - safe \u2581way \u2581of \u2581getting \u2581the \u2581log \u2581entry"], "references": ["\u2581// \u2581Get Log \u2581implements \u2581the \u2581 Log Store \u2581interface ."], "bleu": 0.18798317647335086, "rouge_l": 0.3562043795620438}
{"id": 1146, "predictions": ["\u2581// \u2581 Delete \u2581takes \u2581 name \u2581of \u2581the \u2581 Fake Resource s \u2581and \u2581deletes \u2581it . \u2581Returns \u2581an \u2581error \u2581if \u2581one \u2581occurs ."], "references": ["\u2581// \u2581 Delete \u2581takes \u2581 name \u2581of \u2581the \u2581 p row Job \u2581and \u2581deletes \u2581it . \u2581Returns \u2581an \u2581error \u2581if \u2581one \u2581occurs ."], "bleu": 0.7947545184555568, "rouge_l": 0.8695652173913043}
{"id": 231, "predictions": ["\u2581// \u2581 ParseDuration \u2581returns \u2581a \u2581string \u2581with \u2581the \u2581given \u2581 length"], "references": ["\u2581// \u2581 excerpt \u2581replaces \u2581middle \u2581part \u2581with \u2581 ellipsis \u2581and \u2581returns \u2581a \u2581double - quoted \u2581// \u2581string \u2581safely \u2581escaped \u2581with \u2581Go \u2581syntax ."], "bleu": 0.07121523337509393, "rouge_l": 0.3318223028105167}
{"id": 1354, "predictions": ["\u2581// \u2581update Bool \u2581will \u2581 set \u2581the \u2581boolean \u2581value \u2581of \u2581a \u2581boolean ."], "references": ["\u2581// \u2581update Bool \u2581will \u2581return \u2581true \u2581and \u2581 set \u2581have \u2581to \u2581want \u2581if f \u2581they \u2581are \u2581 set \u2581and \u2581different ."], "bleu": 0.1708572208640334, "rouge_l": 0.395004625346901}
{"id": 370, "predictions": ["\u2581// \u2581 New Auth Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command"], "references": ["\u2581// \u2581 New Auth Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" auth \" ."], "bleu": 0.4407536635706968, "rouge_l": 0.6736196319018404}
{"id": 887, "predictions": ["\u2581// \u2581handle Stale Term \u2581is \u2581used \u2581to \u2581 remove \u2581a \u2581 set \u2581of \u2581 s anity \u2581changes ."], "references": ["\u2581// \u2581handle Stale Term \u2581is \u2581used \u2581when \u2581a \u2581 follower \u2581indicates \u2581that \u2581we \u2581have \u2581a \u2581stale \u2581term ."], "bleu": 0.35025412310639736, "rouge_l": 0.5}
{"id": 407, "predictions": ["\u2581// \u2581 Read \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581node ."], "references": ["\u2581// \u2581 Read \u2581function \u2581gets \u2581the \u2581value \u2581of \u2581the \u2581node . \u2581// \u2581If \u2581the \u2581receiver \u2581node \u2581is \u2581not \u2581a \u2581 key - value \u2581pair , \u2581a \u2581\" Not \u2581 A"], "bleu": 0.0797005255163999, "rouge_l": 0.36014760147601477}
{"id": 801, "predictions": ["\u2581// \u2581new Are n a \u2581returns \u2581a \u2581 Are n a \u2581from \u2581the \u2581given \u2581number \u2581of \u2581 n ."], "references": ["\u2581// \u2581new Are n a \u2581returns \u2581a \u2581new \u2581aren a ."], "bleu": 0.3665882729601239, "rouge_l": 0.6303099885189437}
{"id": 3, "predictions": ["\u2581// \u2581 New ST M Repeat able \u2581creates \u2581a \u2581new \u2581 v 3 Txn Response ."], "references": ["\u2581// \u2581 New ST M Repeat able \u2581is \u2581deprecated ."], "bleu": 0.42649937722961534, "rouge_l": 0.6421052631578947}
{"id": 1426, "predictions": ["\u2581// \u2581 Detect \u2581the \u2581 contents \u2581of \u2581the \u2581 set \u2581of \u2581 children \u2581to \u2581the \u2581 slice \u2581of \u2581 children"], "references": ["\u2581// \u2581temporary Un approved Files \u2581returns \u2581the \u2581list \u2581of \u2581files \u2581that \u2581would n ' t \u2581be \u2581// \u2581 approved \u2581by \u2581the \u2581given \u2581 set \u2581of \u2581 approve rs ."], "bleu": 0.13631038602752654, "rouge_l": 0.3160621761658031}
{"id": 470, "predictions": ["\u2581// \u2581 NewClient Handler \u2581returns \u2581a \u2581new \u2581http . Handler \u2581that \u2581serves \u2581requests \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 NewClient Handler \u2581generates \u2581a \u2581mux ed \u2581http . Handler \u2581with \u2581the \u2581given \u2581parameters \u2581to \u2581serve \u2581etcd \u2581client \u2581requests ."], "bleu": 0.23995292232075618, "rouge_l": 0.5165114309906859}
{"id": 868, "predictions": ["\u2581// \u2581 New Log Cache \u2581creates \u2581a \u2581new \u2581 Log Cache \u2581with \u2581the \u2581given \u2581capacity ."], "references": ["\u2581// \u2581 New Log Cache \u2581is \u2581used \u2581to \u2581create \u2581a \u2581new \u2581 Log Cache \u2581with \u2581the \u2581// \u2581given \u2581capacity \u2581and \u2581backend \u2581store ."], "bleu": 0.43798532459909173, "rouge_l": 0.7451140065146581}
{"id": 55, "predictions": ["\u2581// \u2581 b cast Heartbeat \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 Raft \u2581 data \u2581// \u2581for \u2581the \u2581 raft ."], "references": ["\u2581// \u2581 b cast Heartbeat \u2581sends \u2581RPC , \u2581without \u2581entries \u2581to \u2581all \u2581the \u2581peers ."], "bleu": 0.20828838183973028, "rouge_l": 0.3829596412556054}
{"id": 2017, "predictions": ["\u2581// \u2581do \u2581 wraps \u2581the \u2581 bakery . Request \u2581to \u2581 get \u2581a \u2581request ."], "references": ["\u2581// \u2581Do \u2581performs \u2581a \u2581 Request , \u2581using \u2581 macaroon \u2581authentication \u2581if \u2581 set ."], "bleu": 0.11633270842295028, "rouge_l": 0.3333333333333333}
{"id": 1682, "predictions": ["\u2581// \u2581 undo Pre submit Presets \u2581 examine s \u2581a \u2581 pre submit s \u2581 pre submit s \u2581 pre submit s \u2581to \u2581the \u2581 pre submit s \u2581 set"], "references": ["\u2581// \u2581 undo \u2581merged \u2581 presets \u2581from \u2581loaded \u2581 pre submit \u2581and \u2581its \u2581 children"], "bleu": 0.11563084454999199, "rouge_l": 0.3782945736434108}
{"id": 141, "predictions": ["\u2581// \u2581new Pipeline Handler \u2581returns \u2581a \u2581new \u2581 Pipeline Handler ."], "references": ["\u2581// \u2581new Pipeline Handler \u2581returns \u2581a \u2581handler \u2581for \u2581handling \u2581 raft \u2581messages \u2581// \u2581from \u2581pipeline \u2581for \u2581 Raft Prefix . \u2581// \u2581// \u2581The \u2581handler \u2581reads \u2581out \u2581the \u2581 raft \u2581message"], "bleu": 0.09761280987342526, "rouge_l": 0.36014760147601477}
{"id": 1500, "predictions": ["\u2581// \u2581 Unmarshal Text \u2581unmarshal s \u2581a \u2581 byte \u2581 slice \u2581into \u2581a \u2581 Privacy ."], "references": ["\u2581// \u2581 Unmarshal Text \u2581returns \u2581an \u2581error \u2581if \u2581 text \u2581!= \u2581 secret \u2581or \u2581closed"], "bleu": 0.23287896954139942, "rouge_l": 0.3893617021276596}
{"id": 342, "predictions": ["\u2581// \u2581Register Builder \u2581registers \u2581a \u2581new \u2581builder \u2581with \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581Register Builder \u2581creates \u2581and \u2581registers \u2581a \u2581builder . \u2581Since \u2581 this \u2581function \u2581calls \u2581 balancer . Register , \u2581it \u2581// \u2581must \u2581be \u2581invoked \u2581at \u2581initialization \u2581time ."], "bleu": 0.0738010900980929, "rouge_l": 0.36609152288072017}
{"id": 223, "predictions": ["\u2581// \u2581server Version \u2581returns \u2581the \u2581version \u2581of \u2581the \u2581server ."], "references": ["\u2581// \u2581server Version \u2581returns \u2581the \u2581server \u2581version \u2581from \u2581the \u2581given \u2581header ."], "bleu": 0.449565455053693, "rouge_l": 0.7155425219941348}
{"id": 1391, "predictions": ["\u2581// \u2581 Last N Lines \u2581returns \u2581the \u2581 N Lines \u2581of \u2581the \u2581 Artifact \u2581in \u2581the \u2581given \u2581 Artifact ."], "references": ["\u2581// \u2581 Last N Lines \u2581reads \u2581the \u2581last \u2581 n \u2581lines \u2581from \u2581an \u2581artifact ."], "bleu": 0.2476165058078653, "rouge_l": 0.46923076923076923}
{"id": 1315, "predictions": ["\u2581// \u2581 New Event Client \u2581creates \u2581a \u2581new \u2581 Event Client \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 New Event Client \u2581creates \u2581an \u2581 Event Client \u2581struct . \u2581This \u2581should \u2581be \u2581used \u2581once \u2581per \u2581webhook \u2581event ."], "bleu": 0.3254643123688681, "rouge_l": 0.5165114309906859}
{"id": 1462, "predictions": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 GCS Artifact ."], "references": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581artifact \u2581in \u2581 GCS"], "bleu": 0.7272454093000141, "rouge_l": 0.8461538461538461}
{"id": 1572, "predictions": ["\u2581// \u2581 Item To Resources Config \u2581returns \u2581the \u2581 Resources Config \u2581from \u2581an \u2581item \u2581 slice"], "references": ["\u2581// \u2581 Item To Resources Config \u2581 cast s \u2581an \u2581 Item \u2581object \u2581to \u2581a \u2581 Resources Config"], "bleu": 0.39549114009835573, "rouge_l": 0.523854961832061}
{"id": 5, "predictions": ["\u2581// \u2581 New ST M Read Committed \u2581creates \u2581a \u2581new \u2581 ST v 3 \u2581transaction ."], "references": ["\u2581// \u2581 New ST M Read Committed \u2581is \u2581deprecated ."], "bleu": 0.42649937722961534, "rouge_l": 0.6421052631578947}
{"id": 23, "predictions": ["\u2581// \u2581maybe Update \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 write \u2581is \u2581updated ."], "references": ["\u2581// \u2581maybe Update \u2581returns \u2581false \u2581if \u2581the \u2581given \u2581 n \u2581index \u2581comes \u2581from \u2581an \u2581 outdated \u2581message . \u2581// \u2581Otherwise \u2581it \u2581updates \u2581the \u2581progress \u2581and \u2581returns \u2581true ."], "bleu": 0.15271198961813395, "rouge_l": 0.41185296324081017}
{"id": 1332, "predictions": ["\u2581// \u2581Initialize Comment Prune r \u2581is \u2581used \u2581to \u2581initialize \u2581the \u2581 comment \u2581for \u2581the \u2581 comment"], "references": ["\u2581// \u2581Initialize Comment Prune r \u2581 attaches \u2581a \u2581 comment prune r . Event Client \u2581to \u2581the \u2581agent \u2581to \u2581handle \u2581// \u2581 p run ing \u2581comments ."], "bleu": 0.17254675231833858, "rouge_l": 0.4001457725947522}
{"id": 281, "predictions": ["\u2581// \u2581 Describe Entries \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581entry ."], "references": ["\u2581// \u2581 Describe Entries \u2581calls \u2581 Describe Entry \u2581for \u2581each \u2581 Entry , \u2581adding \u2581a \u2581newline \u2581to \u2581// \u2581each ."], "bleu": 0.1687777200044908, "rouge_l": 0.35023923444976074}
{"id": 1175, "predictions": ["\u2581// \u2581from Key \u2581returns \u2581the \u2581 key \u2581from \u2581the \u2581 key \u2581 name ."], "references": ["\u2581// \u2581from Key \u2581converts \u2581to Key \u2581back \u2581into \u2581its \u2581parts"], "bleu": 0.16451929399933107, "rouge_l": 0.2577464788732394}
{"id": 483, "predictions": ["\u2581// \u2581Get SRV Service \u2581returns \u2581the \u2581 SRV \u2581service \u2581service \u2581 SRV \u2581service"], "references": ["\u2581// \u2581Get SRV Service \u2581generates \u2581a \u2581 SRV \u2581service \u2581including \u2581an \u2581optional \u2581suffix ."], "bleu": 0.3292412246716163, "rouge_l": 0.5150784077201447}
{"id": 740, "predictions": ["\u2581// \u2581 New Stream At \u2581returns \u2581a \u2581new \u2581stream \u2581with \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 New Stream At \u2581creates \u2581a \u2581new \u2581 Stream \u2581at \u2581a \u2581particular \u2581timestamp . \u2581Should \u2581only \u2581be \u2581used \u2581with \u2581managed \u2581 DB ."], "bleu": 0.2013881668986182, "rouge_l": 0.49233252623083124}
{"id": 1862, "predictions": ["\u2581// \u2581 New Resources FromConfig \u2581returns \u2581a \u2581new \u2581 Resource \u2581from \u2581the \u2581given \u2581resource ."], "references": ["\u2581// \u2581 New Resources FromConfig \u2581parse \u2581the \u2581a \u2581 Resource Entry \u2581into \u2581a \u2581list \u2581of \u2581resources"], "bleu": 0.3352042383309152, "rouge_l": 0.5131440588853837}
{"id": 782, "predictions": ["\u2581// \u2581 Wrapf \u2581 wraps \u2581a \u2581 format \u2581and \u2581returns \u2581a \u2581 printf - formatted \u2581error ."], "references": ["\u2581// \u2581 Wrapf \u2581is \u2581 Wrap \u2581with \u2581extra \u2581 info ."], "bleu": 0.15464260451973766, "rouge_l": 0.4457978075517661}
{"id": 1942, "predictions": ["\u2581// \u2581 Image Last Access Update \u2581updates \u2581the \u2581current \u2581 date \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Last Access Update \u2581updates \u2581the \u2581last _ use _ date \u2581field \u2581of \u2581the \u2581image \u2581with \u2581the \u2581// \u2581given \u2581fingerprint ."], "bleu": 0.33975386579368816, "rouge_l": 0.6084788029925188}
{"id": 1117, "predictions": ["\u2581// \u2581 List Teams \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 teams \u2581that \u2581are \u2581 active \u2581in \u2581the \u2581current \u2581release ."], "references": ["\u2581// \u2581 List Teams \u2581return \u2581a \u2581list \u2581of \u2581fake \u2581 teams \u2581that \u2581correspond \u2581to \u2581the \u2581fake \u2581team \u2581members \u2581returned \u2581by \u2581 List TeamMember s"], "bleu": 0.2388254415340772, "rouge_l": 0.49193548387096775}
{"id": 317, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581 unsafe \u2581 set \u2581 equals \u2581to \u2581the \u2581other ."], "references": ["\u2581// \u2581 Equals \u2581returns \u2581whether \u2581the \u2581 contents \u2581of \u2581two \u2581sets \u2581are \u2581identical"], "bleu": 0.23124463019346486, "rouge_l": 0.40985442329227323}
{"id": 308, "predictions": ["\u2581// \u2581next Resume \u2581 resume s \u2581the \u2581next \u2581 call \u2581to \u2581 watch ."], "references": ["\u2581// \u2581next Resume \u2581choose s \u2581the \u2581next \u2581 resuming \u2581to \u2581register \u2581with \u2581the \u2581 grpc \u2581stream . \u2581 A band one d \u2581// \u2581streams \u2581are \u2581marked \u2581as \u2581nil \u2581in \u2581the"], "bleu": 0.1161269706200222, "rouge_l": 0.42657342657342656}
{"id": 886, "predictions": ["\u2581// \u2581 append Stats \u2581 append \u2581a \u2581 set \u2581of \u2581stats \u2581to \u2581a \u2581peer ."], "references": ["\u2581// \u2581 append Stats \u2581is \u2581used \u2581to \u2581 emit \u2581stats \u2581about \u2581an \u2581 Append Entries \u2581invocation ."], "bleu": 0.23827376217791343, "rouge_l": 0.4326241134751773}
{"id": 1388, "predictions": ["\u2581// \u2581Get A Time \u2581returns \u2581the \u2581time \u2581of \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Get A Time \u2581the \u2581a time \u2581for \u2581a \u2581file , \u2581logging \u2581errors \u2581instead \u2581of \u2581fail ing \u2581// \u2581and \u2581returning \u2581default Time \u2581instead"], "bleu": 0.1339964560464193, "rouge_l": 0.31743278404163056}
{"id": 509, "predictions": ["\u2581// \u2581Get Cluster \u2581returns \u2581a \u2581 Cluster \u2581object \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581cluster \u2581// \u2581with \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581Get Cluster \u2581will \u2581 connect \u2581to \u2581the \u2581discovery \u2581service \u2581at \u2581the \u2581given \u2581 url \u2581and \u2581// \u2581retrieve \u2581a \u2581string \u2581describing \u2581the \u2581cluster"], "bleu": 0.16973628531343277, "rouge_l": 0.38445378151260506}
{"id": 679, "predictions": ["\u2581// \u2581 Flush \u2581implements \u2581the \u2581 Batch \u2581interface ."], "references": ["\u2581// \u2581 Flush \u2581must \u2581be \u2581called \u2581at \u2581the \u2581end \u2581to \u2581ensure \u2581that \u2581any \u2581pending \u2581writes \u2581 get \u2581committed \u2581to \u2581 Badge r . \u2581 Flush \u2581// \u2581returns \u2581any \u2581error \u2581stored"], "bleu": 0.02929887179387845, "rouge_l": 0.28045977011494255}
{"id": 1124, "predictions": ["\u2581// \u2581 List Scoped Commits \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581repository \u2581 keys \u2581for \u2581a \u2581given \u2581repository ."], "references": ["\u2581// \u2581 List PR Commits \u2581lists \u2581commits \u2581for \u2581a \u2581given \u2581 PR ."], "bleu": 0.20038908500140973, "rouge_l": 0.531590413943355}
{"id": 1440, "predictions": ["\u2581// \u2581 Un follow Files \u2581returns \u2581the \u2581list \u2581of \u2581 children \u2581of \u2581the \u2581 Approve rs"], "references": ["\u2581// \u2581 Un approved Files \u2581returns \u2581 owners \u2581files \u2581that \u2581still \u2581need \u2581 approval"], "bleu": 0.18295654224495206, "rouge_l": 0.4723451327433628}
{"id": 1558, "predictions": ["\u2581// \u2581 Produce Co v List \u2581returns \u2581a \u2581list \u2581of \u2581 Coverage List ."], "references": ["\u2581// \u2581 Produce Co v List \u2581 summarize s \u2581profiles \u2581and \u2581returns \u2581the \u2581result"], "bleu": 0.42610827239170174, "rouge_l": 0.5}
{"id": 1373, "predictions": ["\u2581// \u2581 Branch \u2581returns \u2581the \u2581branch \u2581of \u2581the \u2581 Push Event"], "references": ["\u2581// \u2581 Branch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581branch \u2581to \u2581which \u2581the \u2581user \u2581pushed ."], "bleu": 0.33842085271203054, "rouge_l": 0.5017626321974148}
{"id": 351, "predictions": ["\u2581// \u2581 New Selective Strings Value \u2581creates \u2581a \u2581new \u2581 Selective Strings Value \u2581from \u2581a \u2581string \u2581// \u2581 slice \u2581of \u2581strings ."], "references": ["\u2581// \u2581 New Selective Strings Value \u2581creates \u2581a \u2581new \u2581string \u2581 slice \u2581flag \u2581// \u2581for \u2581which \u2581any \u2581one \u2581of \u2581the \u2581given \u2581strings \u2581is \u2581a \u2581valid \u2581value , \u2581// \u2581and \u2581any"], "bleu": 0.3198040940261918, "rouge_l": 0.5239263803680982}
{"id": 4, "predictions": ["\u2581// \u2581 New ST M Serializable \u2581creates \u2581a \u2581new \u2581 v 3 Txn Response ."], "references": ["\u2581// \u2581 New ST M Serializable \u2581is \u2581deprecated ."], "bleu": 0.3850322886878713, "rouge_l": 0.6108726752503576}
{"id": 312, "predictions": ["\u2581// \u2581 join Sub Tail \u2581is \u2581called \u2581when \u2581a \u2581 call \u2581is \u2581 held \u2581by \u2581 this \u2581// \u2581stream ."], "references": ["\u2581// \u2581 join Sub streams \u2581waits \u2581for \u2581all \u2581sub stream \u2581goroutines \u2581to \u2581complete ."], "bleu": 0.17793925745339384, "rouge_l": 0.30378486055776893}
{"id": 1036, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581value \u2581to \u2581the \u2581 flash"], "references": ["\u2581// Add \u2581adds \u2581a \u2581 flash \u2581value \u2581for \u2581a \u2581 flash \u2581 key , \u2581if \u2581the \u2581 key \u2581already \u2581has \u2581values \u2581the \u2581list \u2581for \u2581that \u2581value \u2581 g rows ."], "bleu": 0.02737323143902037, "rouge_l": 0.28045977011494255}
{"id": 1269, "predictions": ["\u2581// \u2581Get Repo \u2581returns \u2581the \u2581 Repo \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Repo \u2581returns \u2581the \u2581repo \u2581 config \u2581after \u2581merging \u2581in \u2581any \u2581 org \u2581policies ."], "bleu": 0.30740809996828294, "rouge_l": 0.541620421753607}
{"id": 662, "predictions": ["\u2581// \u2581 Decode \u2581decodes \u2581the \u2581value \u2581from \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Decode \u2581uses \u2581the \u2581 length \u2581of \u2581the \u2581 slice \u2581to \u2581infer \u2581the \u2581 length \u2581of \u2581the \u2581 Value \u2581field ."], "bleu": 0.12710810956411275, "rouge_l": 0.4368845120859445}
{"id": 1204, "predictions": ["\u2581// \u2581Check Flags \u2581checks \u2581if \u2581the \u2581 comment \u2581 type \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check Flags \u2581looks \u2581for \u2581comments \u2581matching \u2581 regexes"], "bleu": 0.18798317647335086, "rouge_l": 0.37596302003081655}
{"id": 1728, "predictions": ["\u2581// \u2581 Load Single Secret \u2581 loads \u2581a \u2581 byte \u2581 slice \u2581from \u2581the \u2581 path \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581file ."], "references": ["\u2581// \u2581 Load Single Secret \u2581reads \u2581and \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581single \u2581file ."], "bleu": 0.24669426816409512, "rouge_l": 0.5638655462184875}
{"id": 1907, "predictions": ["\u2581// \u2581 Transaction \u2581returns \u2581a \u2581transaction \u2581with \u2581the \u2581given \u2581function ."], "references": ["\u2581// \u2581 Transaction \u2581creates \u2581a \u2581new \u2581 Node Tx \u2581object \u2581and \u2581transaction ally \u2581executes \u2581the \u2581// \u2581node - level \u2581database \u2581 interactions \u2581invoked \u2581by \u2581the \u2581given \u2581function . \u2581If \u2581the"], "bleu": 0.0797005255163999, "rouge_l": 0.40516605166051656}
{"id": 2033, "predictions": ["\u2581// \u2581 Update Server \u2581updates \u2581the \u2581server \u2581with \u2581the \u2581given \u2581 ETag ."], "references": ["\u2581// \u2581 Update Server \u2581updates \u2581the \u2581server \u2581 status \u2581to \u2581match \u2581the \u2581provided \u2581 Server \u2581struct"], "bleu": 0.43168970371669746, "rouge_l": 0.6093229744728079}
{"id": 468, "predictions": ["\u2581// \u2581 Version \u2581returns \u2581the \u2581list \u2581of \u2581 keys \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581URLs \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581URLs . \u2581// \u2581The \u2581returned \u2581list \u2581is \u2581sorted \u2581in \u2581ascending \u2581 l exicographical \u2581order ."], "bleu": 0.08395097551291249, "rouge_l": 0.3739054290718039}
{"id": 1374, "predictions": ["\u2581// \u2581truncate \u2581returns \u2581the \u2581first \u2581element \u2581in \u2581 this \u2581 slice ."], "references": ["\u2581// \u2581truncate \u2581converts \u2581\" really \u2581long \u2581messages \" \u2581into \u2581\" really \u2581... \u2581messages \" ."], "bleu": 0.11443781455557568, "rouge_l": 0.21785714285714283}
{"id": 161, "predictions": ["\u2581// \u2581 Active Peers \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581 active \u2581 active \u2581 active \u2581// \u2581peers ."], "references": ["\u2581// \u2581 Active Peers \u2581returns \u2581a \u2581channel \u2581that \u2581closes \u2581when \u2581an \u2581initial \u2581// \u2581peer \u2581connection \u2581has \u2581been \u2581 established . \u2581Use \u2581 this \u2581to \u2581wait \u2581until \u2581the \u2581// \u2581first \u2581peer"], "bleu": 0.15384241213280264, "rouge_l": 0.3138263665594856}
{"id": 1054, "predictions": ["\u2581// \u2581Perform In \u2581 downloads \u2581the \u2581job \u2581and \u2581waits \u2581for \u2581the \u2581given \u2581job \u2581to \u2581the \u2581// \u2581 top \u2581of \u2581the \u2581given \u2581job ."], "references": ["\u2581// \u2581Perform In \u2581performs \u2581a \u2581job \u2581after \u2581waiting \u2581for \u2581a \u2581specified \u2581amount \u2581// \u2581using \u2581a \u2581goroutine ."], "bleu": 0.1171291646655074, "rouge_l": 0.35973041280539175}
{"id": 572, "predictions": ["\u2581// \u2581 New Move Leader Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Move Leader Command"], "references": ["\u2581// \u2581 New Move Leader Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" move - leader \" ."], "bleu": 0.39954799026548116, "rouge_l": 0.523854961832061}
{"id": 282, "predictions": ["\u2581// \u2581Set Logger \u2581sets \u2581the \u2581logger \u2581for \u2581the \u2581logger"], "references": ["\u2581// \u2581Set Logger \u2581sets \u2581client - side \u2581 Logger ."], "bleu": 0.3515059938464902, "rouge_l": 0.41709401709401706}
{"id": 1749, "predictions": ["\u2581// \u2581 Fetch \u2581 searches \u2581the \u2581 data \u2581from \u2581the \u2581 fetcher ' s \u2581 data ."], "references": ["\u2581// \u2581 Fetch \u2581retrieves \u2581all \u2581types \u2581of \u2581events , \u2581and \u2581 push \u2581them \u2581to \u2581output \u2581channels"], "bleu": 0.14216645907653844, "rouge_l": 0.24375624375624372}
{"id": 74, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581server ."], "references": ["\u2581// \u2581 Stop \u2581stops \u2581 serving \u2581gRPC \u2581server ."], "bleu": 0.44683107184405757, "rouge_l": 0.7334669338677354}
{"id": 1275, "predictions": ["\u2581// \u2581build Env \u2581builds \u2581the \u2581 Env \u2581from \u2581the \u2581 p ."], "references": ["\u2581// \u2581build Env \u2581constructs \u2581the \u2581environment \u2581 map \u2581for \u2581the \u2581job"], "bleu": 0.2224246939793677, "rouge_l": 0.5258620689655172}
{"id": 839, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581network \u2581 Transport"], "references": ["\u2581// \u2581 Close \u2581is \u2581used \u2581to \u2581stop \u2581the \u2581network \u2581transport ."], "bleu": 0.24395202750673672, "rouge_l": 0.511744966442953}
{"id": 1254, "predictions": ["\u2581// \u2581to Map \u2581converts \u2581the \u2581 Coverage \u2581 Coverage \u2581 Coverage \u2581 Coverage \u2581 Coverage \u2581 Coverage ."], "references": ["\u2581// \u2581to Map \u2581returns \u2581maps \u2581the \u2581file \u2581 name \u2581to \u2581its \u2581 coverage \u2581for \u2581faster \u2581 retrieval \u2581// \u2581& \u2581membership \u2581check"], "bleu": 0.12757898515476282, "rouge_l": 0.3540630182421227}
{"id": 1018, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581if \u2581the \u2581options \u2581is \u2581valid ."], "references": ["\u2581// \u2581Validate \u2581options \u2581are \u2581useful"], "bleu": 0.19960198807747329, "rouge_l": 0.4518518518518518}
{"id": 114, "predictions": ["\u2581// \u2581 Recover Partition \u2581is \u2581used \u2581to \u2581recover \u2581a \u2581 chan \u2581that \u2581will \u2581be \u2581used \u2581// \u2581when \u2581the \u2581member \u2581is \u2581 tracked ."], "references": ["\u2581// \u2581 Recover Partition \u2581recover s \u2581connections \u2581from \u2581 m \u2581to \u2581others , \u2581 vice \u2581 versa ."], "bleu": 0.1751489536280261, "rouge_l": 0.3990188062142273}
{"id": 1040, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581cookie \u2581to \u2581the \u2581cookie ."], "references": ["\u2581// \u2581Set \u2581a \u2581cookie \u2581on \u2581the \u2581response , \u2581which \u2581will \u2581 expire \u2581after \u2581the \u2581given \u2581duration ."], "bleu": 0.11141576688543908, "rouge_l": 0.3344298245614035}
{"id": 38, "predictions": ["\u2581// \u2581has Local Member \u2581returns \u2581true \u2581if \u2581the \u2581cluster \u2581is \u2581 Local Member ."], "references": ["\u2581// \u2581has Local Member \u2581checks \u2581that \u2581the \u2581cluster \u2581at \u2581least \u2581 contains \u2581the \u2581local \u2581server ."], "bleu": 0.2611938211208065, "rouge_l": 0.5269978401727862}
{"id": 1360, "predictions": ["\u2581// \u2581Find Labels \u2581returns \u2581all \u2581labels \u2581that \u2581match \u2581the \u2581given \u2581regex ."], "references": ["\u2581// \u2581Find Labels \u2581returns \u2581the \u2581list \u2581of \u2581labels \u2581matching \u2581the \u2581regex"], "bleu": 0.32523403430389786, "rouge_l": 0.6135057471264368}
{"id": 177, "predictions": ["\u2581// \u2581 New Alarm Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581` kubeadm \u2581 Alarm `"], "references": ["\u2581// \u2581 New Alarm Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" alarm \" ."], "bleu": 0.46606087123583245, "rouge_l": 0.6321243523316062}
{"id": 1074, "predictions": ["\u2581// \u2581Add Bodies \u2581adds \u2581a \u2581 data \u2581to \u2581the \u2581message ."], "references": ["\u2581// \u2581Add Bodies \u2581Allows \u2581to \u2581 add \u2581multiple \u2581 bodies \u2581to \u2581the \u2581message , \u2581it \u2581returns \u2581errors \u2581that \u2581// \u2581could \u2581happen \u2581in \u2581the \u2581rendering ."], "bleu": 0.09144098601643852, "rouge_l": 0.4153191489361702}
{"id": 1943, "predictions": ["\u2581// \u2581 Image Last Access Init \u2581returns \u2581the \u2581last \u2581access \u2581 auto - date - Access - specific \u2581// \u2581 data \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// Image Last Access Init \u2581 init s \u2581the \u2581last _ use _ date \u2581field \u2581of \u2581the \u2581image \u2581with \u2581the \u2581given \u2581fingerprint ."], "bleu": 0.17797644045771208, "rouge_l": 0.41982105987611834}
{"id": 1041, "predictions": ["\u2581// \u2581Set With ExpirationTime \u2581sets \u2581the \u2581value \u2581for \u2581a \u2581cookie \u2581with \u2581the \u2581given \u2581 name"], "references": ["\u2581// \u2581Set With ExpirationTime \u2581sets \u2581a \u2581cookie \u2581that \u2581will \u2581 expire \u2581at \u2581a \u2581specific \u2581time . \u2581// \u2581Note \u2581that \u2581the \u2581time \u2581is \u2581determined \u2581by \u2581the \u2581client ' s \u2581browser ,"], "bleu": 0.13499452530651476, "rouge_l": 0.3353951890034364}
{"id": 122, "predictions": ["\u2581// \u2581new File Encoder \u2581returns \u2581a \u2581new \u2581 Encoder \u2581that \u2581writes \u2581to \u2581the \u2581given \u2581file \u2581descriptor ."], "references": ["\u2581// \u2581new File Encoder \u2581creates \u2581a \u2581new \u2581encoder \u2581with \u2581current \u2581file \u2581offset \u2581for \u2581the \u2581 page \u2581writer ."], "bleu": 0.24411731449596413, "rouge_l": 0.4547996272134204}
{"id": 1212, "predictions": ["\u2581// \u2581 Checkout New Branch \u2581returns \u2581a \u2581 checkout \u2581of \u2581the \u2581branch ."], "references": ["\u2581// \u2581 Checkout New Branch \u2581does \u2581 git \u2581 checkout \u2581 - b ."], "bleu": 0.3752538475396915, "rouge_l": 0.5886610373944512}
{"id": 1044, "predictions": ["\u2581// \u2581 New FromData \u2581returns \u2581a \u2581new \u2581 Message \u2581instance"], "references": ["\u2581// \u2581 New FromData \u2581builds \u2581a \u2581new \u2581message \u2581with \u2581raw \u2581template \u2581 data \u2581given"], "bleu": 0.2796750486305988, "rouge_l": 0.5663129973474801}
{"id": 1759, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581the \u2581 SHA -1 \u2581 refs \u2581from \u2581the \u2581 ref ."], "references": ["\u2581// \u2581 getRevision From Ref \u2581returns \u2581a \u2581 ref \u2581or \u2581 sha \u2581from \u2581a \u2581 refs \u2581object"], "bleu": 0.1402577516008147, "rouge_l": 0.3446327683615819}
{"id": 264, "predictions": ["\u2581// \u2581 New TLS Listener \u2581returns \u2581a \u2581new \u2581 TLS \u2581listener"], "references": ["\u2581// \u2581 New TLS Listener \u2581handshake s \u2581 TLS \u2581connections \u2581and \u2581performs \u2581optional \u2581 CRL \u2581checking ."], "bleu": 0.2719653723003568, "rouge_l": 0.48139797068771134}
{"id": 1017, "predictions": ["\u2581// \u2581 Plus h Validator \u2581returns \u2581the \u2581 validator \u2581 set \u2581for \u2581the \u2581given \u2581 gen gen ."], "references": ["\u2581// \u2581 Plus h Validator \u2581validates \u2581the \u2581file \u2581is \u2581a \u2581valid \u2581// \u2581 Plus h \u2581file \u2581if \u2581the \u2581extension \u2581is \u2581 . md , \u2581 . html , \u2581or \u2581"], "bleu": 0.15228415470644138, "rouge_l": 0.3986928104575163}
{"id": 1268, "predictions": ["\u2581// \u2581Get Org \u2581returns \u2581the \u2581 org \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Org \u2581returns \u2581the \u2581 org \u2581 config \u2581after \u2581merging \u2581in \u2581any \u2581global \u2581policies ."], "bleu": 0.43168970371669746, "rouge_l": 0.6093229744728079}
{"id": 817, "predictions": ["\u2581// \u2581 List \u2581returns \u2581all \u2581 meta \u2581entries \u2581in \u2581the \u2581snapshot ."], "references": ["\u2581// \u2581 List \u2581returns \u2581the \u2581latest \u2581snapshot \u2581taken"], "bleu": 0.31455601883230705, "rouge_l": 0.6224489795918368}
{"id": 2042, "predictions": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581transactions \u2581in \u2581the \u2581database ."], "references": ["\u2581// \u2581 Count \u2581is \u2581a \u2581convenience \u2581for \u2581checking \u2581the \u2581current \u2581number \u2581of \u2581nodes \u2581in \u2581the \u2581// \u2581cluster ."], "bleu": 0.1766362715548009, "rouge_l": 0.5501002004008017}
{"id": 560, "predictions": ["\u2581// \u2581 Remaining \u2581returns \u2581the \u2581time \u2581 this \u2581lease \u2581is \u2581expired ."], "references": ["\u2581// \u2581 Remaining \u2581returns \u2581the \u2581remaining \u2581time \u2581of \u2581the \u2581lease ."], "bleu": 0.4211813371894875, "rouge_l": 0.7011494252873562}
{"id": 922, "predictions": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 top - level \u2581 multiplexer"], "references": ["\u2581// \u2581 Clone \u2581makes \u2581a \u2581deep \u2581copy \u2581of \u2581a \u2581configurations \u2581object ."], "bleu": 0.20333448190047887, "rouge_l": 0.4680306905370844}
{"id": 347, "predictions": ["\u2581// \u2581 post \u2581implements \u2581the \u2581 watch . Interface \u2581interface ."], "references": ["\u2581// \u2581 post \u2581puts \u2581a \u2581 watch \u2581response \u2581on \u2581the \u2581watcher ' s \u2581proxy \u2581stream \u2581channel"], "bleu": 0.1663168741017824, "rouge_l": 0.3584018801410106}
{"id": 1518, "predictions": ["\u2581// \u2581output \u2581prints \u2581the \u2581command \u2581line \u2581arguments"], "references": ["\u2581// \u2581output \u2581returns \u2581the \u2581trimmed \u2581output \u2581of \u2581running \u2581args , \u2581or \u2581an \u2581err \u2581on \u2581non - zero \u2581 exit ."], "bleu": 0.04101080379386835, "rouge_l": 0.20446927374301674}
{"id": 1122, "predictions": ["\u2581// \u2581Set Milestone \u2581sets \u2581the \u2581 milestone \u2581of \u2581the \u2581given \u2581 org \u2581and \u2581 ID ."], "references": ["\u2581// \u2581Set Milestone \u2581sets \u2581the \u2581 milestone ."], "bleu": 0.42649937722961534, "rouge_l": 0.7093023255813954}
{"id": 622, "predictions": ["\u2581// \u2581 Read Index \u2581reads \u2581the \u2581index \u2581from \u2581the \u2581node ."], "references": ["\u2581// \u2581 Read Index \u2581requests \u2581a \u2581read \u2581state . \u2581The \u2581read \u2581state \u2581will \u2581be \u2581 set \u2581in \u2581ready . \u2581// \u2581 Read \u2581 State \u2581has \u2581a \u2581read \u2581index . \u2581"], "bleu": 0.06130250142137494, "rouge_l": 0.2701107011070111}
{"id": 718, "predictions": ["\u2581// \u2581 Key With T s \u2581returns \u2581a \u2581 slice \u2581of \u2581 key - value \u2581pairs \u2581in \u2581the \u2581 slice \u2581of \u2581 data ."], "references": ["\u2581// \u2581 Key With T s \u2581generates \u2581a \u2581new \u2581 key \u2581by \u2581appending \u2581 ts \u2581to \u2581 key ."], "bleu": 0.2782546336574456, "rouge_l": 0.5700934579439252}
{"id": 1067, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 Sender ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581 emails \u2581using \u2581the \u2581given \u2581 Sender ."], "bleu": 0.3987360570751107, "rouge_l": 0.6902404526166903}
{"id": 430, "predictions": ["\u2581// \u2581 Handle Metrics Health \u2581handles \u2581the \u2581handler \u2581for \u2581the \u2581given \u2581 Handler ."], "references": ["\u2581// \u2581 Handle Metrics Health \u2581registers \u2581metrics \u2581and \u2581health \u2581 handlers ."], "bleu": 0.34791594751284466, "rouge_l": 0.5460358056265985}
{"id": 1760, "predictions": ["\u2581// \u2581Get Revision From Spec \u2581returns \u2581the \u2581revision \u2581spec \u2581for \u2581the \u2581given \u2581spec"], "references": ["\u2581// \u2581Get Revision From Spec \u2581returns \u2581a \u2581main \u2581 ref \u2581or \u2581 sha \u2581from \u2581a \u2581spec \u2581object"], "bleu": 0.32868312475146233, "rouge_l": 0.4557097118463179}
{"id": 1060, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 \u2581generator ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581generator \u2581for \u2581build \u2581actions \u2581on \u2581a \u2581 Buff a lo \u2581 app"], "bleu": 0.12349315254556269, "rouge_l": 0.41924398625429554}
{"id": 911, "predictions": ["\u2581// \u2581 Snapshot \u2581returns \u2581a \u2581new \u2581 Snapshot \u2581instance ."], "references": ["\u2581// \u2581 Snapshot \u2581is \u2581used \u2581to \u2581manually \u2581force \u2581 Raft \u2581to \u2581take \u2581a \u2581snapshot . \u2581Returns \u2581a \u2581future \u2581// \u2581that \u2581can \u2581be \u2581used \u2581to \u2581block \u2581until \u2581complete , \u2581and \u2581that"], "bleu": 0.036520949774262054, "rouge_l": 0.22932330827067668}
{"id": 211, "predictions": ["\u2581// \u2581 Resume Election \u2581returns \u2581a \u2581new \u2581 Election Election \u2581instance"], "references": ["\u2581// \u2581 Resume Election \u2581initializes \u2581an \u2581 election \u2581with \u2581a \u2581known \u2581leader ."], "bleu": 0.2875150462888186, "rouge_l": 0.41049798115746977}
{"id": 31, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 Unique Strings Value ."], "references": ["\u2581// \u2581Set \u2581parses \u2581a \u2581command \u2581line \u2581 set \u2581of \u2581strings , \u2581separated \u2581by \u2581comma . \u2581// \u2581 Implements \u2581\" flag . Value \" \u2581interface . \u2581// \u2581The \u2581values \u2581are \u2581"], "bleu": 0.03771038490247382, "rouge_l": 0.26521739130434785}
{"id": 600, "predictions": ["\u2581// \u2581Create Etcd Client \u2581creates \u2581a \u2581new \u2581 Etcd \u2581 Client"], "references": ["\u2581// \u2581Create Etcd Client \u2581creates \u2581a \u2581client \u2581from \u2581member ."], "bleu": 0.5156626918239822, "rouge_l": 0.5763779527559055}
{"id": 1260, "predictions": ["\u2581// \u2581 New Job Agent \u2581creates \u2581a \u2581new \u2581 Job Agent ."], "references": ["\u2581// \u2581 New Job Agent \u2581is \u2581a \u2581 Job Agent \u2581 constructor ."], "bleu": 0.46862447657953943, "rouge_l": 0.7942708333333333}
{"id": 973, "predictions": ["\u2581// \u2581 Unix Socket \u2581returns \u2581a \u2581 Listener \u2581for \u2581the \u2581given \u2581address ."], "references": ["\u2581// \u2581 Unix Socket \u2581returns \u2581a \u2581new \u2581 Listener \u2581on \u2581that \u2581address"], "bleu": 0.4913270548144421, "rouge_l": 0.725231175693527}
{"id": 819, "predictions": ["\u2581// \u2581 Write \u2581implements \u2581 Writer . Write ."], "references": ["\u2581// \u2581 Write \u2581appends \u2581the \u2581given \u2581bytes \u2581to \u2581the \u2581snapshot \u2581 contents"], "bleu": 0.19902510067151713, "rouge_l": 0.3713850837138508}
{"id": 113, "predictions": ["\u2581// \u2581 Inject Partition \u2581will \u2581 Inject \u2581 this \u2581member \u2581of \u2581the \u2581given \u2581 type \u2581to \u2581the \u2581// \u2581 set \u2581of \u2581 active \u2581peers ."], "references": ["\u2581// \u2581 Inject Partition \u2581drop s \u2581connections \u2581from \u2581 m \u2581to \u2581others , \u2581 vice \u2581 versa ."], "bleu": 0.16081986819293687, "rouge_l": 0.4312647289866457}
{"id": 1293, "predictions": ["\u2581// \u2581Get Skip Metrics \u2581gets \u2581the \u2581current \u2581metrics \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Get Skip Metrics \u2581fetches \u2581the \u2581 data \u2581found \u2581in \u2581the \u2581provided \u2581 path . \u2581It \u2581returns \u2581the \u2581// \u2581 content \u2581of \u2581the \u2581response \u2581or \u2581any \u2581errors \u2581that \u2581occurred \u2581during"], "bleu": 0.11095267705942848, "rouge_l": 0.3839160839160839}
{"id": 1871, "predictions": ["\u2581// \u2581 Item To Resource \u2581converts \u2581an \u2581item \u2581into \u2581a \u2581resource ."], "references": ["\u2581// \u2581 Item To Resource \u2581 cast s \u2581a \u2581 Item \u2581back \u2581to \u2581a \u2581 Resource"], "bleu": 0.2834119605687225, "rouge_l": 0.4178082191780822}
{"id": 1076, "predictions": ["\u2581// \u2581Add Embedded \u2581adds \u2581a \u2581new \u2581 Embedded \u2581to \u2581the \u2581message ."], "references": ["\u2581// Add Embedded \u2581adds \u2581the \u2581attachment \u2581to \u2581the \u2581list \u2581of \u2581 attachments \u2581// \u2581the \u2581 Message \u2581has \u2581and \u2581uses \u2581 inline \u2581instead \u2581of \u2581attach ement \u2581property ."], "bleu": 0.055405820051060546, "rouge_l": 0.28773584905660377}
{"id": 1869, "predictions": ["\u2581// \u2581 ToMap \u2581converts \u2581a \u2581 UserData \u2581to \u2581a \u2581 UserData"], "references": ["\u2581// \u2581 ToMap \u2581converts \u2581a \u2581 UserData \u2581to \u2581 UserData Map"], "bleu": 0.7691605673134586, "rouge_l": 0.9090909090909091}
{"id": 747, "predictions": ["\u2581// \u2581 Init \u2581initializes \u2581the \u2581 article \u2581with \u2581the \u2581given \u2581 Closer ."], "references": ["\u2581// \u2581 Init \u2581initializes \u2581a \u2581 Water Mark \u2581struct . \u2581MUST \u2581be \u2581called \u2581before \u2581using \u2581it ."], "bleu": 0.21258710573693182, "rouge_l": 0.3906083244397012}
{"id": 961, "predictions": ["\u2581// \u2581 encode Msg Pack \u2581returns \u2581a \u2581 Buffer \u2581that \u2581 contains \u2581the \u2581encoding \u2581of \u2581the \u2581// \u2581 Msg Pack \u2581encoded \u2581in \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode \u2581writes \u2581an \u2581encoded \u2581object \u2581to \u2581a \u2581new \u2581bytes \u2581buffer ."], "bleu": 0.07029695662739609, "rouge_l": 0.21347331583552054}
{"id": 955, "predictions": ["\u2581// \u2581 setState \u2581sets \u2581the \u2581state \u2581of \u2581the \u2581 Raft \u2581state ."], "references": ["\u2581// \u2581 setState \u2581is \u2581used \u2581to \u2581update \u2581the \u2581current \u2581state . \u2581Any \u2581state \u2581// \u2581transition \u2581causes \u2581the \u2581known \u2581leader \u2581to \u2581be \u2581cleared . \u2581This \u2581means \u2581// \u2581that \u2581leader \u2581should \u2581be"], "bleu": 0.056788720057911184, "rouge_l": 0.30942028985507253}
{"id": 857, "predictions": ["\u2581// \u2581 New In mem Store \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 In mem Store ."], "references": ["\u2581// \u2581 New In mem Store \u2581returns \u2581a \u2581new \u2581in - memory \u2581backend . \u2581Do \u2581not \u2581ever \u2581// \u2581use \u2581for \u2581 production . \u2581 Only \u2581for \u2581testing ."], "bleu": 0.26945424786264444, "rouge_l": 0.4765625}
{"id": 24, "predictions": ["\u2581// \u2581 Is Paused \u2581returns \u2581true \u2581if \u2581the \u2581progress \u2581is \u2581 paused ."], "references": ["\u2581// \u2581 Is Paused \u2581returns \u2581whether \u2581sending \u2581log \u2581entries \u2581to \u2581 this \u2581node \u2581has \u2581been \u2581// \u2581 paused . \u2581 A \u2581node \u2581may \u2581be \u2581 paused \u2581because \u2581it \u2581has \u2581rejected"], "bleu": 0.12044064401053362, "rouge_l": 0.3473309608540925}
{"id": 889, "predictions": ["\u2581// \u2581 Request Vote \u2581is \u2581part \u2581of \u2581the \u2581 raft . Request Request \u2581interface ."], "references": ["\u2581// \u2581 Request Vote \u2581sends \u2581the \u2581appropriate \u2581RPC \u2581to \u2581the \u2581target \u2581node ."], "bleu": 0.2490328638846773, "rouge_l": 0.43416370106761565}
{"id": 1437, "predictions": ["\u2581// \u2581Get \u2581the \u2581 Approve rs \u2581 set \u2581of \u2581the \u2581 Approve rs"], "references": ["\u2581// \u2581 GetCurrent Approve rs Set Case d \u2581returns \u2581the \u2581 set \u2581of \u2581 approve rs \u2581 login s \u2581with \u2581the \u2581original \u2581cases ."], "bleu": 0.11938488543589015, "rouge_l": 0.4617325483599663}
{"id": 219, "predictions": ["\u2581// \u2581 New Listener \u2581returns \u2581a \u2581new \u2581 net . Listener \u2581for \u2581the \u2581given \u2581 TLS \u2581 URL ."], "references": ["\u2581// \u2581 New Listener \u2581returns \u2581a \u2581listener \u2581for \u2581 raft \u2581message \u2581transfer \u2581between \u2581peers . \u2581// \u2581It \u2581uses \u2581timeout \u2581listener \u2581to \u2581identify \u2581broken \u2581streams \u2581prompt ly ."], "bleu": 0.21424287740975456, "rouge_l": 0.3794056668970283}
{"id": 1433, "predictions": ["\u2581// \u2581 New Approve rs \u2581returns \u2581a \u2581 Approve rs \u2581that \u2581 approve s \u2581the \u2581 data \u2581 class \u2581with \u2581the \u2581given \u2581 class ."], "references": ["\u2581// \u2581 New Approve rs \u2581create \u2581a \u2581new \u2581\" Approve rs \" \u2581with \u2581no \u2581 approval ."], "bleu": 0.22152121615450707, "rouge_l": 0.5424413904607922}
{"id": 1350, "predictions": ["\u2581// \u2581release Note From Parent Parent \u2581 releases \u2581the \u2581 status \u2581of \u2581a \u2581parent \u2581node"], "references": ["\u2581// \u2581release Note Note From Parent PR \u2581gets \u2581the \u2581release \u2581note \u2581from \u2581the \u2581// \u2581parent \u2581 PR \u2581and \u2581formats \u2581it \u2581as \u2581per \u2581the \u2581 PR \u2581template \u2581so \u2581that \u2581// \u2581it"], "bleu": 0.09320795658207887, "rouge_l": 0.3353951890034364}
{"id": 675, "predictions": ["\u2581// \u2581Set \u2581implements \u2581the \u2581 Write \u2581method ."], "references": ["\u2581// \u2581Set \u2581is \u2581equivalent \u2581of \u2581 Txn . Set With Meta ."], "bleu": 0.14544785215055717, "rouge_l": 0.3860759493670886}
{"id": 1234, "predictions": ["\u2581// \u2581serve \u2581starts \u2581a \u2581new \u2581 Discovery \u2581 Handler ."], "references": ["\u2581// \u2581serve \u2581starts \u2581a \u2581http \u2581server \u2581and \u2581serves \u2581 Jenkins \u2581logs \u2581// \u2581and \u2581prometheus \u2581metrics . \u2581 Mean t \u2581to \u2581be \u2581called \u2581inside \u2581// \u2581a \u2581goroutine ."], "bleu": 0.07208474932651332, "rouge_l": 0.3494271685761047}
{"id": 663, "predictions": ["\u2581// \u2581 New Merge Iterator \u2581returns \u2581a \u2581new \u2581 Merge Iterator \u2581for \u2581the \u2581given \u2581 iterator ."], "references": ["\u2581// \u2581 New Merge Iterator \u2581returns \u2581a \u2581new \u2581 Merge Iterator \u2581from \u2581a \u2581list \u2581of \u2581 Iterators ."], "bleu": 0.6214567454048219, "rouge_l": 0.7390493942218079}
{"id": 202, "predictions": ["\u2581// \u2581 Visit \u2581 - \u2581 collect s \u2581all \u2581the \u2581 Interval \u2581and \u2581 add \u2581them \u2581to \u2581the \u2581 Interval Tree"], "references": ["\u2581// \u2581 Visit \u2581calls \u2581a \u2581visitor \u2581function \u2581on \u2581every \u2581tree \u2581node \u2581 intersect ing \u2581the \u2581given \u2581interval . \u2581// \u2581It \u2581will \u2581visit \u2581each \u2581interval \u2581 [ x , \u2581 y"], "bleu": 0.08376791574635366, "rouge_l": 0.26604361370716506}
{"id": 1368, "predictions": ["\u2581// \u2581Set Items \u2581sets \u2581the \u2581 slice \u2581of \u2581all \u2581 Resources \u2581in \u2581the \u2581 Resources ."], "references": ["\u2581// \u2581Set Items \u2581implements \u2581the \u2581 Collection \u2581interface"], "bleu": 0.1702602472176709, "rouge_l": 0.4433139534883721}
{"id": 1352, "predictions": ["\u2581// \u2581 Payload Signature \u2581returns \u2581the \u2581 SHA 1 \u2581 SHA 1 \u2581of \u2581the \u2581payload"], "references": ["\u2581// \u2581 Payload Signature \u2581returns \u2581the \u2581signature \u2581that \u2581matches \u2581the \u2581payload ."], "bleu": 0.41211837513230265, "rouge_l": 0.6047087980173481}
{"id": 1300, "predictions": ["\u2581// \u2581 Job ChildNodes \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581job \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Job Parameterized \u2581tells \u2581 us \u2581if \u2581the \u2581 Jenkins \u2581job \u2581for \u2581 this \u2581 ProwJob \u2581is \u2581parameterized"], "bleu": 0.1431990235713969, "rouge_l": 0.4231912784935579}
{"id": 1451, "predictions": ["\u2581// \u2581kill \u2581returns \u2581a \u2581new \u2581 label \u2581with \u2581the \u2581given \u2581 label ."], "references": ["\u2581// \u2581 Delete \u2581the \u2581 label"], "bleu": 0.14949751774990683, "rouge_l": 0.5637707948243993}
{"id": 1452, "predictions": ["\u2581// \u2581create \u2581creates \u2581a \u2581new \u2581 label \u2581with \u2581the \u2581given \u2581 label ."], "references": ["\u2581// \u2581Create \u2581the \u2581 label"], "bleu": 0.14283632578659286, "rouge_l": 0.48316831683168315}
{"id": 1294, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 data \u2581associated \u2581with \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Get \u2581fetches \u2581the \u2581 data \u2581found \u2581in \u2581the \u2581provided \u2581 path . \u2581It \u2581returns \u2581the \u2581// \u2581 content \u2581of \u2581the \u2581response \u2581or \u2581any \u2581errors \u2581that \u2581occurred \u2581during \u2581the \u2581//"], "bleu": 0.08468726587584126, "rouge_l": 0.3907473309608541}
{"id": 310, "predictions": ["\u2581// \u2581broadcast Response \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581broadcast \u2581the \u2581response \u2581to \u2581the \u2581// \u2581 watch ."], "references": ["\u2581// \u2581broadcast Response \u2581send \u2581a \u2581 watch \u2581response \u2581to \u2581all \u2581 watch \u2581sub streams ."], "bleu": 0.194086232706272, "rouge_l": 0.6161616161616161}
{"id": 429, "predictions": ["\u2581// \u2581 Pick Peer URL \u2581returns \u2581the \u2581 URL \u2581of \u2581the \u2581peer \u2581to \u2581use \u2581for \u2581a \u2581peer ."], "references": ["\u2581// \u2581 Pick Peer URL \u2581choose s \u2581a \u2581random \u2581address \u2581from \u2581a \u2581given \u2581 Member ' s \u2581 Peer URLs . \u2581// \u2581It \u2581will \u2581panic \u2581if \u2581there \u2581is \u2581no \u2581"], "bleu": 0.14171637433407022, "rouge_l": 0.2790849673202615}
{"id": 1239, "predictions": ["\u2581// \u2581 Sync Config \u2581 synchronize s \u2581the \u2581 config \u2581file \u2581and \u2581updates \u2581the \u2581 config ."], "references": ["\u2581// \u2581 Sync Config \u2581updates \u2581resource \u2581list \u2581from \u2581a \u2581file"], "bleu": 0.2186976686325118, "rouge_l": 0.3885350318471337}
{"id": 1091, "predictions": ["\u2581// \u2581 Is Member \u2581returns \u2581true \u2581if \u2581the \u2581user \u2581is \u2581a \u2581member \u2581of \u2581the \u2581 org"], "references": ["\u2581// \u2581 Is Member \u2581returns \u2581true \u2581if \u2581user \u2581is \u2581in \u2581 org ."], "bleu": 0.4880217780091719, "rouge_l": 0.7730414746543779}
{"id": 1790, "predictions": ["\u2581// \u2581 Render \u2581renders \u2581the \u2581 contents \u2581of \u2581 this \u2581prefix \u2581and \u2581 uploads \u2581them \u2581to \u2581 render ."], "references": ["\u2581// \u2581 Render \u2581writes \u2581HTML \u2581representing \u2581 this \u2581 Prefix \u2581to \u2581the \u2581provided \u2581output ."], "bleu": 0.16195570128532405, "rouge_l": 0.48078817733990153}
{"id": 1213, "predictions": ["\u2581// \u2581 Checkout \u2581 checkout s \u2581the \u2581repo \u2581in \u2581the \u2581repository ."], "references": ["\u2581// \u2581 Checkout \u2581does \u2581 git \u2581 checkout ."], "bleu": 0.23901088824528133, "rouge_l": 0.5865384615384615}
{"id": 502, "predictions": ["\u2581// \u2581 Clear \u2581removes \u2581the \u2581 size \u2581of \u2581the \u2581queue ."], "references": ["\u2581// \u2581 Clear \u2581function \u2581 clear \u2581up \u2581the \u2581stats Queue"], "bleu": 0.23462350320527994, "rouge_l": 0.4803149606299213}
{"id": 1866, "predictions": ["\u2581// \u2581Extract \u2581extracts \u2581the \u2581 username \u2581from \u2581the \u2581 form \u2581of \u2581 data"], "references": ["\u2581// \u2581Extract \u2581 unmarshall s \u2581a \u2581string \u2581a \u2581given \u2581struct \u2581if \u2581it \u2581 exists"], "bleu": 0.1322608782946588, "rouge_l": 0.2943305186972256}
{"id": 1634, "predictions": ["\u2581// \u2581has \u2581a \u2581 set \u2581of \u2581pull ing \u2581for \u2581a \u2581request \u2581to \u2581be \u2581updated"], "references": ["\u2581// \u2581has PR Changed \u2581indicates \u2581that \u2581the \u2581 code \u2581diff \u2581may \u2581have \u2581changed ."], "bleu": 0.1250076305588977, "rouge_l": 0.21428571428571427}
{"id": 1580, "predictions": ["\u2581// \u2581 New New Informer \u2581constructs \u2581a \u2581new \u2581 informer \u2581for \u2581 get \u2581 type . \u2581// \u2581Always \u2581prefer \u2581using \u2581an \u2581 informer \u2581factory \u2581to \u2581 get \u2581a \u2581shared \u2581"], "references": ["\u2581// \u2581 New ProwJob Informer \u2581constructs \u2581a \u2581new \u2581 informer \u2581for \u2581 ProwJob \u2581 type . \u2581// \u2581Always \u2581prefer \u2581using \u2581an \u2581 informer \u2581factory \u2581to \u2581 get \u2581a \u2581shared \u2581"], "bleu": 0.8232325806433648, "rouge_l": 0.9333333333333336}
{"id": 16, "predictions": ["\u2581// \u2581 Enqueue \u2581adds \u2581a \u2581new \u2581item \u2581to \u2581the \u2581queue ."], "references": ["\u2581// \u2581 Enqueue \u2581puts \u2581a \u2581value \u2581into \u2581a \u2581queue \u2581with \u2581a \u2581given \u2581priority ."], "bleu": 0.18563688094442687, "rouge_l": 0.4698331193838254}
{"id": 974, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581error \u2581 status \u2581for \u2581the \u2581 status ."], "references": ["\u2581// \u2581Get \u2581a \u2581registered \u2581 ErrorHandler \u2581for \u2581 this \u2581 status \u2581 code . \u2581If \u2581// \u2581no \u2581 ErrorHandler \u2581has \u2581been \u2581registered , \u2581a \u2581default \u2581one \u2581will \u2581// \u2581be \u2581returned"], "bleu": 0.0431500960424793, "rouge_l": 0.30942028985507253}
{"id": 698, "predictions": ["\u2581// \u2581Set With Meta \u2581sets \u2581the \u2581 meta \u2581 data \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Set With Meta \u2581adds \u2581a \u2581 key - value \u2581pair \u2581to \u2581the \u2581database , \u2581along \u2581with \u2581a \u2581metadata \u2581// \u2581 byte . \u2581// \u2581// \u2581This \u2581 byte \u2581is \u2581stored"], "bleu": 0.1149274481183857, "rouge_l": 0.32972972972972975}
{"id": 1710, "predictions": ["\u2581// \u2581 New Explicit Repo Path Builder \u2581creates \u2581a \u2581new \u2581 Explicit Repo Path Builder ."], "references": ["\u2581// \u2581 New Explicit Repo Path Builder \u2581returns \u2581a \u2581builder \u2581that \u2581handles \u2581the \u2581 path \u2581encoding \u2581// \u2581where \u2581a \u2581 path \u2581will \u2581always \u2581have \u2581an \u2581explicit \u2581\" org _ repo"], "bleu": 0.1825366611125243, "rouge_l": 0.370945945945946}
{"id": 727, "predictions": ["\u2581// \u2581 Finish \u2581 flush es \u2581the \u2581 Throttle \u2581 status \u2581from \u2581the \u2581 Throttle ."], "references": ["\u2581// \u2581 Finish \u2581waits \u2581until \u2581all \u2581workers \u2581have \u2581finished \u2581working . \u2581It \u2581would \u2581return \u2581any \u2581// \u2581error \u2581passed \u2581by \u2581 Done ."], "bleu": 0.1088975589689416, "rouge_l": 0.2558724832214765}
{"id": 1317, "predictions": ["\u2581// \u2581 Format Response \u2581formats \u2581a \u2581message ."], "references": ["\u2581// \u2581 Format Response \u2581nicely \u2581formats \u2581a \u2581response \u2581to \u2581a \u2581generic \u2581reason ."], "bleu": 0.2841013598855867, "rouge_l": 0.6392215568862274}
{"id": 1333, "predictions": ["\u2581// \u2581 Comment Prune r \u2581returns \u2581a \u2581 shallow \u2581copy \u2581of \u2581the \u2581 comment ."], "references": ["\u2581// \u2581 Comment Prune r \u2581will \u2581return \u2581the \u2581 comment prune r . Event Client \u2581attached \u2581to \u2581the \u2581agent \u2581or \u2581an \u2581error \u2581// \u2581if \u2581one \u2581is \u2581not \u2581attached ."], "bleu": 0.15484070887811865, "rouge_l": 0.386892177589852}
{"id": 728, "predictions": ["\u2581// \u2581Set Discard T s \u2581sets \u2581the \u2581 T s \u2581field \u2581of \u2581the \u2581database ."], "references": ["\u2581// \u2581Set Discard T s \u2581sets \u2581a \u2581timestamp \u2581at \u2581or \u2581below \u2581which , \u2581any \u2581invalid \u2581or \u2581deleted \u2581// \u2581versions \u2581can \u2581be \u2581discard ed \u2581from \u2581the \u2581 L SM \u2581tree ,"], "bleu": 0.15160987754015434, "rouge_l": 0.3353951890034364}
{"id": 770, "predictions": ["\u2581// \u2581 Prev \u2581returns \u2581the \u2581next \u2581 iterator ."], "references": ["\u2581// \u2581 Prev \u2581advance s \u2581to \u2581the \u2581previous \u2581position ."], "bleu": 0.2601435417217584, "rouge_l": 0.5213675213675214}
{"id": 1636, "predictions": ["\u2581// \u2581handle Review Event \u2581handles \u2581a \u2581 Review \u2581event ."], "references": ["\u2581// \u2581handle Review Event \u2581should \u2581only \u2581handle \u2581 reviews \u2581that \u2581have \u2581no \u2581 approval \u2581command . \u2581// \u2581 Review s \u2581with \u2581 approval \u2581commands \u2581will \u2581be \u2581handled \u2581by \u2581handle Generic"], "bleu": 0.05646541848850381, "rouge_l": 0.27518796992481204}
{"id": 1611, "predictions": ["\u2581// \u2581Set Credentials \u2581sets \u2581the \u2581credentials \u2581for \u2581the \u2581client ."], "references": ["\u2581// \u2581Set Credentials \u2581sets \u2581credentials \u2581in \u2581the \u2581client \u2581to \u2581be \u2581used \u2581for \u2581pushing \u2581to \u2581// \u2581or \u2581pull ing \u2581from \u2581remote \u2581 repositories ."], "bleu": 0.12023092594977092, "rouge_l": 0.4526901669758812}
{"id": 2020, "predictions": ["\u2581// \u2581 Raw Operation \u2581is \u2581a \u2581method \u2581for \u2581 Raw Operation . Raw Operation"], "references": ["\u2581// \u2581 Raw Operation \u2581allows \u2581direct \u2581querying \u2581of \u2581a \u2581 LXD \u2581API \u2581endpoint \u2581returning \u2581// \u2581background \u2581operations ."], "bleu": 0.20792427518059642, "rouge_l": 0.42785571142284573}
{"id": 415, "predictions": ["\u2581// \u2581 RemoteAddr To Quorum Since \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 raft \u2581request \u2581is \u2581 deployed \u2581// \u2581by \u2581the \u2581given \u2581 raft . Transport er ."], "references": ["\u2581// \u2581 isConnected To Quorum Since \u2581checks \u2581whether \u2581the \u2581local \u2581member \u2581is \u2581connected \u2581to \u2581the \u2581// \u2581 quorum \u2581of \u2581the \u2581cluster \u2581since \u2581the \u2581given \u2581time ."], "bleu": 0.12753431387594827, "rouge_l": 0.41651148355058976}
{"id": 446, "predictions": ["\u2581// \u2581new GRPC Proxy Command \u2581returns \u2581a \u2581new \u2581 cobra . Command \u2581for \u2581` kubeadm Proxy `"], "references": ["\u2581// \u2581new GRPC Proxy Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" grpc - proxy \" ."], "bleu": 0.38053710786825434, "rouge_l": 0.5294117647058824}
{"id": 314, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 watch \u2581a \u2581progress \u2581request ."], "references": ["\u2581// \u2581to PB \u2581converts \u2581an \u2581internal \u2581progress \u2581request \u2581structure \u2581to \u2581its \u2581 protobuf \u2581 Watch Request \u2581structure ."], "bleu": 0.1013810231225, "rouge_l": 0.33044420368364036}
{"id": 1948, "predictions": ["\u2581// \u2581 Image Uploaded At \u2581returns \u2581the \u2581image \u2581 contents \u2581of \u2581the \u2581 Cluster \u2581image ."], "references": ["\u2581// \u2581 Image Uploaded At \u2581updates \u2581the \u2581upload _ date \u2581column \u2581and \u2581an \u2581image \u2581row ."], "bleu": 0.31181814978096556, "rouge_l": 0.5}
{"id": 1, "predictions": ["\u2581// \u2581first \u2581returns \u2581the \u2581first \u2581element \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581first \u2581returns \u2581the \u2581store \u2581revision \u2581from \u2581the \u2581first \u2581fetch"], "bleu": 0.3646285861936466, "rouge_l": 0.4803149606299213}
{"id": 116, "predictions": ["\u2581// \u2581Parse WithDefault s \u2581 - \u2581parses \u2581the \u2581 map \u2581of \u2581arguments \u2581and \u2581returns \u2581the \u2581 set \u2581of \u2581arguments"], "references": ["\u2581// \u2581Parse WithDefault s \u2581will \u2581load \u2581options \u2581from \u2581the \u2581specified \u2581 map \u2581or \u2581 set \u2581defaults \u2581where \u2581appropriate"], "bleu": 0.23588448106534207, "rouge_l": 0.48886910062333044}
{"id": 958, "predictions": ["\u2581// \u2581random Timeout \u2581returns \u2581a \u2581channel \u2581that \u2581will \u2581 set \u2581the \u2581time \u2581of \u2581the \u2581given \u2581time ."], "references": ["\u2581// \u2581random Timeout \u2581returns \u2581a \u2581value \u2581that \u2581is \u2581between \u2581the \u2581 min Val \u2581and \u2581 2 x \u2581 min Val ."], "bleu": 0.2376116382483289, "rouge_l": 0.4132091447925486}
{"id": 1372, "predictions": ["\u2581// \u2581 Has Label \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 label \u2581 exists \u2581in \u2581the \u2581issue ."], "references": ["\u2581// \u2581 Has Label \u2581checks \u2581if \u2581an \u2581issue \u2581has \u2581a \u2581given \u2581 label ."], "bleu": 0.29118923373789324, "rouge_l": 0.5909580193756728}
{"id": 1252, "predictions": ["\u2581// \u2581Configure Client \u2581returns \u2581the \u2581 \u2581authenticated \u2581client \u2581for \u2581the \u2581GitHub \u2581API"], "references": ["\u2581// \u2581GitHub Client \u2581returns \u2581a \u2581GitHub \u2581client ."], "bleu": 0.16261701715194898, "rouge_l": 0.4149659863945578}
{"id": 853, "predictions": ["\u2581// \u2581 New Observer \u2581returns \u2581a \u2581new \u2581 Observer \u2581that \u2581will \u2581receive \u2581a \u2581channel \u2581// \u2581channel \u2581to \u2581be \u2581closed \u2581when \u2581the \u2581channel \u2581is \u2581closed ."], "references": ["\u2581// \u2581 New Observer \u2581creates \u2581a \u2581new \u2581observer \u2581that \u2581can \u2581be \u2581registered \u2581// \u2581to \u2581make \u2581 observations \u2581on \u2581a \u2581 Raft \u2581instance . \u2581 Observation s \u2581// \u2581will \u2581be \u2581sent"], "bleu": 0.15407462645073478, "rouge_l": 0.3577712609970674}
{"id": 841, "predictions": ["\u2581// \u2581 get Conn From Address Provider \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581address \u2581of \u2581the \u2581given \u2581// \u2581target \u2581provider ."], "references": ["\u2581// \u2581 get Conn From Address Provider \u2581returns \u2581a \u2581connection \u2581from \u2581the \u2581server \u2581address \u2581provider \u2581if \u2581available , \u2581or \u2581defaults \u2581to \u2581a \u2581connection \u2581using \u2581the \u2581target \u2581server \u2581address"], "bleu": 0.29011553992328293, "rouge_l": 0.48541114058355433}
{"id": 626, "predictions": ["\u2581// \u2581 Tick \u2581is \u2581called \u2581when \u2581the \u2581node \u2581is \u2581 alive ."], "references": ["\u2581// \u2581 Tick \u2581 increments \u2581the \u2581internal \u2581logical \u2581clock \u2581for \u2581 this \u2581 Node . \u2581 Election \u2581timeout s \u2581// \u2581and \u2581heartbeat \u2581timeout s \u2581are \u2581in \u2581units \u2581of \u2581 ticks"], "bleu": 0.04962965758858181, "rouge_l": 0.26521739130434785}
{"id": 726, "predictions": ["\u2581// \u2581 Done \u2581is \u2581called \u2581when \u2581the \u2581 Throttle \u2581is \u2581 Done ."], "references": ["\u2581// \u2581 Done \u2581should \u2581be \u2581called \u2581by \u2581workers \u2581when \u2581they \u2581finish \u2581working . \u2581They \u2581can \u2581also \u2581// \u2581pass \u2581the \u2581error \u2581 status \u2581of \u2581work \u2581done ."], "bleu": 0.08010186508077469, "rouge_l": 0.38699444885011897}
{"id": 963, "predictions": ["\u2581// \u2581new Apply Source \u2581creates \u2581a \u2581new \u2581Apply Source \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581new Apply Source \u2581will \u2581create \u2581a \u2581new \u2581source , \u2581any \u2581source \u2581created \u2581with \u2581the \u2581same \u2581seed \u2581will \u2581generate \u2581the \u2581same \u2581sequence \u2581of \u2581 data ."], "bleu": 0.14820761515561184, "rouge_l": 0.4652936689549962}
{"id": 521, "predictions": ["\u2581// \u2581Get Cluster From Remote Peers \u2581returns \u2581a \u2581 Raft \u2581cluster \u2581from \u2581the \u2581given \u2581// \u2581 Remote Peers ."], "references": ["\u2581// \u2581Get Cluster From Remote Peers \u2581takes \u2581a \u2581 set \u2581of \u2581URLs \u2581representing \u2581etcd \u2581peers , \u2581and \u2581// \u2581attempts \u2581to \u2581construct \u2581a \u2581 Cluster \u2581by \u2581accessing \u2581the \u2581members \u2581endpoint \u2581on"], "bleu": 0.1943199621655675, "rouge_l": 0.392282958199357}
{"id": 1145, "predictions": ["\u2581// \u2581 Watch \u2581returns \u2581a \u2581 watch . Interface \u2581that \u2581 watches \u2581the \u2581requested \u2581 oAuth \u2581 doc ."], "references": ["\u2581// \u2581 Watch \u2581returns \u2581a \u2581 watch . Interface \u2581that \u2581 watches \u2581the \u2581requested \u2581 p row Jobs ."], "bleu": 0.794834366062997, "rouge_l": 0.8421052631578947}
{"id": 1485, "predictions": ["\u2581// \u2581 Empty \u2581returns \u2581true \u2581if \u2581the \u2581 config \u2581is \u2581 empty ."], "references": ["\u2581// \u2581 Empty \u2581checks \u2581if \u2581a \u2581Simple Config \u2581could \u2581be \u2581considered \u2581 empty"], "bleu": 0.21972813874997157, "rouge_l": 0.4615384615384617}
{"id": 362, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581the \u2581 File Pipeline \u2581and \u2581returns \u2581the \u2581file ."], "references": ["\u2581// \u2581 Open \u2581returns \u2581a \u2581fresh \u2581file \u2581for \u2581writing . \u2581 Rename \u2581the \u2581file \u2581before \u2581calling \u2581// \u2581 Open \u2581again \u2581or \u2581there \u2581will \u2581be \u2581file \u2581collision s ."], "bleu": 0.08177904630538547, "rouge_l": 0.31443298969072164}
{"id": 806, "predictions": ["\u2581// \u2581 getNode Offset \u2581returns \u2581the \u2581offset \u2581of \u2581the \u2581given \u2581node ."], "references": ["\u2581// \u2581 getNode Offset \u2581returns \u2581the \u2581offset \u2581of \u2581node \u2581in \u2581the \u2581aren a . \u2581If \u2581the \u2581node \u2581pointer \u2581is \u2581// \u2581nil , \u2581then \u2581the \u2581zero \u2581offset \u2581is \u2581returned ."], "bleu": 0.16884970023431084, "rouge_l": 0.49925595238095233}
{"id": 707, "predictions": ["\u2581// \u2581 New Iterator \u2581returns \u2581a \u2581new \u2581 iterator \u2581over \u2581the \u2581 table ."], "references": ["\u2581// \u2581 New Iterator \u2581returns \u2581a \u2581new \u2581 iterator \u2581of \u2581the \u2581 Table"], "bleu": 0.6729864884660303, "rouge_l": 0.8202933985330073}
{"id": 1095, "predictions": ["\u2581// \u2581 List Issue Events \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 repositories \u2581for \u2581a \u2581repository ."], "references": ["\u2581// \u2581 List Issue Events \u2581returns \u2581issue \u2581events"], "bleu": 0.34823528327578535, "rouge_l": 0.5319767441860466}
{"id": 1865, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581 - \u2581decodes \u2581JSON \u2581 data \u2581to \u2581 UserData"], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581JSON \u2581 Unmarshaler \u2581interface"], "bleu": 0.18850319022747347, "rouge_l": 0.4629981024667932}
{"id": 869, "predictions": ["\u2581// \u2581 Connect \u2581connects \u2581to \u2581the \u2581given \u2581peer ."], "references": ["\u2581// \u2581 Connect \u2581is \u2581used \u2581to \u2581 connect \u2581 this \u2581transport \u2581to \u2581another \u2581transport \u2581for \u2581// \u2581a \u2581given \u2581peer \u2581 name . \u2581This \u2581allows \u2581for \u2581local \u2581routing ."], "bleu": 0.04065307986029126, "rouge_l": 0.3463098134630982}
{"id": 929, "predictions": ["\u2581// \u2581 decode Configuration \u2581decodes \u2581the \u2581 Configuration \u2581from \u2581a \u2581 byte \u2581array ."], "references": ["\u2581// \u2581 decode Configuration \u2581deserialize s \u2581a \u2581 Configuration \u2581using \u2581 Msg Pack , \u2581or \u2581panic s \u2581on \u2581// \u2581errors ."], "bleu": 0.19637780931708043, "rouge_l": 0.4412296564195298}
{"id": 2016, "predictions": ["\u2581// \u2581Get HTTPClient \u2581returns \u2581the \u2581 Client ' s \u2581http \u2581client"], "references": ["\u2581// \u2581Get HTTPClient \u2581returns \u2581the \u2581http \u2581client \u2581used \u2581for \u2581the \u2581connection . \u2581This \u2581can \u2581be \u2581used \u2581to \u2581 set \u2581custom \u2581http \u2581options ."], "bleu": 0.16233562704120805, "rouge_l": 0.3871260199456029}
{"id": 1937, "predictions": ["\u2581// \u2581 Image Alias Rename \u2581rename s \u2581an \u2581image \u2581 alias \u2581for \u2581a \u2581cluster ."], "references": ["\u2581// \u2581 Image Alias Rename \u2581rename s \u2581the \u2581 alias \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.4638497841458681, "rouge_l": 0.6414300736067298}
{"id": 749, "predictions": ["\u2581// \u2581 Begin Many \u2581 marks \u2581the \u2581passed \u2581in \u2581 slice \u2581of \u2581 items \u2581to \u2581the \u2581 left \u2581 mark ."], "references": ["\u2581// \u2581 Begin Many \u2581works \u2581like \u2581 Begin \u2581but \u2581accepts \u2581multiple \u2581indices ."], "bleu": 0.1758818104423743, "rouge_l": 0.3685800604229607}
{"id": 725, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Throttle . Throttle ."], "references": ["\u2581// \u2581Do \u2581should \u2581be \u2581called \u2581by \u2581workers \u2581before \u2581they \u2581start \u2581working . \u2581It \u2581blocks \u2581if \u2581there \u2581// \u2581are \u2581already \u2581maximum \u2581number \u2581of \u2581workers \u2581working . \u2581If \u2581it \u2581detect s \u2581an"], "bleu": 0.020466264135212756, "rouge_l": 0.18697318007662836}
{"id": 1780, "predictions": ["\u2581// \u2581Set Items \u2581sets \u2581the \u2581 Items \u2581in \u2581the \u2581list \u2581of \u2581objects ."], "references": ["\u2581// \u2581Set Items \u2581implements \u2581 Collection \u2581interface"], "bleu": 0.18798317647335086, "rouge_l": 0.42287694974003465}
{"id": 358, "predictions": ["\u2581// \u2581 IsDir Writeable \u2581returns \u2581a \u2581 dir \u2581of \u2581 dir \u2581 dir"], "references": ["\u2581// \u2581 IsDir Writeable \u2581checks \u2581if \u2581 dir \u2581is \u2581writable \u2581by \u2581writing \u2581and \u2581removing \u2581a \u2581file \u2581// \u2581to \u2581 dir . \u2581It \u2581returns \u2581nil \u2581if \u2581 dir \u2581is \u2581writable ."], "bleu": 0.10500579748858369, "rouge_l": 0.43416370106761565}
{"id": 1370, "predictions": ["\u2581// \u2581 Is Assignee \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 login \u2581 key \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Is Assignee \u2581checks \u2581if \u2581a \u2581user \u2581is \u2581assigned \u2581to \u2581the \u2581issue ."], "bleu": 0.23287896954139942, "rouge_l": 0.45963401506996776}
{"id": 1307, "predictions": ["\u2581// \u2581 Pre submit To Job Spec \u2581creates \u2581a \u2581 pre submit s \u2581job \u2581spec \u2581to \u2581the \u2581 Job Spec"], "references": ["\u2581// \u2581 Pre submit To Job Spec \u2581generates \u2581a \u2581down ward api . Job Spec \u2581out \u2581of \u2581a \u2581 Pre submit . \u2581// \u2581 Useful \u2581for \u2581fig u ring \u2581out"], "bleu": 0.24429065833883648, "rouge_l": 0.42468354430379746}
{"id": 617, "predictions": ["\u2581// \u2581 Ready \u2581returns \u2581the \u2581 Ready \u2581node ."], "references": ["\u2581// \u2581 Ready \u2581returns \u2581the \u2581current \u2581point - in - time \u2581state \u2581of \u2581 this \u2581 Raw Node ."], "bleu": 0.18287454175969, "rouge_l": 0.46974697469746973}
{"id": 1308, "predictions": ["\u2581// \u2581 Post submit To Job Spec \u2581adds \u2581a \u2581 submit s \u2581to \u2581the \u2581 post ing \u2581API \u2581spec"], "references": ["\u2581// \u2581 Post submit To Job Spec \u2581generates \u2581a \u2581down ward api . Job Spec \u2581out \u2581of \u2581a \u2581 Post submit . \u2581// \u2581 Useful \u2581for \u2581fig u ring \u2581out"], "bleu": 0.22235055547961596, "rouge_l": 0.4315112540192926}
{"id": 473, "predictions": ["\u2581// \u2581 getUint 64 \u2581decodes \u2581the \u2581 key \u2581value \u2581into \u2581a \u2581 key"], "references": ["\u2581// \u2581 getUint 64 \u2581extracts \u2581a \u2581uint 64 \u2581by \u2581the \u2581given \u2581 key \u2581from \u2581a \u2581 Form . \u2581If \u2581the \u2581 key \u2581does \u2581// \u2581not \u2581exist \u2581in \u2581the \u2581 form"], "bleu": 0.11189438193249085, "rouge_l": 0.43416370106761565}
{"id": 1014, "predictions": ["\u2581// \u2581 Embed Reader \u2581 Embed s \u2581a \u2581 Message \u2581object \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Embed Reader \u2581 embeds \u2581the \u2581images \u2581to \u2581the \u2581 email ."], "bleu": 0.2680165156355778, "rouge_l": 0.4651416122004358}
{"id": 1939, "predictions": ["\u2581// \u2581 Image Aliases Move \u2581returns \u2581the \u2581 src \u2581 aliases \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Image Aliases Move \u2581changes \u2581the \u2581image \u2581 ID \u2581associated \u2581with \u2581an \u2581 alias ."], "bleu": 0.3202684734296277, "rouge_l": 0.5772870662460569}
{"id": 734, "predictions": ["\u2581// \u2581 Backup \u2581writes \u2581a \u2581 DB \u2581to \u2581the \u2581given \u2581io . Writer ."], "references": ["\u2581// \u2581 Backup \u2581is \u2581a \u2581wrapper \u2581function \u2581over \u2581 Stream . Backup \u2581to \u2581generate \u2581full \u2581and \u2581 incremental \u2581 backups \u2581of \u2581the \u2581// \u2581 DB . \u2581 For \u2581more \u2581control"], "bleu": 0.07260192635199665, "rouge_l": 0.3412587412587413}
{"id": 1012, "predictions": ["\u2581// \u2581 Attach Reader \u2581 attaches \u2581a \u2581 Message \u2581to \u2581a \u2581 protobuf \u2581message ."], "references": ["\u2581// \u2581 Attach Reader \u2581 attaches \u2581a \u2581file \u2581using \u2581an \u2581io . Reader"], "bleu": 0.45608395453519407, "rouge_l": 0.5788849347568209}
{"id": 1516, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581a \u2581 org \u2581and \u2581 format ."], "references": ["\u2581// \u2581Set \u2581parses \u2581out \u2581overrides \u2581from \u2581user \u2581input"], "bleu": 0.12571192676522522, "rouge_l": 0.19902120717781402}
{"id": 9, "predictions": ["\u2581// \u2581 Resume \u2581 resume s \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Resume \u2581 resume s \u2581a \u2581 paused \u2581peer ."], "bleu": 0.5662068475521798, "rouge_l": 0.7858293075684382}
{"id": 449, "predictions": ["\u2581// \u2581 New Member Remove Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Member Remove Command ."], "references": ["\u2581// \u2581 New Member Remove Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" member \u2581 remove \" ."], "bleu": 0.38643011460763615, "rouge_l": 0.523854961832061}
{"id": 8, "predictions": ["\u2581// \u2581 Pause \u2581 pause s \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Pause \u2581 pause s \u2581the \u2581peer . \u2581The \u2581peer \u2581will \u2581simply \u2581drop s \u2581all \u2581incoming \u2581// \u2581messages \u2581without \u2581returning \u2581an \u2581error ."], "bleu": 0.18887560283756186, "rouge_l": 0.5041322314049587}
{"id": 1262, "predictions": ["\u2581// \u2581 Jobs \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 Job ."], "references": ["\u2581// \u2581 Jobs \u2581returns \u2581a \u2581thread - safe \u2581snapshot \u2581of \u2581the \u2581current \u2581job \u2581state ."], "bleu": 0.335942055494089, "rouge_l": 0.5987730061349694}
{"id": 401, "predictions": ["\u2581// \u2581must Int 64 \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581value \u2581in \u2581the \u2581 Int 64 \u2581value , \u2581or \u2581panic s \u2581if \u2581// \u2581the \u2581value \u2581is \u2581not \u2581a \u2581 64. \u2581If"], "references": ["\u2581// \u2581must Int 64 \u2581panic s \u2581if \u2581val \u2581isn ' t \u2581an \u2581int \u2581or \u2581int 64. \u2581It \u2581returns \u2581an \u2581int 64 \u2581otherwise ."], "bleu": 0.16618655166630525, "rouge_l": 0.3092522179974651}
{"id": 670, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581all \u2581 iterator s \u2581and \u2581closes \u2581all \u2581 iterator s ."], "references": ["\u2581// \u2581 Close \u2581implements \u2581 y . Iterator"], "bleu": 0.16943571815930883, "rouge_l": 0.46003016591251883}
{"id": 1649, "predictions": ["\u2581// \u2581 Serve Ready \u2581starts \u2581the \u2581health \u2581of \u2581the \u2581health \u2581check ."], "references": ["\u2581// \u2581 Serve Ready \u2581starts \u2581 serving \u2581the \u2581read iness \u2581endpoint"], "bleu": 0.39553325358771796, "rouge_l": 0.5258620689655172}
{"id": 1408, "predictions": ["\u2581// \u2581 New Dashboard Agent \u2581creates \u2581a \u2581new \u2581 dashboard"], "references": ["\u2581// \u2581 New Dashboard Agent \u2581creates \u2581a \u2581new \u2581user \u2581 dashboard \u2581agent \u2581 ."], "bleu": 0.570587210774904, "rouge_l": 0.8090185676392573}
{"id": 1972, "predictions": ["\u2581// \u2581 Network Update Description \u2581updates \u2581the \u2581 description \u2581of \u2581a \u2581 table ."], "references": ["\u2581// \u2581 Network Update Description \u2581updates \u2581the \u2581 description \u2581of \u2581the \u2581network \u2581with \u2581the \u2581// \u2581given \u2581 ID ."], "bleu": 0.5115379006506957, "rouge_l": 0.7079303675048355}
{"id": 978, "predictions": ["\u2581// \u2581 WriteTo \u2581implements \u2581io . Writer To \u2581interface . \u2581It \u2581serialize s \u2581the \u2581message \u2581// \u2581into \u2581the \u2581wire \u2581 format ."], "references": ["\u2581// \u2581 WriteTo \u2581implements \u2581io . Writer To . \u2581It \u2581 dumps \u2581the \u2581whole \u2581message \u2581into \u2581 w ."], "bleu": 0.41072675483179805, "rouge_l": 0.7414910858995138}
{"id": 81, "predictions": ["\u2581// \u2581 Op Txn \u2581creates \u2581a \u2581 Op Txn \u2581operation ."], "references": ["\u2581// \u2581 Op Txn \u2581returns \u2581\" txn \" \u2581operation \u2581based \u2581on \u2581given \u2581transaction \u2581conditions ."], "bleu": 0.2397165088338231, "rouge_l": 0.44907975460122695}
{"id": 1660, "predictions": ["\u2581// \u2581prune \u2581deletes \u2581the \u2581 set \u2581of \u2581files ."], "references": ["\u2581// \u2581prune \u2581removes \u2581any \u2581cached \u2581file \u2581changes \u2581that \u2581were \u2581not \u2581used \u2581since \u2581the \u2581last \u2581prune ."], "bleu": 0.0969633851135701, "rouge_l": 0.3046192259675406}
{"id": 866, "predictions": ["\u2581// \u2581Set Uint 64 \u2581 set \u2581the \u2581value \u2581of \u2581a \u2581 key \u2581in \u2581 mem ."], "references": ["\u2581// \u2581Set Uint 64 \u2581implements \u2581the \u2581 Stable Store \u2581interface ."], "bleu": 0.24078435074822624, "rouge_l": 0.53643216080402}
{"id": 715, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Close \u2581implements \u2581 y . Interface ."], "bleu": 0.29150322793751426, "rouge_l": 0.5820610687022901}
{"id": 54, "predictions": ["\u2581// \u2581 b cast Append \u2581 add \u2581a \u2581 raft \u2581 filter \u2581to \u2581the \u2581 raft ."], "references": ["\u2581// \u2581 b cast Append \u2581sends \u2581RPC , \u2581with \u2581entries \u2581to \u2581all \u2581peers \u2581that \u2581are \u2581not \u2581up - to - date \u2581// \u2581according \u2581to \u2581the \u2581progress \u2581recorded \u2581in \u2581 r"], "bleu": 0.1426602692772497, "rouge_l": 0.3242524916943521}
{"id": 621, "predictions": ["\u2581// \u2581 Transfer Leader \u2581 transfers \u2581the \u2581current \u2581leader \u2581of \u2581the \u2581 Raw Node ."], "references": ["\u2581// \u2581 Transfer Leader \u2581tries \u2581to \u2581transfer \u2581 leadership \u2581to \u2581the \u2581given \u2581transfer e e ."], "bleu": 0.24088052235950305, "rouge_l": 0.44900105152471087}
{"id": 1266, "predictions": ["\u2581// \u2581union Strings \u2581returns \u2581a \u2581new \u2581 slice \u2581of \u2581 s \u2581with \u2581the \u2581given \u2581child \u2581 slice ."], "references": ["\u2581// \u2581union Strings \u2581merges \u2581the \u2581parent \u2581and \u2581child \u2581 items \u2581together"], "bleu": 0.1566384057330969, "rouge_l": 0.43262411347517726}
{"id": 928, "predictions": ["\u2581// \u2581 encode Configuration \u2581encodes \u2581a \u2581 Configuration \u2581object \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 encode Configuration \u2581serialize s \u2581a \u2581 Configuration \u2581using \u2581 Msg Pack , \u2581or \u2581panic s \u2581on \u2581// \u2581errors ."], "bleu": 0.22151147758988282, "rouge_l": 0.47491349480968864}
{"id": 960, "predictions": ["\u2581// \u2581 decode Msg Pack \u2581decodes \u2581a \u2581packed \u2581 byte \u2581array \u2581and \u2581decodes \u2581it \u2581into \u2581the \u2581// \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Decode \u2581reverse s \u2581the \u2581 encode \u2581operation \u2581on \u2581a \u2581 byte \u2581 slice \u2581input ."], "bleu": 0.19850823739068116, "rouge_l": 0.4199655765920826}
{"id": 867, "predictions": ["\u2581// \u2581Get Uint 64 \u2581gets \u2581the \u2581uint 64 \u2581value \u2581from \u2581the \u2581 key ."], "references": ["\u2581// \u2581Get Uint 64 \u2581implements \u2581the \u2581 Stable Store \u2581interface ."], "bleu": 0.29256127307315066, "rouge_l": 0.5723860589812332}
{"id": 461, "predictions": ["\u2581// \u2581Remove \u2581removes \u2581the \u2581 watch \u2581from \u2581the \u2581 watch ."], "references": ["\u2581// \u2581Remove \u2581removes \u2581the \u2581watcher \u2581from \u2581watcher Hub \u2581// \u2581The \u2581actual \u2581 remove \u2581function \u2581is \u2581guaranteed \u2581to \u2581only \u2581be \u2581executed \u2581once"], "bleu": 0.13893448158621083, "rouge_l": 0.35499515033947615}
{"id": 1061, "predictions": ["\u2581// \u2581Register Custom Decoder \u2581registers \u2581a \u2581custom \u2581 type \u2581of \u2581custom \u2581custom \u2581decoder"], "references": ["\u2581// \u2581Register Custom Decoder \u2581allows \u2581to \u2581define \u2581custom \u2581 type \u2581 decoders ."], "bleu": 0.35556702356686953, "rouge_l": 0.5384615384615383}
{"id": 1318, "predictions": ["\u2581// \u2581 Format Simple Response \u2581formats \u2581a \u2581string \u2581to \u2581a \u2581human \u2581readable \u2581string ."], "references": ["\u2581// \u2581 Format Simple Response \u2581formats \u2581a \u2581response \u2581that \u2581does \u2581not \u2581 w arr ant \u2581additional \u2581 explanation \u2581in \u2581the \u2581// \u2581details \u2581section ."], "bleu": 0.23992148097731025, "rouge_l": 0.40197693574958815}
{"id": 1784, "predictions": ["\u2581// \u2581command \u2581returns \u2581a \u2581command \u2581to \u2581 get \u2581the \u2581command \u2581line ."], "references": ["\u2581// \u2581command \u2581creates \u2581an \u2581 exec . Cmd \u2581with \u2581 Stderr \u2581 pipe d \u2581to \u2581os . Stderr \u2581and \u2581returns \u2581the \u2581args"], "bleu": 0.07594314991562712, "rouge_l": 0.2234432234432234}
{"id": 1783, "predictions": ["\u2581// \u2581 Storage \u2581returns \u2581a \u2581 set \u2581of \u2581 plugins \u2581that \u2581are \u2581running \u2581on \u2581the \u2581// \u2581current \u2581 controller ."], "references": ["\u2581// \u2581 currentContext \u2581returns \u2581 kubectl \u2581 config \u2581current - context"], "bleu": 0.09936036078831874, "rouge_l": 0.40848214285714285}
{"id": 1416, "predictions": ["\u2581// \u2581 New Metrics \u2581returns \u2581a \u2581new \u2581 Metrics \u2581instance ."], "references": ["\u2581// \u2581 New Metrics \u2581creates \u2581a \u2581new \u2581 set \u2581of \u2581metrics \u2581for \u2581the \u2581 Jenkins \u2581operator ."], "bleu": 0.2530922969702236, "rouge_l": 0.5501691093573844}
{"id": 474, "predictions": ["\u2581// \u2581 get Bool \u2581gets \u2581the \u2581value \u2581of \u2581a \u2581 key \u2581from \u2581the \u2581 form \u2581 key"], "references": ["\u2581// \u2581 get Bool \u2581extracts \u2581a \u2581bool \u2581by \u2581the \u2581given \u2581 key \u2581from \u2581a \u2581 Form . \u2581If \u2581the \u2581 key \u2581does \u2581not \u2581// \u2581exist \u2581in \u2581the \u2581 form ,"], "bleu": 0.1759673536272193, "rouge_l": 0.4458471760797342}
{"id": 204, "predictions": ["\u2581// \u2581Find \u2581returns \u2581the \u2581 Interval \u2581and \u2581 items \u2581that \u2581are \u2581 left \u2581in \u2581the \u2581 set \u2581of \u2581interval"], "references": ["\u2581// \u2581Find \u2581gets \u2581the \u2581 Interval Value \u2581for \u2581the \u2581node \u2581matching \u2581the \u2581given \u2581interval"], "bleu": 0.1531682455208201, "rouge_l": 0.4361593462717058}
{"id": 1171, "predictions": ["\u2581// \u2581 Patch \u2581applies \u2581the \u2581patch \u2581and \u2581returns \u2581the \u2581 patched \u2581 model ."], "references": ["\u2581// \u2581 Patch \u2581does \u2581nothing \u2581on \u2581a \u2581dry - run \u2581client"], "bleu": 0.16451929399933107, "rouge_l": 0.24530831099195713}
{"id": 1309, "predictions": ["\u2581// \u2581 Periodic To Job Spec \u2581creates \u2581a \u2581 periodic \u2581 Job Spec \u2581from \u2581the \u2581 periodic \u2581spec"], "references": ["\u2581// \u2581 Periodic To Job Spec \u2581generates \u2581a \u2581down ward api . Job Spec \u2581out \u2581of \u2581a \u2581 Periodic . \u2581// \u2581 Useful \u2581for \u2581fig u ring \u2581out \u2581 GCS"], "bleu": 0.19853515836095997, "rouge_l": 0.3986928104575163}
{"id": 864, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581store ."], "references": ["\u2581// \u2581Set \u2581implements \u2581the \u2581 Stable Store \u2581interface ."], "bleu": 0.16544619993389978, "rouge_l": 0.4699537750385208}
{"id": 1138, "predictions": ["\u2581// \u2581 Periodic Spec \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581 get \u2581a \u2581 periodic \u2581spec \u2581for \u2581a \u2581 periodic \u2581job ."], "references": ["\u2581// \u2581 Periodic Spec \u2581initializes \u2581a \u2581 ProwJob Spec \u2581for \u2581a \u2581given \u2581 periodic \u2581job ."], "bleu": 0.30145280436636923, "rouge_l": 0.6500888099467139}
{"id": 1230, "predictions": ["\u2581// \u2581 Level From Permissions \u2581returns \u2581a \u2581 Repo Permission \u2581for \u2581 this \u2581repo ."], "references": ["\u2581// \u2581 Level From Permissions \u2581adapt s \u2581a \u2581repo \u2581permissions \u2581struct \u2581to \u2581the \u2581// \u2581appropriate \u2581permission \u2581level \u2581used \u2581else where"], "bleu": 0.23199296989247725, "rouge_l": 0.3899543378995435}
{"id": 444, "predictions": ["\u2581// \u2581 Reset \u2581the \u2581 FSM \u2581and \u2581 releases \u2581the \u2581state ."], "references": ["\u2581// \u2581got Leader \u2581will \u2581force \u2581update \u2581the \u2581 leadership \u2581 status \u2581to \u2581having \u2581a \u2581leader ."], "bleu": 0.11652018442148637, "rouge_l": 0.3481735159817351}
{"id": 822, "predictions": ["\u2581// \u2581snapshot Name \u2581returns \u2581the \u2581 name \u2581of \u2581a \u2581given \u2581index ."], "references": ["\u2581// \u2581snapshot Name \u2581generates \u2581a \u2581 name \u2581for \u2581the \u2581snapshot ."], "bleu": 0.2545093860020286, "rouge_l": 0.5258620689655172}
{"id": 1034, "predictions": ["\u2581// \u2581 Dial AndSend \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 dial \u2581the \u2581 dialer \u2581to \u2581the \u2581// \u2581 dialer ."], "references": ["\u2581// \u2581 Dial AndSend \u2581open s \u2581a \u2581connection \u2581to \u2581the \u2581 SMTP \u2581server , \u2581sends \u2581the \u2581given \u2581 emails \u2581and \u2581// \u2581closes \u2581the \u2581connection ."], "bleu": 0.18606684500094056, "rouge_l": 0.4792857142857143}
{"id": 300, "predictions": ["\u2581// \u2581 With Require Leader \u2581returns \u2581the \u2581context \u2581with \u2581the \u2581given \u2581 status \u2581 name ."], "references": ["\u2581// \u2581 With Require Leader \u2581requires \u2581client \u2581requests \u2581to \u2581only \u2581 succeed \u2581// \u2581when \u2581the \u2581cluster \u2581has \u2581a \u2581leader ."], "bleu": 0.2428442192252926, "rouge_l": 0.3812499999999999}
{"id": 1912, "predictions": ["\u2581// \u2581 Exit Exclusive \u2581executes \u2581a \u2581function \u2581on \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Exit Exclusive \u2581runs \u2581the \u2581given \u2581transaction \u2581and \u2581then \u2581 releases \u2581the \u2581lock \u2581 acquired \u2581// \u2581with \u2581 Enter Exclusive ."], "bleu": 0.12686117465267385, "rouge_l": 0.3430178069353327}
{"id": 1431, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Approval ' s \u2581 set ."], "references": ["\u2581// \u2581String \u2581creates \u2581a \u2581 link \u2581for \u2581the \u2581 approval . \u2581Use \u2581` Login ` \u2581if \u2581you \u2581just \u2581want \u2581the \u2581 name ."], "bleu": 0.08981697607840379, "rouge_l": 0.35494596841230264}
{"id": 1694, "predictions": ["\u2581// \u2581Get GitHub Client \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581GitHub \u2581API \u2581client ."], "references": ["\u2581// \u2581Get GitHub Client \u2581creates \u2581a \u2581client \u2581for \u2581each \u2581 token"], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 579, "predictions": ["\u2581// \u2581 New Expect \u2581creates \u2581a \u2581new \u2581 empty \u2581 type ."], "references": ["\u2581// \u2581 New Expect \u2581creates \u2581a \u2581new \u2581process \u2581for \u2581expect \u2581testing ."], "bleu": 0.5760844201603896, "rouge_l": 0.6666666666666666}
{"id": 1050, "predictions": ["\u2581// \u2581 Start \u2581implements \u2581the \u2581 bill y . Simple \u2581interface \u2581for \u2581 Simple ."], "references": ["\u2581// \u2581 Start \u2581the \u2581worker"], "bleu": 0.16188613565728213, "rouge_l": 0.43963963963963953}
{"id": 1867, "predictions": ["\u2581// \u2581Set \u2581 - \u2581 set \u2581the \u2581 id \u2581of \u2581a \u2581 username \u2581and \u2581value"], "references": ["\u2581// \u2581 User \u2581 Data \u2581are \u2581used \u2581to \u2581store \u2581custom \u2581information \u2581mainly \u2581by \u2581 Ma s on \u2581and \u2581 Ma s on able \u2581implementation . \u2581// \u2581 Ma s on"], "bleu": 0.041391328966514214, "rouge_l": 0.20962199312714777}
{"id": 1093, "predictions": ["\u2581// \u2581 List PullRequest Comments \u2581returns \u2581a \u2581list \u2581of \u2581comments \u2581for \u2581a \u2581given \u2581repository ."], "references": ["\u2581// \u2581 List PullRequest Comments \u2581returns \u2581 review \u2581comments ."], "bleu": 0.3965384287913187, "rouge_l": 0.6639455782312924}
{"id": 1319, "predictions": ["\u2581// \u2581 Format \u2581an \u2581 alias \u2581to \u2581 get \u2581a \u2581 text \u2581string ."], "references": ["\u2581// \u2581 Format IC Response \u2581nicely \u2581formats \u2581a \u2581response \u2581to \u2581an \u2581issue \u2581 comment ."], "bleu": 0.18760371416609697, "rouge_l": 0.41123595505617977}
{"id": 1092, "predictions": ["\u2581// \u2581 List Issue Comments \u2581returns \u2581a \u2581list \u2581of \u2581issue \u2581issue \u2581for \u2581a \u2581repository ."], "references": ["\u2581// \u2581 List Issue Comments \u2581returns \u2581comments ."], "bleu": 0.3850322886878713, "rouge_l": 0.6440422322775264}
{"id": 574, "predictions": ["\u2581// \u2581 Open Dir \u2581open s \u2581a \u2581file \u2581file \u2581and \u2581returns \u2581it ."], "references": ["\u2581// \u2581 Open Dir \u2581open s \u2581a \u2581directory \u2581in \u2581windows \u2581with \u2581 write \u2581access \u2581for \u2581 syncing ."], "bleu": 0.3605103869619313, "rouge_l": 0.5015416238437821}
{"id": 1039, "predictions": ["\u2581// \u2581Get \u2581retrieves \u2581the \u2581value \u2581of \u2581a \u2581cookie"], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581cookie \u2581with \u2581the \u2581given \u2581 name . \u2581Returns \u2581http . ErrNo Cookie \u2581if \u2581there ' s \u2581no \u2581cookie \u2581with \u2581that \u2581 name \u2581in"], "bleu": 0.023582602720858287, "rouge_l": 0.2859375}
{"id": 1001, "predictions": ["\u2581// \u2581 Reset \u2581 clear s \u2581the \u2581message \u2581from \u2581the \u2581 Message ."], "references": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581message \u2581so \u2581it \u2581can \u2581be \u2581reused . \u2581The \u2581message \u2581keeps \u2581its \u2581previous \u2581// \u2581settings \u2581so \u2581it \u2581is \u2581in \u2581the \u2581same \u2581state \u2581that \u2581after \u2581a \u2581"], "bleu": 0.06327734388841769, "rouge_l": 0.30391459074733096}
{"id": 1228, "predictions": ["\u2581// \u2581 Has Label \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 label \u2581 contains \u2581the \u2581given \u2581labels ."], "references": ["\u2581// \u2581 Has Label \u2581checks \u2581if \u2581 label \u2581is \u2581in \u2581the \u2581 label \u2581 set \u2581\" issue Labels \" ."], "bleu": 0.24408163898840007, "rouge_l": 0.5327510917030567}
{"id": 768, "predictions": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Value \u2581returns \u2581value ."], "bleu": 0.3448444257953326, "rouge_l": 0.745417515274949}
{"id": 306, "predictions": ["\u2581// \u2581 Is Progress Notify \u2581returns \u2581true \u2581if \u2581the \u2581 watch \u2581is \u2581 Progress Notify"], "references": ["\u2581// \u2581 Is Progress Notify \u2581returns \u2581true \u2581if \u2581the \u2581 Watch Response \u2581is \u2581progress \u2581notification ."], "bleu": 0.6238853859647361, "rouge_l": 0.7055730809674028}
{"id": 1028, "predictions": ["\u2581// \u2581 Redirect \u2581 redirects \u2581the \u2581 status \u2581to \u2581the \u2581specified \u2581 status ."], "references": ["\u2581// \u2581 Redirect \u2581from \u2581one \u2581 URL \u2581to \u2581another \u2581 URL . \u2581 Only \u2581works \u2581for \u2581\" GET \" \u2581requests ."], "bleu": 0.12221238674568774, "rouge_l": 0.3860759493670886}
{"id": 294, "predictions": ["\u2581// \u2581Set Endpoints \u2581sets \u2581the \u2581 group \u2581of \u2581the \u2581endpoints ."], "references": ["\u2581// \u2581Set Endpoints \u2581updates \u2581client ' s \u2581endpoints ."], "bleu": 0.2521193618434983, "rouge_l": 0.5091819699499166}
{"id": 416, "predictions": ["\u2581// \u2581 RemoteAddr Since \u2581returns \u2581the \u2581time \u2581of \u2581the \u2581given \u2581 raft \u2581request ."], "references": ["\u2581// \u2581 isConnected Since \u2581checks \u2581whether \u2581the \u2581local \u2581member \u2581is \u2581connected \u2581to \u2581the \u2581// \u2581remote \u2581member \u2581since \u2581the \u2581given \u2581time ."], "bleu": 0.10276795791404941, "rouge_l": 0.3860759493670886}
{"id": 756, "predictions": ["\u2581// \u2581 New Table Builder \u2581creates \u2581a \u2581new \u2581 table \u2581builder ."], "references": ["\u2581// \u2581 New Table Builder \u2581makes \u2581a \u2581new \u2581 Table Builder ."], "bleu": 0.49735673561245436, "rouge_l": 0.75}
{"id": 1683, "predictions": ["\u2581// \u2581 Expect \u2581 strip \u2581 newlines \u2581from \u2581 src ."], "references": ["\u2581// \u2581these \u2581are \u2581unnecessary , \u2581and \u2581make \u2581the \u2581 config \u2581larger \u2581so \u2581we \u2581 strip \u2581them \u2581out"], "bleu": 0.09872064645916422, "rouge_l": 0.2750845546786922}
{"id": 88, "predictions": ["\u2581// \u2581 CA Files \u2581returns \u2581the \u2581 CA \u2581files \u2581for \u2581the \u2581 TLS \u2581 info"], "references": ["\u2581// \u2581 ca files \u2581returns \u2581a \u2581list \u2581of \u2581 CA \u2581file \u2581paths ."], "bleu": 0.14247788801610148, "rouge_l": 0.36180308422301305}
{"id": 1422, "predictions": ["\u2581// \u2581 New Coalesce \u2581returns \u2581a \u2581new \u2581 JPEG \u2581 Repo \u2581with \u2581the \u2581given \u2581 set \u2581of \u2581 repositories ."], "references": ["\u2581// \u2581 New Owners \u2581const ur ct s \u2581a \u2581new \u2581 Owners \u2581instance . \u2581filenames \u2581is \u2581the \u2581 slice \u2581of \u2581files \u2581changed ."], "bleu": 0.15845573587265727, "rouge_l": 0.45933734939759036}
{"id": 923, "predictions": ["\u2581// \u2581has Vote \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581configuration \u2581is \u2581a \u2581 Vote ID ."], "references": ["\u2581// \u2581has Vote \u2581returns \u2581true \u2581if \u2581the \u2581server \u2581identified \u2581by \u2581' id ' \u2581is \u2581a \u2581 Voter \u2581in \u2581the \u2581// \u2581provided \u2581 Configuration ."], "bleu": 0.2976635132986883, "rouge_l": 0.5415657788539144}
{"id": 530, "predictions": ["\u2581// \u2581 New Peer Handler \u2581creates \u2581a \u2581new \u2581 Handler \u2581that \u2581will \u2581 connect \u2581to \u2581the \u2581// \u2581 raft \u2581server ."], "references": ["\u2581// \u2581 New Peer Handler \u2581generates \u2581an \u2581http . Handler \u2581to \u2581handle \u2581etcd \u2581peer \u2581requests ."], "bleu": 0.23550061570724218, "rouge_l": 0.44323342415985467}
{"id": 1798, "predictions": ["\u2581// \u2581Check Flags \u2581checks \u2581if \u2581the \u2581 type \u2581of \u2581 type \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check Flags \u2581makes \u2581sure \u2581not \u2581both \u2581 PR \u2581and \u2581issues \u2581are \u2581ignored"], "bleu": 0.17395797375642236, "rouge_l": 0.2982885085574572}
{"id": 1961, "predictions": ["\u2581// \u2581 NetworkConfig Add \u2581adds \u2581a \u2581new \u2581network \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 NetworkConfig Add \u2581adds \u2581a \u2581new \u2581entry \u2581in \u2581the \u2581networks _ config \u2581 table"], "bleu": 0.4486549975361477, "rouge_l": 0.5809523809523809}
{"id": 1361, "predictions": ["\u2581// \u2581 AddFlags \u2581adds \u2581flags \u2581to \u2581the \u2581 set \u2581of \u2581flags"], "references": ["\u2581// \u2581 AddFlags \u2581 binds \u2581flags \u2581to \u2581options ."], "bleu": 0.2620251007173263, "rouge_l": 0.5091819699499166}
{"id": 91, "predictions": ["\u2581// \u2581new TLS Keepalive Listener \u2581returns \u2581a \u2581new \u2581 net . Listener \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581// \u2581the \u2581 TLS \u2581listener \u2581for \u2581the \u2581given \u2581listener ."], "references": ["\u2581// \u2581 New Listener \u2581creates \u2581a \u2581 Listener \u2581which \u2581accepts \u2581connections \u2581from \u2581an \u2581inner \u2581// \u2581 Listener \u2581and \u2581 wraps \u2581each \u2581connection \u2581with \u2581 Server . \u2581// \u2581The \u2581configuration \u2581"], "bleu": 0.06032732467722104, "rouge_l": 0.27036011080332406}
{"id": 1573, "predictions": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581 this \u2581 type To Resources ."], "references": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 Type To Resources"], "bleu": 0.5328009719875519, "rouge_l": 0.7800511508951408}
{"id": 585, "predictions": ["\u2581// \u2581 key Func \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 key Func \u2581for \u2581the \u2581given \u2581 Range Request ."], "references": ["\u2581// \u2581 key Func \u2581returns \u2581the \u2581 key \u2581of \u2581a \u2581request , \u2581which \u2581is \u2581used \u2581to \u2581look \u2581up \u2581its \u2581caching \u2581response \u2581in \u2581the \u2581cache ."], "bleu": 0.24700812340883455, "rouge_l": 0.42068965517241375}
{"id": 1729, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581value \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581Set \u2581the \u2581bool \u2581according \u2581to \u2581the \u2581string ."], "bleu": 0.1870361278311548, "rouge_l": 0.5865384615384615}
{"id": 1069, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581 app ."], "references": ["\u2581// \u2581 Stop \u2581the \u2581application \u2581and \u2581attempt \u2581to \u2581 graceful ly \u2581shutdown"], "bleu": 0.20034704329441452, "rouge_l": 0.4825949367088607}
{"id": 1801, "predictions": ["\u2581// \u2581 Client \u2581returns \u2581the \u2581 email \u2581for \u2581the \u2581 Kubernetes \u2581client"], "references": ["\u2581// \u2581 Client \u2581returns \u2581a \u2581 ClientInterface \u2581based \u2581on \u2581the \u2581flags \u2581provided ."], "bleu": 0.28940550821470035, "rouge_l": 0.4765625000000001}
{"id": 805, "predictions": ["\u2581// \u2581 get Val \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581offset \u2581and \u2581returns \u2581the \u2581 y . Value Struct \u2581// \u2581if \u2581the \u2581offset \u2581is \u2581not \u2581 set ."], "references": ["\u2581// \u2581 get Val \u2581returns \u2581 byte \u2581 slice \u2581at \u2581offset . \u2581The \u2581given \u2581 size \u2581should \u2581be \u2581just \u2581the \u2581value \u2581// \u2581 size \u2581and \u2581should \u2581NOT \u2581include \u2581the \u2581"], "bleu": 0.205166050105049, "rouge_l": 0.34269662921348315}
{"id": 41, "predictions": ["\u2581// \u2581 getStatus \u2581returns \u2581a \u2581 Status \u2581of \u2581the \u2581 raft \u2581 raft ."], "references": ["\u2581// \u2581 getStatus \u2581gets \u2581a \u2581copy \u2581of \u2581the \u2581current \u2581 raft \u2581 status ."], "bleu": 0.2788241097922203, "rouge_l": 0.7142857142857143}
{"id": 169, "predictions": ["\u2581// \u2581 New Lease Revoke Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Lease Revoke Command"], "references": ["\u2581// \u2581 New Lease Revoke Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lease \u2581 revoke \" ."], "bleu": 0.3734099595633835, "rouge_l": 0.4770283479960899}
{"id": 931, "predictions": ["\u2581// \u2581 get LastIndex \u2581returns \u2581the \u2581last \u2581 recently \u2581used \u2581in \u2581the \u2581state ."], "references": ["\u2581// \u2581 get LastIndex \u2581returns \u2581the \u2581last \u2581index \u2581in \u2581 s table \u2581storage . \u2581// \u2581Either \u2581from \u2581the \u2581last \u2581log \u2581or \u2581from \u2581the \u2581last \u2581snapshot ."], "bleu": 0.22349188003943724, "rouge_l": 0.474339035769829}
{"id": 1298, "predictions": ["\u2581// \u2581 getBuild Path \u2581returns \u2581a \u2581new \u2581 Path \u2581for \u2581the \u2581given \u2581 container \u2581spec ."], "references": ["\u2581// \u2581 getBuild Path \u2581builds \u2581a \u2581 path \u2581to \u2581 trigger \u2581a \u2581regular \u2581build \u2581for \u2581 this \u2581job"], "bleu": 0.21884144707425857, "rouge_l": 0.465648854961832}
{"id": 901, "predictions": ["\u2581// \u2581 Addr \u2581returns \u2581the \u2581 TCP \u2581stream \u2581of \u2581the \u2581 TCP Stream Layer ."], "references": ["\u2581// \u2581 Addr \u2581implements \u2581the \u2581 net . Listener \u2581interface ."], "bleu": 0.1892240568795935, "rouge_l": 0.4747081712062256}
{"id": 1559, "predictions": ["\u2581// \u2581 pop Random \u2581 pop s \u2581a \u2581random \u2581string \u2581from \u2581a \u2581 set \u2581of \u2581strings"], "references": ["\u2581// \u2581 pop Random \u2581randomly \u2581selects \u2581an \u2581element \u2581of \u2581' set ' \u2581and \u2581 pop s \u2581it ."], "bleu": 0.26719384486285436, "rouge_l": 0.40744274809160297}
{"id": 589, "predictions": ["\u2581// \u2581 Compact \u2581 increments \u2581the \u2581cache \u2581with \u2581the \u2581given \u2581revision ."], "references": ["\u2581// \u2581 Compact \u2581invalidate \u2581all \u2581caching \u2581response \u2581before \u2581the \u2581given \u2581rev . \u2581// \u2581 Replace \u2581with \u2581the \u2581 invalidation \u2581is \u2581lazy . \u2581The \u2581actual \u2581removal \u2581happens \u2581when \u2581the \u2581entries \u2581is"], "bleu": 0.061649414488583236, "rouge_l": 0.30942028985507253}
{"id": 1816, "predictions": ["\u2581// \u2581 add Known Types \u2581adds \u2581the \u2581types \u2581to \u2581the \u2581 scheme , \u2581and \u2581 add \u2581them \u2581to \u2581the \u2581 api ."], "references": ["\u2581// \u2581Adds \u2581the \u2581list \u2581of \u2581known \u2581types \u2581to \u2581the \u2581 Scheme ."], "bleu": 0.1733705613469748, "rouge_l": 0.43482688391038704}
{"id": 1651, "predictions": ["\u2581// \u2581new Expected Context \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581new Expected Context \u2581creates \u2581a \u2581 Context \u2581with \u2581 Expected \u2581state ."], "bleu": 0.284955776032203, "rouge_l": 0.5965770171149144}
{"id": 215, "predictions": ["\u2581// \u2581 Observe \u2581 unlock s \u2581the \u2581 election ."], "references": ["\u2581// \u2581 Observe \u2581returns \u2581a \u2581channel \u2581that \u2581rel i ably \u2581 observe s \u2581ordered \u2581leader \u2581proposal s \u2581// \u2581as \u2581 GetResponse \u2581values \u2581on \u2581every \u2581current \u2581 elect ed \u2581leader \u2581"], "bleu": 0.036520949774262054, "rouge_l": 0.27518796992481204}
{"id": 1178, "predictions": ["\u2581// \u2581 description \u2581returns \u2581the \u2581 description \u2581of \u2581a \u2581condition ."], "references": ["\u2581// \u2581 description \u2581computes \u2581the \u2581 ProwJob Status \u2581 description \u2581for \u2581 this \u2581condition \u2581or \u2581fall ing \u2581back \u2581to \u2581a \u2581default \u2581if \u2581 none \u2581is \u2581provided ."], "bleu": 0.07072856148360326, "rouge_l": 0.3913392141138733}
{"id": 2001, "predictions": ["\u2581// \u2581Create Container Template File \u2581creates \u2581a \u2581new \u2581 container \u2581file"], "references": ["\u2581// \u2581Create Container Template File \u2581creates \u2581an \u2581a \u2581template \u2581for \u2581a \u2581 container ."], "bleu": 0.4460504164176434, "rouge_l": 0.7047496790757382}
{"id": 1125, "predictions": ["\u2581// \u2581Get Repo Projects \u2581returns \u2581a \u2581list \u2581of \u2581 repositories ."], "references": ["\u2581// \u2581Get Repo Projects \u2581returns \u2581the \u2581list \u2581of \u2581projects \u2581under \u2581a \u2581repo ."], "bleu": 0.4136817680097794, "rouge_l": 0.6567967698519516}
{"id": 1010, "predictions": ["\u2581// \u2581Set Header \u2581sets \u2581the \u2581 headers \u2581for \u2581the \u2581given \u2581header"], "references": ["\u2581// \u2581Set Header \u2581is \u2581a \u2581file \u2581setting \u2581to \u2581 set \u2581the \u2581 MIME \u2581header \u2581of \u2581the \u2581message \u2581part \u2581that \u2581// \u2581 contains \u2581the \u2581file \u2581 content . \u2581// \u2581// \u2581"], "bleu": 0.0481610413903312, "rouge_l": 0.2701107011070111}
{"id": 1367, "predictions": ["\u2581// \u2581Get Items \u2581returns \u2581the \u2581 items \u2581in \u2581the \u2581collection ."], "references": ["\u2581// \u2581Get Items \u2581implements \u2581the \u2581 Collection \u2581interface"], "bleu": 0.2521193618434983, "rouge_l": 0.5417406749555951}
{"id": 189, "predictions": ["\u2581// \u2581 contains \u2581checks \u2581if \u2581the \u2581given \u2581 key \u2581is \u2581in \u2581the \u2581 group ."], "references": ["\u2581// \u2581 contains \u2581is \u2581whether \u2581the \u2581given \u2581 key \u2581has \u2581a \u2581watcher \u2581in \u2581the \u2581 group ."], "bleu": 0.47901038427180276, "rouge_l": 0.7416413373860183}
{"id": 1043, "predictions": ["\u2581// \u2581 New Message \u2581returns \u2581a \u2581new \u2581 Message ."], "references": ["\u2581// \u2581 New Message \u2581builds \u2581a \u2581new \u2581message ."], "bleu": 0.41722614486115056, "rouge_l": 0.7439024390243903}
{"id": 1555, "predictions": ["\u2581// \u2581 git Timestamp Env s \u2581returns \u2581a \u2581 slice \u2581of \u2581 git \u2581timestamp \u2581names \u2581for \u2581the \u2581given \u2581// \u2581 git \u2581 format ."], "references": ["\u2581// \u2581 git Timestamp Env s \u2581returns \u2581the \u2581list \u2581of \u2581environment \u2581variables \u2581needed \u2581to \u2581override \u2581// \u2581 git ' s \u2581 author \u2581and \u2581commit \u2581timestamps \u2581when \u2581creating \u2581new \u2581commits ."], "bleu": 0.2750751705691692, "rouge_l": 0.4720238095238095}
{"id": 619, "predictions": ["\u2581// \u2581 Report Unreachable \u2581reports \u2581the \u2581 unreachable \u2581 unreachable ."], "references": ["\u2581// \u2581 Report Unreachable \u2581reports \u2581the \u2581given \u2581node \u2581is \u2581not \u2581 reachable \u2581for \u2581the \u2581last \u2581send ."], "bleu": 0.3182467150056003, "rouge_l": 0.5501691093573844}
{"id": 1800, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581the \u2581field \u2581values \u2581on \u2581 Kubernetes Client Options \u2581with \u2581the \u2581rules \u2581defined \u2581in \u2581// \u2581the \u2581proto \u2581definition \u2581for \u2581 this \u2581message . \u2581If \u2581any \u2581rules \u2581are \u2581"], "references": ["\u2581// \u2581Validate \u2581validates \u2581 Kubernetes \u2581client \u2581options ."], "bleu": 0.06987283777978615, "rouge_l": 0.29383429672447015}
{"id": 1751, "predictions": ["\u2581// \u2581 Title \u2581returns \u2581a \u2581 title d \u2581 title \u2581of \u2581the \u2581 year , \u2581 name , \u2581 name , \u2581 name , \u2581 name , \u2581 name ,"], "references": ["\u2581// \u2581 Title \u2581yields \u2581the \u2581initial \u2581 title \u2581 text \u2581of \u2581the \u2581 github \u2581issue ."], "bleu": 0.12425342874478343, "rouge_l": 0.414027149321267}
{"id": 1094, "predictions": ["\u2581// \u2581 List Review s \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 items \u2581in \u2581the \u2581current \u2581release ."], "references": ["\u2581// \u2581 List Review s \u2581returns \u2581 reviews ."], "bleu": 0.34823528327578535, "rouge_l": 0.6515353805073432}
{"id": 1497, "predictions": ["\u2581// \u2581 Ratio \u2581returns \u2581the \u2581average \u2581of \u2581the \u2581 Coverage \u2581 Coverage ."], "references": ["\u2581// \u2581 Ratio \u2581returns \u2581the \u2581percentage \u2581of \u2581statements \u2581that \u2581are \u2581 covered"], "bleu": 0.3759663529467017, "rouge_l": 0.5640686922060767}
{"id": 775, "predictions": ["\u2581// \u2581 Seek \u2581 seek s \u2581to \u2581the \u2581 key \u2581 key . \u2581If \u2581the \u2581 key \u2581is \u2581not \u2581present , \u2581it \u2581will \u2581// \u2581be \u2581removed ."], "references": ["\u2581// \u2581 Seek \u2581implements \u2581 y . Interface"], "bleu": 0.09251599780696446, "rouge_l": 0.31671858774662515}
{"id": 1698, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 \u2581job , \u2581including \u2581the \u2581// \u2581number \u2581of \u2581bytes ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581a \u2581 p row \u2581job \u2581 identifier"], "bleu": 0.20522120509305022, "rouge_l": 0.5115303983228512}
{"id": 167, "predictions": ["\u2581// \u2581 New Lease Grant Command \u2581returns \u2581a \u2581new \u2581 cobra \u2581command"], "references": ["\u2581// \u2581 New Lease Grant Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lease \u2581grant \" ."], "bleu": 0.44191674162097794, "rouge_l": 0.668859649122807}
{"id": 1511, "predictions": ["\u2581// \u2581 Pop \u2581implements \u2581the \u2581 Event Interface \u2581interface ."], "references": ["\u2581// \u2581 Pop \u2581retrieves \u2581the \u2581last \u2581added \u2581event"], "bleu": 0.24808415001701817, "rouge_l": 0.4535315985130111}
{"id": 318, "predictions": ["\u2581// \u2581 Values \u2581returns \u2581a \u2581 slice \u2581of \u2581values ."], "references": ["\u2581// \u2581 Values \u2581returns \u2581the \u2581values \u2581of \u2581the \u2581Set \u2581in \u2581an \u2581 unspecified \u2581order ."], "bleu": 0.24648182529286797, "rouge_l": 0.46329113924050636}
{"id": 1599, "predictions": ["\u2581// \u2581 ConfigPath \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 name \u2581of \u2581the \u2581 form \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581 ConfigPath \u2581returns \u2581the \u2581value \u2581for \u2581the \u2581component ' s \u2581 configPath \u2581if \u2581provided \u2581// \u2581explicitly \u2581or \u2581default \u2581otherwise ."], "bleu": 0.23554010631649341, "rouge_l": 0.3885350318471337}
{"id": 1934, "predictions": ["\u2581// \u2581 Image Delete \u2581deletes \u2581the \u2581image \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 Image Delete \u2581deletes \u2581the \u2581image \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.6127157815840427, "rouge_l": 0.8209959623149395}
{"id": 993, "predictions": ["\u2581// \u2581Get Once \u2581gets \u2581a \u2581value \u2581from \u2581the \u2581session"], "references": ["\u2581// \u2581Get Once \u2581gets \u2581a \u2581value \u2581from \u2581the \u2581current \u2581session \u2581and \u2581then \u2581deletes \u2581it ."], "bleu": 0.4639247374454443, "rouge_l": 0.7176470588235294}
{"id": 1473, "predictions": ["\u2581// \u2581 Send \u2581a \u2581 set \u2581of \u2581changes \u2581to \u2581the \u2581given \u2581constraints ."], "references": ["\u2581// \u2581Runs Against Changes \u2581returns \u2581true \u2581if \u2581any \u2581of \u2581the \u2581changed \u2581input \u2581paths \u2581match \u2581the \u2581run _ if _ changed \u2581regex ."], "bleu": 0.06010571402825797, "rouge_l": 0.21844225604297224}
{"id": 82, "predictions": ["\u2581// \u2581 With FromKey \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sets \u2581the \u2581 FromKey \u2581for \u2581the \u2581operation"], "references": ["\u2581// \u2581 With FromKey \u2581specifies \u2581the \u2581range \u2581of \u2581' Get ', \u2581' Delete ', \u2581' Watch ' \u2581requests \u2581// \u2581to \u2581be \u2581equal \u2581or \u2581greater \u2581than \u2581the \u2581 key \u2581in \u2581the"], "bleu": 0.11129152625886096, "rouge_l": 0.2837209302325582}
{"id": 1571, "predictions": ["\u2581// \u2581 Min s \u2581returns \u2581a \u2581 set Informer ."], "references": ["\u2581// \u2581 ProwJob s \u2581returns \u2581a \u2581 ProwJob Informer ."], "bleu": 0.4497332084013506, "rouge_l": 0.8}
{"id": 694, "predictions": ["\u2581// \u2581 M \u2581segment \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581 get \u2581a \u2581 set \u2581of \u2581 data \u2581for \u2581a \u2581given \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 M advise \u2581uses \u2581the \u2581 m advise \u2581system \u2581 call \u2581to \u2581give \u2581 advise \u2581about \u2581the \u2581use \u2581of \u2581memory \u2581// \u2581when \u2581using \u2581a \u2581 slice \u2581that \u2581is \u2581memory"], "bleu": 0.11364470660640824, "rouge_l": 0.35260115606936415}
{"id": 365, "predictions": ["\u2581// \u2581Register Election Handler \u2581registers \u2581a \u2581 election \u2581handler ."], "references": ["\u2581// \u2581Register Election Handler \u2581registers \u2581the \u2581http \u2581 handlers \u2581for \u2581service \u2581 Election \u2581to \u2581\" mux \" . \u2581// \u2581The \u2581 handlers \u2581forward \u2581requests \u2581to \u2581the \u2581 grpc \u2581endpoint \u2581over"], "bleu": 0.06714907741813494, "rouge_l": 0.32105263157894737}
{"id": 1746, "predictions": ["\u2581// \u2581 New Fetcher \u2581creates \u2581a \u2581new \u2581 Fetcher ."], "references": ["\u2581// \u2581 New Fetcher \u2581creates \u2581a \u2581new \u2581 Fetcher \u2581and \u2581initializes \u2581the \u2581output \u2581channels"], "bleu": 0.5986990182016952, "rouge_l": 0.7281167108753316}
{"id": 1366, "predictions": ["\u2581// \u2581 From Item \u2581implements \u2581the \u2581 Resources Config \u2581interface ."], "references": ["\u2581// \u2581 From Item \u2581implements \u2581the \u2581Object \u2581interface"], "bleu": 0.5331675363405771, "rouge_l": 0.7584369449378331}
{"id": 582, "predictions": ["\u2581// \u2581 Expect \u2581checks \u2581if \u2581the \u2581given \u2581string \u2581is \u2581a \u2581valid \u2581 path ."], "references": ["\u2581// \u2581 Expect \u2581returns \u2581the \u2581first \u2581line \u2581containing \u2581the \u2581given \u2581string ."], "bleu": 0.24601372576927547, "rouge_l": 0.5460358056265985}
{"id": 17, "predictions": ["\u2581// \u2581 New Leader Stats \u2581returns \u2581a \u2581new \u2581 Leader Stats \u2581instance"], "references": ["\u2581// \u2581 New Leader Stats \u2581generates \u2581a \u2581new \u2581 Leader Stats \u2581with \u2581the \u2581given \u2581 id \u2581as \u2581leader"], "bleu": 0.40658302985957046, "rouge_l": 0.6434599156118143}
{"id": 1735, "predictions": ["\u2581// \u2581delta \u2581 - \u2581 increments \u2581the \u2581value \u2581of \u2581a \u2581given \u2581 changeset ."], "references": ["\u2581// \u2581delta Displayed \u2581converts \u2581a \u2581 coverage \u2581ratio \u2581delta \u2581into \u2581a \u2581string \u2581value \u2581to \u2581be \u2581displayed \u2581by \u2581 coverage \u2581robot"], "bleu": 0.09366338067819213, "rouge_l": 0.28504672897196265}
{"id": 173, "predictions": ["\u2581// \u2581 New Lease List Command \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Lease List Command"], "references": ["\u2581// \u2581 New Lease List Command \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581\" lease \u2581list \" ."], "bleu": 0.4253166217093715, "rouge_l": 0.5424901185770752}
{"id": 655, "predictions": ["\u2581// \u2581Register Lock Handler \u2581registers \u2581a \u2581new \u2581 Lock Handler \u2581for \u2581the \u2581given \u2581 handlers ."], "references": ["\u2581// \u2581Register Lock Handler \u2581registers \u2581the \u2581http \u2581 handlers \u2581for \u2581service \u2581 Lock \u2581to \u2581\" mux \" . \u2581// \u2581The \u2581 handlers \u2581forward \u2581requests \u2581to \u2581the \u2581 grpc \u2581endpoint \u2581over"], "bleu": 0.15500686694439733, "rouge_l": 0.370945945945946}
{"id": 719, "predictions": ["\u2581// \u2581Parse T s \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 slice \u2581of \u2581bytes ."], "references": ["\u2581// \u2581Parse T s \u2581parses \u2581the \u2581timestamp \u2581from \u2581the \u2581 key \u2581bytes ."], "bleu": 0.30130404892785684, "rouge_l": 0.6512455516014234}
{"id": 739, "predictions": ["\u2581// \u2581 New Stream \u2581creates \u2581a \u2581new \u2581 Stream ."], "references": ["\u2581// \u2581 New Stream \u2581creates \u2581a \u2581new \u2581 Stream ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 248, "predictions": ["\u2581// \u2581last Pending Request Ctx \u2581returns \u2581the \u2581last \u2581block \u2581 data \u2581for \u2581the \u2581last \u2581block ."], "references": ["\u2581// \u2581last Pending Request Ctx \u2581returns \u2581the \u2581context \u2581of \u2581the \u2581last \u2581pending \u2581read \u2581only \u2581// \u2581request \u2581in \u2581 readonly \u2581struct ."], "bleu": 0.34668419788517524, "rouge_l": 0.5276816608996538}
{"id": 1914, "predictions": ["\u2581// \u2581 Tx Commit \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581 wraps \u2581the \u2581transaction \u2581to \u2581be \u2581used \u2581// \u2581to \u2581 write \u2581the \u2581transaction \u2581to \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Tx Commit \u2581commits \u2581the \u2581given \u2581transaction ."], "bleu": 0.1486599636902727, "rouge_l": 0.4274274274274274}
{"id": 1261, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 Job Agent ."], "references": ["\u2581// \u2581 Start \u2581will \u2581start \u2581the \u2581job \u2581and \u2581periodically \u2581update \u2581it ."], "bleu": 0.20830666398386113, "rouge_l": 0.4642313546423136}
{"id": 1177, "predictions": ["\u2581// \u2581is State \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 code \u2581is \u2581valid ."], "references": ["\u2581// \u2581final State \u2581returns \u2581true \u2581if \u2581the \u2581 p row job \u2581has \u2581already \u2581finished"], "bleu": 0.3481302097077456, "rouge_l": 0.5150784077201447}
{"id": 837, "predictions": ["\u2581// \u2581Set Heartbeat Handler \u2581is \u2581a \u2581 functional \u2581implementation \u2581of \u2581 Heartbeat Handler ."], "references": ["\u2581// \u2581Set Heartbeat Handler \u2581is \u2581used \u2581to \u2581setup \u2581a \u2581heartbeat \u2581handler \u2581// \u2581as \u2581a \u2581fast - pass . \u2581This \u2581is \u2581to \u2581avoid \u2581 head - of - line \u2581blocking \u2581from"], "bleu": 0.11426833936777389, "rouge_l": 0.2986013986013986}
{"id": 625, "predictions": ["\u2581// \u2581 Restart Node \u2581returns \u2581a \u2581 Node \u2581that \u2581is \u2581used \u2581to \u2581restart \u2581the \u2581 raft \u2581// \u2581node ."], "references": ["\u2581// \u2581 Restart Node \u2581is \u2581similar \u2581to \u2581 Start Node \u2581but \u2581does \u2581not \u2581take \u2581a \u2581list \u2581of \u2581peers . \u2581// \u2581The \u2581current \u2581membership \u2581of \u2581the \u2581cluster \u2581will \u2581be \u2581restore d"], "bleu": 0.12756418106480547, "rouge_l": 0.3138263665594856}
{"id": 1222, "predictions": ["\u2581// \u2581 AddFlags \u2581registers \u2581the \u2581 fluent - compatible \u2581command \u2581for \u2581the \u2581 Event Counter Plugin"], "references": ["\u2581// \u2581 AddFlags \u2581adds \u2581\" event \" \u2581to \u2581the \u2581command \u2581help"], "bleu": 0.15844501337268932, "rouge_l": 0.3831658291457286}
{"id": 642, "predictions": ["\u2581// \u2581Save \u2581implements \u2581 Store . \u2581Save ."], "references": ["\u2581// \u2581Save \u2581saves \u2581the \u2581static \u2581state \u2581of \u2581the \u2581store \u2581system . \u2581// \u2581It \u2581will \u2581not \u2581be \u2581 able \u2581to \u2581save \u2581the \u2581state \u2581of \u2581 watchers . \u2581// \u2581It \u2581will \u2581not"], "bleu": 0.016045011753648093, "rouge_l": 0.190625}
{"id": 1088, "predictions": ["\u2581// \u2581 Subscribe \u2581 subscribe s \u2581to \u2581the \u2581 Agent ' s \u2581 active \u2581subscription ."], "references": ["\u2581// \u2581 Subscribe \u2581registers \u2581the \u2581channel \u2581for \u2581messages \u2581on \u2581 config \u2581reload . \u2581// \u2581The \u2581caller \u2581can \u2581expect \u2581a \u2581copy \u2581of \u2581the \u2581previous \u2581and \u2581current \u2581 config \u2581// \u2581to \u2581be"], "bleu": 0.07309601795775379, "rouge_l": 0.24729729729729732}
{"id": 1883, "predictions": ["\u2581// \u2581 Has Job \u2581returns \u2581true \u2581if \u2581the \u2581job \u2581has \u2581a \u2581job \u2581 name ."], "references": ["\u2581// \u2581 Has Job \u2581returns \u2581if \u2581a \u2581job \u2581has \u2581been \u2581scheduled \u2581in \u2581 cron Agent \u2581or \u2581not"], "bleu": 0.33376547008489904, "rouge_l": 0.5562310030395137}
{"id": 665, "predictions": ["\u2581// \u2581 Valid \u2581returns \u2581true \u2581if \u2581the \u2581 iterator \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Valid \u2581returns \u2581whether \u2581the \u2581 Merge Iterator \u2581is \u2581at \u2581a \u2581valid \u2581element ."], "bleu": 0.279167640244994, "rouge_l": 0.5641618497109826}
{"id": 1420, "predictions": ["\u2581// \u2581 P row V 1 \u2581retrieves \u2581the \u2581 P row V 1 Client"], "references": ["\u2581// \u2581 P row V 1 \u2581retrieves \u2581the \u2581 P row V 1 Client"], "bleu": 1.0, "rouge_l": 1.0}
{"id": 592, "predictions": ["\u2581// \u2581 Unique URLs Map From Flag \u2581creates \u2581a \u2581 map \u2581of \u2581 name \u2581from \u2581flag \u2581flag \u2581flag \u2581flag"], "references": ["\u2581// \u2581 Unique URLs Map From Flag \u2581returns \u2581a \u2581 map \u2581from \u2581 url \u2581strings \u2581got \u2581from \u2581the \u2581flag ."], "bleu": 0.4186738029497003, "rouge_l": 0.6635983263598326}
{"id": 1436, "predictions": ["\u2581// \u2581Add Assignee s \u2581adds \u2581all \u2581 login s \u2581to \u2581the \u2581user ."], "references": ["\u2581// \u2581Add Assignee s \u2581adds \u2581 assignee s \u2581to \u2581the \u2581list"], "bleu": 0.45723134461864345, "rouge_l": 0.7614424410540915}
{"id": 328, "predictions": ["\u2581// \u2581 InitialState \u2581returns \u2581the \u2581current \u2581state \u2581of \u2581the \u2581storage ."], "references": ["\u2581// \u2581 InitialState \u2581implements \u2581the \u2581 Storage \u2581interface ."], "bleu": 0.23462350320527994, "rouge_l": 0.5091819699499166}
{"id": 465, "predictions": ["\u2581// \u2581 New Weighted Report \u2581returns \u2581a \u2581new \u2581report \u2581report \u2581that \u2581 conform s \u2581to \u2581// \u2581the \u2581report ."], "references": ["\u2581// \u2581 New Weighted Report \u2581returns \u2581a \u2581report \u2581that \u2581includes \u2581// \u2581both \u2581weighted \u2581and \u2581un weighted \u2581statistics ."], "bleu": 0.3967088290836577, "rouge_l": 0.597506678539626}
{"id": 436, "predictions": ["\u2581// \u2581Register Watch Handler \u2581registers \u2581a \u2581 watch \u2581handler \u2581for \u2581the \u2581 handlers ."], "references": ["\u2581// \u2581Register Watch Handler \u2581registers \u2581the \u2581http \u2581 handlers \u2581for \u2581service \u2581 Watch \u2581to \u2581\" mux \" . \u2581// \u2581The \u2581 handlers \u2581forward \u2581requests \u2581to \u2581the \u2581 grpc \u2581endpoint \u2581over"], "bleu": 0.133564981709363, "rouge_l": 0.3839160839160839}
{"id": 127, "predictions": ["\u2581// \u2581 Cluster \u2581returns \u2581the \u2581cluster \u2581 name \u2581of \u2581the \u2581given \u2581string ."], "references": ["\u2581// \u2581 Cluster \u2581only \u2581keeps \u2581the \u2581 major . minor ."], "bleu": 0.2044800736021839, "rouge_l": 0.507628294036061}
{"id": 437, "predictions": ["\u2581// \u2581Register Lease Handler \u2581registers \u2581a \u2581new \u2581lease \u2581handler ."], "references": ["\u2581// \u2581Register Lease Handler \u2581registers \u2581the \u2581http \u2581 handlers \u2581for \u2581service \u2581 Lease \u2581to \u2581\" mux \" . \u2581// \u2581The \u2581 handlers \u2581forward \u2581requests \u2581to \u2581the \u2581 grpc \u2581endpoint \u2581over"], "bleu": 0.06494445301863586, "rouge_l": 0.27518796992481204}
{"id": 435, "predictions": ["\u2581// \u2581Register KV Handler \u2581registers \u2581a \u2581new \u2581 KV Handler ."], "references": ["\u2581// \u2581Register KV Handler \u2581registers \u2581the \u2581http \u2581 handlers \u2581for \u2581service \u2581 KV \u2581to \u2581\" mux \" . \u2581// \u2581The \u2581 handlers \u2581forward \u2581requests \u2581to \u2581the \u2581 grpc \u2581endpoint \u2581over"], "bleu": 0.0859101796309836, "rouge_l": 0.36014760147601477}
{"id": 1652, "predictions": ["\u2581// \u2581 FromJSON ToString s \u2581returns \u2581a \u2581list \u2581of \u2581strings \u2581that \u2581match \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 contexts ToString s \u2581converts \u2581a \u2581list \u2581 Context \u2581to \u2581a \u2581list \u2581of \u2581string"], "bleu": 0.18710158230410626, "rouge_l": 0.44248704663212435}
{"id": 1152, "predictions": ["\u2581// \u2581 Query Map \u2581returns \u2581a \u2581 Query Map \u2581that \u2581can \u2581be \u2581used \u2581to \u2581issue \u2581a \u2581query \u2581// \u2581query ."], "references": ["\u2581// \u2581 Query Map \u2581creates \u2581a \u2581 Query Map \u2581from \u2581 T id e Queries"], "bleu": 0.28479942163807365, "rouge_l": 0.46923076923076923}
{"id": 899, "predictions": ["\u2581// \u2581 Dial \u2581connects \u2581to \u2581the \u2581given \u2581address \u2581and \u2581timeout s ."], "references": ["\u2581// \u2581 Dial \u2581implements \u2581the \u2581 Stream Layer \u2581interface ."], "bleu": 0.21401603033752975, "rouge_l": 0.46212121212121204}
{"id": 438, "predictions": ["\u2581// \u2581Register Cluster Handler \u2581registers \u2581a \u2581 Cluster Handler \u2581for \u2581the \u2581 grpc \u2581server ."], "references": ["\u2581// \u2581Register Cluster Handler \u2581registers \u2581the \u2581http \u2581 handlers \u2581for \u2581service \u2581 Cluster \u2581to \u2581\" mux \" . \u2581// \u2581The \u2581 handlers \u2581forward \u2581requests \u2581to \u2581the \u2581 grpc \u2581endpoint \u2581over"], "bleu": 0.1599248714366856, "rouge_l": 0.41924398625429554}
{"id": 439, "predictions": ["\u2581// \u2581Register Maintenance Handler \u2581registers \u2581a \u2581 Maintenance Handler \u2581for \u2581the \u2581 Maintenance ."], "references": ["\u2581// \u2581Register Maintenance Handler \u2581registers \u2581the \u2581http \u2581 handlers \u2581for \u2581service \u2581 Maintenance \u2581to \u2581\" mux \" . \u2581// \u2581The \u2581 handlers \u2581forward \u2581requests \u2581to \u2581the \u2581 grpc \u2581endpoint \u2581over"], "bleu": 0.133564981709363, "rouge_l": 0.42657342657342656}
{"id": 84, "predictions": ["\u2581// \u2581 Exist \u2581checks \u2581if \u2581the \u2581directory \u2581 exists \u2581in \u2581the \u2581directory \u2581directory ."], "references": ["\u2581// \u2581 Exist \u2581returns \u2581true \u2581if \u2581there \u2581are \u2581any \u2581files \u2581in \u2581a \u2581given \u2581directory ."], "bleu": 0.1957437868038899, "rouge_l": 0.4797752808988765}
{"id": 440, "predictions": ["\u2581// \u2581Register Auth Handler \u2581registers \u2581a \u2581 Auth Handler \u2581for \u2581the \u2581 grpc \u2581server ."], "references": ["\u2581// \u2581Register Auth Handler \u2581registers \u2581the \u2581http \u2581 handlers \u2581for \u2581service \u2581 Auth \u2581to \u2581\" mux \" . \u2581// \u2581The \u2581 handlers \u2581forward \u2581requests \u2581to \u2581the \u2581 grpc \u2581endpoint \u2581over"], "bleu": 0.1599248714366856, "rouge_l": 0.41924398625429554}
{"id": 1863, "predictions": ["\u2581// \u2581 UserData FromMap \u2581returns \u2581a \u2581 UserData \u2581for \u2581the \u2581given \u2581 map ."], "references": ["\u2581// \u2581 UserData FromMap \u2581returns \u2581a \u2581 UserData \u2581from \u2581a \u2581 map"], "bleu": 0.5968774175634496, "rouge_l": 0.7800511508951408}
{"id": 548, "predictions": ["\u2581// \u2581 Unsafe ForEach \u2581 marks \u2581all \u2581the \u2581passed \u2581in - memory \u2581bucket \u2581and \u2581 set \u2581the \u2581// \u2581 contents \u2581of \u2581the \u2581given \u2581bucket ."], "references": ["\u2581// \u2581 Unsafe ForEach \u2581must \u2581be \u2581called \u2581holding \u2581the \u2581lock \u2581on \u2581the \u2581tx ."], "bleu": 0.15209404090446677, "rouge_l": 0.37821080602302926}
{"id": 1517, "predictions": ["\u2581// \u2581ensure \u2581that \u2581the \u2581file \u2581is \u2581valid ."], "references": ["\u2581// \u2581ensure \u2581will \u2581ensure \u2581binary \u2581is \u2581on \u2581 path \u2581or \u2581return \u2581an \u2581error \u2581with \u2581install \u2581message ."], "bleu": 0.07785262511712612, "rouge_l": 0.3004926108374384}
{"id": 34, "predictions": ["\u2581// \u2581 Unique Strings Map From Flag \u2581returns \u2581a \u2581 map \u2581of \u2581 key \u2581names \u2581from \u2581flag \u2581flag \u2581 name"], "references": ["\u2581// \u2581 Unique Strings Map From Flag \u2581returns \u2581a \u2581 map \u2581of \u2581strings \u2581from \u2581the \u2581flag ."], "bleu": 0.6093228271290612, "rouge_l": 0.7679856115107913}
{"id": 1037, "predictions": ["\u2581// \u2581 persist \u2581 flash s \u2581the \u2581session"], "references": ["\u2581// Persist \u2581the \u2581 flash \u2581inside \u2581the \u2581session ."], "bleu": 0.2451240194075422, "rouge_l": 0.5820610687022901}
{"id": 1779, "predictions": ["\u2581// \u2581 From Item \u2581returns \u2581the \u2581 Resource Object \u2581from \u2581the \u2581 Resource \u2581object ."], "references": ["\u2581// \u2581 From Item \u2581implements \u2581Object \u2581interface"], "bleu": 0.22894156860669912, "rouge_l": 0.3891547049441786}
{"id": 962, "predictions": ["\u2581// \u2581backoff \u2581returns \u2581the \u2581 min m \u2581between \u2581two \u2581 round \u2581 trip s"], "references": ["\u2581// \u2581backoff \u2581is \u2581used \u2581to \u2581compute \u2581an \u2581 exponential \u2581backoff \u2581// \u2581duration . \u2581 Base \u2581time \u2581is \u2581scaled \u2581by \u2581the \u2581current \u2581 round , \u2581// \u2581up \u2581to \u2581some \u2581maximum \u2581scale"], "bleu": 0.052466281662696825, "rouge_l": 0.21328671328671328}
{"id": 1829, "predictions": ["\u2581// \u2581 New DryRun Client \u2581returns \u2581a \u2581new \u2581 Client \u2581instance \u2581with \u2581a \u2581 Client ."], "references": ["\u2581// \u2581 New DryRun Client \u2581creates \u2581a \u2581new \u2581client \u2581that \u2581will \u2581not \u2581perform \u2581 mutating \u2581actions \u2581// \u2581such \u2581as \u2581setting \u2581 statuses \u2581or \u2581 comment ing , \u2581but \u2581it \u2581will"], "bleu": 0.13967812699315366, "rouge_l": 0.370945945945946}
{"id": 1791, "predictions": ["\u2581// \u2581 Printf \u2581implements \u2581the \u2581 Logger \u2581interface ."], "references": ["\u2581// \u2581 Printf \u2581logs \u2581a \u2581formatted \u2581line \u2581to \u2581the \u2581logging \u2581output ."], "bleu": 0.20830666398386113, "rouge_l": 0.4642313546423136}
{"id": 858, "predictions": ["\u2581// \u2581 First Index \u2581returns \u2581the \u2581first \u2581index \u2581of \u2581the \u2581first \u2581index \u2581in \u2581the \u2581store ."], "references": ["\u2581// \u2581 First Index \u2581implements \u2581the \u2581 Log Store \u2581interface ."], "bleu": 0.23287896954139942, "rouge_l": 0.45979899497487436}
{"id": 284, "predictions": ["\u2581// \u2581maybe First Index \u2581returns \u2581true \u2581if \u2581the \u2581first \u2581index \u2581is \u2581in \u2581the \u2581index ."], "references": ["\u2581// \u2581maybe First Index \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581first \u2581possible \u2581entry \u2581in \u2581entries \u2581// \u2581if \u2581it \u2581has \u2581a \u2581snapshot ."], "bleu": 0.2665429557589629, "rouge_l": 0.48541114058355433}
{"id": 748, "predictions": ["\u2581// \u2581 Begin \u2581 marks \u2581the \u2581 oldest \u2581item \u2581to \u2581the \u2581 left ."], "references": ["\u2581// \u2581 Begin \u2581sets \u2581the \u2581last \u2581index \u2581to \u2581the \u2581given \u2581value ."], "bleu": 0.2102369368326755, "rouge_l": 0.5460358056265985}
{"id": 1133, "predictions": ["\u2581// \u2581 New Signature With Annotation \u2581creates \u2581a \u2581new \u2581 empty \u2581 set \u2581row \u2581for \u2581the \u2581given \u2581spec ."], "references": ["\u2581// \u2581 New ProwJob With Annotation \u2581initializes \u2581a \u2581 ProwJob \u2581out \u2581of \u2581a \u2581 ProwJob Spec \u2581with \u2581annotations ."], "bleu": 0.16195570128532405, "rouge_l": 0.47368421052631576}
{"id": 1743, "predictions": ["\u2581// \u2581has ID \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 entity \u2581is \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581has ID \u2581look \u2581for \u2581a \u2581specific \u2581 id \u2581in \u2581a \u2581list \u2581of \u2581events"], "bleu": 0.15844501337268932, "rouge_l": 0.3373893805309734}
{"id": 877, "predictions": ["\u2581// \u2581 Last Contact \u2581returns \u2581the \u2581last \u2581time \u2581of \u2581the \u2581 contact ."], "references": ["\u2581// \u2581 Last Contact \u2581returns \u2581the \u2581time \u2581of \u2581last \u2581 contact ."], "bleu": 0.584706532697313, "rouge_l": 0.8863936591809777}
{"id": 697, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581Set \u2581adds \u2581a \u2581 key - value \u2581pair \u2581to \u2581the \u2581database . \u2581// \u2581// \u2581It \u2581will \u2581return \u2581 Err ReadOnly Txn \u2581if \u2581update \u2581flag \u2581was \u2581 set \u2581to \u2581false"], "bleu": 0.030710335746837913, "rouge_l": 0.22932330827067668}
{"id": 1196, "predictions": ["\u2581// \u2581 set Secret \u2581sets \u2581the \u2581 secret \u2581 key \u2581for \u2581the \u2581 secret \u2581 secret ."], "references": ["\u2581// \u2581 set Secret \u2581sets \u2581a \u2581value \u2581in \u2581a \u2581 map \u2581of \u2581 secrets ."], "bleu": 0.2928298013714697, "rouge_l": 0.505699481865285}
{"id": 1577, "predictions": ["\u2581// \u2581 Sync Metrics \u2581 synchronize s \u2581metrics \u2581from \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Sync Metrics \u2581records \u2581metrics \u2581for \u2581the \u2581cached \u2581 p row jobs ."], "bleu": 0.2851312645387196, "rouge_l": 0.5886610373944512}
{"id": 930, "predictions": ["\u2581// \u2581go Func \u2581is \u2581a \u2581function \u2581that \u2581will \u2581 call \u2581the \u2581function \u2581to \u2581 call \u2581the \u2581// \u2581 raft \u2581state ."], "references": ["\u2581// \u2581 Start \u2581a \u2581goroutine \u2581and \u2581properly \u2581handle \u2581the \u2581race \u2581between \u2581a \u2581routine \u2581// \u2581starting \u2581and \u2581increment ing , \u2581and \u2581 exiting \u2581and \u2581 decrement ing ."], "bleu": 0.07561841943212426, "rouge_l": 0.24448897795591182}
{"id": 610, "predictions": ["\u2581// \u2581 New Watcher \u2581creates \u2581a \u2581new \u2581watcher \u2581for \u2581 watching \u2581a \u2581watcher"], "references": ["\u2581// \u2581 New Watcher \u2581 wraps \u2581a \u2581 Watcher \u2581instance \u2581so \u2581that \u2581all \u2581 Watch \u2581requests \u2581// \u2581are \u2581prefixed \u2581with \u2581a \u2581given \u2581string \u2581and \u2581all \u2581 Watch \u2581responses \u2581have \u2581//"], "bleu": 0.08086124506504899, "rouge_l": 0.30391459074733096}
{"id": 1910, "predictions": ["\u2581// \u2581 Transaction \u2581sets \u2581the \u2581 set \u2581of \u2581function s ."], "references": ["\u2581// \u2581 Transaction \u2581creates \u2581a \u2581new \u2581 Cluster Tx \u2581object \u2581and \u2581transaction ally \u2581executes \u2581the \u2581// \u2581cluster \u2581database \u2581 interactions \u2581invoked \u2581by \u2581the \u2581given \u2581function . \u2581If \u2581the \u2581function \u2581//"], "bleu": 0.04481889913725955, "rouge_l": 0.3151291512915129}
{"id": 398, "predictions": ["\u2581// \u2581 Value Bytes \u2581returns \u2581the \u2581 byte \u2581 slice \u2581of \u2581the \u2581 Cmp ."], "references": ["\u2581// \u2581 Value Bytes \u2581returns \u2581the \u2581 byte \u2581 slice \u2581holding \u2581the \u2581comparison \u2581value , \u2581if \u2581any ."], "bleu": 0.5570438815301075, "rouge_l": 0.7155425219941348}
{"id": 316, "predictions": ["\u2581// \u2581 Contains All \u2581returns \u2581true \u2581if \u2581all \u2581of \u2581the \u2581 set \u2581 contains \u2581all \u2581the \u2581 keys \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Contains All \u2581returns \u2581whether \u2581the \u2581 set \u2581 contains \u2581all \u2581given \u2581values"], "bleu": 0.3876683604691331, "rouge_l": 0.6218721037998146}
{"id": 1421, "predictions": ["\u2581// \u2581 P row \u2581sets \u2581the \u2581 P row \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 P row \u2581retrieves \u2581the \u2581 P row V 1 Client"], "bleu": 0.41211837513230276, "rouge_l": 0.6240409207161125}
{"id": 916, "predictions": ["\u2581// \u2581 contains Node \u2581returns \u2581true \u2581if \u2581the \u2581node \u2581is \u2581in \u2581the \u2581 raft \u2581node ."], "references": ["\u2581// \u2581 contains Node \u2581returns \u2581true \u2581if \u2581the \u2581 slice \u2581' nodes ' \u2581 contains \u2581' n '"], "bleu": 0.44759898191007524, "rouge_l": 0.523854961832061}
{"id": 644, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 identifier \u2581of \u2581the \u2581next \u2581 g ."], "references": ["\u2581// \u2581 Next \u2581generates \u2581a \u2581 id \u2581that \u2581is \u2581unique ."], "bleu": 0.18207052811092136, "rouge_l": 0.40884718498659517}
{"id": 772, "predictions": ["\u2581// \u2581 Seek For Prev \u2581moves \u2581the \u2581 iterator \u2581to \u2581the \u2581next \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Seek For Prev \u2581finds \u2581an \u2581entry \u2581with \u2581 key \u2581<= \u2581target ."], "bleu": 0.28433291815307693, "rouge_l": 0.45963401506996776}
{"id": 854, "predictions": ["\u2581// \u2581Register Observer \u2581registers \u2581a \u2581new \u2581observer \u2581of \u2581the \u2581 Raft ."], "references": ["\u2581// \u2581Register Observer \u2581registers \u2581a \u2581new \u2581observer ."], "bleu": 0.5760844201603896, "rouge_l": 0.8299319727891156}
{"id": 855, "predictions": ["\u2581// \u2581 Deregister Observer \u2581is \u2581part \u2581of \u2581the \u2581 raft . Raft \u2581interface ."], "references": ["\u2581// \u2581 Deregister Observer \u2581 deregister s \u2581an \u2581observer ."], "bleu": 0.2676032275663791, "rouge_l": 0.5154929577464789}
{"id": 1442, "predictions": ["\u2581// \u2581 Is Approved \u2581returns \u2581true \u2581if \u2581the \u2581 Approve rs \u2581are \u2581 satisfied"], "references": ["\u2581// \u2581 Is Approved \u2581returns \u2581a \u2581bool \u2581indicating \u2581whether \u2581the \u2581 PR \u2581is \u2581fully \u2581 approved . \u2581// \u2581If \u2581a \u2581human \u2581manually \u2581added \u2581the \u2581 approved \u2581 label , \u2581"], "bleu": 0.11959725930229445, "rouge_l": 0.3412587412587413}
{"id": 1390, "predictions": ["\u2581// \u2581Get \u2581digest \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Lens \u2581returns \u2581a \u2581 Lens \u2581by \u2581 name , \u2581if \u2581it \u2581 exists ; \u2581otherwise \u2581it \u2581returns \u2581an \u2581error ."], "bleu": 0.08896641080808891, "rouge_l": 0.38227394807520143}
{"id": 876, "predictions": ["\u2581// \u2581clean Notify \u2581removes \u2581the \u2581 status \u2581of \u2581the \u2581 set \u2581of \u2581 shards ."], "references": ["\u2581// \u2581clean Notify \u2581is \u2581used \u2581to \u2581delete \u2581 notify , \u2581 ."], "bleu": 0.17609282679116184, "rouge_l": 0.4535315985130111}
{"id": 699, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581given \u2581 key \u2581from \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581a \u2581 key . \u2581// \u2581// \u2581This \u2581is \u2581done \u2581by \u2581adding \u2581a \u2581delete \u2581marker \u2581for \u2581the \u2581 key \u2581at \u2581commit \u2581timestamp . \u2581Any \u2581// \u2581reads \u2581happening"], "bleu": 0.055140912627813024, "rouge_l": 0.30942028985507253}
{"id": 721, "predictions": ["\u2581// \u2581 Same Key \u2581returns \u2581true \u2581if \u2581the \u2581 src \u2581is \u2581a \u2581 key \u2581of \u2581the \u2581dst \u2581 key ."], "references": ["\u2581// \u2581 Same Key \u2581checks \u2581for \u2581 key \u2581equality \u2581ignoring \u2581the \u2581version \u2581timestamp \u2581suffix ."], "bleu": 0.2082198320914845, "rouge_l": 0.46923076923076923}
{"id": 528, "predictions": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581timeout Detector ."], "references": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581 New Timeout Detector ."], "bleu": 0.5145013914965352, "rouge_l": 0.7624999999999998}
{"id": 545, "predictions": ["\u2581// \u2581 Unsafe Seq Put \u2581 marks \u2581the \u2581given \u2581 key \u2581to \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Unsafe Seq Put \u2581must \u2581be \u2581called \u2581holding \u2581the \u2581lock \u2581on \u2581the \u2581tx ."], "bleu": 0.31181814978096556, "rouge_l": 0.5191489361702127}
{"id": 570, "predictions": ["\u2581// \u2581 GetDefault Interfaces \u2581returns \u2581the \u2581default \u2581 map \u2581of \u2581the \u2581default \u2581host"], "references": ["\u2581// \u2581 GetDefault Interfaces \u2581fetches \u2581the \u2581device \u2581 name \u2581of \u2581default \u2581 routable \u2581interface ."], "bleu": 0.279167640244994, "rouge_l": 0.5641618497109826}
{"id": 1015, "predictions": ["\u2581// \u2581 Embed \u2581 Embed s \u2581a \u2581 Message"], "references": ["\u2581// \u2581 Embed \u2581 embeds \u2581the \u2581images \u2581to \u2581the \u2581 email ."], "bleu": 0.2945901093386716, "rouge_l": 0.4642313546423136}
{"id": 914, "predictions": ["\u2581// \u2581 Last Contact \u2581returns \u2581the \u2581last \u2581time \u2581of \u2581the \u2581last \u2581 contact ."], "references": ["\u2581// \u2581 Last Contact \u2581returns \u2581the \u2581time \u2581of \u2581last \u2581 contact \u2581by \u2581a \u2581leader . \u2581// \u2581This \u2581only \u2581makes \u2581sense \u2581if \u2581we \u2581are \u2581currently \u2581a \u2581 follower ."], "bleu": 0.19905304276733932, "rouge_l": 0.5390279823269514}
{"id": 1126, "predictions": ["\u2581// \u2581Get Org Projects \u2581returns \u2581a \u2581list \u2581of \u2581projects \u2581for \u2581a \u2581given \u2581organization ."], "references": ["\u2581// \u2581Get Org Projects \u2581returns \u2581the \u2581list \u2581of \u2581projects \u2581under \u2581an \u2581 org"], "bleu": 0.41211837513230276, "rouge_l": 0.5965770171149144}
{"id": 1013, "predictions": ["\u2581// \u2581 Attach \u2581 attaches \u2581a \u2581message \u2581to \u2581a \u2581file ."], "references": ["\u2581// \u2581 Attach \u2581 attaches \u2581the \u2581files \u2581to \u2581the \u2581 email ."], "bleu": 0.4093783607491417, "rouge_l": 0.603960396039604}
{"id": 1003, "predictions": ["\u2581// \u2581Set Headers \u2581sets \u2581the \u2581 headers \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581Set Headers \u2581sets \u2581the \u2581message \u2581 headers ."], "bleu": 0.5156626918239822, "rouge_l": 0.8146911519198664}
{"id": 1046, "predictions": ["\u2581// \u2581 Close Notify \u2581closes \u2581the \u2581event \u2581 recorder"], "references": ["\u2581// \u2581 Close Notify \u2581return \u2581true \u2581across \u2581the \u2581channel \u2581when \u2581the \u2581connection \u2581// \u2581in \u2581the \u2581browser \u2581has \u2581been \u2581 severe d ."], "bleu": 0.10078721266643585, "rouge_l": 0.359882005899705}
{"id": 591, "predictions": ["\u2581// \u2581 Unique URL sFrom Flag \u2581returns \u2581a \u2581 URL \u2581that \u2581will \u2581 set \u2581the \u2581 URL \u2581flag \u2581flag \u2581for \u2581the \u2581given \u2581flag set , \u2581and \u2581returns \u2581the \u2581 URL"], "references": ["\u2581// \u2581 Unique URL sFrom Flag \u2581returns \u2581a \u2581 slice \u2581from \u2581urls \u2581got \u2581from \u2581the \u2581flag ."], "bleu": 0.2991528889155785, "rouge_l": 0.4926578560939794}
{"id": 1021, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581response \u2581to \u2581the \u2581response ."], "references": ["\u2581// \u2581 Write \u2581the \u2581 body \u2581of \u2581the \u2581response"], "bleu": 0.28997844147152074, "rouge_l": 0.6376306620209059}
{"id": 1023, "predictions": ["\u2581// \u2581 Close Notify \u2581closes \u2581the \u2581response \u2581 status \u2581and \u2581returns \u2581the \u2581error ."], "references": ["\u2581// \u2581 Close Notify \u2581implements \u2581the \u2581http . Close Notifier \u2581interface"], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 982, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581a \u2581 key \u2581to \u2581the \u2581 Context"], "references": ["\u2581// \u2581Set \u2581a \u2581value \u2581onto \u2581the \u2581 Context . \u2581Any \u2581value \u2581 set \u2581onto \u2581the \u2581 Context \u2581// \u2581will \u2581be \u2581automatically \u2581available \u2581in \u2581 templates ."], "bleu": 0.0883724072055079, "rouge_l": 0.38699444885011897}
{"id": 457, "predictions": ["\u2581// \u2581 Open For Read \u2581returns \u2581a \u2581new \u2581 WAL \u2581with \u2581the \u2581given \u2581 contents \u2581and \u2581 s ."], "references": ["\u2581// \u2581 Open For Read \u2581only \u2581open s \u2581the \u2581 wal \u2581files \u2581for \u2581read . \u2581// \u2581 Write \u2581on \u2581a \u2581read \u2581only \u2581 wal \u2581panic s ."], "bleu": 0.19659925688118762, "rouge_l": 0.4215618521078092}
{"id": 859, "predictions": ["\u2581// \u2581 LastIndex \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581 i ."], "references": ["\u2581// \u2581 LastIndex \u2581implements \u2581the \u2581 Log Store \u2581interface ."], "bleu": 0.2620251007173263, "rouge_l": 0.5763779527559055}
{"id": 1162, "predictions": ["\u2581// \u2581 New DryRun Signature Client \u2581returns \u2581a \u2581new \u2581 S row r"], "references": ["\u2581// \u2581 New DryRun ProwJob Client \u2581creates \u2581a \u2581new \u2581client \u2581that \u2581uses \u2581 deck \u2581as \u2581a \u2581read - only \u2581proxy \u2581for \u2581 ProwJob \u2581 data"], "bleu": 0.12935773337007855, "rouge_l": 0.3983673469387755}
{"id": 1881, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Cron \u2581instance ."], "references": ["\u2581// \u2581 New \u2581makes \u2581a \u2581new \u2581 Cron \u2581object"], "bleu": 0.46924700641055994, "rouge_l": 0.7439024390243903}
{"id": 71, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581 fifo"], "references": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581scheduler \u2581and \u2581cancel s \u2581all \u2581pending \u2581jobs ."], "bleu": 0.28873264657905134, "rouge_l": 0.474339035769829}
{"id": 771, "predictions": ["\u2581// \u2581 Seek \u2581 seek s \u2581to \u2581the \u2581target \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Seek \u2581advance s \u2581to \u2581the \u2581first \u2581entry \u2581with \u2581a \u2581 key \u2581>= \u2581target ."], "bleu": 0.22549907910826675, "rouge_l": 0.5269978401727862}
{"id": 789, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581item ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581 Item"], "bleu": 0.6786502681586726, "rouge_l": 0.7439024390243903}
{"id": 803, "predictions": ["\u2581// \u2581 getNode \u2581returns \u2581the \u2581 n ' s \u2581value \u2581of \u2581the \u2581given \u2581offset ."], "references": ["\u2581// \u2581 getNode \u2581returns \u2581a \u2581pointer \u2581to \u2581the \u2581node \u2581located \u2581at \u2581offset . \u2581If \u2581the \u2581offset \u2581is \u2581// \u2581zero , \u2581then \u2581the \u2581nil \u2581node \u2581pointer \u2581is \u2581returned ."], "bleu": 0.11786415110826444, "rouge_l": 0.35285610990600136}
{"id": 835, "predictions": ["\u2581// \u2581setup Stream Context \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sets \u2581the \u2581 data \u2581// \u2581to \u2581the \u2581 Network Transport ."], "references": ["\u2581// \u2581setup Stream Context \u2581is \u2581used \u2581to \u2581create \u2581a \u2581new \u2581stream \u2581context . \u2581This \u2581should \u2581be \u2581// \u2581called \u2581with \u2581the \u2581stream \u2581lock \u2581 held ."], "bleu": 0.2091722040551668, "rouge_l": 0.4280701754385965}
{"id": 878, "predictions": ["\u2581// \u2581 setLast Contact \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 contact _ contact ."], "references": ["\u2581// \u2581 setLast Contact \u2581sets \u2581the \u2581last \u2581 contact \u2581to \u2581the \u2581current \u2581time ."], "bleu": 0.28787878181011267, "rouge_l": 0.5551763367463025}
{"id": 836, "predictions": ["\u2581// \u2581 Running Context \u2581returns \u2581the \u2581 ctx \u2581stream \u2581of \u2581the \u2581local \u2581transport ."], "references": ["\u2581// \u2581 getStream Context \u2581is \u2581used \u2581retrieve \u2581the \u2581current \u2581stream \u2581context ."], "bleu": 0.1437791910008819, "rouge_l": 0.4680306905370844}
{"id": 544, "predictions": ["\u2581// \u2581 Unsafe Put \u2581 - \u2581 Unsafe s \u2581a \u2581 key \u2581value \u2581pair \u2581to \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Unsafe Put \u2581must \u2581be \u2581called \u2581holding \u2581the \u2581lock \u2581on \u2581the \u2581tx ."], "bleu": 0.19496249079519765, "rouge_l": 0.37385086823289065}
{"id": 153, "predictions": ["\u2581// \u2581 New V 3 \u2581creates \u2581a \u2581new \u2581 V 3 \u2581 manager ."], "references": ["\u2581// \u2581 New V 3 \u2581returns \u2581a \u2581new \u2581snapshot \u2581 Manager \u2581for \u2581 v 3. x \u2581snapshot ."], "bleu": 0.2963201497222048, "rouge_l": 0.6112224448897796}
{"id": 329, "predictions": ["\u2581// \u2581Set Hard State \u2581sets \u2581the \u2581state \u2581of \u2581the \u2581current \u2581state \u2581of \u2581the \u2581storage ."], "references": ["\u2581// \u2581Set Hard State \u2581saves \u2581the \u2581current \u2581 Hard State ."], "bleu": 0.2722589423069702, "rouge_l": 0.5538261997405965}
{"id": 1719, "predictions": ["\u2581// \u2581 Kube Client \u2581returns \u2581a \u2581 Kubernetes \u2581client"], "references": ["\u2581// \u2581 Kube Client \u2581returns \u2581a \u2581 Kubernetes \u2581client ."], "bleu": 0.8948393168143697, "rouge_l": 0.9384615384615386}
{"id": 1720, "predictions": ["\u2581// \u2581 Helper Client \u2581 get \u2581 kubernetes \u2581client \u2581client"], "references": ["\u2581// \u2581 ProwJob Client \u2581returns \u2581a \u2581 Kubernetes \u2581client ."], "bleu": 0.1972940627795883, "rouge_l": 0.5}
{"id": 506, "predictions": ["\u2581// \u2581 Is Role NotFound \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 role \u2581 NotFound \u2581error"], "references": ["\u2581// \u2581 Is Role NotFound \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581means \u2581 role \u2581not \u2581found \u2581of \u2581 v 2 \u2581API ."], "bleu": 0.4926553465626103, "rouge_l": 0.6714648602878917}
{"id": 1734, "predictions": ["\u2581// \u2581 Init GitHub OAuth Config \u2581returns \u2581the \u2581default \u2581 oauth 2 \u2581 config"], "references": ["\u2581// \u2581 Init GitHub OAuth Config \u2581creates \u2581an \u2581 OAuthClient \u2581using \u2581GitHub OAuth \u2581 config \u2581and \u2581a \u2581 Cookie \u2581 Store \u2581// \u2581to \u2581retain \u2581user \u2581credentials ."], "bleu": 0.17964808337113097, "rouge_l": 0.41527987897125573}
{"id": 667, "predictions": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581value \u2581associated \u2581with \u2581the \u2581 iterator ."], "bleu": 0.6710275993197631, "rouge_l": 0.8628005657708628}
{"id": 669, "predictions": ["\u2581// \u2581 Seek \u2581 seek s \u2581to \u2581the \u2581 key \u2581 set ."], "references": ["\u2581// \u2581 Seek \u2581bring s \u2581 us \u2581to \u2581element \u2581with \u2581 key \u2581>= \u2581given \u2581 key ."], "bleu": 0.18085489460790177, "rouge_l": 0.5859124866595516}
{"id": 1004, "predictions": ["\u2581// \u2581Set Address Header \u2581sets \u2581the \u2581 length \u2581of \u2581the \u2581header \u2581header ."], "references": ["\u2581// \u2581Set Address Header \u2581sets \u2581an \u2581address \u2581to \u2581the \u2581given \u2581header \u2581field ."], "bleu": 0.3872015705071016, "rouge_l": 0.6153846153846153}
{"id": 354, "predictions": ["\u2581// \u2581 Version \u2581returns \u2581the \u2581 URL \u2581to \u2581the \u2581flag \u2581 set \u2581of \u2581the \u2581flag \u2581 set ."], "references": ["\u2581// \u2581URLs From Flag \u2581returns \u2581a \u2581slices \u2581from \u2581 url \u2581got \u2581from \u2581the \u2581flag ."], "bleu": 0.11076007888812259, "rouge_l": 0.3696969696969697}
{"id": 1382, "predictions": ["\u2581// \u2581 New GeoLocation \u2581returns \u2581a \u2581new \u2581 Standard \u2581client"], "references": ["\u2581// \u2581 New FakeClient \u2581creates \u2581a \u2581client \u2581that \u2581doesn ' t \u2581do \u2581anything . \u2581If \u2581you \u2581provide \u2581a \u2581// \u2581 deck \u2581 URL \u2581then \u2581the \u2581client \u2581will \u2581hit \u2581that \u2581for"], "bleu": 0.036520949774262054, "rouge_l": 0.27518796992481204}
{"id": 1468, "predictions": ["\u2581// \u2581 Helper s \u2581returns \u2581an \u2581object \u2581that \u2581can \u2581list \u2581and \u2581 get \u2581 balances ."], "references": ["\u2581// \u2581 ProwJob s \u2581returns \u2581an \u2581object \u2581that \u2581can \u2581list \u2581and \u2581 get \u2581 ProwJob s ."], "bleu": 0.6855486797904878, "rouge_l": 0.8438735177865612}
{"id": 1378, "predictions": ["\u2581// \u2581 Config \u2581returns \u2581the \u2581 MD Config \u2581for \u2581the \u2581 content"], "references": ["\u2581// \u2581 Config \u2581returns \u2581the \u2581len s ' s \u2581configuration ."], "bleu": 0.38058030016749456, "rouge_l": 0.43821839080459773}
{"id": 1689, "predictions": ["\u2581// \u2581 get Release Note \u2581returns \u2581the \u2581first \u2581release \u2581of \u2581the \u2581 body , \u2581or \u2581nil \u2581if \u2581the \u2581// \u2581 body \u2581matches \u2581the \u2581 name \u2581of \u2581the \u2581 body ."], "references": ["\u2581// \u2581 get Release Note \u2581returns \u2581the \u2581release \u2581note \u2581from \u2581a \u2581 PR \u2581 body \u2581// \u2581assumes \u2581that \u2581the \u2581 PR \u2581 body \u2581followed \u2581the \u2581 PR \u2581template"], "bleu": 0.2978083475237007, "rouge_l": 0.5204778156996587}
{"id": 1512, "predictions": ["\u2581// \u2581 New Fake Open Plugin Wrapper \u2581returns \u2581a \u2581new \u2581 Fake Open Plugin Wrapper"], "references": ["\u2581// \u2581 New Fake Open Plugin Wrapper \u2581is \u2581the \u2581 constructor \u2581for \u2581 Fake Open Plugin Wrapper"], "bleu": 0.5897834184931404, "rouge_l": 0.7416413373860183}
{"id": 402, "predictions": ["\u2581// \u2581must Int 64 or Lease ID \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581 Int 64 or \u2581lease ID"], "references": ["\u2581// \u2581must Int 64 or Lease ID \u2581panic s \u2581if \u2581val \u2581isn ' t \u2581a \u2581 Lease ID , \u2581int \u2581or \u2581int 64. \u2581It \u2581returns \u2581an \u2581// \u2581int 64 \u2581otherwise"], "bleu": 0.21971527018291453, "rouge_l": 0.3986928104575163}
{"id": 1498, "predictions": ["\u2581// \u2581 From Payload \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Periodic ' s \u2581 json \u2581from \u2581the \u2581// \u2581 data \u2581pointed \u2581to \u2581by \u2581 this \u2581 Periodic"], "references": ["\u2581// \u2581 From Payload \u2581 set \u2581the \u2581 Periodic ProwJob Event \u2581from \u2581the \u2581 PubSub \u2581message \u2581payload ."], "bleu": 0.1513261740506026, "rouge_l": 0.4363376251788269}
{"id": 720, "predictions": ["\u2581// \u2581Parse Key \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581 key , \u2581if \u2581it \u2581is \u2581present ."], "references": ["\u2581// \u2581Parse Key \u2581parses \u2581the \u2581actual \u2581 key \u2581from \u2581the \u2581 key \u2581bytes ."], "bleu": 0.22786788980326644, "rouge_l": 0.6566200215285254}
{"id": 1805, "predictions": ["\u2581// \u2581new Dummy Client \u2581returns \u2581a \u2581new \u2581 Linked Client"], "references": ["\u2581// \u2581new Dummy Client \u2581creates \u2581a \u2581in \u2581memory \u2581client \u2581representation \u2581for \u2581testing , \u2581such \u2581that \u2581we \u2581do \u2581not \u2581need \u2581to \u2581use \u2581a \u2581 kubernetes \u2581API \u2581 Server ."], "bleu": 0.06308352567353562, "rouge_l": 0.2909379968203497}
{"id": 527, "predictions": ["\u2581// \u2581 New Timeout Detector \u2581returns \u2581a \u2581new \u2581 Timeout Detector \u2581instance ."], "references": ["\u2581// \u2581 New Timeout Detector \u2581creates \u2581the \u2581 Timeout Detector ."], "bleu": 0.45723134461864345, "rouge_l": 0.7614424410540915}
{"id": 767, "predictions": ["\u2581// \u2581 Key \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Key \u2581returns \u2581the \u2581 key \u2581at \u2581the \u2581current \u2581position ."], "bleu": 0.591460168684858, "rouge_l": 0.75}
{"id": 507, "predictions": ["\u2581// \u2581 Is User NotFound \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581user \u2581 NotFound \u2581error ."], "references": ["\u2581// \u2581 Is User NotFound \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581means \u2581user \u2581not \u2581found \u2581of \u2581 v 2 \u2581API ."], "bleu": 0.5102015378073002, "rouge_l": 0.6925764192139738}
{"id": 1828, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581 Client \u2581and \u2581parameters ."], "references": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581fully \u2581 operational \u2581GitHub \u2581client ."], "bleu": 0.18295654224495206, "rouge_l": 0.5132211538461539}
{"id": 1575, "predictions": ["\u2581// \u2581increment Num Pending Jobs \u2581removes \u2581the \u2581job \u2581 id \u2581for \u2581the \u2581given \u2581job ."], "references": ["\u2581// \u2581increment Num Pending Jobs \u2581 increments \u2581the \u2581amount \u2581of \u2581// \u2581pending \u2581 ProwJob s \u2581for \u2581the \u2581given \u2581job \u2581 identifier"], "bleu": 0.3308417421821475, "rouge_l": 0.5932802829354553}
{"id": 321, "predictions": ["\u2581// \u2581 v 2 Members URL \u2581returns \u2581a \u2581 URL \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 add \u2581 this \u2581 URL \u2581to \u2581the \u2581// \u2581 URL ."], "references": ["\u2581// \u2581 v 2 Members URL \u2581 add \u2581the \u2581necessary \u2581 path \u2581to \u2581the \u2581provided \u2581endpoint \u2581// \u2581to \u2581 route \u2581requests \u2581to \u2581the \u2581default \u2581 v 2 \u2581members \u2581API ."], "bleu": 0.2513718411781282, "rouge_l": 0.4866096866096866}
{"id": 326, "predictions": ["\u2581// \u2581stop \u2581stops \u2581the \u2581node ."], "references": ["\u2581// \u2581stop \u2581closes \u2581http , \u2581closes \u2581all \u2581channels , \u2581and \u2581stops \u2581 raft ."], "bleu": 0.08707046609544257, "rouge_l": 0.3730886850152905}
{"id": 952, "predictions": ["\u2581// \u2581 setLast Contact \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 contact ' s \u2581 contact ."], "references": ["\u2581// \u2581 setLast Contact \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581last \u2581 contact \u2581time \u2581to \u2581now"], "bleu": 0.611904949990603, "rouge_l": 0.7312687312687313}
{"id": 2013, "predictions": ["\u2581// \u2581 Operand GetName s \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 label \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581Return \u2581the \u2581names \u2581of \u2581all \u2581available \u2581 patches ."], "bleu": 0.08961672320242714, "rouge_l": 0.3765432098765432}
{"id": 33, "predictions": ["\u2581// \u2581 Unique String sFrom Flag \u2581returns \u2581a \u2581 slice \u2581of \u2581strings \u2581that \u2581match \u2581the \u2581flag \u2581 set \u2581in \u2581the \u2581flag \u2581flag"], "references": ["\u2581// \u2581 Unique String sFrom Flag \u2581returns \u2581a \u2581string \u2581 slice \u2581from \u2581the \u2581flag ."], "bleu": 0.4003577214275417, "rouge_l": 0.671559633027523}
{"id": 1232, "predictions": ["\u2581// \u2581new \u2581returns \u2581a \u2581new \u2581 empty \u2581 set ."], "references": ["\u2581// \u2581new ProwJob s \u2581returns \u2581a \u2581 ProwJob s"], "bleu": 0.21834177214239062, "rouge_l": 0.5313588850174217}
{"id": 290, "predictions": ["\u2581// \u2581 New Ctx Client \u2581returns \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581provided \u2581context ."], "references": ["\u2581// \u2581 New Ctx Client \u2581creates \u2581a \u2581client \u2581with \u2581a \u2581context \u2581but \u2581no \u2581underlying \u2581 grpc \u2581// \u2581connection . \u2581This \u2581is \u2581useful \u2581for \u2581embedded \u2581cases \u2581that \u2581override \u2581the \u2581// \u2581service"], "bleu": 0.13181595631945853, "rouge_l": 0.37731958762886597}
{"id": 376, "predictions": ["\u2581// \u2581 Retry Maintenance Client \u2581returns \u2581a \u2581 Maintenance Client \u2581that \u2581allows \u2581 Maintenance Client \u2581// \u2581to \u2581 connect \u2581to \u2581the \u2581client ."], "references": ["\u2581// \u2581 Retry Maintenance Client \u2581implements \u2581a \u2581 Maintenance ."], "bleu": 0.2533098404966104, "rouge_l": 0.5871657754010695}
{"id": 76, "predictions": ["\u2581// \u2581Register Interrupt Handler \u2581registers \u2581the \u2581 Interrupt \u2581handler ."], "references": ["\u2581// \u2581Register Interrupt Handler \u2581registers \u2581a \u2581new \u2581 Interrupt Handler . \u2581 Handlers \u2581registered \u2581// \u2581after \u2581 interrupt \u2581hand ing \u2581was \u2581 initiated \u2581will \u2581not \u2581be \u2581executed ."], "bleu": 0.08840613183330129, "rouge_l": 0.38791732909379967}
{"id": 711, "predictions": ["\u2581// \u2581 Seek \u2581 seek s \u2581to \u2581the \u2581given \u2581 key . \u2581If \u2581the \u2581 key \u2581is \u2581not \u2581present , \u2581the \u2581 iterator \u2581will \u2581// \u2581be \u2581removed ."], "references": ["\u2581// \u2581 Seek \u2581follows \u2581the \u2581 y . Iterator \u2581interface"], "bleu": 0.09955744015810275, "rouge_l": 0.34528301886792445}
{"id": 1134, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 empty \u2581 set \u2581row"], "references": ["\u2581// \u2581 New ProwJob \u2581initializes \u2581a \u2581 ProwJob \u2581out \u2581of \u2581a \u2581 ProwJob Spec ."], "bleu": 0.16950516895876122, "rouge_l": 0.44907975460122695}
{"id": 793, "predictions": ["\u2581// \u2581 Valid \u2581returns \u2581true \u2581if \u2581the \u2581 iterator \u2581is \u2581 empty ."], "references": ["\u2581// \u2581 Valid \u2581returns \u2581false \u2581when \u2581iteration \u2581is \u2581done ."], "bleu": 0.2891784933232572, "rouge_l": 0.5343065693430658}
{"id": 1103, "predictions": ["\u2581// \u2581Get PullRequest Changes \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581pull \u2581request \u2581for \u2581the \u2581given \u2581// \u2581repository ."], "references": ["\u2581// \u2581Get PullRequest Changes \u2581returns \u2581the \u2581file \u2581modifications \u2581in \u2581a \u2581 PR ."], "bleu": 0.32825185297291753, "rouge_l": 0.531590413943355}
{"id": 1913, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Close \u2581the \u2581database \u2581 facade ."], "bleu": 0.33167003447658744, "rouge_l": 0.6587473002159828}
{"id": 1489, "predictions": ["\u2581// \u2581Parse Full Config \u2581parses \u2581a \u2581 json \u2581 config \u2581into \u2581a \u2581 Full Config ."], "references": ["\u2581// \u2581Parse Full Config \u2581will \u2581unmarshal \u2581 OWNER S \u2581file ' s \u2581 content \u2581into \u2581a \u2581 Full Config \u2581// \u2581Returns \u2581an \u2581error \u2581if \u2581the \u2581 content \u2581cannot \u2581be \u2581"], "bleu": 0.18681678648787398, "rouge_l": 0.45337837837837835}
{"id": 761, "predictions": ["\u2581// \u2581 Errorf \u2581logs \u2581a \u2581 format \u2581of \u2581 Options \u2581with \u2581the \u2581given \u2581 format ."], "references": ["\u2581// \u2581 Errorf \u2581logs \u2581an \u2581 ERROR \u2581log \u2581message \u2581to \u2581the \u2581logger \u2581specified \u2581in \u2581opts \u2581or \u2581to \u2581the \u2581// \u2581global \u2581logger \u2581if \u2581no \u2581logger \u2581is \u2581specified \u2581in \u2581opts ."], "bleu": 0.10684740795414464, "rouge_l": 0.29570637119113574}
{"id": 1490, "predictions": ["\u2581// \u2581Parse Simple Config \u2581parses \u2581a \u2581 byte \u2581 slice \u2581into \u2581a \u2581 Config Config ."], "references": ["\u2581// \u2581Parse Simple Config \u2581will \u2581unmarshal \u2581an \u2581 OWNER S \u2581file ' s \u2581 content \u2581into \u2581a \u2581Simple Config \u2581// \u2581Returns \u2581an \u2581error \u2581if \u2581the \u2581 content \u2581cannot \u2581be \u2581"], "bleu": 0.1149274481183857, "rouge_l": 0.370945945945946}
{"id": 505, "predictions": ["\u2581// \u2581 Is Key NotFound \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 key NotFound \u2581error ."], "references": ["\u2581// \u2581 Is Key NotFound \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581 code \u2581is \u2581 ErrorCode Key NotFound ."], "bleu": 0.5838832780647786, "rouge_l": 0.7958993476234855}
{"id": 762, "predictions": ["\u2581// \u2581 Infof \u2581logs \u2581a \u2581message \u2581with \u2581 ERROR \u2581level ."], "references": ["\u2581// \u2581 Infof \u2581logs \u2581an \u2581 INFO \u2581message \u2581to \u2581the \u2581logger \u2581specified \u2581in \u2581opts ."], "bleu": 0.2478539992548469, "rouge_l": 0.44907975460122695}
{"id": 647, "predictions": ["\u2581// \u2581 New Syncer \u2581creates \u2581a \u2581new \u2581 Syncer ."], "references": ["\u2581// \u2581 New Syncer \u2581creates \u2581a \u2581 Syncer ."], "bleu": 0.7016879391277371, "rouge_l": 0.9564459930313588}
{"id": 773, "predictions": ["\u2581// \u2581 New Uni Iterator \u2581returns \u2581a \u2581new \u2581 empty \u2581 slice \u2581with \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 New Uni Iterator \u2581returns \u2581a \u2581 Uni Iterator ."], "bleu": 0.38761990534234064, "rouge_l": 0.648936170212766}
{"id": 1494, "predictions": ["\u2581// \u2581Find Review ers \u2581contain For File \u2581 searches \u2581for \u2581the \u2581given \u2581 path \u2581and \u2581// \u2581returns \u2581a \u2581 split \u2581string \u2581if \u2581it \u2581 exists ."], "references": ["\u2581// \u2581Find Review ers Owners For File \u2581returns \u2581the \u2581 OWNER S \u2581file \u2581 path \u2581 f ur the st \u2581down \u2581the \u2581tree \u2581for \u2581a \u2581specified \u2581file \u2581// \u2581that \u2581"], "bleu": 0.16739837169107816, "rouge_l": 0.3878612716763006}
{"id": 1493, "predictions": ["\u2581// \u2581Find Approve r Without For File \u2581finds \u2581the \u2581user - r \u2581sibling \u2581of \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581Find Approve r Owners For File \u2581returns \u2581the \u2581 OWNER S \u2581file \u2581 path \u2581 f ur the st \u2581down \u2581the \u2581tree \u2581for \u2581a \u2581specified \u2581file \u2581// \u2581that \u2581"], "bleu": 0.13114308306603364, "rouge_l": 0.3588235294117647}
{"id": 1796, "predictions": ["\u2581// \u2581 New Type Filter Wrapper Plugin \u2581creates \u2581a \u2581 Type Filter Wrapper \u2581for \u2581 type \u2581 type"], "references": ["\u2581// \u2581 New Type Filter Wrapper Plugin \u2581is \u2581the \u2581 constructor \u2581of \u2581 Type Filter Wrapper Plugin"], "bleu": 0.5089175114935748, "rouge_l": 0.6318267419962337}
{"id": 1006, "predictions": ["\u2581// \u2581Set Date Header \u2581sets \u2581the \u2581 date \u2581header \u2581field ."], "references": ["\u2581// \u2581Set Date Header \u2581sets \u2581a \u2581 date \u2581to \u2581the \u2581given \u2581header \u2581field ."], "bleu": 0.4492029123095655, "rouge_l": 0.7830551989730423}
{"id": 612, "predictions": ["\u2581// \u2581 campaign \u2581implements \u2581 Node ."], "references": ["\u2581// \u2581 Campaign \u2581causes \u2581 this \u2581 Raw Node \u2581to \u2581transition \u2581to \u2581candidate \u2581state ."], "bleu": 0.0927110373244369, "rouge_l": 0.42657342657342656}
{"id": 1568, "predictions": ["\u2581// \u2581 Active \u2581returns \u2581true \u2581if \u2581the \u2581 Multi State \u2581has \u2581been \u2581 active ."], "references": ["\u2581// \u2581 Active \u2581is \u2581true \u2581if \u2581all \u2581the \u2581states \u2581are \u2581 active ."], "bleu": 0.25336549464486463, "rouge_l": 0.6512455516014234}
{"id": 1830, "predictions": ["\u2581// \u2581 New Standard \u2581returns \u2581a \u2581new \u2581 Standard Client"], "references": ["\u2581// \u2581 New FakeClient \u2581creates \u2581a \u2581new \u2581client \u2581that \u2581will \u2581not \u2581perform \u2581any \u2581actions \u2581at \u2581all ."], "bleu": 0.13855521500902726, "rouge_l": 0.3538283062645011}
{"id": 1782, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581function \u2581to \u2581 set \u2581the \u2581 lib CI \u2581context"], "references": ["\u2581// \u2581use Context \u2581calls \u2581 kubectl \u2581 config \u2581use - context \u2581 ctx"], "bleu": 0.11114924776032006, "rouge_l": 0.2982885085574572}
{"id": 319, "predictions": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581 this \u2581 unsafe ."], "references": ["\u2581// \u2581 Copy \u2581creates \u2581a \u2581new \u2581Set \u2581containing \u2581the \u2581values \u2581of \u2581the \u2581first"], "bleu": 0.19690425335318407, "rouge_l": 0.39713541666666663}
{"id": 1949, "predictions": ["\u2581// \u2581 Images Get On Current Node \u2581returns \u2581the \u2581list \u2581of \u2581images \u2581that \u2581are \u2581 active \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Images Get On Current Node \u2581returns \u2581all \u2581images \u2581that \u2581the \u2581current \u2581 LXD \u2581node \u2581instance \u2581has ."], "bleu": 0.43811296943537126, "rouge_l": 0.6182432432432432}
{"id": 804, "predictions": ["\u2581// \u2581 getKey \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581given \u2581offset ."], "references": ["\u2581// \u2581 getKey \u2581returns \u2581 byte \u2581 slice \u2581at \u2581offset ."], "bleu": 0.3438931217657843, "rouge_l": 0.6135057471264368}
{"id": 289, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Client ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581etcd v 3 \u2581client \u2581from \u2581a \u2581given \u2581configuration ."], "bleu": 0.18214515785175406, "rouge_l": 0.44907975460122695}
{"id": 1839, "predictions": ["\u2581// \u2581 Token \u2581returns \u2581the \u2581 oauth 2. Token \u2581for \u2581the \u2581 token"], "references": ["\u2581// \u2581 Token \u2581is \u2581an \u2581implementation \u2581for \u2581 oauth 2. Token Source \u2581interface ."], "bleu": 0.33908012849916846, "rouge_l": 0.5150784077201447}
{"id": 1732, "predictions": ["\u2581// \u2581 Log Close \u2581closes \u2581the \u2581 close \u2581connection ."], "references": ["\u2581// \u2581 Log Close \u2581will \u2581attempt \u2581a \u2581 close \u2581an \u2581log \u2581any \u2581error"], "bleu": 0.298940794016102, "rouge_l": 0.5097493036211699}
{"id": 1487, "predictions": ["\u2581// \u2581 Expand Alias \u2581expand s \u2581the \u2581 alias \u2581for \u2581a \u2581repository ."], "references": ["\u2581// \u2581 Expand Alias \u2581returns \u2581members \u2581of \u2581an \u2581 alias"], "bleu": 0.30576902884505114, "rouge_l": 0.5343065693430658}
{"id": 334, "predictions": ["\u2581// \u2581 Snapshot \u2581returns \u2581the \u2581snapshot \u2581of \u2581the \u2581storage ."], "references": ["\u2581// \u2581 Snapshot \u2581implements \u2581the \u2581 Storage \u2581interface ."], "bleu": 0.25965358893403384, "rouge_l": 0.5313588850174217}
{"id": 1106, "predictions": ["\u2581// \u2581Get Single Commit \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581Get Single Commit \u2581returns \u2581a \u2581single \u2581commit ."], "bleu": 0.3636227046500071, "rouge_l": 0.563944530046225}
{"id": 1108, "predictions": ["\u2581// \u2581 List Statuses \u2581returns \u2581the \u2581list \u2581of \u2581 status \u2581for \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581 List Statuses \u2581returns \u2581individual \u2581 status \u2581 contexts \u2581on \u2581a \u2581commit ."], "bleu": 0.3489981252688509, "rouge_l": 0.5551763367463025}
{"id": 1109, "predictions": ["\u2581// \u2581Get Combined Status \u2581returns \u2581 Combined Status \u2581 status \u2581for \u2581given \u2581 owner ."], "references": ["\u2581// \u2581Get Combined Status \u2581returns \u2581the \u2581overall \u2581 status \u2581for \u2581a \u2581commit ."], "bleu": 0.393755531055134, "rouge_l": 0.6512455516014234}
{"id": 1008, "predictions": ["\u2581// \u2581Set Body \u2581sets \u2581the \u2581 body \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581Set Body \u2581sets \u2581the \u2581 body \u2581of \u2581the \u2581message . \u2581It \u2581replaces \u2581any \u2581 content \u2581previously \u2581 set \u2581// \u2581by \u2581Set Body , \u2581Set Body Writer , \u2581Add Alternative"], "bleu": 0.1777685728281378, "rouge_l": 0.49520295202952025}
{"id": 769, "predictions": ["\u2581// \u2581 Next \u2581advance s \u2581the \u2581 iterator \u2581to \u2581the \u2581next \u2581 iterator ."], "references": ["\u2581// \u2581 Next \u2581advance s \u2581to \u2581the \u2581next \u2581position ."], "bleu": 0.42311785416105785, "rouge_l": 0.7732394366197185}
{"id": 1909, "predictions": ["\u2581// \u2581 SetDefault Timeout \u2581sets \u2581the \u2581default \u2581timeout \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 SetDefault Timeout \u2581sets \u2581the \u2581default \u2581go - dql ite \u2581driver \u2581timeout ."], "bleu": 0.5006602237924521, "rouge_l": 0.6828358208955225}
{"id": 304, "predictions": ["\u2581// \u2581 Is Create \u2581returns \u2581true \u2581if \u2581 this \u2581event \u2581is \u2581a \u2581Create \u2581object"], "references": ["\u2581// \u2581 Is Create \u2581returns \u2581true \u2581if \u2581the \u2581event \u2581tells \u2581that \u2581the \u2581 key \u2581is \u2581newly \u2581created ."], "bleu": 0.3872423830060792, "rouge_l": 0.5501002004008017}
{"id": 1068, "predictions": ["\u2581// \u2581 Last \u2581returns \u2581the \u2581last \u2581 n \u2581of \u2581the \u2581 Options ."], "references": ["\u2581// \u2581 Last \u2581checks \u2581if \u2581the \u2581 name \u2581is \u2581the \u2581last \u2581of \u2581the \u2581parts"], "bleu": 0.2397658582273679, "rouge_l": 0.5150784077201447}
{"id": 423, "predictions": ["\u2581// \u2581 Stop \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581mock \u2581server , \u2581immediately \u2581closing \u2581all \u2581open \u2581connections \u2581and \u2581listeners ."], "bleu": 0.09557556419742812, "rouge_l": 0.2436750998668442}
{"id": 373, "predictions": ["\u2581// \u2581 Retry KV Client \u2581returns \u2581a \u2581new \u2581 KV Client ."], "references": ["\u2581// \u2581 Retry KV Client \u2581implements \u2581a \u2581 KV Client ."], "bleu": 0.5923033072023248, "rouge_l": 0.8764367816091955}
{"id": 705, "predictions": ["\u2581// \u2581 Seek To Last \u2581returns \u2581the \u2581last \u2581 iterator \u2581in \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Seek To Last \u2581bring s \u2581 us \u2581to \u2581the \u2581last \u2581element . \u2581 Valid \u2581should \u2581return \u2581true ."], "bleu": 0.2629334322955157, "rouge_l": 0.5013698630136987}
{"id": 1392, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581instance ."], "references": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581 slack \u2581client \u2581with \u2581an \u2581API \u2581 token ."], "bleu": 0.18088944840162538, "rouge_l": 0.48541114058355433}
{"id": 781, "predictions": ["\u2581// \u2581Assert True f \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 asserts \u2581that \u2581the \u2581given \u2581 format \u2581// \u2581is \u2581 set ."], "references": ["\u2581// \u2581Assert True f \u2581is \u2581Assert True \u2581with \u2581extra \u2581 info ."], "bleu": 0.22866722231574904, "rouge_l": 0.4461859979101358}
{"id": 131, "predictions": ["\u2581// \u2581clone \u2581returns \u2581a \u2581deep \u2581copy \u2581of \u2581the \u2581 hub ."], "references": ["\u2581// \u2581clone \u2581function \u2581clone s \u2581the \u2581watcher Hub \u2581and \u2581return \u2581the \u2581cloned \u2581one . \u2581// \u2581only \u2581clone \u2581the \u2581static \u2581 content . \u2581do \u2581not \u2581clone \u2581the \u2581current \u2581 watchers ."], "bleu": 0.031691747505272136, "rouge_l": 0.22509225092250923}
{"id": 1690, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581 set \u2581of \u2581client \u2581 name ."], "references": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581client \u2581from \u2581a \u2581 bo skos Client \u2581interface"], "bleu": 0.1667955161379731, "rouge_l": 0.44758909853249473}
{"id": 1853, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 My Images ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Utility Images ."], "bleu": 0.8739351325046804, "rouge_l": 0.9473684210526315}
{"id": 593, "predictions": ["\u2581// \u2581 Hold \u2581is \u2581used \u2581to \u2581 remove \u2581a \u2581lease \u2581 key ."], "references": ["\u2581// \u2581 Hold \u2581creates \u2581the \u2581 barrier \u2581 key \u2581causing \u2581processes \u2581to \u2581block \u2581on \u2581 Wait ."], "bleu": 0.17200565404503979, "rouge_l": 0.4557097118463179}
{"id": 1774, "predictions": ["\u2581// \u2581 Header \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581of \u2581the \u2581 content"], "references": ["\u2581// \u2581 Header \u2581executes \u2581the \u2581\" header \" \u2581section \u2581of \u2581the \u2581template ."], "bleu": 0.1892240568795935, "rouge_l": 0.43416370106761565}
{"id": 811, "predictions": ["\u2581// \u2581is Level 0 Compact able \u2581returns \u2581true \u2581if \u2581the \u2581 controller \u2581 contains \u2581the \u2581 length \u2581of \u2581the \u2581// \u2581current \u2581 controller ."], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581level \u2581zero \u2581may \u2581be \u2581 compacted , \u2581without \u2581 accounting \u2581for \u2581 compaction s \u2581that \u2581already \u2581// \u2581might \u2581be \u2581happening ."], "bleu": 0.08416801423765995, "rouge_l": 0.3253333333333333}
{"id": 666, "predictions": ["\u2581// \u2581 Key \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Key \u2581returns \u2581the \u2581 key \u2581associated \u2581with \u2581the \u2581current \u2581 iterator"], "bleu": 0.5762095527681761, "rouge_l": 0.7942708333333333}
{"id": 377, "predictions": ["\u2581// \u2581 Retry Auth Client \u2581returns \u2581a \u2581 Auth Client \u2581that \u2581uses \u2581 Client \u2581to \u2581use \u2581// \u2581for \u2581a \u2581client ."], "references": ["\u2581// \u2581 Retry Auth Client \u2581implements \u2581a \u2581 Auth Client ."], "bleu": 0.33118227522229554, "rouge_l": 0.6623235613463625}
{"id": 252, "predictions": ["\u2581// \u2581 Report Snapshot \u2581 wraps \u2581the \u2581 raft . Snapshot Snapshot ."], "references": ["\u2581// \u2581 Report Snapshot \u2581reports \u2581snapshot \u2581sent \u2581 status \u2581to \u2581the \u2581 raft \u2581state \u2581machine , \u2581// \u2581and \u2581 clear s \u2581the \u2581used \u2581snapshot \u2581from \u2581the \u2581snapshot \u2581store ."], "bleu": 0.10980767448634127, "rouge_l": 0.40102264426588746}
{"id": 1412, "predictions": ["\u2581// \u2581 New Bundle d States \u2581returns \u2581a \u2581new \u2581 Bundle d States \u2581instance ."], "references": ["\u2581// \u2581 New Bundle d States \u2581is \u2581the \u2581 constructor \u2581for \u2581 Bundle d States"], "bleu": 0.5307074109851435, "rouge_l": 0.6666666666666666}
{"id": 1495, "predictions": ["\u2581// \u2581Find Labels For File \u2581returns \u2581the \u2581 set \u2581of \u2581labels \u2581that \u2581match \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581Find Labels For File \u2581returns \u2581a \u2581 set \u2581of \u2581labels \u2581which \u2581should \u2581be \u2581applied \u2581to \u2581 PR s \u2581// \u2581modifying \u2581files \u2581under \u2581the \u2581given \u2581 path ."], "bleu": 0.3158052333771314, "rouge_l": 0.5959525471039777}
{"id": 1329, "predictions": ["\u2581// \u2581Register Review Comment EventHandler \u2581registers \u2581a \u2581 comment \u2581 comment \u2581for \u2581a \u2581 comment ."], "references": ["\u2581// \u2581Register Review Comment EventHandler \u2581registers \u2581a \u2581plugin ' s \u2581 github . Review Comment Event \u2581handler ."], "bleu": 0.38643011460763615, "rouge_l": 0.523854961832061}
{"id": 659, "predictions": ["\u2581// \u2581 ID FromString \u2581parses \u2581a \u2581string \u2581into \u2581a \u2581 hex - encoded \u2581string ."], "references": ["\u2581// \u2581 ID FromString \u2581attempts \u2581to \u2581create \u2581an \u2581 ID \u2581from \u2581a \u2581base -16 \u2581string ."], "bleu": 0.2623114922934634, "rouge_l": 0.44900105152471087}
{"id": 695, "predictions": ["\u2581// \u2581 set Discard T s \u2581sets \u2581the \u2581 T s \u2581field \u2581of \u2581the \u2581current \u2581state ."], "references": ["\u2581// \u2581Any \u2581deleted \u2581or \u2581invalid \u2581versions \u2581at \u2581or \u2581below \u2581 ts \u2581would \u2581be \u2581discard ed \u2581during \u2581// \u2581 compaction \u2581to \u2581 reclaim \u2581disk \u2581space \u2581in \u2581 L SM \u2581tree \u2581and"], "bleu": 0.047553423092416565, "rouge_l": 0.12159468438538207}
{"id": 333, "predictions": ["\u2581// \u2581 First Index \u2581returns \u2581the \u2581first \u2581index \u2581of \u2581the \u2581first \u2581 active \u2581 active \u2581// \u2581 active \u2581 active \u2581index ."], "references": ["\u2581// \u2581 First Index \u2581implements \u2581the \u2581 Storage \u2581interface ."], "bleu": 0.1733705613469748, "rouge_l": 0.4692307692307692}
{"id": 375, "predictions": ["\u2581// \u2581 Retry Cluster Client \u2581returns \u2581a \u2581new \u2581 Cluster Client \u2581that \u2581allows \u2581 Client \u2581to \u2581use \u2581// \u2581for \u2581a \u2581client ."], "references": ["\u2581// \u2581 Retry Cluster Client \u2581implements \u2581a \u2581 Cluster Client ."], "bleu": 0.27151607333166955, "rouge_l": 0.6448202959830868}
{"id": 14, "predictions": ["\u2581// \u2581 Op Compact \u2581creates \u2581a \u2581 Compact \u2581operation ."], "references": ["\u2581// \u2581 Op Compact \u2581 wraps \u2581 slice \u2581 Compact Option \u2581to \u2581create \u2581a \u2581 Compact Op ."], "bleu": 0.21714711102526363, "rouge_l": 0.5434298440979956}
{"id": 751, "predictions": ["\u2581// \u2581 Done Many \u2581is \u2581used \u2581to \u2581 mark \u2581a \u2581 slice \u2581of \u2581 items \u2581from \u2581the \u2581 left - first \u2581// \u2581 mark ."], "references": ["\u2581// \u2581 Done Many \u2581works \u2581like \u2581 Done \u2581but \u2581accepts \u2581multiple \u2581indices ."], "bleu": 0.14710052131359536, "rouge_l": 0.33485818847209514}
{"id": 1844, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Relations Config ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Decoration Config ."], "bleu": 0.8739351325046804, "rouge_l": 0.9473684210526315}
{"id": 1845, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 GCS Configuration ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 GCS Configuration ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 1846, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Jenkins Spec ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Jenkins Spec ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 369, "predictions": ["\u2581// \u2581advance Ticks \u2581returns \u2581the \u2581next \u2581 Raft \u2581node \u2581in \u2581the \u2581 raft \u2581node ."], "references": ["\u2581// \u2581advance Ticks \u2581advance s \u2581 ticks \u2581of \u2581 Raft \u2581node . \u2581// \u2581This \u2581can \u2581be \u2581used \u2581for \u2581fast - forwarding \u2581 election \u2581// \u2581 ticks \u2581in \u2581multi \u2581 data"], "bleu": 0.09320795658207887, "rouge_l": 0.3353951890034364}
{"id": 904, "predictions": ["\u2581// \u2581 Leader \u2581returns \u2581the \u2581current \u2581leader \u2581of \u2581the \u2581 Raft"], "references": ["\u2581// \u2581 Leader \u2581is \u2581used \u2581to \u2581return \u2581the \u2581current \u2581leader \u2581of \u2581the \u2581cluster . \u2581// \u2581It \u2581may \u2581return \u2581 empty \u2581string \u2581if \u2581there \u2581is \u2581no \u2581current \u2581leader \u2581// \u2581or \u2581the"], "bleu": 0.09692776537862714, "rouge_l": 0.40516605166051656}
{"id": 1848, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Validating List ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 ProwJob List ."], "bleu": 0.8739351325046804, "rouge_l": 0.9473684210526315}
{"id": 1849, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Validating Spec ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 ProwJob Spec ."], "bleu": 0.8739351325046804, "rouge_l": 0.9473684210526315}
{"id": 1850, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Validating Status ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 ProwJob Status ."], "bleu": 0.8739351325046804, "rouge_l": 0.9473684210526315}
{"id": 374, "predictions": ["\u2581// \u2581 Retry Lease Client \u2581returns \u2581a \u2581new \u2581 Lease Client ."], "references": ["\u2581// \u2581 Retry Lease Client \u2581implements \u2581a \u2581 Lease Client ."], "bleu": 0.5923033072023248, "rouge_l": 0.8764367816091955}
{"id": 1330, "predictions": ["\u2581// \u2581Register Generic Comment Handler \u2581registers \u2581a \u2581 comment \u2581handler \u2581for \u2581 Generic Comment ."], "references": ["\u2581// \u2581Register Generic Comment Handler \u2581registers \u2581a \u2581plugin ' s \u2581 github . Generic Comment Event \u2581handler ."], "bleu": 0.4232618196604538, "rouge_l": 0.6559139784946237}
{"id": 724, "predictions": ["\u2581// \u2581 New Throttle \u2581returns \u2581a \u2581new \u2581 Throttle ."], "references": ["\u2581// \u2581 New Throttle \u2581creates \u2581a \u2581new \u2581 throttle \u2581with \u2581a \u2581max \u2581number \u2581of \u2581workers ."], "bleu": 0.26522408033276956, "rouge_l": 0.5907990314769976}
{"id": 513, "predictions": ["\u2581// \u2581 A \u2581retry \u2581option \u2581to \u2581retry \u2581retry \u2581authentication ."], "references": ["\u2581// \u2581with Auth Retry \u2581sets \u2581enables \u2581authentication \u2581retries ."], "bleu": 0.14991106946711685, "rouge_l": 0.31881533101045295}
{"id": 1197, "predictions": ["\u2581// \u2581Get Token Generator \u2581returns \u2581the \u2581 key \u2581 key \u2581 path \u2581for \u2581the \u2581agent ."], "references": ["\u2581// \u2581Get Token Generator \u2581returns \u2581a \u2581function \u2581that \u2581gets \u2581the \u2581value \u2581of \u2581a \u2581given \u2581 secret ."], "bleu": 0.292926043126568, "rouge_l": 0.4822134387351779}
{"id": 332, "predictions": ["\u2581// \u2581 LastIndex \u2581returns \u2581the \u2581current \u2581 data \u2581in \u2581the \u2581storage ."], "references": ["\u2581// \u2581 LastIndex \u2581implements \u2581the \u2581 Storage \u2581interface ."], "bleu": 0.2224246939793677, "rouge_l": 0.5865384615384615}
{"id": 227, "predictions": ["\u2581// \u2581 New Keys API WithPrefix \u2581returns \u2581a \u2581new \u2581 Keys API \u2581for \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581 New Keys API WithPrefix \u2581act s \u2581like \u2581 New Keys API , \u2581but \u2581allows \u2581the \u2581caller \u2581// \u2581to \u2581provide \u2581a \u2581custom \u2581base \u2581 URL \u2581 path . \u2581This"], "bleu": 0.20576637341400197, "rouge_l": 0.5183006535947713}
{"id": 1324, "predictions": ["\u2581// \u2581Register Issue Comment Handler \u2581registers \u2581a \u2581 Issue \u2581 comment \u2581handler \u2581for \u2581 Issue Comment ."], "references": ["\u2581// \u2581Register Issue Comment Handler \u2581registers \u2581a \u2581plugin ' s \u2581 github . Issue Comment Event \u2581handler ."], "bleu": 0.4280640412373271, "rouge_l": 0.625349487418453}
{"id": 315, "predictions": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581the \u2581 set \u2581 contains \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 Contains \u2581returns \u2581whether \u2581the \u2581 set \u2581 contains \u2581the \u2581given \u2581value"], "bleu": 0.6739047062564734, "rouge_l": 0.8683274021352313}
{"id": 794, "predictions": ["\u2581// \u2581 Valid For Prefix \u2581returns \u2581true \u2581if \u2581the \u2581 iterator \u2581has \u2581a \u2581prefix ."], "references": ["\u2581// \u2581 Valid For Prefix \u2581returns \u2581false \u2581when \u2581iteration \u2581is \u2581done \u2581// \u2581or \u2581when \u2581the \u2581current \u2581 key \u2581is \u2581not \u2581prefixed \u2581by \u2581the \u2581specified \u2581prefix ."], "bleu": 0.2081262708487042, "rouge_l": 0.4652936689549962}
{"id": 232, "predictions": ["\u2581// \u2581 Account \u2581the \u2581 config \u2581 Change"], "references": ["\u2581// \u2581The \u2581 9 \u2581pass \u2581function s \u2581below \u2581takes \u2581the \u2581 raft pb . Entry \u2581and \u2581return \u2581if \u2581the \u2581entry \u2581should \u2581be \u2581printed \u2581and \u2581the \u2581 type \u2581of \u2581entry ,"], "bleu": 0.016045011753648093, "rouge_l": 0.23828125}
{"id": 632, "predictions": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581current \u2581 Index ."], "references": ["\u2581// \u2581 Index \u2581retrieves \u2581the \u2581current \u2581index \u2581of \u2581the \u2581store ."], "bleu": 0.3200286101270288, "rouge_l": 0.7011494252873562}
{"id": 1891, "predictions": ["\u2581// \u2581canonical Link \u2581returns \u2581the \u2581 link \u2581 link \u2581for \u2581the \u2581 GCS ."], "references": ["\u2581// \u2581 Canonical Link \u2581gets \u2581a \u2581 link \u2581to \u2581the \u2581location \u2581of \u2581job - specific \u2581artifacts \u2581in \u2581 GCS"], "bleu": 0.11854951884650104, "rouge_l": 0.41295938104448743}
{"id": 774, "predictions": ["\u2581// \u2581 Next \u2581advance s \u2581the \u2581 data \u2581to \u2581the \u2581next \u2581 iterator ."], "references": ["\u2581// \u2581 Next \u2581implements \u2581 y . Interface"], "bleu": 0.18207052811092136, "rouge_l": 0.47805642633228845}
{"id": 1287, "predictions": ["\u2581// \u2581 Is Failure \u2581returns \u2581true \u2581if \u2581the \u2581build \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Is Failure \u2581means \u2581the \u2581job \u2581completed \u2581with \u2581problems ."], "bleu": 0.2891784933232572, "rouge_l": 0.507628294036061}
{"id": 1053, "predictions": ["\u2581// \u2581Perform At \u2581 wraps \u2581the \u2581 Job . \u2581Perform \u2581a \u2581 call \u2581to \u2581the \u2581given \u2581job ."], "references": ["\u2581// \u2581Perform At \u2581performs \u2581a \u2581job \u2581at \u2581a \u2581particular \u2581time \u2581using \u2581a \u2581goroutine ."], "bleu": 0.1457684614972261, "rouge_l": 0.38364779874213834}
{"id": 1770, "predictions": ["\u2581// \u2581serve \u2581serves \u2581the \u2581request \u2581and \u2581serve \u2581requests"], "references": ["\u2581// \u2581serve \u2581starts \u2581a \u2581http \u2581server \u2581and \u2581serves \u2581prometheus \u2581metrics . \u2581// \u2581 Mean t \u2581to \u2581be \u2581called \u2581inside \u2581a \u2581goroutine ."], "bleu": 0.04167150733414635, "rouge_l": 0.1844758064516129}
{"id": 1336, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 config \u2581configuration ."], "references": ["\u2581// \u2581Set \u2581attempts \u2581to \u2581 set \u2581the \u2581 plugins \u2581that \u2581are \u2581enabled \u2581on \u2581 repos . \u2581 Plugins \u2581are \u2581listed \u2581// \u2581as \u2581a \u2581 map \u2581from \u2581 repositories \u2581to \u2581the"], "bleu": 0.017756724409141493, "rouge_l": 0.23828125}
{"id": 1870, "predictions": ["\u2581// \u2581 FromMap \u2581 - \u2581 get \u2581a \u2581 key \u2581value \u2581from \u2581the \u2581 map"], "references": ["\u2581// \u2581 FromMap \u2581 fee ls \u2581updates \u2581user \u2581 data \u2581from \u2581a \u2581 map"], "bleu": 0.30130404892785684, "rouge_l": 0.5551763367463025}
{"id": 1362, "predictions": ["\u2581// \u2581 New Agent \u2581returns \u2581a \u2581new \u2581agent ."], "references": ["\u2581// \u2581 New Agent \u2581returns \u2581a \u2581new \u2581GitHub \u2581OAuth \u2581 Agent ."], "bleu": 0.5607160526593706, "rouge_l": 0.7427701674277016}
{"id": 1247, "predictions": ["\u2581// \u2581 Match \u2581returns \u2581true \u2581if \u2581the \u2581 label \u2581matches \u2581the \u2581given \u2581 label ."], "references": ["\u2581// \u2581 Match \u2581is \u2581\" un labeled \""], "bleu": 0.15310245441182443, "rouge_l": 0.2760180995475113}
{"id": 1055, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 Route Info ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581JSON \u2581representation \u2581of \u2581the \u2581 Route Info"], "bleu": 0.5783569866465142, "rouge_l": 0.7887931034482759}
{"id": 1114, "predictions": ["\u2581// \u2581Find Issues \u2581returns \u2581all \u2581 repositories \u2581that \u2581match \u2581the \u2581given \u2581 search , \u2581and \u2581matches \u2581// \u2581the \u2581results ."], "references": ["\u2581// \u2581Find Issues \u2581returns \u2581 f . Issues"], "bleu": 0.18493046910349434, "rouge_l": 0.4644670050761421}
{"id": 445, "predictions": ["\u2581// \u2581 Start \u2581the \u2581 FSM \u2581and \u2581 flush es \u2581the \u2581state ."], "references": ["\u2581// \u2581lost Notify \u2581returns \u2581a \u2581channel \u2581that \u2581is \u2581closed \u2581if \u2581there \u2581has \u2581been \u2581// \u2581a \u2581leader \u2581loss \u2581not \u2581yet \u2581followed \u2581by \u2581a \u2581leader \u2581re acquire ."], "bleu": 0.038888796395126275, "rouge_l": 0.09674861221252974}
{"id": 201, "predictions": ["\u2581// \u2581 getAttr \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581tree ."], "references": ["\u2581// \u2581 MaxHeight \u2581is \u2581the \u2581expected \u2581maximum \u2581tree \u2581 height \u2581given \u2581the \u2581number \u2581of \u2581nodes"], "bleu": 0.20061216213411467, "rouge_l": 0.35260115606936415}
{"id": 243, "predictions": ["\u2581// \u2581 With TTL \u2581sets \u2581the \u2581 TTL \u2581of \u2581the \u2581session"], "references": ["\u2581// \u2581 With TTL \u2581configure s \u2581the \u2581session ' s \u2581 TTL \u2581in \u2581seconds . \u2581// \u2581If \u2581 TTL \u2581is \u2581<= \u25810, \u2581the \u2581default \u258160 \u2581seconds \u2581 TTL \u2581will \u2581be"], "bleu": 0.07416969631855261, "rouge_l": 0.36014760147601477}
{"id": 83, "predictions": ["\u2581// \u2581 A \u2581 sort \u2581 sort . Interface ."], "references": ["\u2581// \u2581with Top \u2581gets \u2581the \u2581first \u2581 key \u2581over \u2581the \u2581 get ' s \u2581prefix \u2581given \u2581a \u2581 sort \u2581order"], "bleu": 0.0725804295617984, "rouge_l": 0.31443298969072164}
{"id": 1045, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Message \u2581with \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 New \u2581builds \u2581a \u2581new \u2581message \u2581with \u2581the \u2581current \u2581buff a lo . Context"], "bleu": 0.21315897325675254, "rouge_l": 0.548314606741573}
{"id": 1002, "predictions": ["\u2581// \u2581Set Header \u2581sets \u2581the \u2581header \u2581field \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581Set Header \u2581sets \u2581a \u2581value \u2581to \u2581the \u2581given \u2581header \u2581field ."], "bleu": 0.35453206016838706, "rouge_l": 0.6902404526166903}
{"id": 594, "predictions": ["\u2581// \u2581 Release \u2581 releases \u2581the \u2581 relation ."], "references": ["\u2581// \u2581 Release \u2581deletes \u2581the \u2581 barrier \u2581 key \u2581to \u2581 unblock \u2581all \u2581waiting \u2581processes ."], "bleu": 0.15422428388597817, "rouge_l": 0.45692883895131076}
{"id": 1955, "predictions": ["\u2581// \u2581 Identity IsEnabled \u2581returns \u2581true \u2581if \u2581the \u2581 container \u2581is \u2581running"], "references": ["\u2581// \u2581 zfs IsEnabled \u2581returns \u2581whether \u2581 zfs \u2581backend \u2581is \u2581supported ."], "bleu": 0.1870361278311548, "rouge_l": 0.5}
{"id": 1418, "predictions": ["\u2581// \u2581 New Mem Cache \u2581returns \u2581a \u2581new \u2581 RoundTripper \u2581that \u2581will \u2581 write \u2581cache \u2581 data \u2581to \u2581cache ."], "references": ["\u2581// \u2581 New Mem Cache \u2581creates \u2581a \u2581GitHub \u2581cache \u2581 RoundTripper \u2581that \u2581is \u2581back ed \u2581by \u2581a \u2581memory \u2581// \u2581cache ."], "bleu": 0.31625376682254497, "rouge_l": 0.5342356687898089}
{"id": 515, "predictions": ["\u2581// \u2581with Backoff \u2581sets \u2581the \u2581backoff \u2581function \u2581used \u2581by \u2581the \u2581 exponential \u2581backoff \u2581function ."], "references": ["\u2581// \u2581 With Backoff \u2581sets \u2581the \u2581` Backoff Func \u2581` used \u2581to \u2581control \u2581time \u2581between \u2581retries ."], "bleu": 0.15411174368247596, "rouge_l": 0.3090172239108409}
{"id": 558, "predictions": ["\u2581// \u2581 CleanUp \u2581sets \u2581the \u2581lock \u2581for \u2581the \u2581lease ."], "references": ["\u2581// \u2581 forever \u2581sets \u2581the \u2581expiry \u2581of \u2581lease \u2581to \u2581be \u2581 forever ."], "bleu": 0.16810676226047, "rouge_l": 0.5097493036211699}
{"id": 1455, "predictions": ["\u2581// \u2581 New Cache \u2581creates \u2581a \u2581new \u2581cache \u2581with \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581 New Cache \u2581returns \u2581a \u2581new \u2581 Cache \u2581given \u2581the \u2581root \u2581directory \u2581that \u2581should \u2581be \u2581used \u2581// \u2581on \u2581disk \u2581for \u2581cache \u2581storage"], "bleu": 0.1586333430879753, "rouge_l": 0.3703382480485689}
{"id": 230, "predictions": ["\u2581// \u2581 Flag To Env \u2581returns \u2581a \u2581string \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 replace \u2581the \u2581environment \u2581variables \u2581// \u2581in \u2581the \u2581environment \u2581variable ."], "references": ["\u2581// \u2581 Flag To Env \u2581converts \u2581flag \u2581string \u2581to \u2581upper - case \u2581environment \u2581variable \u2581 key \u2581string ."], "bleu": 0.23096862760324496, "rouge_l": 0.48878205128205127}
{"id": 1195, "predictions": ["\u2581// \u2581Get Secret \u2581returns \u2581the \u2581 secret \u2581 path \u2581for \u2581the \u2581 secret \u2581 path"], "references": ["\u2581// \u2581Get Secret \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581 secret \u2581stored \u2581in \u2581a \u2581 map ."], "bleu": 0.32649018395194956, "rouge_l": 0.5131440588853837}
{"id": 1208, "predictions": ["\u2581// \u2581run Worker \u2581runs \u2581the \u2581worker \u2581loop ."], "references": ["\u2581// \u2581run Worker \u2581executes \u2581the \u2581loop \u2581to \u2581process \u2581new \u2581 items \u2581added \u2581to \u2581the \u2581queue ."], "bleu": 0.1262909976406414, "rouge_l": 0.47164948453608246}
{"id": 209, "predictions": ["\u2581// \u2581 New Exact ReadCloser \u2581returns \u2581a \u2581new \u2581 ReadCloser \u2581that \u2581reads \u2581from \u2581the \u2581given \u2581 ReadCloser ."], "references": ["\u2581// \u2581 New Exact ReadCloser \u2581returns \u2581a \u2581 ReadCloser \u2581that \u2581returns \u2581errors \u2581if \u2581the \u2581underlying \u2581// \u2581reader \u2581does \u2581not \u2581read \u2581back \u2581exactly \u2581the \u2581requested \u2581number \u2581of \u2581bytes ."], "bleu": 0.2628088657202268, "rouge_l": 0.5020576131687242}
{"id": 1022, "predictions": ["\u2581// \u2581 Flush \u2581 flush es \u2581the \u2581underlying \u2581response \u2581to \u2581the \u2581underlying \u2581writer ."], "references": ["\u2581// \u2581 Flush \u2581the \u2581response"], "bleu": 0.18207052811092136, "rouge_l": 0.5754716981132075}
{"id": 1860, "predictions": ["\u2581// \u2581 Cluster Alias \u2581returns \u2581the \u2581 alias \u2581for \u2581the \u2581 Cluster \u2581 model ."], "references": ["\u2581// \u2581 Cluster Alias \u2581specifies \u2581the \u2581 key \u2581in \u2581the \u2581clusters \u2581 map \u2581to \u2581use . \u2581// \u2581// \u2581This \u2581allows \u2581 scheduling \u2581a \u2581 p row \u2581job \u2581somewhere \u2581 aside"], "bleu": 0.10845843803319692, "rouge_l": 0.37731958762886597}
{"id": 1027, "predictions": ["\u2581// \u2581 GET \u2581adds \u2581a \u2581 GET \u2581request \u2581to \u2581the \u2581 app ."], "references": ["\u2581// \u2581 GET \u2581maps \u2581an \u2581HTTP \u2581\" GET \" \u2581request \u2581to \u2581the \u2581 path \u2581and \u2581the \u2581specified \u2581handler ."], "bleu": 0.23697654997898265, "rouge_l": 0.5441030723488601}
{"id": 126, "predictions": ["\u2581// \u2581String sFrom Flag \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581flag \u2581flag \u2581for \u2581the \u2581given \u2581flag \u2581 set ."], "references": ["\u2581// \u2581String sFrom Flag \u2581returns \u2581a \u2581string \u2581 slice \u2581from \u2581the \u2581flag ."], "bleu": 0.2872797668292002, "rouge_l": 0.5821845174973489}
{"id": 137, "predictions": ["\u2581// \u2581 Limit Listener \u2581returns \u2581a \u2581 net . Listener \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 net . Listener \u2581for \u2581a \u2581 net . Listener ."], "references": ["\u2581// \u2581 Limit Listener \u2581returns \u2581a \u2581 Listener \u2581that \u2581accepts \u2581at \u2581most \u2581 n \u2581 simultaneous \u2581// \u2581connections \u2581from \u2581the \u2581provided \u2581 Listener ."], "bleu": 0.2792180096174905, "rouge_l": 0.5291201982651798}
{"id": 991, "predictions": ["\u2581// \u2581 Render \u2581renders \u2581the \u2581 data \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Render \u2581the \u2581provided \u2581 Data \u2581to \u2581the \u2581provider \u2581 Writer \u2581using \u2581the \u2581// \u2581 Renderer Func \u2581provide ."], "bleu": 0.12311108677871502, "rouge_l": 0.49045226130653274}
{"id": 913, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Raft"], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581 this \u2581 Raft \u2581node ."], "bleu": 0.5496461248927521, "rouge_l": 0.7646239554317549}
{"id": 1011, "predictions": ["\u2581// \u2581Set Copy Func \u2581sets \u2581a \u2581function \u2581to \u2581 set \u2581the \u2581function \u2581 f ."], "references": ["\u2581// \u2581Set Copy Func \u2581is \u2581a \u2581file \u2581setting \u2581to \u2581 replace \u2581the \u2581function \u2581that \u2581runs \u2581when \u2581the \u2581// \u2581message \u2581is \u2581sent . \u2581It \u2581should \u2581copy \u2581the \u2581 content \u2581of \u2581the"], "bleu": 0.11601277025340072, "rouge_l": 0.41924398625429554}
{"id": 1009, "predictions": ["\u2581// \u2581Set Part Encoding \u2581sets \u2581the \u2581 Encoding Setting \u2581field ."], "references": ["\u2581// \u2581Set Part Encoding \u2581sets \u2581the \u2581encoding \u2581of \u2581the \u2581part \u2581added \u2581to \u2581the \u2581message . \u2581 By \u2581// \u2581default , \u2581parts \u2581use \u2581the \u2581same \u2581encoding \u2581than \u2581the \u2581message ."], "bleu": 0.10690256631367123, "rouge_l": 0.3699772554965883}
{"id": 921, "predictions": ["\u2581// \u2581 Clone \u2581clone s \u2581the \u2581configuration ."], "references": ["\u2581// \u2581 Clone \u2581makes \u2581a \u2581deep \u2581copy \u2581of \u2581a \u2581 Configuration ."], "bleu": 0.19142013845510458, "rouge_l": 0.3860759493670886}
{"id": 891, "predictions": ["\u2581// \u2581 Encode Peer \u2581 encode \u2581a \u2581 raft \u2581 FTP \u2581 FTP \u2581 FTP \u2581 FTP \u2581 FTP \u2581 FTP \u2581 api ."], "references": ["\u2581// \u2581 Encode Peer \u2581is \u2581used \u2581to \u2581serialize \u2581a \u2581peer \u2581 name ."], "bleu": 0.15858053013682752, "rouge_l": 0.399812734082397}
{"id": 1246, "predictions": ["\u2581// \u2581 Match \u2581returns \u2581true \u2581if \u2581the \u2581 label \u2581 exists \u2581in \u2581the \u2581 Label Event"], "references": ["\u2581// \u2581 Match \u2581is \u2581\" labeled \" \u2581with \u2581 label"], "bleu": 0.1702602472176709, "rouge_l": 0.4013157894736842}
{"id": 723, "predictions": ["\u2581// \u2581 New Closer \u2581returns \u2581a \u2581new \u2581 Closer \u2581with \u2581the \u2581given \u2581number \u2581of \u2581 concurrent \u2581 concurrent \u2581// \u2581 close ."], "references": ["\u2581// \u2581 New Closer \u2581constructs \u2581a \u2581new \u2581 Closer , \u2581with \u2581an \u2581initial \u2581count \u2581on \u2581the \u2581 WaitGroup ."], "bleu": 0.2830956597218095, "rouge_l": 0.593192868719611}
{"id": 244, "predictions": ["\u2581// \u2581 With Lease \u2581sets \u2581the \u2581 Lease ID ."], "references": ["\u2581// \u2581 With Lease \u2581specifies \u2581the \u2581existing \u2581lease ID \u2581to \u2581be \u2581used \u2581for \u2581the \u2581session . \u2581// \u2581This \u2581is \u2581useful \u2581in \u2581process \u2581restart \u2581scenario , \u2581for \u2581example , \u2581to \u2581"], "bleu": 0.05499752915127494, "rouge_l": 0.32105263157894737}
{"id": 1470, "predictions": ["\u2581// \u2581 Detect s Branch Branch \u2581returns \u2581true \u2581if \u2581the \u2581branch \u2581 contains \u2581the \u2581// \u2581branch \u2581of \u2581the \u2581branch ."], "references": ["\u2581// \u2581Runs Against All Branch \u2581returns \u2581true \u2581if \u2581there \u2581are \u2581both \u2581branches \u2581and \u2581skip _ branches \u2581are \u2581unset"], "bleu": 0.17793925745339384, "rouge_l": 0.26567944250871084}
{"id": 1168, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 container \u2581object \u2581for \u2581the \u2581given \u2581 name , \u2581and \u2581returns \u2581nil \u2581if \u2581the \u2581// \u2581 name \u2581is \u2581not \u2581found ."], "references": ["\u2581// \u2581Get \u2581does \u2581nothing \u2581on \u2581a \u2581dry - run \u2581client"], "bleu": 0.06871624004919695, "rouge_l": 0.18578680203045686}
{"id": 1847, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Validating ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 ProwJob ."], "bleu": 0.8979542144404234, "rouge_l": 0.9444444444444445}
{"id": 1851, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Pull ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Pull ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 1852, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Refs ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 Refs ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 631, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581store ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581store \u2581where \u2581the \u2581given \u2581namespaces \u2581will \u2581be \u2581created \u2581as \u2581initial \u2581directories ."], "bleu": 0.20491963351356435, "rouge_l": 0.5258620689655171}
{"id": 1326, "predictions": ["\u2581// \u2581Register Status EventHandler \u2581registers \u2581a \u2581 status \u2581 status \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Register Status EventHandler \u2581registers \u2581a \u2581plugin ' s \u2581 github . Status Event \u2581handler ."], "bleu": 0.3708163623065084, "rouge_l": 0.5}
{"id": 1371, "predictions": ["\u2581// \u2581 Is Author \u2581returns \u2581true \u2581if \u2581the \u2581 login \u2581 login \u2581is \u2581 login ."], "references": ["\u2581// \u2581 Is Author \u2581checks \u2581if \u2581a \u2581user \u2581is \u2581the \u2581 author \u2581of \u2581the \u2581issue ."], "bleu": 0.26920508809559307, "rouge_l": 0.5}
{"id": 1335, "predictions": ["\u2581// \u2581 Config \u2581returns \u2581the \u2581 config \u2581configuration \u2581for \u2581the \u2581 Config Agent ."], "references": ["\u2581// \u2581 Config \u2581returns \u2581the \u2581agent \u2581current \u2581 Configuration ."], "bleu": 0.34791594751284466, "rouge_l": 0.6014084507042253}
{"id": 1328, "predictions": ["\u2581// \u2581Register Review EventHandler \u2581registers \u2581a \u2581 Review \u2581for \u2581 validating \u2581the \u2581 Review ."], "references": ["\u2581// \u2581Register Review EventHandler \u2581registers \u2581a \u2581plugin ' s \u2581 github . Review Event \u2581handler ."], "bleu": 0.38086554731357325, "rouge_l": 0.5772870662460569}
{"id": 1327, "predictions": ["\u2581// \u2581Register Push EventHandler \u2581registers \u2581a \u2581 push \u2581event \u2581handler \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Register Push EventHandler \u2581registers \u2581a \u2581plugin ' s \u2581 github . Push Event \u2581handler ."], "bleu": 0.3807134866446316, "rouge_l": 0.5625}
{"id": 1325, "predictions": ["\u2581// \u2581Register PullRequest Handler \u2581registers \u2581a \u2581request \u2581to \u2581 add \u2581request \u2581to \u2581the \u2581 Handler ."], "references": ["\u2581// \u2581Register PullRequest Handler \u2581registers \u2581a \u2581plugin ' s \u2581 github . PullRequest Event \u2581handler ."], "bleu": 0.3708163623065084, "rouge_l": 0.5}
{"id": 1892, "predictions": ["\u2581// \u2581job Path \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 contents \u2581of \u2581the \u2581 GCS ."], "references": ["\u2581// \u2581 Job Path \u2581gets \u2581the \u2581prefix \u2581to \u2581all \u2581artifacts \u2581in \u2581 GCS \u2581in \u2581the \u2581job"], "bleu": 0.1332358437599213, "rouge_l": 0.3125}
{"id": 1457, "predictions": ["\u2581// \u2581ensure Dir \u2581ensures \u2581that \u2581the \u2581directory \u2581is \u2581a \u2581directory"], "references": ["\u2581// \u2581file \u2581 path \u2581 helper"], "bleu": 0.12605968092174913, "rouge_l": 0.13090128755364808}
{"id": 514, "predictions": ["\u2581// \u2581 Re - \u2581retry \u2581option \u2581to \u2581 set \u2581the \u2581maximum \u2581number \u2581of \u2581retries ."], "references": ["\u2581// \u2581with Max \u2581sets \u2581the \u2581maximum \u2581number \u2581of \u2581retries \u2581on \u2581 this \u2581 call , \u2581or \u2581 this \u2581interceptor ."], "bleu": 0.2453026996845374, "rouge_l": 0.3899543378995435}
{"id": 566, "predictions": ["\u2581// \u2581 New Readonly Handler \u2581returns \u2581a \u2581handler \u2581that \u2581will \u2581 write \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581 script \u2581to \u2581the \u2581 Handler ."], "references": ["\u2581// \u2581 New Readonly Handler \u2581 wraps \u2581the \u2581given \u2581HTTP \u2581handler \u2581to \u2581allow \u2581only \u2581 GET \u2581requests"], "bleu": 0.20709655534346438, "rouge_l": 0.4438156831042845}
{"id": 1406, "predictions": ["\u2581// \u2581 Has Resource \u2581returns \u2581true \u2581if \u2581the \u2581client \u2581is \u2581 empty ."], "references": ["\u2581// \u2581 Has Resource \u2581tells \u2581if \u2581current \u2581client \u2581holds \u2581any \u2581resources"], "bleu": 0.2891784933232572, "rouge_l": 0.507628294036061}
{"id": 1249, "predictions": ["\u2581// \u2581 AddFlags Without Default GitHub \u2581adds \u2581the \u2581default \u2581default \u2581flags \u2581to \u2581the \u2581GitHub \u2581 set"], "references": ["\u2581// \u2581 AddFlags Without Default GitHub Token Path \u2581inject s \u2581GitHub \u2581options \u2581into \u2581the \u2581given \u2581// \u2581 Flag set \u2581without \u2581setting \u2581a \u2581default \u2581for \u2581for \u2581the \u2581 github Token Path"], "bleu": 0.16946360004975836, "rouge_l": 0.41216216216216217}
{"id": 15, "predictions": ["\u2581// \u2581 New PriorityQueue \u2581creates \u2581a \u2581new \u2581queue ."], "references": ["\u2581// \u2581 New PriorityQueue \u2581creates \u2581an \u2581etcd \u2581priority \u2581queue ."], "bleu": 0.5202870834435168, "rouge_l": 0.7299145299145299}
{"id": 1778, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581function \u2581to \u2581 get \u2581the \u2581object \u2581object ."], "references": ["\u2581// \u2581DeepCopyObject \u2581implements \u2581runtime . Object \u2581interface"], "bleu": 0.10571070857151538, "rouge_l": 0.21143847487001732}
{"id": 1781, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581function \u2581to \u2581 get \u2581the \u2581 Resource Collection \u2581object ."], "references": ["\u2581// \u2581DeepCopyObject \u2581implements \u2581 Collection \u2581interface"], "bleu": 0.09782375748961449, "rouge_l": 0.3096446700507614}
{"id": 512, "predictions": ["\u2581// \u2581with RetryPolicy \u2581sets \u2581the \u2581default \u2581value \u2581for \u2581the \u2581given \u2581 token ."], "references": ["\u2581// \u2581with RetryPolicy \u2581sets \u2581the \u2581retry \u2581policy \u2581of \u2581 this \u2581 call ."], "bleu": 0.3759663529467017, "rouge_l": 0.5384615384615383}
{"id": 829, "predictions": ["\u2581// \u2581 Write \u2581implements \u2581the \u2581 Snapshot \u2581interface ."], "references": ["\u2581// \u2581 Write \u2581is \u2581used \u2581to \u2581 append \u2581to \u2581the \u2581state \u2581file . \u2581We \u2581 write \u2581to \u2581the \u2581// \u2581buffered \u2581 IO \u2581object \u2581to \u2581 reduce \u2581the \u2581amount \u2581of \u2581context"], "bleu": 0.02929887179387845, "rouge_l": 0.23371647509578544}
{"id": 1165, "predictions": ["\u2581// \u2581 Update Status \u2581updates \u2581the \u2581 status \u2581of \u2581the \u2581specified \u2581 status ."], "references": ["\u2581// \u2581 Update Status \u2581does \u2581nothing \u2581on \u2581a \u2581dry - run \u2581client"], "bleu": 0.24601372576927535, "rouge_l": 0.31202046035805625}
{"id": 1323, "predictions": ["\u2581// \u2581Register Issue Handler \u2581registers \u2581a \u2581new \u2581 Issue Handler ."], "references": ["\u2581// \u2581Register Issue Handler \u2581registers \u2581a \u2581plugin ' s \u2581 github . Issue Event \u2581handler ."], "bleu": 0.35783648460675277, "rouge_l": 0.6451233842538191}
{"id": 397, "predictions": ["\u2581// \u2581 Lease Value \u2581returns \u2581a \u2581 Cmp Value \u2581that \u2581produces \u2581a \u2581 key \u2581value ."], "references": ["\u2581// \u2581 Lease Value \u2581compares \u2581a \u2581 key ' s \u2581 Lease ID \u2581to \u2581a \u2581value \u2581of \u2581your \u2581choosing . \u2581The \u2581 empty \u2581// \u2581 Lease ID \u2581is \u25810, \u2581otherwise"], "bleu": 0.13209941656505506, "rouge_l": 0.370945945945946}
{"id": 1510, "predictions": ["\u2581// \u2581 Push \u2581implements \u2581the \u2581 Event Interface \u2581interface ."], "references": ["\u2581// \u2581 Push \u2581adds \u2581event \u2581to \u2581the \u2581heap"], "bleu": 0.24808415001701817, "rouge_l": 0.4535315985130111}
{"id": 185, "predictions": ["\u2581// \u2581 New Handler \u2581returns \u2581a \u2581new \u2581 Handler ."], "references": ["\u2581// \u2581 New Handler \u2581returns \u2581an \u2581http \u2581 Handler \u2581for \u2581lease \u2581 renewal s"], "bleu": 0.348102011375161, "rouge_l": 0.5663129973474801}
{"id": 1089, "predictions": ["\u2581// \u2581 Config \u2581returns \u2581the \u2581 config \u2581configuration \u2581for \u2581the \u2581agent ."], "references": ["\u2581// \u2581 Config \u2581returns \u2581the \u2581latest \u2581 config . \u2581Do \u2581not \u2581modify \u2581the \u2581 config ."], "bleu": 0.3563716735910935, "rouge_l": 0.6267123287671232}
{"id": 147, "predictions": ["\u2581// \u2581new Unique Ephemeral Key \u2581creates \u2581a \u2581new \u2581 ephemeral \u2581 key ."], "references": ["\u2581// \u2581new Unique Ephemeral Key \u2581creates \u2581a \u2581new \u2581unique \u2581value less \u2581 key \u2581associated \u2581with \u2581a \u2581session \u2581lease"], "bleu": 0.43905957457726646, "rouge_l": 0.6269270298047277}
{"id": 210, "predictions": ["\u2581// \u2581 New Election \u2581creates \u2581a \u2581new \u2581 election \u2581object"], "references": ["\u2581// \u2581 New Election \u2581returns \u2581a \u2581new \u2581 election \u2581on \u2581a \u2581given \u2581 key \u2581prefix ."], "bleu": 0.32255216969638445, "rouge_l": 0.5907990314769976}
{"id": 98, "predictions": ["\u2581// \u2581 New Cluster \u2581creates \u2581a \u2581new \u2581cluster"], "references": ["\u2581// \u2581 New Cluster \u2581returns \u2581an \u2581un launch ed \u2581cluster \u2581of \u2581the \u2581given \u2581 size \u2581which \u2581has \u2581been \u2581// \u2581 set \u2581to \u2581use \u2581static \u2581bootstrap ."], "bleu": 0.049235980615949734, "rouge_l": 0.2684859154929578}
{"id": 710, "predictions": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Value \u2581follows \u2581the \u2581 y . Iterator \u2581interface"], "bleu": 0.2620251007173263, "rouge_l": 0.5763779527559055}
{"id": 1322, "predictions": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581options \u2581into \u2581a \u2581string ."], "references": ["\u2581// \u2581 Encode \u2581will \u2581 encode \u2581the \u2581 set \u2581of \u2581options \u2581in \u2581the \u2581 format \u2581that \u2581// \u2581is \u2581expected \u2581for \u2581the \u2581configuration \u2581environment \u2581variable ."], "bleu": 0.06021286671899688, "rouge_l": 0.3182608695652174}
{"id": 750, "predictions": ["\u2581// \u2581 Done \u2581is \u2581used \u2581to \u2581 mark \u2581the \u2581 oldest \u2581item \u2581in \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Done \u2581sets \u2581a \u2581single \u2581index \u2581as \u2581done ."], "bleu": 0.14216645907653844, "rouge_l": 0.31082802547770705}
{"id": 1051, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581 graceful \u2581shutdown ."], "references": ["\u2581// \u2581 Stop \u2581the \u2581worker"], "bleu": 0.2777619034011791, "rouge_l": 0.6024691358024692}
{"id": 1063, "predictions": ["\u2581// \u2581 Routes \u2581returns \u2581the \u2581 routes \u2581that \u2581the \u2581 app \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Routes \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581of \u2581the \u2581 routes \u2581defined \u2581// \u2581in \u2581 this \u2581application ."], "bleu": 0.24798635777651246, "rouge_l": 0.518413597733711}
{"id": 900, "predictions": ["\u2581// \u2581 Accept \u2581implements \u2581 Stream Layer . Accept"], "references": ["\u2581// \u2581 Accept \u2581implements \u2581the \u2581 net . Listener \u2581interface ."], "bleu": 0.34214468780181806, "rouge_l": 0.5893719806763285}
{"id": 1143, "predictions": ["\u2581// \u2581 AddCommand \u2581adds \u2581the \u2581command \u2581to \u2581the \u2581help \u2581 call ."], "references": ["\u2581// \u2581 AddCommand \u2581registers \u2581new \u2581help \u2581 text \u2581for \u2581a \u2581bot \u2581command ."], "bleu": 0.22736544735608616, "rouge_l": 0.4765625000000001}
{"id": 1164, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 preconditions \u2581for \u2581the \u2581specified \u2581 app ."], "references": ["\u2581// \u2581 Update \u2581does \u2581nothing \u2581on \u2581a \u2581dry - run \u2581client"], "bleu": 0.1777835117834348, "rouge_l": 0.2538141470180305}
{"id": 368, "predictions": ["\u2581// \u2581tick \u2581implements \u2581the \u2581 Node \u2581interface ."], "references": ["\u2581// \u2581 raft . Node \u2581does \u2581not \u2581have \u2581locks \u2581in \u2581 Raft \u2581package"], "bleu": 0.10793517579160734, "rouge_l": 0.2739520958083832}
{"id": 68, "predictions": ["\u2581// \u2581 New Locker \u2581returns \u2581a \u2581new \u2581 Locker . Locker \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581// \u2581 layers ."], "references": ["\u2581// \u2581 New Locker \u2581creates \u2581a \u2581 sync . Locker \u2581back ed \u2581by \u2581an \u2581etcd \u2581 mutex ."], "bleu": 0.2082198320914845, "rouge_l": 0.5200341005967604}
{"id": 1104, "predictions": ["\u2581// \u2581Get Ref \u2581returns \u2581the \u2581 Ref \u2581for \u2581 ref ."], "references": ["\u2581// \u2581Get Ref \u2581returns \u2581the \u2581hash \u2581of \u2581a \u2581 ref ."], "bleu": 0.53107253497887, "rouge_l": 0.7272727272727273}
{"id": 915, "predictions": ["\u2581// \u2581 Logf \u2581logs \u2581a \u2581message \u2581at \u2581 s ."], "references": ["\u2581// \u2581 Logf \u2581will \u2581record \u2581a \u2581formatted \u2581message \u2581to \u2581the \u2581contained \u2581 debug \u2581log"], "bleu": 0.18088944840162538, "rouge_l": 0.48541114058355433}
{"id": 1071, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 BuildInfo ."], "references": ["\u2581// \u2581String \u2581implements \u2581fmt . String"], "bleu": 0.16108992769687397, "rouge_l": 0.3727087576374745}
{"id": 25, "predictions": ["\u2581// \u2581Returns \u2581true \u2581if \u2581the \u2581current \u2581snapshot \u2581is \u2581 held"], "references": ["\u2581// \u2581need Snapshot Abort \u2581returns \u2581true \u2581if \u2581snapshot \u2581progress ' s \u2581 Match \u2581// \u2581is \u2581equal \u2581or \u2581higher \u2581than \u2581the \u2581pending Snapshot ."], "bleu": 0.05777844824082, "rouge_l": 0.2829313543599258}
{"id": 790, "predictions": ["\u2581// \u2581 Key Copy \u2581copies \u2581the \u2581 Item \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Key Copy \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 key \u2581of \u2581the \u2581item , \u2581writing \u2581it \u2581to \u2581dst \u2581 slice . \u2581// \u2581If \u2581nil \u2581is \u2581passed , \u2581or \u2581capacity"], "bleu": 0.1267739548179297, "rouge_l": 0.37731958762886597}
{"id": 990, "predictions": ["\u2581// \u2581 List \u2581is \u2581not \u2581implemented ."], "references": ["\u2581// \u2581 List \u2581default \u2581implementation . \u2581Returns \u2581a \u2581404"], "bleu": 0.27470644934024185, "rouge_l": 0.48897795591182364}
{"id": 2019, "predictions": ["\u2581// \u2581 Raw Websocket \u2581returns \u2581a \u2581 TCP \u2581connection \u2581to \u2581the \u2581websocket \u2581connection ."], "references": ["\u2581// \u2581 Raw Websocket \u2581allows \u2581directly \u2581connection \u2581to \u2581 LXD \u2581API \u2581websocket s \u2581// \u2581// \u2581This \u2581should \u2581only \u2581be \u2581used \u2581by \u2581internal \u2581 LXD \u2581 tools ."], "bleu": 0.12222805274418168, "rouge_l": 0.3691376701966717}
{"id": 597, "predictions": ["\u2581// \u2581 Election Timeout \u2581returns \u2581a \u2581 Duration \u2581that \u2581will \u2581 set \u2581the \u2581 election \u2581 token ."], "references": ["\u2581// \u2581 Election Timeout \u2581returns \u2581an \u2581 election \u2581timeout \u2581duration ."], "bleu": 0.28889830842564407, "rouge_l": 0.5768321513002365}
{"id": 303, "predictions": ["\u2581// \u2581 New Lease \u2581creates \u2581a \u2581new \u2581lease ."], "references": ["\u2581// \u2581 New Lease \u2581 wraps \u2581a \u2581 Lease \u2581interface \u2581to \u2581 filter \u2581for \u2581only \u2581 keys \u2581with \u2581a \u2581prefix \u2581// \u2581and \u2581 remove \u2581that \u2581prefix \u2581when \u2581fetching \u2581attached \u2581"], "bleu": 0.039868435886053814, "rouge_l": 0.23371647509578544}
{"id": 1170, "predictions": ["\u2581// \u2581 Watch \u2581returns \u2581a \u2581 watch . Interface \u2581that \u2581 watches \u2581the \u2581requested \u2581 label ."], "references": ["\u2581// \u2581 Watch \u2581does \u2581nothing \u2581on \u2581a \u2581dry - run \u2581client"], "bleu": 0.14216645907653844, "rouge_l": 0.2971985383678441}
{"id": 277, "predictions": ["\u2581// \u2581 Resume \u2581 resume s \u2581the \u2581 Revision ."], "references": ["\u2581// \u2581 Resume \u2581 resume s \u2581revision - based \u2581compact or ."], "bleu": 0.48308952038726644, "rouge_l": 0.626099706744868}
{"id": 276, "predictions": ["\u2581// \u2581 Pause \u2581 pause s \u2581the \u2581revision ."], "references": ["\u2581// \u2581 Pause \u2581 pause s \u2581revision - based \u2581compact or ."], "bleu": 0.4875099426512706, "rouge_l": 0.7427701674277016}
{"id": 717, "predictions": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Copy \u2581copies \u2581a \u2581 byte \u2581 slice \u2581and \u2581returns \u2581the \u2581copied \u2581 slice ."], "bleu": 0.34331018527601015, "rouge_l": 0.6093229744728079}
{"id": 1965, "predictions": ["\u2581// \u2581 Network Error ed \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581network ."], "references": ["\u2581// \u2581 Network Error ed \u2581sets \u2581the \u2581state \u2581of \u2581the \u2581given \u2581network \u2581to \u2581\" Error ed \" ."], "bleu": 0.29005718404518965, "rouge_l": 0.6269270298047277}
{"id": 861, "predictions": ["\u2581// \u2581 Store Log \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581log \u2581log \u2581entries \u2581for \u2581log \u2581log ."], "references": ["\u2581// \u2581 Store Log \u2581implements \u2581the \u2581 Log Store \u2581interface ."], "bleu": 0.2061477352156375, "rouge_l": 0.43262411347517726}
{"id": 1381, "predictions": ["\u2581// \u2581 Namespace \u2581is \u2581a \u2581 Client \u2581for \u2581 this \u2581client ."], "references": ["\u2581// \u2581 Namespace \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581client \u2581pointing \u2581at \u2581the \u2581specified \u2581namespace ."], "bleu": 0.17322452584554915, "rouge_l": 0.43571428571428567}
{"id": 995, "predictions": ["\u2581// \u2581 Clear \u2581removes \u2581all \u2581session \u2581values \u2581from \u2581session ."], "references": ["\u2581// \u2581 Clear \u2581the \u2581current \u2581session"], "bleu": 0.24808415001701817, "rouge_l": 0.5236051502145923}
{"id": 50, "predictions": ["\u2581// \u2581Get Cipher Suite \u2581returns \u2581a \u2581 64- bit \u2581 set \u2581of \u2581cipher \u2581 type"], "references": ["\u2581// \u2581Get Cipher Suite \u2581returns \u2581the \u2581corresponding \u2581cipher \u2581suite , \u2581// \u2581and \u2581boolean \u2581value \u2581if \u2581it \u2581is \u2581supported ."], "bleu": 0.2398445217883183, "rouge_l": 0.34560906515580736}
{"id": 1142, "predictions": ["\u2581// \u2581 Cluster To Ctx \u2581returns \u2581the \u2581 Cluster \u2581to \u2581 Context \u2581 Cluster \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Cluster To Ctx \u2581converts \u2581the \u2581 p row \u2581job ' s \u2581cluster \u2581to \u2581a \u2581cluster \u2581context"], "bleu": 0.2966090320349725, "rouge_l": 0.5}
{"id": 550, "predictions": ["\u2581// \u2581 Commit And Stop \u2581 marks \u2581the \u2581transaction \u2581to \u2581 trigger \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Commit And Stop \u2581commits \u2581the \u2581previous \u2581tx \u2581and \u2581does \u2581not \u2581create \u2581a \u2581new \u2581one ."], "bleu": 0.28335685330044097, "rouge_l": 0.4326241134751773}
{"id": 1167, "predictions": ["\u2581// \u2581 Delete Collection \u2581deletes \u2581the \u2581 set \u2581of \u2581documents \u2581from \u2581the \u2581specified \u2581options ."], "references": ["\u2581// \u2581 Delete Collection \u2581does \u2581nothing \u2581on \u2581a \u2581dry - run \u2581client"], "bleu": 0.22894156860669912, "rouge_l": 0.30235439900867406}
{"id": 1163, "predictions": ["\u2581// \u2581Create \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581create \u2581a \u2581new \u2581 p row p ."], "references": ["\u2581// \u2581Create \u2581does \u2581nothing \u2581on \u2581a \u2581dry - run \u2581client"], "bleu": 0.10878661088699644, "rouge_l": 0.24078947368421053}
{"id": 956, "predictions": ["\u2581// \u2581 Orig Index \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581 commitment \u2581index ."], "references": ["\u2581// \u2581Called \u2581by \u2581leader \u2581after \u2581commit Ch \u2581is \u2581 notified"], "bleu": 0.10571070857151538, "rouge_l": 0.1781021897810219}
{"id": 1405, "predictions": ["\u2581// \u2581 Metric \u2581returns \u2581the \u2581metric ' s \u2581metric \u2581 data \u2581for \u2581the \u2581given \u2581 entity ."], "references": ["\u2581// \u2581 Metric \u2581will \u2581query \u2581current \u2581metric \u2581for \u2581target \u2581resource \u2581 type . \u2581// \u2581Return \u2581a \u2581common . Metric \u2581object \u2581on \u2581 success ."], "bleu": 0.10909080168436618, "rouge_l": 0.3312645461598138}
{"id": 872, "predictions": ["\u2581// \u2581 Respond \u2581sends \u2581a \u2581response \u2581to \u2581the \u2581response ."], "references": ["\u2581// \u2581 Respond \u2581is \u2581used \u2581to \u2581respond \u2581with \u2581a \u2581response , \u2581error \u2581or \u2581both"], "bleu": 0.19437836223653274, "rouge_l": 0.40450928381962864}
{"id": 583, "predictions": ["\u2581// \u2581 Excludes \u2581returns \u2581the \u2581number \u2581of \u2581lines \u2581in \u2581the \u2581process ."], "references": ["\u2581// \u2581 LineCount \u2581returns \u2581the \u2581number \u2581of \u2581recorded \u2581lines \u2581since \u2581// \u2581the \u2581beginning \u2581of \u2581the \u2581process ."], "bleu": 0.2869523746312616, "rouge_l": 0.668859649122807}
{"id": 434, "predictions": ["\u2581// \u2581 Report Event Received \u2581returns \u2581the \u2581number \u2581of \u2581events \u2581in \u2581the \u2581 Event"], "references": ["\u2581// \u2581 Report Event Received \u2581reports \u2581that \u2581an \u2581event \u2581is \u2581received . \u2581// \u2581This \u2581function \u2581should \u2581be \u2581called \u2581when \u2581the \u2581external \u2581systems \u2581received \u2581an \u2581// \u2581event \u2581from \u2581 mvc c"], "bleu": 0.11095267705942849, "rouge_l": 0.2986013986013986}
{"id": 1565, "predictions": ["\u2581// \u2581 Age \u2581returns \u2581the \u2581time \u2581of \u2581the \u2581 active \u2581 active \u2581time ."], "references": ["\u2581// \u2581 Age \u2581gives \u2581the \u2581time \u2581since \u2581the \u2581state \u2581has \u2581been \u2581 activated ."], "bleu": 0.21651956746181053, "rouge_l": 0.5714285714285714}
{"id": 1474, "predictions": ["\u2581// \u2581 Could Run \u2581returns \u2581true \u2581if \u2581the \u2581 Post submit s \u2581 contains \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Could Run \u2581determines \u2581if \u2581the \u2581 post submit \u2581could \u2581run \u2581against \u2581a \u2581specific \u2581// \u2581base \u2581 ref"], "bleu": 0.2534743707366162, "rouge_l": 0.47368421052631576}
{"id": 1007, "predictions": ["\u2581// \u2581 Format Date \u2581formats \u2581a \u2581 date \u2581 date \u2581into \u2581a \u2581string ."], "references": ["\u2581// \u2581 Format Date \u2581formats \u2581a \u2581 date \u2581as \u2581a \u2581valid \u2581RFC \u2581 532 2 \u2581 date ."], "bleu": 0.46766910116422916, "rouge_l": 0.6723446893787575}
{"id": 1786, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581Set \u2581appends \u2581a \u2581value \u2581onto \u2581the \u2581str slice ."], "bleu": 0.22692039365038064, "rouge_l": 0.6}
{"id": 1121, "predictions": ["\u2581// \u2581 Clear Milestone \u2581 clear s \u2581the \u2581 milestone \u2581of \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581 Clear Milestone \u2581removes \u2581the \u2581 milestone"], "bleu": 0.2863424630911014, "rouge_l": 0.6206395348837209}
{"id": 1020, "predictions": ["\u2581// \u2581 WriteHeader \u2581writes \u2581the \u2581 status \u2581 code \u2581to \u2581the \u2581response ."], "references": ["\u2581// \u2581 WriteHeader \u2581sets \u2581the \u2581 status \u2581 code \u2581for \u2581a \u2581response"], "bleu": 0.45723134461864345, "rouge_l": 0.725231175693527}
{"id": 268, "predictions": ["\u2581// \u2581 Target \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581endpoint ."], "references": ["\u2581// \u2581 Target \u2581constructs \u2581a \u2581endpoint \u2581 resolver \u2581target ."], "bleu": 0.2224246939793677, "rouge_l": 0.5545454545454546}
{"id": 1496, "predictions": ["\u2581// \u2581 Is No Parent Less \u2581returns \u2581true \u2581if \u2581the \u2581 path \u2581is \u2581a \u2581parent \u2581of \u2581parent \u2581 path"], "references": ["\u2581// \u2581 Is No Parent Owners \u2581checks \u2581if \u2581an \u2581 OWNER S \u2581file \u2581 path \u2581refers \u2581to \u2581an \u2581 OWNER S \u2581file \u2581with \u2581 No Parent Owners \u2581enabled ."], "bleu": 0.1657222515922116, "rouge_l": 0.36142198815009874}
{"id": 35, "predictions": ["\u2581// \u2581 Percentile s \u2581returns \u2581a \u2581 slice \u2581of \u2581 percentiles \u2581of \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581 Percentile s \u2581returns \u2581 percentile \u2581distribution \u2581of \u2581float 64 \u2581 slice ."], "bleu": 0.35412968165085734, "rouge_l": 0.6566200215285254}
{"id": 1223, "predictions": ["\u2581// \u2581Check Flags \u2581returns \u2581nil \u2581if \u2581the \u2581event \u2581is \u2581not \u2581nil"], "references": ["\u2581// \u2581Check Flags \u2581is \u2581 delegated \u2581to \u2581 Event Matcher"], "bleu": 0.22416933501922287, "rouge_l": 0.384251968503937}
{"id": 1620, "predictions": ["\u2581// \u2581 Clone Log Path \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 container ' s \u2581 path \u2581to \u2581the \u2581 container"], "references": ["\u2581// \u2581 Clone Log Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581clone \u2581log \u2581file \u2581in \u2581the \u2581volume \u2581mount . \u2581// \u2581 Clone Log Path \u2581returns \u2581the \u2581 path \u2581to \u2581the"], "bleu": 0.26695072288201077, "rouge_l": 0.46329113924050636}
{"id": 1476, "predictions": ["\u2581// \u2581 Could Run \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 name \u2581is \u2581a \u2581 pre - signed \u2581 path ."], "references": ["\u2581// \u2581 Could Run \u2581determines \u2581if \u2581the \u2581 pre submit \u2581could \u2581run \u2581against \u2581a \u2581specific \u2581// \u2581base \u2581 ref"], "bleu": 0.2291421308389693, "rouge_l": 0.4636824324324324}
{"id": 1591, "predictions": ["\u2581// \u2581Check Flags \u2581checks \u2581if \u2581the \u2581 config \u2581is \u2581valid"], "references": ["\u2581// \u2581Check Flags \u2581configure s \u2581which \u2581states \u2581to \u2581monitor"], "bleu": 0.23462350320528, "rouge_l": 0.31881533101045295}
{"id": 1379, "predictions": ["\u2581// \u2581 Callback \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581of \u2581the \u2581 content"], "references": ["\u2581// \u2581 Callback \u2581does \u2581nothing ."], "bleu": 0.15310245441182443, "rouge_l": 0.3096446700507614}
{"id": 143, "predictions": ["\u2581// \u2581 Key Exists \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581 key \u2581 exists ."], "references": ["\u2581// \u2581 Key Exists \u2581returns \u2581a \u2581comparison \u2581operation \u2581that \u2581evaluates \u2581to \u2581true \u2581if f \u2581the \u2581given \u2581// \u2581 key \u2581 exists . \u2581It \u2581does \u2581 this \u2581by \u2581checking \u2581if \u2581the"], "bleu": 0.19468402887697508, "rouge_l": 0.5118881118881118}
{"id": 1435, "predictions": ["\u2581// \u2581Remove Approve r \u2581removes \u2581a \u2581 Approve r \u2581from \u2581the \u2581 set \u2581of \u2581 login s"], "references": ["\u2581// \u2581Remove Approve r \u2581removes \u2581an \u2581 approve r \u2581from \u2581the \u2581list ."], "bleu": 0.3457913759237496, "rouge_l": 0.6147816349384099}
{"id": 780, "predictions": ["\u2581// \u2581release \u2581 releases \u2581the \u2581 container"], "references": ["\u2581// \u2581 Release \u2581removes \u2581the \u2581directory \u2581lock ."], "bleu": 0.19148978368719022, "rouge_l": 0.3952483801295896}
{"id": 584, "predictions": ["\u2581// \u2581 Signal \u2581sends \u2581a \u2581signal \u2581to \u2581the \u2581process"], "references": ["\u2581// \u2581 Signal \u2581sends \u2581a \u2581signal \u2581to \u2581the \u2581expect \u2581process"], "bleu": 0.8085785995823291, "rouge_l": 0.9384615384615386}
{"id": 549, "predictions": ["\u2581// \u2581 Commit \u2581 marks \u2581the \u2581transaction \u2581to \u2581the \u2581last \u2581 recently \u2581created ."], "references": ["\u2581// \u2581 Commit \u2581commits \u2581a \u2581previous \u2581tx \u2581and \u2581begins \u2581a \u2581new \u2581writable \u2581one ."], "bleu": 0.17395797375642236, "rouge_l": 0.2857142857142857}
{"id": 60, "predictions": ["\u2581// \u2581 Registered Table \u2581returns \u2581true \u2581if \u2581the \u2581 raft \u2581 Raft \u2581 table \u2581has \u2581been \u2581 set ."], "references": ["\u2581// \u2581 promo table \u2581indicates \u2581whether \u2581state \u2581machine \u2581can \u2581be \u2581 promoted \u2581to \u2581leader , \u2581// \u2581which \u2581is \u2581true \u2581when \u2581its \u2581own \u2581 id \u2581is \u2581in \u2581progress \u2581list ."], "bleu": 0.0639849296492117, "rouge_l": 0.20078999341672155}
{"id": 399, "predictions": ["\u2581// \u2581 With Range \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 length \u2581 contains \u2581the \u2581given \u2581range ."], "references": ["\u2581// \u2581 With Range \u2581sets \u2581the \u2581comparison \u2581to \u2581scan \u2581the \u2581range \u2581 [ key , \u2581end ) ."], "bleu": 0.22543581270097682, "rouge_l": 0.4547996272134204}
{"id": 124, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581string \u2581value \u2581of \u2581the \u2581string ."], "references": ["\u2581// \u2581Set \u2581parses \u2581a \u2581command \u2581line \u2581 set \u2581of \u2581strings , \u2581separated \u2581by \u2581comma . \u2581// \u2581 Implements \u2581\" flag . Value \" \u2581interface ."], "bleu": 0.042060747023946084, "rouge_l": 0.21217391304347827}
{"id": 283, "predictions": ["\u2581// \u2581Get Logger \u2581returns \u2581a \u2581logger \u2581that \u2581will \u2581 call \u2581the \u2581logger ."], "references": ["\u2581// \u2581Get Logger \u2581returns \u2581the \u2581current \u2581log util . Logger ."], "bleu": 0.2891784933232572, "rouge_l": 0.507628294036061}
{"id": 680, "predictions": ["\u2581// \u2581 Error \u2581implements \u2581the \u2581error \u2581interface \u2581for \u2581 Write Batch ."], "references": ["\u2581// \u2581 Error \u2581returns \u2581any \u2581errors \u2581encountered \u2581so \u2581far . \u2581 No \u2581commits \u2581would \u2581be \u2581run \u2581once \u2581an \u2581error \u2581is \u2581detected ."], "bleu": 0.09666537353116829, "rouge_l": 0.2793040293040293}
{"id": 1456, "predictions": ["\u2581// \u2581 Key ToPath \u2581returns \u2581the \u2581 key \u2581for \u2581a \u2581 key"], "references": ["\u2581// \u2581 Key ToPath \u2581converts \u2581a \u2581cache \u2581entry \u2581 key \u2581to \u2581a \u2581 path \u2581on \u2581disk"], "bleu": 0.26560858266645027, "rouge_l": 0.5570776255707762}
{"id": 1191, "predictions": ["\u2581// \u2581 Load Config \u2581 loads \u2581the \u2581configuration \u2581from \u2581the \u2581configuration"], "references": ["\u2581// \u2581 Load Config \u2581 loads \u2581options \u2581from \u2581serialized \u2581 config"], "bleu": 0.5331675363405771, "rouge_l": 0.6363636363636364}
{"id": 1964, "predictions": ["\u2581// \u2581 Network Created \u2581 Network s \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Network Created \u2581sets \u2581the \u2581state \u2581of \u2581the \u2581given \u2581network \u2581to \u2581\" Created \" ."], "bleu": 0.18888540073339224, "rouge_l": 0.38077403245942576}
{"id": 235, "predictions": ["\u2581// \u2581new Log \u2581returns \u2581a \u2581new \u2581 raft Log ."], "references": ["\u2581// \u2581new Log \u2581returns \u2581log \u2581using \u2581the \u2581given \u2581storage \u2581and \u2581default \u2581options . \u2581It \u2581// \u2581recover s \u2581the \u2581log \u2581to \u2581the \u2581state \u2581that \u2581it \u2581just \u2581commits \u2581and \u2581applies \u2581the \u2581//"], "bleu": 0.04969587753468288, "rouge_l": 0.22932330827067668}
{"id": 1812, "predictions": ["\u2581// \u2581 Update Config \u2581updates \u2581the \u2581storage \u2581configuration ."], "references": ["\u2581// \u2581 Update Config \u2581updates \u2581a \u2581given \u2581if \u2581it \u2581 exists \u2581or \u2581fail \u2581otherwise"], "bleu": 0.2966151155123462, "rouge_l": 0.41838134430727025}
{"id": 892, "predictions": ["\u2581// \u2581 Decode Peer \u2581returns \u2581a \u2581 bitcoin \u2581 ServerAddress \u2581instance \u2581from \u2581the \u2581given \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Decode Peer \u2581is \u2581used \u2581to \u2581deserialize \u2581a \u2581peer \u2581 name ."], "bleu": 0.20158074753947833, "rouge_l": 0.4528101802757158}
{"id": 144, "predictions": ["\u2581// \u2581 Key Missing \u2581returns \u2581a \u2581 key \u2581for \u2581 key \u2581 key ."], "references": ["\u2581// \u2581 Key Missing \u2581returns \u2581a \u2581comparison \u2581operation \u2581that \u2581evaluates \u2581to \u2581true \u2581if f \u2581the \u2581// \u2581given \u2581 key \u2581does \u2581not \u2581exist ."], "bleu": 0.23905989579000242, "rouge_l": 0.4660441426146011}
{"id": 352, "predictions": ["\u2581// \u2581 New KV \u2581creates \u2581a \u2581new \u2581 KV \u2581prefix ."], "references": ["\u2581// \u2581 New KV \u2581 wraps \u2581a \u2581 KV \u2581instance \u2581so \u2581that \u2581all \u2581requests \u2581// \u2581are \u2581prefixed \u2581with \u2581a \u2581given \u2581string ."], "bleu": 0.14283753571362742, "rouge_l": 0.45735707591377694}
{"id": 752, "predictions": ["\u2581// \u2581Set Done Until \u2581sets \u2581the \u2581 mark \u2581to \u2581the \u2581 left \u2581 left ."], "references": ["\u2581// \u2581Set Done Until \u2581sets \u2581the \u2581maximum \u2581index \u2581that \u2581has \u2581the \u2581property \u2581that \u2581all \u2581indices \u2581// \u2581less \u2581than \u2581or \u2581equal \u2581to \u2581it \u2581are \u2581done ."], "bleu": 0.20902344415300894, "rouge_l": 0.38274509803921564}
{"id": 1667, "predictions": ["\u2581// \u2581 Update Resource \u2581updates \u2581the \u2581storage \u2581resource ."], "references": ["\u2581// \u2581 Update Resource \u2581updates \u2581a \u2581resource \u2581if \u2581it \u2581 exists , \u2581errors \u2581otherwise"], "bleu": 0.30826908710267364, "rouge_l": 0.5020576131687242}
{"id": 228, "predictions": ["\u2581// \u2581 TTL Duration \u2581returns \u2581the \u2581duration \u2581of \u2581the \u2581node"], "references": ["\u2581// \u2581 TTL Duration \u2581returns \u2581the \u2581 Node ' s \u2581 TTL \u2581as \u2581a \u2581time . Duration \u2581object"], "bleu": 0.25642061684849016, "rouge_l": 0.40757238307349664}
{"id": 964, "predictions": ["\u2581// \u2581reset \u2581resets \u2581the \u2581source \u2581to \u2581the \u2581 set \u2581of \u2581values ."], "references": ["\u2581// \u2581reset \u2581 this \u2581source \u2581back \u2581to \u2581its \u2581initial \u2581state , \u2581it ' ll \u2581generate \u2581the \u2581same \u2581sequence \u2581of \u2581 data \u2581it \u2581initially \u2581did"], "bleu": 0.06428448853420655, "rouge_l": 0.31443298969072164}
{"id": 65, "predictions": ["\u2581// \u2581 Pause \u2581 pause s \u2581the \u2581 periodic \u2581 periodic \u2581 periodic ."], "references": ["\u2581// \u2581 Pause \u2581 pause s \u2581 periodic \u2581compact or ."], "bleu": 0.4546697236991713, "rouge_l": 0.7359249329758714}
{"id": 1288, "predictions": ["\u2581// \u2581 Is Aborted \u2581returns \u2581true \u2581if \u2581 this \u2581build \u2581has \u2581a \u2581 model ."], "references": ["\u2581// \u2581 Is Aborted \u2581means \u2581something \u2581stopped \u2581the \u2581job \u2581before \u2581it \u2581could \u2581finish ."], "bleu": 0.23961829057131984, "rouge_l": 0.3469852104664391}
{"id": 1286, "predictions": ["\u2581// \u2581 Is Success \u2581returns \u2581true \u2581if \u2581 this \u2581build \u2581has \u2581a \u2581 Success ."], "references": ["\u2581// \u2581 Is Success \u2581means \u2581the \u2581job \u2581passed"], "bleu": 0.22894156860669912, "rouge_l": 0.36802413273001505}
{"id": 1810, "predictions": ["\u2581// \u2581Add Config \u2581adds \u2581a \u2581new \u2581 config \u2581to \u2581the \u2581storage ."], "references": ["\u2581// \u2581Add Config \u2581adds \u2581a \u2581new \u2581 config"], "bleu": 0.6479121525090147, "rouge_l": 0.8299319727891156}
{"id": 66, "predictions": ["\u2581// \u2581 Resume \u2581 resume s \u2581the \u2581 periodic \u2581 periodic \u2581 call ."], "references": ["\u2581// \u2581 Resume \u2581 resume s \u2581 periodic \u2581compact or ."], "bleu": 0.4546697236991713, "rouge_l": 0.7359249329758714}
{"id": 1248, "predictions": ["\u2581// \u2581 AddFlags \u2581adds \u2581flags \u2581to \u2581the \u2581GitHub \u2581API"], "references": ["\u2581// \u2581 AddFlags \u2581inject s \u2581GitHub \u2581options \u2581into \u2581the \u2581given \u2581 FlagSet ."], "bleu": 0.1864009928871988, "rouge_l": 0.35209235209235207}
{"id": 713, "predictions": ["\u2581// \u2581 Valid \u2581returns \u2581true \u2581if \u2581the \u2581 iterator \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid \u2581implements \u2581 y . Interface"], "bleu": 0.21401603033752975, "rouge_l": 0.5187074829931972}
{"id": 992, "predictions": ["\u2581// \u2581Save \u2581 persist s \u2581the \u2581session \u2581to \u2581the \u2581session ."], "references": ["\u2581// \u2581Save \u2581the \u2581current \u2581session ."], "bleu": 0.1972940627795883, "rouge_l": 0.6211812627291243}
{"id": 1665, "predictions": ["\u2581// \u2581Add Resource \u2581adds \u2581a \u2581new \u2581resource \u2581to \u2581the \u2581storage ."], "references": ["\u2581// \u2581Add Resource \u2581adds \u2581a \u2581new \u2581resource"], "bleu": 0.6132297420585351, "rouge_l": 0.8102466793168881}
{"id": 99, "predictions": ["\u2581// \u2581 New Cluster By Config \u2581creates \u2581a \u2581new \u2581cluster ."], "references": ["\u2581// \u2581 New Cluster By Config \u2581returns \u2581an \u2581un launch ed \u2581cluster \u2581defined \u2581by \u2581a \u2581cluster \u2581configuration"], "bleu": 0.3182467150056003, "rouge_l": 0.5501691093573844}
{"id": 1460, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581a \u2581 key \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581file \u2581at \u2581 key"], "bleu": 0.2620251007173263, "rouge_l": 0.5091819699499166}
{"id": 291, "predictions": ["\u2581// \u2581 New FromURL \u2581creates \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581 url ."], "references": ["\u2581// \u2581 New FromURL \u2581creates \u2581a \u2581new \u2581etcd v 3 \u2581client \u2581from \u2581a \u2581 URL ."], "bleu": 0.43805758118943855, "rouge_l": 0.5772870662460569}
{"id": 19, "predictions": ["\u2581// \u2581 Fail \u2581is \u2581called \u2581when \u2581the \u2581 follower \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581 Fail \u2581updates \u2581the \u2581 Follower Stats \u2581with \u2581an \u2581un successful \u2581send"], "bleu": 0.21142141714303078, "rouge_l": 0.38461538461538464}
{"id": 400, "predictions": ["\u2581// \u2581 WithPrefix \u2581returns \u2581true \u2581if \u2581the \u2581 Cmp \u2581is \u2581in \u2581the \u2581 Cmp ."], "references": ["\u2581// \u2581 WithPrefix \u2581sets \u2581the \u2581comparison \u2581to \u2581scan \u2581all \u2581 keys \u2581prefixed \u2581by \u2581the \u2581 key ."], "bleu": 0.176342314149558, "rouge_l": 0.4944275582573455}
{"id": 1693, "predictions": ["\u2581// \u2581 Update All \u2581updates \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581state ."], "references": ["\u2581// \u2581 Update All \u2581updates \u2581all \u2581the \u2581 acquired \u2581resources \u2581with \u2581a \u2581given \u2581state"], "bleu": 0.4004065967090225, "rouge_l": 0.6622436670687575}
{"id": 994, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581session ."], "references": ["\u2581// \u2581Set \u2581a \u2581value \u2581onto \u2581the \u2581current \u2581session . \u2581If \u2581a \u2581value \u2581with \u2581that \u2581 name \u2581// \u2581already \u2581 exists \u2581it \u2581will \u2581be \u2581overridden \u2581with \u2581the \u2581new \u2581value ."], "bleu": 0.028467303244078517, "rouge_l": 0.2884160756501182}
{"id": 981, "predictions": ["\u2581// \u2581 Param \u2581returns \u2581the \u2581parameter \u2581 param \u2581as \u2581a \u2581string"], "references": ["\u2581// \u2581 Param \u2581returns \u2581a \u2581 param , \u2581either \u2581named \u2581or \u2581query \u2581string , \u2581// \u2581based \u2581on \u2581the \u2581 key ."], "bleu": 0.16060647051378513, "rouge_l": 0.414161008729389}
{"id": 267, "predictions": ["\u2581// \u2581 Target \u2581 - \u2581 Target s \u2581a \u2581 resolver ."], "references": ["\u2581// \u2581 Target \u2581constructs \u2581a \u2581endpoint \u2581target \u2581using \u2581the \u2581endpoint \u2581 id \u2581of \u2581the \u2581 Resolver Group ."], "bleu": 0.13948700439297762, "rouge_l": 0.3860759493670886}
{"id": 1166, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581 name \u2581of \u2581the \u2581 app ' s \u2581 name ."], "references": ["\u2581// \u2581 Delete \u2581does \u2581nothing \u2581on \u2581a \u2581dry - run \u2581client"], "bleu": 0.1431712315455507, "rouge_l": 0.22989949748743718}
{"id": 1811, "predictions": ["\u2581// \u2581 Delete Config \u2581deletes \u2581the \u2581 config \u2581from \u2581the \u2581storage ."], "references": ["\u2581// \u2581 Delete Config \u2581deletes \u2581an \u2581existing \u2581 config \u2581if \u2581it \u2581 exists \u2581or \u2581fail \u2581otherwise"], "bleu": 0.3066983734031, "rouge_l": 0.48744292237442927}
{"id": 1666, "predictions": ["\u2581// \u2581 Delete Resource \u2581deletes \u2581the \u2581resource ."], "references": ["\u2581// \u2581 Delete Resource \u2581deletes \u2581a \u2581resource \u2581if \u2581it \u2581 exists , \u2581errors \u2581otherwise"], "bleu": 0.2883673022155088, "rouge_l": 0.5198863636363635}
{"id": 1035, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 flash \u2581value \u2581to \u2581the \u2581 flash"], "references": ["\u2581// Set \u2581allows \u2581to \u2581 set \u2581a \u2581list \u2581of \u2581values \u2581into \u2581a \u2581particular \u2581 key ."], "bleu": 0.09091421815660788, "rouge_l": 0.21504112808460632}
{"id": 1077, "predictions": ["\u2581// \u2581Set Header \u2581sets \u2581the \u2581 headers \u2581field \u2581to \u2581be \u2581used \u2581for \u2581 this \u2581message ."], "references": ["\u2581// \u2581Set Header \u2581sets \u2581the \u2581 he der \u2581field \u2581and \u2581value \u2581for \u2581the \u2581message"], "bleu": 0.3807134866446316, "rouge_l": 0.6073008849557523}
{"id": 1888, "predictions": ["\u2581// \u2581 Option OrDefault \u2581returns \u2581the \u2581default \u2581value \u2581of \u2581the \u2581option \u2581option"], "references": ["\u2581// \u2581option OrDefault \u2581defaults \u2581to \u2581a \u2581value \u2581if \u2581option \u2581// \u2581is \u2581the \u2581zero \u2581value"], "bleu": 0.12029921003317644, "rouge_l": 0.3034825870646766}
{"id": 1731, "predictions": ["\u2581// \u2581 IsNotExist \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 NotFound \u2581error ."], "references": ["\u2581// \u2581 IsNotExist \u2581will \u2581return \u2581true \u2581if \u2581the \u2581error \u2581is \u2581because \u2581the \u2581object \u2581does \u2581not \u2581exist ."], "bleu": 0.34150592916822786, "rouge_l": 0.5706860706860708}
{"id": 2092, "predictions": ["\u2581// \u2581initialize Db Object \u2581is \u2581used \u2581to \u2581initialize \u2581the \u2581 db \u2581 dump ."], "references": ["\u2581// \u2581Create \u2581a \u2581database \u2581connection \u2581and \u2581perform \u2581any \u2581updates \u2581needed ."], "bleu": 0.09782375748961449, "rouge_l": 0.16353887399463804}
{"id": 3385, "predictions": ["\u2581// \u2581 resolve Image \u2581returns \u2581the \u2581image \u2581image \u2581 ID \u2581of \u2581the \u2581image ."], "references": ["\u2581// \u2581 Resolve \u2581the \u2581reference ' s \u2581 name \u2581to \u2581an \u2581image \u2581 ID \u2581in \u2581the \u2581store , \u2581if \u2581there ' s \u2581already \u2581// \u2581one \u2581present \u2581with \u2581the \u2581same \u2581"], "bleu": 0.06704593774764558, "rouge_l": 0.2986013986013986}
{"id": 3901, "predictions": ["\u2581// \u2581 Sync \u2581 loads \u2581the \u2581 File ."], "references": ["\u2581// \u2581 Sync \u2581writes \u2581all \u2581changes \u2581back \u2581to \u2581the \u2581wrapped \u2581syntax \u2581tree . \u2581This \u2581should \u2581be \u2581// \u2581called \u2581after \u2581 editing \u2581operations , \u2581before \u2581reading \u2581the \u2581syntax \u2581tree \u2581again ."], "bleu": 0.02929887179387845, "rouge_l": 0.28045977011494255}
{"id": 3429, "predictions": ["\u2581// \u2581 To Schema 2 Config \u2581converts \u2581a \u2581 Schema \u2581to \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 To Schema 2 Config \u2581builds \u2581a \u2581schema 2- style \u2581configuration \u2581blob \u2581using \u2581the \u2581supplied \u2581diff IDs ."], "bleu": 0.30958456748997504, "rouge_l": 0.4400360685302073}
{"id": 2155, "predictions": ["\u2581// \u2581 Leader Address \u2581returns \u2581the \u2581current \u2581 raft \u2581node ."], "references": ["\u2581// \u2581 Leader Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581current \u2581 raft \u2581leader ."], "bleu": 0.5594712190418356, "rouge_l": 0.7830551989730423}
{"id": 3616, "predictions": ["\u2581// \u2581 Connect \u2581connects \u2581to \u2581the \u2581 Channel \u2581and \u2581returns \u2581the \u2581connection \u2581to \u2581the \u2581 Channel ."], "references": ["\u2581// \u2581 Connect \u2581creates \u2581a \u2581new \u2581outbound \u2581connection \u2581to \u2581 hostPort ."], "bleu": 0.17181529671327242, "rouge_l": 0.4982497082847141}
{"id": 3379, "predictions": ["\u2581// \u2581 write Legacy Layer Metadata \u2581writes \u2581the \u2581given \u2581layer \u2581metadata \u2581to \u2581the \u2581 format \u2581// \u2581of \u2581the \u2581given \u2581layer ."], "references": ["\u2581// \u2581 write Legacy Layer Metadata \u2581writes \u2581legacy \u2581 VERSION \u2581and \u2581configuration \u2581files \u2581for \u2581all \u2581 layers"], "bleu": 0.3221135973222975, "rouge_l": 0.4291996481970096}
{"id": 2746, "predictions": ["\u2581// \u2581make Cron Commits \u2581creates \u2581a \u2581new \u2581 cron \u2581job \u2581from \u2581the \u2581given \u2581 cron \u2581server ."], "references": ["\u2581// \u2581make Cron Commits \u2581makes \u2581commits \u2581to \u2581a \u2581single \u2581 cron \u2581input ' s \u2581repo . \u2581It ' s \u2581// \u2581a \u2581 helper \u2581function \u2581called \u2581by \u2581monitor Pipeline ."], "bleu": 0.1248062504457896, "rouge_l": 0.3737236215112321}
{"id": 2614, "predictions": ["\u2581// \u2581Get Events \u2581returns \u2581a \u2581listener \u2581that \u2581will \u2581be \u2581called \u2581when \u2581the \u2581 active \u2581// \u2581connection \u2581is \u2581closed ."], "references": ["\u2581// \u2581 Event \u2581handling \u2581function s \u2581// \u2581Get Events \u2581connects \u2581to \u2581the \u2581 LXD \u2581 monitoring \u2581interface"], "bleu": 0.1481394578697113, "rouge_l": 0.2805887764489421}
{"id": 3317, "predictions": ["\u2581// \u2581 Tablet And Layer ID \u2581implements \u2581the \u2581 Storage \u2581interface ."], "references": ["\u2581// \u2581 getBlob And Layer \u2581reads \u2581the \u2581 data \u2581blob \u2581or \u2581filesystem \u2581layer \u2581which \u2581matches \u2581the \u2581digest \u2581and \u2581 size , \u2581if \u2581given ."], "bleu": 0.07644757114918928, "rouge_l": 0.3668384879725086}
{"id": 2090, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581shared \u2581daemon ."], "bleu": 0.6104735835807844, "rouge_l": 0.75}
{"id": 3883, "predictions": ["\u2581// \u2581 Fix Load s \u2581 examine s \u2581 data \u2581from \u2581 File \u2581and \u2581 loads \u2581all \u2581 templates \u2581from \u2581the \u2581// \u2581 File ."], "references": ["\u2581// \u2581 Fix Load s \u2581removes \u2581 loads \u2581of \u2581unused \u2581go \u2581rules \u2581and \u2581adds \u2581 loads \u2581of \u2581newly \u2581used \u2581rules . \u2581// \u2581This \u2581should \u2581be \u2581called \u2581after \u2581 Fix File"], "bleu": 0.1884920891905005, "rouge_l": 0.429325513196481}
{"id": 2427, "predictions": ["\u2581// \u2581 subPath Send Setup \u2581 downloads \u2581the \u2581 container \u2581and \u2581 mounts \u2581the \u2581 container \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Spawn \u2581the \u2581 rsync \u2581process"], "bleu": 0.09614272376566879, "rouge_l": 0.314028314028314}
{"id": 2087, "predictions": ["\u2581// \u2581 Authenticate \u2581checks \u2581if \u2581the \u2581request \u2581is \u2581valid \u2581and \u2581returns \u2581a \u2581valid \u2581socket \u2581// \u2581if \u2581it \u2581is \u2581 set , \u2581the \u2581 TLS \u2581 config \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Authenticate \u2581validates \u2581an \u2581incoming \u2581http \u2581 Request \u2581// \u2581It \u2581will \u2581check \u2581over \u2581what \u2581protocol \u2581it \u2581came , \u2581what \u2581 type \u2581of \u2581request \u2581it \u2581is \u2581and \u2581// \u2581will \u2581validate"], "bleu": 0.10618957299553591, "rouge_l": 0.27036011080332406}
{"id": 2790, "predictions": ["\u2581// \u2581Retrieve \u2581retrieves \u2581the \u2581credentials \u2581from \u2581the \u2581 Vault \u2581 token ."], "references": ["\u2581// \u2581Retrieve \u2581returns \u2581nil \u2581if \u2581it \u2581successfully \u2581retrieved \u2581the \u2581value . \u2581 Error \u2581is \u2581// \u2581returned \u2581if \u2581the \u2581value \u2581were \u2581not \u2581obtain able , \u2581or \u2581 empty ."], "bleu": 0.04606184881898074, "rouge_l": 0.2798165137614679}
{"id": 3607, "predictions": ["\u2581// \u2581 New Channel \u2581creates \u2581a \u2581new \u2581channel \u2581with \u2581the \u2581given \u2581configuration ."], "references": ["\u2581// \u2581 New Channel \u2581creates \u2581a \u2581new \u2581 Channel . \u2581The \u2581new \u2581channel \u2581can \u2581be \u2581used \u2581to \u2581send \u2581outbound \u2581requests \u2581// \u2581to \u2581peers , \u2581but \u2581will \u2581not \u2581 listen \u2581or"], "bleu": 0.15204352415122008, "rouge_l": 0.3473309608540925}
{"id": 3033, "predictions": ["\u2581// \u2581 Etcd Deployment \u2581returns \u2581the \u2581 Deployment \u2581for \u2581the \u2581given \u2581 Asset"], "references": ["\u2581// \u2581 Etcd Deployment \u2581returns \u2581an \u2581etcd \u2581 k 8 s \u2581 Deployment ."], "bleu": 0.3752538475396915, "rouge_l": 0.5150784077201447}
{"id": 2145, "predictions": ["\u2581// \u2581 GetAll X attr \u2581returns \u2581the \u2581 X attr \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 GetAll X attr \u2581retrieves \u2581all \u2581extended \u2581attributes \u2581associated \u2581with \u2581a \u2581file , \u2581// \u2581directory \u2581or \u2581symbolic \u2581 link ."], "bleu": 0.22151147758988282, "rouge_l": 0.3693771626297577}
{"id": 2135, "predictions": ["\u2581// \u2581 Update Container \u2581updates \u2581the \u2581 subnets \u2581for \u2581the \u2581given \u2581 name \u2581and \u2581 resolves \u2581it ."], "references": ["\u2581// \u2581 Update Container \u2581updates \u2581the \u2581 M AAS \u2581device ' s \u2581interfaces \u2581with \u2581the \u2581new \u2581provided \u2581state"], "bleu": 0.37754323999245865, "rouge_l": 0.4444444444444444}
{"id": 3421, "predictions": ["\u2581// \u2581Parse Store Reference \u2581returns \u2581a \u2581 Storage Reference \u2581from \u2581the \u2581given \u2581store ."], "references": ["\u2581// \u2581Parse Store Reference \u2581takes \u2581a \u2581 name \u2581or \u2581an \u2581 ID , \u2581tries \u2581to \u2581figure \u2581out \u2581which \u2581it \u2581is \u2581// \u2581relative \u2581to \u2581the \u2581given \u2581store , \u2581and \u2581returns \u2581it"], "bleu": 0.11809259173826657, "rouge_l": 0.3839160839160839}
{"id": 2223, "predictions": ["\u2581// \u2581 Container Create From Image \u2581creates \u2581a \u2581new \u2581 container \u2581storage ."], "references": ["\u2581// \u2581 And \u2581 this \u2581function \u2581is \u2581why \u2581 I \u2581started \u2581 h ating \u2581on \u2581 btrfs . . ."], "bleu": 0.08336577565998732, "rouge_l": 0.2334928229665072}
{"id": 2853, "predictions": ["\u2581// \u2581 Serve \u2581starts \u2581the \u2581server \u2581and \u2581returns \u2581a \u2581 Err Err Err \u2581if \u2581it \u2581is \u2581not \u2581// \u2581 established ."], "references": ["\u2581// \u2581 Serve \u2581serves \u2581stuff ."], "bleu": 0.11433361115787453, "rouge_l": 0.3292847503373819}
{"id": 3426, "predictions": ["\u2581// \u2581delete Image \u2581deletes \u2581the \u2581image \u2581from \u2581the \u2581registry"], "references": ["\u2581// \u2581delete Image \u2581deletes \u2581the \u2581named \u2581image \u2581from \u2581the \u2581registry , \u2581if \u2581supported ."], "bleu": 0.4507574993398997, "rouge_l": 0.7530864197530865}
{"id": 2911, "predictions": ["\u2581// \u2581 Activate Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 activate s \u2581 this \u2581command ."], "references": ["\u2581// \u2581 Activate Cmd \u2581returns \u2581a \u2581 cobra . Command \u2581to \u2581 activate \u2581 Pac hyd er m ' s \u2581 auth \u2581system"], "bleu": 0.37374961941289636, "rouge_l": 0.5841979249800479}
{"id": 2703, "predictions": ["\u2581// \u2581 Install Ja e ger Tracer FromEnv \u2581initializes \u2581the \u2581 Ja e ger Tracer"], "references": ["\u2581// \u2581 Install Ja e ger Tracer FromEnv \u2581install s \u2581a \u2581 Ja e ger \u2581client \u2581as \u2581then \u2581 opentracing \u2581// \u2581global \u2581tracer , \u2581rely ing \u2581on \u2581environment \u2581variables \u2581to"], "bleu": 0.24791568674043643, "rouge_l": 0.5030927835051546}
{"id": 2910, "predictions": ["\u2581// \u2581Generate Self Signed Cert \u2581generates \u2581a \u2581certificate \u2581from \u2581the \u2581 IP \u2581address \u2581and \u2581 name"], "references": ["\u2581// \u2581Generate Self Signed Cert \u2581generates \u2581a \u2581self - signed \u2581 TLS \u2581cert \u2581for \u2581the \u2581 domain \u2581 name \u2581// \u2581' address ', \u2581with \u2581a \u2581private \u2581 key . \u2581"], "bleu": 0.20343774402800008, "rouge_l": 0.45337837837837835}
{"id": 3219, "predictions": ["\u2581// \u2581 Format Diff \u2581returns \u2581the \u2581 text Diff \u2581for \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 Format Diff \u2581converts \u2581a \u2581value Node \u2581tree \u2581into \u2581a \u2581 textNode \u2581tree , \u2581where \u2581the \u2581later \u2581// \u2581is \u2581a \u2581 text ual \u2581representation \u2581of \u2581the \u2581differences \u2581detected \u2581in"], "bleu": 0.09865243055173982, "rouge_l": 0.3412587412587413}
{"id": 3274, "predictions": ["\u2581// \u2581detect Properties Helper \u2581returns \u2581a \u2581 helper \u2581to \u2581detect \u2581if \u2581the \u2581 URL \u2581is \u2581valid"], "references": ["\u2581// \u2581detect Properties Helper \u2581performs \u2581the \u2581work \u2581of \u2581detect Properties \u2581which \u2581executes \u2581// \u2581it \u2581at \u2581most \u2581once ."], "bleu": 0.20551496929737734, "rouge_l": 0.29103053435114506}
{"id": 2502, "predictions": ["\u2581// \u2581 Description \u2581returns \u2581the \u2581 container \u2581 description \u2581of \u2581a \u2581 OperationType ."], "references": ["\u2581// \u2581 Description \u2581return \u2581a \u2581human - readable \u2581 description \u2581of \u2581the \u2581operation \u2581 type ."], "bleu": 0.23093669379071222, "rouge_l": 0.5269978401727862}
{"id": 3295, "predictions": ["\u2581// \u2581copy Updated Config And Manifest \u2581is \u2581used \u2581to \u2581copy \u2581the \u2581 contents \u2581of \u2581the \u2581image \u2581// \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581copy Updated Config And Manifest \u2581updates \u2581the \u2581image \u2581per \u2581 i c . manifest Updates , \u2581if \u2581necessary , \u2581// \u2581stores \u2581the \u2581resulting \u2581 config \u2581and \u2581manifest \u2581to \u2581the"], "bleu": 0.22459793626783764, "rouge_l": 0.363095238095238}
{"id": 2695, "predictions": ["\u2581// \u2581copy Without Snapshots Sparse \u2581copies \u2581the \u2581snapshot \u2581of \u2581the \u2581 VM \u2581and \u2581 container \u2581 data \u2581to \u2581the \u2581// \u2581 container ."], "references": ["\u2581// \u2581copy Without Snapshots Full \u2581creates \u2581a \u2581sparse \u2581copy \u2581of \u2581a \u2581 container \u2581// \u2581This \u2581 introduce s \u2581a \u2581dependency \u2581 relation \u2581between \u2581the \u2581source \u2581 RBD \u2581storage \u2581volume \u2581//"], "bleu": 0.14586271969887113, "rouge_l": 0.3685800604229607}
{"id": 3394, "predictions": ["\u2581// \u2581mount Blob \u2581is \u2581a \u2581 helper \u2581to \u2581 mounts \u2581a \u2581blob \u2581blob \u2581from \u2581the \u2581 path \u2581to \u2581the \u2581// \u2581given \u2581digest ."], "references": ["\u2581// \u2581mount Blob \u2581tries \u2581to \u2581mount \u2581blob \u2581 src Digest \u2581from \u2581 src Repo \u2581to \u2581the \u2581current \u2581destination ."], "bleu": 0.1392908359945467, "rouge_l": 0.48451151707704526}
{"id": 2362, "predictions": ["\u2581// \u2581 StoragePool Node Join Ceph \u2581 joins \u2581the \u2581 join \u2581 config \u2581for \u2581the \u2581node ."], "references": ["\u2581// \u2581 StoragePool Node Join Ceph \u2581updates \u2581internal \u2581state \u2581to \u2581reflect \u2581that \u2581 nodeID \u2581is \u2581// \u2581 joining \u2581a \u2581cluster \u2581where \u2581pool ID \u2581is \u2581a \u2581 ceph \u2581pool ."], "bleu": 0.18075882308801483, "rouge_l": 0.4152484683458136}
{"id": 2364, "predictions": ["\u2581// \u2581 StoragePool Create Pending \u2581is \u2581used \u2581to \u2581 remove \u2581a \u2581pending \u2581 Pending \u2581// \u2581 Pending ."], "references": ["\u2581// \u2581 StoragePool Create Pending \u2581creates \u2581a \u2581new \u2581pending \u2581storage \u2581pool \u2581on \u2581the \u2581node \u2581with \u2581// \u2581the \u2581given \u2581 name ."], "bleu": 0.24567152273634635, "rouge_l": 0.5058043117744611}
{"id": 2654, "predictions": ["\u2581// \u2581 Node IsEmpty \u2581returns \u2581the \u2581 set \u2581of \u2581all \u2581the \u2581 active \u2581images \u2581that \u2581have \u2581// \u2581been \u2581 set \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node IsEmpty \u2581returns \u2581an \u2581 empty \u2581string \u2581if \u2581the \u2581node \u2581with \u2581the \u2581given \u2581 ID \u2581has \u2581no \u2581// \u2581containers \u2581or \u2581images \u2581associated \u2581with \u2581it . \u2581Otherwise , \u2581it"], "bleu": 0.17533741053079405, "rouge_l": 0.363095238095238}
{"id": 2406, "predictions": ["\u2581// \u2581 New Notifier \u2581creates \u2581a \u2581new \u2581 Notifier \u2581instance ."], "references": ["\u2581// \u2581 New Notifier \u2581builds \u2581a \u2581 Notifier \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 notify \u2581other \u2581peers \u2581using \u2581// \u2581the \u2581given \u2581policy ."], "bleu": 0.13042505617210642, "rouge_l": 0.442429737080689}
{"id": 2175, "predictions": ["\u2581// \u2581 pre Dump Loop \u2581 - \u2581 pre - dump , \u2581 pre - dump , \u2581 pre - dump , \u2581 pre - dump , \u2581 pre -"], "references": ["\u2581// \u2581The \u2581function \u2581 pre Dump Loop \u2581is \u2581the \u2581main \u2581logic \u2581 behind \u2581the \u2581 pre - copy \u2581migration . \u2581// \u2581This \u2581function \u2581 contains \u2581the \u2581actual \u2581 pre -"], "bleu": 0.19624326517169108, "rouge_l": 0.43333333333333335}
{"id": 3876, "predictions": ["\u2581// \u2581 Map Expr Strings \u2581returns \u2581a \u2581 split \u2581function \u2581that \u2581matches \u2581the \u2581given \u2581 form ."], "references": ["\u2581// \u2581 Map Expr Strings \u2581applies \u2581a \u2581function \u2581to \u2581string \u2581sub - expressions \u2581within \u2581 e . \u2581// \u2581An \u2581expression \u2581containing \u2581the \u2581results \u2581with \u2581the \u2581same \u2581structure \u2581as \u2581 e"], "bleu": 0.14646788557110685, "rouge_l": 0.36478405315614615}
{"id": 2304, "predictions": ["\u2581// \u2581 container Metadata Templates Get \u2581returns \u2581the \u2581 contents \u2581of \u2581a \u2581 container ."], "references": ["\u2581// \u2581Return \u2581a \u2581list \u2581of \u2581 templates \u2581used \u2581in \u2581a \u2581 container \u2581or \u2581the \u2581 content \u2581of \u2581a \u2581template"], "bleu": 0.16318420051820362, "rouge_l": 0.4032105760151086}
{"id": 3343, "predictions": ["\u2581// \u2581 doRequest \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581in \u2581the \u2581 URL \u2581and \u2581returns \u2581the \u2581// \u2581 status \u2581of \u2581the \u2581 URL"], "references": ["\u2581// \u2581 doRequest \u2581performs \u2581a \u2581correctly \u2581authenticated \u2581request \u2581to \u2581a \u2581specified \u2581 path , \u2581and \u2581returns \u2581response \u2581 body \u2581or \u2581an \u2581error \u2581object ."], "bleu": 0.1022875701616399, "rouge_l": 0.3071113908118313}
{"id": 2483, "predictions": ["\u2581// \u2581 Detect s \u2581the \u2581endpoints \u2581for \u2581the \u2581endpoints \u2581and \u2581 listen s \u2581on \u2581the \u2581// \u2581 listen \u2581socket ."], "references": ["\u2581// \u2581 Up \u2581bring s \u2581up \u2581all \u2581configured \u2581endpoints \u2581and \u2581starts \u2581accept ing \u2581HTTP \u2581requests ."], "bleu": 0.10996031481933312, "rouge_l": 0.34014869888475835}
{"id": 3162, "predictions": ["\u2581// \u2581validate Activation Code \u2581validates \u2581the \u2581 pem \u2581 code \u2581for \u2581a \u2581 DER - encoded \u2581 key ."], "references": ["\u2581// \u2581validate Activation Code \u2581checks \u2581the \u2581validity \u2581of \u2581an \u2581activation \u2581 code"], "bleu": 0.21314568971111159, "rouge_l": 0.4707828004410144}
{"id": 2694, "predictions": ["\u2581// \u2581copy Without Snapshots Full \u2581copies \u2581the \u2581 contents \u2581of \u2581the \u2581 VM \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581copy Without Snapshots Full \u2581creates \u2581a \u2581non - sparse \u2581copy \u2581of \u2581a \u2581 container \u2581// \u2581This \u2581does \u2581not \u2581 introduce \u2581a \u2581dependency \u2581 relation \u2581between \u2581the \u2581source \u2581 RBD"], "bleu": 0.15938594748838525, "rouge_l": 0.3588235294117647}
{"id": 3068, "predictions": ["\u2581// \u2581run User Error Handling Code \u2581is \u2581called \u2581when \u2581a \u2581user \u2581is \u2581running ."], "references": ["\u2581// \u2581 Run \u2581user \u2581error \u2581 code \u2581and \u2581return \u2581the \u2581combined \u2581output \u2581of \u2581 stdout \u2581and \u2581stderr ."], "bleu": 0.07899414209772945, "rouge_l": 0.18336673346693386}
{"id": 2410, "predictions": ["\u2581// \u2581 get SearchResults Profile Content \u2581returns \u2581the \u2581 revisions \u2581of \u2581all \u2581 active \u2581 modules"], "references": ["\u2581// \u2581 getProfile Content \u2581generates \u2581the \u2581 app armor \u2581profile \u2581template \u2581from \u2581the \u2581given \u2581// \u2581 container . \u2581This \u2581includes \u2581the \u2581 stock \u2581 lxc \u2581includes \u2581as \u2581well \u2581as \u2581stuff"], "bleu": 0.059682648741937634, "rouge_l": 0.2885135135135135}
{"id": 2758, "predictions": ["\u2581// \u2581 authorize Pipeline Op \u2581returns \u2581the \u2581 auth \u2581operation \u2581for \u2581the \u2581given \u2581operation"], "references": ["\u2581// \u2581 authorize Pipeline Op \u2581checks \u2581if \u2581the \u2581user \u2581indicated \u2581by \u2581' ctx ' \u2581is \u2581authorized \u2581// \u2581to \u2581perform \u2581' operation ' \u2581on \u2581the \u2581pipeline \u2581in \u2581' info '"], "bleu": 0.11916777201071173, "rouge_l": 0.30631276901004306}
{"id": 3038, "predictions": ["\u2581// \u2581 Etcd StatefulSet \u2581returns \u2581the \u2581 stateful set \u2581 set \u2581of \u2581 config \u2581for \u2581a \u2581given \u2581disk ."], "references": ["\u2581// \u2581 Etcd StatefulSet \u2581returns \u2581a \u2581 stateful \u2581 set \u2581that \u2581manage s \u2581an \u2581etcd \u2581cluster"], "bleu": 0.2985669537121763, "rouge_l": 0.5223596574690771}
{"id": 2913, "predictions": ["\u2581// \u2581 Login Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581 login s ."], "references": ["\u2581// \u2581 Login Cmd \u2581returns \u2581a \u2581 cobra . Command \u2581to \u2581 login \u2581to \u2581a \u2581 Pac hyd er m \u2581cluster \u2581with \u2581your \u2581// \u2581GitHub \u2581account . \u2581Any \u2581resources \u2581that"], "bleu": 0.13069093612729119, "rouge_l": 0.42657342657342656}
{"id": 2665, "predictions": ["\u2581// \u2581 Profile Create \u2581creates \u2581a \u2581profile \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Profile Create \u2581adds \u2581a \u2581new \u2581profile \u2581to \u2581the \u2581database ."], "bleu": 0.3352957210268611, "rouge_l": 0.6902404526166903}
{"id": 2784, "predictions": ["\u2581// \u2581 Print Detailed \u2581prints \u2581 diagnostic \u2581information \u2581about \u2581a \u2581 QR \u2581 code ."], "references": ["\u2581// \u2581 Print Detailed JobInfo \u2581pretty - print s \u2581detailed \u2581job \u2581 info ."], "bleu": 0.2490328638846773, "rouge_l": 0.416382252559727}
{"id": 2281, "predictions": ["\u2581// \u2581create Disk Device \u2581creates \u2581a \u2581 container \u2581device"], "references": ["\u2581// \u2581 Disk \u2581device \u2581handling"], "bleu": 0.17747405280050263, "rouge_l": 0.4518518518518518}
{"id": 4054, "predictions": ["\u2581// \u2581 Commit \u2581 provision s \u2581the \u2581 container"], "references": ["\u2581// \u2581 Commits \u2581commits \u2581the \u2581 container , \u2581creating \u2581an \u2581image \u2581in \u2581Docker . \u2581It \u2581then \u2581returns \u2581// \u2581the \u2581image \u2581 identifier \u2581for \u2581usage \u2581in \u2581future \u2581 container \u2581creation ."], "bleu": 0.03148368666605467, "rouge_l": 0.28045977011494255}
{"id": 3166, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 cli ."], "references": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581specified \u2581command \u2581but \u2581does \u2581not \u2581wait \u2581for \u2581it \u2581to \u2581complete . \u2581// \u2581// \u2581The \u2581 Wait \u2581method \u2581will \u2581return \u2581the \u2581 exit \u2581 code \u2581and"], "bleu": 0.0422328460129871, "rouge_l": 0.2859375}
{"id": 2091, "predictions": ["\u2581// \u2581setup External Authentication \u2581creates \u2581a \u2581new \u2581 macaroon \u2581 key \u2581for \u2581the \u2581 auth \u2581 key \u2581 auth \u2581// \u2581 key \u2581is \u2581 set \u2581to \u2581the \u2581 macaroon"], "references": ["\u2581// \u2581 Setup \u2581external \u2581authentication"], "bleu": 0.05495757364749458, "rouge_l": 0.13480662983425412}
{"id": 2663, "predictions": ["\u2581// \u2581 Profile Config Ref \u2581returns \u2581the \u2581 set \u2581of \u2581 config \u2581objects \u2581for \u2581the \u2581 filter ."], "references": ["\u2581// \u2581 Profile Config Ref \u2581returns \u2581entities \u2581used \u2581by \u2581profiles ."], "bleu": 0.3187271473320672, "rouge_l": 0.5047281323877069}
{"id": 2207, "predictions": ["\u2581// \u2581copy Container L v \u2581is \u2581used \u2581to \u2581copy \u2581the \u2581 container \u2581 dir"], "references": ["\u2581// \u2581 Copy \u2581a \u2581 container \u2581on \u2581a \u2581storage \u2581pool \u2581that \u2581does \u2581not \u2581use \u2581a \u2581 thin pool ."], "bleu": 0.09248234954638977, "rouge_l": 0.2359767891682785}
{"id": 2787, "predictions": ["\u2581// \u2581 Print Detailed Datum Info \u2581prints \u2581the \u2581 info \u2581information \u2581about \u2581a \u2581 Datum Info ."], "references": ["\u2581// \u2581 Print Detailed Datum Info \u2581pretty - print s \u2581detailed \u2581 info \u2581about \u2581a \u2581datum"], "bleu": 0.39345493770478296, "rouge_l": 0.6093906093906094}
{"id": 2202, "predictions": ["\u2581// \u2581backup Fix StoragePool \u2581updates \u2581the \u2581 data \u2581for \u2581the \u2581backup \u2581device ."], "references": ["\u2581// \u2581fix Backup StoragePool \u2581changes \u2581the \u2581pool \u2581information \u2581in \u2581the \u2581backup . yaml . \u2581This \u2581// \u2581is \u2581done \u2581only \u2581if \u2581the \u2581provided \u2581pool \u2581doesn ' t \u2581exist . \u2581 In"], "bleu": 0.04344553129835821, "rouge_l": 0.26049822064056943}
{"id": 3411, "predictions": ["\u2581// \u2581new Image Destination \u2581returns \u2581a \u2581new \u2581image \u2581destination \u2581for \u2581the \u2581given \u2581 path . \u2581// \u2581If \u2581the \u2581image \u2581is \u2581not \u2581found , \u2581it \u2581will \u2581be \u2581returned ."], "references": ["\u2581// \u2581new Image Destination \u2581returns \u2581an \u2581 Image Destination \u2581for \u2581writing \u2581to \u2581a \u2581directory ."], "bleu": 0.18012107375362474, "rouge_l": 0.3443548387096774}
{"id": 3114, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 healthcheck er ."], "references": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581port \u2581 forwarder . \u2581Returns \u2581after \u2581initialization \u2581is \u2581be gun , \u2581// \u2581returning \u2581any \u2581initialization \u2581errors ."], "bleu": 0.13103533507765186, "rouge_l": 0.41986234021632257}
{"id": 2873, "predictions": ["\u2581// \u2581 Deserialize \u2581deserialize s \u2581a \u2581 key - value \u2581pair \u2581of \u2581 key - value \u2581pairs \u2581into \u2581a \u2581// \u2581 slice \u2581of \u2581 keys ."], "references": ["\u2581// \u2581 Deserialize \u2581deserialize s \u2581a \u2581hash tree ."], "bleu": 0.21849712035317273, "rouge_l": 0.43839835728952764}
{"id": 2917, "predictions": ["\u2581// \u2581Get Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581 this \u2581 ACL ."], "references": ["\u2581// \u2581Get Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581gets \u2581either \u2581the \u2581 ACL \u2581for \u2581a \u2581 Pac hyd er m \u2581// \u2581repo \u2581or \u2581another \u2581user ' s \u2581 scope"], "bleu": 0.1273087657056144, "rouge_l": 0.42657342657342656}
{"id": 3578, "predictions": ["\u2581// \u2581 Handle \u2581is \u2581the \u2581handler \u2581for \u2581 t ."], "references": ["\u2581// \u2581 Handle \u2581deserialize s \u2581the \u2581JSON \u2581arguments \u2581and \u2581calls \u2581the \u2581underlying \u2581handler ."], "bleu": 0.18088944840162538, "rouge_l": 0.48541114058355433}
{"id": 2558, "predictions": ["\u2581// \u2581update From V 6 \u2581updates \u2581the \u2581 set \u2581of \u2581 active \u2581 ids \u2581for \u2581the \u2581 v 6 \u2581 key"], "references": ["\u2581// \u2581The \u2581 zfs . pool _ name \u2581 config \u2581 key \u2581is \u2581node - specific , \u2581and \u2581needs \u2581to \u2581be \u2581linked \u2581to \u2581// \u2581nodes ."], "bleu": 0.07166143002586768, "rouge_l": 0.2087611225188227}
{"id": 2664, "predictions": ["\u2581// \u2581 Profile Used By Ref \u2581returns \u2581the \u2581 set \u2581of \u2581profile \u2581names \u2581for \u2581the \u2581// \u2581cluster \u2581 filter ."], "references": ["\u2581// \u2581 Profile Used By Ref \u2581returns \u2581entities \u2581used \u2581by \u2581profiles ."], "bleu": 0.3386854985606571, "rouge_l": 0.5236051502145923}
{"id": 2877, "predictions": ["\u2581// \u2581 Put Dir Header Footer \u2581creates \u2581a \u2581 path \u2581with \u2581the \u2581given \u2581 path \u2581and \u2581 height ."], "references": ["\u2581// \u2581 Put Dir Header Footer \u2581implements \u2581the \u2581hash tree . Put Dir Header Footer \u2581interface \u2581// \u2581method"], "bleu": 0.310441435588881, "rouge_l": 0.43455031166518254}
{"id": 3097, "predictions": ["\u2581// \u2581 Activate Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 Activate \u2581 Enterprise"], "references": ["\u2581// \u2581 Activate Cmd \u2581returns \u2581a \u2581 cobra . Command \u2581to \u2581 activate \u2581the \u2581 enterprise \u2581features \u2581of \u2581// \u2581 Pac hyd er m \u2581within \u2581a \u2581 Pac hyd er"], "bleu": 0.18482489435045105, "rouge_l": 0.42657342657342656}
{"id": 3729, "predictions": ["\u2581// \u2581 Receive \u2581sends \u2581a \u2581 relay \u2581to \u2581the \u2581 relay ."], "references": ["\u2581// \u2581 Receive \u2581receives \u2581frames \u2581intended \u2581for \u2581 this \u2581connection . \u2581// \u2581It \u2581returns \u2581whether \u2581the \u2581frame \u2581was \u2581sent \u2581and \u2581a \u2581reason \u2581for \u2581failure \u2581if \u2581it \u2581failed ."], "bleu": 0.060620802219207015, "rouge_l": 0.2798165137614679}
{"id": 2065, "predictions": ["\u2581// \u2581 Memory Resource \u2581returns \u2581the \u2581 data \u2581for \u2581the \u2581resource ."], "references": ["\u2581// \u2581 Memory Resource \u2581returns \u2581the \u2581system \u2581memory \u2581information"], "bleu": 0.4703709593866897, "rouge_l": 0.5865384615384615}
{"id": 3084, "predictions": ["\u2581// \u2581inspect Commit \u2581returns \u2581the \u2581commit \u2581information \u2581for \u2581the \u2581given \u2581commit"], "references": ["\u2581// \u2581inspect Commit \u2581takes \u2581a \u2581 Commit \u2581and \u2581returns \u2581the \u2581corresponding \u2581 Commit Info . \u2581// \u2581// \u2581 As \u2581a \u2581side \u2581effect , \u2581 this \u2581function \u2581also \u2581replaces \u2581the \u2581"], "bleu": 0.04657982819966817, "rouge_l": 0.2701107011070111}
{"id": 3542, "predictions": ["\u2581// \u2581 New PubSub \u2581creates \u2581a \u2581new \u2581 PubSub \u2581subscription ."], "references": ["\u2581// \u2581 New PubSub \u2581returns \u2581a \u2581new \u2581 PubSub \u2581management \u2581object ."], "bleu": 0.4978653458641856, "rouge_l": 0.7765205091937766}
{"id": 2764, "predictions": ["\u2581// \u2581new Obj Block APIServer \u2581returns \u2581a \u2581new \u2581 empty \u2581 config \u2581instance"], "references": ["\u2581// \u2581 In \u2581 test \u2581mode , \u2581we \u2581use \u2581unique \u2581names \u2581for \u2581cache \u2581 groups , \u2581since \u2581we \u2581might \u2581want \u2581// \u2581to \u2581run \u2581multiple \u2581block \u2581servers \u2581locally , \u2581which \u2581would"], "bleu": 0.030720629793321484, "rouge_l": 0.13024911032028472}
{"id": 3693, "predictions": ["\u2581// \u2581done Acquire \u2581returns \u2581a \u2581 success \u2581error \u2581if \u2581the \u2581request \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581done Reading \u2581shut s \u2581down \u2581the \u2581message \u2581exchange \u2581for \u2581 this \u2581 call . \u2581// \u2581 For \u2581outgoing \u2581calls , \u2581the \u2581last \u2581message \u2581is \u2581reading \u2581the \u2581 call \u2581response"], "bleu": 0.05089379736704288, "rouge_l": 0.2515463917525773}
{"id": 2998, "predictions": ["\u2581// \u2581 New AuthServer \u2581returns \u2581a \u2581new \u2581 auth \u2581client"], "references": ["\u2581// \u2581 New AuthServer \u2581returns \u2581an \u2581implementation \u2581of \u2581 auth client . APIServer ."], "bleu": 0.348102011375161, "rouge_l": 0.5663129973474801}
{"id": 2174, "predictions": ["\u2581// \u2581checkFor Pre Dump Support \u2581checks \u2581if \u2581the \u2581 container \u2581 info \u2581is \u2581 set \u2581to \u2581 this \u2581// \u2581migration ."], "references": ["\u2581// \u2581Check \u2581if \u2581 CRI U \u2581supports \u2581 pre - dump ing \u2581and \u2581number \u2581of \u2581// \u2581 pre - dump \u2581iterations"], "bleu": 0.0794635781571282, "rouge_l": 0.23809523809523805}
{"id": 3163, "predictions": ["\u2581// \u2581 Activate \u2581 activate s \u2581the \u2581 Cloud \u2581 Controller \u2581 Server ."], "references": ["\u2581// \u2581 Activate \u2581implements \u2581the \u2581 Activate \u2581RPC"], "bleu": 0.195647514979229, "rouge_l": 0.47805642633228845}
{"id": 3353, "predictions": ["\u2581// \u2581 get V 1 Registries \u2581 loads \u2581 V 1 \u2581 config \u2581from \u2581 config ."], "references": ["\u2581// \u2581 get V 1 Registries \u2581transforms \u2581 v 1 \u2581 registries \u2581in \u2581the \u2581 config \u2581into \u2581an \u2581array \u2581of \u2581 v 2 \u2581// \u2581 registries \u2581of \u2581 type \u2581"], "bleu": 0.19095240021990714, "rouge_l": 0.4458471760797342}
{"id": 2785, "predictions": ["\u2581// \u2581 Print Detailed Pipeline Info \u2581prints \u2581the \u2581pipeline \u2581information \u2581for \u2581the \u2581pipeline"], "references": ["\u2581// \u2581 Print Detailed Pipeline Info \u2581pretty - print s \u2581detailed \u2581pipeline \u2581 info ."], "bleu": 0.3833468886791474, "rouge_l": 0.49364161849710986}
{"id": 3943, "predictions": ["\u2581// \u2581 fileName Info \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581file \u2581 name \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 fileName Info \u2581returns \u2581information \u2581that \u2581can \u2581be \u2581 inferred \u2581from \u2581the \u2581 name \u2581of \u2581// \u2581a \u2581file . \u2581It \u2581does \u2581not \u2581read \u2581 data \u2581from \u2581the \u2581file ."], "bleu": 0.18083510101181327, "rouge_l": 0.4315112540192926}
{"id": 3689, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 contents \u2581of \u2581the \u2581fragment ."], "references": ["\u2581// \u2581 Close \u2581ends \u2581the \u2581current \u2581argument ."], "bleu": 0.23462350320527994, "rouge_l": 0.5417406749555951}
{"id": 3628, "predictions": ["\u2581// \u2581 Run \u2581executes \u2581the \u2581 t 2 \u2581 test \u2581 Service ."], "references": ["\u2581// \u2581 Run \u2581executes \u2581the \u2581 trace \u2581behavior"], "bleu": 0.4324227075463215, "rouge_l": 0.5970636215334422}
{"id": 2950, "predictions": ["\u2581// \u2581 Import \u2581imports \u2581images \u2581from \u2581the \u2581 Yaml \u2581to \u2581 get \u2581the \u2581image \u2581image"], "references": ["\u2581// \u2581 Import \u2581a \u2581 tarball \u2581of \u2581the \u2581images \u2581needed \u2581by \u2581a \u2581deployment \u2581such \u2581as \u2581the \u2581one \u2581// \u2581created \u2581by \u2581 Export \u2581and \u2581 push \u2581those \u2581images \u2581to \u2581the \u2581registry"], "bleu": 0.07082273159772777, "rouge_l": 0.3353951890034364}
{"id": 2073, "predictions": ["\u2581// \u2581 Project List \u2581lists \u2581all \u2581 Project \u2581objects \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Project List \u2581returns \u2581all \u2581available \u2581projects ."], "bleu": 0.2891784933232572, "rouge_l": 0.563944530046225}
{"id": 3739, "predictions": ["\u2581// \u2581 dispatch Inbound \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sends \u2581a \u2581 inbound \u2581 call \u2581to \u2581the \u2581// \u2581 inbound \u2581service ."], "references": ["\u2581// \u2581 dispatch Inbound \u2581is patches \u2581an \u2581 inbound \u2581 call \u2581to \u2581the \u2581appropriate \u2581handler"], "bleu": 0.3876683604691331, "rouge_l": 0.6017937219730942}
{"id": 2117, "predictions": ["\u2581// \u2581try Copy Image \u2581pull s \u2581the \u2581image \u2581from \u2581the \u2581 set \u2581of \u2581 Image \u2581objects \u2581and \u2581returns \u2581// \u2581the \u2581 Remote Operation ."], "references": ["\u2581// \u2581try Copy Image \u2581iterates \u2581through \u2581the \u2581source \u2581server \u2581URLs \u2581until \u2581one \u2581lets \u2581it \u2581download \u2581the \u2581image"], "bleu": 0.16767849550785174, "rouge_l": 0.301980198019802}
{"id": 2697, "predictions": ["\u2581// \u2581Set Config Cmd \u2581sets \u2581the \u2581 config \u2581 config \u2581for \u2581the \u2581command"], "references": ["\u2581// \u2581Set Config Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581lets \u2581the \u2581caller \u2581configure \u2581 auth \u2581// \u2581 backends \u2581in \u2581 Pac hyd er m"], "bleu": 0.1223389908944219, "rouge_l": 0.34857142857142853}
{"id": 2529, "predictions": ["\u2581// \u2581do StoragePool Create Internal \u2581is \u2581called \u2581when \u2581the \u2581 thin - pool \u2581 manager \u2581is \u2581 set \u2581to \u2581// \u2581the \u2581 VM ."], "references": ["\u2581// \u2581This \u2581performs \u2581all \u2581non - db \u2581related \u2581work \u2581needed \u2581to \u2581create \u2581the \u2581pool ."], "bleu": 0.06667489966054595, "rouge_l": 0.2675438596491228}
{"id": 2336, "predictions": ["\u2581// \u2581 dump Table \u2581returns \u2581the \u2581 table \u2581 table \u2581for \u2581the \u2581given \u2581schema ."], "references": ["\u2581// \u2581 Dump \u2581a \u2581single \u2581 table , \u2581returning \u2581a \u2581 SQL \u2581 text \u2581containing \u2581statements \u2581for \u2581its \u2581// \u2581schema \u2581and \u2581 data ."], "bleu": 0.08653535795290283, "rouge_l": 0.393866020984665}
{"id": 2941, "predictions": ["\u2581// \u2581 Watch ByIndex \u2581returns \u2581a \u2581watcher \u2581that \u2581 watches \u2581for \u2581changes \u2581to \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581 Watch ByIndex \u2581 watches \u2581 items \u2581in \u2581a \u2581collection \u2581that \u2581match \u2581a \u2581particular \u2581index"], "bleu": 0.25281168697394946, "rouge_l": 0.4265734265734266}
{"id": 2133, "predictions": ["\u2581// \u2581Create Container \u2581creates \u2581a \u2581new \u2581 container ."], "references": ["\u2581// \u2581Create Container \u2581defines \u2581a \u2581new \u2581 M AAS \u2581device \u2581for \u2581the \u2581 controller"], "bleu": 0.21797916192048702, "rouge_l": 0.5020576131687242}
{"id": 2397, "predictions": ["\u2581// \u2581 Devices \u2581returns \u2581a \u2581list \u2581of \u2581devices \u2581that \u2581have \u2581been \u2581 set \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Devices \u2581returns \u2581the \u2581devices \u2581matching \u2581the \u2581given \u2581filters ."], "bleu": 0.22612164703205964, "rouge_l": 0.5200974421437271}
{"id": 3035, "predictions": ["\u2581// \u2581 Etcd Volume \u2581creates \u2581a \u2581 PersistentVolume \u2581from \u2581a \u2581 Storage \u2581object"], "references": ["\u2581// \u2581 Etcd Volume \u2581creates \u2581a \u2581persistent \u2581volume \u2581back ed \u2581by \u2581a \u2581volume \u2581with \u2581 name \u2581\" name \""], "bleu": 0.2902358142268316, "rouge_l": 0.483647175421209}
{"id": 2918, "predictions": ["\u2581// \u2581Set Scope Cmd \u2581sets \u2581the \u2581 scope \u2581command"], "references": ["\u2581// \u2581Set Scope Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581lets \u2581a \u2581user \u2581 set \u2581the \u2581level \u2581of \u2581access \u2581// \u2581that \u2581another \u2581user \u2581has \u2581to \u2581a \u2581repo"], "bleu": 0.05979002145444452, "rouge_l": 0.30576441102756885}
{"id": 3414, "predictions": ["\u2581// \u2581Get Repository Tags \u2581returns \u2581the \u2581tags \u2581for \u2581a \u2581given \u2581 ref ."], "references": ["\u2581// \u2581Get Repository Tags \u2581list \u2581all \u2581tags \u2581available \u2581in \u2581the \u2581repository . \u2581The \u2581tag \u2581// \u2581provided \u2581inside \u2581the \u2581 Image Reference \u2581will \u2581be \u2581ignored ."], "bleu": 0.1223389908944219, "rouge_l": 0.34857142857142853}
{"id": 2358, "predictions": ["\u2581// \u2581 fill Slice Reference Field \u2581decodes \u2581a \u2581 slice \u2581of \u2581 items \u2581into \u2581a \u2581 set \u2581of \u2581field \u2581values ."], "references": ["\u2581// \u2581 Populate \u2581a \u2581field \u2581consistin g \u2581of \u2581a \u2581 slice \u2581of \u2581objects \u2581 referencing \u2581the \u2581// \u2581 entity . \u2581This \u2581information \u2581is \u2581available \u2581by \u2581 joining \u2581a \u2581the \u2581"], "bleu": 0.14142739830716383, "rouge_l": 0.34205607476635513}
{"id": 3269, "predictions": ["\u2581// \u2581load And Merge Config \u2581 loads \u2581the \u2581 config \u2581configuration \u2581from \u2581the \u2581given \u2581 dir ."], "references": ["\u2581// \u2581load And Merge Config \u2581 loads \u2581configuration \u2581files \u2581in \u2581 dirPath"], "bleu": 0.4112175645551036, "rouge_l": 0.6406067677946324}
{"id": 3862, "predictions": ["\u2581// \u2581check Exchange s \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581 Exchange s \u2581and \u2581 write \u2581// \u2581the \u2581connection \u2581to \u2581the \u2581 Server ' s \u2581 Conn ."], "references": ["\u2581// \u2581check Exchange s \u2581is \u2581called \u2581whenever \u2581an \u2581exchange \u2581is \u2581removed , \u2581and \u2581when \u2581 Close \u2581is \u2581called ."], "bleu": 0.17543860064617767, "rouge_l": 0.3526011560693641}
{"id": 2760, "predictions": ["\u2581// \u2581 set Pipeline Defaults \u2581 set \u2581the \u2581default \u2581values \u2581for \u2581the \u2581 Pipeline Info"], "references": ["\u2581// \u2581 set Pipeline Defaults \u2581sets \u2581the \u2581default \u2581values \u2581for \u2581a \u2581pipeline \u2581 info"], "bleu": 0.46892438882117243, "rouge_l": 0.6939704209328782}
{"id": 2673, "predictions": ["\u2581// \u2581loop \u2581is \u2581a \u2581long \u2581running \u2581goroutine \u2581that \u2581will \u2581 kick \u2581the \u2581task \u2581to \u2581the \u2581// \u2581task ."], "references": ["\u2581// \u2581Execute \u2581the \u2581our \u2581task \u2581function \u2581according \u2581to \u2581our \u2581schedule , \u2581until \u2581the \u2581given \u2581// \u2581context \u2581gets \u2581cancelled ."], "bleu": 0.09109536346879507, "rouge_l": 0.37654320987654327}
{"id": 2634, "predictions": ["\u2581// \u2581 Network Update Address \u2581implements \u2581the \u2581endpoints . Service \u2581interface ."], "references": ["\u2581// \u2581 Network Update Address \u2581updates \u2581the \u2581address \u2581for \u2581the \u2581network \u2581endpoint , \u2581 shutting \u2581// \u2581it \u2581down \u2581and \u2581 restarting \u2581it ."], "bleu": 0.16352257350048435, "rouge_l": 0.3785460992907802}
{"id": 3855, "predictions": ["\u2581// \u2581 Send \u2581a \u2581 span \u2581to \u2581the \u2581remote \u2581peer ."], "references": ["\u2581// \u2581 Send SystemError \u2581sends \u2581an \u2581error \u2581frame \u2581for \u2581the \u2581given \u2581system \u2581error ."], "bleu": 0.1786189637183548, "rouge_l": 0.39152759948652116}
{"id": 2334, "predictions": ["\u2581// \u2581 StoragePool Mount \u2581returns \u2581true \u2581if \u2581the \u2581storage \u2581 exists \u2581and \u2581the \u2581pool \u2581is \u2581// \u2581used ."], "references": ["\u2581// \u2581Currently \u2581only \u2581used \u2581for \u2581loop - back ed \u2581 L VM \u2581storage \u2581 pools . \u2581 Can \u2581be \u2581called \u2581without \u2581// \u2581 overhead \u2581since \u2581it \u2581is \u2581essentially \u2581a \u2581noop"], "bleu": 0.06701353594239996, "rouge_l": 0.19934640522875816}
{"id": 2987, "predictions": ["\u2581// \u2581 New Amazon Client From Secret \u2581creates \u2581a \u2581new \u2581 Kubernetes \u2581client \u2581from \u2581the \u2581given \u2581 secret ."], "references": ["\u2581// \u2581 New Amazon Client From Secret \u2581constructs \u2581an \u2581 amazon \u2581client \u2581by \u2581reading \u2581credentials \u2581// \u2581from \u2581a \u2581 mounted \u2581Amazon Secret . \u2581You \u2581may \u2581pass \u2581\"\" \u2581for \u2581bucket \u2581in"], "bleu": 0.22349969222337718, "rouge_l": 0.4707395498392284}
{"id": 2247, "predictions": ["\u2581// \u2581internal Cluster Post Rebalance \u2581performs \u2581a \u2581 post - server \u2581to \u2581 post \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Used \u2581to \u2581update \u2581the \u2581cluster \u2581after \u2581a \u2581database \u2581node \u2581has \u2581been \u2581removed , \u2581and \u2581// \u2581possibly \u2581 promote \u2581another \u2581one \u2581as \u2581database \u2581node ."], "bleu": 0.07369098322627543, "rouge_l": 0.26891991182953706}
{"id": 2287, "predictions": ["\u2581// \u2581Get Logger \u2581returns \u2581a \u2581logger \u2581that \u2581will \u2581 write \u2581log \u2581logs \u2581to \u2581the \u2581log \u2581file ."], "references": ["\u2581// \u2581Get Logger \u2581returns \u2581a \u2581logger \u2581suitable \u2581for \u2581using \u2581as \u2581logger . Log ."], "bleu": 0.3381307292971254, "rouge_l": 0.45963401506996776}
{"id": 2392, "predictions": ["\u2581// \u2581 S all Create \u2581 - \u2581 get \u2581the \u2581 s take \u2581 config \u2581for \u2581a \u2581volume ."], "references": ["\u2581// \u2581 S toragePoolVolume Create \u2581creates \u2581a \u2581new \u2581storage \u2581volume \u2581attached \u2581to \u2581a \u2581given \u2581// \u2581storage \u2581pool ."], "bleu": 0.14253911354181859, "rouge_l": 0.3802315227070347}
{"id": 3965, "predictions": ["\u2581// \u2581 remove Legacy Proto \u2581removes \u2581all \u2581rules \u2581from \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 remove Legacy Proto \u2581removes \u2581uses \u2581of \u2581the \u2581old \u2581proto \u2581rules . \u2581It \u2581deletes \u2581 loads \u2581// \u2581from \u2581go _ proto _ library . bz l . \u2581It \u2581deletes"], "bleu": 0.14602193494542398, "rouge_l": 0.3839160839160839}
{"id": 3512, "predictions": ["\u2581// \u2581 New Plan Value \u2581returns \u2581a \u2581 Plan Value \u2581that \u2581will \u2581run \u2581the \u2581given \u2581node ."], "references": ["\u2581// \u2581 New Plan Value \u2581builds \u2581a \u2581 sqltypes . Plan Value \u2581from \u2581an \u2581 Expr ."], "bleu": 0.33491517492026424, "rouge_l": 0.5882352941176471}
{"id": 4079, "predictions": ["\u2581// \u2581 Bind Unit \u2581 binds \u2581a \u2581unit \u2581to \u2581the \u2581service ."], "references": ["\u2581// \u2581 Bind Unit \u2581makes \u2581the \u2581 bind \u2581between \u2581the \u2581binder \u2581and \u2581an \u2581unit ."], "bleu": 0.26086180586191693, "rouge_l": 0.5083333333333334}
{"id": 2781, "predictions": ["\u2581// \u2581 Print \u2581prints \u2581a \u2581 stdout \u2581in \u2581the \u2581output \u2581writer ."], "references": ["\u2581// \u2581 Print JobInfo \u2581pretty - print s \u2581job \u2581 info ."], "bleu": 0.21401603033752975, "rouge_l": 0.4166666666666667}
{"id": 3621, "predictions": ["\u2581// \u2581connection Close StateChange \u2581is \u2581called \u2581when \u2581the \u2581connection \u2581is \u2581 alive ."], "references": ["\u2581// \u2581connection Close StateChange \u2581is \u2581called \u2581when \u2581a \u2581connection ' s \u2581 close \u2581state \u2581changes ."], "bleu": 0.4420993350130781, "rouge_l": 0.6770255271920089}
{"id": 3511, "predictions": ["\u2581// \u2581 Preview \u2581returns \u2581the \u2581 preview \u2581of \u2581the \u2581 form \u2581of \u2581the \u2581given \u2581 SQL \u2581statement ."], "references": ["\u2581// \u2581 Preview \u2581analyze s \u2581the \u2581beginning \u2581of \u2581the \u2581query \u2581using \u2581a \u2581simple r \u2581and \u2581faster \u2581// \u2581 text ual \u2581comparison \u2581to \u2581identify \u2581the \u2581statement \u2581 type ."], "bleu": 0.1028358029853445, "rouge_l": 0.41838134430727025}
{"id": 2330, "predictions": ["\u2581// \u2581 Text Editor \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 text \u2581executable ."], "references": ["\u2581// \u2581 Spawn \u2581the \u2581editor \u2581with \u2581a \u2581temporary \u2581YAML \u2581file \u2581for \u2581 editing \u2581configs"], "bleu": 0.13217947626377288, "rouge_l": 0.2857142857142857}
{"id": 3955, "predictions": ["\u2581// \u2581generate Proto \u2581converts \u2581a \u2581 Proto Config \u2581to \u2581a \u2581 Rule ."], "references": ["\u2581// \u2581generate Proto \u2581creates \u2581a \u2581new \u2581proto _ library \u2581rule \u2581for \u2581a \u2581package . \u2581The \u2581rule \u2581may \u2581// \u2581be \u2581 empty \u2581if \u2581there \u2581are \u2581no \u2581sources ."], "bleu": 0.07201902371426507, "rouge_l": 0.3292212798766383}
{"id": 2225, "predictions": ["\u2581// \u2581 Container Snapshot Create Empty \u2581 - \u2581 loads \u2581a \u2581snapshot \u2581of \u2581a \u2581snapshot ."], "references": ["\u2581// \u2581 Needed \u2581for \u2581live \u2581migration \u2581where \u2581an \u2581 empty \u2581snapshot \u2581needs \u2581to \u2581be \u2581created \u2581before \u2581// \u2581 r syncing \u2581into \u2581it ."], "bleu": 0.08078507330464856, "rouge_l": 0.248371335504886}
{"id": 3751, "predictions": ["\u2581// \u2581go Type Prefix \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581// \u2581of \u2581the \u2581 type \u2581of \u2581 this \u2581 type"], "references": ["\u2581// \u2581go Type Prefix \u2581returns \u2581the \u2581Go \u2581 type \u2581 name \u2581for \u2581the \u2581given \u2581thrift \u2581 type \u2581with \u2581the \u2581prefix ."], "bleu": 0.23337388721354071, "rouge_l": 0.5265604249667994}
{"id": 3031, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 v 1. Service ."], "references": ["\u2581// \u2581 Pac hd Service \u2581returns \u2581a \u2581 pac hd \u2581service ."], "bleu": 0.1691790501198734, "rouge_l": 0.4314002828854314}
{"id": 3964, "predictions": ["\u2581// \u2581 Handle C go Library \u2581 loads \u2581the \u2581 content \u2581of \u2581the \u2581 config \u2581file \u2581and \u2581returns \u2581the \u2581// \u2581 set \u2581of \u2581 templates ."], "references": ["\u2581// \u2581 squash C go Library \u2581removes \u2581 c go _ library \u2581rules \u2581with \u2581the \u2581default \u2581 name \u2581and \u2581// \u2581merges \u2581their \u2581attributes \u2581with \u2581go _ library \u2581with \u2581the \u2581default"], "bleu": 0.10534918543086572, "rouge_l": 0.35260115606936415}
{"id": 2696, "predictions": ["\u2581// \u2581 GetConfig Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581the \u2581 config"], "references": ["\u2581// \u2581 GetConfig Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581lets \u2581the \u2581caller \u2581see \u2581the \u2581configured \u2581// \u2581 auth \u2581 backends \u2581in \u2581 Pac hyd er m"], "bleu": 0.16301574636865868, "rouge_l": 0.47031611410948343}
{"id": 2221, "predictions": ["\u2581// \u2581 S all Create \u2581 - \u2581 get \u2581 info \u2581for \u2581a \u2581storage ."], "references": ["\u2581// \u2581 Functions \u2581dealing \u2581with \u2581storage \u2581volumes ."], "bleu": 0.12300686288463772, "rouge_l": 0.36802413273001505}
{"id": 2282, "predictions": ["\u2581// \u2581 set Network Routes \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581 ipv 4 \u2581 IP"], "references": ["\u2581// \u2581 set Network Routes \u2581applies \u2581any \u2581static \u2581 routes \u2581configured \u2581from \u2581the \u2581host \u2581to \u2581the \u2581 container \u2581 nic ."], "bleu": 0.2510540432434359, "rouge_l": 0.47491349480968864}
{"id": 2245, "predictions": ["\u2581// \u2581cluster Put Disable \u2581 disable s \u2581the \u2581cluster \u2581 config \u2581for \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Disable \u2581 clustering \u2581on \u2581a \u2581node ."], "bleu": 0.13217947626377288, "rouge_l": 0.271513353115727}
{"id": 2503, "predictions": ["\u2581// \u2581 Permission \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 Permission \u2581to \u2581be \u2581running"], "references": ["\u2581// \u2581 Permission \u2581returns \u2581the \u2581needed \u2581 RBAC \u2581permission \u2581to \u2581cancel \u2581the \u2581 o ep ration"], "bleu": 0.33377598175374745, "rouge_l": 0.5269978401727862}
{"id": 2305, "predictions": ["\u2581// \u2581 container Metadata Templates Post Put \u2581 loads \u2581the \u2581 contents \u2581of \u2581a \u2581 container"], "references": ["\u2581// \u2581Add \u2581a \u2581 container \u2581template \u2581file"], "bleu": 0.1513851459876605, "rouge_l": 0.3742331288343558}
{"id": 3230, "predictions": ["\u2581// \u2581Extract \u2581returns \u2581a \u2581 Mock SpanContext \u2581for \u2581the \u2581 Text Map Propagator"], "references": ["\u2581// \u2581Extract \u2581implements \u2581the \u2581 Extractor \u2581interface"], "bleu": 0.15807437922444714, "rouge_l": 0.42287694974003465}
{"id": 2433, "predictions": ["\u2581// \u2581 Update \u2581 - \u2581 Update \u2581the \u2581 Device \u2581 map \u2581to \u2581 map \u2581of \u2581devices ."], "references": ["\u2581// \u2581 Update \u2581returns \u2581the \u2581difference \u2581between \u2581two \u2581sets"], "bleu": 0.13400825781778894, "rouge_l": 0.3152454780361757}
{"id": 3211, "predictions": ["\u2581// \u2581 DeepEqual \u2581returns \u2581a \u2581list \u2581of \u2581 ticks \u2581for \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 canonicalName \u2581returns \u2581a \u2581list \u2581of \u2581identifiers \u2581where \u2581any \u2581struct \u2581field \u2581access \u2581// \u2581through \u2581an \u2581embedded \u2581field \u2581is \u2581expanded \u2581to \u2581include \u2581the \u2581names \u2581of \u2581the \u2581embedded \u2581// \u2581types \u2581themselves"], "bleu": 0.10015846754981615, "rouge_l": 0.2934707903780069}
{"id": 3083, "predictions": ["\u2581// \u2581new Driver \u2581creates \u2581a \u2581new \u2581driver ."], "references": ["\u2581// \u2581new Driver \u2581is \u2581used \u2581to \u2581create \u2581a \u2581new \u2581 Driver \u2581instance"], "bleu": 0.21528690865392716, "rouge_l": 0.4825949367088607}
{"id": 2545, "predictions": ["\u2581// \u2581profile Post \u2581returns \u2581a \u2581 set \u2581of \u2581 active \u2581 data \u2581for \u2581the \u2581given \u2581 Daemon \u2581// \u2581 set \u2581of \u2581services ."], "references": ["\u2581// \u2581The \u2581handler \u2581for \u2581the \u2581 post \u2581operation ."], "bleu": 0.08282282660969602, "rouge_l": 0.339265850945495}
{"id": 2140, "predictions": ["\u2581// \u2581query Current Version \u2581returns \u2581the \u2581current \u2581version \u2581of \u2581the \u2581current \u2581version \u2581of \u2581the \u2581// \u2581database ."], "references": ["\u2581// \u2581Return \u2581the \u2581highest \u2581update \u2581version \u2581currently \u2581applied . \u2581 Zero \u2581means \u2581that \u2581no \u2581// \u2581updates \u2581have \u2581been \u2581applied \u2581yet ."], "bleu": 0.07513939754287007, "rouge_l": 0.25825571549534293}
{"id": 3346, "predictions": ["\u2581// \u2581ensure Image Is Resolved \u2581checks \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581valid ."], "references": ["\u2581// \u2581ensure Image Is Resolved \u2581sets \u2581up \u2581 s . docker \u2581and \u2581 s . image Stream ImageName"], "bleu": 0.26145093445467577, "rouge_l": 0.42785571142284573}
{"id": 2916, "predictions": ["\u2581// \u2581Check Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 controller ."], "references": ["\u2581// \u2581Check Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581sends \u2581an \u2581\" Authorize \" \u2581RPC \u2581to \u2581 Pac hd , \u2581to \u2581// \u2581determine \u2581whether \u2581the \u2581specified \u2581user \u2581has \u2581access \u2581to"], "bleu": 0.18047302396249, "rouge_l": 0.3839160839160839}
{"id": 3362, "predictions": ["\u2581// \u2581 New Reference \u2581creates \u2581a \u2581new \u2581image \u2581reference"], "references": ["\u2581// \u2581 New Reference \u2581returns \u2581an \u2581 OS Tree \u2581reference \u2581for \u2581a \u2581specified \u2581repo \u2581and \u2581image ."], "bleu": 0.18162604815061817, "rouge_l": 0.4372759856630824}
{"id": 2411, "predictions": ["\u2581// \u2581 removeAll Load Profile \u2581 deactivate s \u2581the \u2581profile \u2581from \u2581the \u2581 container ."], "references": ["\u2581// \u2581Ensure \u2581that \u2581the \u2581 container ' s \u2581policy \u2581is \u2581loaded \u2581into \u2581the \u2581kernel \u2581so \u2581the \u2581// \u2581 container \u2581can \u2581boot ."], "bleu": 0.12635478946719764, "rouge_l": 0.41816623821765214}
{"id": 2244, "predictions": ["\u2581// \u2581cluster Get Member Config \u2581returns \u2581a \u2581list \u2581of \u2581cluster \u2581 IDs \u2581that \u2581are \u2581 set \u2581to \u2581// \u2581 this \u2581cluster ."], "references": ["\u2581// \u2581 Fetch \u2581information \u2581about \u2581all \u2581node - specific \u2581configuration \u2581 keys \u2581 set \u2581on \u2581the \u2581// \u2581storage \u2581 pools \u2581and \u2581networks \u2581of \u2581 this \u2581cluster ."], "bleu": 0.16552765149518478, "rouge_l": 0.3607095926412615}
{"id": 2920, "predictions": ["\u2581// \u2581 Modify Admin s Cmd \u2581returns \u2581a \u2581 Command \u2581for \u2581 Admin s Cmd ."], "references": ["\u2581// \u2581 Modify Admin s Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581 modifies \u2581the \u2581 set \u2581of \u2581current \u2581// \u2581cluster \u2581 admins"], "bleu": 0.36037521946398726, "rouge_l": 0.496742671009772}
{"id": 2100, "predictions": ["\u2581// \u2581internal SQL Post \u2581 add \u2581a \u2581 post \u2581query \u2581request \u2581to \u2581the \u2581 DB"], "references": ["\u2581// \u2581Execute \u2581queries ."], "bleu": 0.08225964699966554, "rouge_l": 0.11753371868978806}
{"id": 2367, "predictions": ["\u2581// \u2581 StoragePool Node Configs \u2581returns \u2581the \u2581 set \u2581of \u2581nodes \u2581that \u2581have \u2581a \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 StoragePool Node Configs \u2581returns \u2581the \u2581node - specific \u2581configuration \u2581of \u2581all \u2581// \u2581nodes \u2581grouped \u2581by \u2581node \u2581 name , \u2581for \u2581the \u2581given \u2581pool ID . \u2581// \u2581// \u2581If"], "bleu": 0.22382387599729855, "rouge_l": 0.47843137254901963}
{"id": 3202, "predictions": ["\u2581// \u2581 Format Type \u2581returns \u2581a \u2581 text \u2581 type \u2581for \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 Format Type \u2581prints \u2581the \u2581 type \u2581as \u2581if \u2581it \u2581were \u2581wrapping \u2581 s . \u2581// \u2581This \u2581may \u2581return \u2581 s \u2581as - is \u2581depending \u2581on \u2581the \u2581current \u2581"], "bleu": 0.1149274481183857, "rouge_l": 0.32972972972972975}
{"id": 3928, "predictions": ["\u2581// \u2581generate FromPath \u2581generates \u2581a \u2581 path \u2581from \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581// \u2581 Process \u2581 - go _ googleapis \u2581case \u2581//"], "bleu": 0.0859076483566362, "rouge_l": 0.22289890377588306}
{"id": 2296, "predictions": ["\u2581// \u2581project Change \u2581returns \u2581the \u2581 set \u2581of \u2581 active \u2581 sync \u2581 data \u2581that \u2581are \u2581// \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Common \u2581logic \u2581between \u2581 PUT \u2581and \u2581 PATCH ."], "bleu": 0.07645949399477267, "rouge_l": 0.33116178067318125}
{"id": 2396, "predictions": ["\u2581// \u2581 Devices Add \u2581adds \u2581a \u2581 set \u2581of \u2581 active \u2581 data \u2581to \u2581the \u2581database ."], "references": ["\u2581// \u2581 Devices Add \u2581adds \u2581a \u2581new \u2581device ."], "bleu": 0.3381307292971254, "rouge_l": 0.5700934579439252}
{"id": 3552, "predictions": ["\u2581// \u2581 push Msg \u2581adds \u2581a \u2581message \u2581to \u2581the \u2581 PubSub \u2581message ."], "references": ["\u2581// \u2581 push Msg \u2581pushes \u2581a \u2581message \u2581performing \u2581validation \u2581as \u2581necessary"], "bleu": 0.30576902884505114, "rouge_l": 0.507628294036061}
{"id": 2921, "predictions": ["\u2581// \u2581Get AuthToken Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581 auth ."], "references": ["\u2581// \u2581Get AuthToken Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581lets \u2581a \u2581user \u2581 get \u2581a \u2581 pac hyd er m \u2581// \u2581 token \u2581on \u2581be half \u2581of \u2581themselves \u2581or"], "bleu": 0.1236552163711529, "rouge_l": 0.3907473309608541}
{"id": 3215, "predictions": ["\u2581// \u2581 Can Format Diff Slice \u2581returns \u2581true \u2581if \u2581the \u2581 format \u2581is \u2581a \u2581valid \u2581 format ."], "references": ["\u2581// \u2581 Can Format Diff Slice \u2581reports \u2581whether \u2581we \u2581support \u2581custom \u2581formatting \u2581for \u2581nodes \u2581// \u2581that \u2581are \u2581slices \u2581of \u2581primitive \u2581kinds \u2581or \u2581strings ."], "bleu": 0.22837798059329134, "rouge_l": 0.32496194824961955}
{"id": 3403, "predictions": ["\u2581// \u2581new Image Destination \u2581creates \u2581a \u2581new \u2581image \u2581 Destination \u2581for \u2581the \u2581given \u2581 ref ."], "references": ["\u2581// \u2581new Image Destination \u2581returns \u2581a \u2581types . Image Destination \u2581for \u2581the \u2581specified \u2581image \u2581reference ."], "bleu": 0.31007120066002053, "rouge_l": 0.5625}
{"id": 3972, "predictions": ["\u2581// \u2581check Rules Go Version \u2581checks \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581valid \u2581version \u2581of \u2581the \u2581 container"], "references": ["\u2581// \u2581check Rules Go Version \u2581checks \u2581whether \u2581a \u2581compatible \u2581version \u2581of \u2581rules _ go \u2581is \u2581// \u2581being \u2581used \u2581in \u2581the \u2581 workspace . \u2581 A \u2581message \u2581will \u2581be \u2581logged \u2581if"], "bleu": 0.21244323557563627, "rouge_l": 0.4315112540192926}
{"id": 3980, "predictions": ["\u2581// \u2581 watch Dir \u2581 watches \u2581the \u2581 git \u2581directory \u2581and \u2581 notify \u2581all \u2581directories ."], "references": ["\u2581// \u2581 watch Dir \u2581 listen s \u2581for \u2581file \u2581system \u2581changes \u2581in \u2581root \u2581and \u2581its \u2581// \u2581subdirectories . \u2581The \u2581record \u2581function \u2581is \u2581called \u2581with \u2581directories \u2581whose \u2581// \u2581 contents \u2581have"], "bleu": 0.13345445966421488, "rouge_l": 0.2885135135135135}
{"id": 2077, "predictions": ["\u2581// \u2581 Project Used By Ref \u2581returns \u2581the \u2581list \u2581of \u2581 items \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Project Used By Ref \u2581returns \u2581entities \u2581used \u2581by \u2581projects ."], "bleu": 0.42649937722961534, "rouge_l": 0.5865384615384615}
{"id": 3341, "predictions": ["\u2581// \u2581Verify Docker Manifest Signature \u2581verifies \u2581the \u2581signature \u2581of \u2581a \u2581Docker \u2581manifest \u2581// \u2581and \u2581returns \u2581a \u2581signature ."], "references": ["\u2581// \u2581Verify Docker Manifest Signature \u2581checks \u2581that \u2581 unverified Signature \u2581uses \u2581expected Key Identity \u2581to \u2581sign \u2581 unverified Manifest \u2581as \u2581expected Docker Reference , \u2581// \u2581using \u2581 mech ."], "bleu": 0.14546528877162115, "rouge_l": 0.285809906291834}
{"id": 3400, "predictions": ["\u2581// \u2581ensure \u2581the \u2581 data \u2581is \u2581valid \u2581for \u2581the \u2581 contents \u2581of \u2581the \u2581file"], "references": ["\u2581// \u2581ensure CachedData Is Present \u2581 loads \u2581 data \u2581necessary \u2581for \u2581any \u2581of \u2581the \u2581public \u2581 accessors ."], "bleu": 0.1368218676135829, "rouge_l": 0.42785571142284573}
{"id": 2168, "predictions": ["\u2581// \u2581 Load Config \u2581 loads \u2581the \u2581 config \u2581from \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Load Config \u2581reads \u2581the \u2581configuration \u2581from \u2581the \u2581 config \u2581 path ; \u2581if \u2581the \u2581 path \u2581does \u2581// \u2581not \u2581exist , \u2581it \u2581returns \u2581a \u2581default \u2581configuration ."], "bleu": 0.14882120906602403, "rouge_l": 0.47286821705426363}
{"id": 2866, "predictions": ["\u2581// \u2581advance Commit \u2581is \u2581called \u2581when \u2581the \u2581next \u2581 call \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581advance Commit \u2581either \u2581starts \u2581or \u2581finishes \u2581a \u2581commit , \u2581depending \u2581on \u2581the \u2581state \u2581of \u2581// \u2581the \u2581cluster ."], "bleu": 0.12738974838459832, "rouge_l": 0.2949709864603482}
{"id": 2328, "predictions": ["\u2581// \u2581 Dir Copy \u2581copies \u2581the \u2581source \u2581directory \u2581to \u2581the \u2581destination \u2581directory . \u2581// \u2581If \u2581the \u2581destination \u2581directory \u2581is \u2581not \u2581already \u2581 exists , \u2581it \u2581will \u2581be \u2581overwritten ."], "references": ["\u2581// \u2581 Dir Copy \u2581copies \u2581a \u2581directory \u2581recursively , \u2581over writing \u2581the \u2581target \u2581if \u2581it \u2581 exists ."], "bleu": 0.19422659659588543, "rouge_l": 0.4442825928623453}
{"id": 3613, "predictions": ["\u2581// \u2581serve \u2581starts \u2581a \u2581new \u2581 Channel \u2581and \u2581returns \u2581a \u2581 chan \u2581that \u2581will \u2581be \u2581called \u2581// \u2581when \u2581the \u2581 Channel \u2581is \u2581already \u2581 established ."], "references": ["\u2581// \u2581serve \u2581runs \u2581the \u2581listener \u2581to \u2581accept \u2581and \u2581manage \u2581new \u2581incoming \u2581connections , \u2581blocking \u2581// \u2581until \u2581the \u2581channel \u2581is \u2581closed ."], "bleu": 0.08085298080223226, "rouge_l": 0.3036984352773826}
{"id": 3874, "predictions": ["\u2581// \u2581 Map Slice \u2581returns \u2581a \u2581list \u2581of \u2581 keys \u2581for \u2581a \u2581platform ."], "references": ["\u2581// \u2581 Map Slice \u2581applies \u2581a \u2581function \u2581that \u2581processes \u2581slices \u2581of \u2581strings \u2581to \u2581the \u2581strings \u2581// \u2581in \u2581\" ps \" \u2581and \u2581returns \u2581a \u2581new \u2581 Platform Strings \u2581with \u2581the \u2581results"], "bleu": 0.09865243055173982, "rouge_l": 0.2986013986013986}
{"id": 2534, "predictions": ["\u2581// \u2581heartbeat Node \u2581is \u2581used \u2581to \u2581 connect \u2581to \u2581the \u2581given \u2581certificate ."], "references": ["\u2581// \u2581Perform \u2581a \u2581single \u2581heartbeat \u2581request \u2581against \u2581the \u2581node \u2581with \u2581the \u2581given \u2581address ."], "bleu": 0.1384288827900525, "rouge_l": 0.36791314837153194}
{"id": 3958, "predictions": ["\u2581// \u2581 Merge Rules \u2581 - \u2581returns \u2581a \u2581 slice \u2581of \u2581rule \u2581that \u2581matches \u2581the \u2581given \u2581rule \u2581// \u2581and \u2581 path ."], "references": ["\u2581// \u2581 Merge Rules \u2581merges \u2581a \u2581list \u2581of \u2581generated \u2581repo \u2581rules \u2581with \u2581the \u2581already \u2581defined \u2581repo \u2581rules , \u2581// \u2581and \u2581then \u2581updates \u2581each \u2581rule ' s \u2581underlying \u2581file . \u2581If"], "bleu": 0.14102639593455824, "rouge_l": 0.37423312883435583}
{"id": 2745, "predictions": ["\u2581// \u2581Set Docs Usage \u2581sets \u2581the \u2581usage \u2581of \u2581the \u2581 Docs \u2581command"], "references": ["\u2581// \u2581Set Docs Usage \u2581sets \u2581the \u2581usage \u2581string \u2581for \u2581a \u2581 docs - style \u2581command . \u2581 Docs \u2581commands \u2581// \u2581have \u2581no \u2581functionality \u2581except \u2581to \u2581output \u2581some \u2581 docs \u2581and"], "bleu": 0.13974295995266459, "rouge_l": 0.3978260869565217}
{"id": 3432, "predictions": ["\u2581// \u2581 Normalized MIMEType \u2581returns \u2581a \u2581string \u2581representing \u2581the \u2581input \u2581string \u2581// \u2581of \u2581the \u2581input \u2581string ."], "references": ["\u2581// \u2581 Normalized MIMEType \u2581returns \u2581the \u2581effective \u2581 MIME \u2581 type \u2581of \u2581a \u2581manifest \u2581 MIME \u2581 type \u2581returned \u2581by \u2581a \u2581server , \u2581// \u2581 central izing \u2581various \u2581workaround s"], "bleu": 0.139941685558328, "rouge_l": 0.2837209302325582}
{"id": 3197, "predictions": ["\u2581// \u2581 connect \u2581will \u2581 connect \u2581to \u2581the \u2581 path \u2581and \u2581 write \u2581the \u2581 data \u2581to \u2581the \u2581 path ."], "references": ["\u2581// \u2581 connect \u2581appends \u2581any \u2581necessary \u2581 Identity , \u2581 Modified , \u2581 Unique X , \u2581or \u2581 Unique Y \u2581types \u2581// \u2581to \u2581the \u2581 edit - script \u2581to \u2581"], "bleu": 0.11656965917907465, "rouge_l": 0.38006230529595014}
{"id": 3771, "predictions": ["\u2581// \u2581new Exchange \u2581creates \u2581a \u2581new \u2581 Exchange Exchange ."], "references": ["\u2581// \u2581new Exchange \u2581creates \u2581and \u2581adds \u2581a \u2581new \u2581message \u2581exchange \u2581to \u2581 this \u2581 set"], "bleu": 0.2530604488919924, "rouge_l": 0.540506329113924}
{"id": 2335, "predictions": ["\u2581// \u2581 Dump \u2581 dumps \u2581the \u2581 table \u2581 table \u2581and \u2581 dump \u2581all \u2581tables \u2581in \u2581 table ."], "references": ["\u2581// \u2581 Dump \u2581returns \u2581a \u2581 SQL \u2581 text \u2581 dump \u2581of \u2581all \u2581rows \u2581across \u2581all \u2581tables , \u2581similar \u2581to \u2581// \u2581 sqlite 3 ' s \u2581 dump \u2581feature"], "bleu": 0.10588708987500944, "rouge_l": 0.4015799868334431}
{"id": 2923, "predictions": ["\u2581// \u2581 Cmd s \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 this \u2581 Command"], "references": ["\u2581// \u2581 Cmd s \u2581returns \u2581a \u2581list \u2581of \u2581 cobra \u2581commands \u2581for \u2581 authenticating \u2581and \u2581 author izing \u2581// \u2581users \u2581in \u2581an \u2581 auth - enabled \u2581 Pac hyd er"], "bleu": 0.15691078067904596, "rouge_l": 0.4692307692307692}
{"id": 2355, "predictions": ["\u2581// \u2581 P stats Update Address \u2581updates \u2581the \u2581 pprof \u2581address \u2581and \u2581 pprof \u2581address ."], "references": ["\u2581// \u2581 P prof Update Address \u2581updates \u2581the \u2581address \u2581for \u2581the \u2581 pprof \u2581endpoint , \u2581 shutting \u2581it \u2581down \u2581and \u2581 restarting \u2581it ."], "bleu": 0.23374823789310228, "rouge_l": 0.5791139240506329}
{"id": 4092, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581platform ."], "references": ["\u2581// \u2581 Update \u2581implements \u2581 Update \u2581method \u2581of \u2581 Platform Service \u2581interface"], "bleu": 0.1692447266569478, "rouge_l": 0.30148270181219106}
{"id": 3355, "predictions": ["\u2581// \u2581Get Registries \u2581returns \u2581the \u2581 mutator \u2581of \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581Get Registries \u2581 loads \u2581and \u2581returns \u2581the \u2581 registries \u2581specified \u2581in \u2581the \u2581 config . \u2581// \u2581Note \u2581the \u2581parsed \u2581 content \u2581of \u2581registry \u2581 config \u2581files \u2581is \u2581cached ."], "bleu": 0.09300363783232496, "rouge_l": 0.43416370106761565}
{"id": 2949, "predictions": ["\u2581// \u2581 Export \u2581 exports \u2581image \u2581to \u2581image"], "references": ["\u2581// \u2581 Export \u2581a \u2581 tarball \u2581of \u2581the \u2581images \u2581needed \u2581by \u2581a \u2581deployment ."], "bleu": 0.14907815372447217, "rouge_l": 0.346590909090909}
{"id": 3091, "predictions": ["\u2581// \u2581 upsert Put File Records \u2581updates \u2581the \u2581 contents \u2581of \u2581a \u2581file \u2581to \u2581the \u2581 path"], "references": ["\u2581// \u2581 Put \u2581the \u2581tree \u2581into \u2581the \u2581blob \u2581store \u2581// \u2581 Only \u2581 write \u2581the \u2581records \u2581to \u2581etcd \u2581if \u2581the \u2581commit \u2581does \u2581exist \u2581and \u2581is \u2581open . \u2581// \u2581 To"], "bleu": 0.05824081104955156, "rouge_l": 0.3242524916943521}
{"id": 2431, "predictions": ["\u2581// \u2581 container Post Create Container MountPoint \u2581 posts \u2581the \u2581 container \u2581 data \u2581for \u2581a \u2581 container ."], "references": ["\u2581// \u2581 Used \u2581after \u2581to \u2581create \u2581the \u2581appropriate \u2581 mounts \u2581point \u2581after \u2581a \u2581 container \u2581has \u2581been \u2581// \u2581moved ."], "bleu": 0.1496577680574989, "rouge_l": 0.4083682008368201}
{"id": 2206, "predictions": ["\u2581// \u2581copy Container \u2581copies \u2581a \u2581 container \u2581to \u2581a \u2581 container ."], "references": ["\u2581// \u2581 Copy \u2581a \u2581 container \u2581on \u2581a \u2581storage \u2581pool \u2581that \u2581does \u2581use \u2581a \u2581 thin pool ."], "bleu": 0.14988854080083205, "rouge_l": 0.45042194092827004}
{"id": 3226, "predictions": ["\u2581// \u2581 Marshal \u2581implements \u2581the \u2581 Encoder \u2581interface ."], "references": ["\u2581// \u2581 Marshal \u2581passes \u2581a \u2581 Field \u2581instance \u2581through \u2581to \u2581the \u2581appropriate \u2581// \u2581field - type - specific \u2581method \u2581of \u2581an \u2581 Encoder ."], "bleu": 0.0634034986001952, "rouge_l": 0.3921028466483012}
{"id": 2886, "predictions": ["\u2581// \u2581Get Range FromIndex \u2581returns \u2581the \u2581 Range \u2581for \u2581the \u2581given \u2581 r ."], "references": ["\u2581// \u2581Get Range FromIndex \u2581returns \u2581a \u2581subtree \u2581 byte \u2581range \u2581in \u2581a \u2581serialized \u2581hash tree \u2581based \u2581on \u2581a \u2581passed \u2581in \u2581prefix ."], "bleu": 0.1964744404960038, "rouge_l": 0.3739054290718039}
{"id": 3398, "predictions": ["\u2581// \u2581 New Source FromStream \u2581returns \u2581a \u2581new \u2581 Source FromStream \u2581from \u2581a \u2581 Reader ."], "references": ["\u2581// \u2581 New Source FromStream \u2581returns \u2581a \u2581tar file . Source \u2581for \u2581the \u2581specified \u2581inputStream , \u2581// \u2581which \u2581can \u2581be \u2581either \u2581compressed \u2581or \u2581 uncompressed . \u2581The \u2581caller \u2581can \u2581"], "bleu": 0.19104928374767646, "rouge_l": 0.41216216216216217}
{"id": 2115, "predictions": ["\u2581// \u2581Get Private Image File \u2581returns \u2581a \u2581 URL \u2581for \u2581the \u2581given \u2581image"], "references": ["\u2581// \u2581Get Private Image File \u2581is \u2581similar \u2581to \u2581Get Image File \u2581but \u2581allows \u2581passing \u2581a \u2581 secret \u2581download \u2581 token"], "bleu": 0.22966425998694198, "rouge_l": 0.40861244019138754}
{"id": 2608, "predictions": ["\u2581// \u2581 init Dirs \u2581initializes \u2581the \u2581directory \u2581directory"], "references": ["\u2581// \u2581Make \u2581sure \u2581all \u2581our \u2581directories \u2581are \u2581available ."], "bleu": 0.1415224185897875, "rouge_l": 0.116412213740458}
{"id": 3318, "predictions": ["\u2581// \u2581compute ID \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581manifest \u2581for \u2581the \u2581given \u2581manifest ."], "references": ["\u2581// \u2581compute ID \u2581computes \u2581a \u2581recommended \u2581image \u2581 ID \u2581based \u2581on \u2581information \u2581we \u2581have \u2581so \u2581far . \u2581If \u2581// \u2581the \u2581manifest \u2581is \u2581not \u2581of \u2581a \u2581 type \u2581that \u2581we \u2581"], "bleu": 0.07412555955791748, "rouge_l": 0.2515463917525773}
{"id": 3060, "predictions": ["\u2581// \u2581 getUser Machine Addr And Opts \u2581returns \u2581the \u2581 config \u2581 name \u2581of \u2581the \u2581 config \u2581// \u2581for \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 getUser Machine Addr And Opts \u2581is \u2581a \u2581 helper \u2581for \u2581 New On User Machine \u2581that \u2581uses \u2581// \u2581environment \u2581variables , \u2581 config \u2581files , \u2581etc \u2581to \u2581figure"], "bleu": 0.25260140223174676, "rouge_l": 0.43571428571428567}
{"id": 3342, "predictions": ["\u2581// \u2581new Open shift Client \u2581creates \u2581a \u2581new \u2581 Open shift \u2581client ."], "references": ["\u2581// \u2581new Open shift Client \u2581creates \u2581a \u2581new \u2581 openshift Client \u2581for \u2581the \u2581specified \u2581reference ."], "bleu": 0.5502659908318907, "rouge_l": 0.6770255271920089}
{"id": 3301, "predictions": ["\u2581// \u2581new DockerClient \u2581returns \u2581a \u2581new \u2581Docker \u2581client"], "references": ["\u2581// \u2581 New DockerClient \u2581initializes \u2581a \u2581new \u2581API \u2581client \u2581based \u2581on \u2581the \u2581passed \u2581System Context ."], "bleu": 0.09233266757408672, "rouge_l": 0.3930412371134021}
{"id": 2912, "predictions": ["\u2581// \u2581 Deactivate Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 Deactivate \u2581 deactivate"], "references": ["\u2581// \u2581 Deactivate Cmd \u2581returns \u2581a \u2581 cobra . Command \u2581to \u2581delete \u2581all \u2581 ACLs , \u2581tokens , \u2581and \u2581 admins , \u2581// \u2581de activating \u2581 Pac hyd er m"], "bleu": 0.18482489435045105, "rouge_l": 0.42657342657342656}
{"id": 3174, "predictions": ["\u2581// \u2581Validate Git Clone URL \u2581checks \u2581if \u2581the \u2581 git \u2581 URL \u2581is \u2581valid ."], "references": ["\u2581// \u2581Validate Git Clone URL \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581provided \u2581 URL \u2581is \u2581invalid"], "bleu": 0.4169392927528885, "rouge_l": 0.6666666666666666}
{"id": 3098, "predictions": ["\u2581// \u2581 GetState Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 controller \u2581 token"], "references": ["\u2581// \u2581 GetState Cmd \u2581returns \u2581a \u2581 cobra . Command \u2581to \u2581 activate \u2581the \u2581 enterprise \u2581features \u2581of \u2581// \u2581 Pac hyd er m \u2581within \u2581a \u2581 Pac hyd er"], "bleu": 0.21486981479867082, "rouge_l": 0.45337837837837835}
{"id": 3707, "predictions": ["\u2581// \u2581 healthCheck \u2581returns \u2581a \u2581 healthcheck \u2581response ."], "references": ["\u2581// \u2581 healthCheck \u2581will \u2581do \u2581 periodic \u2581 ping s \u2581on \u2581the \u2581connection \u2581to \u2581check \u2581the \u2581state \u2581of \u2581the \u2581connection . \u2581// \u2581We \u2581accept \u2581conn ID \u2581on \u2581the \u2581stack \u2581so"], "bleu": 0.028191241370329752, "rouge_l": 0.23371647509578544}
{"id": 2132, "predictions": ["\u2581// \u2581 New Controller \u2581returns \u2581a \u2581new \u2581 Controller \u2581instance"], "references": ["\u2581// \u2581 New Controller \u2581returns \u2581a \u2581new \u2581 Controller \u2581using \u2581the \u2581specific \u2581 M AAS \u2581server \u2581and \u2581machine"], "bleu": 0.4013199534424525, "rouge_l": 0.611358574610245}
{"id": 3054, "predictions": ["\u2581// \u2581 New Block APIServer \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Block APIServer \u2581object"], "references": ["\u2581// \u2581 New Block APIServer \u2581creates \u2581a \u2581 Block APIServer \u2581using \u2581the \u2581credentials \u2581it \u2581finds \u2581in \u2581// \u2581the \u2581environment"], "bleu": 0.30886093141657445, "rouge_l": 0.518413597733711}
{"id": 2616, "predictions": ["\u2581// \u2581 Storage Volume Node Addresses \u2581returns \u2581the \u2581list \u2581of \u2581 active \u2581nodes \u2581that \u2581are \u2581// \u2581used \u2581to \u2581 connect \u2581to \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Storage Volume Node Addresses \u2581returns \u2581the \u2581addresses \u2581of \u2581all \u2581nodes \u2581on \u2581which \u2581the \u2581// \u2581volume \u2581with \u2581the \u2581given \u2581 name \u2581if \u2581defined . \u2581// \u2581// \u2581The \u2581 empty"], "bleu": 0.3198791353179763, "rouge_l": 0.5289017341040462}
{"id": 3164, "predictions": ["\u2581// \u2581 Deactivate \u2581 deactivate s \u2581the \u2581 status \u2581of \u2581a \u2581 graceful ly ."], "references": ["\u2581// \u2581 Deactivate \u2581deletes \u2581the \u2581current \u2581cluster ' s \u2581 enterprise \u2581 token , \u2581and \u2581puts \u2581the \u2581// \u2581cluster \u2581in \u2581the \u2581\" NONE \" \u2581 enterprise \u2581state . \u2581It \u2581also"], "bleu": 0.07082273159772777, "rouge_l": 0.2934707903780069}
{"id": 3878, "predictions": ["\u2581// \u2581make Platform Strings Expr \u2581returns \u2581a \u2581 Expr . Expr \u2581from \u2581a \u2581list \u2581of \u2581strings ."], "references": ["\u2581// \u2581make Platform Strings Expr \u2581constructs \u2581a \u2581single \u2581expression \u2581from \u2581the \u2581// \u2581sub - expressions \u2581in \u2581ps ."], "bleu": 0.27610135543351616, "rouge_l": 0.4547996272134204}
{"id": 3045, "predictions": ["\u2581// \u2581 Write Custom Assets \u2581writes \u2581the \u2581 content \u2581of \u2581the \u2581 assets \u2581to \u2581the \u2581 content \u2581of \u2581the \u2581 v 2 \u2581// \u2581 data ."], "references": ["\u2581// \u2581 Write Custom Assets \u2581writes \u2581 assets \u2581to \u2581a \u2581custom \u2581combination \u2581of \u2581object - store \u2581and \u2581persistent \u2581disk ."], "bleu": 0.27195592687669795, "rouge_l": 0.4897810218978102}
{"id": 3766, "predictions": ["\u2581// \u2581 recv Peer Frame \u2581returns \u2581the \u2581 data \u2581of \u2581the \u2581peer \u2581 Exchange ."], "references": ["\u2581// \u2581 recv Peer Frame \u2581waits \u2581for \u2581a \u2581new \u2581frame \u2581from \u2581the \u2581peer , \u2581or \u2581until \u2581the \u2581context \u2581// \u2581 expires \u2581or \u2581is \u2581cancelled"], "bleu": 0.19664629918057108, "rouge_l": 0.393866020984665}
{"id": 2907, "predictions": ["\u2581// \u2581Get Pipeline Info \u2581handles \u2581the \u2581 GET \u2581request \u2581to \u2581the \u2581 get \u2581API \u2581API ."], "references": ["\u2581// \u2581 getPipeline Info \u2581gets \u2581the \u2581 Pipeline Info \u2581proto \u2581describing \u2581the \u2581pipeline \u2581that \u2581 this \u2581// \u2581worker \u2581is \u2581part \u2581of . \u2581// \u2581 getPipeline Info \u2581has \u2581the \u2581side \u2581effect"], "bleu": 0.061466179469996315, "rouge_l": 0.2885135135135135}
{"id": 2871, "predictions": ["\u2581// \u2581 Diff \u2581returns \u2581a \u2581 slice \u2581of \u2581 data \u2581that \u2581can \u2581be \u2581written \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Diff \u2581returns \u2581the \u2581diff \u2581of \u2581two \u2581hash trees \u2581at \u2581particular \u2581paths ."], "bleu": 0.19120817575042512, "rouge_l": 0.36454183266932266}
{"id": 2306, "predictions": ["\u2581// \u2581 container Metadata Templates Delete \u2581deletes \u2581the \u2581 container \u2581 templates \u2581from \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Delete \u2581a \u2581 container \u2581template"], "bleu": 0.12512236921161915, "rouge_l": 0.4505169867060562}
{"id": 3692, "predictions": ["\u2581// \u2581handleError \u2581is \u2581called \u2581when \u2581a \u2581 write \u2581frame \u2581is \u2581received ."], "references": ["\u2581// \u2581handleError \u2581handles \u2581an \u2581error \u2581 com ing \u2581back \u2581from \u2581the \u2581peer . \u2581If \u2581the \u2581error \u2581is \u2581a \u2581// \u2581protocol \u2581level \u2581error , \u2581the \u2581entire \u2581connection \u2581will \u2581be \u2581closed ."], "bleu": 0.03771038490247382, "rouge_l": 0.22101449275362317}
{"id": 3935, "predictions": ["\u2581// \u2581 New Remote Cache \u2581creates \u2581a \u2581new \u2581 Remote Cache"], "references": ["\u2581// \u2581 New Remote Cache \u2581creates \u2581a \u2581new \u2581 Remote Cache \u2581with \u2581a \u2581 set \u2581of \u2581known \u2581 repositories . \u2581// \u2581The \u2581 Root \u2581and \u2581 Remote \u2581methods \u2581will \u2581return"], "bleu": 0.1777685728281378, "rouge_l": 0.49520295202952025}
{"id": 4094, "predictions": ["\u2581// \u2581 Rollback \u2581 roll s \u2581back \u2581the \u2581list \u2581of \u2581 apps ."], "references": ["\u2581// \u2581 Rollback \u2581implements \u2581 Rollback \u2581method \u2581of \u2581 Platform Service \u2581interface"], "bleu": 0.21972813874997157, "rouge_l": 0.4834874504623514}
{"id": 2765, "predictions": ["\u2581// \u2581 watch GC \u2581is \u2581used \u2581to \u2581 watch \u2581a \u2581 watch ."], "references": ["\u2581// \u2581 watch GC \u2581 watches \u2581for \u2581 GC \u2581runs \u2581and \u2581invalidate \u2581all \u2581cache \u2581when \u2581 GC \u2581happens ."], "bleu": 0.18846051360248692, "rouge_l": 0.4231912784935579}
{"id": 2118, "predictions": ["\u2581// \u2581 Copy Image \u2581copies \u2581the \u2581image \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Copy Image \u2581copies \u2581an \u2581image \u2581from \u2581a \u2581remote \u2581server . \u2581 Additional \u2581options \u2581can \u2581be \u2581passed \u2581using \u2581 Image Copy Args"], "bleu": 0.16840921209171716, "rouge_l": 0.3785460992907802}
{"id": 2554, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581progress \u2581 status \u2581of \u2581the \u2581progress \u2581 call ."], "references": ["\u2581// \u2581 Update \u2581changes \u2581the \u2581 status \u2581message \u2581to \u2581the \u2581provided \u2581string"], "bleu": 0.2102369368326755, "rouge_l": 0.5460358056265985}
{"id": 2449, "predictions": ["\u2581// \u2581 Containers List By Node Address \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581 active \u2581 active \u2581// \u2581nodes \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Containers List By Node Address \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581containers \u2581grouped \u2581by \u2581// \u2581cluster \u2581node \u2581address . \u2581// \u2581// \u2581The \u2581node \u2581address \u2581of \u2581containers \u2581running \u2581on \u2581the"], "bleu": 0.28945502995971867, "rouge_l": 0.479154078549849}
{"id": 2284, "predictions": ["\u2581// \u2581 Reader Interfaces \u2581returns \u2581the \u2581 SHA 4 \u2581 data \u2581of \u2581the \u2581 container"], "references": ["\u2581// \u2581 Internal \u2581 M AAS \u2581handling"], "bleu": 0.11633270842295028, "rouge_l": 0.291866028708134}
{"id": 2326, "predictions": ["\u2581// \u2581 Host Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581host \u2581 path"], "references": ["\u2581// \u2581 Host Path \u2581returns \u2581the \u2581host \u2581 path \u2581for \u2581the \u2581provided \u2581 path \u2581// \u2581 On \u2581a \u2581normal \u2581system , \u2581 this \u2581does \u2581nothing \u2581// \u2581When \u2581inside \u2581of \u2581a"], "bleu": 0.17840949589856053, "rouge_l": 0.47758007117437723}
{"id": 2620, "predictions": ["\u2581// \u2581 Storage Volume Is Available \u2581returns \u2581true \u2581if \u2581the \u2581cluster \u2581is \u2581attached \u2581to \u2581the \u2581// \u2581cluster ."], "references": ["\u2581// \u2581 Storage Volume Is Available \u2581checks \u2581that \u2581if \u2581a \u2581custom \u2581volume \u2581available \u2581for \u2581being \u2581attached . \u2581// \u2581// \u2581Always \u2581return \u2581true \u2581for \u2581non - Ceph \u2581volumes . \u2581// \u2581//"], "bleu": 0.18109740027907523, "rouge_l": 0.3986928104575163}
{"id": 3128, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581given \u2581function , \u2581returns \u2581the \u2581connection \u2581to \u2581the \u2581pool ."], "references": ["\u2581// \u2581Do \u2581allows \u2581you \u2581to \u2581do \u2581something \u2581with \u2581a \u2581 grpc . ClientConn . \u2581// \u2581 Errors \u2581returned \u2581from \u2581 f \u2581will \u2581be \u2581returned \u2581by \u2581Do ."], "bleu": 0.05222645875470238, "rouge_l": 0.18456883509833585}
{"id": 3686, "predictions": ["\u2581// \u2581 Begin Argument \u2581 marks \u2581the \u2581given \u2581 iterator \u2581to \u2581the \u2581end \u2581of \u2581the \u2581fragment ."], "references": ["\u2581// \u2581 Begin Argument \u2581tells \u2581the \u2581writer \u2581that \u2581the \u2581caller \u2581is \u2581starting \u2581a \u2581new \u2581argument . \u2581// \u2581Must \u2581not \u2581be \u2581called \u2581while \u2581an \u2581existing \u2581argument \u2581is \u2581in \u2581place"], "bleu": 0.11839355562622904, "rouge_l": 0.29797627355198886}
{"id": 2370, "predictions": ["\u2581// \u2581 StoragePool Get \u2581returns \u2581a \u2581 thin - pool \u2581for \u2581the \u2581given \u2581pool ."], "references": ["\u2581// \u2581 StoragePool Get \u2581returns \u2581a \u2581single \u2581storage \u2581pool ."], "bleu": 0.41211837513230265, "rouge_l": 0.6639455782312924}
{"id": 3765, "predictions": ["\u2581// \u2581forward Peer Frame \u2581returns \u2581the \u2581 data \u2581of \u2581the \u2581given \u2581frame ."], "references": ["\u2581// \u2581forward Peer Frame \u2581forwards \u2581a \u2581frame \u2581from \u2581a \u2581peer \u2581to \u2581the \u2581message \u2581exchange , \u2581where \u2581// \u2581it \u2581can \u2581be \u2581pull ed \u2581by \u2581whatever \u2581application \u2581thread \u2581is \u2581handling \u2581the \u2581exchange"], "bleu": 0.08086124506504899, "rouge_l": 0.26049822064056943}
{"id": 3039, "predictions": ["\u2581// \u2581 Dash Deployment \u2581returns \u2581a \u2581 Deployment \u2581object \u2581from \u2581the \u2581given \u2581 Pod Opts"], "references": ["\u2581// \u2581 Dash Deployment \u2581creates \u2581a \u2581 Deployment \u2581for \u2581the \u2581 pac hyd er m \u2581 dashboard ."], "bleu": 0.2650823155191419, "rouge_l": 0.5366568914956013}
{"id": 4032, "predictions": ["\u2581// \u2581check Router \u2581checks \u2581if \u2581the \u2581 router \u2581is \u2581valid"], "references": ["\u2581// \u2581Check \u2581 Router \u2581// \u2581It \u2581verifies \u2581your \u2581 router \u2581configuration \u2581and \u2581validates \u2581related \u2581 conf s ."], "bleu": 0.08469994319770224, "rouge_l": 0.2717149220489978}
{"id": 2064, "predictions": ["\u2581// \u2581 CPU Resource \u2581returns \u2581a \u2581 CPU \u2581 CPU \u2581 data \u2581from \u2581the \u2581 Resources ."], "references": ["\u2581// \u2581 CPU Resource \u2581returns \u2581the \u2581system \u2581 CPU \u2581information"], "bleu": 0.3064859599765908, "rouge_l": 0.5439490445859871}
{"id": 3745, "predictions": ["\u2581// \u2581done Sending \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581response \u2581 body . \u2581// \u2581It \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581will \u2581 call \u2581the \u2581 Inbound Call"], "references": ["\u2581// \u2581done Sending \u2581shut s \u2581down \u2581the \u2581message \u2581exchange \u2581for \u2581 this \u2581 call . \u2581// \u2581 For \u2581incoming \u2581calls , \u2581the \u2581last \u2581message \u2581is \u2581sending \u2581the \u2581 call \u2581response"], "bleu": 0.12425342874478343, "rouge_l": 0.3333333333333333}
{"id": 3877, "predictions": ["\u2581// \u2581 Flatten Expr \u2581returns \u2581a \u2581 multiline \u2581representation \u2581of \u2581the \u2581 Expr ."], "references": ["\u2581// \u2581 Flatten Expr \u2581takes \u2581an \u2581expression \u2581that \u2581may \u2581have \u2581been \u2581generated \u2581from \u2581// \u2581 Platform Strings \u2581and \u2581returns \u2581its \u2581values \u2581in \u2581a \u2581flat , \u2581sorted , \u2581de - duplicated"], "bleu": 0.08823741634370692, "rouge_l": 0.2559440559440559}
{"id": 3144, "predictions": ["\u2581// \u2581 Job Input \u2581returns \u2581the \u2581 contents \u2581of \u2581a \u2581 Pipeline Info \u2581object"], "references": ["\u2581// \u2581 Job Input \u2581fills \u2581in \u2581the \u2581commits \u2581for \u2581a \u2581 JobInfo"], "bleu": 0.29256127307315066, "rouge_l": 0.5460358056265985}
{"id": 2341, "predictions": ["\u2581// \u2581 Project Update \u2581updates \u2581the \u2581 Project ' s \u2581 description \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Project Update \u2581updates \u2581the \u2581project \u2581matching \u2581the \u2581given \u2581 key \u2581parameters ."], "bleu": 0.3807134866446316, "rouge_l": 0.5398230088495575}
{"id": 2076, "predictions": ["\u2581// \u2581 Project Create \u2581returns \u2581the \u2581project \u2581with \u2581the \u2581given \u2581project ."], "references": ["\u2581// \u2581 Project Create \u2581adds \u2581a \u2581new \u2581project \u2581to \u2581the \u2581database ."], "bleu": 0.32523403430389786, "rouge_l": 0.5833333333333334}
{"id": 3388, "predictions": ["\u2581// \u2581 Policy Configuration Namespaces \u2581returns \u2581a \u2581list \u2581of \u2581 set \u2581of \u2581namespaces \u2581that \u2581are \u2581// \u2581used \u2581to \u2581be \u2581used \u2581for \u2581 this \u2581 Reference ."], "references": ["\u2581// \u2581Also \u2581accept \u2581policy \u2581that ' s \u2581 tied \u2581to \u2581the \u2581combination \u2581of \u2581the \u2581graph \u2581root \u2581and \u2581// \u2581driver \u2581 name , \u2581to \u2581 apply \u2581to \u2581all \u2581images \u2581stored \u2581in"], "bleu": 0.05829401938574782, "rouge_l": 0.2115606936416185}
{"id": 2589, "predictions": ["\u2581// \u2581 Json Format Ex \u2581returns \u2581a \u2581 Format Func \u2581that \u2581prints \u2581the \u2581JSON \u2581 format \u2581// \u2581of \u2581the \u2581JSON \u2581string ."], "references": ["\u2581// \u2581 Json Format Ex \u2581formats \u2581log \u2581records \u2581as \u2581JSON \u2581objects . \u2581If \u2581pretty \u2581is \u2581true , \u2581// \u2581records \u2581will \u2581be \u2581pretty - printed . \u2581If \u2581line Separated \u2581is \u2581true"], "bleu": 0.15607136258127452, "rouge_l": 0.2993865030674847}
{"id": 2915, "predictions": ["\u2581// \u2581 Who ami Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581the \u2581 api ."], "references": ["\u2581// \u2581 Who ami Cmd \u2581returns \u2581a \u2581 cobra . Command \u2581that \u2581deletes \u2581your \u2581local \u2581 Pac hyd er m \u2581// \u2581credential , \u2581logging \u2581you \u2581out \u2581of \u2581your \u2581cluster ."], "bleu": 0.15940980880117883, "rouge_l": 0.41924398625429554}
{"id": 3070, "predictions": ["\u2581// \u2581 Hash Datum 15 \u2581 - \u2581 Hash \u2581 info \u2581for \u2581a \u2581given \u2581 data ."], "references": ["\u2581// \u2581 Hash Datum 15 \u2581computes \u2581and \u2581returns \u2581the \u2581hash \u2581of \u2581datum \u2581+ \u2581pipeline \u2581for \u2581version \u2581<= \u25811.5 . 0, \u2581with \u2581a \u2581// \u2581pipeline - specific \u2581prefix ."], "bleu": 0.15741299027792555, "rouge_l": 0.3405443126308444}
{"id": 3192, "predictions": ["\u2581// \u2581 Is Type \u2581returns \u2581true \u2581if \u2581 t \u2581is \u2581a \u2581 type ."], "references": ["\u2581// \u2581 Is Type \u2581reports \u2581whether \u2581the \u2581reflect . Type \u2581is \u2581of \u2581the \u2581specified \u2581function \u2581 type ."], "bleu": 0.25465418966524894, "rouge_l": 0.48897795591182364}
{"id": 2471, "predictions": ["\u2581// \u2581 Container Get Backup \u2581returns \u2581a \u2581backup \u2581 container \u2581for \u2581the \u2581given \u2581project ."], "references": ["\u2581// \u2581 Container Get Backup \u2581returns \u2581the \u2581backup \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.4428500142691474, "rouge_l": 0.6939704209328782}
{"id": 3149, "predictions": ["\u2581// \u2581 Update JobState \u2581updates \u2581the \u2581given \u2581 data \u2581into \u2581the \u2581given \u2581 db ."], "references": ["\u2581// \u2581 Update JobState \u2581performs \u2581the \u2581operations \u2581 involved \u2581with \u2581a \u2581job \u2581state \u2581transition ."], "bleu": 0.25748661016289676, "rouge_l": 0.4666666666666668}
{"id": 2385, "predictions": ["\u2581// \u2581 S all GetType \u2581returns \u2581the \u2581 S 3 \u2581 type \u2581of \u2581volume \u2581 type ."], "references": ["\u2581// \u2581 S toragePoolVolume GetType \u2581returns \u2581a \u2581single \u2581storage \u2581volume \u2581attached \u2581to \u2581a \u2581// \u2581given \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581 type , \u2581on \u2581the \u2581node \u2581with \u2581the \u2581given \u2581"], "bleu": 0.09358464547919082, "rouge_l": 0.3242524916943521}
{"id": 2596, "predictions": ["\u2581// \u2581 Runtime Lib Provider Version AtLeast \u2581returns \u2581true \u2581if \u2581the \u2581version \u2581is \u2581a \u2581 major \u2581version \u2581of \u2581the \u2581 Lib CI \u2581 tool"], "references": ["\u2581// \u2581 Runtime Lib lxc Version AtLeast \u2581checks \u2581if \u2581the \u2581system ' s \u2581 lib lxc \u2581matches \u2581the \u2581// \u2581provided \u2581version \u2581requirement"], "bleu": 0.19422069098763883, "rouge_l": 0.43821839080459773}
{"id": 2883, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581next \u2581 merge \u2581node ."], "bleu": 0.44833867003844585, "rouge_l": 0.6724409448818898}
{"id": 2525, "predictions": ["\u2581// \u2581 Move S \u2581moves \u2581the \u2581 container \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Move S toragePoolVolume \u2581rename s \u2581or \u2581moves \u2581an \u2581existing \u2581storage \u2581volume"], "bleu": 0.27824623288353134, "rouge_l": 0.38461538461538464}
{"id": 3297, "predictions": ["\u2581// \u2581copy Config \u2581copies \u2581the \u2581 contents \u2581of \u2581the \u2581source \u2581to \u2581the \u2581destination ."], "references": ["\u2581// \u2581copy Config \u2581copies \u2581 config . json , \u2581if \u2581any , \u2581from \u2581 src \u2581to \u2581dest ."], "bleu": 0.20792427518059642, "rouge_l": 0.42785571142284573}
{"id": 2106, "predictions": ["\u2581// \u2581 Launch Containers \u2581returns \u2581the \u2581 container ' s \u2581containers ."], "references": ["\u2581// \u2581 Launch Containers \u2581launch es \u2581a \u2581 set \u2581of \u2581containers ."], "bleu": 0.3438931217657843, "rouge_l": 0.5833333333333334}
{"id": 3092, "predictions": ["\u2581// \u2581 Read Row \u2581reads \u2581the \u2581 PG Dump Reader \u2581from \u2581the \u2581 PG Dump Reader"], "references": ["\u2581// \u2581 Read Row \u2581parses \u2581the \u2581pg dump \u2581file \u2581and \u2581populate s \u2581the \u2581header \u2581and \u2581the \u2581 footer \u2581// \u2581It \u2581returns \u2581 EOF \u2581when \u2581done , \u2581and \u2581at \u2581that \u2581time"], "bleu": 0.10930404136525158, "rouge_l": 0.2885135135135135}
{"id": 2450, "predictions": ["\u2581// \u2581 Container List Expanded \u2581returns \u2581all \u2581 container \u2581 IDs \u2581of \u2581 Project s ."], "references": ["\u2581// \u2581 Container List Expanded \u2581 loads \u2581all \u2581containers \u2581across \u2581all \u2581projects \u2581and \u2581expand s \u2581// \u2581their \u2581 config \u2581and \u2581devices \u2581using \u2581the \u2581profiles \u2581they \u2581are \u2581associated \u2581to ."], "bleu": 0.14548716046396645, "rouge_l": 0.3379501385041551}
{"id": 3224, "predictions": ["\u2581// \u2581Check \u2581checks \u2581if \u2581the \u2581 path \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check \u2581scan s \u2581the \u2581 Path \u2581for \u2581any \u2581recursive \u2581 transformers \u2581and \u2581panic s \u2581when \u2581any \u2581// \u2581recursive \u2581 transformers \u2581are \u2581detected . \u2581Note \u2581that \u2581the \u2581presence \u2581of \u2581a"], "bleu": 0.02954934557527439, "rouge_l": 0.22932330827067668}
{"id": 4093, "predictions": ["\u2581// \u2581Remove \u2581removes \u2581the \u2581image \u2581from \u2581the \u2581storage ."], "references": ["\u2581// \u2581Remove \u2581implements \u2581Remove \u2581method \u2581of \u2581 Platform Service \u2581interface"], "bleu": 0.16621692209732, "rouge_l": 0.20854700854700853}
{"id": 2417, "predictions": ["\u2581// \u2581maybe Update \u2581is \u2581used \u2581to \u2581update \u2581the \u2581state \u2581of \u2581the \u2581cluster"], "references": ["\u2581// \u2581Check \u2581 this \u2581node ' s \u2581version \u2581and \u2581possibly \u2581run \u2581 LXD _ CLUSTER _ UPDATE ."], "bleu": 0.06302036832351489, "rouge_l": 0.06434599156118143}
{"id": 3967, "predictions": ["\u2581// \u2581 select Package \u2581returns \u2581a \u2581package \u2581from \u2581the \u2581 config \u2581file \u2581 dir"], "references": ["\u2581// \u2581 select Packages \u2581selects \u2581one \u2581Go \u2581packages \u2581out \u2581of \u2581the \u2581build able \u2581packages \u2581found \u2581// \u2581in \u2581a \u2581directory . \u2581If \u2581multiple \u2581packages \u2581are \u2581found , \u2581it \u2581returns \u2581the \u2581package"], "bleu": 0.062393275451015855, "rouge_l": 0.21328671328671328}
{"id": 3932, "predictions": ["\u2581// \u2581 Squash Rules \u2581 unpack s \u2581the \u2581 contents \u2581of \u2581a \u2581 Rule \u2581into \u2581a \u2581 slice \u2581of \u2581// \u2581 Rules ."], "references": ["\u2581// \u2581 Squash Rules \u2581copies \u2581information \u2581from \u2581 src \u2581into \u2581dst \u2581without \u2581discard ing \u2581// \u2581information \u2581in \u2581dst . \u2581 Squash Rules \u2581detect s \u2581duplicate \u2581elements \u2581in \u2581lists \u2581and \u2581//"], "bleu": 0.13521543733863856, "rouge_l": 0.33172205438066465}
{"id": 3715, "predictions": ["\u2581// \u2581Build \u2581creates \u2581a \u2581new \u2581context \u2581with \u2581the \u2581given \u2581context ."], "references": ["\u2581// \u2581Build \u2581returns \u2581a \u2581 Context WithHeaders \u2581that \u2581can \u2581be \u2581used \u2581to \u2581make \u2581calls ."], "bleu": 0.11840515855353498, "rouge_l": 0.2993865030674847}
{"id": 3953, "predictions": ["\u2581// \u2581build Packages \u2581parses \u2581the \u2581 contents \u2581of \u2581a \u2581 Proto Config \u2581into \u2581a \u2581 slice \u2581of \u2581// \u2581packages ."], "references": ["\u2581// \u2581build Package \u2581extracts \u2581metadata \u2581from \u2581the \u2581 . proto \u2581files \u2581in \u2581a \u2581directory \u2581and \u2581// \u2581constructs \u2581possibly \u2581several \u2581packages , \u2581then \u2581selects \u2581a \u2581package \u2581to \u2581generate \u2581// \u2581a \u2581proto"], "bleu": 0.07291455399103798, "rouge_l": 0.270253164556962}
{"id": 3945, "predictions": ["\u2581// \u2581proto FileInfo \u2581returns \u2581a \u2581 path \u2581for \u2581the \u2581given \u2581file \u2581 name ."], "references": ["\u2581// \u2581proto FileInfo \u2581extracts \u2581metadata \u2581from \u2581a \u2581proto \u2581file . \u2581The \u2581proto \u2581extension \u2581// \u2581already \u2581\" parse s \" \u2581these \u2581and \u2581stores \u2581metadata \u2581in \u2581proto . FileInfo , \u2581so \u2581"], "bleu": 0.062393275451015855, "rouge_l": 0.2559440559440559}
{"id": 2773, "predictions": ["\u2581// \u2581 Print Commit Info \u2581prints \u2581the \u2581 info \u2581of \u2581the \u2581commit ."], "references": ["\u2581// \u2581 Print Commit Info \u2581pretty - print s \u2581commit \u2581 info ."], "bleu": 0.4160751652217845, "rouge_l": 0.6153846153846153}
{"id": 2759, "predictions": ["\u2581// \u2581 Connect \u2581 establish es \u2581a \u2581client \u2581to \u2581a \u2581client"], "references": ["\u2581// \u2581 sudo \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581copies \u2581' p ach Client ' \u2581 grants \u2581it \u2581 PP S ' s \u2581 superuser \u2581// \u2581 token , \u2581and"], "bleu": 0.030279651726272977, "rouge_l": 0.13505535055350554}
{"id": 2473, "predictions": ["\u2581// \u2581 Container Backup Create \u2581creates \u2581a \u2581new \u2581 container \u2581with \u2581the \u2581given \u2581 container"], "references": ["\u2581// \u2581 Container Backup Create \u2581creates \u2581a \u2581new \u2581backup"], "bleu": 0.5129497107827519, "rouge_l": 0.698140200286123}
{"id": 2648, "predictions": ["\u2581// \u2581nodes \u2581returns \u2581the \u2581list \u2581of \u2581nodes \u2581that \u2581have \u2581the \u2581given \u2581 set \u2581of \u2581nodes ."], "references": ["\u2581// \u2581 Nodes \u2581returns \u2581all \u2581 LXD \u2581nodes \u2581part \u2581of \u2581the \u2581cluster ."], "bleu": 0.10878661088699644, "rouge_l": 0.35138248847926273}
{"id": 2986, "predictions": ["\u2581// \u2581 New Mini o Client FromEnv \u2581creates \u2581a \u2581new \u2581 Mini o Client FromEnv \u2581 Client"], "references": ["\u2581// \u2581 New Mini o Client FromEnv \u2581creates \u2581a \u2581 Mini o \u2581client \u2581based \u2581on \u2581environment \u2581variables ."], "bleu": 0.5580064840134794, "rouge_l": 0.6821994408201305}
{"id": 3726, "predictions": ["\u2581// \u2581 En Num \u2581is \u2581used \u2581to \u2581 remove \u2581a \u2581 token \u2581from \u2581the \u2581 relay \u2581 slice ."], "references": ["\u2581// \u2581 En tomb \u2581sets \u2581the \u2581 tomb \u2581bit \u2581on \u2581a \u2581 relay Item \u2581and \u2581 schedules \u2581a \u2581garbage \u2581collection . \u2581It \u2581// \u2581returns \u2581the \u2581 en tomb ed \u2581item"], "bleu": 0.10514308605102096, "rouge_l": 0.35305466237942124}
{"id": 2498, "predictions": ["\u2581// \u2581 Rest Server \u2581returns \u2581a \u2581new \u2581http . Server \u2581that \u2581will \u2581serve \u2581the \u2581 data \u2581// \u2581for \u2581the \u2581given \u2581daemon ."], "references": ["\u2581// \u2581 Rest Server \u2581creates \u2581an \u2581http . Server \u2581 capable \u2581of \u2581handling \u2581requests \u2581against \u2581the \u2581 LXD \u2581REST \u2581// \u2581API \u2581endpoint ."], "bleu": 0.2265957229479742, "rouge_l": 0.4869375907111756}
{"id": 2058, "predictions": ["\u2581// \u2581create Dev L x dl Listener \u2581creates \u2581a \u2581new \u2581 net . Listener \u2581for \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581Create \u2581a \u2581new \u2581 net . Listener \u2581bound \u2581to \u2581the \u2581unix \u2581socket \u2581of \u2581the \u2581 dev lxd \u2581endpoint ."], "bleu": 0.3023858407554745, "rouge_l": 0.4594142259414226}
{"id": 2774, "predictions": ["\u2581// \u2581 Print Detailed Commit Info \u2581 dumps \u2581the \u2581information \u2581about \u2581the \u2581 info \u2581of \u2581the \u2581// \u2581 info ."], "references": ["\u2581// \u2581 Print Detailed Commit Info \u2581pretty - print s \u2581detailed \u2581commit \u2581 info ."], "bleu": 0.3400215619680846, "rouge_l": 0.5278846153846154}
{"id": 3375, "predictions": ["\u2581// \u2581modify JSON \u2581 modifies \u2581the \u2581 config \u2581file \u2581and \u2581 persist s \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581docker \u2581file ."], "references": ["\u2581// \u2581modify JSON \u2581writes \u2581to \u2581 auth . json \u2581if \u2581the \u2581docker ConfigFile \u2581has \u2581been \u2581updated"], "bleu": 0.12259149958656422, "rouge_l": 0.32504440497335696}
{"id": 3785, "predictions": ["\u2581// \u2581 Run WithRetry \u2581executes \u2581the \u2581 Re CM able Func \u2581for \u2581the \u2581given \u2581context ."], "references": ["\u2581// \u2581 Run WithRetry \u2581will \u2581take \u2581a \u2581function \u2581that \u2581makes \u2581the \u2581 T Channel \u2581 call , \u2581and \u2581will \u2581// \u2581 rerun \u2581it \u2581as \u2581spec if ed \u2581in \u2581the \u2581"], "bleu": 0.10613242539437312, "rouge_l": 0.2885135135135135}
{"id": 3736, "predictions": ["\u2581// \u2581 NewServer \u2581returns \u2581a \u2581new \u2581 Server \u2581instance"], "references": ["\u2581// \u2581 NewServer \u2581returns \u2581a \u2581new \u2581 Server \u2581that \u2581can \u2581 recieve \u2581Thrift \u2581calls \u2581or \u2581raw \u2581calls ."], "bleu": 0.3237750138999811, "rouge_l": 0.5589919816723941}
{"id": 2601, "predictions": ["\u2581// \u2581 Setup Trust \u2581sets \u2581up \u2581the \u2581trust \u2581certificate \u2581and \u2581target ."], "references": ["\u2581// \u2581 Setup Trust \u2581is \u2581a \u2581convenience \u2581around \u2581 Container Server . Create Certificate \u2581that \u2581// \u2581adds \u2581the \u2581given \u2581client \u2581certificate \u2581to \u2581the \u2581 trusted \u2581pool \u2581of \u2581the \u2581cluster \u2581at"], "bleu": 0.07256952215994865, "rouge_l": 0.26521739130434785}
{"id": 3576, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581client \u2581for \u2581the \u2581given \u2581channel ."], "references": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 Hyper ba h n \u2581client \u2581using \u2581the \u2581given \u2581channel . \u2581// \u2581 config \u2581is \u2581the \u2581environment - specific \u2581configuration \u2581for \u2581 Hyper ba"], "bleu": 0.15595253291986458, "rouge_l": 0.4862318840579709}
{"id": 2373, "predictions": ["\u2581// \u2581 StoragePool Create \u2581creates \u2581a \u2581new \u2581 Pool ."], "references": ["\u2581// \u2581 StoragePool Create \u2581creates \u2581new \u2581storage \u2581pool ."], "bleu": 0.49616830003403634, "rouge_l": 0.7439024390243903}
{"id": 3329, "predictions": ["\u2581// \u2581 view \u2581is \u2581used \u2581to \u2581 get \u2581a \u2581 view \u2581of \u2581the \u2581 data \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581 view \u2581returns \u2581runs \u2581the \u2581specified \u2581fn \u2581within \u2581a \u2581read - only \u2581transaction \u2581on \u2581the \u2581database ."], "bleu": 0.14253911354181859, "rouge_l": 0.3259127337488869}
{"id": 2691, "predictions": ["\u2581// \u2581 Main RBD Volume List Snapshots \u2581creates \u2581a \u2581 GCE \u2581 VM \u2581 Volume List"], "references": ["\u2581// \u2581 ceph RBD Volume List Snapshots \u2581retrieves \u2581the \u2581snapshots \u2581of \u2581an \u2581 RBD \u2581storage \u2581volume \u2581// \u2581The \u2581 format \u2581of \u2581the \u2581snapshot \u2581names \u2581is \u2581simply \u2581the \u2581part \u2581after \u2581the"], "bleu": 0.10930404136525158, "rouge_l": 0.32972972972972975}
{"id": 2855, "predictions": ["\u2581// \u2581 Pull Tree \u2581pull s \u2581the \u2581tree \u2581of \u2581a \u2581node \u2581and \u2581returns \u2581a \u2581 set \u2581of \u2581// \u2581 data ."], "references": ["\u2581// \u2581 Pull Tree \u2581pull s \u2581from \u2581a \u2581raw \u2581 Hash Tree \u2581rather \u2581than \u2581a \u2581repo ."], "bleu": 0.294467310498826, "rouge_l": 0.4828496042216358}
{"id": 3960, "predictions": ["\u2581// \u2581Find External Repo \u2581finds \u2581a \u2581repository \u2581by \u2581 name ."], "references": ["\u2581// \u2581Find External Repo \u2581attempts \u2581to \u2581locate \u2581the \u2581directory \u2581where \u2581 Baz el \u2581has \u2581fetched \u2581// \u2581the \u2581external \u2581repository \u2581with \u2581the \u2581given \u2581 name . \u2581An \u2581error \u2581is \u2581returned \u2581if"], "bleu": 0.07762861044503847, "rouge_l": 0.36014760147601477}
{"id": 2312, "predictions": ["\u2581// \u2581do Profile Update Cluster \u2581updates \u2581the \u2581cluster \u2581 name \u2581and \u2581updates \u2581the \u2581// \u2581 container ' s \u2581 data ."], "references": ["\u2581// \u2581 Like \u2581do Profile Update \u2581but \u2581does \u2581not \u2581update \u2581the \u2581database , \u2581since \u2581it \u2581was \u2581already \u2581// \u2581updated \u2581by \u2581do Profile Update \u2581itself , \u2581called \u2581on \u2581the \u2581 notify"], "bleu": 0.0951787281596248, "rouge_l": 0.26604361370716506}
{"id": 2469, "predictions": ["\u2581// \u2581 Container Next Snapshot \u2581returns \u2581a \u2581 container \u2581for \u2581a \u2581given \u2581 name , \u2581and \u2581returns \u2581// \u2581the \u2581number \u2581of \u2581 container \u2581 name \u2581and \u2581matching \u2581the \u2581 name"], "references": ["\u2581// \u2581 Container Next Snapshot \u2581returns \u2581the \u2581index \u2581the \u2581next \u2581snapshot \u2581of \u2581the \u2581 container \u2581// \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581pattern \u2581should \u2581have ."], "bleu": 0.28856268147560865, "rouge_l": 0.4703440094899169}
{"id": 3296, "predictions": ["\u2581// \u2581create ProgressBar \u2581creates \u2581a \u2581new \u2581 bar \u2581with \u2581the \u2581given \u2581 kind \u2581and \u2581 kind ."], "references": ["\u2581// \u2581create ProgressBar \u2581creates \u2581a \u2581 m pb . Bar \u2581in \u2581pool . \u2581Note \u2581that \u2581if \u2581the \u2581 copier ' s \u2581report Writer \u2581// \u2581is \u2581ioutil . Discard , \u2581the"], "bleu": 0.139941685558328, "rouge_l": 0.36478405315614615}
{"id": 2157, "predictions": ["\u2581// \u2581current Raft Nodes \u2581returns \u2581a \u2581list \u2581of \u2581 raft \u2581 Raft \u2581nodes ."], "references": ["\u2581// \u2581Return \u2581information \u2581about \u2581the \u2581 LXD \u2581nodes \u2581that \u2581a \u2581currently \u2581part \u2581of \u2581the \u2581 raft \u2581// \u2581cluster , \u2581as \u2581configured \u2581in \u2581the \u2581 raft \u2581log . \u2581It \u2581returns \u2581an"], "bleu": 0.05012853064838781, "rouge_l": 0.2986013986013986}
{"id": 2858, "predictions": ["\u2581// \u2581 Push File \u2581 push s \u2581a \u2581file \u2581to \u2581a \u2581remote \u2581file"], "references": ["\u2581// \u2581 Push File \u2581makes \u2581sure \u2581that \u2581 pfs File \u2581has \u2581the \u2581same \u2581 content \u2581as \u2581os File ."], "bleu": 0.17538226970735166, "rouge_l": 0.3022794846382557}
{"id": 2563, "predictions": ["\u2581// \u2581HTTP LXD \u2581 - \u2581 get \u2581the \u2581 LXD \u2581 Client \u2581 Server \u2581 Client"], "references": ["\u2581// \u2581 Internal \u2581function \u2581called \u2581by \u2581 Connect LXD \u2581and \u2581 Connect Public LXD"], "bleu": 0.10521495173810227, "rouge_l": 0.3373893805309734}
{"id": 2127, "predictions": ["\u2581// \u2581Ensure Schema \u2581is \u2581called \u2581when \u2581a \u2581 db \u2581is \u2581already \u2581 set ."], "references": ["\u2581// \u2581Ensure Schema \u2581applies \u2581all \u2581relevant \u2581schema \u2581updates \u2581to \u2581the \u2581node - local \u2581// \u2581database . \u2581// \u2581// \u2581Return \u2581the \u2581initial \u2581schema \u2581version \u2581found \u2581before \u2581starting \u2581the \u2581update , \u2581along"], "bleu": 0.05547633852971425, "rouge_l": 0.17062937062937064}
{"id": 3331, "predictions": ["\u2581// \u2581 KeyRing Digest \u2581returns \u2581a \u2581 slice \u2581of \u2581 Digest s \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581 uncompressed Digest \u2581implements \u2581 Blob Info Cache . Uncompressed Digest \u2581within \u2581the \u2581provided \u2581read - only \u2581transaction ."], "bleu": 0.1007533106451815, "rouge_l": 0.3812499999999999}
{"id": 3859, "predictions": ["\u2581// \u2581read Frames \u2581reads \u2581the \u2581 data \u2581frame \u2581from \u2581the \u2581pool ."], "references": ["\u2581// \u2581read Frames \u2581is \u2581the \u2581loop \u2581that \u2581reads \u2581frames \u2581from \u2581the \u2581network \u2581connection \u2581and \u2581// \u2581dispatches \u2581to \u2581the \u2581appropriate \u2581handler . \u2581 Run \u2581within \u2581its \u2581own \u2581goroutine \u2581to \u2581// \u2581prevent"], "bleu": 0.05830441645253641, "rouge_l": 0.30942028985507253}
{"id": 3146, "predictions": ["\u2581// \u2581 New Pipeline Manifest Reader \u2581returns \u2581a \u2581new \u2581 Pipeline Manifest Reader \u2581with \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 New Pipeline Manifest Reader \u2581creates \u2581a \u2581new \u2581manifest \u2581reader \u2581from \u2581a \u2581 path ."], "bleu": 0.3863958857674753, "rouge_l": 0.6384395813510941}
{"id": 2313, "predictions": ["\u2581// \u2581do Profile Update Container \u2581updates \u2581the \u2581 container \u2581 name \u2581and \u2581 api ."], "references": ["\u2581// \u2581 Profile \u2581update \u2581of \u2581a \u2581single \u2581 container ."], "bleu": 0.13380161378318955, "rouge_l": 0.4149659863945578}
{"id": 3777, "predictions": ["\u2581// \u2581stop Exchange s \u2581 - \u2581 Stops \u2581the \u2581 Exchange s ."], "references": ["\u2581// \u2581stop Exchange s \u2581stops \u2581all \u2581message \u2581 exchanges \u2581to \u2581 unblock \u2581all \u2581 waiters \u2581on \u2581the \u2581 mex . \u2581// \u2581This \u2581should \u2581only \u2581be \u2581called \u2581on \u2581connection \u2581failures ."], "bleu": 0.0904056203553595, "rouge_l": 0.3907473309608541}
{"id": 2660, "predictions": ["\u2581// \u2581 Profile URI s \u2581returns \u2581the \u2581profile \u2581names \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Profile URI s \u2581returns \u2581all \u2581available \u2581profile \u2581URI s ."], "bleu": 0.460462862587273, "rouge_l": 0.6446499339498017}
{"id": 2484, "predictions": ["\u2581// \u2581 Down \u2581implements \u2581 Service ."], "references": ["\u2581// \u2581 Down \u2581bring s \u2581down \u2581all \u2581endpoints \u2581and \u2581stops \u2581 serving \u2581HTTP \u2581requests ."], "bleu": 0.12201458693655999, "rouge_l": 0.42657342657342656}
{"id": 4088, "predictions": ["\u2581// \u2581Remove App Images \u2581removes \u2581the \u2581specified \u2581image \u2581from \u2581the \u2581registry ."], "references": ["\u2581// \u2581Remove App Images \u2581removes \u2581all \u2581 app \u2581images \u2581from \u2581a \u2581remote \u2581registry \u2581 v 2 \u2581server , \u2581returning \u2581an \u2581error \u2581// \u2581in \u2581case \u2581of \u2581failure ."], "bleu": 0.12067047345277734, "rouge_l": 0.38364779874213834}
{"id": 3732, "predictions": ["\u2581// \u2581fail Relay Item \u2581is \u2581used \u2581to \u2581fail \u2581if \u2581the \u2581given \u2581 data \u2581is \u2581a \u2581 relay ."], "references": ["\u2581// \u2581fail Relay Item \u2581 tomb s \u2581the \u2581 relay \u2581item \u2581so \u2581that \u2581future \u2581frames \u2581for \u2581 this \u2581 call \u2581are \u2581not \u2581// \u2581 forwarded . \u2581We \u2581keep \u2581the \u2581"], "bleu": 0.12234941764611894, "rouge_l": 0.3189542483660131}
{"id": 2415, "predictions": ["\u2581// \u2581 Notify Upgrade Completed \u2581is \u2581called \u2581when \u2581a \u2581 TLS \u2581upgrade \u2581is \u2581 healthy \u2581or \u2581 notify ."], "references": ["\u2581// \u2581 Notify Upgrade Completed \u2581sends \u2581a \u2581notification \u2581to \u2581all \u2581other \u2581nodes \u2581in \u2581the \u2581// \u2581cluster \u2581that \u2581any \u2581possible \u2581pending \u2581database \u2581update \u2581has \u2581been \u2581applied , \u2581and \u2581any \u2581// \u2581nodes"], "bleu": 0.13740496296718613, "rouge_l": 0.2353697749196142}
{"id": 3832, "predictions": ["\u2581// \u2581 set Extends \u2581 set \u2581 name \u2581of \u2581the \u2581service"], "references": ["\u2581// \u2581 set Extends \u2581will \u2581 set \u2581the \u2581 Extends Service \u2581for \u2581all \u2581services . \u2581// \u2581It \u2581is \u2581done \u2581after \u2581all \u2581files \u2581are \u2581parsed , \u2581as \u2581services \u2581may \u2581 extend"], "bleu": 0.06902267979217218, "rouge_l": 0.3151291512915129}
{"id": 2655, "predictions": ["\u2581// \u2581 Node Clear \u2581removes \u2581the \u2581 data \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node Clear \u2581removes \u2581any \u2581 container \u2581or \u2581image \u2581associated \u2581with \u2581 this \u2581node ."], "bleu": 0.29303275024879544, "rouge_l": 0.48744292237442927}
{"id": 2104, "predictions": ["\u2581// \u2581 Gen Cert \u2581generates \u2581a \u2581certificate \u2581from \u2581the \u2581given \u2581certificate"], "references": ["\u2581// \u2581 Gen Cert \u2581will \u2581create \u2581and \u2581populate \u2581a \u2581certificate \u2581file \u2581and \u2581a \u2581 key \u2581file"], "bleu": 0.23144304304381313, "rouge_l": 0.43008225616921264}
{"id": 2099, "predictions": ["\u2581// \u2581internal SQL Get \u2581returns \u2581a \u2581 Response \u2581that \u2581will \u2581 dump \u2581the \u2581 data \u2581to \u2581the \u2581 DB . \u2581// \u2581// \u2581This \u2581function \u2581is \u2581safe \u2581for \u2581 concurrent \u2581access"], "references": ["\u2581// \u2581Perform \u2581a \u2581database \u2581 dump ."], "bleu": 0.0631372362157204, "rouge_l": 0.3043912175648702}
{"id": 2266, "predictions": ["\u2581// \u2581 set \u2581sets \u2581the \u2581value \u2581of \u2581a \u2581 key \u2581value \u2581pair ."], "references": ["\u2581// \u2581Set \u2581or \u2581change \u2581an \u2581individual \u2581 key . \u2581 Empty \u2581string \u2581means \u2581delete \u2581 this \u2581value \u2581and \u2581// \u2581effectively \u2581 revert \u2581it \u2581to \u2581the \u2581default . \u2581Return \u2581a \u2581boolean"], "bleu": 0.04474383895897329, "rouge_l": 0.21708185053380782}
{"id": 2418, "predictions": ["\u2581// \u2581 NewServer \u2581returns \u2581a \u2581new \u2581 Server \u2581instance"], "references": ["\u2581// \u2581 NewServer \u2581returns \u2581a \u2581new \u2581 RBAC \u2581server \u2581instance ."], "bleu": 0.6266108809965137, "rouge_l": 0.7858293075684382}
{"id": 2224, "predictions": ["\u2581// \u2581 Container Snapshot Rename \u2581implements \u2581storage . Storage ."], "references": ["\u2581// \u2581 Container Snapshot Rename \u2581rename s \u2581a \u2581snapshot \u2581of \u2581a \u2581 container ."], "bleu": 0.3216719815859086, "rouge_l": 0.48541114058355433}
{"id": 4002, "predictions": ["\u2581// \u2581Set Mock Service \u2581sets \u2581the \u2581mock \u2581 Service \u2581for \u2581the \u2581 Mock Service"], "references": ["\u2581// \u2581Set Mock Service \u2581return \u2581a \u2581new \u2581 Mock Service \u2581and \u2581 set \u2581as \u2581a \u2581service manager"], "bleu": 0.2735091502059629, "rouge_l": 0.4438669438669438}
{"id": 2714, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 config \u2581from \u2581the \u2581 config \u2581file ."], "references": ["\u2581// \u2581 Read \u2581 loads \u2581the \u2581 Pac hyd er m \u2581 config \u2581on \u2581 this \u2581machine . \u2581// \u2581If \u2581an \u2581existing \u2581configuration \u2581cannot \u2581be \u2581found , \u2581it \u2581sets \u2581up"], "bleu": 0.06690764505445929, "rouge_l": 0.3473309608540925}
{"id": 2178, "predictions": ["\u2581// \u2581 Select URI s \u2581returns \u2581a \u2581list \u2581of \u2581 select \u2581URI s \u2581with \u2581the \u2581given \u2581 SQL \u2581statement ."], "references": ["\u2581// \u2581 Select URI s \u2581returns \u2581a \u2581list \u2581of \u2581 LXD \u2581API \u2581URI \u2581strings \u2581for \u2581the \u2581resource \u2581yield ed \u2581by \u2581// \u2581the \u2581given \u2581query . \u2581// \u2581// \u2581The \u2581 f"], "bleu": 0.33055611907629595, "rouge_l": 0.540506329113924}
{"id": 3347, "predictions": ["\u2581// \u2581new Image Destination \u2581returns \u2581a \u2581new \u2581image Destination \u2581for \u2581the \u2581given \u2581 ref ."], "references": ["\u2581// \u2581new Image Destination \u2581creates \u2581a \u2581new \u2581 Image Destination \u2581for \u2581the \u2581specified \u2581reference ."], "bleu": 0.35218565358232357, "rouge_l": 0.6666666666666666}
{"id": 3286, "predictions": ["\u2581// \u2581validate For Image Ref \u2581returns \u2581the \u2581 Policy Requirements \u2581that \u2581the \u2581 Policy \u2581is \u2581// \u2581 set ."], "references": ["\u2581// \u2581requirements For Image Ref \u2581selects \u2581the \u2581appropriate \u2581requirements \u2581for \u2581 ref ."], "bleu": 0.14253911354181859, "rouge_l": 0.4528101802757158}
{"id": 4006, "predictions": ["\u2581// \u2581 List Deploy s \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 deployments \u2581in \u2581the \u2581given \u2581 filter ."], "references": ["\u2581// \u2581 List Deploy s \u2581returns \u2581the \u2581list \u2581of \u2581deploy \u2581that \u2581match \u2581a \u2581given \u2581 filter ."], "bleu": 0.48740622698799413, "rouge_l": 0.6892655367231638}
{"id": 3775, "predictions": ["\u2581// \u2581forward Peer Frame \u2581adds \u2581a \u2581 trace \u2581frame \u2581to \u2581the \u2581given \u2581frame ."], "references": ["\u2581// \u2581forward Peer Frame \u2581forwards \u2581a \u2581frame \u2581from \u2581the \u2581peer \u2581to \u2581the \u2581appropriate \u2581message \u2581// \u2581exchange"], "bleu": 0.2611938211208065, "rouge_l": 0.5269978401727862}
{"id": 3376, "predictions": ["\u2581// \u2581find Authentication \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 URL \u2581for \u2581the \u2581 auth \u2581 key \u2581// \u2581of \u2581the \u2581given \u2581 path . \u2581If \u2581the \u2581 path"], "references": ["\u2581// \u2581find Authentication \u2581looks \u2581for \u2581 auth \u2581of \u2581registry \u2581in \u2581 path"], "bleu": 0.10727295782787309, "rouge_l": 0.4644670050761421}
{"id": 3897, "predictions": ["\u2581// \u2581 Scan AST Body \u2581 - \u2581returns \u2581 File \u2581for \u2581 File ."], "references": ["\u2581// \u2581 Scan AST Body \u2581creates \u2581a \u2581 File \u2581wrapped \u2581around \u2581the \u2581given \u2581syntax \u2581tree . \u2581It \u2581will \u2581also \u2581// \u2581scan \u2581the \u2581AST \u2581for \u2581a \u2581function \u2581matching \u2581the \u2581given \u2581def"], "bleu": 0.12278932164401814, "rouge_l": 0.3412587412587413}
{"id": 4089, "predictions": ["\u2581// \u2581Create \u2581creates \u2581a \u2581new \u2581 app ."], "references": ["\u2581// \u2581Create \u2581implements \u2581Create \u2581method \u2581of \u2581 Platform Service \u2581interface"], "bleu": 0.176625510283176, "rouge_l": 0.3267857142857143}
{"id": 2452, "predictions": ["\u2581// \u2581 Snapshot IDs \u2581fetches s \u2581returns \u2581the \u2581 IDs \u2581of \u2581all \u2581the \u2581 IDs \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Snapshot IDs AndName s \u2581returns \u2581a \u2581 map \u2581of \u2581snapshot \u2581 IDs \u2581to \u2581snapshot \u2581names \u2581for \u2581the \u2581// \u2581 container \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.15977651327918918, "rouge_l": 0.4935940660822656}
{"id": 2470, "predictions": ["\u2581// \u2581 Container Pool \u2581returns \u2581a \u2581 container \u2581with \u2581the \u2581specified \u2581 name ."], "references": ["\u2581// \u2581 Container Pool \u2581returns \u2581the \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581 container ."], "bleu": 0.3943168375847628, "rouge_l": 0.642857142857143}
{"id": 2990, "predictions": ["\u2581// \u2581Parse URL \u2581parses \u2581the \u2581given \u2581 URL \u2581and \u2581returns \u2581a \u2581 Store URL ."], "references": ["\u2581// \u2581Parse URL \u2581parses \u2581an \u2581 URL \u2581into \u2581 ObjectStore URL ."], "bleu": 0.30130404892785684, "rouge_l": 0.6802973977695167}
{"id": 3946, "predictions": ["\u2581// \u2581Add Rule \u2581adds \u2581a \u2581rule \u2581to \u2581the \u2581index ."], "references": ["\u2581// \u2581Add Rule \u2581adds \u2581a \u2581rule \u2581 r \u2581to \u2581the \u2581index . \u2581The \u2581rule \u2581will \u2581only \u2581be \u2581indexed \u2581if \u2581there \u2581// \u2581is \u2581a \u2581known \u2581 resolver \u2581for \u2581the \u2581rule '"], "bleu": 0.11006659984170274, "rouge_l": 0.45864661654135336}
{"id": 2857, "predictions": ["\u2581// \u2581 Push Obj \u2581sends \u2581a \u2581 push \u2581message \u2581to \u2581the \u2581client"], "references": ["\u2581// \u2581 Push Obj \u2581pushes \u2581 data \u2581from \u2581commit \u2581to \u2581an \u2581object \u2581store ."], "bleu": 0.2662659213958957, "rouge_l": 0.45522388059701485}
{"id": 2461, "predictions": ["\u2581// \u2581 Container Profiles Insert \u2581updates \u2581the \u2581profiles \u2581for \u2581the \u2581given \u2581 id \u2581and \u2581 ID ."], "references": ["\u2581// \u2581 Container Profiles Insert \u2581associate s \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 ID \u2581with \u2581the \u2581// \u2581profiles \u2581with \u2581the \u2581given \u2581names \u2581in \u2581the \u2581given \u2581project ."], "bleu": 0.2036245215441721, "rouge_l": 0.468248429867411}
{"id": 3566, "predictions": ["\u2581// \u2581 Metric WithPrefix \u2581returns \u2581the \u2581 key \u2581for \u2581the \u2581given \u2581prefix ."], "references": ["\u2581// \u2581 Metric WithPrefix \u2581is \u2581the \u2581default \u2581mapping \u2581for \u2581metrics \u2581to \u2581 statsd \u2581 keys ."], "bleu": 0.24447266369067072, "rouge_l": 0.4739178690344062}
{"id": 3193, "predictions": ["\u2581// \u2581 Name Of \u2581returns \u2581the \u2581 name \u2581of \u2581a \u2581given \u2581 type ."], "references": ["\u2581// \u2581 Name Of \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581function \u2581value ."], "bleu": 0.6413865258981679, "rouge_l": 0.7457212713936432}
{"id": 2856, "predictions": ["\u2581// \u2581 Push \u2581 push s \u2581a \u2581 Commit \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Push \u2581puts \u2581files \u2581under \u2581root \u2581into \u2581an \u2581open \u2581commit ."], "bleu": 0.16188613565728213, "rouge_l": 0.30235439900867406}
{"id": 3502, "predictions": ["\u2581// \u2581Add Dir \u2581adds \u2581a \u2581directory \u2581to \u2581the \u2581 top \u2581of \u2581the \u2581directory ."], "references": ["\u2581// \u2581Add Dir \u2581adds \u2581a \u2581directory \u2581recursively \u2581with \u2581all \u2581of \u2581the \u2581files \u2581under \u2581it"], "bleu": 0.4428500142691474, "rouge_l": 0.5714285714285714}
{"id": 2169, "predictions": ["\u2581// \u2581Save Config \u2581saves \u2581the \u2581 config \u2581file \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Save Config \u2581writes \u2581the \u2581provided \u2581configuration \u2581to \u2581the \u2581 config \u2581file ."], "bleu": 0.37030468338190614, "rouge_l": 0.5965770171149144}
{"id": 2645, "predictions": ["\u2581// \u2581 Node Is Outdated \u2581returns \u2581true \u2581if \u2581the \u2581cluster \u2581is \u2581 synced \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node Is Outdated \u2581returns \u2581true \u2581if \u2581there ' s \u2581some \u2581cluster \u2581node \u2581having \u2581an \u2581API \u2581or \u2581// \u2581schema \u2581version \u2581greater \u2581than \u2581the \u2581node \u2581 this \u2581method \u2581is \u2581invoked"], "bleu": 0.22986875592979256, "rouge_l": 0.40531561461794013}
{"id": 2901, "predictions": ["\u2581// \u2581Serialize \u2581writes \u2581the \u2581 Ordered Stack \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581Serialize \u2581serialize s \u2581an \u2581ordered \u2581hash tree ."], "bleu": 0.14694106251955755, "rouge_l": 0.2932692307692307}
{"id": 2208, "predictions": ["\u2581// \u2581copy Container \u2581copies \u2581the \u2581 VM \u2581to \u2581the \u2581target \u2581 container ."], "references": ["\u2581// \u2581 Copy \u2581an \u2581 l vm \u2581 container ."], "bleu": 0.19674979811155635, "rouge_l": 0.44525547445255476}
{"id": 3568, "predictions": ["\u2581// \u2581 Call \u2581executes \u2581a \u2581request \u2581and \u2581sends \u2581it \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Call \u2581makes \u2581a \u2581JSON \u2581 call , \u2581with \u2581retries ."], "bleu": 0.1892240568795935, "rouge_l": 0.4680306905370844}
{"id": 2252, "predictions": ["\u2581// \u2581parse Struct \u2581parses \u2581a \u2581struct \u2581field \u2581into \u2581a \u2581list \u2581of \u2581 Field ."], "references": ["\u2581// \u2581Extract \u2581field \u2581information \u2581from \u2581the \u2581given \u2581structure ."], "bleu": 0.10511846841633776, "rouge_l": 0.271513353115727}
{"id": 3096, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581next \u2581chunk \u2581from \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581from \u2581the \u2581 byte \u2581stream \u2581produced \u2581by \u2581the \u2581 set \u2581of \u2581 Data Refs ."], "bleu": 0.22821413535932925, "rouge_l": 0.4959349593495934}
{"id": 3074, "predictions": ["\u2581// \u2581 merge Chunk \u2581merges \u2581the \u2581 set \u2581of \u2581 APIServer \u2581into \u2581the \u2581 set \u2581of \u2581 active \u2581 data ."], "references": ["\u2581// \u2581 merge Chunk \u2581merges \u2581the \u2581datum \u2581hash trees \u2581into \u2581a \u2581chunk \u2581hash tree \u2581and \u2581stores \u2581it ."], "bleu": 0.28005900778657405, "rouge_l": 0.41602728047740833}
{"id": 3506, "predictions": ["\u2581// \u2581Generate Query \u2581generates \u2581a \u2581query \u2581for \u2581the \u2581given \u2581query ."], "references": ["\u2581// \u2581Generate Query \u2581generates \u2581a \u2581query \u2581by \u2581 subst it u ting \u2581the \u2581specified \u2581// \u2581 bind Variables . \u2581The \u2581extras \u2581parameter \u2581specifies \u2581special \u2581parameters \u2581// \u2581that \u2581can \u2581perform \u2581custom"], "bleu": 0.09761280987342526, "rouge_l": 0.36014760147601477}
{"id": 3008, "predictions": ["\u2581// \u2581 DeepEqual Equals \u2581compares \u2581two \u2581objects \u2581and \u2581returns \u2581true \u2581if \u2581the \u2581 slice \u2581// \u2581is \u2581not \u2581a \u2581 slice ."], "references": ["\u2581// \u2581 oneOf Equals \u2581is \u2581a \u2581 helper \u2581function \u2581for \u2581 Equal OneOf , \u2581 OneOf Equals \u2581and \u2581None Equals , \u2581that \u2581simply \u2581// \u2581returns \u2581a \u2581bool \u2581indicating \u2581whether \u2581'"], "bleu": 0.07627740073422004, "rouge_l": 0.22803738317757008}
{"id": 3767, "predictions": ["\u2581// \u2581 recv Peer Frame \u2581sends \u2581 exchanges \u2581to \u2581the \u2581given \u2581channel ."], "references": ["\u2581// \u2581 recv Peer Frame OfType \u2581waits \u2581for \u2581a \u2581new \u2581frame \u2581of \u2581a \u2581given \u2581 type \u2581from \u2581the \u2581peer , \u2581fail ing \u2581// \u2581if \u2581the \u2581next \u2581frame \u2581received \u2581is \u2581not"], "bleu": 0.10471612356375096, "rouge_l": 0.30391459074733096}
{"id": 3701, "predictions": ["\u2581// \u2581 recv Next Fragment \u2581returns \u2581a \u2581 composed \u2581 decider \u2581that \u2581fires \u2581on \u2581the \u2581// \u2581fragment \u2581of \u2581the \u2581fragment ."], "references": ["\u2581// \u2581 recv Next Fragment \u2581receives \u2581the \u2581next \u2581fragment \u2581from \u2581the \u2581underlying \u2581message \u2581exchange ."], "bleu": 0.24178614976744792, "rouge_l": 0.5154929577464789}
{"id": 2353, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581 GOPATH \u2581and \u2581returns \u2581a \u2581 Package ."], "references": ["\u2581// \u2581Parse \u2581runs \u2581the \u2581Go \u2581parser \u2581against \u2581the \u2581given \u2581package \u2581 name ."], "bleu": 0.14961487835433152, "rouge_l": 0.39713541666666663}
{"id": 3730, "predictions": ["\u2581// \u2581handle Non Call Req \u2581handles \u2581the \u2581 call \u2581to \u2581the \u2581 call \u2581to \u2581the \u2581 Re call \u2581 call ."], "references": ["\u2581// \u2581 Handle \u2581all \u2581frames \u2581except \u2581 messageType Call Req ."], "bleu": 0.09449865252803165, "rouge_l": 0.26492942453854507}
{"id": 3291, "predictions": ["\u2581// \u2581new Reference \u2581returns \u2581a \u2581 Managed Reference \u2581from \u2581a \u2581reference \u2581to \u2581a \u2581 ref ."], "references": ["\u2581// \u2581new Reference \u2581returns \u2581a \u2581docker Reference \u2581for \u2581a \u2581named \u2581reference ."], "bleu": 0.32014060615821366, "rouge_l": 0.6598557692307692}
{"id": 3804, "predictions": ["\u2581// \u2581start Outbound Span \u2581creates \u2581a \u2581new \u2581 span \u2581 Span \u2581for \u2581the \u2581given \u2581service ."], "references": ["\u2581// \u2581start Outbound Span \u2581creates \u2581a \u2581new \u2581 tracing \u2581 span \u2581to \u2581represent \u2581the \u2581outbound \u2581RPC \u2581 call . \u2581// \u2581If \u2581the \u2581context \u2581already \u2581 contains \u2581a \u2581 span ,"], "bleu": 0.22576367537891037, "rouge_l": 0.45337837837837835}
{"id": 3694, "predictions": ["\u2581// \u2581new Fragment \u2581returns \u2581a \u2581new \u2581 Retriever Fragment \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 write \u2581the \u2581// \u2581fragment \u2581to \u2581the \u2581 data ."], "references": ["\u2581// \u2581new Fragment \u2581creates \u2581a \u2581new \u2581fragment \u2581for \u2581marshal ing \u2581into"], "bleu": 0.11653907453915101, "rouge_l": 0.3674698795180723}
{"id": 2600, "predictions": ["\u2581// \u2581 Connect If Volume Is Remote \u2581returns \u2581a \u2581 container Server \u2581for \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581 Connect If Volume Is Remote \u2581 figures \u2581out \u2581the \u2581address \u2581of \u2581the \u2581node \u2581on \u2581which \u2581the \u2581// \u2581volume \u2581with \u2581the \u2581given \u2581 name \u2581is \u2581defined . \u2581If \u2581it"], "bleu": 0.22170844600788428, "rouge_l": 0.4458471760797342}
{"id": 2105, "predictions": ["\u2581// \u2581 Print ServerInfo \u2581prints \u2581the \u2581 info \u2581for \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Print ServerInfo \u2581prints \u2581out \u2581information \u2581about \u2581the \u2581server ."], "bleu": 0.3759663529467017, "rouge_l": 0.5922330097087377}
{"id": 2379, "predictions": ["\u2581// \u2581 StoragePool Volumes Get \u2581returns \u2581a \u2581list \u2581of \u2581 Storage \u2581volumes ."], "references": ["\u2581// \u2581 StoragePool Volumes Get \u2581returns \u2581all \u2581storage \u2581volumes \u2581attached \u2581to \u2581a \u2581given \u2581// \u2581storage \u2581pool \u2581on \u2581any \u2581node ."], "bleu": 0.275919952657718, "rouge_l": 0.4669856459330144}
{"id": 3956, "predictions": ["\u2581// \u2581generate Empty \u2581creates \u2581a \u2581 Rule \u2581that \u2581matches \u2581the \u2581given \u2581 name \u2581and \u2581 key \u2581files ."], "references": ["\u2581// \u2581generate Empty \u2581generates \u2581a \u2581list \u2581of \u2581proto _ library \u2581rules \u2581that \u2581may \u2581be \u2581deleted . \u2581// \u2581This \u2581is \u2581generated \u2581from \u2581existing \u2581proto _ library \u2581rules \u2581with \u2581 src s"], "bleu": 0.07738056603138656, "rouge_l": 0.23921568627450981}
{"id": 3392, "predictions": ["\u2581// \u2581 Detect Compression \u2581 loads \u2581the \u2581 contents \u2581of \u2581a \u2581 byte \u2581 slice \u2581into \u2581a \u2581 hex - encoded \u2581// \u2581 hex \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Detect Compression \u2581returns \u2581a \u2581 Decompressor Func \u2581if \u2581the \u2581input \u2581is \u2581recognized \u2581as \u2581a \u2581compressed \u2581 format , \u2581nil \u2581otherwise . \u2581// \u2581Because \u2581it \u2581 consume s \u2581the"], "bleu": 0.1507579481381601, "rouge_l": 0.33795013850415506}
{"id": 2096, "predictions": ["\u2581// \u2581 HTTPClient \u2581returns \u2581a \u2581 Client \u2581that \u2581uses \u2581the \u2581given \u2581 URL \u2581to \u2581the \u2581 HTTPClient \u2581// \u2581and \u2581the \u2581 TLS \u2581 config ."], "references": ["\u2581// \u2581 HTTPClient \u2581returns \u2581an \u2581http . Client \u2581using \u2581the \u2581given \u2581certificate \u2581and \u2581proxy ."], "bleu": 0.17004630721751066, "rouge_l": 0.4712446351931331}
{"id": 3090, "predictions": ["\u2581// \u2581file History \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581file"], "references": ["\u2581// \u2581file History \u2581calls \u2581 f \u2581with \u2581 FileInfo s \u2581for \u2581the \u2581file , \u2581starting \u2581with \u2581how \u2581it \u2581looked \u2581// \u2581at \u2581the \u2581referenced \u2581commit \u2581and \u2581then \u2581all \u2581past \u2581versions \u2581that"], "bleu": 0.04481889913725955, "rouge_l": 0.2701107011070111}
{"id": 3000, "predictions": ["\u2581// \u2581 get \u2581an \u2581 OTP \u2581 token \u2581from \u2581the \u2581server ."], "references": ["\u2581// \u2581 get OneTime Password \u2581 contains \u2581the \u2581implementation \u2581of \u2581Get OneTime Password , \u2581// \u2581but \u2581is \u2581also \u2581called \u2581directly \u2581by \u2581handle SAML RE sp on s e . \u2581It"], "bleu": 0.04962965758858181, "rouge_l": 0.26521739130434785}
{"id": 3961, "predictions": ["\u2581// \u2581 List Repositories \u2581returns \u2581a \u2581list \u2581of \u2581 repositories \u2581that \u2581are \u2581 owned \u2581by \u2581the \u2581given \u2581// \u2581 File ."], "references": ["\u2581// \u2581 List Repositories \u2581extracts \u2581metadata \u2581about \u2581 repositories \u2581declared \u2581in \u2581a \u2581// \u2581file ."], "bleu": 0.20331710659744467, "rouge_l": 0.4582159624413146}
{"id": 2381, "predictions": ["\u2581// \u2581 s Pools s Get \u2581returns \u2581the \u2581list \u2581of \u2581volumes \u2581that \u2581are \u2581 owned \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581Returns \u2581all \u2581storage \u2581volumes \u2581attached \u2581to \u2581a \u2581given \u2581storage \u2581pool \u2581on \u2581the \u2581given \u2581// \u2581node ."], "bleu": 0.08097785064266201, "rouge_l": 0.2244710211591536}
{"id": 3145, "predictions": ["\u2581// \u2581 Pipeline Req From Info \u2581creates \u2581a \u2581new \u2581 exec \u2581service ."], "references": ["\u2581// \u2581 Pipeline Req From Info \u2581converts \u2581a \u2581 Pipeline Info \u2581into \u2581a \u2581Create Pipeline Request ."], "bleu": 0.34754009089004634, "rouge_l": 0.5859124866595516}
{"id": 2147, "predictions": ["\u2581// \u2581 U name \u2581returns \u2581the \u2581 hyper d \u2581 U name \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 U name \u2581returns \u2581 Ut s name \u2581as \u2581strings"], "bleu": 0.2680165156355778, "rouge_l": 0.5047281323877069}
{"id": 2561, "predictions": ["\u2581// \u2581Generate \u2581creates \u2581a \u2581new \u2581 Stmt \u2581with \u2581the \u2581given \u2581 content ."], "references": ["\u2581// \u2581Generate \u2581 plumbing \u2581and \u2581 wiring \u2581 code \u2581for \u2581the \u2581desired \u2581statement ."], "bleu": 0.14386773665469615, "rouge_l": 0.36791314837153194}
{"id": 3594, "predictions": ["\u2581// \u2581 getConnection Relay \u2581returns \u2581a \u2581connection \u2581to \u2581the \u2581peer \u2581pool ."], "references": ["\u2581// \u2581 getConnection Relay \u2581gets \u2581a \u2581connection , \u2581and \u2581uses \u2581the \u2581given \u2581timeout \u2581to \u2581 laz ily \u2581// \u2581create \u2581a \u2581context \u2581if \u2581a \u2581new \u2581connection \u2581is \u2581required ."], "bleu": 0.09584990429964203, "rouge_l": 0.3730886850152905}
{"id": 3276, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581a \u2581 JWS \u2581blob \u2581from \u2581the \u2581registry ."], "references": ["\u2581// \u2581 getExtensions Signatures \u2581returns \u2581 signatures \u2581from \u2581the \u2581 X - Registry - Supports - Signatures \u2581API \u2581extension , \u2581// \u2581using \u2581the \u2581original \u2581 data \u2581structures ."], "bleu": 0.06435667558123334, "rouge_l": 0.2646420824295011}
{"id": 2509, "predictions": ["\u2581// \u2581 Subscribe s \u2581a \u2581 set \u2581of \u2581 handlers \u2581for \u2581a \u2581given \u2581 container ."], "references": ["\u2581// \u2581 Operations \u2581returns \u2581all \u2581operations \u2581in \u2581the \u2581cluster , \u2581filtered \u2581by \u2581the \u2581given \u2581clause ."], "bleu": 0.11502783619900048, "rouge_l": 0.25}
{"id": 2393, "predictions": ["\u2581// \u2581 S all GetType ID \u2581returns \u2581the \u2581 S dc \u2581 ID \u2581of \u2581a \u2581given \u2581volume ."], "references": ["\u2581// \u2581 S toragePoolVolume GetType ID \u2581returns \u2581the \u2581 ID \u2581of \u2581a \u2581storage \u2581volume \u2581on \u2581a \u2581given \u2581// \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581storage \u2581volume \u2581 type , \u2581on \u2581the"], "bleu": 0.2505994269258008, "rouge_l": 0.5183006535947713}
{"id": 3131, "predictions": ["\u2581// \u2581 push Image \u2581 push \u2581image \u2581to \u2581image"], "references": ["\u2581// \u2581 push Image \u2581pushes \u2581a \u2581docker \u2581image ."], "bleu": 0.4111336169005197, "rouge_l": 0.5555555555555556}
{"id": 2922, "predictions": ["\u2581// \u2581Use AuthToken Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581 this \u2581command"], "references": ["\u2581// \u2581Use AuthToken Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581lets \u2581a \u2581user \u2581 get \u2581a \u2581 pac hyd er m \u2581// \u2581 token \u2581on \u2581be half \u2581of \u2581themselves \u2581or"], "bleu": 0.1236552163711529, "rouge_l": 0.3907473309608541}
{"id": 2988, "predictions": ["\u2581// \u2581 New Amazon Client FromEnv \u2581creates \u2581a \u2581new \u2581Amazon \u2581client \u2581 config \u2581from \u2581the \u2581 env \u2581environment"], "references": ["\u2581// \u2581 New Amazon Client FromEnv \u2581creates \u2581a \u2581Amazon \u2581client \u2581based \u2581on \u2581environment \u2581variables ."], "bleu": 0.4699152171992906, "rouge_l": 0.6777777777777778}
{"id": 2141, "predictions": ["\u2581// \u2581ensure Update sAre Applied \u2581checks \u2581if \u2581the \u2581given \u2581 set \u2581of \u2581 Attributes \u2581are \u2581valid ."], "references": ["\u2581// \u2581Apply \u2581any \u2581pending \u2581update \u2581that \u2581was \u2581not \u2581yet \u2581applied ."], "bleu": 0.07994607499472013, "rouge_l": 0.14859926918392205}
{"id": 3351, "predictions": ["\u2581// \u2581verify And Extract Signature \u2581verifies \u2581the \u2581signature \u2581of \u2581the \u2581signature \u2581of \u2581the \u2581given \u2581// \u2581 Signature \u2581signature ."], "references": ["\u2581// \u2581verify And Extract Signature \u2581verifies \u2581that \u2581 unverified Signature \u2581has \u2581been \u2581signed , \u2581and \u2581that \u2581its \u2581pr inc ip ial \u2581components \u2581// \u2581match \u2581expected \u2581values , \u2581both \u2581as \u2581specified"], "bleu": 0.17864275524045295, "rouge_l": 0.3138263665594856}
{"id": 2200, "predictions": ["\u2581// \u2581 Rename \u2581rename s \u2581a \u2581backup \u2581file ."], "references": ["\u2581// \u2581 Rename \u2581rename s \u2581a \u2581 container \u2581backup"], "bleu": 0.6606328636027614, "rouge_l": 0.7777777777777778}
{"id": 3796, "predictions": ["\u2581// \u2581 Introspect State \u2581returns \u2581a \u2581 Connection Runtime State"], "references": ["\u2581// \u2581 Introspect State \u2581returns \u2581the \u2581runtime \u2581state \u2581for \u2581 this \u2581connection ."], "bleu": 0.35550251920851145, "rouge_l": 0.5097493036211699}
{"id": 3523, "predictions": ["\u2581// \u2581 NewValue \u2581returns \u2581a \u2581new \u2581 Value \u2581that \u2581 contains \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 NewValue \u2581builds \u2581a \u2581 Value \u2581using \u2581typ \u2581and \u2581val . \u2581If \u2581the \u2581value \u2581and \u2581typ \u2581// \u2581don ' t \u2581match , \u2581it \u2581returns \u2581an \u2581error ."], "bleu": 0.09138072211156525, "rouge_l": 0.346590909090909}
{"id": 3440, "predictions": ["\u2581// \u2581 SetSize \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581number \u2581of \u2581workers \u2581to \u2581 n ."], "references": ["\u2581// \u2581 SetSize \u2581changes \u2581the \u2581total \u2581number \u2581of \u2581workers \u2581in \u2581the \u2581 Pool . \u2581This \u2581can \u2581be \u2581called \u2581// \u2581by \u2581any \u2581goroutine \u2581at \u2581any \u2581time \u2581unless \u2581the \u2581 Pool \u2581has"], "bleu": 0.09664207913700781, "rouge_l": 0.370945945945946}
{"id": 3647, "predictions": ["\u2581// \u2581 WriteRequest \u2581is \u2581a \u2581convenience \u2581method \u2581for \u2581 serializing \u2581a \u2581 text \u2581 call \u2581to \u2581the \u2581// \u2581 T Channel \u2581interface ."], "references": ["\u2581// \u2581 WriteRequest \u2581writes \u2581a \u2581http . Request \u2581to \u2581the \u2581given \u2581 writers ."], "bleu": 0.12962472880491877, "rouge_l": 0.4522706209453197}
{"id": 2217, "predictions": ["\u2581// \u2581do Containers Get FromNode \u2581retrieves \u2581all \u2581 container \u2581 data \u2581from \u2581the \u2581given \u2581node ."], "references": ["\u2581// \u2581 Fetch \u2581information \u2581about \u2581the \u2581containers \u2581on \u2581the \u2581given \u2581remote \u2581node , \u2581using \u2581the \u2581// \u2581rest \u2581API \u2581and \u2581with \u2581a \u2581timeout \u2581of \u2581 30 \u2581seconds ."], "bleu": 0.06505122655079308, "rouge_l": 0.26676384839650147}
{"id": 2448, "predictions": ["\u2581// \u2581 Container Node Address \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581node \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Container Node Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581node \u2581 hosting \u2581the \u2581 container \u2581// \u2581with \u2581the \u2581given \u2581 name \u2581in \u2581the \u2581given \u2581project . \u2581// \u2581// \u2581It"], "bleu": 0.3388022127398795, "rouge_l": 0.6379084967320262}
{"id": 2181, "predictions": ["\u2581// \u2581Lazy Handler \u2581returns \u2581a \u2581handler \u2581that \u2581serves \u2581the \u2581given \u2581handler ."], "references": ["\u2581// \u2581Lazy Handler \u2581writes \u2581all \u2581values \u2581to \u2581the \u2581wrapped \u2581handler \u2581after \u2581 evaluating \u2581// \u2581any \u2581lazy \u2581function s \u2581in \u2581the \u2581record ' s \u2581context . \u2581It \u2581is \u2581already \u2581wrapped \u2581//"], "bleu": 0.04962965758858181, "rouge_l": 0.26521739130434785}
{"id": 3794, "predictions": ["\u2581// \u2581 Introspect State \u2581 groups \u2581the \u2581 introspection \u2581 info \u2581for \u2581a \u2581 introspection ."], "references": ["\u2581// \u2581 Introspect State \u2581returns \u2581the \u2581runtime \u2581state \u2581of \u2581the \u2581sub channels ."], "bleu": 0.23287896954139942, "rouge_l": 0.42165898617511516}
{"id": 3838, "predictions": ["\u2581// \u2581 Write Args \u2581returns \u2581the \u2581 data \u2581of \u2581the \u2581 T Channel \u2581 call ."], "references": ["\u2581// \u2581 Write Args \u2581writes \u2581the \u2581given \u2581arguments \u2581to \u2581the \u2581 call , \u2581and \u2581returns \u2581the \u2581response \u2581args ."], "bleu": 0.2486183780421325, "rouge_l": 0.5064575645756457}
{"id": 2314, "predictions": ["\u2581// \u2581 getProfile Containers Info \u2581returns \u2581the \u2581 container ' s \u2581 container \u2581information \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Query \u2581the \u2581 db \u2581for \u2581information \u2581about \u2581containers \u2581associated \u2581with \u2581the \u2581given \u2581// \u2581profile ."], "bleu": 0.12673718536830808, "rouge_l": 0.4020715630885123}
{"id": 2670, "predictions": ["\u2581// \u2581 Is Address Covered \u2581returns \u2581true \u2581if \u2581the \u2581address \u2581is \u2581the \u2581same \u2581as \u2581the \u2581address \u2581// \u2581address , \u2581and \u2581false \u2581otherwise ."], "references": ["\u2581// \u2581 Is Address Covered \u2581detect s \u2581if \u2581network \u2581address 1 \u2581is \u2581actually \u2581 covered \u2581by \u2581// \u2581address 2, \u2581in \u2581the \u2581sense \u2581that \u2581they \u2581are \u2581either \u2581the \u2581same \u2581address \u2581or"], "bleu": 0.1955558406456233, "rouge_l": 0.4054380664652568}
{"id": 3087, "predictions": ["\u2581// \u2581 getTree For File \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581 data \u2581file \u2581for \u2581a \u2581file"], "references": ["\u2581// \u2581 getTree For File \u2581is \u2581like \u2581 getTree For Commit \u2581except \u2581that \u2581it \u2581can \u2581handle \u2581open \u2581commits . \u2581// \u2581It \u2581takes \u2581a \u2581file \u2581instead \u2581of \u2581a \u2581commit \u2581so \u2581that"], "bleu": 0.13967812699315366, "rouge_l": 0.32972972972972975}
{"id": 3220, "predictions": ["\u2581// \u2581 coalesce Adjacent Records \u2581records \u2581the \u2581 size \u2581of \u2581a \u2581 slice \u2581of \u2581records \u2581that \u2581are \u2581in \u2581the \u2581 size \u2581// \u2581of \u2581the \u2581 groups ."], "references": ["\u2581// \u2581 coalesce Adjacent Records \u2581 coalesce s \u2581the \u2581list \u2581of \u2581records \u2581into \u2581 groups \u2581of \u2581// \u2581 adjacent \u2581equal , \u2581or \u2581un equal \u2581counts ."], "bleu": 0.22868676401761662, "rouge_l": 0.45437616387337065}
{"id": 2265, "predictions": ["\u2581// \u2581update \u2581updates \u2581the \u2581 map \u2581of \u2581values \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Update \u2581the \u2581current \u2581values \u2581in \u2581the \u2581 map \u2581using \u2581the \u2581newly \u2581provided \u2581ones . \u2581Return \u2581a \u2581// \u2581list \u2581of \u2581 key \u2581names \u2581that \u2581were \u2581actually \u2581changed \u2581and \u2581an"], "bleu": 0.1101034939578856, "rouge_l": 0.3473309608540925}
{"id": 2205, "predictions": ["\u2581// \u2581 Init TLSConfig \u2581returns \u2581a \u2581 TLS \u2581configuration \u2581for \u2581the \u2581 TLS \u2581 config ."], "references": ["\u2581// \u2581 Init TLSConfig \u2581returns \u2581a \u2581 tls . Config \u2581populated \u2581with \u2581default \u2581encryption \u2581// \u2581parameters . \u2581This \u2581is \u2581used \u2581as \u2581 baseline \u2581 config \u2581for \u2581both \u2581client \u2581and \u2581server"], "bleu": 0.20152731891314812, "rouge_l": 0.41216216216216217}
{"id": 3349, "predictions": ["\u2581// \u2581MarshalJSON \u2581implements \u2581the \u2581 json . Marshaler \u2581interface \u2581for \u2581 MediaType Signature"], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581the \u2581 json . Marshaler \u2581interface ."], "bleu": 0.6767781116542884, "rouge_l": 0.8014598540145984}
{"id": 3571, "predictions": ["\u2581// \u2581 ReadResponse \u2581returns \u2581a \u2581 Response \u2581from \u2581a \u2581 T Channel \u2581 Response ."], "references": ["\u2581// \u2581 ReadResponse \u2581reads \u2581a \u2581http . Response \u2581from \u2581the \u2581given \u2581 readers ."], "bleu": 0.20149416157064579, "rouge_l": 0.5551763367463025}
{"id": 2997, "predictions": ["\u2581// \u2581 Run IO FromName \u2581runs \u2581the \u2581command \u2581to \u2581 exit \u2581 dir"], "references": ["\u2581// \u2581 Run IO DirPath \u2581runs \u2581the \u2581command \u2581with \u2581the \u2581given \u2581 IO \u2581and \u2581arguments \u2581in \u2581the \u2581given \u2581directory \u2581specified \u2581by \u2581 dirPath ."], "bleu": 0.16131287568259486, "rouge_l": 0.4617325483599663}
{"id": 2388, "predictions": ["\u2581// \u2581 S all Update \u2581 - \u2581 get \u2581the \u2581 s take \u2581 group \u2581of \u2581volume \u2581volume ."], "references": ["\u2581// \u2581 S toragePoolVolume Update \u2581updates \u2581the \u2581storage \u2581volume \u2581attached \u2581to \u2581a \u2581given \u2581storage \u2581// \u2581pool ."], "bleu": 0.14253911354181859, "rouge_l": 0.3928242870285189}
{"id": 2806, "predictions": ["\u2581// \u2581 List Commit F \u2581lists \u2581all \u2581 active \u2581 active \u2581 active \u2581 api"], "references": ["\u2581// \u2581 List Commit F \u2581lists \u2581commits , \u2581calling \u2581 f \u2581with \u2581each \u2581commit . \u2581// \u2581If \u2581only \u2581` repo ` \u2581is \u2581given , \u2581all \u2581commits \u2581in \u2581the \u2581repo \u2581are"], "bleu": 0.1458783355867521, "rouge_l": 0.2934707903780069}
{"id": 2820, "predictions": ["\u2581// \u2581 PutObject \u2581 - \u2581 get \u2581a \u2581new \u2581object \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581 PutObject \u2581puts \u2581a \u2581value \u2581into \u2581the \u2581object \u2581store \u2581and \u2581tags \u2581it \u2581with \u25810 \u2581or \u2581more \u2581tags ."], "bleu": 0.14214568275185774, "rouge_l": 0.33002705139765554}
{"id": 2476, "predictions": ["\u2581// \u2581 Container Backups Get Expired \u2581returns \u2581the \u2581list \u2581of \u2581 active \u2581 active \u2581 data \u2581// \u2581 owned \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Container Backups Get Expired \u2581returns \u2581a \u2581list \u2581of \u2581expired \u2581 container \u2581 backups ."], "bleu": 0.33257789882723987, "rouge_l": 0.635968722849696}
{"id": 3293, "predictions": ["\u2581// \u2581update Embedded Docker Reference \u2581updates \u2581the \u2581 Embedded Image \u2581 data \u2581from \u2581the \u2581 v DS \u2581manifest"], "references": ["\u2581// \u2581update Embedded Docker Reference \u2581handles \u2581the \u2581Docker \u2581reference \u2581embedded \u2581in \u2581Docker \u2581schema 1 \u2581 manifests ."], "bleu": 0.2680165156355778, "rouge_l": 0.4020715630885123}
{"id": 2553, "predictions": ["\u2581// \u2581 Done \u2581is \u2581called \u2581when \u2581a \u2581message \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581 Done \u2581prints \u2581the \u2581final \u2581 status \u2581and \u2581prevents \u2581any \u2581update"], "bleu": 0.2044800736021839, "rouge_l": 0.3333333333333333}
{"id": 2546, "predictions": ["\u2581// \u2581profile Delete \u2581returns \u2581the \u2581 set \u2581of \u2581 active \u2581 active \u2581 active \u2581 active \u2581 active \u2581// \u2581services ."], "references": ["\u2581// \u2581The \u2581handler \u2581for \u2581the \u2581delete \u2581operation ."], "bleu": 0.0690889519686715, "rouge_l": 0.2250922509225092}
{"id": 2914, "predictions": ["\u2581// \u2581 Logout Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581 logout ."], "references": ["\u2581// \u2581 Logout Cmd \u2581returns \u2581a \u2581 cobra . Command \u2581that \u2581deletes \u2581your \u2581local \u2581 Pac hyd er m \u2581// \u2581credential , \u2581logging \u2581you \u2581out \u2581of \u2581your \u2581cluster . \u2581Note"], "bleu": 0.11252479775872545, "rouge_l": 0.3907473309608541}
{"id": 2964, "predictions": ["\u2581// \u2581 List Datum \u2581returns \u2581a \u2581 List Datum Response \u2581from \u2581the \u2581 APIClient ."], "references": ["\u2581// \u2581 List Datum \u2581returns \u2581 info \u2581about \u2581all \u2581datum s \u2581in \u2581a \u2581 Job"], "bleu": 0.3489981252688509, "rouge_l": 0.4666666666666668}
{"id": 2985, "predictions": ["\u2581// \u2581 New Mini o Client From Secret \u2581creates \u2581a \u2581 Client \u2581from \u2581a \u2581 secret \u2581 name \u2581and \u2581 secret \u2581 name ."], "references": ["\u2581// \u2581 New Mini o Client From Secret \u2581constructs \u2581an \u2581 s 3 \u2581compatible \u2581client \u2581by \u2581reading \u2581// \u2581credentials \u2581from \u2581a \u2581 mounted \u2581Amazon Secret . \u2581You \u2581may \u2581pass \u2581\"\""], "bleu": 0.3003953847936575, "rouge_l": 0.4720238095238095}
{"id": 2761, "predictions": ["\u2581// \u2581increment GC Generation \u2581 increments \u2581the \u2581generation \u2581for \u2581the \u2581given \u2581generation ."], "references": ["\u2581// \u2581increment GC Generation \u2581 increments \u2581the \u2581 GC \u2581generation \u2581number \u2581in \u2581etcd"], "bleu": 0.5296074933406222, "rouge_l": 0.6153846153846153}
{"id": 2789, "predictions": ["\u2581// \u2581 Shorthand Input \u2581returns \u2581the \u2581input \u2581 name \u2581for \u2581the \u2581input \u2581input ."], "references": ["\u2581// \u2581 Shorthand Input \u2581renders \u2581a \u2581 pps . Input \u2581as \u2581a \u2581short , \u2581readable \u2581string"], "bleu": 0.23197932387911266, "rouge_l": 0.3952483801295896}
{"id": 2989, "predictions": ["\u2581// \u2581 NewClient FromURL And Secret \u2581returns \u2581a \u2581client \u2581to \u2581a \u2581 Client \u2581with \u2581the \u2581given \u2581 Secret URL \u2581and \u2581 Secret ."], "references": ["\u2581// \u2581 NewClient FromURL And Secret \u2581constructs \u2581a \u2581client \u2581by \u2581parsing \u2581` URL ` \u2581and \u2581then \u2581// \u2581constructing \u2581the \u2581correct \u2581client \u2581for \u2581that \u2581 URL \u2581using \u2581 secrets ."], "bleu": 0.23206804715268428, "rouge_l": 0.48980852378011125}
{"id": 3334, "predictions": ["\u2581// \u2581create Signature \u2581returns \u2581a \u2581signature \u2581of \u2581the \u2581given \u2581 key \u2581and \u2581the \u2581 key \u2581// \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581create Signature \u2581creates \u2581a \u2581new \u2581signature \u2581of \u2581manifest \u2581using \u2581 key Identity ."], "bleu": 0.15448759309616733, "rouge_l": 0.5335276967930028}
{"id": 2404, "predictions": ["\u2581// \u2581 Compare Configs \u2581compares \u2581two \u2581 keys \u2581and \u2581 keys \u2581are \u2581equal \u2581to \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Compare Configs \u2581compares \u2581two \u2581 config \u2581maps \u2581and \u2581returns \u2581an \u2581error \u2581if \u2581they \u2581 differ ."], "bleu": 0.39696685122270786, "rouge_l": 0.5555555555555556}
{"id": 2428, "predictions": ["\u2581// \u2581 tls ClientConfig \u2581returns \u2581the \u2581 TLS \u2581configuration \u2581for \u2581the \u2581given \u2581certificate ."], "references": ["\u2581// \u2581Return \u2581a \u2581 TLS \u2581configuration \u2581suitable \u2581for \u2581 establish ing \u2581inter - node \u2581network \u2581// \u2581connections \u2581using \u2581the \u2581cluster \u2581certificate ."], "bleu": 0.1255359889155662, "rouge_l": 0.4273204903677758}
{"id": 2516, "predictions": ["\u2581// \u2581validate \u2581validates \u2581the \u2581 key \u2581and \u2581 type \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581Tells \u2581if \u2581the \u2581given \u2581value \u2581can \u2581be \u2581assigned \u2581to \u2581 this \u2581particular \u2581 Value \u2581instance ."], "bleu": 0.09389419352536649, "rouge_l": 0.3170478170478171}
{"id": 2821, "predictions": ["\u2581// \u2581 PutObject Split \u2581 - \u2581 APIClient s \u2581a \u2581 slice \u2581of \u2581 data \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 PutObject Split \u2581is \u2581the \u2581same \u2581as \u2581 PutObject \u2581except \u2581that \u2581the \u2581 data \u2581is \u2581 splitted \u2581// \u2581into \u2581several \u2581smaller \u2581objects . \u2581This \u2581is \u2581primarily \u2581useful \u2581if \u2581you"], "bleu": 0.13474265350623288, "rouge_l": 0.3368098159509202}
{"id": 3352, "predictions": ["\u2581// \u2581 Rewrite Reference \u2581replaces \u2581the \u2581reference \u2581to \u2581the \u2581 ref , \u2581if \u2581it \u2581is \u2581a \u2581valid \u2581// \u2581 ref , \u2581 empty \u2581string \u2581is \u2581returned ."], "references": ["\u2581// \u2581 Rewrite Reference \u2581will \u2581substitute \u2581the \u2581provided \u2581reference \u2581` prefix ` \u2581to \u2581the \u2581// \u2581endpoints \u2581` location ` \u2581from \u2581the \u2581` ref ` \u2581and \u2581creates \u2581a \u2581new \u2581named \u2581reference"], "bleu": 0.14721833264514383, "rouge_l": 0.34757834757834755}
{"id": 3971, "predictions": ["\u2581// \u2581 sort Expr Labels \u2581sorts \u2581the \u2581labels \u2581in \u2581 form \u2581 form ."], "references": ["\u2581// \u2581 sort Expr Labels \u2581sorts \u2581lists \u2581of \u2581strings \u2581using \u2581the \u2581same \u2581order \u2581as \u2581build ifier . \u2581// \u2581Build ifier \u2581also \u2581sorts \u2581string \u2581lists , \u2581but \u2581not \u2581those \u2581 involved"], "bleu": 0.13951560524734033, "rouge_l": 0.3412587412587413}
{"id": 2382, "predictions": ["\u2581// \u2581 StoragePool Volumes Role \u2581returns \u2581a \u2581list \u2581of \u2581 pools \u2581for \u2581a \u2581given \u2581 name ."], "references": ["\u2581// \u2581 StoragePool Volumes GetType \u2581 get \u2581all \u2581storage \u2581volumes \u2581attached \u2581to \u2581a \u2581given \u2581// \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581volume \u2581 type , \u2581on \u2581the \u2581given \u2581node ."], "bleu": 0.130626607332335, "rouge_l": 0.4152484683458136}
{"id": 4087, "predictions": ["\u2581// \u2581Remove Image \u2581removes \u2581a \u2581image \u2581from \u2581the \u2581registry ."], "references": ["\u2581// \u2581Remove Image \u2581removes \u2581an \u2581image \u2581manifest \u2581from \u2581a \u2581remote \u2581registry \u2581 v 2 \u2581server , \u2581returning \u2581an \u2581error \u2581// \u2581in \u2581case \u2581of \u2581failure ."], "bleu": 0.09309573652098051, "rouge_l": 0.42434782608695654}
{"id": 4082, "predictions": ["\u2581// \u2581 Proxy Instance \u2581 - \u2581 get \u2581a \u2581proxy \u2581instance \u2581to \u2581the \u2581instance \u2581of \u2581the \u2581instance \u2581instance"], "references": ["\u2581// \u2581 Proxy Instance \u2581is \u2581a \u2581proxy \u2581between \u2581 t sur u \u2581and \u2581the \u2581service \u2581instance . \u2581// \u2581This \u2581method \u2581allow \u2581 customize d \u2581service \u2581instance \u2581methods ."], "bleu": 0.143104127619767, "rouge_l": 0.37654320987654327}
{"id": 3933, "predictions": ["\u2581// \u2581run Client \u2581is \u2581a \u2581long \u2581running \u2581routine \u2581to \u2581run \u2581the \u2581 net . Dial"], "references": ["\u2581// \u2581run Client \u2581performs \u2581the \u2581main \u2581work \u2581of \u2581the \u2581client . \u2581It \u2581attempts \u2581to \u2581 connect \u2581// \u2581to \u2581the \u2581server \u2581via \u2581a \u2581 UNIX - domain \u2581socket . \u2581If \u2581the"], "bleu": 0.0689816059082601, "rouge_l": 0.2934707903780069}
{"id": 2360, "predictions": ["\u2581// \u2581 StoragePool IDs Not Pending \u2581returns \u2581a \u2581list \u2581of \u2581 ids \u2581that \u2581are \u2581 owned \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 StoragePool IDs Not Pending \u2581returns \u2581a \u2581 map \u2581 assoc i ating \u2581each \u2581storage \u2581pool \u2581 name \u2581to \u2581its \u2581 ID . \u2581// \u2581// \u2581 Pending \u2581storage \u2581"], "bleu": 0.24826416714042604, "rouge_l": 0.42468354430379746}
{"id": 2715, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581configuration \u2581to \u2581the \u2581 config \u2581file ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581configuration \u2581in \u2581' c ' \u2581to \u2581 this \u2581machine ' s \u2581 Pac hyd er m \u2581 config \u2581// \u2581file ."], "bleu": 0.18010223021525654, "rouge_l": 0.5428802588996763}
{"id": 2881, "predictions": ["\u2581// \u2581 Read \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581next \u2581 merge \u2581node ."], "bleu": 0.24384183193426084, "rouge_l": 0.5763779527559055}
{"id": 2420, "predictions": ["\u2581// \u2581 Sync Projects \u2581returns \u2581all \u2581projects \u2581of \u2581the \u2581 RBAC \u2581 config ."], "references": ["\u2581// \u2581 Sync Projects \u2581updates \u2581the \u2581list \u2581of \u2581projects \u2581in \u2581 RBAC"], "bleu": 0.30934588294313714, "rouge_l": 0.5460358056265985}
{"id": 2444, "predictions": ["\u2581// \u2581 Reset \u2581 clear s \u2581the \u2581 content \u2581of \u2581the \u2581file \u2581and \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581file ."], "references": ["\u2581// \u2581 Reset \u2581an \u2581 auto - generated \u2581source \u2581file , \u2581writing \u2581a \u2581new \u2581 empty \u2581file \u2581header ."], "bleu": 0.1324317283199537, "rouge_l": 0.40363937138130684}
{"id": 2743, "predictions": ["\u2581// \u2581Parse File \u2581parses \u2581a \u2581 URL \u2581from \u2581a \u2581 File ."], "references": ["\u2581// \u2581Parse File \u2581takes \u2581an \u2581argument \u2581of \u2581the \u2581 form \u2581\" repo [@ branch - or - commit [: path ]] \", \u2581and \u2581// \u2581returns \u2581the \u2581corresponding \u2581* pfs ."], "bleu": 0.04775343112354423, "rouge_l": 0.22101449275362317}
{"id": 2061, "predictions": ["\u2581// \u2581 raft Network Transport \u2581creates \u2581a \u2581new \u2581 raft . Transport ."], "references": ["\u2581// \u2581Create \u2581a \u2581network \u2581 raft \u2581transport \u2581that \u2581will \u2581handle \u2581connections \u2581using \u2581a \u2581// \u2581 raft http . Handler ."], "bleu": 0.13655918601915307, "rouge_l": 0.4669856459330144}
{"id": 3313, "predictions": ["\u2581// \u2581new Policy Reference Match FromJSON \u2581converts \u2581a \u2581 json \u2581 data \u2581into \u2581a \u2581 Policy Reference Match FromJSON \u2581// \u2581struct ."], "references": ["\u2581// \u2581new Policy Reference Match FromJSON \u2581parses \u2581JSON \u2581 data \u2581into \u2581a \u2581 Policy Reference Match \u2581implementation ."], "bleu": 0.5579235335264043, "rouge_l": 0.763772954924875}
{"id": 3439, "predictions": ["\u2581// \u2581 Process Timed \u2581calls \u2581the \u2581 mutex \u2581of \u2581the \u2581 mutex ."], "references": ["\u2581// \u2581 Process Timed \u2581will \u2581use \u2581the \u2581 Pool \u2581to \u2581process \u2581a \u2581payload \u2581and \u2581synchronously \u2581return \u2581// \u2581the \u2581result . \u2581If \u2581the \u2581timeout \u2581occurs \u2581before \u2581the \u2581job \u2581has \u2581finished \u2581the"], "bleu": 0.0880554129240232, "rouge_l": 0.3473309608540925}
{"id": 2451, "predictions": ["\u2581// \u2581 Container sBy NodeName \u2581returns \u2581a \u2581 map \u2581of \u2581 container \u2581 ids \u2581for \u2581a \u2581given \u2581 group"], "references": ["\u2581// \u2581 Container sBy NodeName \u2581returns \u2581a \u2581 map \u2581 assoc i ating \u2581each \u2581 container \u2581to \u2581the \u2581 name \u2581of \u2581// \u2581its \u2581node ."], "bleu": 0.3780488661667278, "rouge_l": 0.5323636363636364}
{"id": 2958, "predictions": ["\u2581// \u2581 List Job F \u2581lists \u2581the \u2581 set \u2581of \u2581 active \u2581 subscriptions \u2581for \u2581a \u2581given \u2581 Commit ."], "references": ["\u2581// \u2581 List Job F \u2581returns \u2581 info \u2581about \u2581all \u2581jobs , \u2581calling \u2581 f \u2581with \u2581each \u2581 JobInfo . \u2581// \u2581If \u2581 f \u2581returns \u2581an \u2581error \u2581iteration \u2581of \u2581jobs"], "bleu": 0.16138643716978932, "rouge_l": 0.34746835443037977}
{"id": 2323, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581a \u2581new \u2581database \u2581connection ."], "references": ["\u2581// \u2581 Open \u2581the \u2581cluster \u2581database \u2581object . \u2581// \u2581// \u2581The \u2581 name \u2581argument \u2581is \u2581the \u2581 name \u2581of \u2581the \u2581cluster \u2581database . \u2581It \u2581defaults \u2581to \u2581// \u2581' db ."], "bleu": 0.035140292001790474, "rouge_l": 0.22932330827067668}
{"id": 3407, "predictions": ["\u2581// \u2581create Un tar TempDir \u2581creates \u2581a \u2581new \u2581directory \u2581for \u2581the \u2581given \u2581 ref . \u2581// \u2581If \u2581the \u2581 ref \u2581is \u2581not \u2581a \u2581directory , \u2581it \u2581will \u2581be \u2581closed ."], "references": ["\u2581// \u2581creates \u2581the \u2581temporary \u2581directory \u2581and \u2581copies \u2581the \u2581tar red \u2581 content \u2581to \u2581it"], "bleu": 0.05705093314691302, "rouge_l": 0.291866028708134}
{"id": 2286, "predictions": ["\u2581// \u2581find N vid i a Minor \u2581returns \u2581the \u2581 N vid i a \u2581 dir \u2581of \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Return \u2581string \u2581for \u2581minor \u2581number \u2581of \u2581 n vid i a \u2581device \u2581corresponding \u2581to \u2581the \u2581given \u2581pc i \u2581 id"], "bleu": 0.14264965190603165, "rouge_l": 0.3736600306278714}
{"id": 2203, "predictions": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581rows \u2581in \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581rows \u2581in \u2581the \u2581given \u2581 table ."], "bleu": 0.7130446095917854, "rouge_l": 0.8345771144278606}
{"id": 4057, "predictions": ["\u2581// \u2581choose Node \u2581adjust s \u2581the \u2581nodes \u2581that \u2581have \u2581been \u2581 set \u2581in \u2581the \u2581cluster"], "references": ["\u2581// \u2581choose Node ToAdd \u2581finds \u2581which \u2581is \u2581the \u2581node \u2581with \u2581the \u2581minimum \u2581number \u2581of \u2581containers \u2581// \u2581and \u2581returns \u2581it"], "bleu": 0.12977561806938034, "rouge_l": 0.28800755429650615}
{"id": 4065, "predictions": ["\u2581// \u2581 New Filtered App Informer \u2581constructs \u2581a \u2581new \u2581 informer \u2581for \u2581 App \u2581 type . \u2581// \u2581Always \u2581prefer \u2581using \u2581an \u2581 informer \u2581factory \u2581to \u2581 get \u2581a \u2581shared"], "references": ["\u2581// \u2581 New Filtered App Informer \u2581constructs \u2581a \u2581new \u2581 informer \u2581for \u2581 App \u2581 type . \u2581// \u2581Always \u2581prefer \u2581using \u2581an \u2581 informer \u2581factory \u2581to \u2581 get \u2581a \u2581shared"], "bleu": 1.0, "rouge_l": 1.0}
{"id": 2526, "predictions": ["\u2581// \u2581 Update S nat \u2581updates \u2581the \u2581 S 3 \u2581 info \u2581for \u2581a \u2581given \u2581 ETag"], "references": ["\u2581// \u2581 Update S toragePoolVolume \u2581updates \u2581the \u2581volume \u2581to \u2581match \u2581the \u2581provided \u2581 S toragePoolVolume \u2581struct"], "bleu": 0.25772294506990867, "rouge_l": 0.48751248751248744}
{"id": 2573, "predictions": ["\u2581// \u2581 ContainerID \u2581returns \u2581the \u2581 container ' s \u2581 ID \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 ContainerID \u2581return \u2581the \u2581 ID \u2581of \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 key ."], "bleu": 0.22708565945257045, "rouge_l": 0.4944275582573455}
{"id": 3727, "predictions": ["\u2581// \u2581 New Re base \u2581creates \u2581a \u2581new \u2581 Re image ."], "references": ["\u2581// \u2581 New Re layer \u2581constructs \u2581a \u2581 Re layer ."], "bleu": 0.3541698766144061, "rouge_l": 0.7011494252873562}
{"id": 2199, "predictions": ["\u2581// \u2581backup Create \u2581creates \u2581a \u2581new \u2581backup ."], "references": ["\u2581// \u2581Create \u2581a \u2581new \u2581backup"], "bleu": 0.3155984539112945, "rouge_l": 0.6421052631578947}
{"id": 3260, "predictions": ["\u2581// \u2581 Finish WithOptions \u2581implements \u2581the \u2581 opentracing . Span \u2581interface ."], "references": ["\u2581// \u2581 Finish WithOptions \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.3706866381788037, "rouge_l": 0.7393939393939394}
{"id": 3427, "predictions": ["\u2581// \u2581 Schema 1 From Components \u2581returns \u2581a \u2581 Schema \u2581that \u2581 contains \u2581all \u2581 data \u2581in \u2581the \u2581 set \u2581of \u2581// \u2581 s _ schema _ layers ."], "references": ["\u2581// \u2581 Schema 1 From Components \u2581creates \u2581an \u2581 Schema 1 \u2581manifest \u2581instance \u2581from \u2581the \u2581supplied \u2581 data ."], "bleu": 0.2371404129011792, "rouge_l": 0.4762242725337118}
{"id": 3798, "predictions": ["\u2581// \u2581 Introspect State \u2581creates \u2581a \u2581new \u2581 relay Item State ."], "references": ["\u2581// \u2581 Introspect State \u2581returns \u2581the \u2581runtime \u2581state \u2581for \u2581 this \u2581 relay Items ."], "bleu": 0.2678242325240628, "rouge_l": 0.5083333333333334}
{"id": 2383, "predictions": ["\u2581// \u2581 StoragePool VolumeSnapshot s Role \u2581returns \u2581a \u2581list \u2581of \u2581 Volume \u2581 Volume \u2581 type"], "references": ["\u2581// \u2581 StoragePool VolumeSnapshot s GetType \u2581 get \u2581all \u2581snapshots \u2581of \u2581a \u2581storage \u2581volume \u2581// \u2581attached \u2581to \u2581a \u2581given \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581volume \u2581 type , \u2581on \u2581the"], "bleu": 0.1430462819193642, "rouge_l": 0.370945945945946}
{"id": 4040, "predictions": ["\u2581// \u2581 Write On Target List \u2581writes \u2581the \u2581target \u2581 label \u2581to \u2581the \u2581target \u2581file ."], "references": ["\u2581// \u2581 Write On Target List \u2581writes \u2581the \u2581given \u2581target \u2581in \u2581the \u2581target \u2581list \u2581file ."], "bleu": 0.5664313497325814, "rouge_l": 0.8125000000000001}
{"id": 3046, "predictions": ["\u2581// \u2581 Write Amazon Assets \u2581writes \u2581the \u2581 assets \u2581to \u2581the \u2581 assets \u2581to \u2581the \u2581specified \u2581 path"], "references": ["\u2581// \u2581 Write Amazon Assets \u2581writes \u2581 assets \u2581to \u2581an \u2581 amazon \u2581backend ."], "bleu": 0.388172465412544, "rouge_l": 0.639412997903564}
{"id": 2775, "predictions": ["\u2581// \u2581 Print FileInfo \u2581prints \u2581a \u2581file \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Print FileInfo \u2581pretty - print s \u2581file \u2581 info . \u2581// \u2581If \u2581recurse \u2581is \u2581false \u2581and \u2581directory \u2581 size \u2581is \u25810, \u2581 display \u2581\"-\" \u2581instead \u2581// \u2581If \u2581fast"], "bleu": 0.07018693485770518, "rouge_l": 0.26521739130434785}
{"id": 2457, "predictions": ["\u2581// \u2581 Container Config Clear \u2581 clear s \u2581the \u2581 config \u2581 data \u2581for \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Container Config Clear \u2581removes \u2581any \u2581 config \u2581associated \u2581with \u2581the \u2581 container \u2581with \u2581// \u2581the \u2581given \u2581 ID ."], "bleu": 0.31031027361995694, "rouge_l": 0.5563847429519072}
{"id": 2098, "predictions": ["\u2581// \u2581Get Listeners \u2581returns \u2581a \u2581list \u2581of \u2581listeners \u2581that \u2581are \u2581 active ."], "references": ["\u2581// \u2581Get Listeners \u2581returns \u2581the \u2581socket - activated \u2581network \u2581listeners , \u2581if \u2581any . \u2581// \u2581// \u2581The \u2581' start ' \u2581parameter \u2581must \u2581be \u2581System d Listen FD s Start ,"], "bleu": 0.07820642565875682, "rouge_l": 0.26049822064056943}
{"id": 2845, "predictions": ["\u2581// \u2581 Write \u2581implements \u2581the \u2581 PutObject Writer \u2581interface ."], "references": ["\u2581// \u2581 Write \u2581performs \u2581a \u2581 write ."], "bleu": 0.25965358893403384, "rouge_l": 0.5669144981412639}
{"id": 3094, "predictions": ["\u2581// \u2581 Report User Action \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581 wraps \u2581the \u2581 Reporter \u2581action \u2581on \u2581the \u2581// \u2581 Reporter \u2581interface ."], "references": ["\u2581// Report User Action \u2581pushes \u2581the \u2581action \u2581into \u2581a \u2581queue \u2581for \u2581 reporting , \u2581// \u2581and \u2581reports \u2581the \u2581start , \u2581finish , \u2581and \u2581error \u2581conditions"], "bleu": 0.11647023149386054, "rouge_l": 0.2846666666666667}
{"id": 3332, "predictions": ["\u2581// \u2581 append Replacement Candidates \u2581merges \u2581the \u2581 set \u2581of \u2581 keys \u2581into \u2581the \u2581 set \u2581of \u2581 keys \u2581in \u2581the \u2581// \u2581 table ."], "references": ["\u2581// \u2581 append Replacement Can d iate s \u2581creates \u2581 prioritize . Candidate With Time \u2581values \u2581for \u2581digest \u2581in \u2581 scope Bucket , \u2581and \u2581returns \u2581the \u2581result \u2581of \u2581appending \u2581them"], "bleu": 0.1348431771524991, "rouge_l": 0.28621700879765394}
{"id": 2555, "predictions": ["\u2581// \u2581 Warn \u2581sends \u2581a \u2581 status \u2581 code \u2581to \u2581the \u2581 Progress Renderer ."], "references": ["\u2581// \u2581 Warn \u2581shows \u2581a \u2581temporary \u2581message \u2581instead \u2581of \u2581the \u2581 status"], "bleu": 0.20687206010259407, "rouge_l": 0.4535315985130111}
{"id": 3959, "predictions": ["\u2581// \u2581Generate Rule \u2581creates \u2581a \u2581rule \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 name"], "references": ["\u2581// \u2581Generate Rule \u2581returns \u2581a \u2581repository \u2581rule \u2581for \u2581the \u2581given \u2581repository \u2581that \u2581can \u2581// \u2581be \u2581written \u2581in \u2581a \u2581 WORK SPACE \u2581file ."], "bleu": 0.11384339562526971, "rouge_l": 0.41426146010186754}
{"id": 3148, "predictions": ["\u2581// \u2581 Describe SyntaxError \u2581returns \u2581a \u2581 fatal \u2581error \u2581message \u2581for \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581 Describe SyntaxError \u2581describes \u2581a \u2581syntax \u2581error \u2581encountered \u2581parsing \u2581 json ."], "bleu": 0.26518122980477765, "rouge_l": 0.5065243179122182}
{"id": 2467, "predictions": ["\u2581// \u2581 Container Get Snapshots \u2581returns \u2581a \u2581list \u2581of \u2581snapshots \u2581for \u2581a \u2581given \u2581project ."], "references": ["\u2581// \u2581 Container Get Snapshots \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581snapshots \u2581of \u2581the \u2581 container \u2581// \u2581in \u2581the \u2581given \u2581project \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.21270320944116478, "rouge_l": 0.5118230358504958}
{"id": 3629, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581new \u2581 relay Timer \u2581that \u2581will \u2581 connect \u2581to \u2581the \u2581 relay ."], "references": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 relay \u2581timer \u2581that \u2581has \u2581not \u2581started . \u2581 Timers \u2581must \u2581be \u2581started \u2581explicitly \u2581// \u2581using \u2581the \u2581 Start \u2581function ."], "bleu": 0.1729871707832015, "rouge_l": 0.5064150943396226}
{"id": 2872, "predictions": ["\u2581// \u2581Serialize \u2581writes \u2581the \u2581 db \u2581hash \u2581tree \u2581to \u2581a \u2581writer ."], "references": ["\u2581// \u2581Serialize \u2581serialize s \u2581a \u2581binary \u2581version \u2581of \u2581the \u2581hash tree ."], "bleu": 0.1690062198556585, "rouge_l": 0.4166666666666667}
{"id": 3572, "predictions": ["\u2581// \u2581 write \u2581the \u2581 headers \u2581to \u2581the \u2581channel ."], "references": ["\u2581// \u2581 write Headers \u2581writes \u2581out \u2581the \u2581HTTP \u2581 headers \u2581as \u2581arg 2, \u2581and \u2581creates \u2581the \u2581arg 3 \u2581writer ."], "bleu": 0.11359451112226611, "rouge_l": 0.5030927835051546}
{"id": 2647, "predictions": ["\u2581// \u2581 Node Rename \u2581implements \u2581the \u2581 Cluster \u2581interface ."], "references": ["\u2581// \u2581 Node Rename \u2581changes \u2581the \u2581 name \u2581of \u2581an \u2581existing \u2581node . \u2581// \u2581// \u2581Return \u2581an \u2581error \u2581if \u2581a \u2581node \u2581with \u2581the \u2581same \u2581 name \u2581already \u2581 exists ."], "bleu": 0.05646541848850381, "rouge_l": 0.32105263157894737}
{"id": 3872, "predictions": ["\u2581// \u2581 Flat \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581platform \u2581names ."], "references": ["\u2581// \u2581 Flat \u2581returns \u2581all \u2581the \u2581strings \u2581in \u2581the \u2581 set , \u2581sorted \u2581and \u2581de - duplicated ."], "bleu": 0.2216375149200713, "rouge_l": 0.43884892086330934}
{"id": 3229, "predictions": ["\u2581// \u2581 Inject \u2581implements \u2581 opentracing . Text Map Propagator"], "references": ["\u2581// \u2581 Inject \u2581implements \u2581the \u2581 Injector \u2581interface"], "bleu": 0.3672056269893592, "rouge_l": 0.5669144981412639}
{"id": 3856, "predictions": ["\u2581// \u2581connection Error \u2581is \u2581used \u2581to \u2581 close \u2581the \u2581connection \u2581and \u2581 call \u2581 this \u2581function ."], "references": ["\u2581// \u2581connection Error \u2581handles \u2581a \u2581connection \u2581level \u2581error"], "bleu": 0.14216645907653844, "rouge_l": 0.34221598877980364}
{"id": 2919, "predictions": ["\u2581// \u2581 List Admin s Cmd \u2581returns \u2581a \u2581 Command \u2581for \u2581 Admin s"], "references": ["\u2581// \u2581 List Admin s Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581that \u2581lists \u2581the \u2581current \u2581cluster \u2581 admins"], "bleu": 0.48198741029691705, "rouge_l": 0.6112224448897796}
{"id": 3687, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 contents \u2581of \u2581the \u2581 data \u2581to \u2581the \u2581fragment ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581argument \u2581 data , \u2581 breaking \u2581it \u2581into \u2581fragments \u2581as \u2581needed"], "bleu": 0.2722589423069702, "rouge_l": 0.4}
{"id": 2991, "predictions": ["\u2581// \u2581 NewClient FromEnv \u2581creates \u2581a \u2581new \u2581 Client \u2581instance"], "references": ["\u2581// \u2581 NewClient FromEnv \u2581creates \u2581a \u2581client \u2581based \u2581on \u2581environment \u2581variables ."], "bleu": 0.46722882676736516, "rouge_l": 0.5366568914956013}
{"id": 2426, "predictions": ["\u2581// \u2581 MkdirAll Send \u2581 downloads \u2581a \u2581directory \u2581and \u2581 uploads \u2581it \u2581to \u2581the \u2581 path"], "references": ["\u2581// \u2581 Send \u2581an \u2581 rsync \u2581stream \u2581of \u2581a \u2581 path \u2581over \u2581a \u2581websocket"], "bleu": 0.1431712315455507, "rouge_l": 0.4723451327433628}
{"id": 2445, "predictions": ["\u2581// \u2581 Append \u2581appends \u2581a \u2581 Snippet \u2581to \u2581target ."], "references": ["\u2581// \u2581 Append \u2581a \u2581 code \u2581snippet \u2581to \u2581a \u2581file ."], "bleu": 0.27129029006327077, "rouge_l": 0.6609907120743034}
{"id": 2198, "predictions": ["\u2581// \u2581backup Load ByName \u2581 loads \u2581the \u2581backup \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581 Load \u2581a \u2581backup \u2581from \u2581the \u2581database"], "bleu": 0.32523403430389786, "rouge_l": 0.6224489795918368}
{"id": 3488, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581message \u2581from \u2581the \u2581subscription ."], "references": ["\u2581// \u2581 Next \u2581waits \u2581for \u2581the \u2581next \u2581record \u2581and \u2581returns \u2581that ."], "bleu": 0.24737714147554007, "rouge_l": 0.5176803394625177}
{"id": 2522, "predictions": ["\u2581// \u2581Get StoragePool VolumeSnapshot \u2581returns \u2581the \u2581 VolumeSnapshot \u2581for \u2581the \u2581given \u2581 name"], "references": ["\u2581// \u2581Get StoragePool VolumeSnapshot \u2581returns \u2581a \u2581snapshots \u2581for \u2581the \u2581storage \u2581volume"], "bleu": 0.3934995962231127, "rouge_l": 0.5922330097087377}
{"id": 2374, "predictions": ["\u2581// \u2581storage Pool Config Add \u2581creates \u2581a \u2581pool _ config _ config _ config _ key \u2581from \u2581the \u2581pool ."], "references": ["\u2581// \u2581Add \u2581new \u2581storage \u2581pool \u2581 config ."], "bleu": 0.08039313477786734, "rouge_l": 0.38705583756345174}
{"id": 3160, "predictions": ["\u2581// \u2581 New Side car APIServer \u2581creates \u2581a \u2581new \u2581 shim \u2581client"], "references": ["\u2581// \u2581 New Side car APIServer \u2581creates \u2581an \u2581 APIServer \u2581that \u2581has \u2581limited \u2581function alities \u2581// \u2581and \u2581is \u2581meant \u2581to \u2581be \u2581run \u2581as \u2581a \u2581worker \u2581 sidecar . \u2581It \u2581cannot"], "bleu": 0.13197260216006967, "rouge_l": 0.3978260869565217}
{"id": 2463, "predictions": ["\u2581// \u2581 Container Config \u2581returns \u2581a \u2581 map \u2581of \u2581 container \u2581 config \u2581for \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Container Config \u2581gets \u2581the \u2581 container \u2581configuration \u2581 map \u2581from \u2581the \u2581 DB"], "bleu": 0.2415725261015974, "rouge_l": 0.5408866995073891}
{"id": 4011, "predictions": ["\u2581// \u2581Check \u2581returns \u2581a \u2581list \u2581of \u2581 Result \u2581objects \u2581that \u2581are \u2581not \u2581in \u2581the \u2581 set \u2581of \u2581// \u2581 s anity \u2581check ."], "references": ["\u2581// \u2581Check \u2581check \u2581the \u2581 status \u2581of \u2581registered \u2581 checkers \u2581matching \u2581names \u2581and \u2581return \u2581a \u2581// \u2581list \u2581of \u2581results ."], "bleu": 0.1194966065966699, "rouge_l": 0.3297297297297297}
{"id": 2524, "predictions": ["\u2581// \u2581 Migrate S \u2581logs \u2581 - \u2581 Migrate s \u2581the \u2581 S take \u2581 data \u2581for \u2581a \u2581volume ."], "references": ["\u2581// \u2581 Migrate S toragePoolVolume \u2581requests \u2581that \u2581 LXD \u2581prepare s \u2581for \u2581a \u2581storage \u2581volume \u2581migration"], "bleu": 0.2137772394158387, "rouge_l": 0.5102230483271376}
{"id": 3034, "predictions": ["\u2581// \u2581 Etcd StorageClass \u2581returns \u2581the \u2581 StorageClass \u2581for \u2581the \u2581 StorageClass \u2581object"], "references": ["\u2581// \u2581 Etcd StorageClass \u2581creates \u2581a \u2581storage \u2581 class \u2581used \u2581for \u2581dynamic \u2581volume \u2581// \u2581 provisioning . \u2581Currently \u2581dynamic \u2581volume \u2581 provisioning \u2581only \u2581works \u2581// \u2581on \u2581AWS \u2581and \u2581 GCE"], "bleu": 0.08086124506504899, "rouge_l": 0.30391459074733096}
{"id": 3976, "predictions": ["\u2581// \u2581copy Go Mod To Temp \u2581copies \u2581the \u2581 contents \u2581of \u2581a \u2581file \u2581to \u2581a \u2581temp \u2581file , \u2581// \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581file ."], "references": ["\u2581// \u2581copy Go Mod To Temp \u2581copies \u2581to \u2581given \u2581go . mod \u2581file \u2581to \u2581a \u2581temporary \u2581directory . \u2581// \u2581go \u2581list \u2581 t ends \u2581to \u2581 mutate \u2581go . mod"], "bleu": 0.28093518419192626, "rouge_l": 0.4455056179775281}
{"id": 2571, "predictions": ["\u2581// \u2581 Level Direct Access \u2581 loads \u2581the \u2581access \u2581 data \u2581from \u2581 this \u2581 WAL ."], "references": ["\u2581// \u2581Configure \u2581the \u2581 sqlite \u2581connection \u2581so \u2581that \u2581it ' s \u2581safe \u2581to \u2581access \u2581the \u2581// \u2581 dql ite - managed \u2581 sqlite \u2581file , \u2581also \u2581without \u2581setting \u2581up \u2581"], "bleu": 0.05655086908423648, "rouge_l": 0.24318936877076414}
{"id": 2465, "predictions": ["\u2581// \u2581 Container Update \u2581updates \u2581the \u2581 description \u2581of \u2581a \u2581 container ."], "references": ["\u2581// \u2581 Container Update \u2581updates \u2581the \u2581 description , \u2581 architecture \u2581and \u2581 ephemeral \u2581flag \u2581of \u2581// \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.2474018690839367, "rouge_l": 0.5804916732751786}
{"id": 3957, "predictions": ["\u2581// \u2581 Import Repo Rules \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Import Repo Rules \u2581reads \u2581the \u2581lock \u2581file \u2581of \u2581a \u2581 vendor ing \u2581 tool \u2581and \u2581returns \u2581// \u2581a \u2581list \u2581of \u2581equivalent \u2581repository \u2581rules \u2581that \u2581can \u2581be \u2581merged \u2581into"], "bleu": 0.12594260536295232, "rouge_l": 0.3353951890034364}
{"id": 3187, "predictions": ["\u2581// \u2581 Restore Reader \u2581implements \u2581the \u2581 APIClient \u2581interface"], "references": ["\u2581// \u2581 Restore Reader \u2581restore s \u2581cluster \u2581state \u2581from \u2581a \u2581reader \u2581containing \u2581marshal ed \u2581 ops . \u2581// \u2581Such \u2581as \u2581those \u2581written \u2581by \u2581Extract Writer ."], "bleu": 0.06217974942071895, "rouge_l": 0.26270456503014644}
{"id": 2072, "predictions": ["\u2581// \u2581 Project URI s \u2581lists \u2581all \u2581 active \u2581 repositories \u2581that \u2581match \u2581the \u2581 filter ."], "references": ["\u2581// \u2581 Project URI s \u2581returns \u2581all \u2581available \u2581project \u2581URI s ."], "bleu": 0.28433291815307693, "rouge_l": 0.4982497082847141}
{"id": 3374, "predictions": ["\u2581// \u2581 readJSON File \u2581reads \u2581the \u2581 auth \u2581file \u2581and \u2581returns \u2581the \u2581 auth \u2581file ."], "references": ["\u2581// \u2581 readJSON File \u2581unmarshal s \u2581the \u2581authentication s \u2581stored \u2581in \u2581the \u2581 auth . json \u2581file \u2581and \u2581returns \u2581it \u2581// \u2581or \u2581returns \u2581an \u2581 empty \u2581docker ConfigFile \u2581 data"], "bleu": 0.15599108696866879, "rouge_l": 0.45337837837837835}
{"id": 2243, "predictions": ["\u2581// \u2581cluster Get \u2581returns \u2581a \u2581 set \u2581of \u2581 Cluster \u2581objects \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 controller \u2581 config ."], "references": ["\u2581// \u2581Return \u2581information \u2581about \u2581the \u2581cluster ."], "bleu": 0.06109833740738945, "rouge_l": 0.20866590649942987}
{"id": 3113, "predictions": ["\u2581// \u2581 New PortForward er \u2581creates \u2581a \u2581new \u2581 PortForward er ."], "references": ["\u2581// \u2581 New PortForward er \u2581creates \u2581a \u2581new \u2581port \u2581 forwarder"], "bleu": 0.6652049901111008, "rouge_l": 0.7887931034482759}
{"id": 3173, "predictions": ["\u2581// \u2581 Input Branches \u2581returns \u2581a \u2581list \u2581of \u2581 repositories \u2581that \u2581match \u2581the \u2581input \u2581input ."], "references": ["\u2581// \u2581 Input Branches \u2581returns \u2581the \u2581branches \u2581in \u2581an \u2581 Input ."], "bleu": 0.31181814978096556, "rouge_l": 0.5132211538461539}
{"id": 3422, "predictions": ["\u2581// \u2581choose Digest From Manifest List \u2581returns \u2581a \u2581digest \u2581that \u2581 contains \u2581the \u2581given \u2581// \u2581blob . \u2581If \u2581the \u2581 data \u2581is \u2581not \u2581found , \u2581the \u2581 Digest \u2581is \u2581"], "references": ["\u2581// \u2581choose Digest From Manifest List \u2581parses \u2581blob \u2581as \u2581a \u2581schema 2 \u2581manifest \u2581list , \u2581// \u2581and \u2581returns \u2581the \u2581digest \u2581of \u2581the \u2581image \u2581appropriate \u2581for \u2581the \u2581current \u2581environment ."], "bleu": 0.22798055018612587, "rouge_l": 0.34002229654403565}
{"id": 2277, "predictions": ["\u2581// \u2581setup Host V eth Device \u2581adds \u2581the \u2581device \u2581 v eth \u2581device \u2581to \u2581the \u2581device"], "references": ["\u2581// \u2581setup Host V eth Device \u2581configure s \u2581a \u2581 nic \u2581device ' s \u2581host \u2581side \u2581 v eth \u2581settings ."], "bleu": 0.3208184994470777, "rouge_l": 0.5276816608996538}
{"id": 2248, "predictions": ["\u2581// \u2581internal Cluster Post Promote \u2581is \u2581used \u2581to \u2581 promote \u2581a \u2581 set \u2581of \u2581 Node \u2581to \u2581 sync ."], "references": ["\u2581// \u2581 Used \u2581to \u2581 promote \u2581the \u2581local \u2581non - database \u2581node \u2581to \u2581be \u2581a \u2581database \u2581one ."], "bleu": 0.13924499401499868, "rouge_l": 0.31881533101045295}
{"id": 2510, "predictions": ["\u2581// \u2581 expire Logs Task \u2581returns \u2581the \u2581task \u2581state \u2581for \u2581the \u2581given \u2581state ."], "references": ["\u2581// \u2581This \u2581task \u2581function \u2581 expires \u2581logs \u2581when \u2581executed . \u2581It ' s \u2581started \u2581by \u2581the \u2581 Daemon \u2581// \u2581and \u2581will \u2581run \u2581once \u2581every \u2581 24 h ."], "bleu": 0.04279641176459529, "rouge_l": 0.17967599410898377}
{"id": 3089, "predictions": ["\u2581// \u2581node To FileInfo \u2581converts \u2581a \u2581 git \u2581commit \u2581to \u2581a \u2581 FileInfo ."], "references": ["\u2581// \u2581If \u2581full \u2581is \u2581false , \u2581exclude \u2581potentially \u2581large \u2581fields \u2581such \u2581as \u2581` Objects ` \u2581// \u2581and \u2581` Children `"], "bleu": 0.05758313680631688, "rouge_l": 0.05700934579439252}
{"id": 2818, "predictions": ["\u2581// \u2581 Subscribe Commit F \u2581 subscribe s \u2581to \u2581the \u2581given \u2581 Commit State \u2581and \u2581 subscribe s \u2581to \u2581the \u2581// \u2581 active \u2581 api ."], "references": ["\u2581// \u2581 Subscribe Commit F \u2581is \u2581like \u2581 List Commit \u2581but \u2581it \u2581calls \u2581a \u2581callback \u2581function \u2581with \u2581// \u2581the \u2581results \u2581rather \u2581than \u2581returning \u2581an \u2581 iterator ."], "bleu": 0.1956624104840928, "rouge_l": 0.376078914919852}
{"id": 2372, "predictions": ["\u2581// \u2581 StoragePool Config Get \u2581returns \u2581the \u2581 config \u2581 config \u2581for \u2581a \u2581given \u2581pool ."], "references": ["\u2581// \u2581 StoragePool Config Get \u2581returns \u2581the \u2581 config \u2581of \u2581a \u2581storage \u2581pool ."], "bleu": 0.5974970909115025, "rouge_l": 0.8097345132743362}
{"id": 2060, "predictions": ["\u2581// \u2581 Shutdown \u2581shut s \u2581down \u2581the \u2581 raft \u2581instance ."], "references": ["\u2581// \u2581 Shutdown \u2581 raft \u2581and \u2581any \u2581 raft - related \u2581resource \u2581we \u2581have \u2581instantiated ."], "bleu": 0.1663168741017824, "rouge_l": 0.43008225616921264}
{"id": 2357, "predictions": ["\u2581// \u2581Generate \u2581generates \u2581a \u2581 key \u2581for \u2581the \u2581given \u2581file"], "references": ["\u2581// \u2581Generate \u2581the \u2581desired \u2581method ."], "bleu": 0.17827531042796255, "rouge_l": 0.3927038626609442}
{"id": 2842, "predictions": ["\u2581// \u2581 List File F \u2581returns \u2581a \u2581list \u2581of \u2581files \u2581in \u2581the \u2581given \u2581file"], "references": ["\u2581// \u2581 List File F \u2581returns \u2581 info \u2581about \u2581all \u2581files \u2581in \u2581a \u2581 Commit \u2581under \u2581 path , \u2581calling \u2581 f \u2581with \u2581each \u2581 FileInfo ."], "bleu": 0.17964808337113097, "rouge_l": 0.3691376701966717}
{"id": 3382, "predictions": ["\u2581// \u2581send File \u2581writes \u2581a \u2581file \u2581to \u2581the \u2581 contents \u2581of \u2581the \u2581file ."], "references": ["\u2581// \u2581send File \u2581sends \u2581a \u2581file \u2581into \u2581the \u2581tar \u2581stream ."], "bleu": 0.2102369368326755, "rouge_l": 0.5723860589812332}
{"id": 2523, "predictions": ["\u2581// \u2581 Update StoragePool VolumeSnapshot \u2581updates \u2581the \u2581 cloud _ policy _ \u2581volume \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Update StoragePool VolumeSnapshot \u2581updates \u2581the \u2581volume \u2581to \u2581match \u2581the \u2581provided \u2581 S toragePoolVolume \u2581struct"], "bleu": 0.3754280685962881, "rouge_l": 0.5803996194100857}
{"id": 3557, "predictions": ["\u2581// \u2581 Subscribe By Topic Descriptor \u2581creates \u2581a \u2581subscription \u2581that \u2581will \u2581 add \u2581a \u2581 Topic Descriptor \u2581// \u2581to \u2581a \u2581 \u2581topic ."], "references": ["\u2581// \u2581 Subscribe By Topic Descriptor \u2581lets \u2581you \u2581 subscribe \u2581a \u2581topic \u2581using \u2581a \u2581 pb . Topic Descriptor ."], "bleu": 0.3114637779265809, "rouge_l": 0.5652509652509652}
{"id": 2733, "predictions": ["\u2581// \u2581 Cancel \u2581cancel s \u2581a \u2581job \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Cancel \u2581cancel s \u2581a \u2581 set \u2581of \u2581datum s \u2581running \u2581on \u2581workers . \u2581// \u2581pipeline Rc Name \u2581is \u2581the \u2581 name \u2581of \u2581the \u2581pipeline ' s \u2581 RC"], "bleu": 0.12785285442130256, "rouge_l": 0.3473309608540925}
{"id": 2974, "predictions": ["\u2581// \u2581Create Pipeline Service \u2581creates \u2581a \u2581service \u2581service"], "references": ["\u2581// \u2581Create Pipeline Service \u2581creates \u2581a \u2581new \u2581pipeline \u2581service ."], "bleu": 0.5845864450928401, "rouge_l": 0.7624999999999998}
{"id": 2965, "predictions": ["\u2581// \u2581 List Datum F \u2581returns \u2581a \u2581 slice \u2581of \u2581 items \u2581from \u2581the \u2581 container ."], "references": ["\u2581// \u2581 List Datum F \u2581returns \u2581 info \u2581about \u2581all \u2581datum s \u2581in \u2581a \u2581 Job , \u2581calling \u2581 f \u2581with \u2581each \u2581datum \u2581 info ."], "bleu": 0.22904643961016308, "rouge_l": 0.4930198383541514}
{"id": 2824, "predictions": ["\u2581// \u2581Get Objects \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581 blobs \u2581in \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581Get Objects \u2581gets \u2581several \u2581objects \u2581out \u2581of \u2581the \u2581object \u2581store \u2581by \u2581hash ."], "bleu": 0.1457684614972261, "rouge_l": 0.38364779874213834}
{"id": 3141, "predictions": ["\u2581// \u2581Get Expected Num Workers \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581 data \u2581for \u2581a \u2581given \u2581 container"], "references": ["\u2581// \u2581Get Expected Num Workers \u2581computes \u2581the \u2581expected \u2581number \u2581of \u2581workers \u2581that \u2581// \u2581 pac hyd er m \u2581will \u2581start \u2581given \u2581the \u2581 Parallelism Spec \u2581' spec ' . \u2581//"], "bleu": 0.15938594748838525, "rouge_l": 0.438562091503268}
{"id": 2869, "predictions": ["\u2581// \u2581 iter Dir \u2581is \u2581a \u2581wrapper \u2581around \u2581 iterator . \u2581It \u2581returns \u2581a \u2581 bolt \u2581node \u2581// \u2581if \u2581the \u2581 path \u2581is \u2581not \u2581found , \u2581it \u2581will \u2581be \u2581returned"], "references": ["\u2581// \u2581 iter Dir \u2581iterates \u2581through \u2581the \u2581nodes \u2581under \u2581 path , \u2581it \u2581errors \u2581with \u2581 Path NotFound \u2581if \u2581 path \u2581doesn ' t \u2581exist , \u2581it \u2581errors \u2581with \u2581"], "bleu": 0.1577799153853478, "rouge_l": 0.3666666666666667}
{"id": 2959, "predictions": ["\u2581// \u2581 Flush Job \u2581 flush es \u2581the \u2581 set \u2581of \u2581 active \u2581 subscriptions \u2581to \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581 Flush Job \u2581calls \u2581 f \u2581with \u2581all \u2581the \u2581jobs \u2581which \u2581were \u2581triggered \u2581by \u2581commits . \u2581// \u2581If \u2581to Pipeline s \u2581is \u2581non - nil \u2581then \u2581only \u2581the \u2581jobs"], "bleu": 0.1252622507167518, "rouge_l": 0.3040498442367601}
{"id": 2686, "predictions": ["\u2581// \u2581 Main RBD Volume Un mark Deleted \u2581deletes \u2581a \u2581 VM \u2581 VM \u2581from \u2581the \u2581 VM ."], "references": ["\u2581// \u2581 ceph RBD Volume Un mark Deleted \u2581un marks \u2581an \u2581 RBD \u2581storage \u2581volume \u2581as \u2581being \u2581in \u2581\" zombie \" \u2581// \u2581state \u2581// \u2581 - \u2581An \u2581 RBD \u2581storage"], "bleu": 0.16101687446703367, "rouge_l": 0.392282958199357}
{"id": 2478, "predictions": ["\u2581// \u2581 Init \u2581initializes \u2581the \u2581 OS ' s \u2581 config \u2581directory ."], "references": ["\u2581// \u2581 Init \u2581our \u2581internal \u2581 data \u2581structures ."], "bleu": 0.19674979811155635, "rouge_l": 0.4699537750385208}
{"id": 2734, "predictions": ["\u2581// \u2581 Conns \u2581returns \u2581the \u2581 net . ClientConn \u2581for \u2581the \u2581given \u2581service ."], "references": ["\u2581// \u2581 Conns \u2581returns \u2581a \u2581 slice \u2581of \u2581connections \u2581to \u2581worker \u2581servers . \u2581// \u2581pipeline Rc Name \u2581is \u2581the \u2581 name \u2581of \u2581the \u2581pipeline ' s \u2581 RC \u2581and \u2581can"], "bleu": 0.09608783695135598, "rouge_l": 0.2986013986013986}
{"id": 3165, "predictions": ["\u2581// \u2581 helper \u2581function \u2581to \u2581find \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581look Extensions \u2581finds \u2581windows \u2581executable \u2581by \u2581its \u2581 dir \u2581and \u2581 path . \u2581// \u2581It \u2581uses \u2581 LookPath \u2581to \u2581try \u2581appropriate \u2581extensions . \u2581// \u2581look Extensions \u2581does \u2581not \u2581"], "bleu": 0.05879651544656695, "rouge_l": 0.2790849673202615}
{"id": 3774, "predictions": ["\u2581// \u2581 expire Exchange \u2581 modifies \u2581the \u2581 Exchange ' s \u2581 Exchange ."], "references": ["\u2581// \u2581 expire Exchange \u2581is \u2581similar \u2581to \u2581 remove Exchange , \u2581but \u2581it \u2581 marks \u2581the \u2581exchange \u2581as \u2581// \u2581expired ."], "bleu": 0.17744738196342594, "rouge_l": 0.4412296564195298}
{"id": 2391, "predictions": ["\u2581// \u2581 s Pools Replicate If Ceph \u2581 loads \u2581volumes \u2581from \u2581the \u2581given \u2581 ingress ."], "references": ["\u2581// \u2581This \u2581a \u2581convenience \u2581to \u2581 replicate \u2581a \u2581certain \u2581volume \u2581change \u2581to \u2581all \u2581nodes \u2581if \u2581the \u2581// \u2581underlying \u2581driver \u2581is \u2581 ceph ."], "bleu": 0.06536374500548343, "rouge_l": 0.248371335504886}
{"id": 3306, "predictions": ["\u2581// \u2581new PR Signed By \u2581creates \u2581a \u2581new \u2581 Signed Signed \u2581object \u2581from \u2581a \u2581 key \u2581 set"], "references": ["\u2581// \u2581new PR Signed By \u2581returns \u2581a \u2581new \u2581pr Signed By \u2581if \u2581parameters \u2581are \u2581valid ."], "bleu": 0.28889830842564407, "rouge_l": 0.4756335282651072}
{"id": 3860, "predictions": ["\u2581// \u2581 write Frames \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581connection ."], "references": ["\u2581// \u2581 write Frames \u2581is \u2581the \u2581main \u2581loop \u2581that \u2581pull s \u2581frames \u2581from \u2581the \u2581send \u2581channel \u2581and \u2581// \u2581writes \u2581them \u2581to \u2581the \u2581connection ."], "bleu": 0.18737933497786385, "rouge_l": 0.47164948453608246}
{"id": 2874, "predictions": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 db Hash Tree ."], "references": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581hash tree ."], "bleu": 0.6115380576901023, "rouge_l": 0.7614424410540915}
{"id": 2291, "predictions": ["\u2581// \u2581 New UserService Version \u2581creates \u2581a \u2581new \u2581 admission \u2581version \u2581 name \u2581from \u2581the \u2581given \u2581version \u2581string ."], "references": ["\u2581// \u2581 New Dotted Version \u2581returns \u2581a \u2581new \u2581 Version ."], "bleu": 0.1845895819969781, "rouge_l": 0.5602755453501722}
{"id": 2889, "predictions": ["\u2581// \u2581 Merge \u2581merges \u2581the \u2581 set \u2581of \u2581 data \u2581into \u2581a \u2581 Writer ."], "references": ["\u2581// \u2581 Merge \u2581merges \u2581a \u2581collection \u2581of \u2581hash tree \u2581 readers \u2581into \u2581a \u2581hash tree \u2581writer ."], "bleu": 0.2519438289587968, "rouge_l": 0.5562310030395137}
{"id": 3272, "predictions": ["\u2581// \u2581Check Auth \u2581checks \u2581if \u2581the \u2581given \u2581 username \u2581is \u2581valid"], "references": ["\u2581// \u2581Check Auth \u2581validates \u2581the \u2581credentials \u2581by \u2581attempting \u2581to \u2581log \u2581into \u2581the \u2581registry \u2581// \u2581returns \u2581an \u2581error \u2581if \u2581an \u2581error \u2581occurred \u2581while \u2581making \u2581the \u2581http \u2581request \u2581or \u2581the \u2581 status"], "bleu": 0.04334741445875218, "rouge_l": 0.2701107011070111}
{"id": 3779, "predictions": ["\u2581// \u2581 Read Body \u2581reads \u2581the \u2581 body \u2581of \u2581the \u2581frame \u2581into \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Read Body \u2581takes \u2581in \u2581a \u2581previously \u2581read \u2581frame \u2581header , \u2581and \u2581only \u2581reads \u2581in \u2581the \u2581 body \u2581// \u2581based \u2581on \u2581the \u2581 size \u2581specified \u2581in \u2581the \u2581header ."], "bleu": 0.12718356905542985, "rouge_l": 0.4611683848797251}
{"id": 2682, "predictions": ["\u2581// \u2581 Main RBD Snapshot Protect \u2581creates \u2581a \u2581 RBD \u2581snapshot \u2581 name \u2581and \u2581 provision \u2581it"], "references": ["\u2581// \u2581 ceph RBD Snapshot Protect \u2581 protect s \u2581a \u2581given \u2581snapshot \u2581from \u2581being \u2581deleted \u2581// \u2581This \u2581is \u2581a \u2581 precondition \u2581to \u2581be \u2581 able \u2581to \u2581create \u2581 RBD \u2581clone"], "bleu": 0.09794897846607367, "rouge_l": 0.36478405315614615}
{"id": 3127, "predictions": ["\u2581// \u2581 New Pool \u2581creates \u2581a \u2581new \u2581 Pool"], "references": ["\u2581// \u2581 New Pool \u2581creates \u2581a \u2581new \u2581connection \u2581pool \u2581with \u2581connections \u2581to \u2581pods \u2581in \u2581the \u2581// \u2581given \u2581service ."], "bleu": 0.2501325796027163, "rouge_l": 0.46974697469746973}
{"id": 2485, "predictions": ["\u2581// \u2581serve HTTP \u2581creates \u2581a \u2581HTTP \u2581server \u2581for \u2581the \u2581endpoints ."], "references": ["\u2581// \u2581 Start \u2581an \u2581HTTP \u2581server \u2581for \u2581the \u2581endpoint \u2581associated \u2581with \u2581the \u2581given \u2581 code ."], "bleu": 0.21888531592084717, "rouge_l": 0.43008225616921264}
{"id": 2446, "predictions": ["\u2581// \u2581 Container To Args \u2581converts \u2581the \u2581 container Args \u2581to \u2581a \u2581 Container Args"], "references": ["\u2581// \u2581 Container To Args \u2581is \u2581a \u2581convenience \u2581to \u2581convert \u2581the \u2581new \u2581 Container \u2581 db \u2581struct \u2581into \u2581// \u2581the \u2581legacy \u2581 Container Args ."], "bleu": 0.21586530746219815, "rouge_l": 0.47843137254901963}
{"id": 3305, "predictions": ["\u2581// \u2581new Policy Requirement FromJSON \u2581converts \u2581a \u2581 json \u2581 data \u2581to \u2581a \u2581policy \u2581policy ."], "references": ["\u2581// \u2581new Policy Requirement FromJSON \u2581parses \u2581JSON \u2581 data \u2581into \u2581a \u2581 Policy Requirement \u2581implementation ."], "bleu": 0.3566325206249313, "rouge_l": 0.5625}
{"id": 2390, "predictions": ["\u2581// \u2581 S all Rename \u2581rename s \u2581a \u2581volume \u2581to \u2581a \u2581volume"], "references": ["\u2581// \u2581 S toragePoolVolume Rename \u2581rename s \u2581the \u2581storage \u2581volume \u2581attached \u2581to \u2581a \u2581given \u2581storage \u2581pool ."], "bleu": 0.21097586262231463, "rouge_l": 0.6019736842105263}
{"id": 3816, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 Peer Peer List \u2581to \u2581the \u2581 Root Peer List"], "references": ["\u2581// \u2581Add \u2581adds \u2581a \u2581peer \u2581to \u2581the \u2581root \u2581peer \u2581list \u2581if \u2581it \u2581does \u2581not \u2581exist , \u2581or \u2581return \u2581// \u2581an \u2581existing \u2581peer \u2581if \u2581it \u2581 exists ."], "bleu": 0.12233382851844132, "rouge_l": 0.31700074239049736}
{"id": 2114, "predictions": ["\u2581// \u2581Get Private Image \u2581returns \u2581the \u2581image ' s \u2581image \u2581 data \u2581for \u2581the \u2581given \u2581image"], "references": ["\u2581// \u2581Get Private Image \u2581is \u2581similar \u2581to \u2581Get Image \u2581but \u2581allows \u2581passing \u2581a \u2581 secret \u2581download \u2581 token"], "bleu": 0.19774557004917784, "rouge_l": 0.29103053435114506}
{"id": 3323, "predictions": ["\u2581// \u2581 Load Manifest Descriptor \u2581returns \u2581the \u2581 Image Reference \u2581for \u2581the \u2581given \u2581image \u2581reference"], "references": ["\u2581// \u2581 Load Manifest Descriptor \u2581 loads \u2581the \u2581manifest"], "bleu": 0.3237722713145643, "rouge_l": 0.6108726752503576}
{"id": 2521, "predictions": ["\u2581// \u2581Get StoragePool VolumeSnapshot s \u2581returns \u2581all \u2581the \u2581 active \u2581 controllers \u2581for \u2581the \u2581given \u2581 name"], "references": ["\u2581// \u2581Get StoragePool VolumeSnapshot s \u2581returns \u2581a \u2581list \u2581of \u2581snapshots \u2581for \u2581the \u2581storage \u2581// \u2581volume"], "bleu": 0.36191740494054153, "rouge_l": 0.505699481865285}
{"id": 2228, "predictions": ["\u2581// \u2581 Select Config \u2581selects \u2581a \u2581 map \u2581of \u2581 key \u2581and \u2581 key \u2581values \u2581for \u2581a \u2581given \u2581 table ."], "references": ["\u2581// \u2581 Select Config \u2581executes \u2581a \u2581query \u2581statement \u2581against \u2581a \u2581\" config \" \u2581 table , \u2581which \u2581must \u2581// \u2581have \u2581' key ' \u2581and \u2581' value ' \u2581columns . \u2581"], "bleu": 0.14142739830716383, "rouge_l": 0.34205607476635513}
{"id": 2063, "predictions": ["\u2581// \u2581 raft Maybe Bootstrap \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 raft . Transport Store \u2581// \u2581that \u2581is \u2581used \u2581to \u2581 watch \u2581the \u2581 raft \u2581state ."], "references": ["\u2581// \u2581 Helper \u2581to \u2581bootstrap \u2581the \u2581 raft \u2581cluster \u2581if \u2581needed ."], "bleu": 0.09594785034023696, "rouge_l": 0.36125211505922167}
{"id": 2624, "predictions": ["\u2581// \u2581storage Volume IDs Get \u2581returns \u2581a \u2581list \u2581of \u2581 ids \u2581for \u2581a \u2581given \u2581volume \u2581 type ."], "references": ["\u2581// \u2581Get \u2581the \u2581 IDs \u2581of \u2581all \u2581volumes \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 type \u2581associated \u2581with \u2581the \u2581// \u2581given \u2581pool , \u2581regardless \u2581of \u2581their \u2581node _ id \u2581column"], "bleu": 0.05879651544656695, "rouge_l": 0.23921568627450981}
{"id": 3344, "predictions": ["\u2581// \u2581 getImage \u2581fetches \u2581the \u2581image \u2581from \u2581the \u2581registry ."], "references": ["\u2581// \u2581 getImage \u2581 loads \u2581the \u2581specified \u2581image \u2581object ."], "bleu": 0.26985534666825095, "rouge_l": 0.6}
{"id": 2472, "predictions": ["\u2581// \u2581 Container Get Backups \u2581returns \u2581a \u2581list \u2581of \u2581 container \u2581 data \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Container Get Backups \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581 backups \u2581of \u2581the \u2581 container \u2581// \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.42061213984463525, "rouge_l": 0.6554105909439755}
{"id": 2520, "predictions": ["\u2581// \u2581Create StoragePool VolumeSnapshot \u2581creates \u2581a \u2581new \u2581 Virtual \u2581 Volume"], "references": ["\u2581// \u2581Create StoragePool VolumeSnapshot \u2581defines \u2581a \u2581new \u2581storage \u2581volume"], "bleu": 0.3646285861936466, "rouge_l": 0.6110183639398998}
{"id": 2999, "predictions": ["\u2581// \u2581expired Cluster Admin Check \u2581checks \u2581if \u2581the \u2581cluster \u2581 admin \u2581 token \u2581is \u2581valid"], "references": ["\u2581// \u2581expired Cluster Admin Check \u2581enforce s \u2581that \u2581if \u2581the \u2581cluster ' s \u2581 enterprise \u2581 token \u2581is \u2581// \u2581expired , \u2581only \u2581 admins \u2581may \u2581log \u2581in ."], "bleu": 0.19697240304996858, "rouge_l": 0.5292841648590022}
{"id": 3322, "predictions": ["\u2581// \u2581new ImageSource \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 json \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581create \u2581// \u2581a \u2581new \u2581 OCI \u2581archive ."], "references": ["\u2581// \u2581new ImageSource \u2581returns \u2581an \u2581 ImageSource \u2581for \u2581reading \u2581from \u2581an \u2581existing \u2581directory . \u2581// \u2581new ImageSource \u2581 untar s \u2581the \u2581file \u2581and \u2581saves \u2581it \u2581in \u2581a \u2581temp \u2581directory"], "bleu": 0.0999671323685172, "rouge_l": 0.28388598022105876}
{"id": 3030, "predictions": ["\u2581// \u2581Get Secret EnvVars \u2581returns \u2581a \u2581 slice \u2581of \u2581 env \u2581variables \u2581for \u2581the \u2581given \u2581 secret ."], "references": ["\u2581// \u2581Get Secret EnvVars \u2581returns \u2581the \u2581environment \u2581variable \u2581specs \u2581for \u2581the \u2581storage \u2581 secret ."], "bleu": 0.3451395513935865, "rouge_l": 0.6161616161616161}
{"id": 2348, "predictions": ["\u2581// \u2581 Disconnect \u2581 disconnect s \u2581the \u2581listener \u2581from \u2581the \u2581 slice \u2581of \u2581 active \u2581 active \u2581// \u2581 active \u2581 active \u2581 subscribers ."], "references": ["\u2581// \u2581 Disconnect \u2581must \u2581be \u2581used \u2581once \u2581done \u2581listening \u2581for \u2581events"], "bleu": 0.09043565779655338, "rouge_l": 0.17923604309500493}
{"id": 3541, "predictions": ["\u2581// \u2581 New Gossip Sub \u2581creates \u2581a \u2581new \u2581 gossip \u2581 filter ."], "references": ["\u2581// \u2581 New Gossip Sub \u2581returns \u2581a \u2581new \u2581 PubSub \u2581object \u2581using \u2581 Gossip Sub Router \u2581as \u2581the \u2581 router ."], "bleu": 0.2530614682987645, "rouge_l": 0.5642923219241442}
{"id": 2109, "predictions": ["\u2581// \u2581 Start Containers \u2581starts \u2581a \u2581 container . Container Server ."], "references": ["\u2581// \u2581 Start Containers \u2581starts \u2581containers \u2581created \u2581by \u2581the \u2581benchmark ."], "bleu": 0.39553325358771796, "rouge_l": 0.5258620689655172}
{"id": 3420, "predictions": ["\u2581// \u2581tar Directory \u2581writes \u2581the \u2581directory \u2581to \u2581the \u2581given \u2581destination \u2581directory ."], "references": ["\u2581// \u2581tar \u2581converts \u2581the \u2581directory \u2581at \u2581 src \u2581and \u2581saves \u2581it \u2581to \u2581dst"], "bleu": 0.16557608079290168, "rouge_l": 0.39713541666666663}
{"id": 2895, "predictions": ["\u2581// \u2581 Put Hash Tree \u2581 put \u2581a \u2581 set \u2581of \u2581 api . Upload \u2581to \u2581a \u2581 slice \u2581of \u2581 api . Object"], "references": ["\u2581// \u2581 Put Hash Tree \u2581is \u2581a \u2581convenience \u2581function \u2581for \u2581putting \u2581a \u2581 Hash Tree \u2581to \u2581an \u2581object \u2581store ."], "bleu": 0.22599865452149248, "rouge_l": 0.4159090909090909}
{"id": 2475, "predictions": ["\u2581// \u2581 Container Backup Rename \u2581rename s \u2581a \u2581backup \u2581 container"], "references": ["\u2581// \u2581 Container Backup Rename \u2581rename s \u2581a \u2581 container \u2581backup \u2581from \u2581the \u2581given \u2581current \u2581 name \u2581// \u2581to \u2581the \u2581new \u2581one ."], "bleu": 0.26405132607374227, "rouge_l": 0.5530371713508613}
{"id": 3888, "predictions": ["\u2581// \u2581Parse Version \u2581parses \u2581the \u2581version \u2581of \u2581a \u2581string ."], "references": ["\u2581// \u2581Parse Version \u2581parses \u2581a \u2581version \u2581of \u2581the \u2581 form \u2581\" 12 . 34 . 56 - abc d \" . \u2581 Non - negative \u2581// \u2581integer \u2581components \u2581are \u2581separated"], "bleu": 0.05970491088788947, "rouge_l": 0.32105263157894737}
{"id": 3428, "predictions": ["\u2581// \u2581initialize \u2581initializes \u2581the \u2581schema \u2581of \u2581 Schema ."], "references": ["\u2581// \u2581initialize \u2581initializes \u2581 Extracted V 1 Compatibility \u2581and \u2581verifies \u2581in variants , \u2581so \u2581that \u2581the \u2581rest \u2581of \u2581 this \u2581 code \u2581can \u2581assume \u2581a \u2581 minimal ly \u2581 healthy"], "bleu": 0.03148368666605467, "rouge_l": 0.28045977011494255}
{"id": 3036, "predictions": ["\u2581// \u2581 Etcd Node Port Service \u2581is \u2581a \u2581 helper \u2581to \u2581create \u2581a \u2581 v 1. Service \u2581for \u2581a \u2581 Service ."], "references": ["\u2581// \u2581 Etcd Node Port Service \u2581returns \u2581a \u2581 Node Port \u2581etcd \u2581service . \u2581This \u2581will \u2581let \u2581non - etcd \u2581// \u2581pods \u2581 talk \u2581to \u2581etcd"], "bleu": 0.24860779150599538, "rouge_l": 0.3694481830417227}
{"id": 2771, "predictions": ["\u2581// \u2581 Print Detailed Repo Info \u2581prints \u2581the \u2581information \u2581about \u2581a \u2581repository ."], "references": ["\u2581// \u2581 Print Detailed Repo Info \u2581pretty - print s \u2581detailed \u2581repo \u2581 info ."], "bleu": 0.3833468886791474, "rouge_l": 0.49364161849710986}
{"id": 2933, "predictions": ["\u2581// \u2581 New Collection \u2581creates \u2581a \u2581new \u2581 Collection \u2581with \u2581a \u2581given \u2581 name \u2581and \u2581prefix ."], "references": ["\u2581// \u2581 New Collection \u2581creates \u2581a \u2581new \u2581collection ."], "bleu": 0.40052744847255717, "rouge_l": 0.6515353805073432}
{"id": 3433, "predictions": ["\u2581// \u2581 From Blob \u2581takes \u2581a \u2581 byte \u2581array \u2581and \u2581returns \u2581a \u2581 Manifest \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581// \u2581 get \u2581the \u2581manifest \u2581for \u2581the \u2581given \u2581blob ."], "references": ["\u2581// \u2581 From Blob \u2581returns \u2581a \u2581 Manifest \u2581instance \u2581for \u2581the \u2581specified \u2581manifest \u2581blob \u2581and \u2581the \u2581corresponding \u2581 MIME \u2581 type"], "bleu": 0.22798055018612587, "rouge_l": 0.4455511288180611}
{"id": 2518, "predictions": ["\u2581// \u2581Get S take \u2581gets \u2581the \u2581 S dc \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get S toragePoolVolume \u2581returns \u2581a \u2581 Storage Volume \u2581entry \u2581for \u2581the \u2581provided \u2581pool \u2581and \u2581volume \u2581 name"], "bleu": 0.1744339733740079, "rouge_l": 0.4770283479960899}
{"id": 3881, "predictions": ["\u2581// \u2581run Ga z Ex \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581run \u2581the \u2581 top - level \u2581 tool \u2581// \u2581to \u2581run \u2581the \u2581 top - level \u2581 controller ."], "references": ["\u2581// \u2581run Ga z elle \u2581invokes \u2581 gaze ll e \u2581with \u2581\" baz el \u2581run \" . \u2581 In \u2581full Mode , \u2581 gaze ll e \u2581will \u2581// \u2581run \u2581in"], "bleu": 0.1397456755595723, "rouge_l": 0.3333333333333333}
{"id": 3408, "predictions": ["\u2581// \u2581 Parameters ly Prior it ize Replacement \u2581returns \u2581a \u2581 slice \u2581of \u2581 numeric \u2581 items \u2581that \u2581are \u2581// \u2581 checked \u2581by \u2581the \u2581given \u2581 min ing \u2581digest ."], "references": ["\u2581// \u2581 destructive ly Prior it ize Replacement Candidates With Max \u2581is \u2581 destructive ly Prior it ize Replacement Candidates \u2581with \u2581a \u2581parameter \u2581for \u2581the \u2581// \u2581number \u2581of \u2581entries \u2581to"], "bleu": 0.18763299798078292, "rouge_l": 0.3}
{"id": 2128, "predictions": ["\u2581// \u2581 Filesystem Detect \u2581returns \u2581the \u2581 Filesystem \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Filesystem Detect \u2581returns \u2581the \u2581filesystem \u2581on \u2581which \u2581the \u2581passed - in \u2581 path \u2581 s its ."], "bleu": 0.332955486025796, "rouge_l": 0.5899419729206964}
{"id": 3205, "predictions": ["\u2581// \u2581 format Hex \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581 format ."], "references": ["\u2581// \u2581 format Hex \u2581prints \u2581 u \u2581as \u2581a \u2581 hex a decimal \u2581integer \u2581in \u2581Go \u2581notation ."], "bleu": 0.20792427518059642, "rouge_l": 0.42785571142284573}
{"id": 3773, "predictions": ["\u2581// \u2581 remove Exchange \u2581removes \u2581the \u2581 Exchange \u2581from \u2581the \u2581 set \u2581of \u2581 exchanges ."], "references": ["\u2581// \u2581 remove Exchange \u2581removes \u2581a \u2581message \u2581exchange \u2581from \u2581the \u2581 set , \u2581if \u2581it \u2581 exists ."], "bleu": 0.39549114009835573, "rouge_l": 0.6402671755725191}
{"id": 3546, "predictions": ["\u2581// \u2581handle Add Subscription \u2581adds \u2581a \u2581subscription \u2581to \u2581the \u2581 PubSub \u2581topic ."], "references": ["\u2581// \u2581handle Add Subscription \u2581adds \u2581a \u2581 Subscription \u2581for \u2581a \u2581particular \u2581topic . \u2581If \u2581it \u2581is \u2581// \u2581the \u2581first \u2581 Subscription \u2581for \u2581the \u2581topic , \u2581it \u2581will \u2581 announce \u2581that"], "bleu": 0.136080312254745, "rouge_l": 0.3907473309608541}
{"id": 4031, "predictions": ["\u2581// \u2581check Scheduler \u2581checks \u2581if \u2581the \u2581server \u2581is \u2581valid"], "references": ["\u2581// \u2581Check \u2581 Scheduler s \u2581// \u2581It \u2581verifies \u2581your \u2581scheduler \u2581configuration \u2581and \u2581validates \u2581related \u2581 conf s ."], "bleu": 0.05746166391236872, "rouge_l": 0.13974799541809851}
{"id": 3648, "predictions": ["\u2581// \u2581 Read Request \u2581reads \u2581the \u2581request \u2581and \u2581returns \u2581the \u2581HTTP \u2581request ."], "references": ["\u2581// \u2581 Read Request \u2581reads \u2581a \u2581http . Request \u2581from \u2581the \u2581given \u2581 readers ."], "bleu": 0.3223550244889598, "rouge_l": 0.49364161849710986}
{"id": 4080, "predictions": ["\u2581// \u2581 Unbind App \u2581 - \u2581 Unbind s \u2581 app"], "references": ["\u2581// \u2581 Unbind App \u2581makes \u2581the \u2581 unbind \u2581between \u2581the \u2581service \u2581instance \u2581and \u2581an \u2581 app ."], "bleu": 0.21850470907496924, "rouge_l": 0.48139797068771134}
{"id": 2588, "predictions": ["\u2581// \u2581 init Data Cluster Apply \u2581initializes \u2581the \u2581cluster \u2581 data \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Helper \u2581to \u2581initialize \u2581 LXD \u2581 clustering . \u2581// \u2581// \u2581 Used \u2581by \u2581the \u2581' lxd \u2581 init ' \u2581command ."], "bleu": 0.08686812399338324, "rouge_l": 0.2535328345802161}
{"id": 2833, "predictions": ["\u2581// \u2581 Put File Overwrite \u2581updates \u2581the \u2581file \u2581with \u2581the \u2581given \u2581 path \u2581and \u2581 path ."], "references": ["\u2581// \u2581 Put File Overwrite \u2581is \u2581like \u2581 Put File \u2581but \u2581it \u2581overwrite s \u2581the \u2581file \u2581rather \u2581than \u2581// \u2581appending \u2581to \u2581it . \u2581overwrite Index \u2581allows \u2581you \u2581to \u2581specify \u2581the"], "bleu": 0.14999976662462458, "rouge_l": 0.3242524916943521}
{"id": 3415, "predictions": ["\u2581// \u2581Default Cache \u2581returns \u2581a \u2581new \u2581 Blob Info Cache \u2581that \u2581can \u2581be \u2581used \u2581to \u2581store \u2581the \u2581// \u2581cache ."], "references": ["\u2581// \u2581Default Cache \u2581returns \u2581the \u2581default \u2581 Blob Info Cache \u2581implementation \u2581appropriate \u2581for \u2581sys ."], "bleu": 0.29945160623183903, "rouge_l": 0.5278846153846154}
{"id": 2278, "predictions": ["\u2581// \u2581 get L Last State \u2581returns \u2581the \u2581state \u2581of \u2581the \u2581 container ' s \u2581state ."], "references": ["\u2581// \u2581Get \u2581 lxc \u2581 container \u2581state , \u2581with \u2581 1 \u2581second \u2581timeout \u2581// \u2581If \u2581we \u2581don ' t \u2581 get \u2581a \u2581reply , \u2581assume \u2581the \u2581 lxc \u2581monitor \u2581is"], "bleu": 0.06926038688365581, "rouge_l": 0.20265780730897007}
{"id": 2053, "predictions": ["\u2581// \u2581 Certificates Get \u2581returns \u2581a \u2581list \u2581of \u2581certificates \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Certificates Get \u2581returns \u2581all \u2581certificates \u2581from \u2581the \u2581 DB \u2581as \u2581 Cert Base Info \u2581objects ."], "bleu": 0.2635729096944705, "rouge_l": 0.5015416238437821}
{"id": 3991, "predictions": ["\u2581// \u2581 Respond With Proto \u2581writes \u2581a \u2581message \u2581to \u2581the \u2581http . HandlerFunc ."], "references": ["\u2581// Respond With Proto \u2581returns \u2581a \u2581handler \u2581that \u2581respond s \u2581to \u2581a \u2581request \u2581with \u2581the \u2581specified \u2581 status \u2581 code \u2581and \u2581a \u2581 body \u2581// containing \u2581the \u2581 protobuf \u2581serialization"], "bleu": 0.0642578093873745, "rouge_l": 0.2986013986013986}
{"id": 2407, "predictions": ["\u2581// \u2581 Events \u2581returns \u2581a \u2581 slice \u2581of \u2581events \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 watch \u2581the \u2581 container \u2581// \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Events \u2581starts \u2581a \u2581task \u2581that \u2581 continuous ly \u2581 monitors \u2581the \u2581list \u2581of \u2581cluster \u2581nodes \u2581and \u2581// \u2581maintain s \u2581a \u2581pool \u2581of \u2581websocket \u2581connections \u2581against \u2581all \u2581of \u2581them"], "bleu": 0.098599471793331, "rouge_l": 0.3267857142857143}
{"id": 2343, "predictions": ["\u2581// \u2581 Update Cluster \u2581updates \u2581the \u2581cluster \u2581with \u2581the \u2581given \u2581 ETag ."], "references": ["\u2581// \u2581 Update Cluster \u2581requests \u2581to \u2581bootstrap \u2581a \u2581new \u2581cluster \u2581or \u2581 join \u2581an \u2581existing \u2581one ."], "bleu": 0.21980365308689628, "rouge_l": 0.4557097118463179}
{"id": 3003, "predictions": ["\u2581// \u2581 canonicalize Subject s \u2581returns \u2581the \u2581 subject \u2581 subject \u2581 info \u2581for \u2581the \u2581server ."], "references": ["\u2581// \u2581 canonicalize Subject s \u2581applies \u2581 canonicalize Subject \u2581to \u2581a \u2581list"], "bleu": 0.2749977595322415, "rouge_l": 0.42707117852975496}
{"id": 3372, "predictions": ["\u2581// \u2581Remove Authentication \u2581removes \u2581the \u2581specified \u2581 auth \u2581 key \u2581from \u2581the \u2581registry"], "references": ["\u2581// \u2581Remove Authentication \u2581deletes \u2581the \u2581credentials \u2581stored \u2581in \u2581 auth . json"], "bleu": 0.21972813874997157, "rouge_l": 0.4834874504623514}
{"id": 3063, "predictions": ["\u2581// \u2581 Delete All \u2581deletes \u2581all \u2581 active \u2581 auth \u2581 auth"], "references": ["\u2581// \u2581 Delete All \u2581deletes \u2581everything \u2581in \u2581the \u2581cluster . \u2581// \u2581Use \u2581with \u2581 caution , \u2581there \u2581is \u2581no \u2581 undo ."], "bleu": 0.1777333473258092, "rouge_l": 0.391025641025641}
{"id": 2570, "predictions": ["\u2581// \u2581 init C Group \u2581initializes \u2581the \u2581 OS C \u2581 controller"], "references": ["\u2581// \u2581 Detect \u2581 C Group \u2581support ."], "bleu": 0.17996531271765898, "rouge_l": 0.4149659863945578}
{"id": 3032, "predictions": ["\u2581// \u2581 Git Hook Service \u2581returns \u2581a \u2581 Service \u2581service"], "references": ["\u2581// \u2581 Git hook Service \u2581returns \u2581a \u2581 k 8 s \u2581service \u2581that \u2581expose s \u2581a \u2581public \u2581 IP"], "bleu": 0.19648283127406732, "rouge_l": 0.5224839400428266}
{"id": 3222, "predictions": ["\u2581// \u2581 Watch Compare \u2581returns \u2581a \u2581diff \u2581of \u2581the \u2581 controller \u2581that \u2581is \u2581 watched \u2581for \u2581// \u2581the \u2581 path \u2581to \u2581the \u2581 path ."], "references": ["\u2581// \u2581 stateless Compare \u2581compares \u2581two \u2581values \u2581and \u2581returns \u2581the \u2581result . \u2581// \u2581This \u2581function \u2581is \u2581 stateless \u2581in \u2581that \u2581it \u2581does \u2581not \u2581alter \u2581the \u2581current \u2581result , \u2581// \u2581or"], "bleu": 0.08194144536762746, "rouge_l": 0.28621700879765394}
{"id": 2375, "predictions": ["\u2581// \u2581 StoragePool Update \u2581updates \u2581a \u2581 Pool \u2581with \u2581the \u2581specified \u2581 poolName ."], "references": ["\u2581// \u2581 StoragePool Update \u2581updates \u2581a \u2581storage \u2581pool ."], "bleu": 0.41374412020518814, "rouge_l": 0.6335311572700296}
{"id": 2130, "predictions": ["\u2581// \u2581update From V NF \u2581updates \u2581the \u2581 Raft \u2581 data \u2581from \u2581the \u2581 V replication \u2581 table ."], "references": ["\u2581// \u2581 Schema \u2581updates \u2581begin \u2581here \u2581// \u2581 Copy \u2581 core . https _ address \u2581to \u2581cluster . https _ address \u2581in \u2581case \u2581 this \u2581node \u2581is \u2581// \u2581 clustered"], "bleu": 0.05104610312968572, "rouge_l": 0.2353697749196142}
{"id": 2700, "predictions": ["\u2581// \u2581 renew User Credentials \u2581is \u2581used \u2581to \u2581create \u2581a \u2581new \u2581 renew \u2581user ."], "references": ["\u2581// \u2581 renew User Credentials \u2581extends \u2581the \u2581 TTL \u2581of \u2581the \u2581 Pac hyd er m \u2581authentication \u2581 token \u2581// \u2581' user Token ', \u2581using \u2581the \u2581vault \u2581plugin ' s"], "bleu": 0.11519859525227717, "rouge_l": 0.2515463917525773}
{"id": 2246, "predictions": ["\u2581// \u2581try Cluster Rebalance \u2581checks \u2581if \u2581the \u2581cluster \u2581is \u2581a \u2581 set \u2581of \u2581 active \u2581cluster"], "references": ["\u2581// \u2581This \u2581function \u2581is \u2581used \u2581to \u2581 notify \u2581the \u2581leader \u2581that \u2581a \u2581node \u2581was \u2581removed , \u2581it \u2581will \u2581// \u2581decide \u2581whether \u2581to \u2581 promote \u2581a \u2581new \u2581node \u2581as \u2581database \u2581node"], "bleu": 0.0438601172819221, "rouge_l": 0.16486486486486487}
{"id": 2981, "predictions": ["\u2581// \u2581 New Google Client From Secret \u2581creates \u2581a \u2581new \u2581Google \u2581client \u2581 Client ."], "references": ["\u2581// \u2581 New Google Client From Secret \u2581creates \u2581a \u2581 google \u2581client \u2581by \u2581reading \u2581credentials \u2581// \u2581from \u2581a \u2581 mounted \u2581Google Secret . \u2581You \u2581may \u2581pass \u2581\"\" \u2581for \u2581bucket \u2581in"], "bleu": 0.2332246788382182, "rouge_l": 0.5030927835051546}
{"id": 2865, "predictions": ["\u2581// \u2581create Repo \u2581creates \u2581a \u2581new \u2581repo ."], "references": ["\u2581// \u2581create Repo \u2581creates \u2581a \u2581new \u2581repo \u2581in \u2581the \u2581cluster"], "bleu": 0.6723698847001903, "rouge_l": 0.7624999999999998}
{"id": 3006, "predictions": ["\u2581// \u2581 Equal \u2581checks \u2581if \u2581the \u2581provided \u2581value \u2581is \u2581equal \u2581to \u2581the \u2581provided \u2581value ."], "references": ["\u2581// \u2581 Equal \u2581checks \u2581equality \u2581of \u2581two \u2581values ."], "bleu": 0.23961829057131984, "rouge_l": 0.4363376251788269}
{"id": 3040, "predictions": ["\u2581// \u2581 Dash Service \u2581returns \u2581a \u2581 v 1. Service \u2581object \u2581for \u2581a \u2581 Asset"], "references": ["\u2581// \u2581 Dash Service \u2581creates \u2581a \u2581 Service \u2581for \u2581the \u2581 pac hyd er m \u2581 dashboard ."], "bleu": 0.23569521182656558, "rouge_l": 0.5366568914956013}
{"id": 3695, "predictions": ["\u2581// \u2581 flush Fragment \u2581 flush es \u2581the \u2581fragment \u2581to \u2581the \u2581 flush ."], "references": ["\u2581// \u2581 flush Fragment \u2581sends \u2581a \u2581fragment \u2581to \u2581the \u2581peer \u2581over \u2581the \u2581connection"], "bleu": 0.33887143631861766, "rouge_l": 0.5220048899755501}
{"id": 2783, "predictions": ["\u2581// \u2581 Print Worker Status \u2581prints \u2581the \u2581 status \u2581of \u2581the \u2581 status \u2581of \u2581the \u2581 status \u2581of \u2581the \u2581// \u2581 status \u2581of \u2581the \u2581 status \u2581of \u2581the \u2581 status"], "references": ["\u2581// \u2581 Print Worker Status \u2581pretty \u2581prints \u2581a \u2581worker \u2581 status ."], "bleu": 0.17115279944073908, "rouge_l": 0.4128595600676818}
{"id": 3799, "predictions": ["\u2581// \u2581 Introspect State \u2581 - \u2581 Releases \u2581a \u2581 model \u2581 set"], "references": ["\u2581// \u2581 Introspect State \u2581returns \u2581the \u2581runtime \u2581state \u2581for \u2581 this \u2581mess sage \u2581exchange \u2581 set ."], "bleu": 0.23241406637334297, "rouge_l": 0.4557097118463179}
{"id": 3204, "predictions": ["\u2581// \u2581 format String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581string ."], "references": ["\u2581// \u2581 format String \u2581prints \u2581 s \u2581as \u2581a \u2581double - quoted \u2581or \u2581 backtick - quoted \u2581string ."], "bleu": 0.19190444833388595, "rouge_l": 0.43394308943089427}
{"id": 3011, "predictions": ["\u2581// \u2581 No Error Within T \u2581calls \u2581the \u2581function \u2581to \u2581 call \u2581 f . Within \u2581but \u2581does \u2581not \u2581// \u2581 call \u2581 this \u2581function \u2581to \u2581 call \u2581the \u2581"], "references": ["\u2581// \u2581 No Error Within T \u2581checks \u2581that \u2581' f ' \u2581finishes \u2581within \u2581time \u2581' t ' \u2581and \u2581does \u2581not \u2581 emit \u2581an \u2581// \u2581error"], "bleu": 0.2171788734284664, "rouge_l": 0.3696969696969697}
{"id": 3217, "predictions": ["\u2581// \u2581 coalesce Adjacent Edits \u2581 coalesce s \u2581the \u2581 author \u2581 groups \u2581of \u2581the \u2581given \u2581 script \u2581and \u2581 set \u2581the \u2581// \u2581 author \u2581 area \u2581of \u2581the \u2581"], "references": ["\u2581// \u2581 coalesce Adjacent Edits \u2581 coalesce s \u2581the \u2581list \u2581of \u2581 edits \u2581into \u2581 groups \u2581of \u2581 adjacent \u2581// \u2581equal \u2581or \u2581un equal \u2581counts ."], "bleu": 0.3534156642122564, "rouge_l": 0.5427046263345195}
{"id": 2550, "predictions": ["\u2581// \u2581 Forwarded Response If Target Is Remote \u2581returns \u2581a \u2581 Response \u2581that \u2581will \u2581 add \u2581the \u2581given \u2581 URL \u2581to \u2581the \u2581// \u2581given \u2581 URL ."], "references": ["\u2581// \u2581 Forwarded Response If Target Is Remote \u2581 redirects \u2581a \u2581request \u2581to \u2581the \u2581request \u2581has \u2581a \u2581// \u2581 targetNode \u2581parameter \u2581pointing \u2581to \u2581a \u2581node \u2581which \u2581is \u2581not \u2581the \u2581local"], "bleu": 0.29805006107123466, "rouge_l": 0.45185185185185195}
{"id": 3521, "predictions": ["\u2581// \u2581 Expr From Value \u2581creates \u2581a \u2581 Expr \u2581from \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 Expr From Value \u2581converts \u2581the \u2581given \u2581 Value \u2581into \u2581an \u2581 Expr \u2581or \u2581returns \u2581an \u2581error ."], "bleu": 0.2867324512215033, "rouge_l": 0.471953578336557}
{"id": 2618, "predictions": ["\u2581// \u2581 Storage Volume Config Get \u2581returns \u2581the \u2581storage \u2581 config \u2581for \u2581a \u2581given \u2581volume ."], "references": ["\u2581// \u2581 Storage Volume Config Get \u2581gets \u2581the \u2581 config \u2581of \u2581a \u2581storage \u2581volume ."], "bleu": 0.4450050658086207, "rouge_l": 0.7787234042553192}
{"id": 3170, "predictions": ["\u2581// \u2581 dedup Env Case \u2581 dedup s \u2581the \u2581 keys \u2581in \u2581the \u2581 set \u2581of \u2581environment \u2581variables ."], "references": ["\u2581// \u2581 dedup Env Case \u2581is \u2581 dedup Env \u2581with \u2581a \u2581case \u2581option \u2581for \u2581testing . \u2581// \u2581If \u2581 caseInsensitive \u2581is \u2581true , \u2581the \u2581case \u2581of \u2581 keys \u2581is \u2581ignored"], "bleu": 0.17774276311369672, "rouge_l": 0.392282958199357}
{"id": 2170, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581file \u2581at \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Get \u2581reads \u2581the \u2581 path ' s \u2581 content \u2581from \u2581your \u2581local \u2581filesystem ."], "bleu": 0.16451929399933107, "rouge_l": 0.4}
{"id": 2528, "predictions": ["\u2581// \u2581 Rename s \u2581implements \u2581storage . Server . Rename s ."], "references": ["\u2581// \u2581 Rename S toragePoolVolume \u2581rename s \u2581a \u2581storage \u2581volume"], "bleu": 0.21401603033752975, "rouge_l": 0.46212121212121204}
{"id": 2242, "predictions": ["\u2581// \u2581 Cancel able Download \u2581cancel s \u2581a \u2581remote \u2581 call \u2581to \u2581the \u2581remote \u2581server ."], "references": ["\u2581// \u2581 Cancel able Download \u2581performs \u2581an \u2581http \u2581request \u2581and \u2581allows \u2581for \u2581it \u2581to \u2581be \u2581 canceled \u2581at \u2581any \u2581time"], "bleu": 0.23579774048113786, "rouge_l": 0.3267857142857143}
{"id": 3168, "predictions": ["\u2581// \u2581 Stdin Pipe \u2581returns \u2581a \u2581 pipe \u2581that \u2581will \u2581be \u2581called \u2581when \u2581the \u2581command \u2581// \u2581has \u2581been \u2581 set \u2581to \u2581the \u2581 exec \u2581process ."], "references": ["\u2581// \u2581 Stdin Pipe \u2581returns \u2581a \u2581 pipe \u2581that \u2581will \u2581be \u2581connected \u2581to \u2581the \u2581command ' s \u2581// \u2581standard \u2581input \u2581when \u2581the \u2581command \u2581starts . \u2581// \u2581The \u2581 pipe \u2581will"], "bleu": 0.4342718513715163, "rouge_l": 0.5641618497109826}
{"id": 2462, "predictions": ["\u2581// \u2581 Container Profiles \u2581returns \u2581a \u2581list \u2581of \u2581 container \u2581profiles"], "references": ["\u2581// \u2581 Container Profiles \u2581returns \u2581a \u2581list \u2581of \u2581profiles \u2581for \u2581a \u2581given \u2581 container \u2581 ID ."], "bleu": 0.4555921706164929, "rouge_l": 0.6877113866967306}
{"id": 2932, "predictions": ["\u2581// \u2581 New Datum Factory \u2581creates \u2581a \u2581new \u2581 Value Factory \u2581from \u2581a \u2581 Client ."], "references": ["\u2581// \u2581 New Datum Factory \u2581creates \u2581a \u2581datum Factory \u2581for \u2581an \u2581input ."], "bleu": 0.4378826865860793, "rouge_l": 0.6324884792626728}
{"id": 3056, "predictions": ["\u2581// \u2581delete Job \u2581deletes \u2581the \u2581job \u2581from \u2581the \u2581 container ."], "references": ["\u2581// \u2581delete Job \u2581is \u2581identical \u2581to \u2581update JobState , \u2581except \u2581that \u2581job Ptr \u2581points \u2581to \u2581a \u2581job \u2581// \u2581that \u2581should \u2581be \u2581deleted \u2581rather \u2581than \u2581marked \u2581failed . \u2581 Jobs \u2581may"], "bleu": 0.04334741445875218, "rouge_l": 0.22509225092250923}
{"id": 3504, "predictions": ["\u2581// \u2581 Publish With Details \u2581 publishes \u2581a \u2581 content \u2581with \u2581 content \u2581 content"], "references": ["\u2581// \u2581 Publish With Details \u2581is \u2581used \u2581for \u2581 fine \u2581 grain ed \u2581control \u2581over \u2581record \u2581 publishing"], "bleu": 0.27300392196857415, "rouge_l": 0.4770283479960899}
{"id": 3404, "predictions": ["\u2581// \u2581image Load Goroutine \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581reads \u2581the \u2581 config \u2581from \u2581the \u2581// \u2581 pipe ."], "references": ["\u2581// \u2581image Load Goroutine \u2581accepts \u2581tar \u2581stream \u2581on \u2581reader , \u2581sends \u2581it \u2581to \u2581 c , \u2581and \u2581reports \u2581error \u2581or \u2581 success \u2581by \u2581writing \u2581to \u2581 status Channel"], "bleu": 0.1281706731714156, "rouge_l": 0.28315649867374004}
{"id": 2815, "predictions": ["\u2581// \u2581 Flush Commit F \u2581 flush es \u2581all \u2581 active \u2581 data \u2581from \u2581the \u2581 set \u2581of \u2581 repositories \u2581to \u2581the \u2581// \u2581given \u2581 Commit ."], "references": ["\u2581// \u2581 Flush Commit F \u2581calls \u2581 f \u2581with \u2581commits \u2581that \u2581have \u2581the \u2581specified \u2581` commits ` \u2581as \u2581// \u2581 provenance . \u2581Note \u2581that \u2581it \u2581can \u2581block \u2581if \u2581jobs \u2581have"], "bleu": 0.17130587338306588, "rouge_l": 0.34757834757834755}
{"id": 2102, "predictions": ["\u2581// \u2581 PrivateKey \u2581returns \u2581the \u2581private \u2581 key \u2581of \u2581the \u2581certificate ."], "references": ["\u2581// \u2581 PrivateKey \u2581is \u2581a \u2581convenience \u2581to \u2581 encode \u2581the \u2581underlying \u2581private \u2581 key ."], "bleu": 0.2319425891149089, "rouge_l": 0.5809523809523809}
{"id": 2196, "predictions": ["\u2581// \u2581Get Project Usage \u2581returns \u2581the \u2581usage \u2581of \u2581the \u2581 active \u2581device \u2581 path"], "references": ["\u2581// \u2581Get Project Usage \u2581returns \u2581the \u2581current \u2581 consumption"], "bleu": 0.41374412020518814, "rouge_l": 0.6335311572700296}
{"id": 3845, "predictions": ["\u2581// \u2581 Handle \u2581is \u2581the \u2581handler \u2581for \u2581 this \u2581server ."], "references": ["\u2581// \u2581 Handle \u2581handles \u2581an \u2581incoming \u2581 T Channel \u2581 call \u2581and \u2581forwards \u2581it \u2581to \u2581the \u2581correct \u2581handler ."], "bleu": 0.12183039909635145, "rouge_l": 0.38164754953076124}
{"id": 3579, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581server ."], "references": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 test \u2581server \u2581called \u2581by \u2581the \u2581 Client \u2581and \u2581other \u2581upstream \u2581servers ."], "bleu": 0.1518868696977999, "rouge_l": 0.5188335358444714}
{"id": 2719, "predictions": ["\u2581// \u2581 Run Git Hook Server \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581 Run \u2581the \u2581 git \u2581hook"], "references": ["\u2581// \u2581 Run Git Hook Server \u2581starts \u2581the \u2581webhook \u2581server"], "bleu": 0.3187271473320672, "rouge_l": 0.5271604938271606}
{"id": 2843, "predictions": ["\u2581// \u2581Walk \u2581 - \u2581walk s \u2581the \u2581 APIClient \u2581to \u2581a \u2581file"], "references": ["\u2581// \u2581Walk \u2581walk s \u2581the \u2581 pfs \u2581filesystem \u2581root ed \u2581at \u2581 path . \u2581walk Fn \u2581will \u2581be \u2581called \u2581for \u2581each \u2581// \u2581file \u2581found \u2581under \u2581 path \u2581in \u2581 l"], "bleu": 0.07902598128872206, "rouge_l": 0.30942028985507253}
{"id": 4077, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581service \u2581with \u2581the \u2581given \u2581service \u2581and \u2581 ID ."], "references": ["\u2581// \u2581 Update \u2581changes \u2581information s \u2581of \u2581the \u2581service \u2581instance ."], "bleu": 0.20333448190047887, "rouge_l": 0.49061662198391426}
{"id": 3911, "predictions": ["\u2581// \u2581 New Rule \u2581creates \u2581a \u2581new \u2581rule \u2581 type ."], "references": ["\u2581// \u2581 New Rule \u2581creates \u2581a \u2581new , \u2581 empty \u2581rule \u2581with \u2581the \u2581given \u2581 kind \u2581and \u2581 name ."], "bleu": 0.2929996057491496, "rouge_l": 0.6130653266331658}
{"id": 3505, "predictions": ["\u2581// \u2581 Resolve Value \u2581 resolves \u2581the \u2581value \u2581of \u2581a \u2581 Plan Value \u2581to \u2581a \u2581 Value ."], "references": ["\u2581// \u2581 Resolve Value \u2581 resolves \u2581a \u2581 Plan Value \u2581as \u2581a \u2581single \u2581value \u2581based \u2581on \u2581the \u2581supplied \u2581 bind vars ."], "bleu": 0.3863216050166469, "rouge_l": 0.6384863123993559}
{"id": 3954, "predictions": ["\u2581// \u2581 select Package \u2581returns \u2581a \u2581package \u2581from \u2581the \u2581given \u2581directory"], "references": ["\u2581// \u2581 select Package \u2581choose s \u2581a \u2581package \u2581to \u2581generate \u2581rules \u2581for ."], "bleu": 0.3040101477525803, "rouge_l": 0.4925975773889637}
{"id": 2389, "predictions": ["\u2581// \u2581 S all Delete \u2581deletes \u2581a \u2581 set \u2581of \u2581storage \u2581 IDs ."], "references": ["\u2581// \u2581 S toragePoolVolume Delete \u2581deletes \u2581the \u2581storage \u2581volume \u2581attached \u2581to \u2581a \u2581given \u2581storage \u2581// \u2581pool ."], "bleu": 0.1747567854723579, "rouge_l": 0.5072765072765073}
{"id": 2054, "predictions": ["\u2581// \u2581 Certificate Get \u2581returns \u2581the \u2581 Cert Info \u2581for \u2581the \u2581given \u2581 IP \u2581address ."], "references": ["\u2581// \u2581 Certificate Get \u2581gets \u2581an \u2581 Cert Base Info \u2581object \u2581from \u2581the \u2581database . \u2581// \u2581The \u2581argument \u2581fingerprint \u2581will \u2581be \u2581 queried \u2581with \u2581a \u2581LIKE \u2581query , \u2581means \u2581you"], "bleu": 0.1149274481183857, "rouge_l": 0.370945945945946}
{"id": 4056, "predictions": ["\u2581// \u2581aggregate Container sBy \u2581returns \u2581a \u2581 map \u2581of \u2581 container \u2581names \u2581for \u2581a \u2581given \u2581 filter ."], "references": ["\u2581// \u2581aggregate Container sBy \u2581 aggregates \u2581and \u2581counts \u2581how \u2581many \u2581containers \u2581// \u2581exist \u2581each \u2581node \u2581that \u2581matches \u2581received \u2581filters"], "bleu": 0.18763523663530085, "rouge_l": 0.26895943562610225}
{"id": 3608, "predictions": ["\u2581// \u2581 Serve \u2581starts \u2581a \u2581new \u2581 listen \u2581on \u2581the \u2581server ."], "references": ["\u2581// \u2581 Serve \u2581serves \u2581incoming \u2581requests \u2581using \u2581the \u2581provided \u2581listener . \u2581// \u2581The \u2581local \u2581peer \u2581 info \u2581is \u2581 set \u2581synchronously , \u2581but \u2581the \u2581actual \u2581socket \u2581listening \u2581is \u2581done \u2581in"], "bleu": 0.04962965758858181, "rouge_l": 0.22101449275362317}
{"id": 3600, "predictions": ["\u2581// \u2581 Begin Call \u2581starts \u2581a \u2581 Outbound Call \u2581with \u2581the \u2581given \u2581 call ."], "references": ["\u2581// \u2581 Begin Call \u2581starts \u2581a \u2581new \u2581 call \u2581to \u2581 this \u2581specific \u2581peer , \u2581returning \u2581an \u2581 Outbound Call \u2581that \u2581can \u2581// \u2581be \u2581used \u2581to \u2581 write \u2581the \u2581arguments"], "bleu": 0.18523972881834402, "rouge_l": 0.41924398625429554}
{"id": 2274, "predictions": ["\u2581// \u2581 container L X C Build \u2581returns \u2581a \u2581 container \u2581 L X \u2581 container ."], "references": ["\u2581// \u2581Create \u2581a \u2581 container \u2581struct \u2581without \u2581 initializing \u2581it ."], "bleu": 0.15464260451973766, "rouge_l": 0.4457978075517661}
{"id": 2770, "predictions": ["\u2581// \u2581 Print Repo Info \u2581prints \u2581a \u2581 Repo Info \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Print Repo Info \u2581pretty - print s \u2581repo \u2581 info ."], "bleu": 0.3237722713145643, "rouge_l": 0.5065243179122182}
{"id": 2107, "predictions": ["\u2581// \u2581Create Containers \u2581creates \u2581a \u2581 container \u2581with \u2581the \u2581given \u2581number \u2581of \u2581workers \u2581and \u2581// \u2581returns \u2581the \u2581 container ' s \u2581 container ."], "references": ["\u2581// \u2581Create Containers \u2581create \u2581the \u2581specified \u2581number \u2581of \u2581containers ."], "bleu": 0.12049514584750938, "rouge_l": 0.4447916666666667}
{"id": 3873, "predictions": ["\u2581// \u2581 Map \u2581returns \u2581a \u2581 slice \u2581of \u2581strings \u2581for \u2581a \u2581platform ."], "references": ["\u2581// \u2581 Map \u2581applies \u2581a \u2581function \u2581that \u2581processes \u2581individual \u2581strings \u2581to \u2581the \u2581strings \u2581// \u2581in \u2581\" ps \" \u2581and \u2581returns \u2581a \u2581new \u2581 Platform Strings \u2581with \u2581the \u2581result . \u2581"], "bleu": 0.06496622227650835, "rouge_l": 0.30391459074733096}
{"id": 3863, "predictions": ["\u2581// \u2581 close Network \u2581closes \u2581the \u2581connection \u2581and \u2581 close \u2581the \u2581connection ."], "references": ["\u2581// \u2581 close Network \u2581closes \u2581the \u2581network \u2581connection \u2581and \u2581all \u2581network - related \u2581channels . \u2581// \u2581This \u2581should \u2581only \u2581be \u2581done \u2581in \u2581response \u2581to \u2581a \u2581 fatal \u2581connection \u2581or \u2581protocol"], "bleu": 0.13907287648170694, "rouge_l": 0.43416370106761565}
{"id": 2817, "predictions": ["\u2581// \u2581 Subscribe Commit \u2581 subscribe s \u2581to \u2581a \u2581 set \u2581of \u2581 machines \u2581and \u2581 releases \u2581it ."], "references": ["\u2581// \u2581 Subscribe Commit \u2581is \u2581like \u2581 List Commit \u2581but \u2581it \u2581keeps \u2581listening \u2581for \u2581commits \u2581as \u2581// \u2581they \u2581come \u2581in ."], "bleu": 0.18144033655096503, "rouge_l": 0.34687246141348493}
{"id": 3423, "predictions": ["\u2581// \u2581 Choose Manifest Instance From Manifest List \u2581returns \u2581the \u2581digest \u2581of \u2581the \u2581image \u2581from \u2581the \u2581// \u2581manifest \u2581list ."], "references": ["\u2581// \u2581 Choose Manifest Instance From Manifest List \u2581returns \u2581a \u2581digest \u2581of \u2581a \u2581manifest \u2581appropriate \u2581// \u2581for \u2581the \u2581current \u2581system \u2581from \u2581the \u2581manifest \u2581available \u2581from \u2581 src ."], "bleu": 0.3533268669743523, "rouge_l": 0.6472148541114059}
{"id": 3842, "predictions": ["\u2581// \u2581 New Real Relay \u2581returns \u2581a \u2581new \u2581 Relay \u2581 PDU ."], "references": ["\u2581// \u2581 New Real Relay \u2581creates \u2581a \u2581 T Channel \u2581 relay ."], "bleu": 0.3975360176263951, "rouge_l": 0.6923076923076923}
{"id": 3583, "predictions": ["\u2581// \u2581Get New \u2581returns \u2581a \u2581new \u2581 Peer \u2581instance"], "references": ["\u2581// \u2581Get New \u2581returns \u2581a \u2581new , \u2581previously \u2581 unselected \u2581peer \u2581from \u2581the \u2581peer \u2581list , \u2581or \u2581nil , \u2581// \u2581if \u2581no \u2581new \u2581 unselected \u2581peer \u2581can \u2581be \u2581found ."], "bleu": 0.06657989109570613, "rouge_l": 0.32720306513409964}
{"id": 2136, "predictions": ["\u2581// \u2581 Rename Container \u2581rename s \u2581a \u2581 container \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Rename Container \u2581rename s \u2581the \u2581 M AAS \u2581device \u2581for \u2581the \u2581 container \u2581without \u2581rel easing \u2581any \u2581allocation"], "bleu": 0.3104879110800733, "rouge_l": 0.5013698630136987}
{"id": 4004, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581underlying \u2581writer ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581and \u2581 flush es \u2581the \u2581 data ."], "bleu": 0.39832871551569504, "rouge_l": 0.6666666666666666}
{"id": 3186, "predictions": ["\u2581// \u2581 Restore \u2581is \u2581used \u2581to \u2581restore \u2581a \u2581 set \u2581of \u2581 data \u2581from \u2581the \u2581 controller"], "references": ["\u2581// \u2581 Restore \u2581cluster \u2581state \u2581from \u2581an \u2581extract \u2581series \u2581of \u2581operations ."], "bleu": 0.1487964117124549, "rouge_l": 0.2847141190198366}
{"id": 3704, "predictions": ["\u2581// \u2581parse Inbound Fragment \u2581parses \u2581the \u2581 inbound \u2581fragment \u2581and \u2581 data \u2581from \u2581the \u2581frame ."], "references": ["\u2581// \u2581parse Inbound Fragment \u2581parses \u2581an \u2581incoming \u2581fragment \u2581based \u2581on \u2581the \u2581given \u2581message"], "bleu": 0.30277029197532096, "rouge_l": 0.4919354838709677}
{"id": 2429, "predictions": ["\u2581// \u2581 tls Check Cert \u2581returns \u2581the \u2581 TLS Check Cert \u2581for \u2581the \u2581given \u2581 CA Info"], "references": ["\u2581// \u2581Return \u2581true \u2581if \u2581the \u2581given \u2581request \u2581is \u2581present ing \u2581the \u2581given \u2581cluster \u2581certificate ."], "bleu": 0.10802314890908067, "rouge_l": 0.2528497409326425}
{"id": 2976, "predictions": ["\u2581// \u2581 Mount \u2581 mounts \u2581the \u2581 container \u2581to \u2581the \u2581 path"], "references": ["\u2581// \u2581 Mount \u2581 pfs \u2581to \u2581 mountPoint , \u2581opts \u2581may \u2581be \u2581 left \u2581nil ."], "bleu": 0.23304036884297266, "rouge_l": 0.4178082191780822}
{"id": 2339, "predictions": ["\u2581// \u2581 Project Map \u2581returns \u2581a \u2581 map \u2581of \u2581 Project Map ."], "references": ["\u2581// \u2581 Project Map \u2581returns \u2581the \u2581names \u2581and \u2581 ids \u2581of \u2581all \u2581available \u2581projects ."], "bleu": 0.33198814405786686, "rouge_l": 0.5641618497109826}
{"id": 3731, "predictions": ["\u2581// \u2581 add Relay Item \u2581adds \u2581a \u2581new \u2581 relay \u2581to \u2581the \u2581layer ."], "references": ["\u2581// \u2581 add Relay Item \u2581adds \u2581a \u2581 relay \u2581item \u2581to \u2581either \u2581outbound \u2581or \u2581 inbound ."], "bleu": 0.439490048233744, "rouge_l": 0.6975051975051975}
{"id": 2782, "predictions": ["\u2581// \u2581 Print Pipeline Info \u2581prints \u2581the \u2581 description \u2581of \u2581the \u2581pipeline ."], "references": ["\u2581// \u2581 Print Pipeline Info \u2581pretty - print s \u2581pipeline \u2581 info ."], "bleu": 0.3872015705071016, "rouge_l": 0.5384615384615383}
{"id": 4075, "predictions": ["\u2581// \u2581 Delete Instance \u2581deletes \u2581a \u2581instance \u2581of \u2581a \u2581service \u2581instance ."], "references": ["\u2581// \u2581 Delete Instance \u2581deletes \u2581the \u2581service \u2581instance \u2581from \u2581the \u2581database ."], "bleu": 0.4408231875586727, "rouge_l": 0.6666666666666666}
{"id": 2684, "predictions": ["\u2581// \u2581 Main RBD Snapshot List Clone s \u2581creates \u2581a \u2581new \u2581 VM \u2581 balancer ."], "references": ["\u2581// \u2581 ceph RBD Snapshot List Clone s \u2581list \u2581all \u2581clone s \u2581of \u2581an \u2581 RBD \u2581snapshot"], "bleu": 0.30658668997935346, "rouge_l": 0.4822134387351779}
{"id": 2590, "predictions": ["\u2581// \u2581 format Log fmt Value \u2581formats \u2581a \u2581string \u2581value \u2581into \u2581a \u2581string ."], "references": ["\u2581// \u2581 format Value \u2581formats \u2581a \u2581value \u2581for \u2581serialization"], "bleu": 0.24601372576927547, "rouge_l": 0.6335311572700296}
{"id": 2197, "predictions": ["\u2581// \u2581Set Project Quota \u2581sets \u2581the \u2581quota \u2581for \u2581the \u2581specified \u2581 path ."], "references": ["\u2581// \u2581Set Project Quota \u2581sets \u2581the \u2581quota \u2581on \u2581the \u2581project \u2581 id"], "bleu": 0.5437427682227519, "rouge_l": 0.725231175693527}
{"id": 2332, "predictions": ["\u2581// \u2581 Render Template \u2581renders \u2581the \u2581template \u2581template \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581template ."], "references": ["\u2581// \u2581 Render Template \u2581renders \u2581a \u2581 pong o 2 \u2581template ."], "bleu": 0.3064859599765908, "rouge_l": 0.5694282380396732}
{"id": 2315, "predictions": ["\u2581// \u2581Get Network Names \u2581returns \u2581the \u2581names \u2581of \u2581the \u2581network \u2581names \u2581of \u2581the \u2581 LXD \u2581 controller ."], "references": ["\u2581// \u2581Get Network Names \u2581returns \u2581a \u2581list \u2581of \u2581network \u2581names"], "bleu": 0.28889830842564407, "rouge_l": 0.6024691358024692}
{"id": 3277, "predictions": ["\u2581// \u2581 New Transport \u2581creates \u2581a \u2581new \u2581http . Transport"], "references": ["\u2581// \u2581 New Transport \u2581Creates \u2581a \u2581default \u2581transport"], "bleu": 0.3672056269893592, "rouge_l": 0.5669144981412639}
{"id": 4074, "predictions": ["\u2581// \u2581ensure Default \u2581ensures \u2581that \u2581the \u2581 plan \u2581 config \u2581is \u2581valid"], "references": ["\u2581// \u2581ensure Default \u2581creates \u2581and \u2581stores \u2581an \u2581autogenerated \u2581plan \u2581in \u2581case \u2581of \u2581no \u2581 plans \u2581// \u2581 exists ."], "bleu": 0.1194284666865302, "rouge_l": 0.30995934959349586}
{"id": 2204, "predictions": ["\u2581// \u2581 Count All \u2581returns \u2581the \u2581number \u2581of \u2581 data \u2581in \u2581the \u2581database ."], "references": ["\u2581// \u2581 Count All \u2581returns \u2581a \u2581 map \u2581 assoc i ating \u2581each \u2581 table \u2581 name \u2581in \u2581the \u2581database \u2581// \u2581with \u2581the \u2581total \u2581count \u2581of \u2581its \u2581rows ."], "bleu": 0.1547503618681131, "rouge_l": 0.43758967001434723}
{"id": 2150, "predictions": ["\u2581// \u2581 New Gateway \u2581returns \u2581a \u2581new \u2581 Gateway \u2581object"], "references": ["\u2581// \u2581 New Gateway \u2581creates \u2581a \u2581new \u2581 Gateway \u2581for \u2581 managing \u2581access \u2581to \u2581the \u2581 dql ite \u2581cluster . \u2581// \u2581// \u2581When \u2581a \u2581new \u2581gateway \u2581is \u2581created , \u2581the"], "bleu": 0.07954038575990627, "rouge_l": 0.3669172932330827}
{"id": 2668, "predictions": ["\u2581// \u2581 Server TLSConfig \u2581returns \u2581the \u2581 TLS \u2581configuration \u2581for \u2581the \u2581given \u2581certificate ."], "references": ["\u2581// \u2581 Server TLSConfig \u2581returns \u2581a \u2581new \u2581server - side \u2581 tls . Config \u2581generated \u2581from \u2581the \u2581give \u2581// \u2581certificate \u2581 info ."], "bleu": 0.19342496615096863, "rouge_l": 0.4660441426146011}
{"id": 2209, "predictions": ["\u2581// \u2581copy Volume \u2581copies \u2581a \u2581volume \u2581to \u2581the \u2581 VM ."], "references": ["\u2581// \u2581 Copy \u2581an \u2581 L VM \u2581custom \u2581volume ."], "bleu": 0.14991106946711685, "rouge_l": 0.384251968503937}
{"id": 2657, "predictions": ["\u2581// \u2581 Node Update Version \u2581updates \u2581the \u2581version \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node Update Version \u2581updates \u2581the \u2581schema \u2581and \u2581API \u2581version \u2581of \u2581the \u2581node \u2581with \u2581the \u2581// \u2581given \u2581 id . \u2581This \u2581is \u2581used \u2581only \u2581in \u2581tests ."], "bleu": 0.18058610039563464, "rouge_l": 0.5129969418960244}
{"id": 3718, "predictions": ["\u2581// \u2581 Read JSON \u2581reads \u2581the \u2581 data \u2581from \u2581the \u2581 Arg r ."], "references": ["\u2581// \u2581 Read JSON \u2581deserialize s \u2581JSON \u2581from \u2581the \u2581underlying \u2581reader \u2581into \u2581 data ."], "bleu": 0.3014523109212233, "rouge_l": 0.548314606741573}
{"id": 3251, "predictions": ["\u2581// \u2581 With Baggage Item \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581 With Baggage Item \u2581creates \u2581a \u2581new \u2581context \u2581with \u2581an \u2581extra \u2581 baggage \u2581item ."], "bleu": 0.24684258820613014, "rouge_l": 0.45692883895131076}
{"id": 3072, "predictions": ["\u2581// \u2581 Cancel \u2581cancel s \u2581a \u2581 healthcheck \u2581request ."], "references": ["\u2581// \u2581 Cancel \u2581cancel s \u2581the \u2581currently \u2581running \u2581datum"], "bleu": 0.4617366309441026, "rouge_l": 0.5313588850174217}
{"id": 3387, "predictions": ["\u2581// \u2581String Within Transport \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 Reference ."], "references": ["\u2581// \u2581Return \u2581a \u2581 name \u2581with \u2581a \u2581tag , \u2581prefixed \u2581with \u2581the \u2581graph \u2581root \u2581and \u2581driver \u2581 name , \u2581to \u2581// \u2581 disambiguate \u2581between \u2581images \u2581which \u2581may \u2581be \u2581present \u2581in"], "bleu": 0.03248311113825417, "rouge_l": 0.17366548042704624}
{"id": 2531, "predictions": ["\u2581// \u2581 container Load From All Projects \u2581returns \u2581a \u2581list \u2581of \u2581 container \u2581 data \u2581from \u2581the \u2581// \u2581 State ."], "references": ["\u2581// \u2581 Load \u2581all \u2581containers \u2581across \u2581all \u2581projects ."], "bleu": 0.08687475782716618, "rouge_l": 0.287396937573616}
{"id": 3852, "predictions": ["\u2581// \u2581 ping \u2581sends \u2581a \u2581 ping \u2581request \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 ping \u2581sends \u2581a \u2581 ping \u2581message \u2581and \u2581waits \u2581for \u2581a \u2581 ping \u2581response ."], "bleu": 0.41278252457866543, "rouge_l": 0.5570776255707762}
{"id": 3191, "predictions": ["\u2581// \u2581 Append Ellipsis \u2581implements \u2581the \u2581 List List \u2581interface \u2581for \u2581 text List ."], "references": ["\u2581// \u2581 Append Ellipsis \u2581appends \u2581a \u2581new \u2581 ellipsis \u2581node \u2581to \u2581the \u2581list \u2581if \u2581 none \u2581already \u2581// \u2581 exists \u2581at \u2581the \u2581end . \u2581If \u2581cs \u2581is \u2581non - zero"], "bleu": 0.09755472262973743, "rouge_l": 0.3353951890034364}
{"id": 2836, "predictions": ["\u2581// \u2581Get File \u2581returns \u2581a \u2581file \u2581with \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581Get File \u2581returns \u2581the \u2581 contents \u2581of \u2581a \u2581file \u2581at \u2581a \u2581specific \u2581 Commit . \u2581// \u2581offset \u2581specifies \u2581a \u2581number \u2581of \u2581bytes \u2581that \u2581should \u2581be \u2581skipped \u2581in \u2581the \u2581beginning"], "bleu": 0.06902267979217218, "rouge_l": 0.3151291512915129}
{"id": 3934, "predictions": ["\u2581// \u2581 Update Repo \u2581updates \u2581a \u2581repository ."], "references": ["\u2581// \u2581 Update Repo \u2581returns \u2581an \u2581object \u2581describing \u2581a \u2581repository \u2581at \u2581the \u2581most \u2581recent \u2581// \u2581commit \u2581or \u2581version \u2581tag . \u2581// \u2581// \u2581This \u2581function \u2581uses \u2581 Remote Cache \u2581to \u2581retrieve"], "bleu": 0.033931068699747165, "rouge_l": 0.33359374999999997}
{"id": 3316, "predictions": ["\u2581// \u2581new ImageSource \u2581returns \u2581the \u2581image ' s \u2581 contents \u2581of \u2581the \u2581image ."], "references": ["\u2581// \u2581new ImageSource \u2581sets \u2581up \u2581an \u2581image \u2581for \u2581reading ."], "bleu": 0.18207052811092136, "rouge_l": 0.42957746478873243}
{"id": 2511, "predictions": ["\u2581// \u2581 absPath \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581package \u2581at \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Given \u2581its \u2581relative \u2581 path \u2581with \u2581respect \u2581to \u2581the \u2581 LXD \u2581 sur ce \u2581tree , \u2581return \u2581the \u2581full \u2581// \u2581 path \u2581of \u2581a \u2581file ."], "bleu": 0.11024755755389197, "rouge_l": 0.3556851311953353}
{"id": 2685, "predictions": ["\u2581// \u2581 Main RBD Volume Mark Deleted \u2581 loads \u2581 bgp Volume Mark s \u2581for \u2581a \u2581volume"], "references": ["\u2581// \u2581 ceph RBD Volume Mark Deleted \u2581 marks \u2581an \u2581 RBD \u2581storage \u2581volume \u2581as \u2581being \u2581in \u2581\" zombie \" \u2581// \u2581state \u2581// \u2581An \u2581 RBD \u2581storage \u2581volume \u2581that \u2581is"], "bleu": 0.14646788557110685, "rouge_l": 0.36478405315614615}
{"id": 3314, "predictions": ["\u2581// \u2581new PR M Exact Reference \u2581creates \u2581a \u2581new \u2581 empty \u2581 type \u2581from \u2581a \u2581 kubeconfig \u2581file ."], "references": ["\u2581// \u2581new PR M Exact Reference \u2581is \u2581 New PR M Exact Reference , \u2581except \u2581it \u2581res turn s \u2581the \u2581private \u2581 type ."], "bleu": 0.260744948160613, "rouge_l": 0.45556385362210605}
{"id": 3646, "predictions": ["\u2581// \u2581 listen \u2581for \u2581the \u2581 Client"], "references": ["\u2581// \u2581 Listen \u2581initializes \u2581the \u2581server"], "bleu": 0.2626909894424158, "rouge_l": 0.4680306905370844}
{"id": 2896, "predictions": ["\u2581// \u2581 New Child Cursor \u2581creates \u2581a \u2581new \u2581child \u2581 Cursor \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 New Child Cursor \u2581creates \u2581a \u2581new \u2581child \u2581cursor ."], "bleu": 0.5241705759002533, "rouge_l": 0.7429963459196102}
{"id": 3553, "predictions": ["\u2581// \u2581validate \u2581is \u2581used \u2581to \u2581send \u2581a \u2581message \u2581to \u2581 PubSub \u2581message ."], "references": ["\u2581// \u2581validate \u2581performs \u2581validation \u2581and \u2581only \u2581sends \u2581the \u2581message \u2581if \u2581all \u2581 validators \u2581 succeed"], "bleu": 0.12246842552790232, "rouge_l": 0.2820809248554913}
{"id": 3951, "predictions": ["\u2581// \u2581 append Or Merge Kind Mapping \u2581adds \u2581the \u2581given \u2581 config \u2581to \u2581the \u2581 Kind \u2581 map ."], "references": ["\u2581// \u2581 append Or Merge Kind Mapping \u2581adds \u2581 Load Info \u2581for \u2581the \u2581given \u2581replacement ."], "bleu": 0.45340106118883244, "rouge_l": 0.6384395813510941}
{"id": 2943, "predictions": ["\u2581// \u2581 Watch One F \u2581is \u2581called \u2581when \u2581a \u2581 watch \u2581is \u2581received ."], "references": ["\u2581// \u2581 Watch One F \u2581 watches \u2581a \u2581given \u2581item \u2581and \u2581executes \u2581a \u2581callback \u2581function \u2581each \u2581time \u2581an \u2581event \u2581occurs . \u2581// \u2581The \u2581first \u2581value \u2581returned \u2581from \u2581the \u2581 watch"], "bleu": 0.12278932164401814, "rouge_l": 0.3412587412587413}
{"id": 3188, "predictions": ["\u2581// \u2581 Restore From \u2581implements \u2581 APIClient . Restore From ."], "references": ["\u2581// \u2581 Restore From \u2581restore s \u2581state \u2581from \u2581another \u2581cluster \u2581which \u2581can \u2581be \u2581access \u2581through \u2581other C ."], "bleu": 0.17559708297148516, "rouge_l": 0.33044420368364036}
{"id": 2464, "predictions": ["\u2581// \u2581 Container SetState \u2581updates \u2581a \u2581 container \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Container SetState \u2581sets \u2581the \u2581the \u2581power \u2581state \u2581of \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.5066732793878282, "rouge_l": 0.7079303675048355}
{"id": 3938, "predictions": ["\u2581// \u2581ensure \u2581is \u2581called \u2581when \u2581a \u2581 key \u2581is \u2581already \u2581 held"], "references": ["\u2581// \u2581ensure \u2581ret re ive s \u2581a \u2581value \u2581associated \u2581with \u2581the \u2581given \u2581 key \u2581from \u2581the \u2581cache . \u2581If \u2581// \u2581the \u2581 key \u2581does \u2581not \u2581exist \u2581in \u2581the \u2581cache ,"], "bleu": 0.04173340115650776, "rouge_l": 0.26521739130434785}
{"id": 2683, "predictions": ["\u2581// \u2581 Main RBD Clone Create \u2581creates \u2581a \u2581new \u2581 RBD \u2581cluster"], "references": ["\u2581// \u2581 ceph RBD Clone Create \u2581creates \u2581a \u2581clone \u2581from \u2581a \u2581protected \u2581 RBD \u2581snapshot"], "bleu": 0.3663252715044019, "rouge_l": 0.6535714285714286}
{"id": 3232, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Mock Tracer ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581 Mock Tracer \u2581 opentracing . Tracer \u2581implementation \u2581that ' s \u2581intended \u2581// \u2581to \u2581 fac i lit ate \u2581tests \u2581of \u2581 Open Tracing \u2581"], "bleu": 0.04890048684636384, "rouge_l": 0.3669172932330827}
{"id": 3416, "predictions": ["\u2581// \u2581 KeyRing Digest Locked \u2581returns \u2581a \u2581 Digest \u2581that \u2581matches \u2581the \u2581given \u2581digest ."], "references": ["\u2581// \u2581 uncompressed Digest Locked \u2581implements \u2581types . Blob Info Cache . Uncompressed Digest , \u2581but \u2581must \u2581be \u2581called \u2581only \u2581with \u2581 mem . mutex \u2581 held ."], "bleu": 0.06435667558123334, "rouge_l": 0.2646420824295011}
{"id": 2983, "predictions": ["\u2581// \u2581 New Microsoft Client From Secret \u2581creates \u2581a \u2581new \u2581 Microsoft \u2581client \u2581from \u2581the \u2581 secret ."], "references": ["\u2581// \u2581 New Microsoft Client From Secret \u2581creates \u2581a \u2581 microsoft \u2581client \u2581by \u2581reading \u2581// \u2581credentials \u2581from \u2581a \u2581 mounted \u2581 Microsoft Secret . \u2581You \u2581may \u2581pass \u2581\"\" \u2581for \u2581"], "bleu": 0.2860214442682934, "rouge_l": 0.558169934640523}
{"id": 2071, "predictions": ["\u2581// \u2581 LXD Uses Pool \u2581returns \u2581the \u2581 home \u2581pool \u2581of \u2581the \u2581given \u2581 db ."], "references": ["\u2581// \u2581 Detect \u2581whether \u2581 LXD \u2581already \u2581uses \u2581the \u2581given \u2581storage \u2581pool ."], "bleu": 0.1584450133726893, "rouge_l": 0.42165898617511516}
{"id": 4078, "predictions": ["\u2581// \u2581 Bind App \u2581 binds \u2581the \u2581specified \u2581 app \u2581to \u2581the \u2581specified \u2581 app ."], "references": ["\u2581// \u2581 Bind App \u2581makes \u2581the \u2581 bind \u2581between \u2581the \u2581service \u2581instance \u2581and \u2581an \u2581 app ."], "bleu": 0.29128493630228175, "rouge_l": 0.6027667984189723}
{"id": 2190, "predictions": ["\u2581// \u2581Set Caps \u2581sets \u2581the \u2581 uid \u2581and \u2581 uid \u2581for \u2581a \u2581 capability"], "references": ["\u2581// \u2581Set Caps \u2581applies \u2581the \u2581 caps \u2581for \u2581a \u2581particular \u2581root \u2581 uid"], "bleu": 0.2460137257692754, "rouge_l": 0.5965770171149144}
{"id": 3143, "predictions": ["\u2581// \u2581 Fail Pipeline \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581will \u2581create \u2581the \u2581given \u2581 set \u2581of \u2581// \u2581existing \u2581documents \u2581and \u2581 apply \u2581the \u2581 contents \u2581of \u2581the \u2581 logfile"], "references": ["\u2581// \u2581 Fail Pipeline \u2581updates \u2581the \u2581pipeline ' s \u2581state \u2581to \u2581failed \u2581and \u2581sets \u2581the \u2581failure \u2581reason"], "bleu": 0.1262744724314408, "rouge_l": 0.3135095447870778}
{"id": 2143, "predictions": ["\u2581// \u2581check All Update sAre Applied \u2581checks \u2581if \u2581the \u2581given \u2581 table \u2581is \u2581valid \u2581for \u2581the \u2581given \u2581// \u2581 table ."], "references": ["\u2581// \u2581Check \u2581that \u2581all \u2581the \u2581given \u2581updates \u2581are \u2581applied ."], "bleu": 0.08687475782716618, "rouge_l": 0.27570621468926554}
{"id": 2903, "predictions": ["\u2581// \u2581 Ordered \u2581returns \u2581a \u2581 Ordered Ordered \u2581copy \u2581of \u2581the \u2581 contents \u2581of \u2581the \u2581 path ."], "references": ["\u2581// \u2581 Ordered \u2581converts \u2581an \u2581 unordered \u2581hash tree \u2581into \u2581an \u2581ordered \u2581hash tree ."], "bleu": 0.14025775160081475, "rouge_l": 0.30808080808080807}
{"id": 3073, "predictions": ["\u2581// \u2581 merge Stats \u2581merges \u2581the \u2581 contents \u2581of \u2581the \u2581 container \u2581into \u2581the \u2581 format ."], "references": ["\u2581// \u2581 merge Stats \u2581merges \u2581 y \u2581into \u2581 x"], "bleu": 0.2928298013714697, "rouge_l": 0.6216560509554141}
{"id": 4018, "predictions": ["\u2581// \u2581 Stream JSON Response \u2581 - \u2581 Response \u2581 Response \u2581to \u2581 w ."], "references": ["\u2581// \u2581 Stream JSON Response \u2581supports \u2581the \u2581JSON \u2581streaming \u2581 format \u2581from \u2581the \u2581 t sur u \u2581API ."], "bleu": 0.2553970759426278, "rouge_l": 0.46081208687440983}
{"id": 2978, "predictions": ["\u2581// \u2581 Storage Root FromEnv \u2581returns \u2581the \u2581storage \u2581 backends \u2581for \u2581the \u2581environment \u2581variable ."], "references": ["\u2581// \u2581 Storage Root FromEnv \u2581gets \u2581the \u2581storage \u2581root \u2581based \u2581on \u2581environment \u2581variables ."], "bleu": 0.35831291876413535, "rouge_l": 0.6245733788395904}
{"id": 2507, "predictions": ["\u2581// \u2581 Operation Add \u2581adds \u2581a \u2581new \u2581operation \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Operation Add \u2581adds \u2581a \u2581new \u2581operations \u2581to \u2581the \u2581 table ."], "bleu": 0.5762095527681761, "rouge_l": 0.7942708333333333}
{"id": 2229, "predictions": ["\u2581// \u2581 Update Config \u2581updates \u2581the \u2581 config \u2581values \u2581for \u2581the \u2581given \u2581 table ."], "references": ["\u2581// \u2581 Update Config \u2581updates \u2581the \u2581given \u2581 keys \u2581in \u2581the \u2581given \u2581 table . \u2581 Config \u2581 keys \u2581 set \u2581to \u2581// \u2581 empty \u2581values \u2581will \u2581be \u2581deleted ."], "bleu": 0.2303971905045543, "rouge_l": 0.5030927835051546}
{"id": 2595, "predictions": ["\u2581// \u2581Get Architecture s \u2581returns \u2581the \u2581 set \u2581of \u2581all \u2581the \u2581 Architecture s \u2581that \u2581are \u2581// \u2581used \u2581in \u2581the \u2581 config ."], "references": ["\u2581// \u2581Get Architecture s \u2581returns \u2581the \u2581list \u2581of \u2581supported \u2581 architecture s ."], "bleu": 0.26822436109275993, "rouge_l": 0.5848513902205177}
{"id": 2378, "predictions": ["\u2581// \u2581 StoragePool Volumes GetName s \u2581returns \u2581a \u2581list \u2581of \u2581 cinder \u2581volumes \u2581for \u2581the \u2581given \u2581pool ."], "references": ["\u2581// \u2581 StoragePool Volumes GetName s \u2581gets \u2581the \u2581names \u2581of \u2581all \u2581storage \u2581volumes \u2581attached \u2581to \u2581// \u2581a \u2581given \u2581storage \u2581pool ."], "bleu": 0.3225023262963931, "rouge_l": 0.5563847429519072}
{"id": 2756, "predictions": ["\u2581// \u2581 Match Datum \u2581checks \u2581if \u2581a \u2581 slice \u2581of \u2581 data \u2581matches \u2581the \u2581 filter"], "references": ["\u2581// \u2581 Match Datum \u2581checks \u2581if \u2581a \u2581datum \u2581matches \u2581a \u2581 filter . \u2581 To \u2581match \u2581each \u2581string \u2581in \u2581// \u2581 filter \u2581must \u2581correspond \u2581match \u2581at \u2581least \u2581 1 \u2581datum"], "bleu": 0.20754967504849703, "rouge_l": 0.45337837837837835}
{"id": 2412, "predictions": ["\u2581// \u2581 removeAll Destroy \u2581removes \u2581all \u2581 app armor s \u2581from \u2581the \u2581 app ."], "references": ["\u2581// \u2581Ensure \u2581that \u2581the \u2581 container ' s \u2581policy \u2581namespace \u2581is \u2581 unloaded \u2581to \u2581free \u2581kernel \u2581// \u2581memory . \u2581This \u2581does \u2581not \u2581delete \u2581the \u2581policy \u2581from \u2581disk \u2581or \u2581cache ."], "bleu": 0.05089379736704288, "rouge_l": 0.20962199312714777}
{"id": 3300, "predictions": ["\u2581// \u2581compress Goroutine \u2581is \u2581called \u2581when \u2581a \u2581goroutine \u2581is \u2581 established ."], "references": ["\u2581// \u2581compress Goroutine \u2581reads \u2581all \u2581input \u2581from \u2581 src \u2581and \u2581writes \u2581its \u2581compressed \u2581equivalent \u2581to \u2581dest ."], "bleu": 0.14108806271271043, "rouge_l": 0.3344298245614035}
{"id": 3169, "predictions": ["\u2581// \u2581 Stdout Pipe \u2581returns \u2581a \u2581 ReadCloser \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 exit \u2581 stdout \u2581and \u2581 stdout"], "references": ["\u2581// \u2581 Stdout Pipe \u2581returns \u2581a \u2581 pipe \u2581that \u2581will \u2581be \u2581connected \u2581to \u2581the \u2581command ' s \u2581// \u2581standard \u2581output \u2581when \u2581the \u2581command \u2581starts . \u2581// \u2581// \u2581 Wait \u2581will"], "bleu": 0.24922831796950376, "rouge_l": 0.46329113924050636}
{"id": 3593, "predictions": ["\u2581// \u2581Get Connection \u2581returns \u2581a \u2581connection \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581Get Connection \u2581returns \u2581an \u2581 active \u2581connection \u2581to \u2581 this \u2581peer . \u2581If \u2581no \u2581 active \u2581connections \u2581// \u2581are \u2581found , \u2581it \u2581will \u2581create \u2581a \u2581new \u2581outbound \u2581connection \u2581and"], "bleu": 0.062489257729539435, "rouge_l": 0.3669172932330827}
{"id": 2947, "predictions": ["\u2581// \u2581 New HTTPServer \u2581returns \u2581a \u2581new \u2581http . Handler \u2581for \u2581the \u2581given \u2581address ."], "references": ["\u2581// \u2581 New HTTPServer \u2581returns \u2581a \u2581 Pac hyd er m \u2581HTTP \u2581server ."], "bleu": 0.3850322886878713, "rouge_l": 0.48577929465301484}
{"id": 2548, "predictions": ["\u2581// \u2581Get Root Disk Device \u2581returns \u2581the \u2581device \u2581device \u2581 name \u2581for \u2581the \u2581given \u2581device ."], "references": ["\u2581// \u2581Get Root Disk Device \u2581returns \u2581the \u2581 container \u2581device \u2581that \u2581is \u2581configured \u2581as \u2581root \u2581disk"], "bleu": 0.4378826865860793, "rouge_l": 0.5625}
{"id": 2591, "predictions": ["\u2581// \u2581 Resolve Target \u2581 resolves \u2581a \u2581cluster \u2581member \u2581from \u2581a \u2581cluster ."], "references": ["\u2581// \u2581 Resolve Target \u2581is \u2581a \u2581convenience \u2581for \u2581handling \u2581the \u2581value \u2581? targetNode \u2581query \u2581// \u2581parameter . \u2581It \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581given \u2581node , \u2581or \u2581the \u2581 empty"], "bleu": 0.08086124506504899, "rouge_l": 0.26049822064056943}
{"id": 2838, "predictions": ["\u2581// \u2581Get File ReadSeeker \u2581returns \u2581a \u2581reader \u2581for \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581Get File ReadSeeker \u2581returns \u2581a \u2581reader \u2581for \u2581the \u2581 contents \u2581of \u2581a \u2581file \u2581at \u2581a \u2581specific \u2581// \u2581 Commit \u2581that \u2581 permits \u2581 Seek ing \u2581to \u2581different \u2581points \u2581in"], "bleu": 0.16822276293606386, "rouge_l": 0.44202898550724634}
{"id": 2732, "predictions": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581given \u2581etcd \u2581client ."], "references": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581 statuses \u2581of \u2581workers \u2581referenced \u2581by \u2581pipeline Rc Name . \u2581// \u2581pipeline Rc Name \u2581is \u2581the \u2581 name \u2581of \u2581the \u2581pipeline ' s \u2581 RC"], "bleu": 0.13287617742557511, "rouge_l": 0.3473309608540925}
{"id": 3781, "predictions": ["\u2581// \u2581 Can Retry \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581error \u2581is \u2581a \u2581 mesos \u2581 Retry - RPC \u2581error ."], "references": ["\u2581// \u2581 Can Retry \u2581returns \u2581whether \u2581an \u2581error \u2581can \u2581be \u2581re tried \u2581for \u2581the \u2581given \u2581retry \u2581option ."], "bleu": 0.26608125176434144, "rouge_l": 0.42508710801393734}
{"id": 2864, "predictions": ["\u2581// \u2581 Run Workload \u2581will \u2581 get \u2581the \u2581 workload \u2581job \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 Run Workload \u2581runs \u2581a \u2581 test \u2581 workload \u2581against \u2581a \u2581 Pac hyd er m \u2581cluster ."], "bleu": 0.2147624856264365, "rouge_l": 0.46081208687440983}
{"id": 3319, "predictions": ["\u2581// \u2581 Put Manifest \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581manifest \u2581manifest \u2581for \u2581the \u2581given \u2581manifest ."], "references": ["\u2581// \u2581 Put Manifest \u2581writes \u2581the \u2581manifest \u2581to \u2581the \u2581destination ."], "bleu": 0.25281168697394946, "rouge_l": 0.5943970767356882}
{"id": 3430, "predictions": ["\u2581// \u2581 Digest \u2581returns \u2581the \u2581digest \u2581of \u2581the \u2581given \u2581manifest ."], "references": ["\u2581// \u2581 Digest \u2581returns \u2581the \u2581a \u2581digest \u2581of \u2581a \u2581docker \u2581manifest , \u2581with \u2581any \u2581necessary \u2581 implied \u2581 transformations \u2581like \u2581stripping \u2581 v 1 s 1 \u2581 signatures ."], "bleu": 0.09659737311206762, "rouge_l": 0.4162244124336619}
{"id": 2984, "predictions": ["\u2581// \u2581 New Microsoft Client FromEnv \u2581returns \u2581a \u2581new \u2581 Microsoft \u2581client"], "references": ["\u2581// \u2581 New Microsoft Client FromEnv \u2581creates \u2581a \u2581 Microsoft \u2581client \u2581based \u2581on \u2581environment \u2581variables ."], "bleu": 0.42440386496687155, "rouge_l": 0.6963470319634703}
{"id": 2604, "predictions": ["\u2581// \u2581Create StoragePool \u2581creates \u2581a \u2581new \u2581 Storage \u2581 Storage \u2581object ."], "references": ["\u2581// \u2581Create StoragePool \u2581defines \u2581a \u2581new \u2581storage \u2581pool \u2581using \u2581the \u2581provided \u2581 StoragePool \u2581struct"], "bleu": 0.2023183489495035, "rouge_l": 0.45522388059701485}
{"id": 2226, "predictions": ["\u2581// \u2581 DeleteUser Sub Volumes Delete \u2581deletes \u2581a \u2581volume \u2581with \u2581 name \u2581of \u2581given \u2581 name ."], "references": ["\u2581// \u2581 btrfs Pool Volumes Delete \u2581is \u2581the \u2581recursive \u2581variant \u2581on \u2581 btrfs Pool Volume Delete , \u2581// \u2581it \u2581first \u2581deletes \u2581sub volumes \u2581of \u2581the \u2581sub volume \u2581and \u2581then \u2581the"], "bleu": 0.06258382435886439, "rouge_l": 0.24318936877076414}
{"id": 3059, "predictions": ["\u2581// \u2581 New From Address \u2581creates \u2581a \u2581new \u2581 APIClient \u2581with \u2581the \u2581given \u2581address \u2581and \u2581options ."], "references": ["\u2581// \u2581 New From Address \u2581constructs \u2581a \u2581new \u2581 APIClient \u2581for \u2581the \u2581server \u2581at \u2581 addr ."], "bleu": 0.4208598069524091, "rouge_l": 0.6470588235294118}
{"id": 3559, "predictions": ["\u2581// \u2581 Publish \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 PubSub \u2581topic , \u2581 p roducing \u2581the \u2581 data \u2581// \u2581and \u2581 modifies \u2581the \u2581 data \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581 Publish \u2581 publishes \u2581 data \u2581to \u2581the \u2581given \u2581topic ."], "bleu": 0.11372027710077005, "rouge_l": 0.42178046672428693}
{"id": 2622, "predictions": ["\u2581// \u2581 Storage Volume Config Add \u2581 - \u2581 Storage \u2581volume \u2581 config"], "references": ["\u2581// \u2581 Storage Volume Config Add \u2581adds \u2581a \u2581new \u2581storage \u2581volume \u2581 config \u2581into \u2581database ."], "bleu": 0.42212606939038927, "rouge_l": 0.6093229744728079}
{"id": 2527, "predictions": ["\u2581// \u2581 Delete S \u2581deletes \u2581the \u2581given \u2581 S last \u2581entry ."], "references": ["\u2581// \u2581 Delete S toragePoolVolume \u2581deletes \u2581a \u2581storage \u2581pool"], "bleu": 0.3026643726685863, "rouge_l": 0.48878205128205127}
{"id": 3100, "predictions": ["\u2581// \u2581 New Configuration \u2581returns \u2581a \u2581new \u2581configuration \u2581configuration"], "references": ["\u2581// \u2581 New Configuration \u2581creates \u2581a \u2581generic \u2581configuration \u2581from \u2581a \u2581specific \u2581 type \u2581of \u2581configuration ."], "bleu": 0.2029705721885437, "rouge_l": 0.5330836454431961}
{"id": 2368, "predictions": ["\u2581// \u2581 StoragePool s Get Drivers \u2581returns \u2581the \u2581list \u2581of \u2581registered \u2581 drivers \u2581that \u2581are \u2581registered \u2581// \u2581with \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 StoragePool s Get Drivers \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581storage \u2581volumes \u2581attached \u2581to \u2581// \u2581a \u2581given \u2581storage \u2581pool ."], "bleu": 0.3892904392414698, "rouge_l": 0.5238095238095238}
{"id": 2055, "predictions": ["\u2581// \u2581 Cert Save \u2581 persist s \u2581the \u2581 Cluster \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Cert Save \u2581stores \u2581a \u2581 Cert Base Info \u2581object \u2581in \u2581the \u2581 db , \u2581// \u2581it \u2581will \u2581ignore \u2581the \u2581 ID \u2581field \u2581from \u2581the \u2581 Cert Info ."], "bleu": 0.09865243055173982, "rouge_l": 0.3839160839160839}
{"id": 2904, "predictions": ["\u2581// \u2581 revoke User Credentials \u2581 revoke s \u2581a \u2581user \u2581with \u2581 token \u2581and \u2581password"], "references": ["\u2581// \u2581 revoke User Credentials \u2581 revoke s \u2581the \u2581 Pac hyd er m \u2581authentication \u2581 token \u2581' user Token ' \u2581// \u2581using \u2581the \u2581vault \u2581plugin ' s \u2581 Admin"], "bleu": 0.20434121997855523, "rouge_l": 0.41924398625429554}
{"id": 3582, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581peer \u2581to \u2581the \u2581list \u2581of \u2581 active \u2581peers ."], "references": ["\u2581// \u2581Add \u2581adds \u2581a \u2581peer \u2581to \u2581the \u2581list \u2581if \u2581it \u2581does \u2581not \u2581exist , \u2581or \u2581returns \u2581any \u2581existing \u2581peer ."], "bleu": 0.27563549613924215, "rouge_l": 0.5130841121495328}
{"id": 2830, "predictions": ["\u2581// \u2581 List Tag \u2581lists \u2581all \u2581 active \u2581tags"], "references": ["\u2581// \u2581 List Tag \u2581lists \u2581tags \u2581stored \u2581in \u2581 pfs ."], "bleu": 0.44482869031737904, "rouge_l": 0.5893719806763285}
{"id": 3841, "predictions": ["\u2581// \u2581 Call V 2 \u2581returns \u2581a \u2581 C Res \u2581object \u2581from \u2581the \u2581 c Args ."], "references": ["\u2581// \u2581 Call V 2 \u2581makes \u2581a \u2581 call \u2581and \u2581does \u2581not \u2581attempt \u2581any \u2581retries ."], "bleu": 0.3064859599765908, "rouge_l": 0.48751248751248744}
{"id": 2599, "predictions": ["\u2581// \u2581 Connect If Container Is Remote \u2581returns \u2581a \u2581 container Server \u2581for \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581 Connect If Container Is Remote \u2581 figures \u2581out \u2581the \u2581address \u2581of \u2581the \u2581node \u2581which \u2581is \u2581// \u2581running \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 name . \u2581If \u2581it"], "bleu": 0.2322266926984362, "rouge_l": 0.48637873754152827}
{"id": 3026, "predictions": ["\u2581// \u2581node ToMap \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 key \u2581from \u2581node ."], "references": ["\u2581// \u2581node ToMap \u2581 translate s \u2581the \u2581 contents \u2581of \u2581a \u2581node \u2581into \u2581a \u2581 map \u2581// \u2581node ToMap \u2581can \u2581be \u2581called \u2581on \u2581the \u2581same \u2581 map \u2581with \u2581successive \u2581results"], "bleu": 0.06704593774764558, "rouge_l": 0.2986013986013986}
{"id": 3029, "predictions": ["\u2581// \u2581 RoleBinding \u2581returns \u2581a \u2581 rbac \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581create \u2581a \u2581 rbac \u2581 RoleBinding ."], "references": ["\u2581// \u2581 RoleBinding \u2581returns \u2581a \u2581 RoleBinding \u2581that \u2581 binds \u2581 Pac hyd er m ' s \u2581 Role \u2581to \u2581its \u2581// \u2581 ServiceAccount ."], "bleu": 0.26129155737355036, "rouge_l": 0.43571428571428567}
{"id": 4014, "predictions": ["\u2581// \u2581 Remote URL \u2581returns \u2581the \u2581 URL \u2581of \u2581the \u2581repository ."], "references": ["\u2581// \u2581 Remote URL \u2581returns \u2581the \u2581 URL \u2581of \u2581a \u2581remote \u2581by \u2581its \u2581 name . \u2581 Or \u2581an \u2581error , \u2581if \u2581the \u2581// \u2581remote \u2581is \u2581not \u2581declared ."], "bleu": 0.18686291039613093, "rouge_l": 0.49925595238095233}
{"id": 3037, "predictions": ["\u2581// \u2581 Etcd Monitor Service \u2581returns \u2581a \u2581 v 1. Service \u2581object \u2581for \u2581the \u2581given \u2581 Asset Opts"], "references": ["\u2581// \u2581 Etcd Headless Service \u2581returns \u2581a \u2581 headless \u2581etcd \u2581service , \u2581which \u2581is \u2581only \u2581for \u2581DNS \u2581// \u2581resolution ."], "bleu": 0.23359698964851114, "rouge_l": 0.41709401709401706}
{"id": 3130, "predictions": ["\u2581// \u2581build Image \u2581builds \u2581a \u2581docker \u2581image \u2581from \u2581the \u2581registry"], "references": ["\u2581// \u2581build Image \u2581builds \u2581a \u2581new \u2581docker \u2581image ."], "bleu": 0.5193071778680676, "rouge_l": 0.7439024390243903}
{"id": 3507, "predictions": ["\u2581// \u2581 Encode Value \u2581encodes \u2581a \u2581 BSON \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode Value \u2581encodes \u2581one \u2581 bind \u2581variable \u2581value \u2581into \u2581the \u2581query ."], "bleu": 0.3481302097077456, "rouge_l": 0.5150784077201447}
{"id": 3791, "predictions": ["\u2581// \u2581 Introspect Other s \u2581returns \u2581a \u2581 map \u2581of \u2581all \u2581the \u2581 Introspect Other s \u2581// \u2581 set \u2581of \u2581channels \u2581and \u2581 info \u2581about \u2581the \u2581 introspection ."], "references": ["\u2581// \u2581 Introspect Other s \u2581returns \u2581the \u2581 Channel Info \u2581for \u2581all \u2581other \u2581channels \u2581in \u2581 this \u2581process ."], "bleu": 0.229354668696032, "rouge_l": 0.4762242725337118}
{"id": 2617, "predictions": ["\u2581// \u2581 Storage Volume Node Get \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581volume \u2581 attachments \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Storage Volume Node Get \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581node \u2581a \u2581storage \u2581volume \u2581is \u2581on ."], "bleu": 0.36599170748010806, "rouge_l": 0.555004135649297}
{"id": 2852, "predictions": ["\u2581// \u2581 getConfig \u2581returns \u2581the \u2581 config \u2581from \u2581the \u2581 config ."], "references": ["\u2581// \u2581 getConfig \u2581parses \u2581and \u2581returns \u2581the \u2581configuration \u2581 data \u2581from \u2581the \u2581storage \u2581backend ."], "bleu": 0.2151775996918725, "rouge_l": 0.6535714285714286}
{"id": 3218, "predictions": ["\u2581// \u2581 \u2581sorts \u2581the \u2581 slice \u2581of \u2581 keys \u2581into \u2581a \u2581 slice \u2581of \u2581 s . Value ."], "references": ["\u2581// \u2581 SortKey s \u2581sorts \u2581a \u2581list \u2581of \u2581 map \u2581 keys , \u2581 dedup lic ating \u2581 keys \u2581if \u2581necessary . \u2581// \u2581The \u2581 type \u2581of \u2581each \u2581value \u2581must"], "bleu": 0.08303039491675479, "rouge_l": 0.35305466237942124}
{"id": 3012, "predictions": ["\u2581// \u2581 No Error Within T Retry \u2581checks \u2581if \u2581the \u2581given \u2581 type \u2581is \u2581not \u2581a \u2581 T Retry ."], "references": ["\u2581// \u2581 No Error Within T Retry \u2581checks \u2581that \u2581' f ' \u2581finishes \u2581within \u2581time \u2581' t ' \u2581and \u2581does \u2581not \u2581// \u2581 emit \u2581an \u2581error . \u2581 Un like"], "bleu": 0.2532821402555922, "rouge_l": 0.42468354430379746}
{"id": 2371, "predictions": ["\u2581// \u2581storage Pool Nodes \u2581returns \u2581a \u2581list \u2581of \u2581nodes \u2581that \u2581have \u2581a \u2581node \u2581// \u2581to \u2581be \u2581used \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581Return \u2581the \u2581names \u2581of \u2581the \u2581nodes \u2581the \u2581given \u2581pool \u2581is \u2581defined \u2581on ."], "bleu": 0.07645949399477267, "rouge_l": 0.29640427599611274}
{"id": 3843, "predictions": ["\u2581// \u2581 NewServer \u2581returns \u2581a \u2581new \u2581 Server ."], "references": ["\u2581// \u2581 NewServer \u2581returns \u2581a \u2581server \u2581that \u2581can \u2581serve \u2581thrift \u2581services \u2581over \u2581 T Channel ."], "bleu": 0.25522198271174834, "rouge_l": 0.5330836454431961}
{"id": 2067, "predictions": ["\u2581// \u2581Get Operations \u2581returns \u2581all \u2581the \u2581 handlers \u2581for \u2581the \u2581 controller ."], "references": ["\u2581// \u2581Get Operations \u2581returns \u2581a \u2581list \u2581of \u2581 Operation \u2581struct"], "bleu": 0.27824623288353134, "rouge_l": 0.44525547445255476}
{"id": 2456, "predictions": ["\u2581// \u2581 Container Project AndName \u2581returns \u2581a \u2581 path \u2581of \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Container Project AndName \u2581returns \u2581the \u2581project \u2581and \u2581the \u2581 name \u2581of \u2581the \u2581 container \u2581// \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.5353824493057954, "rouge_l": 0.7958557175748273}
{"id": 2440, "predictions": ["\u2581// \u2581event Forward \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581event ."], "references": ["\u2581// \u2581 Forward \u2581to \u2581the \u2581local \u2581events \u2581 dispatcher \u2581an \u2581event \u2581received \u2581from \u2581another \u2581node \u2581 ."], "bleu": 0.10182269233047068, "rouge_l": 0.42459396751740147}
{"id": 3181, "predictions": ["\u2581// \u2581Extract \u2581returns \u2581the \u2581objects \u2581for \u2581the \u2581 admin \u2581user"], "references": ["\u2581// \u2581Extract \u2581all \u2581cluster \u2581state , \u2581 call \u2581 f \u2581with \u2581each \u2581operation ."], "bleu": 0.11950151429308975, "rouge_l": 0.24270557029177717}
{"id": 2249, "predictions": ["\u2581// \u2581 Filters \u2581returns \u2581a \u2581list \u2581of \u2581 text \u2581 set \u2581of \u2581packages \u2581that \u2581match \u2581the \u2581given \u2581 entity ."], "references": ["\u2581// \u2581 Filters \u2581parses \u2581all \u2581filtering \u2581statement \u2581defined \u2581for \u2581the \u2581given \u2581 entity . \u2581It \u2581// \u2581returns \u2581all \u2581supported \u2581 combinations \u2581of \u2581filters , \u2581sorted \u2581by \u2581number \u2581of \u2581 criteria"], "bleu": 0.19946248728624325, "rouge_l": 0.30886075949367087}
{"id": 3688, "predictions": ["\u2581// \u2581 Flush \u2581writes \u2581the \u2581 contents \u2581of \u2581the \u2581fragment \u2581to \u2581the \u2581 Writer ."], "references": ["\u2581// \u2581 Flush \u2581 flush es \u2581the \u2581current \u2581fragment , \u2581and \u2581starts \u2581a \u2581new \u2581fragment \u2581and \u2581chunk ."], "bleu": 0.14906674059356054, "rouge_l": 0.41739980449657876}
{"id": 3952, "predictions": ["\u2581// \u2581 HasField \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581field \u2581names ."], "references": ["\u2581// \u2581 RuleName \u2581returns \u2581a \u2581 name \u2581for \u2581a \u2581proto _ library \u2581derived \u2581from \u2581the \u2581given \u2581strings . \u2581// \u2581 For \u2581each \u2581string , \u2581 RuleName \u2581will \u2581look \u2581for \u2581a"], "bleu": 0.0431500960424793, "rouge_l": 0.30942028985507253}
{"id": 3292, "predictions": ["\u2581// \u2581tag Or Digest \u2581returns \u2581the \u2581 ref \u2581of \u2581the \u2581image \u2581reference \u2581to \u2581the \u2581reference \u2581// \u2581reference ."], "references": ["\u2581// \u2581tag Or Digest \u2581returns \u2581a \u2581tag \u2581or \u2581digest \u2581from \u2581the \u2581reference ."], "bleu": 0.3002490876098761, "rouge_l": 0.531590413943355}
{"id": 2318, "predictions": ["\u2581// \u2581Get Network Lease s \u2581returns \u2581the \u2581network \u2581 Lease s \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Network Lease s \u2581returns \u2581a \u2581list \u2581of \u2581 Network \u2581struct"], "bleu": 0.3381307292971254, "rouge_l": 0.4982497082847141}
{"id": 3231, "predictions": ["\u2581// \u2581 To LogRecord \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581serialize s \u2581the \u2581log \u2581record \u2581into \u2581the \u2581wire \u2581 format"], "references": ["\u2581// \u2581 To LogRecord \u2581converts \u2581a \u2581deprecated \u2581 Log Data \u2581to \u2581a \u2581non - deprecated \u2581 LogRecord"], "bleu": 0.19120817575042512, "rouge_l": 0.3839928057553956}
{"id": 3716, "predictions": ["\u2581// \u2581override Headers \u2581applies \u2581the \u2581 headers \u2581to \u2581the \u2581 headers ."], "references": ["\u2581// \u2581override Headers \u2581sets \u2581 headers \u2581if \u2581the \u2581 call \u2581options \u2581 contains \u2581non - default \u2581values ."], "bleu": 0.163224018405591, "rouge_l": 0.5147679324894514}
{"id": 2688, "predictions": ["\u2581// \u2581 Main RBD VolumeSnapshot Rename \u2581rename s \u2581a \u2581volume \u2581 forwarding \u2581volume"], "references": ["\u2581// \u2581 ceph RBD Volume Rename \u2581rename s \u2581a \u2581given \u2581 RBD \u2581storage \u2581volume \u2581// \u2581Note \u2581that \u2581if \u2581the \u2581snapshot \u2581is \u2581mapped \u2581 - \u2581which \u2581it \u2581usually \u2581shouldn ' t"], "bleu": 0.0904056203553595, "rouge_l": 0.3907473309608541}
{"id": 3936, "predictions": ["\u2581// \u2581 Remote \u2581returns \u2581the \u2581remote \u2581 path \u2581of \u2581the \u2581remote \u2581 Remote Cache"], "references": ["\u2581// \u2581 Remote \u2581returns \u2581the \u2581 VCS \u2581 name \u2581and \u2581the \u2581remote \u2581 URL \u2581for \u2581a \u2581repository \u2581with \u2581the \u2581// \u2581given \u2581root \u2581import \u2581 path . \u2581This \u2581is \u2581suitable \u2581for"], "bleu": 0.14287984117470287, "rouge_l": 0.3839160839160839}
{"id": 3371, "predictions": ["\u2581// \u2581Set Authentication \u2581sets \u2581the \u2581 username \u2581and \u2581password \u2581for \u2581the \u2581given \u2581 username \u2581and \u2581password"], "references": ["\u2581// \u2581Set Authentication \u2581stores \u2581the \u2581 username \u2581and \u2581password \u2581in \u2581the \u2581 auth . json \u2581file"], "bleu": 0.37709297891717664, "rouge_l": 0.625}
{"id": 3728, "predictions": ["\u2581// \u2581 Relay \u2581sets \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581frame ."], "references": ["\u2581// \u2581 Relay \u2581is \u2581called \u2581for \u2581each \u2581frame \u2581that \u2581is \u2581read \u2581on \u2581the \u2581connection ."], "bleu": 0.17910485893821793, "rouge_l": 0.43571428571428567}
{"id": 2825, "predictions": ["\u2581// \u2581 Tag Object \u2581returns \u2581a \u2581list \u2581of \u2581 Tag \u2581tags \u2581for \u2581the \u2581given \u2581tag ."], "references": ["\u2581// \u2581 Tag Object \u2581applies \u2581a \u2581tag \u2581to \u2581an \u2581existing \u2581object ."], "bleu": 0.24078435074822624, "rouge_l": 0.5132211538461539}
{"id": 2517, "predictions": ["\u2581// \u2581Get StoragePool Volumes \u2581returns \u2581the \u2581 Volumes \u2581for \u2581the \u2581given \u2581pool ."], "references": ["\u2581// \u2581Get StoragePool Volumes \u2581returns \u2581a \u2581list \u2581of \u2581 Storage Volume \u2581entries \u2581for \u2581the \u2581provided \u2581pool"], "bleu": 0.33033150102492237, "rouge_l": 0.6093229744728079}
{"id": 3161, "predictions": ["\u2581// \u2581 New Enterprise Server \u2581creates \u2581a \u2581new \u2581 EC Server \u2581instance"], "references": ["\u2581// \u2581 New Enterprise Server \u2581returns \u2581an \u2581implementation \u2581of \u2581 ec . APIServer ."], "bleu": 0.33481167074852813, "rouge_l": 0.45522388059701485}
{"id": 3802, "predictions": ["\u2581// \u2581 Wrap \u2581 wraps \u2581the \u2581http . Handler \u2581interface ."], "references": ["\u2581// \u2581 Wrap \u2581 wraps \u2581a \u2581 Handler \u2581as \u2581a \u2581 t channel . Handler \u2581that \u2581can \u2581be \u2581passed \u2581to \u2581 t channel . Register ."], "bleu": 0.12358617564115112, "rouge_l": 0.40297274979355907}
{"id": 2219, "predictions": ["\u2581// \u2581 Is Re tri able Error \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581re tri able \u2581error ."], "references": ["\u2581// \u2581 Is Re tri able Error \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581error \u2581might \u2581be \u2581transient \u2581and \u2581the \u2581// \u2581interaction \u2581can \u2581be \u2581safely \u2581re tried ."], "bleu": 0.413572951670245, "rouge_l": 0.6052445074415308}
{"id": 4038, "predictions": ["\u2581// \u2581 Read Target \u2581reads \u2581the \u2581target \u2581 key \u2581from \u2581the \u2581 T FS _ v _ u _ v 1 \u2581// \u2581 set \u2581of \u2581 this \u2581 call \u2581to"], "references": ["\u2581// \u2581 Read Target \u2581returns \u2581the \u2581current \u2581target , \u2581as \u2581defined \u2581in \u2581the \u2581 T SUR U _ TARGET \u2581// \u2581environment \u2581variable \u2581or \u2581in \u2581the \u2581target \u2581file ."], "bleu": 0.17271600094426348, "rouge_l": 0.38168373151308305}
{"id": 2860, "predictions": ["\u2581// \u2581 Profile \u2581 - \u2581 Profile \u2581profile"], "references": ["\u2581// \u2581 Profile \u2581writes \u2581a \u2581 pprof \u2581profile \u2581for \u2581 pac hd \u2581to \u2581 w ."], "bleu": 0.1262909976406414, "rouge_l": 0.3930412371134021}
{"id": 2565, "predictions": ["\u2581// \u2581 Raft Node Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581node ' s \u2581address ."], "references": ["\u2581// \u2581 Raft Node Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581 LXD \u2581 raft \u2581node \u2581with \u2581the \u2581given \u2581 ID , \u2581// \u2581if \u2581any \u2581matching \u2581row \u2581 exists ."], "bleu": 0.26755112923854885, "rouge_l": 0.5158562367864694}
{"id": 4076, "predictions": ["\u2581// \u2581 To Info \u2581returns \u2581a \u2581 ServiceInstance Info Info \u2581for \u2581the \u2581service ."], "references": ["\u2581// \u2581 To Info \u2581returns \u2581the \u2581service \u2581instance \u2581as \u2581a \u2581struct \u2581compatible \u2581with \u2581the \u2581return \u2581// \u2581of \u2581the \u2581service \u2581 info \u2581 api \u2581 call ."], "bleu": 0.1673373584641815, "rouge_l": 0.426905132192846}
{"id": 2049, "predictions": ["\u2581// \u2581 Config Load \u2581 loads \u2581a \u2581 config \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581 Config Load \u2581 loads \u2581a \u2581new \u2581 Config \u2581object \u2581with \u2581the \u2581current \u2581node - local \u2581configuration \u2581// \u2581values \u2581fetched \u2581from \u2581the \u2581database . \u2581An \u2581optional \u2581list \u2581of \u2581"], "bleu": 0.19306842972312535, "rouge_l": 0.5209964412811389}
{"id": 3061, "predictions": ["\u2581// \u2581 New In Cluster \u2581returns \u2581a \u2581new \u2581 APIClient \u2581with \u2581the \u2581 PA D \u2581 set"], "references": ["\u2581// \u2581 New In Cluster \u2581constructs \u2581a \u2581new \u2581 APIClient \u2581using \u2581 env \u2581 vars \u2581that \u2581 Kubernetes \u2581creates . \u2581// \u2581This \u2581should \u2581be \u2581used \u2581to \u2581access \u2581 Pac hyd"], "bleu": 0.19589795693214732, "rouge_l": 0.4458471760797342}
{"id": 2572, "predictions": ["\u2581// \u2581 Container Get \u2581returns \u2581the \u2581 container \u2581with \u2581the \u2581specified \u2581 name ."], "references": ["\u2581// \u2581 Container Get \u2581returns \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 key ."], "bleu": 0.7311104457090247, "rouge_l": 0.8571428571428571}
{"id": 2594, "predictions": ["\u2581// \u2581 select Nodes Versions \u2581returns \u2581a \u2581list \u2581of \u2581 keys \u2581in \u2581the \u2581database ."], "references": ["\u2581// \u2581Return \u2581a \u2581 slice \u2581of \u2581binary \u2581integer \u2581tuples . \u2581Each \u2581tuple \u2581 contains \u2581the \u2581schema \u2581// \u2581version \u2581and \u2581number \u2581of \u2581 api \u2581extensions \u2581of \u2581a \u2581node \u2581in \u2581the \u2581cluster"], "bleu": 0.05800638512670036, "rouge_l": 0.2515463917525773}
{"id": 2080, "predictions": ["\u2581// \u2581 Password Check \u2581returns \u2581a \u2581password \u2581for \u2581the \u2581given \u2581password ."], "references": ["\u2581// \u2581 Password Check \u2581validates \u2581the \u2581provided \u2581password \u2581against \u2581the \u2581encoded \u2581 secret"], "bleu": 0.28940550821470035, "rouge_l": 0.4765625000000001}
{"id": 2319, "predictions": ["\u2581// \u2581Get Network State \u2581returns \u2581the \u2581state \u2581of \u2581the \u2581network \u2581state \u2581of \u2581the \u2581 controller ."], "references": ["\u2581// \u2581Get Network State \u2581returns \u2581metrics \u2581and \u2581information \u2581on \u2581the \u2581running \u2581network"], "bleu": 0.30277029197532096, "rouge_l": 0.5132211538461539}
{"id": 2231, "predictions": ["\u2581// \u2581 Format Section \u2581 - \u2581 Format \u2581a \u2581string \u2581to \u2581a \u2581string"], "references": ["\u2581// \u2581 Format Section \u2581properly \u2581 indents \u2581a \u2581 text \u2581section"], "bleu": 0.29899503549981366, "rouge_l": 0.507628294036061}
{"id": 2615, "predictions": ["\u2581// \u2581 Log fmt Format \u2581returns \u2581a \u2581 format \u2581that \u2581 contains \u2581the \u2581log fmt \u2581 format ."], "references": ["\u2581// \u2581 Log fmt Format \u2581return \u2581a \u2581formatter \u2581for \u2581a \u2581 text \u2581log \u2581file"], "bleu": 0.28889830842564407, "rouge_l": 0.5115303983228512}
{"id": 2678, "predictions": ["\u2581// \u2581socket Unix Set Ownership \u2581 wraps \u2581 path \u2581to \u2581 ns C \u2581 group \u2581 name \u2581and \u2581 gid ."], "references": ["\u2581// \u2581 Change \u2581the \u2581 ownership \u2581of \u2581the \u2581given \u2581unix \u2581socket \u2581file ,"], "bleu": 0.07305267243289862, "rouge_l": 0.18429003021148035}
{"id": 2267, "predictions": ["\u2581// \u2581Does SchemaTable Exist \u2581checks \u2581if \u2581a \u2581transaction \u2581 exists \u2581in \u2581the \u2581database ."], "references": ["\u2581// \u2581Does SchemaTable Exist \u2581return \u2581whether \u2581the \u2581schema \u2581 table \u2581is \u2581present \u2581in \u2581the \u2581// \u2581database ."], "bleu": 0.26132234616622874, "rouge_l": 0.5706860706860708}
{"id": 3099, "predictions": ["\u2581// \u2581 Cmd s \u2581returns \u2581a \u2581 slice \u2581of \u2581 cobra . Command \u2581for \u2581 kubeadm \u2581 subcommands"], "references": ["\u2581// \u2581 Cmd s \u2581returns \u2581 p ach ctl \u2581commands \u2581related \u2581to \u2581 Pac hyd er m \u2581 Enterprise"], "bleu": 0.26110922528849173, "rouge_l": 0.43033509700176364}
{"id": 3533, "predictions": ["\u2581// \u2581 From AuthHeader \u2581returns \u2581a \u2581 json \u2581from \u2581the \u2581http . Request ."], "references": ["\u2581// \u2581 From AuthHeader \u2581is \u2581a \u2581\" Token Extractor \" \u2581that \u2581takes \u2581a \u2581give \u2581request \u2581and \u2581extracts \u2581// \u2581the \u2581JWT \u2581 token \u2581from \u2581the \u2581 Authorization \u2581header ."], "bleu": 0.11380199054580771, "rouge_l": 0.40427098674521367}
{"id": 2666, "predictions": ["\u2581// \u2581 Profile Rename \u2581rename s \u2581the \u2581profile \u2581on \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Profile Rename \u2581rename s \u2581the \u2581profile \u2581matching \u2581the \u2581given \u2581 key \u2581parameters ."], "bleu": 0.5305545572278431, "rouge_l": 0.726190476190476}
{"id": 4001, "predictions": ["\u2581// \u2581 Nest \u2581is \u2581a \u2581convenience \u2581function \u2581for \u2581 Nest ."], "references": ["\u2581// \u2581Create \u2581a \u2581 Nested Error \u2581with \u2581the \u2581given \u2581 path . \u2581// \u2581If \u2581err \u2581is \u2581a \u2581 Nested Error , \u2581 prepend \u2581the \u2581 path \u2581to \u2581it . \u2581//"], "bleu": 0.03293691238648973, "rouge_l": 0.2701107011070111}
{"id": 3425, "predictions": ["\u2581// \u2581manifest Digest \u2581returns \u2581the \u2581digest \u2581of \u2581the \u2581given \u2581 Digest ."], "references": ["\u2581// \u2581manifest Digest \u2581returns \u2581a \u2581digest \u2581of \u2581the \u2581manifest , \u2581from \u2581instance Digest \u2581if \u2581non - nil ; \u2581or \u2581from \u2581the \u2581supplied \u2581reference , \u2581// \u2581or \u2581finally , \u2581from \u2581a"], "bleu": 0.09125134314003602, "rouge_l": 0.3536231884057971}
{"id": 3359, "predictions": ["\u2581// \u2581parse Image And Docker Reference \u2581returns \u2581the \u2581 Named Image \u2581if \u2581the \u2581image \u2581is \u2581valid ."], "references": ["\u2581// \u2581parse Image And Docker Reference \u2581converts \u2581an \u2581image \u2581and \u2581a \u2581reference \u2581string \u2581into \u2581two \u2581parsed \u2581entities , \u2581fail ing \u2581on \u2581any \u2581error \u2581and \u2581handling \u2581un identified \u2581images ."], "bleu": 0.17191428331023562, "rouge_l": 0.3321987746766508}
{"id": 2489, "predictions": ["\u2581// \u2581 RBAC Server \u2581returns \u2581the \u2581 RBAC \u2581 name \u2581of \u2581the \u2581 RBAC"], "references": ["\u2581// \u2581 RBAC Server \u2581returns \u2581all \u2581the \u2581 Can did \u2581settings \u2581needed \u2581to \u2581 connect \u2581to \u2581a \u2581server ."], "bleu": 0.2623932181931904, "rouge_l": 0.471953578336557}
{"id": 2519, "predictions": ["\u2581// \u2581Create S \u2581logs \u2581a \u2581 Storage \u2581volume"], "references": ["\u2581// \u2581Create S toragePoolVolume \u2581defines \u2581a \u2581new \u2581storage \u2581volume"], "bleu": 0.29150322793751426, "rouge_l": 0.5820610687022901}
{"id": 3071, "predictions": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581current \u2581worker ."], "bleu": 0.7539221180326288, "rouge_l": 0.8333333333333334}
{"id": 3444, "predictions": ["\u2581// \u2581 C NET \u2581 c 2 D \u2581 C go \u2581 Box \u2581 Box 2 D . C . C . C ."], "references": ["\u2581// \u2581Returns \u2581a \u2581 C v Box 2 D"], "bleu": 0.11653907453915101, "rouge_l": 0.39610389610389607}
{"id": 3641, "predictions": ["\u2581// \u2581register \u2581a \u2581new \u2581 Sub Channel \u2581object \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Register \u2581a \u2581new \u2581sub channel \u2581for \u2581the \u2581given \u2581serviceName"], "bleu": 0.15310245441182443, "rouge_l": 0.42957746478873243}
{"id": 3189, "predictions": ["\u2581// \u2581 Restore URL \u2581implements \u2581the \u2581 APIClient \u2581interface"], "references": ["\u2581// \u2581 Restore URL \u2581rest u res \u2581cluster \u2581state \u2581from \u2581object \u2581storage ."], "bleu": 0.25186505044536794, "rouge_l": 0.35209235209235207}
{"id": 2939, "predictions": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 data \u2581in \u2581the \u2581collection ."], "references": ["\u2581// \u2581 List \u2581returns \u2581objects \u2581sorted \u2581based \u2581on \u2581the \u2581options \u2581passed \u2581in . \u2581 f \u2581will \u2581be \u2581called \u2581with \u2581each \u2581 key , \u2581val \u2581will \u2581contain \u2581the \u2581// \u2581corresponding \u2581value"], "bleu": 0.04481889913725955, "rouge_l": 0.22509225092250923}
{"id": 2603, "predictions": ["\u2581// \u2581Get StoragePool \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 StoragePool \u2581if \u2581it \u2581is \u2581not \u2581present ."], "references": ["\u2581// \u2581Get StoragePool \u2581returns \u2581a \u2581 StoragePool \u2581entry \u2581for \u2581the \u2581provided \u2581pool \u2581 name"], "bleu": 0.26460159523593296, "rouge_l": 0.45963401506996776}
{"id": 2607, "predictions": ["\u2581// \u2581Get StoragePool Resources \u2581retrieves \u2581the \u2581resources \u2581for \u2581the \u2581specified \u2581 name ."], "references": ["\u2581// \u2581Get StoragePool Resources \u2581gets \u2581the \u2581resources \u2581available \u2581to \u2581a \u2581given \u2581storage \u2581pool"], "bleu": 0.30576902884505114, "rouge_l": 0.4615384615384617}
{"id": 3406, "predictions": ["\u2581// \u2581create OCI Ref \u2581creates \u2581a \u2581new \u2581 OCI \u2581reference \u2581from \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581create OCI Ref \u2581creates \u2581the \u2581 oci \u2581reference \u2581of \u2581the \u2581image"], "bleu": 0.3334477432809602, "rouge_l": 0.6047087980173481}
{"id": 2165, "predictions": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581CSV \u2581report \u2581from \u2581the \u2581report ."], "references": ["\u2581// \u2581 Load \u2581reads \u2581current \u2581 content \u2581of \u2581the \u2581 filename \u2581and \u2581 loads \u2581records ."], "bleu": 0.17707238844430018, "rouge_l": 0.4178082191780822}
{"id": 3746, "predictions": ["\u2581// \u2581newState \u2581creates \u2581a \u2581new \u2581state \u2581of \u2581the \u2581 State \u2581struct ."], "references": ["\u2581// \u2581newState \u2581parses \u2581the \u2581 type \u2581information \u2581for \u2581a \u2581parsed \u2581Thrift \u2581file \u2581and \u2581returns \u2581the \u2581state ."], "bleu": 0.1274874561526366, "rouge_l": 0.3344298245614035}
{"id": 3631, "predictions": ["\u2581// \u2581 Start \u2581the \u2581 relay ."], "references": ["\u2581// \u2581 Start \u2581starts \u2581a \u2581timer \u2581with \u2581the \u2581given \u2581duration \u2581for \u2581the \u2581specified \u2581 ID ."], "bleu": 0.10992750793148257, "rouge_l": 0.4873501997336884}
{"id": 3867, "predictions": ["\u2581// \u2581initial Advertise \u2581attempts \u2581to \u2581 advertise \u2581the \u2581 container ' s \u2581 advertised \u2581// \u2581 container \u2581and \u2581 scheduling \u2581the \u2581 active \u2581 table ."], "references": ["\u2581// \u2581initial Advertise \u2581will \u2581do \u2581the \u2581initial \u2581 Advertise \u2581 call \u2581to \u2581 Hyper ba h n \u2581with \u2581additional \u2581// \u2581retries \u2581on \u2581 top \u2581of \u2581the \u2581built - in \u2581"], "bleu": 0.10747852768063841, "rouge_l": 0.35260115606936415}
{"id": 3185, "predictions": ["\u2581// \u2581Extract Pipeline \u2581retrieves \u2581the \u2581pipeline \u2581 Pipeline \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Extract Pipeline \u2581extracts \u2581a \u2581single \u2581pipeline ."], "bleu": 0.18207052811092136, "rouge_l": 0.47805642633228845}
{"id": 3639, "predictions": ["\u2581// \u2581Get Handlers \u2581returns \u2581a \u2581 map \u2581of \u2581 handlers \u2581for \u2581a \u2581 filter ."], "references": ["\u2581// \u2581Get Handlers \u2581returns \u2581all \u2581 handlers \u2581registered \u2581on \u2581 this \u2581sub channel \u2581by \u2581method \u2581 name . \u2581// \u2581// \u2581This \u2581function \u2581panic s \u2581if \u2581the \u2581 Handler \u2581for \u2581the"], "bleu": 0.10845843803319692, "rouge_l": 0.3353951890034364}
{"id": 3005, "predictions": ["\u2581// \u2581 OneOf Matches \u2581checks \u2581if \u2581the \u2581given \u2581 type \u2581matches \u2581the \u2581provided \u2581 type ."], "references": ["\u2581// \u2581 OneOf Matches \u2581checks \u2581whether \u2581one \u2581element \u2581of \u2581a \u2581 slice \u2581matches \u2581a \u2581regular - expression ."], "bleu": 0.27517855135136154, "rouge_l": 0.465648854961832}
{"id": 2656, "predictions": ["\u2581// \u2581 Node Offline Threshold \u2581returns \u2581the \u2581 set \u2581of \u2581 active \u2581 replicas \u2581for \u2581a \u2581node ."], "references": ["\u2581// \u2581 Node Offline Threshold \u2581returns \u2581the \u2581amount \u2581of \u2581time \u2581that \u2581needs \u2581to \u2581 e lapse \u2581after \u2581// \u2581which \u2581a \u2581series \u2581of \u2581un successful \u2581heartbeat \u2581will \u2581make \u2581the \u2581node \u2581be"], "bleu": 0.20829158658615185, "rouge_l": 0.438562091503268}
{"id": 2801, "predictions": ["\u2581// \u2581 Start Commit Parent \u2581starts \u2581a \u2581new \u2581 Commit \u2581and \u2581returns \u2581a \u2581new \u2581commit"], "references": ["\u2581// \u2581 Start Commit Parent \u2581begins \u2581the \u2581process \u2581of \u2581 committing \u2581 data \u2581to \u2581a \u2581 Repo . \u2581 Once \u2581started \u2581// \u2581you \u2581can \u2581 write \u2581to \u2581the \u2581 Commit"], "bleu": 0.1283892352937859, "rouge_l": 0.3353951890034364}
{"id": 2826, "predictions": ["\u2581// \u2581 List Object \u2581 - \u2581lists \u2581all \u2581 api \u2581objects \u2581in \u2581the \u2581 api ."], "references": ["\u2581// \u2581 List Object \u2581lists \u2581objects \u2581stored \u2581in \u2581 pfs ."], "bleu": 0.2545984531673679, "rouge_l": 0.6896984924623116}
{"id": 2317, "predictions": ["\u2581// \u2581Get Network \u2581returns \u2581the \u2581network \u2581interface \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Network \u2581returns \u2581a \u2581 Network \u2581entry \u2581for \u2581the \u2581provided \u2581 name"], "bleu": 0.3407806467081348, "rouge_l": 0.6153846153846153}
{"id": 2062, "predictions": ["\u2581// \u2581 raft Config \u2581returns \u2581a \u2581 raft \u2581 Config ."], "references": ["\u2581// \u2581Create \u2581a \u2581base \u2581 raft \u2581configuration \u2581 tweak ed \u2581for \u2581a \u2581network \u2581with \u2581the \u2581given \u2581 latency \u2581measure ."], "bleu": 0.08452672386583171, "rouge_l": 0.36783919597989945}
{"id": 4048, "predictions": ["\u2581// \u2581 Logs Collections \u2581returns \u2581the \u2581log \u2581collection \u2581of \u2581 Collection"], "references": ["\u2581// \u2581 Logs Collections \u2581returns \u2581logs \u2581collections \u2581for \u2581all \u2581 apps \u2581from \u2581 MongoDB ."], "bleu": 0.30142755185453385, "rouge_l": 0.44907975460122695}
{"id": 3644, "predictions": ["\u2581// \u2581 Discover \u2581returns \u2581the \u2581 active \u2581cluster \u2581for \u2581the \u2581given \u2581service ."], "references": ["\u2581// \u2581 Discover \u2581queries \u2581 Hyper ba h n \u2581for \u2581a \u2581list \u2581of \u2581peers \u2581that \u2581are \u2581currently \u2581// \u2581 advertised \u2581with \u2581the \u2581specified \u2581service \u2581 name ."], "bleu": 0.07417120939145537, "rouge_l": 0.3762528912875867}
{"id": 3445, "predictions": ["\u2581// \u2581 Points \u2581returns \u2581the \u2581 box \u2581of \u2581the \u2581 box 2 \u2581 box ."], "references": ["\u2581// \u2581Finds \u2581 box \u2581vertices"], "bleu": 0.11633270842295028, "rouge_l": 0.32972972972972975}
{"id": 2233, "predictions": ["\u2581// \u2581Get Project \u2581returns \u2581the \u2581project \u2581 name \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Project \u2581returns \u2581a \u2581 Project \u2581entry \u2581for \u2581the \u2581provided \u2581 name"], "bleu": 0.3237722713145643, "rouge_l": 0.6711491442542787}
{"id": 2082, "predictions": ["\u2581// \u2581 Write Cert \u2581writes \u2581the \u2581given \u2581 path \u2581to \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581 Write Cert \u2581writes \u2581the \u2581given \u2581material \u2581to \u2581the \u2581appropriate \u2581certificate \u2581files \u2581in \u2581// \u2581the \u2581given \u2581 LXD \u2581var \u2581directory ."], "bleu": 0.35966066476038083, "rouge_l": 0.6409807355516637}
{"id": 2442, "predictions": ["\u2581// \u2581 Storage Progress Writer \u2581returns \u2581a \u2581writer \u2581that \u2581writes \u2581to \u2581the \u2581given \u2581 key \u2581and \u2581// \u2581 description ."], "references": ["\u2581// \u2581 Storage Progress Writer \u2581reports \u2581the \u2581 write \u2581progress ."], "bleu": 0.2476165058078653, "rouge_l": 0.5446428571428572}
{"id": 3913, "predictions": ["\u2581// \u2581 Attr Keys \u2581returns \u2581the \u2581 keys \u2581of \u2581all \u2581the \u2581 keys \u2581in \u2581the \u2581rule ."], "references": ["\u2581// \u2581 Attr Keys \u2581returns \u2581a \u2581sorted \u2581list \u2581of \u2581attribute \u2581 keys \u2581used \u2581in \u2581 this \u2581rule ."], "bleu": 0.3292499808045943, "rouge_l": 0.625349487418453}
{"id": 2738, "predictions": ["\u2581// \u2581 Run Bounded Args \u2581iterates \u2581over \u2581the \u2581arguments \u2581and \u2581returns \u2581the \u2581function \u2581that \u2581// \u2581is \u2581not \u2581 set ."], "references": ["\u2581// \u2581 Run Bounded Args \u2581 wraps \u2581a \u2581function \u2581in \u2581a \u2581function \u2581// \u2581that \u2581checks \u2581its \u2581argument \u2581count \u2581is \u2581within \u2581a \u2581range ."], "bleu": 0.22901825577073265, "rouge_l": 0.41340361445783136}
{"id": 3700, "predictions": ["\u2581// \u2581 Read \u2581a \u2581reader \u2581for \u2581the \u2581given \u2581 Reader ."], "references": ["\u2581// \u2581arg Reader \u2581returns \u2581an \u2581 Arg Reader \u2581that \u2581can \u2581be \u2581used \u2581to \u2581read \u2581an \u2581argument . \u2581The \u2581// \u2581 ReadCloser \u2581must \u2581be \u2581closed \u2581once \u2581the \u2581argument \u2581has \u2581been \u2581read"], "bleu": 0.03293691238648973, "rouge_l": 0.18007380073800738}
{"id": 3962, "predictions": ["\u2581// \u2581migrate Library Embed \u2581applies \u2581the \u2581 set \u2581of \u2581 templates ."], "references": ["\u2581// \u2581migrate Library Embed \u2581converts \u2581\" library \" \u2581attributes \u2581to \u2581\" embed \" \u2581attributes , \u2581// \u2581 pre serving \u2581comments . \u2581This \u2581only \u2581applies \u2581to \u2581Go \u2581rules , \u2581and \u2581only"], "bleu": 0.07256952215994865, "rouge_l": 0.26521739130434785}
{"id": 2748, "predictions": ["\u2581// \u2581 Reader \u2581returns \u2581a \u2581reader \u2581for \u2581the \u2581given \u2581 name \u2581and \u2581offset"], "references": ["\u2581// \u2581 Reader \u2581implements \u2581the \u2581corresponding \u2581method \u2581in \u2581the \u2581 Client \u2581interface"], "bleu": 0.19674979811155635, "rouge_l": 0.4029062087186261}
{"id": 3764, "predictions": ["\u2581// \u2581 Notify \u2581notifies \u2581the \u2581error \u2581 notify \u2581error ."], "references": ["\u2581// \u2581 Notify \u2581will \u2581store \u2581the \u2581error \u2581and \u2581 notify \u2581all \u2581 waiters \u2581on \u2581 c \u2581that \u2581there ' s \u2581an \u2581error ."], "bleu": 0.09561613610041163, "rouge_l": 0.5092764378478665}
{"id": 2835, "predictions": ["\u2581// \u2581 Copy File \u2581copies \u2581a \u2581 src \u2581source \u2581to \u2581a \u2581 src \u2581source ."], "references": ["\u2581// \u2581 Copy File \u2581copy s \u2581a \u2581file \u2581from \u2581one \u2581 pfs \u2581location \u2581to \u2581another . \u2581It \u2581can \u2581be \u2581used \u2581on \u2581// \u2581directories \u2581or \u2581regular \u2581files ."], "bleu": 0.11915360729151166, "rouge_l": 0.36228656273199694}
{"id": 2814, "predictions": ["\u2581// \u2581 Flush Commit \u2581 flush es \u2581the \u2581 set \u2581of \u2581 repositories \u2581to \u2581the \u2581 active \u2581 api"], "references": ["\u2581// \u2581 Flush Commit \u2581returns \u2581an \u2581 iterator \u2581that \u2581returns \u2581commits \u2581that \u2581have \u2581the \u2581// \u2581specified \u2581` commits ` \u2581as \u2581 provenance . \u2581Note \u2581that \u2581the \u2581 iterator \u2581can \u2581block"], "bleu": 0.12631950364037292, "rouge_l": 0.35305466237942124}
{"id": 3846, "predictions": ["\u2581// \u2581 Metrics Key \u2581returns \u2581the \u2581 key \u2581for \u2581the \u2581 operating \u2581system ."], "references": ["\u2581// \u2581 Metrics Key \u2581is \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581error \u2581 code \u2581that ' s \u2581suitable \u2581for \u2581// \u2581 inclusion \u2581in \u2581metrics \u2581tags ."], "bleu": 0.13334767826117164, "rouge_l": 0.4392000000000001}
{"id": 2177, "predictions": ["\u2581// \u2581API Extensions Count \u2581returns \u2581the \u2581number \u2581of \u2581 exports \u2581that \u2581are \u2581 set \u2581to \u2581// \u2581be \u2581used \u2581for \u2581 this \u2581API ."], "references": ["\u2581// \u2581API Extensions Count \u2581returns \u2581the \u2581number \u2581of \u2581available \u2581API \u2581extensions ."], "bleu": 0.346966645494591, "rouge_l": 0.6057596822244289}
{"id": 2250, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581package \u2581and \u2581returns \u2581a \u2581mapping ."], "references": ["\u2581// \u2581Parse \u2581the \u2581structure \u2581declaration \u2581with \u2581the \u2581given \u2581 name \u2581found \u2581in \u2581the \u2581given \u2581Go \u2581// \u2581package ."], "bleu": 0.08469994319770224, "rouge_l": 0.2717149220489978}
{"id": 2667, "predictions": ["\u2581// \u2581 Profile Delete \u2581deletes \u2581the \u2581given \u2581profile \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Profile Delete \u2581deletes \u2581the \u2581profile \u2581matching \u2581the \u2581given \u2581 key \u2581parameters ."], "bleu": 0.4633065559657602, "rouge_l": 0.6828358208955225}
{"id": 4058, "predictions": ["\u2581// \u2581choose Container ToRemove \u2581removes \u2581the \u2581 container \u2581from \u2581the \u2581 container , \u2581and \u2581updates \u2581the \u2581// \u2581 container ' s \u2581 container \u2581 data \u2581from \u2581the \u2581 container ."], "references": ["\u2581// \u2581choose Container ToRemove \u2581finds \u2581a \u2581 container \u2581from \u2581the \u2581the \u2581node \u2581with \u2581maximum \u2581// \u2581number \u2581of \u2581containers \u2581and \u2581returns \u2581it"], "bleu": 0.2021077149068507, "rouge_l": 0.4050464807436919}
{"id": 2253, "predictions": ["\u2581// \u2581Get Profile Names \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581the \u2581profile \u2581names \u2581in \u2581the \u2581 LXD \u2581// \u2581 set \u2581of \u2581 this \u2581 entity ."], "references": ["\u2581// \u2581 Profile \u2581handling \u2581function s \u2581// \u2581Get Profile Names \u2581returns \u2581a \u2581list \u2581of \u2581available \u2581profile \u2581names"], "bleu": 0.2252707911092971, "rouge_l": 0.39450282942603077}
{"id": 3916, "predictions": ["\u2581// \u2581 Attr Strings \u2581returns \u2581the \u2581list \u2581of \u2581strings \u2581in \u2581the \u2581 set \u2581of \u2581strings ."], "references": ["\u2581// \u2581 Attr Strings \u2581returns \u2581the \u2581string \u2581values \u2581of \u2581an \u2581attribute \u2581if \u2581it \u2581is \u2581a \u2581list . \u2581// \u2581nil \u2581is \u2581returned \u2581if \u2581the \u2581attribute \u2581is \u2581not \u2581 set \u2581or \u2581is"], "bleu": 0.1761218041576751, "rouge_l": 0.41216216216216217}
{"id": 3950, "predictions": ["\u2581// \u2581 apply Kind Mappings \u2581 apply s \u2581the \u2581 type \u2581 type \u2581to \u2581a \u2581 Load Info"], "references": ["\u2581// \u2581 apply Kind Mappings \u2581returns \u2581a \u2581copy \u2581of \u2581 Load Info \u2581that \u2581includes \u2581 c . Kind Map ."], "bleu": 0.29870452460694086, "rouge_l": 0.4692307692307693}
{"id": 2661, "predictions": ["\u2581// \u2581 Profile Get \u2581gets \u2581the \u2581profile \u2581for \u2581the \u2581given \u2581project ."], "references": ["\u2581// \u2581 Profile Get \u2581returns \u2581the \u2581profile \u2581with \u2581the \u2581given \u2581 key ."], "bleu": 0.3501507794870547, "rouge_l": 0.71484375}
{"id": 2078, "predictions": ["\u2581// \u2581 Project Rename \u2581rename s \u2581a \u2581 set \u2581of \u2581cluster \u2581 keys \u2581to \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Project Rename \u2581rename s \u2581the \u2581project \u2581matching \u2581the \u2581given \u2581 key \u2581parameters ."], "bleu": 0.367110852009989, "rouge_l": 0.6009852216748769}
{"id": 3994, "predictions": ["\u2581// \u2581 Consistent ly With Offset \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581number \u2581of \u2581// \u2581records \u2581that \u2581the \u2581second \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581 Consistent ly With Offset \u2581operate s \u2581like \u2581 Con sist net ly \u2581but \u2581takes \u2581an \u2581additional \u2581// \u2581initial \u2581argument \u2581to \u2581indicate \u2581an \u2581offset \u2581in \u2581the \u2581 call \u2581stack"], "bleu": 0.20163758061098663, "rouge_l": 0.3577712609970674}
{"id": 2441, "predictions": ["\u2581// \u2581 Storage Progress Reader \u2581returns \u2581a \u2581reader \u2581that \u2581will \u2581 write \u2581the \u2581 data \u2581to \u2581the \u2581// \u2581specified \u2581 key ."], "references": ["\u2581// \u2581 Storage Progress Reader \u2581reports \u2581the \u2581read \u2581progress ."], "bleu": 0.21800193956058223, "rouge_l": 0.4692307692307692}
{"id": 3884, "predictions": ["\u2581// \u2581fix Load \u2581load \u2581 loads \u2581rules \u2581from \u2581load \u2581 config \u2581file"], "references": ["\u2581// \u2581fix Load \u2581updates \u2581a \u2581load \u2581statement \u2581with \u2581the \u2581given \u2581symbols . \u2581If \u2581load \u2581is \u2581nil , \u2581// \u2581a \u2581new \u2581load \u2581may \u2581be \u2581created \u2581and \u2581returned . \u2581 Symbols \u2581in"], "bleu": 0.04962965758858181, "rouge_l": 0.26521739130434785}
{"id": 3256, "predictions": ["\u2581// \u2581Set Tag \u2581sets \u2581the \u2581 span \u2581associated \u2581with \u2581the \u2581 key"], "references": ["\u2581// \u2581Set Tag \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.22997519112894443, "rouge_l": 0.48878205128205127}
{"id": 3320, "predictions": ["\u2581// \u2581 Put Signatures \u2581 put \u2581a \u2581 content \u2581of \u2581the \u2581image \u2581into \u2581the \u2581 data \u2581store ."], "references": ["\u2581// \u2581 Put Signatures \u2581records \u2581the \u2581image ' s \u2581 signatures \u2581for \u2581 committing \u2581as \u2581a \u2581single \u2581 data \u2581blob ."], "bleu": 0.22543964770628322, "rouge_l": 0.45522388059701485}
{"id": 2672, "predictions": ["\u2581// \u2581 Delete Object \u2581deletes \u2581the \u2581object \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 Delete Object \u2581removes \u2581the \u2581row \u2581identified \u2581by \u2581the \u2581given \u2581 ID . \u2581The \u2581given \u2581 table \u2581// \u2581must \u2581have \u2581a \u2581primary \u2581 key \u2581column \u2581called \u2581' id '"], "bleu": 0.10412945553260217, "rouge_l": 0.3907473309608541}
{"id": 2216, "predictions": ["\u2581// \u2581 Read \u2581implements \u2581the \u2581 Stream \u2581interface ."], "references": ["\u2581// \u2581The \u2581 pty \u2581has \u2581been \u2581 switched \u2581to \u2581raw \u2581mode \u2581so \u2581we \u2581will \u2581only \u2581ever \u2581read \u2581a \u2581single \u2581// \u2581 byte . \u2581The \u2581buffer \u2581 size \u2581is \u2581therefore \u2581un"], "bleu": 0.020466264135212756, "rouge_l": 0.18697318007662836}
{"id": 3635, "predictions": ["\u2581// \u2581 tally Tags \u2581returns \u2581the \u2581tags \u2581of \u2581the \u2581 key \u2581of \u2581the \u2581 model ."], "references": ["\u2581// \u2581Create \u2581a \u2581sub - scope \u2581for \u2581 this \u2581 set \u2581of \u2581known \u2581tags ."], "bleu": 0.10521495173810227, "rouge_l": 0.32446808510638303}
{"id": 2808, "predictions": ["\u2581// \u2581Create Branch \u2581creates \u2581a \u2581new \u2581branch \u2581with \u2581the \u2581given \u2581 Branch \u2581and \u2581returns \u2581// \u2581the \u2581new \u2581branch ."], "references": ["\u2581// \u2581Create Branch \u2581creates \u2581a \u2581new \u2581branch"], "bleu": 0.346697783111003, "rouge_l": 0.5873452544704264}
{"id": 3287, "predictions": ["\u2581// \u2581Parse ImageName \u2581parses \u2581the \u2581 Image Reference \u2581from \u2581the \u2581provided \u2581image ."], "references": ["\u2581// \u2581Parse ImageName \u2581converts \u2581a \u2581 URL - like \u2581image \u2581 name \u2581to \u2581a \u2581types . Image Reference ."], "bleu": 0.14747832189597215, "rouge_l": 0.4231912784935579}
{"id": 3801, "predictions": ["\u2581// \u2581 Write Response \u2581writes \u2581a \u2581response \u2581to \u2581the \u2581 T Channel \u2581 call ."], "references": ["\u2581// \u2581 Write Response \u2581writes \u2581the \u2581given \u2581 Res \u2581to \u2581the \u2581 Inbound Call Response ."], "bleu": 0.3772435935201231, "rouge_l": 0.5772870662460569}
{"id": 3321, "predictions": ["\u2581// \u2581new Image \u2581creates \u2581a \u2581new \u2581image \u2581stream ."], "references": ["\u2581// \u2581new Image \u2581creates \u2581an \u2581image \u2581that \u2581also \u2581knows \u2581its \u2581 size"], "bleu": 0.2945901093386716, "rouge_l": 0.4642313546423136}
{"id": 2711, "predictions": ["\u2581// \u2581 Log \u2581logs \u2581a \u2581message \u2581to \u2581the \u2581log ."], "references": ["\u2581// \u2581 Helper \u2581function \u2581used \u2581to \u2581log \u2581requests \u2581and \u2581responses \u2581from \u2581our \u2581 GRPC \u2581method \u2581// \u2581implementations"], "bleu": 0.09360791398475977, "rouge_l": 0.28306264501160094}
{"id": 3002, "predictions": ["\u2581// \u2581 get AuthToken \u2581returns \u2581the \u2581 auth \u2581 token \u2581from \u2581the \u2581context ."], "references": ["\u2581// \u2581 get AuthToken \u2581extracts \u2581the \u2581 auth \u2581 token \u2581embedded \u2581in \u2581' ctx ', \u2581if \u2581there \u2581is \u2581on"], "bleu": 0.34425809547619673, "rouge_l": 0.5309477756286268}
{"id": 3484, "predictions": ["\u2581// \u2581 Option \u2581adds \u2581a \u2581request \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581 Option \u2581sets \u2581the \u2581given \u2581option ."], "bleu": 0.25965358893403384, "rouge_l": 0.5669144981412639}
{"id": 2121, "predictions": ["\u2581// \u2581 Refresh Image \u2581 refresh es \u2581the \u2581 data \u2581from \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Refresh Image \u2581requests \u2581that \u2581 LXD \u2581issues \u2581an \u2581image \u2581 refresh"], "bleu": 0.2722589423069702, "rouge_l": 0.43416370106761565}
{"id": 2298, "predictions": ["\u2581// \u2581Get Certificate Fingerprint s \u2581returns \u2581all \u2581the \u2581certificate \u2581fingerprint s"], "references": ["\u2581// \u2581 Certificate \u2581handling \u2581function s \u2581// \u2581Get Certificate Fingerprint s \u2581returns \u2581a \u2581list \u2581of \u2581certificate \u2581fingerprint s"], "bleu": 0.3355459345144354, "rouge_l": 0.5947995666305526}
{"id": 3997, "predictions": ["\u2581// \u2581 Consistent ly \u2581adds \u2581the \u2581given \u2581 slice \u2581of \u2581 items \u2581to \u2581the \u2581given \u2581list \u2581of \u2581 items ."], "references": ["\u2581// \u2581 Consistent ly \u2581is \u2581used \u2581to \u2581make \u2581asynchronous \u2581assertions . \u2581See \u2581documentation \u2581for \u2581 Consistent ly ."], "bleu": 0.19120817575042512, "rouge_l": 0.3719512195121952}
{"id": 3547, "predictions": ["\u2581// \u2581 announce \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581 announce \u2581 announce s \u2581whether \u2581or \u2581not \u2581 this \u2581node \u2581is \u2581interested \u2581in \u2581a \u2581given \u2581topic \u2581// \u2581 Only \u2581called \u2581from \u2581process Loop ."], "bleu": 0.052423155490597034, "rouge_l": 0.2571669477234401}
{"id": 3788, "predictions": ["\u2581// \u2581parse Templates \u2581parses \u2581a \u2581 templates \u2581from \u2581a \u2581 format \u2581of \u2581 templates ."], "references": ["\u2581// \u2581parse Templates \u2581returns \u2581a \u2581list \u2581of \u2581 Templates \u2581that \u2581must \u2581be \u2581rendered \u2581given \u2581the \u2581template \u2581files ."], "bleu": 0.16018263727677992, "rouge_l": 0.41739980449657876}
{"id": 2619, "predictions": ["\u2581// \u2581 Storage Volume Description Get \u2581returns \u2581the \u2581 description \u2581of \u2581a \u2581volume ."], "references": ["\u2581// \u2581 Storage Volume Description Get \u2581gets \u2581the \u2581 description \u2581of \u2581a \u2581storage \u2581volume ."], "bleu": 0.6417021314971846, "rouge_l": 0.8910112359550562}
{"id": 2066, "predictions": ["\u2581// \u2581 GetOperation UUID s \u2581returns \u2581the \u2581 UUID s \u2581for \u2581the \u2581 active \u2581 UUID ."], "references": ["\u2581// \u2581 GetOperation UUID s \u2581returns \u2581a \u2581list \u2581of \u2581operation \u2581 uuids"], "bleu": 0.3381307292971254, "rouge_l": 0.4982497082847141}
{"id": 4052, "predictions": ["\u2581// \u2581run With Agent Cmd s \u2581runs \u2581the \u2581command \u2581to \u2581 get \u2581the \u2581 app ' s \u2581 app ."], "references": ["\u2581// \u2581run With Agent Cmd s \u2581returns \u2581the \u2581list \u2581of \u2581commands \u2581that \u2581should \u2581be \u2581passed \u2581when \u2581the \u2581// \u2581 provisioner \u2581will \u2581run \u2581a \u2581unit \u2581using \u2581 t sur u _"], "bleu": 0.1877921320994121, "rouge_l": 0.3860759493670886}
{"id": 3880, "predictions": ["\u2581// \u2581Find \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581Find \u2581 searches \u2581from \u2581the \u2581given \u2581 dir \u2581and \u2581up \u2581for \u2581the \u2581 WORK SPACE \u2581file \u2581// \u2581returning \u2581the \u2581directory \u2581containing \u2581it , \u2581or \u2581an \u2581error \u2581if \u2581 none"], "bleu": 0.040498447060015284, "rouge_l": 0.2701107011070111}
{"id": 2346, "predictions": ["\u2581// \u2581Get Cluster Member \u2581returns \u2581the \u2581cluster \u2581member \u2581of \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Cluster Member \u2581returns \u2581information \u2581about \u2581the \u2581given \u2581member"], "bleu": 0.375022891676693, "rouge_l": 0.6014084507042253}
{"id": 2593, "predictions": ["\u2581// \u2581update Node Version \u2581updates \u2581the \u2581version \u2581of \u2581the \u2581 set \u2581of \u2581 Nodes \u2581in \u2581the \u2581given \u2581// \u2581address ."], "references": ["\u2581// \u2581 Update \u2581the \u2581schema \u2581and \u2581 api _ extensions \u2581columns \u2581of \u2581the \u2581row \u2581in \u2581the \u2581nodes \u2581 table \u2581// \u2581that \u2581matches \u2581the \u2581given \u2581 id . \u2581// \u2581// \u2581If"], "bleu": 0.08200573383396709, "rouge_l": 0.30886075949367087}
{"id": 2598, "predictions": ["\u2581// \u2581 Connect \u2581connects \u2581to \u2581the \u2581 container ' s \u2581 container \u2581and \u2581 notify \u2581the \u2581 container \u2581// \u2581and \u2581 connect \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 Connect \u2581is \u2581a \u2581convenience \u2581around \u2581 lxd . Connect LXD \u2581that \u2581configure s \u2581the \u2581client \u2581// \u2581with \u2581the \u2581correct \u2581parameters \u2581for \u2581node - to - node \u2581communication ."], "bleu": 0.09367014365804045, "rouge_l": 0.3173410404624277}
{"id": 3722, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581 healthcheck \u2581handler ."], "references": ["\u2581// \u2581Register \u2581registers \u2581 pprof \u2581endpoints \u2581on \u2581the \u2581given \u2581 registrar \u2581under \u2581 _ pprof . \u2581// \u2581The \u2581 _ pprof \u2581endpoint \u2581uses \u2581as - http \u2581and \u2581is \u2581a \u2581tunnel"], "bleu": 0.02929887179387845, "rouge_l": 0.23371647509578544}
{"id": 2085, "predictions": ["\u2581// \u2581 Allow Project Permission \u2581checks \u2581if \u2581the \u2581 container \u2581has \u2581a \u2581project"], "references": ["\u2581// \u2581 Allow Project Permission \u2581is \u2581a \u2581wrapper \u2581to \u2581check \u2581access \u2581against \u2581the \u2581project , \u2581its \u2581features \u2581and \u2581 RBAC \u2581permission"], "bleu": 0.21484158121715635, "rouge_l": 0.395004625346901}
{"id": 3134, "predictions": ["\u2581// \u2581new Mini o Writer \u2581creates \u2581a \u2581new \u2581 min io Writer ."], "references": ["\u2581// \u2581Creates \u2581a \u2581new \u2581 min io \u2581writer \u2581and \u2581a \u2581go \u2581routine \u2581to \u2581upload \u2581objects \u2581to \u2581 min io \u2581server"], "bleu": 0.21222674731931304, "rouge_l": 0.35023923444976074}
{"id": 4067, "predictions": ["\u2581// \u2581 Patch \u2581applies \u2581the \u2581patch \u2581and \u2581returns \u2581the \u2581 patched \u2581 Apps ."], "references": ["\u2581// \u2581 Patch \u2581applies \u2581the \u2581patch \u2581and \u2581returns \u2581the \u2581 patched \u2581 app ."], "bleu": 0.8666415730847504, "rouge_l": 0.9285714285714285}
{"id": 4012, "predictions": ["\u2581// \u2581 Discover Repository Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581repository \u2581 path \u2581for \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581 Discover Repository Path \u2581finds \u2581the \u2581 path \u2581of \u2581the \u2581repository \u2581from \u2581a \u2581given \u2581// \u2581directory . \u2581It \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581repository , \u2581or \u2581an \u2581an"], "bleu": 0.3389998238106634, "rouge_l": 0.509967845659164}
{"id": 2152, "predictions": ["\u2581// \u2581 Shutdown \u2581 graceful ly \u2581shut s \u2581down \u2581the \u2581gateway ."], "references": ["\u2581// \u2581 Shutdown \u2581 this \u2581gateway , \u2581stopping \u2581the \u2581gRPC \u2581server \u2581and \u2581possibly \u2581the \u2581 raft \u2581factory ."], "bleu": 0.1972644133873444, "rouge_l": 0.3860759493670886}
{"id": 3298, "predictions": ["\u2581// \u2581diff ID Computation Goroutine \u2581returns \u2581a \u2581 slice \u2581of \u2581 data \u2581that \u2581are \u2581 checked \u2581// \u2581for \u2581each \u2581given \u2581 bitcoin \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581diff ID Computation Goroutine \u2581reads \u2581all \u2581input \u2581from \u2581layer Stream , \u2581 uncompress es \u2581using \u2581 decompressor \u2581if \u2581necessary , \u2581and \u2581sends \u2581its \u2581digest , \u2581and \u2581 status ,"], "bleu": 0.16292386698680833, "rouge_l": 0.27806267806267804}
{"id": 4039, "predictions": ["\u2581// \u2581 Write Target \u2581writes \u2581a \u2581 set \u2581of \u2581 data \u2581to \u2581the \u2581target ."], "references": ["\u2581// \u2581 Write Target \u2581writes \u2581the \u2581given \u2581endpoint \u2581to \u2581the \u2581target \u2581file ."], "bleu": 0.393755531055134, "rouge_l": 0.6512455516014234}
{"id": 2295, "predictions": ["\u2581// \u2581project Create Default Profile \u2581creates \u2581a \u2581new \u2581profile \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Create \u2581the \u2581default \u2581profile \u2581of \u2581a \u2581project ."], "bleu": 0.11251329738544609, "rouge_l": 0.26180257510729615}
{"id": 2800, "predictions": ["\u2581// \u2581Build Commit \u2581creates \u2581a \u2581new \u2581 Commit \u2581object \u2581from \u2581the \u2581given \u2581repository \u2581and \u2581parent ."], "references": ["\u2581// \u2581Build Commit \u2581builds \u2581a \u2581commit \u2581in \u2581a \u2581single \u2581 call \u2581from \u2581an \u2581existing \u2581 Hash Tree \u2581that \u2581// \u2581has \u2581already \u2581been \u2581written \u2581to \u2581the \u2581object \u2581store . \u2581Note \u2581"], "bleu": 0.07504695770013659, "rouge_l": 0.32972972972972975}
{"id": 2422, "predictions": ["\u2581// \u2581 Delete Project \u2581deletes \u2581the \u2581project \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Delete Project \u2581adds \u2581a \u2581new \u2581project \u2581resource \u2581to \u2581 RBAC ."], "bleu": 0.29899503549981366, "rouge_l": 0.5384615384615383}
{"id": 3270, "predictions": ["\u2581// \u2581Parse Reference \u2581parses \u2581a \u2581reference \u2581to \u2581a \u2581 Image Reference ."], "references": ["\u2581// \u2581Parse Reference \u2581converts \u2581a \u2581string , \u2581which \u2581should \u2581not \u2581start \u2581with \u2581the \u2581 Image Transport . Name \u2581prefix , \u2581into \u2581an \u2581 OpenShift \u2581 Image Reference ."], "bleu": 0.10499830943925068, "rouge_l": 0.3730886850152905}
{"id": 2569, "predictions": ["\u2581// \u2581 Raft Nodes Replace \u2581replaces \u2581all \u2581nodes \u2581in \u2581the \u2581node ."], "references": ["\u2581// \u2581 Raft Nodes Replace \u2581replaces \u2581the \u2581current \u2581list \u2581of \u2581 raft \u2581nodes ."], "bleu": 0.43529489807045857, "rouge_l": 0.6069651741293532}
{"id": 3988, "predictions": ["\u2581// \u2581Verify BasicAuth \u2581 wraps \u2581the \u2581 Authorization \u2581header \u2581and \u2581returns \u2581the \u2581 auth \u2581header"], "references": ["\u2581// Verify BasicAuth \u2581returns \u2581a \u2581handler \u2581that \u2581verifies \u2581the \u2581request \u2581 contains \u2581a \u2581 BasicAuth \u2581 Authorization \u2581header \u2581// matching \u2581the \u2581passed \u2581in \u2581 username \u2581and \u2581password"], "bleu": 0.09728851295872422, "rouge_l": 0.36228656273199694}
{"id": 4085, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 Quota Service \u2581to \u2581the \u2581specified \u2581 name ."], "references": ["\u2581// \u2581Set \u2581 redefine s \u2581the \u2581in use \u2581units \u2581of \u2581the \u2581 app . \u2581This \u2581new \u2581value \u2581must \u2581be \u2581smaller \u2581// \u2581than \u2581or \u2581equal \u2581to \u2581the \u2581current \u2581limit \u2581of \u2581the"], "bleu": 0.053209691642546984, "rouge_l": 0.26049822064056943}
{"id": 3993, "predictions": ["\u2581// \u2581 Eventually With Offset \u2581 wraps \u2581the \u2581wrapped \u2581 call \u2581to \u2581 call \u2581the \u2581wrapped \u2581 Async Assertion , \u2581// \u2581with \u2581the \u2581given \u2581 slice \u2581and \u2581 type \u2581of"], "references": ["\u2581// \u2581 Eventually With Offset \u2581operate s \u2581like \u2581 Eventually \u2581but \u2581takes \u2581an \u2581additional \u2581// \u2581initial \u2581argument \u2581to \u2581indicate \u2581an \u2581offset \u2581in \u2581the \u2581 call \u2581stack . \u2581This \u2581is \u2581useful"], "bleu": 0.18391565202644336, "rouge_l": 0.3}
{"id": 2862, "predictions": ["\u2581// \u2581Register Cache Stats \u2581registers \u2581a \u2581 map \u2581of \u2581metrics \u2581for \u2581 this \u2581 group \u2581cache ."], "references": ["\u2581// \u2581Register Cache Stats \u2581creates \u2581a \u2581new \u2581wrapper \u2581for \u2581 group cache \u2581stats \u2581that \u2581implements \u2581// \u2581the \u2581prometheus . Collector \u2581interface , \u2581and \u2581registers \u2581it"], "bleu": 0.169264840217347, "rouge_l": 0.4143396226415094}
{"id": 3348, "predictions": ["\u2581// \u2581new Un trusted Signature \u2581returns \u2581a \u2581 verifier Signature \u2581that \u2581matches \u2581the \u2581given \u2581// \u2581image \u2581and \u2581version ."], "references": ["\u2581// \u2581new Un trusted Signature \u2581returns \u2581an \u2581 untrusted Signature \u2581object \u2581with \u2581// \u2581the \u2581specified \u2581primary \u2581 contents \u2581and \u2581appropriate \u2581metadata ."], "bleu": 0.2906244048561488, "rouge_l": 0.5295974743488556}
{"id": 3140, "predictions": ["\u2581// \u2581 getNum Nodes \u2581returns \u2581the \u2581list \u2581of \u2581nodes \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 getNum Nodes \u2581attempts \u2581to \u2581retrieve \u2581the \u2581number \u2581of \u2581nodes \u2581in \u2581the \u2581current \u2581 k 8 s \u2581// \u2581cluster"], "bleu": 0.2732960100977615, "rouge_l": 0.5837320574162679}
{"id": 3948, "predictions": ["\u2581// \u2581build Import Index \u2581builds \u2581the \u2581 Index Index \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581build Import Index \u2581constructs \u2581the \u2581 map \u2581used \u2581by \u2581Find Rules By Import ."], "bleu": 0.2722589423069702, "rouge_l": 0.4666666666666668}
{"id": 2898, "predictions": ["\u2581// \u2581 New Ordered \u2581returns \u2581a \u2581new \u2581 Ordered \u2581instance ."], "references": ["\u2581// \u2581 New Ordered \u2581creates \u2581a \u2581new \u2581ordered \u2581hash tree ."], "bleu": 0.37700638045494705, "rouge_l": 0.6363636363636364}
{"id": 3981, "predictions": ["\u2581// \u2581list Dirs \u2581returns \u2581all \u2581 dir \u2581of \u2581the \u2581directory"], "references": ["\u2581// \u2581list Dirs \u2581returns \u2581a \u2581 slice \u2581containing \u2581all \u2581the \u2581subdirectories \u2581under \u2581 dir , \u2581// \u2581including \u2581 dir \u2581itself ."], "bleu": 0.1430328247363457, "rouge_l": 0.42445328031809143}
{"id": 3328, "predictions": ["\u2581// \u2581 unlock Path \u2581 unlock s \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581to \u2581the \u2581 path . \u2581// \u2581// \u2581If \u2581the \u2581 path \u2581is \u2581not \u2581found , \u2581it"], "references": ["\u2581// \u2581 unlock Path \u2581 releases \u2581the \u2581 path Lock \u2581for \u2581 path ."], "bleu": 0.22524975158802654, "rouge_l": 0.5350877192982456}
{"id": 3264, "predictions": ["\u2581// \u2581 Log KV \u2581implements \u2581the \u2581 opentracing . Span \u2581interface"], "references": ["\u2581// \u2581 Log KV \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface . \u2581// \u2581// \u2581This \u2581implementations \u2581coerce s \u2581all \u2581\" values \" \u2581to \u2581strings , \u2581though \u2581that \u2581is \u2581not \u2581// \u2581something"], "bleu": 0.07416969631855261, "rouge_l": 0.36014760147601477}
{"id": 3921, "predictions": ["\u2581// \u2581 Insert \u2581adds \u2581a \u2581new \u2581 File \u2581to \u2581the \u2581 Rule ."], "references": ["\u2581// \u2581 Insert \u2581 marks \u2581 this \u2581statement \u2581for \u2581insertion \u2581at \u2581the \u2581end \u2581of \u2581the \u2581file . \u2581 Multiple \u2581// \u2581statements \u2581will \u2581be \u2581inserted \u2581in \u2581the \u2581order \u2581 Insert \u2581is"], "bleu": 0.05717753472068341, "rouge_l": 0.26049822064056943}
{"id": 2154, "predictions": ["\u2581// \u2581 Reset \u2581 clear s \u2581the \u2581 Gateway ' s \u2581state ."], "references": ["\u2581// \u2581 Reset \u2581the \u2581gateway , \u2581 shutting \u2581it \u2581down \u2581and \u2581starting \u2581against \u2581from \u2581 scratch \u2581using \u2581// \u2581the \u2581given \u2581certificate . \u2581// \u2581// \u2581This \u2581is \u2581used \u2581when \u2581 disabling"], "bleu": 0.05717753472068341, "rouge_l": 0.26049822064056943}
{"id": 2533, "predictions": ["\u2581// \u2581 container Load Node Project All \u2581 loads \u2581all \u2581 container \u2581variables \u2581from \u2581the \u2581state ."], "references": ["\u2581// \u2581 Load \u2581all \u2581containers \u2581of \u2581 this \u2581nodes \u2581under \u2581the \u2581given \u2581project ."], "bleu": 0.12149176141753365, "rouge_l": 0.45963401506996776}
{"id": 2236, "predictions": ["\u2581// \u2581 Rename Project \u2581rename s \u2581a \u2581project ."], "references": ["\u2581// \u2581 Rename Project \u2581rename s \u2581an \u2581existing \u2581project \u2581entry"], "bleu": 0.5911602603314157, "rouge_l": 0.7299145299145299}
{"id": 2651, "predictions": ["\u2581// \u2581 Node Update \u2581updates \u2581the \u2581cluster \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Node Update \u2581updates \u2581the \u2581 name \u2581an \u2581address \u2581of \u2581a \u2581node ."], "bleu": 0.42637068891603985, "rouge_l": 0.5886610373944512}
{"id": 2541, "predictions": ["\u2581// \u2581 Ask Password \u2581 asks \u2581the \u2581password \u2581for \u2581a \u2581user"], "references": ["\u2581// \u2581 Ask Password \u2581 asks \u2581the \u2581user \u2581to \u2581 enter \u2581a \u2581password ."], "bleu": 0.5055393144882451, "rouge_l": 0.6264441591784339}
{"id": 2626, "predictions": ["\u2581// \u2581 Storage Volume MoveTo L VM \u2581rename s \u2581the \u2581 VM \u2581 key \u2581to \u2581the \u2581 VM ."], "references": ["\u2581// \u2581 Storage Volume MoveTo L VM Thin PoolName Key \u2581upgrade s \u2581the \u2581 config \u2581 keys \u2581of \u2581 L VM \u2581// \u2581volumes ."], "bleu": 0.3450930205801312, "rouge_l": 0.6377893950709486}
{"id": 3069, "predictions": ["\u2581// \u2581 Hash Datum \u2581computes \u2581the \u2581hash \u2581of \u2581the \u2581given \u2581 data , \u2581using \u2581the \u2581 data \u2581 set ."], "references": ["\u2581// \u2581 Hash Datum \u2581computes \u2581and \u2581returns \u2581the \u2581hash \u2581of \u2581datum \u2581+ \u2581pipeline , \u2581with \u2581a \u2581// \u2581pipeline - specific \u2581prefix ."], "bleu": 0.27095501820953805, "rouge_l": 0.47213622291021673}
{"id": 2650, "predictions": ["\u2581// \u2581 Node Pending \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581node ' s \u2581 data \u2581for \u2581a \u2581given \u2581pending \u2581 ID ."], "references": ["\u2581// \u2581 Node Pending \u2581 toggle s \u2581the \u2581pending \u2581flag \u2581for \u2581the \u2581node . \u2581 A \u2581node \u2581is \u2581pending \u2581when \u2581// \u2581it ' s \u2581been \u2581accepted \u2581in \u2581the \u2581cluster ,"], "bleu": 0.15607136258127452, "rouge_l": 0.3368098159509202}
{"id": 2421, "predictions": ["\u2581// \u2581Add Project \u2581adds \u2581a \u2581project \u2581to \u2581the \u2581 role ."], "references": ["\u2581// \u2581Add Project \u2581adds \u2581a \u2581new \u2581project \u2581resource \u2581to \u2581 RBAC ."], "bleu": 0.43286491453054704, "rouge_l": 0.7765205091937766}
{"id": 2230, "predictions": ["\u2581// \u2581delete Config \u2581is \u2581used \u2581to \u2581delete \u2581a \u2581 config \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581 Delete \u2581the \u2581given \u2581 key \u2581rows \u2581from \u2581the \u2581given \u2581 config \u2581 table ."], "bleu": 0.1379357312452807, "rouge_l": 0.3293736501079914}
{"id": 3996, "predictions": ["\u2581// \u2581 Eventually \u2581 wraps \u2581the \u2581 With \u2581method , \u2581 this \u2581function \u2581will \u2581return \u2581the \u2581 mutex \u2581// \u2581for \u2581the \u2581given \u2581 type , \u2581and \u2581 increments \u2581the \u2581result"], "references": ["\u2581// \u2581 Eventually \u2581is \u2581used \u2581to \u2581make \u2581asynchronous \u2581assertions . \u2581See \u2581documentation \u2581for \u2581 Eventually ."], "bleu": 0.08309327583315261, "rouge_l": 0.23001508295625941}
{"id": 2709, "predictions": ["\u2581// \u2581new Writer \u2581creates \u2581a \u2581new \u2581 Writer \u2581with \u2581the \u2581provided \u2581 data \u2581and \u2581 data ."], "references": ["\u2581// \u2581new Writer \u2581creates \u2581a \u2581new \u2581 Writer ."], "bleu": 0.4624892603869298, "rouge_l": 0.732977303070761}
{"id": 2302, "predictions": ["\u2581// \u2581 Update Certificate \u2581updates \u2581the \u2581certificate \u2581for \u2581a \u2581certificate"], "references": ["\u2581// \u2581 Update Certificate \u2581updates \u2581the \u2581certificate \u2581definition"], "bleu": 0.6786502681586726, "rouge_l": 0.7936802973977695}
{"id": 2079, "predictions": ["\u2581// \u2581 Project Delete \u2581deletes \u2581all \u2581 Project \u2581objects \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Project Delete \u2581deletes \u2581the \u2581project \u2581matching \u2581the \u2581given \u2581 key \u2581parameters ."], "bleu": 0.35853358387875456, "rouge_l": 0.5150784077201447}
{"id": 3366, "predictions": ["\u2581// \u2581Validate OCI Path \u2581validates \u2581the \u2581 OCI \u2581reference \u2581to \u2581a \u2581 OCI \u2581reference"], "references": ["\u2581// \u2581Validate OCI Path \u2581takes \u2581the \u2581 OCI \u2581 path \u2581and \u2581validates \u2581it ."], "bleu": 0.3479159475128446, "rouge_l": 0.5714285714285714}
{"id": 4013, "predictions": ["\u2581// \u2581 Open Repository \u2581open s \u2581a \u2581repository ."], "references": ["\u2581// \u2581 Open Repository \u2581open s \u2581a \u2581repository \u2581by \u2581its \u2581filepath . \u2581You \u2581can \u2581use \u2581// \u2581 Discover Repository Path \u2581to \u2581discover \u2581the \u2581repository \u2581from \u2581any \u2581directory , \u2581and \u2581//"], "bleu": 0.08762406445626589, "rouge_l": 0.4206896551724138}
{"id": 3271, "predictions": ["\u2581// \u2581 New Reference \u2581creates \u2581a \u2581new \u2581 Image Reference \u2581from \u2581a \u2581 config \u2581reference"], "references": ["\u2581// \u2581 New Reference \u2581returns \u2581an \u2581 OpenShift \u2581reference \u2581for \u2581a \u2581reference . Named Tagged"], "bleu": 0.25748661016289676, "rouge_l": 0.4666666666666668}
{"id": 3330, "predictions": ["\u2581// \u2581update \u2581updates \u2581the \u2581cache ."], "references": ["\u2581// \u2581update \u2581returns \u2581runs \u2581the \u2581specified \u2581fn \u2581within \u2581a \u2581read - write \u2581transaction \u2581on \u2581the \u2581database ."], "bleu": 0.05281090724235529, "rouge_l": 0.3202099737532808}
{"id": 2605, "predictions": ["\u2581// \u2581 Update StoragePool \u2581updates \u2581the \u2581 name \u2581of \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Update StoragePool \u2581updates \u2581the \u2581pool \u2581to \u2581match \u2581the \u2581provided \u2581 StoragePool \u2581struct"], "bleu": 0.42637068891603985, "rouge_l": 0.5886610373944512}
{"id": 2425, "predictions": ["\u2581// \u2581 Has Permission \u2581checks \u2581if \u2581the \u2581given \u2581user \u2581is \u2581in \u2581the \u2581 group"], "references": ["\u2581// \u2581 Has Permission \u2581returns \u2581whether \u2581or \u2581not \u2581the \u2581user \u2581has \u2581the \u2581permission \u2581to \u2581perform \u2581a \u2581certain \u2581task ."], "bleu": 0.19359055361759023, "rouge_l": 0.41295938104448743}
{"id": 2074, "predictions": ["\u2581// \u2581 Project Get \u2581returns \u2581the \u2581project \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Project Get \u2581returns \u2581the \u2581project \u2581with \u2581the \u2581given \u2581 key ."], "bleu": 0.855526185871245, "rouge_l": 0.9230769230769234}
{"id": 2160, "predictions": ["\u2581// \u2581 D q 16 Log \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 format \u2581that \u2581logs \u2581// \u2581the \u2581log \u2581 format \u2581to \u2581the \u2581log . Log Log Info"], "references": ["\u2581// \u2581 D q lite Log \u2581 redirects \u2581 dql ite ' s \u2581logs \u2581to \u2581our \u2581own \u2581logger"], "bleu": 0.13351899845512327, "rouge_l": 0.3927038626609442}
{"id": 3172, "predictions": ["\u2581// \u2581 Sort Input \u2581sorts \u2581a \u2581 Input \u2581from \u2581a \u2581input \u2581input ."], "references": ["\u2581// \u2581 Sort Input \u2581sorts \u2581an \u2581 Input ."], "bleu": 0.4052587697205425, "rouge_l": 0.7519260400616331}
{"id": 2458, "predictions": ["\u2581// \u2581 Container Config Get \u2581returns \u2581the \u2581 config \u2581value \u2581for \u2581a \u2581 container"], "references": ["\u2581// \u2581 Container Config Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key \u2581in \u2581the \u2581configuration \u2581// \u2581of \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.22157809885685756, "rouge_l": 0.4614220877458397}
{"id": 2359, "predictions": ["\u2581// \u2581 StoragePool ID \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 active \u2581 ID \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 StoragePool ID \u2581returns \u2581the \u2581 ID \u2581of \u2581the \u2581pool \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.5495815213913582, "rouge_l": 0.7679856115107913}
{"id": 4003, "predictions": ["\u2581// \u2581Find Machine ById Or Address \u2581looks \u2581up \u2581the \u2581given \u2581machine \u2581by \u2581 id ."], "references": ["\u2581// \u2581Uses \u2581 id \u2581or \u2581address , \u2581 this \u2581is \u2581only \u2581used \u2581because \u2581previously \u2581we \u2581didn ' t \u2581have \u2581// \u2581 i a as - id \u2581in \u2581node \u2581metadata ."], "bleu": 0.04525169597825276, "rouge_l": 0.1676975945017182}
{"id": 2653, "predictions": ["\u2581// \u2581 Node Heartbeat \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581node \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node Heartbeat \u2581updates \u2581the \u2581heartbeat \u2581column \u2581of \u2581the \u2581node \u2581with \u2581the \u2581given \u2581address ."], "bleu": 0.2818720423903184, "rouge_l": 0.5131440588853837}
{"id": 2982, "predictions": ["\u2581// \u2581 New Google Client FromEnv \u2581creates \u2581a \u2581new \u2581Google \u2581client \u2581 config ."], "references": ["\u2581// \u2581 New Google Client FromEnv \u2581creates \u2581a \u2581Google \u2581client \u2581based \u2581on \u2581environment \u2581variables ."], "bleu": 0.5679515037838114, "rouge_l": 0.7539325842696629}
{"id": 2602, "predictions": ["\u2581// \u2581Get StoragePool s \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 StoragePool s \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get StoragePool s \u2581returns \u2581a \u2581list \u2581of \u2581 StoragePool \u2581entries"], "bleu": 0.2732231510487644, "rouge_l": 0.5602755453501722}
{"id": 3057, "predictions": ["\u2581// \u2581 write XML \u2581writes \u2581a \u2581 text \u2581 code \u2581to \u2581the \u2581http . ResponseWriter ."], "references": ["\u2581// \u2581 write XML \u2581serialize s \u2581a \u2581struct \u2581to \u2581a \u2581response \u2581as \u2581XML"], "bleu": 0.23287896954139942, "rouge_l": 0.42165898617511516}
{"id": 2235, "predictions": ["\u2581// \u2581 Update Project \u2581updates \u2581the \u2581project \u2581with \u2581the \u2581given \u2581 ETag ."], "references": ["\u2581// \u2581 Update Project \u2581updates \u2581the \u2581project \u2581to \u2581match \u2581the \u2581provided \u2581 Project \u2581struct"], "bleu": 0.5034846401674982, "rouge_l": 0.6622436670687575}
{"id": 3979, "predictions": ["\u2581// \u2581start Server \u2581starts \u2581the \u2581server \u2581and \u2581starts \u2581the \u2581server ."], "references": ["\u2581// \u2581start Server \u2581starts \u2581a \u2581new \u2581server \u2581process . \u2581This \u2581is \u2581called \u2581by \u2581the \u2581client ."], "bleu": 0.22631566425302407, "rouge_l": 0.5017626321974148}
{"id": 2487, "predictions": ["\u2581// \u2581 Discovery Listeners \u2581returns \u2581a \u2581 map \u2581of \u2581 Cert Info \u2581for \u2581all \u2581 plugins ."], "references": ["\u2581// \u2581Use \u2581the \u2581listeners \u2581associated \u2581with \u2581the \u2581file \u2581descriptors \u2581passed \u2581via \u2581// \u2581socket - based \u2581activation ."], "bleu": 0.07994607499472013, "rouge_l": 0.1176470588235294}
{"id": 2369, "predictions": ["\u2581// \u2581 StoragePool Get ID \u2581returns \u2581the \u2581 ID \u2581of \u2581a \u2581virtual \u2581pool ."], "references": ["\u2581// \u2581 StoragePool Get ID \u2581returns \u2581the \u2581 id \u2581of \u2581a \u2581single \u2581storage \u2581pool ."], "bleu": 0.5948961427122517, "rouge_l": 0.8224719101123595}
{"id": 2403, "predictions": ["\u2581// \u2581dest Func \u2581returns \u2581a \u2581 slice \u2581of \u2581fields \u2581that \u2581are \u2581 set \u2581to \u2581a \u2581 slice \u2581of \u2581fields ."], "references": ["\u2581// \u2581Return \u2581the \u2581 code \u2581for \u2581a \u2581\" dest \" \u2581function , \u2581to \u2581be \u2581passed \u2581as \u2581parameter \u2581to \u2581// \u2581query . Select Objects \u2581in \u2581order \u2581to \u2581scan \u2581a \u2581single \u2581row"], "bleu": 0.05067671090925683, "rouge_l": 0.15443037974683543}
{"id": 3263, "predictions": ["\u2581// \u2581 Log \u2581a \u2581timestamp \u2581with \u2581the \u2581given \u2581timestamp ."], "references": ["\u2581// \u2581The \u2581caller \u2581MUST \u2581NOT \u2581hold \u2581 s . Lock"], "bleu": 0.14991106946711685, "rouge_l": 0.3}
{"id": 3195, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Edit Script ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581human - readable \u2581string \u2581representing \u2581the \u2581 edit - script \u2581where \u2581// \u2581 Identity , \u2581 Unique X , \u2581 Unique Y , \u2581and \u2581 Modified"], "bleu": 0.07673292733354292, "rouge_l": 0.30942028985507253}
{"id": 2562, "predictions": ["\u2581// \u2581register \u2581is \u2581called \u2581by \u2581the \u2581 sql . Stmt \u2581and \u2581 call \u2581 SQL \u2581statement ."], "references": ["\u2581// \u2581 Output \u2581a \u2581line \u2581of \u2581 code \u2581that \u2581registers \u2581the \u2581given \u2581statement \u2581and \u2581declare s \u2581the \u2581// \u2581associated \u2581statement \u2581 code \u2581global \u2581variable ."], "bleu": 0.06572091276049152, "rouge_l": 0.230188679245283}
{"id": 3605, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 key \u2581value \u2581pair ."], "references": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581for \u2581a \u2581given \u2581 key ."], "bleu": 0.4408231875586727, "rouge_l": 0.7011494252873562}
{"id": 2966, "predictions": ["\u2581// \u2581 Inspect Datum \u2581returns \u2581the \u2581 data \u2581of \u2581a \u2581 Datum ."], "references": ["\u2581// \u2581 Inspect Datum \u2581returns \u2581 info \u2581about \u2581a \u2581single \u2581datum"], "bleu": 0.3759663529467017, "rouge_l": 0.5922330097087377}
{"id": 3597, "predictions": ["\u2581// \u2581 remove Connection \u2581removes \u2581the \u2581last \u2581 Connection \u2581from \u2581the \u2581 Peer ."], "references": ["\u2581// \u2581 remove Connection \u2581will \u2581check \u2581 remove \u2581the \u2581connection \u2581if \u2581it \u2581 exists \u2581on \u2581 conns Ptr \u2581// \u2581and \u2581returns \u2581whether \u2581it \u2581removed \u2581the \u2581connection ."], "bleu": 0.11559615526760743, "rouge_l": 0.3691376701966717}
{"id": 2321, "predictions": ["\u2581// \u2581 Update Network \u2581updates \u2581the \u2581network \u2581 data \u2581for \u2581a \u2581given \u2581 container"], "references": ["\u2581// \u2581 Update Network \u2581updates \u2581the \u2581network \u2581to \u2581match \u2581the \u2581provided \u2581 Network \u2581struct"], "bleu": 0.49009410393069486, "rouge_l": 0.5714285714285714}
{"id": 3545, "predictions": ["\u2581// \u2581handle Remove Subscription \u2581removes \u2581a \u2581subscription ."], "references": ["\u2581// \u2581handle Remove Subscription \u2581removes \u2581 Subscription \u2581sub \u2581from \u2581 boo keep ing . \u2581// \u2581If \u2581 this \u2581was \u2581the \u2581last \u2581 Subscription \u2581for \u2581a \u2581given \u2581topic , \u2581it \u2581will"], "bleu": 0.04035106831738546, "rouge_l": 0.2859375}
{"id": 2559, "predictions": ["\u2581// \u2581local Create Listener \u2581returns \u2581a \u2581new \u2581listener \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Create \u2581a \u2581new \u2581 net . Listener \u2581bound \u2581to \u2581the \u2581unix \u2581socket \u2581of \u2581the \u2581local \u2581endpoint ."], "bleu": 0.1150530180045802, "rouge_l": 0.3056112224448898}
{"id": 2349, "predictions": ["\u2581// \u2581 Compare Versions \u2581compares \u2581two \u2581versions \u2581of \u2581 type \u2581and \u2581returns \u2581a \u2581 slice \u2581of \u2581// \u2581 runes \u2581that \u2581are \u2581 satisfied ."], "references": ["\u2581// \u2581 Compare Versions \u2581the \u2581versions \u2581of \u2581two \u2581 LXD \u2581nodes . \u2581// \u2581// \u2581 A \u2581version \u2581consists \u2581of \u2581the \u2581version \u2581the \u2581node ' s \u2581schema \u2581and \u2581the \u2581number \u2581of"], "bleu": 0.15720218271812747, "rouge_l": 0.3267857142857143}
{"id": 3598, "predictions": ["\u2581// \u2581connection Close StateChange \u2581is \u2581called \u2581when \u2581a \u2581peer \u2581is \u2581 active ."], "references": ["\u2581// \u2581connection StateChanged \u2581is \u2581called \u2581when \u2581one \u2581of \u2581the \u2581peers ' \u2581connections \u2581states \u2581changes . \u2581// \u2581 All \u2581non - active \u2581connections \u2581are \u2581removed \u2581from \u2581the \u2581peer . \u2581The \u2581connection"], "bleu": 0.06496622227650835, "rouge_l": 0.3473309608540925}
{"id": 2635, "predictions": ["\u2581// \u2581 Network Update Cert \u2581updates \u2581the \u2581 Cert \u2581for \u2581the \u2581given \u2581certificate ."], "references": ["\u2581// \u2581 Network Update Cert \u2581updates \u2581the \u2581 TLS \u2581 keypair \u2581and \u2581 CA \u2581used \u2581by \u2581the \u2581network \u2581// \u2581endpoint . \u2581// \u2581// \u2581If \u2581the \u2581network \u2581endpoint \u2581is \u2581 active"], "bleu": 0.18482489435045105, "rouge_l": 0.42657342657342656}
{"id": 2167, "predictions": ["\u2581// \u2581Add Record \u2581adds \u2581a \u2581record \u2581to \u2581the \u2581report \u2581report ."], "references": ["\u2581// \u2581Add Record \u2581adds \u2581a \u2581record \u2581to \u2581the \u2581report ."], "bleu": 0.8485766316739435, "rouge_l": 0.9606299212598426}
{"id": 2755, "predictions": ["\u2581// \u2581Validate Path \u2581validates \u2581the \u2581 path \u2581of \u2581the \u2581 path"], "references": ["\u2581// \u2581Validate Path \u2581checks \u2581if \u2581a \u2581file \u2581 path \u2581is \u2581 legal"], "bleu": 0.23925530714892257, "rouge_l": 0.5176803394625177}
{"id": 2398, "predictions": ["\u2581// \u2581 Patches \u2581returns \u2581all \u2581the \u2581 Patches \u2581 items \u2581in \u2581the \u2581node ."], "references": ["\u2581// \u2581 Patches \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581 patches \u2581currently \u2581applied \u2581on \u2581 this \u2581node ."], "bleu": 0.255699223062525, "rouge_l": 0.5706860706860708}
{"id": 3625, "predictions": ["\u2581// \u2581 Read String \u2581reads \u2581the \u2581next \u2581string \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Read String \u2581reads \u2581a \u2581string \u2581of \u2581 length \u2581 n ."], "bleu": 0.3762614992413644, "rouge_l": 0.5559895833333334}
{"id": 4059, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 router \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get \u2581gets \u2581the \u2581named \u2581 router \u2581from \u2581the \u2581registry ."], "bleu": 0.1870361278311548, "rouge_l": 0.5258620689655172}
{"id": 2279, "predictions": ["\u2581// \u2581 Storage Start Owned \u2581returns \u2581the \u2581 container ' s \u2581 container \u2581 name ."], "references": ["\u2581// \u2581 Kill \u2581 this \u2581function \u2581as \u2581soon \u2581as \u2581 zfs \u2581is \u2581fixed ."], "bleu": 0.1203921753741131, "rouge_l": 0.3373893805309734}
{"id": 2687, "predictions": ["\u2581// \u2581 Main RBD Volume Rename \u2581creates \u2581a \u2581 RBD \u2581volume \u2581 config"], "references": ["\u2581// \u2581 ceph RBD Volume Rename \u2581rename s \u2581a \u2581given \u2581 RBD \u2581storage \u2581volume \u2581// \u2581Note \u2581that \u2581 this \u2581usually \u2581requires \u2581that \u2581the \u2581image \u2581be \u2581 unmapped \u2581under \u2581its \u2581original"], "bleu": 0.07034986821781213, "rouge_l": 0.43416370106761565}
{"id": 3004, "predictions": ["\u2581// \u2581 Matches \u2581checks \u2581if \u2581the \u2581given \u2581 path \u2581matches \u2581the \u2581provided \u2581 type \u2581and \u2581// \u2581returns \u2581the \u2581error ."], "references": ["\u2581// \u2581 Matches \u2581checks \u2581that \u2581a \u2581string \u2581matches \u2581a \u2581regular - expression ."], "bleu": 0.18493046910349434, "rouge_l": 0.37809917355371897}
{"id": 3156, "predictions": ["\u2581// \u2581 Chunk Reader \u2581reads \u2581the \u2581reader \u2581from \u2581the \u2581reader \u2581and \u2581returns \u2581the \u2581number \u2581of \u2581bytes \u2581// \u2581written \u2581to \u2581the \u2581 Reader ."], "references": ["\u2581// \u2581 Chunk Reader \u2581splits \u2581a \u2581reader \u2581into \u2581reason ably \u2581 size d \u2581chunks \u2581for \u2581the \u2581purpose \u2581// \u2581of \u2581 trans mitting \u2581the \u2581chunks \u2581over \u2581gRPC . \u2581 For \u2581each"], "bleu": 0.13521543733863856, "rouge_l": 0.33172205438066465}
{"id": 3339, "predictions": ["\u2581// \u2581blob Path \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581blob \u2581in \u2581the \u2581given \u2581digest ."], "references": ["\u2581// \u2581blob Path \u2581returns \u2581a \u2581 path \u2581for \u2581a \u2581blob \u2581within \u2581a \u2581directory \u2581using \u2581 OCI \u2581image - layout \u2581convention s ."], "bleu": 0.17583265158983158, "rouge_l": 0.41816623821765214}
{"id": 2828, "predictions": ["\u2581// \u2581Get Tag \u2581returns \u2581a \u2581 set \u2581of \u2581tag \u2581 name"], "references": ["\u2581// \u2581Get Tag \u2581gets \u2581an \u2581object \u2581out \u2581of \u2581the \u2581object \u2581store \u2581by \u2581tag ."], "bleu": 0.1786189637183548, "rouge_l": 0.39152759948652116}
{"id": 3067, "predictions": ["\u2581// \u2581 Datum ID \u2581returns \u2581the \u2581 ID \u2581of \u2581a \u2581 set \u2581of \u2581 data \u2581in \u2581the \u2581 APIServer ."], "references": ["\u2581// \u2581 Datum ID \u2581computes \u2581the \u2581 id \u2581for \u2581a \u2581datum , \u2581 this \u2581value \u2581is \u2581used \u2581in \u2581 List Datum \u2581and \u2581// \u2581 Inspect Datum ."], "bleu": 0.16085858125357153, "rouge_l": 0.4558423913043478}
{"id": 3041, "predictions": ["\u2581// \u2581 Write Secret \u2581encodes \u2581a \u2581 secret \u2581to \u2581a \u2581 secret"], "references": ["\u2581// \u2581 Write Secret \u2581writes \u2581a \u2581JSON - encoded \u2581 k 8 s \u2581 secret \u2581to \u2581the \u2581given \u2581writer . \u2581// \u2581The \u2581 secret \u2581uses \u2581the \u2581given \u2581 map \u2581as"], "bleu": 0.09712345746495908, "rouge_l": 0.44202898550724634}
{"id": 3837, "predictions": ["\u2581// \u2581 Read Args V 2 \u2581reads \u2581the \u2581 Args \u2581from \u2581the \u2581 V 2 \u2581 format ."], "references": ["\u2581// \u2581 Read Args V 2 \u2581reads \u2581arg 2 \u2581and \u2581arg 3 \u2581from \u2581a \u2581reader ."], "bleu": 0.39696685122270786, "rouge_l": 0.5350877192982456}
{"id": 3405, "predictions": ["\u2581// \u2581 New Reference \u2581creates \u2581a \u2581new \u2581image \u2581reference"], "references": ["\u2581// \u2581 New Reference \u2581returns \u2581an \u2581 OCI \u2581reference \u2581for \u2581a \u2581file \u2581and \u2581a \u2581image ."], "bleu": 0.2029705721885437, "rouge_l": 0.45692883895131076}
{"id": 3014, "predictions": ["\u2581// \u2581 Not Nil \u2581 - \u2581 Not \u2581 empty \u2581 code"], "references": ["\u2581// \u2581 Not Nil \u2581checks \u2581a \u2581value \u2581is \u2581non - nil ."], "bleu": 0.3026643726685863, "rouge_l": 0.4166666666666667}
{"id": 3336, "predictions": ["\u2581// \u2581 New Reference \u2581creates \u2581a \u2581new \u2581image \u2581reference ."], "references": ["\u2581// \u2581 New Reference \u2581returns \u2581an \u2581 OCI \u2581reference \u2581for \u2581a \u2581directory \u2581and \u2581a \u2581image . \u2581// \u2581// \u2581We \u2581do \u2581not \u2581expose \u2581an \u2581API \u2581supply ing \u2581the \u2581resolved Dir ;"], "bleu": 0.05499752915127494, "rouge_l": 0.32105263157894737}
{"id": 2179, "predictions": ["\u2581// \u2581 Select Strings \u2581selects \u2581a \u2581 slice \u2581of \u2581strings \u2581with \u2581the \u2581given \u2581args ."], "references": ["\u2581// \u2581 Select Strings \u2581executes \u2581a \u2581statement \u2581which \u2581must \u2581yield \u2581rows \u2581with \u2581a \u2581single \u2581string \u2581// \u2581column . \u2581It \u2581returns \u2581the \u2581list \u2581of \u2581column \u2581values ."], "bleu": 0.13076741325913963, "rouge_l": 0.3722349351639969}
{"id": 3419, "predictions": ["\u2581// \u2581 Commit \u2581commits \u2581the \u2581image \u2581to \u2581the \u2581destination \u2581directory"], "references": ["\u2581// \u2581 Commit \u2581 marks \u2581the \u2581process \u2581of \u2581storing \u2581the \u2581image \u2581as \u2581successful \u2581and \u2581 asks \u2581for \u2581the \u2581image \u2581to \u2581be \u2581persisted \u2581// \u2581after \u2581the \u2581directory \u2581is \u2581made , \u2581it"], "bleu": 0.04890048684636384, "rouge_l": 0.3669172932330827}
{"id": 2218, "predictions": ["\u2581// \u2581 Retry \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 data \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Retry \u2581 wraps \u2581a \u2581function \u2581that \u2581 interact s \u2581with \u2581the \u2581database , \u2581and \u2581retries \u2581it \u2581in \u2581// \u2581case \u2581a \u2581transient \u2581error \u2581is \u2581hit . \u2581// \u2581// \u2581This"], "bleu": 0.09029581511349671, "rouge_l": 0.40531561461794013}
{"id": 2532, "predictions": ["\u2581// \u2581 container Load Node All \u2581 loads \u2581all \u2581 container \u2581variables \u2581from \u2581the \u2581state ."], "references": ["\u2581// \u2581 Load \u2581all \u2581containers \u2581of \u2581 this \u2581nodes ."], "bleu": 0.12512236921161915, "rouge_l": 0.48157894736842105}
{"id": 2768, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581a \u2581line \u2581to \u2581the \u2581 tab writer ."], "bleu": 0.3710657122133101, "rouge_l": 0.603960396039604}
{"id": 2232, "predictions": ["\u2581// \u2581Get Projects \u2581returns \u2581the \u2581projects \u2581of \u2581the \u2581 active \u2581project ."], "references": ["\u2581// \u2581Get Projects \u2581returns \u2581a \u2581list \u2581of \u2581available \u2581 Project \u2581structs"], "bleu": 0.31455601883230705, "rouge_l": 0.5258620689655172}
{"id": 2737, "predictions": ["\u2581// \u2581 Run Fixed Args \u2581takes \u2581a \u2581 Args \u2581with \u2581the \u2581required \u2581arguments \u2581and \u2581returns \u2581the \u2581// \u2581argument ."], "references": ["\u2581// \u2581 Run Fixed Args \u2581 wraps \u2581a \u2581function \u2581in \u2581a \u2581function \u2581// \u2581that \u2581checks \u2581its \u2581exact \u2581argument \u2581count ."], "bleu": 0.2604066818943325, "rouge_l": 0.4594142259414226}
{"id": 3184, "predictions": ["\u2581// \u2581Extract URL \u2581retrieves \u2581the \u2581 URL \u2581from \u2581the \u2581 admin \u2581API"], "references": ["\u2581// \u2581Extract URL \u2581extracts \u2581all \u2581cluster \u2581state \u2581and \u2581marshall s \u2581it \u2581to \u2581object \u2581storage ."], "bleu": 0.1506086338356697, "rouge_l": 0.21785714285714283}
{"id": 2822, "predictions": ["\u2581// \u2581 GetObject \u2581reads \u2581a \u2581 URL \u2581from \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 GetObject \u2581gets \u2581an \u2581object \u2581out \u2581of \u2581the \u2581object \u2581store \u2581by \u2581hash ."], "bleu": 0.17066020143571542, "rouge_l": 0.31322207958921694}
{"id": 2776, "predictions": ["\u2581// \u2581 Print Detailed FileInfo \u2581prints \u2581a \u2581list \u2581of \u2581 FileInfo \u2581objects"], "references": ["\u2581// \u2581 Print Detailed FileInfo \u2581pretty - print s \u2581detailed \u2581file \u2581 info ."], "bleu": 0.33481167074852813, "rouge_l": 0.45522388059701485}
{"id": 2316, "predictions": ["\u2581// \u2581Get Networks \u2581returns \u2581the \u2581 Networks \u2581for \u2581the \u2581 container"], "references": ["\u2581// \u2581Get Networks \u2581returns \u2581a \u2581list \u2581of \u2581 Network \u2581struct"], "bleu": 0.33180774028439425, "rouge_l": 0.4803149606299213}
{"id": 2166, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581CSV \u2581report \u2581to \u2581the \u2581report ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581current \u2581records \u2581to \u2581file ."], "bleu": 0.3448444257953326, "rouge_l": 0.6110183639398998}
{"id": 2176, "predictions": ["\u2581// \u2581new Root \u2581returns \u2581a \u2581new \u2581 cobra \u2581command \u2581for \u2581 this \u2581 Root ."], "references": ["\u2581// \u2581Return \u2581a \u2581new \u2581root \u2581command ."], "bleu": 0.12874330508144843, "rouge_l": 0.4864433811802232}
{"id": 2767, "predictions": ["\u2581// \u2581 NewWriter \u2581returns \u2581a \u2581new \u2581 Writer \u2581that \u2581writes \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 NewWriter \u2581returns \u2581a \u2581new \u2581 Writer , \u2581it \u2581will \u2581 flush \u2581when \u2581// \u2581it \u2581gets \u2581term Height \u2581many \u2581lines , \u2581including \u2581the \u2581header \u2581line . \u2581// \u2581The \u2581header"], "bleu": 0.19841196184044937, "rouge_l": 0.41924398625429554}
{"id": 3009, "predictions": ["\u2581// \u2581None Equals \u2581checks \u2581if \u2581the \u2581given \u2581value \u2581is \u2581a \u2581 test ."], "references": ["\u2581// \u2581None Equals \u2581checks \u2581one \u2581element \u2581of \u2581a \u2581 slice \u2581 equals \u2581a \u2581value . \u2581 Like \u2581// \u2581 Equals OneOf , \u2581None Equals \u2581 unwrap s \u2581pointers ."], "bleu": 0.0950962356356639, "rouge_l": 0.3119065010956903}
{"id": 3401, "predictions": ["\u2581// \u2581load Tar Manifest \u2581reads \u2581the \u2581manifest \u2581from \u2581the \u2581source \u2581file \u2581and \u2581returns \u2581it ."], "references": ["\u2581// \u2581load Tar Manifest \u2581 loads \u2581and \u2581decodes \u2581the \u2581manifest . json ."], "bleu": 0.2803950119994004, "rouge_l": 0.5065243179122182}
{"id": 3741, "predictions": ["\u2581// \u2581 Response \u2581returns \u2581a \u2581 Inbound Call Response \u2581with \u2581the \u2581given \u2581 Inbound Call ."], "references": ["\u2581// \u2581 Response \u2581provides \u2581access \u2581to \u2581the \u2581 Inbound Call Response \u2581object \u2581which \u2581can \u2581be \u2581used \u2581// \u2581to \u2581 write \u2581back \u2581to \u2581the \u2581calling \u2581peer"], "bleu": 0.1725133122063047, "rouge_l": 0.37538461538461537}
{"id": 3519, "predictions": ["\u2581// \u2581Parse Next \u2581parses \u2581the \u2581 text \u2581statement \u2581into \u2581a \u2581 Statement ."], "references": ["\u2581// \u2581Parse Next \u2581parses \u2581a \u2581single \u2581 SQL \u2581statement \u2581from \u2581the \u2581tokenizer \u2581// \u2581returning \u2581a \u2581 Statement \u2581which \u2581is \u2581the \u2581AST \u2581representation \u2581of \u2581the \u2581query . \u2581// \u2581The \u2581tokenizer \u2581will"], "bleu": 0.10641938328509397, "rouge_l": 0.43416370106761565}
{"id": 2735, "predictions": ["\u2581// \u2581 Clients \u2581returns \u2581a \u2581 slice \u2581of \u2581clients \u2581to \u2581the \u2581given \u2581etcd \u2581client ."], "references": ["\u2581// \u2581 Clients \u2581returns \u2581a \u2581 slice \u2581of \u2581worker \u2581clients \u2581for \u2581a \u2581pipeline . \u2581// \u2581pipeline Rc Name \u2581is \u2581the \u2581 name \u2581of \u2581the \u2581pipeline ' s \u2581 RC \u2581and"], "bleu": 0.2027752714872816, "rouge_l": 0.41924398625429554}
{"id": 2345, "predictions": ["\u2581// \u2581Get Cluster Members \u2581returns \u2581the \u2581list \u2581of \u2581cluster \u2581cluster \u2581 IDs ."], "references": ["\u2581// \u2581Get Cluster Members \u2581returns \u2581the \u2581current \u2581members \u2581of \u2581the \u2581cluster"], "bleu": 0.460462862587273, "rouge_l": 0.6768377253814147}
{"id": 3748, "predictions": ["\u2581// \u2581check Include \u2581returns \u2581a \u2581 State \u2581for \u2581a \u2581given \u2581 type ."], "references": ["\u2581// \u2581check Include \u2581will \u2581check \u2581if \u2581the \u2581 type \u2581is \u2581an \u2581included \u2581 type , \u2581and \u2581if \u2581so , \u2581return \u2581the \u2581// \u2581state \u2581and \u2581 type \u2581from \u2581the \u2581state \u2581for"], "bleu": 0.06144125958664295, "rouge_l": 0.26049822064056943}
{"id": 2625, "predictions": ["\u2581// \u2581 Storage Volume Cleanup Images \u2581removes \u2581the \u2581images \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Storage Volume Cleanup Images \u2581removes \u2581the \u2581volumes \u2581with \u2581the \u2581given \u2581fingerprint s ."], "bleu": 0.5369787816169341, "rouge_l": 0.7052023121387283}
{"id": 3940, "predictions": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581deep \u2581copy \u2581of \u2581the \u2581 Config ."], "references": ["\u2581// \u2581 Clone \u2581creates \u2581a \u2581copy \u2581of \u2581the \u2581configuration \u2581for \u2581use \u2581in \u2581a \u2581 subdirectory . \u2581// \u2581Note \u2581that \u2581the \u2581 Ext s \u2581 map \u2581is \u2581copied , \u2581but \u2581its"], "bleu": 0.07140803502972334, "rouge_l": 0.3978260869565217}
{"id": 3795, "predictions": ["\u2581// \u2581 Introspect State \u2581returns \u2581a \u2581 State Runtime State \u2581that \u2581will \u2581 add \u2581the \u2581state \u2581of \u2581the \u2581// \u2581 Ethereum \u2581peer ."], "references": ["\u2581// \u2581 Introspect State \u2581returns \u2581the \u2581runtime \u2581state \u2581for \u2581 this \u2581peer ."], "bleu": 0.23606740829164724, "rouge_l": 0.5848513902205177}
{"id": 2936, "predictions": ["\u2581// \u2581 get Pool Paths \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581 map , \u2581or \u2581an \u2581error \u2581if \u2581the \u2581// \u2581index \u2581is \u2581not \u2581found ."], "references": ["\u2581// \u2581 G iving \u2581a \u2581value , \u2581a \u2581multi - index , \u2581and \u2581the \u2581 key \u2581of \u2581the \u2581item , \u2581return \u2581the \u2581// \u2581paths \u2581under \u2581which \u2581the \u2581multi - index"], "bleu": 0.1911521553086483, "rouge_l": 0.33795013850415506}
{"id": 3315, "predictions": ["\u2581// \u2581new Dist M Exact Repository \u2581creates \u2581a \u2581new \u2581 Dist M Exact Repository \u2581from \u2581a \u2581repository \u2581// \u2581 name ."], "references": ["\u2581// \u2581new PR M Exact Repository \u2581is \u2581 New PR M Exact Repository , \u2581except \u2581it \u2581res turn s \u2581the \u2581private \u2581 type ."], "bleu": 0.1623547412650272, "rouge_l": 0.4830813534917206}
{"id": 2322, "predictions": ["\u2581// \u2581 Rename Network \u2581 - \u2581 posts \u2581a \u2581network \u2581to \u2581the \u2581network ."], "references": ["\u2581// \u2581 Rename Network \u2581rename s \u2581an \u2581existing \u2581network \u2581entry"], "bleu": 0.25748661016289676, "rouge_l": 0.42957746478873243}
{"id": 3367, "predictions": ["\u2581// \u2581Validate Scope \u2581validates \u2581the \u2581 scope \u2581of \u2581the \u2581 scope"], "references": ["\u2581// \u2581Validate Scope \u2581validates \u2581a \u2581policy \u2581configuration \u2581 scope \u2581for \u2581an \u2581 OCI \u2581transport ."], "bleu": 0.2620736963408941, "rouge_l": 0.5239263803680982}
{"id": 2779, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 slice \u2581of \u2581 data \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581Get \u2581does \u2581a \u2581filtered \u2581 write \u2581of \u2581 id ' s \u2581hash tree \u2581to \u2581the \u2581passed \u2581in \u2581io . Writer ."], "bleu": 0.09162504494692232, "rouge_l": 0.4368845120859445}
{"id": 3768, "predictions": ["\u2581// \u2581shutdown \u2581is \u2581the \u2581main \u2581point \u2581for \u2581 this \u2581 call ."], "references": ["\u2581// \u2581shutdown \u2581shut s \u2581down \u2581the \u2581message \u2581exchange , \u2581removing \u2581it \u2581from \u2581the \u2581message \u2581// \u2581exchange \u2581 set \u2581so \u2581that \u2581it \u2581cannot \u2581receive \u2581more \u2581messages \u2581from \u2581the \u2581peer . \u2581The"], "bleu": 0.03628476107997434, "rouge_l": 0.22101449275362317}
{"id": 2741, "predictions": ["\u2581// \u2581Parse Commit \u2581parses \u2581a \u2581 Commit \u2581and \u2581returns \u2581a \u2581 Commit ."], "references": ["\u2581// \u2581Parse Commit \u2581takes \u2581an \u2581argument \u2581of \u2581the \u2581 form \u2581\" repo [@ branch - or - commit ] \" \u2581and \u2581// \u2581returns \u2581the \u2581corresponding \u2581* pfs . Commit ."], "bleu": 0.06327734388841769, "rouge_l": 0.3473309608540925}
{"id": 2500, "predictions": ["\u2581// \u2581 queryParam \u2581returns \u2581the \u2581 URL \u2581for \u2581the \u2581given \u2581request \u2581 key"], "references": ["\u2581// \u2581Extract \u2581the \u2581given \u2581query \u2581parameter \u2581directly \u2581from \u2581the \u2581 URL , \u2581never \u2581from \u2581an \u2581// \u2581encoded \u2581 body ."], "bleu": 0.13259672232669711, "rouge_l": 0.29186602870813394}
{"id": 2194, "predictions": ["\u2581// \u2581Set Project \u2581sets \u2581the \u2581project \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Set Project \u2581sets \u2581the \u2581project \u2581quota \u2581 ID \u2581for \u2581the \u2581given \u2581 path"], "bleu": 0.5828233954152654, "rouge_l": 0.7857142857142857}
{"id": 2238, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 font \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Write \u2581be have s \u2581like \u2581io . Writer . Write \u2581but \u2581will \u2581retry \u2581on \u2581 EA GA IN"], "bleu": 0.10352367155021043, "rouge_l": 0.24522613065326637}
{"id": 2829, "predictions": ["\u2581// \u2581Get Tag Reader \u2581returns \u2581a \u2581 ReadCloser \u2581for \u2581the \u2581specified \u2581tag"], "references": ["\u2581// \u2581Get Tag Reader \u2581returns \u2581a \u2581reader \u2581for \u2581an \u2581object \u2581in \u2581object \u2581store \u2581by \u2581tag ."], "bleu": 0.3588903580169846, "rouge_l": 0.5570776255707762}
{"id": 3584, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581peer ' s \u2581 Peer ."], "references": ["\u2581// \u2581Get \u2581returns \u2581a \u2581peer \u2581from \u2581the \u2581peer \u2581list , \u2581or \u2581nil \u2581if \u2581 none \u2581can \u2581be \u2581found , \u2581// \u2581will \u2581avoid \u2581previously \u2581selected \u2581peers \u2581if \u2581possible ."], "bleu": 0.04956026623004689, "rouge_l": 0.3394276629570747}
{"id": 2879, "predictions": ["\u2581// \u2581delete Dir \u2581deletes \u2581a \u2581directory \u2581from \u2581the \u2581 path ."], "references": ["\u2581// \u2581delete Dir \u2581deletes \u2581a \u2581directory \u2581and \u2581all \u2581the \u2581 children \u2581under \u2581it"], "bleu": 0.4758015944333653, "rouge_l": 0.6567967698519516}
{"id": 2702, "predictions": ["\u2581// \u2581Add Span To Any Existing \u2581adds \u2581a \u2581new \u2581 span \u2581into \u2581the \u2581 span ."], "references": ["\u2581// \u2581Add Span To Any Existing \u2581checks \u2581' ctx ' \u2581for \u2581 Ja e ger \u2581 tracing \u2581information , \u2581and \u2581if \u2581// \u2581 tracing \u2581metadata \u2581is \u2581present , \u2581it \u2581generates"], "bleu": 0.1545792577209286, "rouge_l": 0.32972972972972975}
{"id": 3854, "predictions": ["\u2581// \u2581handle Ping Req Req \u2581handles \u2581a \u2581 ping \u2581request ."], "references": ["\u2581// \u2581handle Ping Req \u2581respond s \u2581to \u2581the \u2581 ping Req \u2581message \u2581with \u2581a \u2581 ping Res ."], "bleu": 0.23726680569473446, "rouge_l": 0.5947995666305526}
{"id": 2675, "predictions": ["\u2581// \u2581 net . Listen \u2581for \u2581a \u2581unix \u2581socket ."], "references": ["\u2581// \u2581 Bind \u2581to \u2581the \u2581given \u2581unix \u2581socket \u2581 path ."], "bleu": 0.19756380535471652, "rouge_l": 0.47213622291021673}
{"id": 2361, "predictions": ["\u2581// \u2581 StoragePool Node Join \u2581is \u2581used \u2581to \u2581 remove \u2581a \u2581 join \u2581node ."], "references": ["\u2581// \u2581 StoragePool Node Join \u2581adds \u2581a \u2581new \u2581entry \u2581in \u2581the \u2581storage _ pools _ nodes \u2581 table . \u2581// \u2581// \u2581It \u2581should \u2581only \u2581be \u2581used \u2581when \u2581a \u2581new \u2581node"], "bleu": 0.12897954619115953, "rouge_l": 0.3353951890034364}
{"id": 2837, "predictions": ["\u2581// \u2581Get FileReader \u2581returns \u2581a \u2581reader \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Get FileReader \u2581returns \u2581a \u2581reader \u2581for \u2581the \u2581 contents \u2581of \u2581a \u2581file \u2581at \u2581a \u2581specific \u2581 Commit . \u2581// \u2581offset \u2581specifies \u2581a \u2581number \u2581of \u2581bytes \u2581that \u2581should \u2581be \u2581skipped"], "bleu": 0.15200642564181127, "rouge_l": 0.44202898550724634}
{"id": 2736, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581instance ."], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581worker \u2581client \u2581for \u2581the \u2581worker \u2581at \u2581the \u2581 IP \u2581address \u2581passed \u2581in ."], "bleu": 0.22294278828209638, "rouge_l": 0.47550111358574615}
{"id": 2957, "predictions": ["\u2581// \u2581 List Job \u2581 - \u2581 List Job \u2581lists \u2581 api ."], "references": ["\u2581// \u2581 List Job \u2581returns \u2581 info \u2581about \u2581all \u2581jobs . \u2581// \u2581If \u2581 pipelineName \u2581is \u2581non \u2581 empty \u2581then \u2581only \u2581jobs \u2581that \u2581were \u2581started \u2581by \u2581the \u2581named \u2581pipeline \u2581will"], "bleu": 0.08327766790020474, "rouge_l": 0.30391459074733096}
{"id": 3590, "predictions": ["\u2581// \u2581on Peer Change \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581peer ' s \u2581 set \u2581of \u2581 Peer Change \u2581// \u2581and \u2581 increments \u2581the \u2581 set \u2581of \u2581 active \u2581peers"], "references": ["\u2581// \u2581on Peer Change \u2581is \u2581called \u2581when \u2581there \u2581is \u2581a \u2581change \u2581that \u2581may \u2581cause \u2581the \u2581peer ' s \u2581score \u2581to \u2581change . \u2581// \u2581The \u2581new \u2581score \u2581is \u2581calculated , \u2581and"], "bleu": 0.239773620377752, "rouge_l": 0.3666666666666667}
{"id": 4069, "predictions": ["\u2581// \u2581 New Filtered Shared Informer Factory \u2581constructs \u2581a \u2581new \u2581 Shared Informer Factory ."], "references": ["\u2581// \u2581 New Filtered Shared Informer Factory \u2581constructs \u2581a \u2581new \u2581instance \u2581of \u2581shared Informer Factory . \u2581// \u2581 Lister s \u2581obtained \u2581via \u2581 this \u2581 Shared Informer Factory \u2581will \u2581be"], "bleu": 0.31736045062491897, "rouge_l": 0.5869415807560138}
{"id": 2720, "predictions": ["\u2581// \u2581new Logging Pipe \u2581creates \u2581a \u2581new \u2581 pipe \u2581that \u2581will \u2581 call \u2581the \u2581 pipe \u2581to \u2581 call \u2581to \u2581// \u2581the \u2581server ."], "references": ["\u2581// \u2581new Logging Pipe \u2581initializes \u2581a \u2581logging Pipe"], "bleu": 0.1475758119043186, "rouge_l": 0.34346846846846846}
{"id": 4072, "predictions": ["\u2581// \u2581Create \u2581creates \u2581a \u2581plan ."], "references": ["\u2581// \u2581Create \u2581implements \u2581Create \u2581method \u2581of \u2581 Plan Service \u2581interface"], "bleu": 0.14925824694560996, "rouge_l": 0.23921568627450981}
{"id": 3516, "predictions": ["\u2581// \u2581 NewString \u2581returns \u2581a \u2581string \u2581representing \u2581the \u2581 slice \u2581of \u2581strings ."], "references": ["\u2581// \u2581 NewString \u2581copies \u2581a \u2581 byte \u2581 slice \u2581into \u2581the \u2581aren a \u2581and \u2581returns \u2581it \u2581as \u2581a \u2581string . \u2581// \u2581If \u2581the \u2581aren a \u2581is \u2581full , \u2581it \u2581returns"], "bleu": 0.07034986821781213, "rouge_l": 0.30391459074733096}
{"id": 3167, "predictions": ["\u2581// \u2581 CombinedOutput \u2581returns \u2581the \u2581 stdout \u2581and \u2581stderr , \u2581and \u2581returns \u2581the \u2581error ."], "references": ["\u2581// \u2581 CombinedOutput \u2581runs \u2581the \u2581command \u2581and \u2581returns \u2581its \u2581combined \u2581standard \u2581// \u2581output \u2581and \u2581standard \u2581error ."], "bleu": 0.19143591202259494, "rouge_l": 0.4944275582573455}
{"id": 2823, "predictions": ["\u2581// \u2581 GetObject Reader \u2581returns \u2581a \u2581 ReadCloser \u2581from \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 GetObject Reader \u2581returns \u2581a \u2581reader \u2581for \u2581an \u2581object \u2581in \u2581object \u2581store \u2581by \u2581hash ."], "bleu": 0.3370355199851954, "rouge_l": 0.4178082191780822}
{"id": 2669, "predictions": ["\u2581// \u2581 NetworkInterface Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581 IP \u2581address"], "references": ["\u2581// \u2581 NetworkInterface Address \u2581returns \u2581the \u2581first \u2581non - loopback \u2581address \u2581of \u2581any \u2581of \u2581the \u2581// \u2581system \u2581network \u2581interfaces . \u2581// \u2581// \u2581Return \u2581the \u2581 empty \u2581string \u2581if \u2581 none"], "bleu": 0.13004547755725981, "rouge_l": 0.44202898550724634}
{"id": 3742, "predictions": ["\u2581// \u2581 Send Imports \u2581sends \u2581a \u2581response \u2581to \u2581the \u2581 inbound \u2581 span ."], "references": ["\u2581// \u2581 Send SystemError \u2581returns \u2581a \u2581system \u2581error \u2581response \u2581to \u2581the \u2581peer . \u2581The \u2581 call \u2581is \u2581considered \u2581// \u2581complete \u2581after \u2581 this \u2581method \u2581is \u2581called , \u2581and \u2581no \u2581further"], "bleu": 0.0849568618577077, "rouge_l": 0.3839160839160839}
{"id": 2937, "predictions": ["\u2581// \u2581 Upsert \u2581 upsert s \u2581a \u2581 key \u2581into \u2581the \u2581underlying \u2581 Writer ."], "references": ["\u2581// \u2581 Upsert \u2581is \u2581like \u2581 Update \u2581but \u2581' key ' \u2581is \u2581not \u2581required \u2581to \u2581be \u2581present"], "bleu": 0.1482856198259077, "rouge_l": 0.3090172239108409}
{"id": 4023, "predictions": ["\u2581// \u2581 Errorf \u2581logs \u2581a \u2581message \u2581with \u2581the \u2581given \u2581 format ."], "references": ["\u2581// \u2581 Errorf \u2581writes \u2581the \u2581formatted \u2581string \u2581to \u2581the \u2581 Target \u2581// \u2581logger ."], "bleu": 0.18827843861792215, "rouge_l": 0.45522388059701485}
{"id": 3735, "predictions": ["\u2581// \u2581Ensure Empty \u2581is \u2581used \u2581to \u2581 remove \u2581a \u2581 key \u2581from \u2581the \u2581 data \u2581file ."], "references": ["\u2581// \u2581Ensure Empty \u2581ensures \u2581that \u2581the \u2581specified \u2581reader \u2581is \u2581 empty . \u2581If \u2581the \u2581reader \u2581is \u2581// \u2581not \u2581 empty , \u2581it \u2581returns \u2581an \u2581error \u2581with \u2581the \u2581specified \u2581stage \u2581in"], "bleu": 0.07664921791559116, "rouge_l": 0.2837209302325582}
{"id": 2944, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 key \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581Get \u2581gets \u2581a \u2581 key ' s \u2581value \u2581by \u2581returning \u2581an \u2581io . ReadCloser \u2581that \u2581should \u2581be \u2581closed \u2581when \u2581done ."], "bleu": 0.06576327798794093, "rouge_l": 0.2927063339731286}
{"id": 2658, "predictions": ["\u2581// \u2581 Transaction \u2581returns \u2581the \u2581transaction \u2581 data \u2581for \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Transaction \u2581executes \u2581the \u2581given \u2581function \u2581within \u2581a \u2581database \u2581transaction ."], "bleu": 0.23901088824528133, "rouge_l": 0.5}
{"id": 3554, "predictions": ["\u2581// \u2581validate Single Topic \u2581checks \u2581if \u2581a \u2581topic \u2581is \u2581 throttled ."], "references": ["\u2581// \u2581fast \u2581 path \u2581for \u2581single \u2581topic \u2581validation \u2581that \u2581avoids \u2581the \u2581extra \u2581goroutine"], "bleu": 0.11368272367804307, "rouge_l": 0.15885416666666669}
{"id": 2237, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 font \u2581from \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 Read \u2581be have s \u2581like \u2581io . Reader . Read \u2581but \u2581will \u2581retry \u2581on \u2581 EA GA IN"], "bleu": 0.10987949372268634, "rouge_l": 0.23921568627450981}
{"id": 3104, "predictions": ["\u2581// \u2581 Branches \u2581returns \u2581a \u2581new \u2581 set \u2581of \u2581 keys \u2581for \u2581the \u2581given \u2581etcd \u2581etcd ."], "references": ["\u2581// \u2581 Branches \u2581returns \u2581a \u2581collection \u2581of \u2581branches"], "bleu": 0.2749977595322415, "rouge_l": 0.5133239831697054}
{"id": 3515, "predictions": ["\u2581// \u2581 NewString Are n a \u2581returns \u2581a \u2581new \u2581String Are n a \u2581with \u2581the \u2581given \u2581 size ."], "references": ["\u2581// \u2581 NewString Are n a \u2581creates \u2581an \u2581aren a \u2581of \u2581the \u2581specified \u2581 size ."], "bleu": 0.3751840463233443, "rouge_l": 0.6384395813510941}
{"id": 3196, "predictions": ["\u2581// \u2581stats \u2581returns \u2581the \u2581 script \u2581of \u2581the \u2581 Edit Script ."], "references": ["\u2581// \u2581stats \u2581returns \u2581a \u2581histogram \u2581of \u2581the \u2581number \u2581of \u2581each \u2581 type \u2581of \u2581 edit \u2581operation ."], "bleu": 0.16778292801990535, "rouge_l": 0.5350877192982455}
{"id": 2841, "predictions": ["\u2581// \u2581 List File History \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 blobs \u2581in \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581 List File History \u2581returns \u2581 info \u2581about \u2581all \u2581files \u2581and \u2581their \u2581 history \u2581in \u2581a \u2581 Commit \u2581under \u2581 path ."], "bleu": 0.2629220746928399, "rouge_l": 0.48683160415003984}
{"id": 2644, "predictions": ["\u2581// \u2581 Node Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581node \u2581 this \u2581method \u2581is \u2581invoked \u2581on ."], "bleu": 0.47903119498301816, "rouge_l": 0.6877113866967306}
{"id": 3839, "predictions": ["\u2581// \u2581 Call \u2581returns \u2581a \u2581 byte \u2581 slice \u2581of \u2581the \u2581given \u2581 Channel Call \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 name ."], "references": ["\u2581// \u2581 Call \u2581makes \u2581a \u2581 call \u2581to \u2581the \u2581given \u2581 hostPort \u2581with \u2581the \u2581given \u2581arguments \u2581and \u2581returns \u2581the \u2581response \u2581args ."], "bleu": 0.19940445989088915, "rouge_l": 0.569683908045977}
{"id": 3772, "predictions": ["\u2581// \u2581delete Exchange \u2581 set \u2581the \u2581 Exchange \u2581 set \u2581of \u2581the \u2581message \u2581 set ."], "references": ["\u2581// \u2581delete Exchange \u2581will \u2581delete \u2581msg ID , \u2581and \u2581return \u2581whether \u2581it \u2581was \u2581found \u2581or \u2581whether \u2581it \u2581was \u2581// \u2581timed \u2581out . \u2581This \u2581method \u2581must \u2581be \u2581called \u2581with \u2581the \u2581lock"], "bleu": 0.06604970828252754, "rouge_l": 0.16486486486486487}
{"id": 2643, "predictions": ["\u2581// \u2581 NodeName \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581node ."], "references": ["\u2581// \u2581 NodeName \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581node \u2581 this \u2581method \u2581is \u2581invoked \u2581on ."], "bleu": 0.5352250436289596, "rouge_l": 0.7564825253664037}
{"id": 2342, "predictions": ["\u2581// \u2581Get Cluster \u2581returns \u2581the \u2581cluster \u2581 info \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581Get Cluster \u2581returns \u2581information \u2581about \u2581a \u2581cluster \u2581// \u2581// \u2581If \u2581 this \u2581client \u2581is \u2581not \u2581 trusted , \u2581the \u2581password \u2581must \u2581be \u2581supplied"], "bleu": 0.11964691478965164, "rouge_l": 0.3668384879725086}
{"id": 3963, "predictions": ["\u2581// \u2581migrate Grpc Compiler s \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581checks \u2581the \u2581 config \u2581// \u2581 Kind \u2581if \u2581it \u2581is \u2581 set \u2581to \u2581the \u2581 config ."], "references": ["\u2581// \u2581migrate Grpc Compiler s \u2581converts \u2581\" go _ grpc _ library \" \u2581rules \u2581into \u2581\" go _ proto _ library \" \u2581// \u2581rules \u2581with \u2581a \u2581\" compiler s \""], "bleu": 0.15860467691039148, "rouge_l": 0.20561797752808988}
{"id": 2280, "predictions": ["\u2581// \u2581device Exists In Devices Folder \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581device \u2581 name \u2581// \u2581for \u2581a \u2581given \u2581prefix ."], "references": ["\u2581// \u2581Check \u2581if \u2581the \u2581unix \u2581device \u2581already \u2581 exists ."], "bleu": 0.07645949399477267, "rouge_l": 0.3446327683615819}
{"id": 2897, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 key \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Next \u2581gets \u2581the \u2581next \u2581 key , \u2581value \u2581pair ."], "bleu": 0.3661926362999429, "rouge_l": 0.6446499339498017}
{"id": 2551, "predictions": ["\u2581// \u2581 Forwarded Response If Container Is Remote \u2581returns \u2581a \u2581 Response \u2581that \u2581will \u2581 add \u2581the \u2581 container \u2581// \u2581to \u2581the \u2581 container ' s \u2581 container ."], "references": ["\u2581// \u2581 Forwarded Response If Container Is Remote \u2581 redirects \u2581a \u2581request \u2581to \u2581the \u2581node \u2581running \u2581// \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 name . \u2581If \u2581the \u2581 container"], "bleu": 0.37381193892166703, "rouge_l": 0.5407202216066481}
{"id": 3797, "predictions": ["\u2581// \u2581 Introspect State \u2581returns \u2581a \u2581 Re base State \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 data \u2581of \u2581the \u2581layer ."], "references": ["\u2581// \u2581 Introspect State \u2581returns \u2581the \u2581runtime \u2581state \u2581for \u2581 this \u2581re layer ."], "bleu": 0.1892240568795935, "rouge_l": 0.42287694974003465}
{"id": 2505, "predictions": ["\u2581// \u2581 Operation Nodes \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581nodes \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Operation Nodes \u2581returns \u2581a \u2581list \u2581of \u2581nodes \u2581that \u2581have \u2581running \u2581operations"], "bleu": 0.5266403878479265, "rouge_l": 0.6512455516014234}
{"id": 3492, "predictions": ["\u2581// \u2581 List \u2581returns \u2581all \u2581 L s Link \u2581objects \u2581for \u2581the \u2581 Shell ."], "references": ["\u2581// \u2581 List \u2581entries \u2581at \u2581the \u2581given \u2581 path"], "bleu": 0.16943571815930883, "rouge_l": 0.4363376251788269}
{"id": 3107, "predictions": ["\u2581// \u2581 New Node \u2581creates \u2581a \u2581new \u2581node \u2581with \u2581the \u2581given \u2581 id \u2581and \u2581 children ."], "references": ["\u2581// \u2581 New Node \u2581adds \u2581a \u2581node \u2581to \u2581 d ."], "bleu": 0.23287896954139942, "rouge_l": 0.5943970767356882}
{"id": 2566, "predictions": ["\u2581// \u2581 Raft Node First \u2581returns \u2581the \u2581first \u2581node \u2581in \u2581the \u2581node ' s \u2581 raft \u2581node ."], "references": ["\u2581// \u2581 Raft Node First \u2581adds \u2581a \u2581the \u2581first \u2581node \u2581of \u2581the \u2581cluster . \u2581It \u2581ensures \u2581that \u2581the \u2581// \u2581database \u2581 ID \u2581is \u2581 1, \u2581to \u2581match \u2581the \u2581server \u2581"], "bleu": 0.1751516484878038, "rouge_l": 0.3986928104575163}
{"id": 2778, "predictions": ["\u2581// \u2581 Retry Notify \u2581creates \u2581a \u2581new \u2581operation \u2581on \u2581the \u2581operation ."], "references": ["\u2581// \u2581 Retry Notify \u2581calls \u2581 notify \u2581function \u2581with \u2581the \u2581error \u2581and \u2581wait \u2581duration \u2581// \u2581for \u2581each \u2581failed \u2581attempt \u2581before \u2581 sleep ."], "bleu": 0.12577511540218925, "rouge_l": 0.324468085106383}
{"id": 2606, "predictions": ["\u2581// \u2581 Delete StoragePool \u2581deletes \u2581the \u2581 name \u2581of \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Delete StoragePool \u2581deletes \u2581a \u2581storage \u2581pool"], "bleu": 0.3498761149110956, "rouge_l": 0.4975530179445351}
{"id": 3820, "predictions": ["\u2581// \u2581 Inherited Methods \u2581returns \u2581the \u2581list \u2581of \u2581methods \u2581for \u2581the \u2581service ."], "references": ["\u2581// \u2581 Inherited Methods \u2581returns \u2581names \u2581for \u2581inherited \u2581methods \u2581on \u2581 this \u2581service ."], "bleu": 0.38526940878504345, "rouge_l": 0.5886610373944512}
{"id": 2347, "predictions": ["\u2581// \u2581 Rename Cluster Member \u2581removes \u2581the \u2581member \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Rename Cluster Member \u2581changes \u2581the \u2581 name \u2581of \u2581an \u2581existing \u2581member"], "bleu": 0.38750553682729766, "rouge_l": 0.5559895833333334}
{"id": 3918, "predictions": ["\u2581// \u2581Set Attr \u2581sets \u2581the \u2581attribute \u2581of \u2581the \u2581 Rule ."], "references": ["\u2581// \u2581Set Attr \u2581adds \u2581or \u2581replaces \u2581the \u2581named \u2581attribute \u2581with \u2581an \u2581expression \u2581produced \u2581// \u2581by \u2581 Expr From Value ."], "bleu": 0.1112434246798324, "rouge_l": 0.42914572864321615}
{"id": 2213, "predictions": ["\u2581// \u2581 Proto Recv \u2581reads \u2581a \u2581 protobuf \u2581message \u2581from \u2581the \u2581websocket ."], "references": ["\u2581// \u2581 Proto Recv \u2581gets \u2581a \u2581 protobuf \u2581message \u2581from \u2581a \u2581websocket"], "bleu": 0.5445178846139404, "rouge_l": 0.8058124174372522}
{"id": 3596, "predictions": ["\u2581// \u2581 add Connection \u2581adds \u2581a \u2581connection \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581 add Connection \u2581adds \u2581an \u2581 active \u2581connection \u2581to \u2581the \u2581peer ' s \u2581connection \u2581list . \u2581// \u2581If \u2581a \u2581connection \u2581is \u2581not \u2581 active , \u2581returns \u2581 ErrInvalid ConnectionState"], "bleu": 0.12149534118004582, "rouge_l": 0.45018450184501846}
{"id": 2640, "predictions": ["\u2581// \u2581 Node By Address \u2581returns \u2581the \u2581node ' s \u2581address \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node By Address \u2581returns \u2581the \u2581node \u2581with \u2581the \u2581given \u2581network \u2581address ."], "bleu": 0.5512003357447272, "rouge_l": 0.6939704209328782}
{"id": 2212, "predictions": ["\u2581// \u2581Get Image Alias Names \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581the \u2581 Image Alias \u2581objects"], "references": ["\u2581// \u2581Get Image Alias Names \u2581returns \u2581the \u2581list \u2581of \u2581available \u2581 alias \u2581names"], "bleu": 0.479548279896769, "rouge_l": 0.6512455516014234}
{"id": 3966, "predictions": ["\u2581// \u2581 remove Legacy Ga z \u2581removes \u2581 remove \u2581rules \u2581from \u2581the \u2581 config ."], "references": ["\u2581// \u2581 remove Legacy Ga z elle \u2581removes \u2581 loads \u2581of \u2581the \u2581\" gaze ll e \" \u2581macro \u2581from \u2581// \u2581@ io _ baz el _ rules _ go //"], "bleu": 0.15940980880117883, "rouge_l": 0.37731958762886597}
{"id": 2535, "predictions": ["\u2581// \u2581 dot Prefix Match \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581prefix \u2581matches \u2581the \u2581given \u2581prefix ."], "references": ["\u2581// \u2581This \u2581seems \u2581a \u2581little \u2581 excess ive ."], "bleu": 0.09147827112247602, "rouge_l": 0.2527624309392265}
{"id": 3327, "predictions": ["\u2581// \u2581lock Path \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581of \u2581the \u2581 path ."], "references": ["\u2581// \u2581lock Path \u2581obtain s \u2581the \u2581 path Lock \u2581for \u2581 path . \u2581// \u2581The \u2581caller \u2581must \u2581 call \u2581 unlock Path \u2581 eventually ."], "bleu": 0.17127435857614975, "rouge_l": 0.4792857142857143}
{"id": 2689, "predictions": ["\u2581// \u2581 Main RBD Snapshot Delete \u2581deletes \u2581a \u2581virtual \u2581 RBD \u2581snapshot"], "references": ["\u2581// \u2581 ceph RBD Snapshot Delete \u2581deletes \u2581an \u2581 RBD \u2581snapshot \u2581// \u2581This \u2581requires \u2581that \u2581the \u2581snapshot \u2581does \u2581not \u2581have \u2581any \u2581clone s \u2581and \u2581is \u2581 unmapped \u2581and \u2581// \u2581un"], "bleu": 0.0948365972451625, "rouge_l": 0.3978260869565217}
{"id": 2642, "predictions": ["\u2581// \u2581 Node ByName \u2581returns \u2581the \u2581node \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Node ByName \u2581returns \u2581the \u2581node \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 2641, "predictions": ["\u2581// \u2581 Node Pending By Address \u2581returns \u2581the \u2581node \u2581 id \u2581of \u2581the \u2581given \u2581address ."], "references": ["\u2581// \u2581 Node Pending By Address \u2581returns \u2581the \u2581pending \u2581node \u2581with \u2581the \u2581given \u2581network \u2581address ."], "bleu": 0.5664313497325814, "rouge_l": 0.8125000000000001}
{"id": 2193, "predictions": ["\u2581// \u2581Get Project \u2581returns \u2581the \u2581project \u2581 path \u2581of \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Get Project \u2581returns \u2581the \u2581project \u2581quota \u2581 ID \u2581for \u2581the \u2581given \u2581 path"], "bleu": 0.5828233954152654, "rouge_l": 0.7857142857142857}
{"id": 3780, "predictions": ["\u2581// \u2581 Write Out \u2581writes \u2581the \u2581 Frame \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Write Out \u2581writes \u2581the \u2581frame \u2581to \u2581the \u2581given \u2581io . Writer"], "bleu": 0.49171276315924334, "rouge_l": 0.71484375}
{"id": 2805, "predictions": ["\u2581// \u2581 List Commit \u2581returns \u2581all \u2581 repositories"], "references": ["\u2581// \u2581 List Commit \u2581lists \u2581commits . \u2581// \u2581If \u2581only \u2581` repo ` \u2581is \u2581given , \u2581all \u2581commits \u2581in \u2581the \u2581repo \u2581are \u2581returned . \u2581// \u2581If \u2581` to ` \u2581is"], "bleu": 0.029863131804590423, "rouge_l": 0.23828125}
{"id": 3171, "predictions": ["\u2581// \u2581 Input Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581input \u2581input ."], "references": ["\u2581// \u2581 Input Name \u2581computes \u2581the \u2581 name \u2581of \u2581an \u2581 Input ."], "bleu": 0.45723134461864345, "rouge_l": 0.6923076923076923}
{"id": 2816, "predictions": ["\u2581// \u2581 Flush Commit All \u2581 flush es \u2581all \u2581 active \u2581 repositories"], "references": ["\u2581// \u2581 Flush Commit All \u2581returns \u2581commits \u2581that \u2581have \u2581the \u2581specified \u2581` commits ` \u2581as \u2581// \u2581 provenance . \u2581Note \u2581that \u2581it \u2581can \u2581block \u2581if \u2581jobs \u2581have \u2581not \u2581successfully \u2581//"], "bleu": 0.09833937403933411, "rouge_l": 0.26049822064056943}
{"id": 3619, "predictions": ["\u2581// \u2581 add Connection \u2581adds \u2581a \u2581connection \u2581to \u2581the \u2581channel ."], "references": ["\u2581// \u2581 add Connection \u2581adds \u2581the \u2581connection \u2581to \u2581the \u2581channel ' s \u2581list \u2581of \u2581connection \u2581// \u2581if \u2581the \u2581channel \u2581is \u2581in \u2581a \u2581valid \u2581state \u2581to \u2581accept \u2581 this \u2581connection ."], "bleu": 0.11796997688737236, "rouge_l": 0.45018450184501846}
{"id": 3088, "predictions": ["\u2581// \u2581 Levenshtein n ant On Input \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 slice \u2581of \u2581 \u2581commits \u2581are \u2581// \u2581in \u2581the \u2581 slice \u2581of \u2581 layers ."], "references": ["\u2581// \u2581 this \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581check \u2581if \u2581the \u2581given \u2581 provenance \u2581has \u2581 provenance \u2581on \u2581an \u2581input \u2581branch"], "bleu": 0.1531024544118244, "rouge_l": 0.2910702113156101}
{"id": 3776, "predictions": ["\u2581// \u2581copy Exchange s \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 set \u2581of \u2581 exchanges ."], "references": ["\u2581// \u2581copy Exchange s \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 exchanges \u2581if \u2581the \u2581exchange \u2581is \u2581 active . \u2581// \u2581The \u2581caller \u2581must \u2581lock \u2581the \u2581 mex set ."], "bleu": 0.3035602499526881, "rouge_l": 0.5292841648590022}
{"id": 3531, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581JWT \u2581middleware"], "references": ["\u2581// \u2581 New \u2581constructs \u2581a \u2581new \u2581 Secure \u2581instance \u2581with \u2581supplied \u2581options ."], "bleu": 0.18999003005410345, "rouge_l": 0.45658682634730546}
{"id": 3479, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Error \u2581method \u2581return \u2581string \u2581representation \u2581of \u2581 Error \u2581// \u2581It \u2581is \u2581an \u2581implementation \u2581of \u2581error \u2581interface"], "bleu": 0.16777296725721766, "rouge_l": 0.46262188515709646}
{"id": 2671, "predictions": ["\u2581// \u2581 Select Objects \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 select \u2581a \u2581query ."], "references": ["\u2581// \u2581 Select Objects \u2581executes \u2581a \u2581statement \u2581which \u2581must \u2581yield \u2581rows \u2581with \u2581a \u2581specific \u2581// \u2581columns \u2581schema . \u2581It \u2581invokes \u2581the \u2581given \u2581 Dest \u2581hook \u2581for \u2581each \u2581yield ed \u2581row"], "bleu": 0.09087426552401023, "rouge_l": 0.2986013986013986}
{"id": 2851, "predictions": ["\u2581// \u2581 put Config \u2581stores \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 put Config \u2581parses \u2581and \u2581returns \u2581the \u2581configuration \u2581 data \u2581from \u2581the \u2581storage \u2581backend ."], "bleu": 0.21655455477140687, "rouge_l": 0.5169491525423728}
{"id": 4060, "predictions": ["\u2581// \u2581Default \u2581returns \u2581the \u2581default \u2581 router \u2581for \u2581the \u2581given \u2581 OS C \u2581 format ."], "references": ["\u2581// \u2581Default \u2581returns \u2581the \u2581default \u2581 router"], "bleu": 0.41412387656655203, "rouge_l": 0.6549079754601227}
{"id": 3223, "predictions": ["\u2581// \u2581sanitize Value \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581given \u2581reflect . Value ."], "references": ["\u2581// \u2581sanitize Value \u2581converts \u2581nil \u2581interfaces \u2581of \u2581 type \u2581 T \u2581to \u2581those \u2581of \u2581 type \u2581 R , \u2581// \u2581assuming \u2581that \u2581 T \u2581is \u2581 assignable \u2581to \u2581 R"], "bleu": 0.0648446996081349, "rouge_l": 0.2559440559440559}
{"id": 3829, "predictions": ["\u2581// \u2581start \u2581is \u2581a \u2581 idle \u2581routine \u2581that \u2581 poll s \u2581the \u2581 idle \u2581connection \u2581to \u2581the \u2581// \u2581 idle \u2581connections ."], "references": ["\u2581// \u2581 Start \u2581runs \u2581the \u2581goroutine \u2581responsible \u2581for \u2581checking \u2581 idle \u2581connections ."], "bleu": 0.18331704949485053, "rouge_l": 0.41944990176817293}
{"id": 2344, "predictions": ["\u2581// \u2581Get Cluster sByType \u2581returns \u2581the \u2581list \u2581of \u2581cluster \u2581names \u2581that \u2581are \u2581 set ."], "references": ["\u2581// \u2581Get Cluster MemberNames \u2581returns \u2581the \u2581URLs \u2581of \u2581the \u2581current \u2581members \u2581in \u2581the \u2581cluster"], "bleu": 0.195647514979229, "rouge_l": 0.48577929465301484}
{"id": 2156, "predictions": ["\u2581// \u2581wait Leadership \u2581waits \u2581for \u2581the \u2581 leadership \u2581for \u2581the \u2581gateway ."], "references": ["\u2581// \u2581 Wait \u2581for \u2581the \u2581 raft \u2581node \u2581to \u2581become \u2581leader . \u2581Should \u2581only \u2581be \u2581used \u2581by \u2581 Bootstrap , \u2581// \u2581since \u2581we \u2581know \u2581that \u2581we ' ll \u2581self \u2581"], "bleu": 0.04775343112354423, "rouge_l": 0.22101449275362317}
{"id": 3670, "predictions": ["\u2581// \u2581 Defer Byte \u2581returns \u2581the \u2581 byte \u2581 slice \u2581of \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Defer Byte \u2581 reserve s \u2581space \u2581in \u2581the \u2581buffer \u2581for \u2581a \u2581single \u2581 byte , \u2581and \u2581returns \u2581a \u2581// \u2581reference \u2581that \u2581can \u2581be \u2581used \u2581to \u2581update \u2581that \u2581"], "bleu": 0.10574291356198637, "rouge_l": 0.3412587412587413}
{"id": 3737, "predictions": ["\u2581// \u2581 Advertise \u2581 advertise s \u2581the \u2581 container ' s \u2581 data \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 Advertise \u2581 advertise s \u2581with \u2581 Hyper ba h n ."], "bleu": 0.3381307292971254, "rouge_l": 0.4781634938409854}
{"id": 3548, "predictions": ["\u2581// \u2581 notify Subs \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 deliver \u2581topic"], "references": ["\u2581// \u2581 notify Subs \u2581sends \u2581a \u2581given \u2581message \u2581to \u2581all \u2581corresponding \u2581 subscribers . \u2581// \u2581 Only \u2581called \u2581from \u2581process Loop ."], "bleu": 0.23226866287229073, "rouge_l": 0.5027472527472527}
{"id": 2973, "predictions": ["\u2581// \u2581 Re run Pipeline \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581 watches \u2581the \u2581 api \u2581 api"], "references": ["\u2581// \u2581 Re run Pipeline \u2581 rerun s \u2581a \u2581pipeline \u2581over \u2581a \u2581given \u2581 set \u2581of \u2581commits . \u2581 Exclude \u2581and \u2581// \u2581include \u2581are \u2581filters \u2581that \u2581either \u2581include \u2581or \u2581exclude"], "bleu": 0.1490073107578834, "rouge_l": 0.3189542483660131}
{"id": 2960, "predictions": ["\u2581// \u2581 Flush Job All \u2581 flush es \u2581all \u2581 active \u2581 data \u2581from \u2581the \u2581 slice \u2581of \u2581 repositories"], "references": ["\u2581// \u2581 Flush Job All \u2581returns \u2581all \u2581the \u2581jobs \u2581which \u2581were \u2581triggered \u2581by \u2581commits . \u2581// \u2581If \u2581to Pipeline s \u2581is \u2581non - nil \u2581then \u2581only \u2581the \u2581jobs \u2581between \u2581commits"], "bleu": 0.14582910798207596, "rouge_l": 0.270253164556962}
{"id": 2192, "predictions": ["\u2581// \u2581 Supported \u2581checks \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581 dir"], "references": ["\u2581// \u2581 Supported \u2581check \u2581if \u2581the \u2581given \u2581 path \u2581supports \u2581project \u2581quota s"], "bleu": 0.44534504264163466, "rouge_l": 0.6153846153846153}
{"id": 4055, "predictions": ["\u2581// \u2581process Tags \u2581returns \u2581a \u2581list \u2581of \u2581tags \u2581for \u2581the \u2581tags ."], "references": ["\u2581// \u2581process Tags \u2581removes \u2581duplicates \u2581and \u2581 trim s \u2581spaces \u2581from \u2581each \u2581tag"], "bleu": 0.17792307784923767, "rouge_l": 0.23828125000000006}
{"id": 2081, "predictions": ["\u2581// \u2581 Load Cert \u2581 loads \u2581the \u2581 Cert Info \u2581from \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581 Load Cert \u2581reads \u2581the \u2581 LXD \u2581server \u2581certificate \u2581from \u2581the \u2581given \u2581var \u2581 dir . \u2581// \u2581// \u2581If \u2581a \u2581cluster \u2581certificate \u2581is \u2581found \u2581it \u2581will \u2581be \u2581loaded \u2581instead"], "bleu": 0.12956186142846438, "rouge_l": 0.41924398625429554}
{"id": 2540, "predictions": ["\u2581// \u2581 Ask String \u2581 asks \u2581the \u2581 question \u2581to \u2581be \u2581 set \u2581to \u2581 ask \u2581the \u2581 question \u2581to \u2581 enter \u2581the \u2581 question ."], "references": ["\u2581// \u2581 Ask String \u2581 asks \u2581the \u2581user \u2581to \u2581 enter \u2581a \u2581string , \u2581which \u2581optionally \u2581// \u2581 conform s \u2581to \u2581a \u2581validation \u2581function ."], "bleu": 0.3198803457323068, "rouge_l": 0.47225806451612906}
{"id": 2153, "predictions": ["\u2581// \u2581 Sync \u2581 sync s \u2581the \u2581gateway \u2581 data \u2581to \u2581disk ."], "references": ["\u2581// \u2581 Sync \u2581 dumps \u2581the \u2581 content \u2581of \u2581the \u2581database \u2581to \u2581disk . \u2581This \u2581is \u2581useful \u2581for \u2581// \u2581 inspection \u2581purposes , \u2581and \u2581it ' s \u2581also \u2581needed \u2581by"], "bleu": 0.10412945553260217, "rouge_l": 0.3907473309608541}
{"id": 2652, "predictions": ["\u2581// \u2581 Node Remove \u2581removes \u2581the \u2581node \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node Remove \u2581removes \u2581the \u2581node \u2581with \u2581the \u2581given \u2581 id ."], "bleu": 0.5406149861913043, "rouge_l": 0.7388963660834454}
{"id": 3887, "predictions": ["\u2581// \u2581 Compare \u2581returns \u2581the \u2581number \u2581of \u2581 x \u2581and \u2581 y ."], "references": ["\u2581// \u2581 Compare \u2581returns \u2581an \u2581integer \u2581 comparing \u2581two \u2581versions \u2581 l exicographical ly ."], "bleu": 0.2563595152470555, "rouge_l": 0.49364161849710986}
{"id": 3354, "predictions": ["\u2581// \u2581 getConfig Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 config \u2581file \u2581 path"], "references": ["\u2581// \u2581 getConfig Path \u2581returns \u2581the \u2581system - registries \u2581 config \u2581 path \u2581if \u2581specified . \u2581// \u2581Otherwise , \u2581system Registries Conf Path \u2581is \u2581returned ."], "bleu": 0.21519138932399787, "rouge_l": 0.4652936689549962}
{"id": 2093, "predictions": ["\u2581// \u2581 Write JSON \u2581writes \u2581the \u2581 body \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 Write JSON \u2581encodes \u2581the \u2581 body \u2581as \u2581JSON \u2581and \u2581sends \u2581it \u2581back \u2581to \u2581the \u2581client"], "bleu": 0.2872477301817216, "rouge_l": 0.5859124866595516}
{"id": 3409, "predictions": ["\u2581// \u2581new Image Destination \u2581creates \u2581a \u2581new \u2581image \u2581 Destination \u2581for \u2581the \u2581given \u2581image"], "references": ["\u2581// \u2581new Image Destination \u2581returns \u2581an \u2581 Image Destination \u2581for \u2581writing \u2581to \u2581an \u2581existing \u2581os tree ."], "bleu": 0.23613139558382978, "rouge_l": 0.4438669438669438}
{"id": 2560, "predictions": ["\u2581// \u2581 New Stmt \u2581creates \u2581a \u2581new \u2581 Stmt \u2581with \u2581the \u2581given \u2581 type \u2581and \u2581 kind ."], "references": ["\u2581// \u2581 New Stmt \u2581return \u2581a \u2581new \u2581statement \u2581 code \u2581snippet \u2581for \u2581running \u2581the \u2581given \u2581 kind \u2581of \u2581// \u2581query \u2581against \u2581the \u2581given \u2581database \u2581 entity ."], "bleu": 0.1900119911312608, "rouge_l": 0.5147679324894514}
{"id": 3020, "predictions": ["\u2581// \u2581new ST M Serializable \u2581creates \u2581a \u2581new \u2581 v 3 Txn Response ."], "references": ["\u2581// \u2581new ST M Serializable \u2581 initiate s \u2581a \u2581new \u2581serialized \u2581transaction ; \u2581reads \u2581within \u2581the \u2581// \u2581same \u2581transaction \u2581attempt \u2581to \u2581return \u2581 data \u2581from \u2581the \u2581revision \u2581of \u2581the \u2581first"], "bleu": 0.11959725930229445, "rouge_l": 0.3412587412587413}
{"id": 2508, "predictions": ["\u2581// \u2581 Operation Remove \u2581removes \u2581the \u2581 data \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Operation Remove \u2581removes \u2581the \u2581operation \u2581with \u2581the \u2581given \u2581 UUID ."], "bleu": 0.4731237874487121, "rouge_l": 0.6354166666666667}
{"id": 3563, "predictions": ["\u2581// \u2581Register Topic Validator \u2581registers \u2581a \u2581topic \u2581 validator \u2581for \u2581a \u2581topic"], "references": ["\u2581// \u2581Register Topic Validator \u2581registers \u2581a \u2581 validator \u2581for \u2581topic ."], "bleu": 0.5923033072023248, "rouge_l": 0.8764367816091955}
{"id": 2810, "predictions": ["\u2581// \u2581 List Branch \u2581returns \u2581a \u2581list \u2581of \u2581 repositories \u2581for \u2581the \u2581given \u2581repository"], "references": ["\u2581// \u2581 List Branch \u2581lists \u2581the \u2581 active \u2581branches \u2581on \u2581a \u2581 Repo ."], "bleu": 0.27668736912821895, "rouge_l": 0.42857142857142855}
{"id": 3044, "predictions": ["\u2581// \u2581 Write Local Assets \u2581writes \u2581the \u2581 assets \u2581to \u2581the \u2581specified \u2581 path \u2581to \u2581the \u2581specified \u2581// \u2581 path ."], "references": ["\u2581// \u2581 Write Local Assets \u2581writes \u2581 assets \u2581to \u2581a \u2581local \u2581backend ."], "bleu": 0.33118227522229554, "rouge_l": 0.6143001007049346}
{"id": 2840, "predictions": ["\u2581// \u2581 List File \u2581returns \u2581all \u2581 blobs \u2581in \u2581the \u2581given \u2581repository"], "references": ["\u2581// \u2581 List File \u2581returns \u2581 info \u2581about \u2581all \u2581files \u2581in \u2581a \u2581 Commit \u2581under \u2581 path ."], "bleu": 0.25545939430418896, "rouge_l": 0.45042194092827004}
{"id": 3150, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 empty \u2581string"], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 uuid ."], "bleu": 0.7598356856515925, "rouge_l": 0.7777777777777778}
{"id": 3053, "predictions": ["\u2581// \u2581increment Current Interval \u2581is \u2581used \u2581to \u2581increment \u2581the \u2581current \u2581interval"], "references": ["\u2581// \u2581 Increment s \u2581the \u2581current \u2581interval \u2581by \u2581 multiply ing \u2581it \u2581with \u2581the \u2581multiplier ."], "bleu": 0.14228844094632584, "rouge_l": 0.28672150411280845}
{"id": 2144, "predictions": ["\u2581// \u2581 format SQL \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581string \u2581 SQL"], "references": ["\u2581// \u2581 Format \u2581the \u2581given \u2581 SQL \u2581statement \u2581in \u2581a \u2581human - readable \u2581way . \u2581// \u2581// \u2581 In \u2581particular \u2581make \u2581sure \u2581that \u2581each \u2581column \u2581definition \u2581in \u2581a \u2581 CREATE"], "bleu": 0.046501818916162486, "rouge_l": 0.21708185053380782}
{"id": 2146, "predictions": ["\u2581// \u2581Get Errno \u2581returns \u2581the \u2581 errno \u2581for \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581 Detect \u2581whether \u2581err \u2581is \u2581an \u2581 errno ."], "bleu": 0.15537125692760353, "rouge_l": 0.3696969696969697}
{"id": 2149, "predictions": ["\u2581// \u2581Prepare Stmts \u2581 - \u2581 Requests \u2581that \u2581the \u2581schema \u2581is \u2581 set ."], "references": ["\u2581// \u2581Prepare Stmts \u2581prepare s \u2581all \u2581registered \u2581statements \u2581and \u2581returns \u2581an \u2581index \u2581from \u2581// \u2581statement \u2581 code \u2581to \u2581prepared \u2581statement \u2581object ."], "bleu": 0.10281852670776045, "rouge_l": 0.2670753064798599}
{"id": 2454, "predictions": ["\u2581// \u2581 Container Node Project List \u2581lists \u2581all \u2581 container \u2581 data \u2581for \u2581a \u2581node ."], "references": ["\u2581// \u2581 Container Node Project List \u2581returns \u2581all \u2581 container \u2581objects \u2581on \u2581the \u2581local \u2581node \u2581within \u2581the \u2581given \u2581project ."], "bleu": 0.3490197061364492, "rouge_l": 0.5991071428571428}
{"id": 3147, "predictions": ["\u2581// \u2581 Next Create Pipeline Request \u2581builds \u2581the \u2581next \u2581pipeline \u2581request ."], "references": ["\u2581// \u2581 Next Create Pipeline Request \u2581gets \u2581the \u2581next \u2581request \u2581from \u2581the \u2581manifest \u2581reader ."], "bleu": 0.4262626090774457, "rouge_l": 0.726190476190476}
{"id": 4095, "predictions": ["\u2581// \u2581Get Pool ByName \u2581returns \u2581a \u2581pool \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Pool ByName \u2581finds \u2581a \u2581pool \u2581by \u2581 name"], "bleu": 0.3407806467081348, "rouge_l": 0.7124087591240876}
{"id": 3015, "predictions": ["\u2581// \u2581 Nil \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 kind \u2581of \u2581the \u2581object . \u2581// \u2581If \u2581the \u2581object \u2581is \u2581not \u2581nil , \u2581the \u2581 empty \u2581string \u2581is"], "references": ["\u2581// \u2581 Nil \u2581checks \u2581a \u2581value \u2581is \u2581nil ."], "bleu": 0.08928953574702554, "rouge_l": 0.34078212290502796}
{"id": 2786, "predictions": ["\u2581// \u2581 Print Datum Info \u2581writes \u2581the \u2581 Datum Info \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Print Datum Info \u2581pretty - print s \u2581file \u2581 info . \u2581// \u2581If \u2581recurse \u2581is \u2581false \u2581and \u2581directory \u2581 size \u2581is \u25810, \u2581 display \u2581\"-\" \u2581instead \u2581// \u2581If"], "bleu": 0.11910916223801053, "rouge_l": 0.2934707903780069}
{"id": 2583, "predictions": ["\u2581// \u2581 Zero Value \u2581returns \u2581the \u2581zero \u2581value \u2581of \u2581the \u2581field ."], "references": ["\u2581// \u2581 Zero Value \u2581returns \u2581the \u2581literal \u2581representing \u2581the \u2581zero \u2581value \u2581for \u2581 this \u2581field . \u2581The \u2581 type \u2581// \u2581 code \u2581of \u2581the \u2581field \u2581must \u2581be \u2581 Type Column"], "bleu": 0.15507881488746375, "rouge_l": 0.4862318840579709}
{"id": 3634, "predictions": ["\u2581// \u2581 New TCP Frame Relay \u2581creates \u2581a \u2581 TCP Frame \u2581that \u2581will \u2581 connect \u2581to \u2581the \u2581given \u2581// \u2581 slice \u2581of \u2581 TCP \u2581 data ."], "references": ["\u2581// \u2581 New TCP Frame Relay \u2581 relay s \u2581frames \u2581from \u2581one \u2581connection \u2581to \u2581another . \u2581It \u2581reads \u2581// \u2581and \u2581writes \u2581frames \u2581using \u2581the \u2581 T Channel \u2581frame \u2581function s"], "bleu": 0.212406312366245, "rouge_l": 0.34757834757834755}
{"id": 3899, "predictions": ["\u2581// \u2581 Sync Macro File \u2581is \u2581used \u2581to \u2581 sync \u2581a \u2581file \u2581from \u2581the \u2581file ."], "references": ["\u2581// \u2581 Sync Macro File \u2581 sync s \u2581the \u2581file ' s \u2581syntax \u2581tree \u2581with \u2581another \u2581file ' s . \u2581This \u2581is \u2581// \u2581useful \u2581for \u2581keeping \u2581multiple \u2581macro \u2581definitions \u2581from"], "bleu": 0.15790544615678895, "rouge_l": 0.41216216216216217}
{"id": 2356, "predictions": ["\u2581// \u2581 New Method \u2581returns \u2581a \u2581new \u2581 Method \u2581with \u2581the \u2581given \u2581 kind \u2581and \u2581 kind ."], "references": ["\u2581// \u2581 New Method \u2581return \u2581a \u2581new \u2581method \u2581 code \u2581snippet \u2581for \u2581executing \u2581a \u2581certain \u2581mapping ."], "bleu": 0.23210911117419966, "rouge_l": 0.4595103578154426}
{"id": 3399, "predictions": ["\u2581// \u2581read Tar Component \u2581reads \u2581a \u2581tar \u2581component \u2581from \u2581a \u2581file"], "references": ["\u2581// \u2581read Tar Component \u2581returns \u2581full \u2581 contents \u2581of \u2581component Path ."], "bleu": 0.30297388532167924, "rouge_l": 0.4314002828854314}
{"id": 2680, "predictions": ["\u2581// \u2581 Main OS D Pool Destroy \u2581removes \u2581the \u2581 OS D \u2581pool \u2581for \u2581the \u2581specified \u2581 balancing \u2581 balancing ."], "references": ["\u2581// \u2581 ceph OS D Pool Destroy \u2581 destroy s \u2581an \u2581 OS D \u2581pool . \u2581// \u2581 - \u2581 A \u2581 call \u2581to \u2581 ceph OS D Pool Destroy"], "bleu": 0.2037486410813801, "rouge_l": 0.45607476635514016}
{"id": 2180, "predictions": ["\u2581// \u2581scan Single Column \u2581scan s \u2581the \u2581 sql \u2581and \u2581returns \u2581the \u2581result \u2581of \u2581the \u2581 SQL \u2581statement . \u2581// \u2581If \u2581the \u2581 placeholder \u2581is \u2581not \u2581found , \u2581it \u2581will"], "references": ["\u2581// \u2581Execute \u2581the \u2581given \u2581query \u2581and \u2581ensure \u2581that \u2581it \u2581yields \u2581rows \u2581with \u2581a \u2581single \u2581column \u2581// \u2581of \u2581the \u2581given \u2581database \u2581 type . \u2581 For \u2581every \u2581row \u2581yield ed ,"], "bleu": 0.07508325052934217, "rouge_l": 0.3}
{"id": 3937, "predictions": ["\u2581// \u2581 get \u2581returns \u2581the \u2581value \u2581for \u2581the \u2581given \u2581 key . \u2581If \u2581the \u2581 key \u2581is \u2581not \u2581found , \u2581// \u2581it \u2581returns \u2581nil ."], "references": ["\u2581// \u2581 get \u2581retrieves \u2581a \u2581value \u2581associated \u2581with \u2581the \u2581given \u2581 key \u2581from \u2581the \u2581cache . \u2581ok \u2581will \u2581// \u2581be \u2581true \u2581if \u2581the \u2581 key \u2581 exists \u2581in \u2581the \u2581cache"], "bleu": 0.1968898402200347, "rouge_l": 0.429325513196481}
{"id": 3337, "predictions": ["\u2581// \u2581 getIndex \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 oci \u2581reference ."], "references": ["\u2581// \u2581 getIndex \u2581returns \u2581a \u2581pointer \u2581to \u2581the \u2581index \u2581references \u2581by \u2581 this \u2581 oci Reference . \u2581If \u2581an \u2581error \u2581occurs \u2581opening \u2581an \u2581index \u2581nil \u2581is \u2581returned \u2581together \u2581// \u2581with"], "bleu": 0.0904056203553595, "rouge_l": 0.3907473309608541}
{"id": 2214, "predictions": ["\u2581// \u2581 Proto Send \u2581sends \u2581a \u2581 TCP \u2581message \u2581to \u2581the \u2581websocket ."], "references": ["\u2581// \u2581 Proto Send \u2581sends \u2581a \u2581 protobuf \u2581message \u2581over \u2581a \u2581websocket"], "bleu": 0.5437427682227519, "rouge_l": 0.725231175693527}
{"id": 3490, "predictions": ["\u2581// \u2581 FileList \u2581returns \u2581the \u2581 Unix L L Object \u2581object \u2581of \u2581the \u2581 path"], "references": ["\u2581// \u2581 FileList \u2581entries \u2581at \u2581the \u2581given \u2581 path \u2581using \u2581the \u2581 Unix FS \u2581commands"], "bleu": 0.25336549464486463, "rouge_l": 0.4666666666666668}
{"id": 3784, "predictions": ["\u2581// \u2581Add Selected Peer \u2581adds \u2581a \u2581new \u2581 Peer \u2581to \u2581the \u2581 set \u2581of \u2581peers ."], "references": ["\u2581// \u2581Add Selected Peer \u2581adds \u2581a \u2581given \u2581peer \u2581to \u2581the \u2581 set \u2581of \u2581selected \u2581peers ."], "bleu": 0.5997820163128024, "rouge_l": 0.8125000000000001}
{"id": 2108, "predictions": ["\u2581// \u2581Get Containers \u2581returns \u2581all \u2581containers \u2581in \u2581the \u2581 container ."], "references": ["\u2581// \u2581Get Containers \u2581returns \u2581containers \u2581created \u2581by \u2581the \u2581benchmark ."], "bleu": 0.3565506208559251, "rouge_l": 0.6724409448818898}
{"id": 3840, "predictions": ["\u2581// \u2581 Call SC \u2581implements \u2581 SC . Client . Call SC"], "references": ["\u2581// \u2581 Call SC \u2581makes \u2581a \u2581 call \u2581using \u2581the \u2581given \u2581sub ca h nn el"], "bleu": 0.2168684996122159, "rouge_l": 0.3481735159817351}
{"id": 2048, "predictions": ["\u2581// \u2581query Check No Left over Cluster Cert \u2581checks \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581cluster \u2581// \u2581 path \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581Check \u2581that \u2581there \u2581is \u2581no \u2581 left - over \u2581cluster \u2581certificate \u2581in \u2581the \u2581 LXD \u2581var \u2581 dir \u2581of \u2581// \u2581 this \u2581node ."], "bleu": 0.08641446662455456, "rouge_l": 0.2846666666666667}
{"id": 2068, "predictions": ["\u2581// \u2581 GetOperation \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 GetOperation \u2581returns \u2581an \u2581 Operation \u2581entry \u2581for \u2581the \u2581provided \u2581 uuid"], "bleu": 0.299229756708663, "rouge_l": 0.5559895833333334}
{"id": 2692, "predictions": ["\u2581// \u2581 get RBD Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 RBD \u2581 data ."], "references": ["\u2581// \u2581 get RBD Size \u2581returns \u2581the \u2581 size \u2581the \u2581 RBD \u2581storage \u2581volume \u2581is \u2581supposed \u2581to \u2581be \u2581created \u2581// \u2581with"], "bleu": 0.46105747917064577, "rouge_l": 0.6332179930795847}
{"id": 3281, "predictions": ["\u2581// \u2581 Registries Conf Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the \u2581 config \u2581file"], "references": ["\u2581// \u2581 Registries Conf Path \u2581is \u2581the \u2581 path \u2581to \u2581the \u2581system - wide \u2581registry \u2581configuration \u2581file"], "bleu": 0.44897710722021167, "rouge_l": 0.6318267419962337}
{"id": 2681, "predictions": ["\u2581// \u2581 Main RBD Volume Exists \u2581creates \u2581a \u2581 GCE \u2581volume \u2581 name \u2581for \u2581the \u2581specified \u2581volume \u2581 name"], "references": ["\u2581// \u2581 ceph RBD Volume Exists \u2581checks \u2581whether \u2581a \u2581given \u2581 RBD \u2581storage \u2581volume \u2581 exists ."], "bleu": 0.1712473044894657, "rouge_l": 0.5050597976080956}
{"id": 3424, "predictions": ["\u2581// \u2581manifest Schema 1 From Components \u2581creates \u2581a \u2581schema 1 \u2581from \u2581a \u2581 set \u2581of \u2581 manifests ."], "references": ["\u2581// \u2581manifest Schema 1 From Components \u2581builds \u2581a \u2581new \u2581manifest Schema 1 \u2581from \u2581the \u2581supplied \u2581 data ."], "bleu": 0.3665882729601239, "rouge_l": 0.6111111111111113}
{"id": 3927, "predictions": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581the \u2581 label \u2581 contains \u2581the \u2581given \u2581 label ."], "references": ["\u2581// \u2581 Contains \u2581returns \u2581whether \u2581other \u2581is \u2581contained \u2581by \u2581the \u2581package \u2581of \u2581 l \u2581or \u2581a \u2581// \u2581sub - package . \u2581 Neither \u2581 label \u2581may \u2581be \u2581relative ."], "bleu": 0.12233963169959136, "rouge_l": 0.4224376731301939}
{"id": 2300, "predictions": ["\u2581// \u2581Get Certificate \u2581returns \u2581the \u2581certificate \u2581for \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581Get Certificate \u2581returns \u2581the \u2581certificate \u2581entry \u2581for \u2581the \u2581provided \u2581fingerprint"], "bleu": 0.5205510363053438, "rouge_l": 0.7011494252873562}
{"id": 3210, "predictions": ["\u2581// \u2581match Prefix \u2581returns \u2581true \u2581if \u2581the \u2581field \u2581matches \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581match Prefix \u2581reports \u2581whether \u2581any \u2581selector \u2581in \u2581the \u2581field Tree \u2581matches \u2581// \u2581the \u2581start \u2581of \u2581 path \u2581 p ."], "bleu": 0.1460040682342812, "rouge_l": 0.5515370705244123}
{"id": 2506, "predictions": ["\u2581// \u2581 Operation ByUUID \u2581gets \u2581the \u2581 role \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 Operation ByUUID \u2581returns \u2581the \u2581operation \u2581with \u2581the \u2581given \u2581 UUID ."], "bleu": 0.299229756708663, "rouge_l": 0.5559895833333334}
{"id": 2575, "predictions": ["\u2581// \u2581 Contains Fields \u2581checks \u2581if \u2581the \u2581field \u2581 contains \u2581a \u2581fields \u2581of \u2581the \u2581fields ."], "references": ["\u2581// \u2581 Contains Fields \u2581checks \u2581that \u2581the \u2581mapping \u2581 contains \u2581fields \u2581with \u2581the \u2581same \u2581 type \u2581// \u2581and \u2581 name \u2581of \u2581given \u2581ones ."], "bleu": 0.21700746391013387, "rouge_l": 0.5308544303797468}
{"id": 2255, "predictions": ["\u2581// \u2581Get Profile \u2581gets \u2581the \u2581profile \u2581from \u2581the \u2581 LXD \u2581 controller ."], "references": ["\u2581// \u2581Get Profile \u2581returns \u2581a \u2581 Profile \u2581entry \u2581for \u2581the \u2581provided \u2581 name"], "bleu": 0.2044800736021839, "rouge_l": 0.38461538461538464}
{"id": 3528, "predictions": ["\u2581// \u2581Walk Statement \u2581walk s \u2581the \u2581tree \u2581tree \u2581tree \u2581and \u2581 SQL \u2581tree ."], "references": ["\u2581// \u2581Walk Statement \u2581is \u2581the \u2581 top \u2581level \u2581walk \u2581function . \u2581// \u2581If \u2581it \u2581encounters \u2581a \u2581 Select , \u2581it \u2581 switches \u2581to \u2581a \u2581mode \u2581// \u2581where \u2581variables \u2581are \u2581"], "bleu": 0.062393275451015855, "rouge_l": 0.2559440559440559}
{"id": 2416, "predictions": ["\u2581// \u2581Keep Updated \u2581is \u2581called \u2581when \u2581a \u2581state \u2581is \u2581closed ."], "references": ["\u2581// \u2581Keep Updated \u2581is \u2581a \u2581task \u2581that \u2581 continuous ly \u2581monitor \u2581 this \u2581node ' s \u2581version \u2581to \u2581see \u2581it \u2581// \u2581it ' s \u2581out \u2581of \u2581 date \u2581with \u2581respect"], "bleu": 0.058984988443686166, "rouge_l": 0.22509225092250923}
{"id": 3377, "predictions": ["\u2581// \u2581 New Destination \u2581creates \u2581a \u2581new \u2581 Destination \u2581object"], "references": ["\u2581// \u2581 New Destination \u2581returns \u2581a \u2581tar file . Destination \u2581for \u2581the \u2581specified \u2581io . Writer ."], "bleu": 0.1895133844991882, "rouge_l": 0.42459396751740147}
{"id": 2582, "predictions": ["\u2581// \u2581 Column \u2581returns \u2581the \u2581column \u2581 name \u2581for \u2581the \u2581field ."], "references": ["\u2581// \u2581 Column \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581database \u2581column \u2581the \u2581field \u2581maps \u2581to . \u2581The \u2581 type \u2581// \u2581 code \u2581of \u2581the \u2581field \u2581must \u2581be \u2581 Type Column"], "bleu": 0.10984848946840269, "rouge_l": 0.44202898550724634}
{"id": 3604, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581 key ."], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581stored \u2581for \u2581the \u2581given \u2581 key ."], "bleu": 0.42311785416105785, "rouge_l": 0.7020460358056267}
{"id": 3236, "predictions": ["\u2581// \u2581 Inject \u2581implements \u2581 Tracer ."], "references": ["\u2581// \u2581 Inject \u2581belongs \u2581to \u2581the \u2581 Tracer \u2581interface ."], "bleu": 0.27835144474202883, "rouge_l": 0.6841121495327103}
{"id": 2850, "predictions": ["\u2581// \u2581validate Fields \u2581validates \u2581that \u2581the \u2581given \u2581 data \u2581is \u2581valid"], "references": ["\u2581// \u2581validate Fields \u2581verifies \u2581that \u2581no \u2581bad \u2581arguments \u2581were \u2581given \u2581to \u2581the \u2581request ."], "bleu": 0.18563688094442687, "rouge_l": 0.39152759948652116}
{"id": 3449, "predictions": ["\u2581// \u2581Add Weighted \u2581adds \u2581a \u2581new \u2581 IP \u2581to \u2581the \u2581 x l \u2581 o \u2581 k 2"], "references": ["\u2581// \u2581Add Weighted \u2581calculates \u2581the \u2581weighted \u2581sum \u2581of \u2581two \u2581images ."], "bleu": 0.13400825781778894, "rouge_l": 0.28841607565011823}
{"id": 2139, "predictions": ["\u2581// \u2581ensure SchemaTable Exists \u2581checks \u2581if \u2581a \u2581 table \u2581is \u2581valid \u2581or \u2581not ."], "references": ["\u2581// \u2581Ensure \u2581that \u2581the \u2581schema \u2581 exists ."], "bleu": 0.10511846841633776, "rouge_l": 0.28683385579937304}
{"id": 2747, "predictions": ["\u2581// \u2581 Writer \u2581returns \u2581a \u2581writer \u2581that \u2581writes \u2581to \u2581the \u2581given \u2581 name \u2581and \u2581 body ."], "references": ["\u2581// \u2581 Writer \u2581implements \u2581the \u2581corresponding \u2581method \u2581in \u2581the \u2581 Client \u2581interface"], "bleu": 0.1487964117124549, "rouge_l": 0.35589264877479576}
{"id": 3021, "predictions": ["\u2581// \u2581new ST M Read Committed \u2581creates \u2581a \u2581new \u2581 v 3 Txn Response ."], "references": ["\u2581// \u2581new ST M Read Committed \u2581 initiate s \u2581a \u2581new \u2581read \u2581committed \u2581transaction ."], "bleu": 0.4333207865423752, "rouge_l": 0.6}
{"id": 2241, "predictions": ["\u2581// \u2581 Cancel \u2581cancel s \u2581the \u2581cancel er ."], "references": ["\u2581// \u2581 Cancel \u2581will \u2581attempt \u2581to \u2581cancel \u2581all \u2581 ongoing \u2581operations"], "bleu": 0.22241434515868952, "rouge_l": 0.3929146537842191}
{"id": 3133, "predictions": ["\u2581// \u2581new Mini o Client V 2 \u2581creates \u2581a \u2581new \u2581 min io \u2581client ."], "references": ["\u2581// \u2581Creates \u2581a \u2581new \u2581 min io Client \u2581 S 3 V 2 \u2581structure \u2581and \u2581returns"], "bleu": 0.3352042383309152, "rouge_l": 0.38485804416403785}
{"id": 3214, "predictions": ["\u2581// \u2581 Flatten \u2581to \u2581 merge \u2581the \u2581options \u2581from \u2581the \u2581source \u2581 src \u2581into \u2581dst ."], "references": ["\u2581// \u2581flatten Options \u2581copies \u2581all \u2581options \u2581in \u2581 src \u2581to \u2581dst \u2581as \u2581a \u2581flat \u2581list . \u2581// \u2581 Only \u2581 core Options \u2581and \u2581 Options \u2581containing \u2581 core Options \u2581are"], "bleu": 0.063106717705742, "rouge_l": 0.24729729729729732}
{"id": 3159, "predictions": ["\u2581// \u2581 Write From Streaming Bytes Client \u2581writes \u2581a \u2581 Client \u2581to \u2581a \u2581stream ."], "references": ["\u2581// \u2581 Write From Streaming Bytes Client \u2581writes \u2581from \u2581the \u2581 Streaming Bytes Client \u2581to \u2581the \u2581io . Writer ."], "bleu": 0.4149763087759909, "rouge_l": 0.6684931506849316}
{"id": 3819, "predictions": ["\u2581// \u2581 Methods \u2581returns \u2581the \u2581list \u2581of \u2581methods \u2581for \u2581the \u2581service ."], "references": ["\u2581// \u2581 Methods \u2581returns \u2581the \u2581methods \u2581on \u2581 this \u2581service , \u2581not \u2581including \u2581methods \u2581from \u2581inherited \u2581services ."], "bleu": 0.25545939430418896, "rouge_l": 0.5147679324894514}
{"id": 2956, "predictions": ["\u2581// \u2581Create Job \u2581creates \u2581a \u2581new \u2581job"], "references": ["\u2581// \u2581Create Job \u2581creates \u2581and \u2581runs \u2581a \u2581job \u2581in \u2581 PP S . \u2581// \u2581This \u2581function \u2581is \u2581mostly \u2581useful \u2581internally , \u2581users \u2581should \u2581generally \u2581run \u2581work \u2581// \u2581by \u2581creating \u2581"], "bleu": 0.02103935475832658, "rouge_l": 0.29163346613545815}
{"id": 3498, "predictions": ["\u2581// \u2581 Dag Put Options \u2581creates \u2581a \u2581new \u2581 Streamer Put Settings \u2581with \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 Dag Put Options \u2581applies \u2581the \u2581given \u2581options \u2581to \u2581a \u2581 Dag Put Settings \u2581instance ."], "bleu": 0.388905561152711, "rouge_l": 0.5882352941176471}
{"id": 2158, "predictions": ["\u2581// \u2581cached Raft Nodes \u2581returns \u2581the \u2581list \u2581of \u2581 raft \u2581nodes \u2581in \u2581the \u2581 raft \u2581node ."], "references": ["\u2581// \u2581Return \u2581the \u2581addresses \u2581of \u2581the \u2581 raft \u2581nodes \u2581as \u2581stored \u2581in \u2581the \u2581node - level \u2581// \u2581database . \u2581// \u2581// \u2581These \u2581values \u2581might \u2581 leg \u2581 behind \u2581the \u2581actual"], "bleu": 0.1035684351133849, "rouge_l": 0.40531561461794013}
{"id": 3683, "predictions": ["\u2581// \u2581 write As Fit s \u2581writes \u2581the \u2581 contents \u2581of \u2581the \u2581 data \u2581to \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 write As Fit s \u2581writes \u2581as \u2581many \u2581bytes \u2581from \u2581the \u2581given \u2581 slice \u2581as \u2581 fits \u2581into \u2581the \u2581chunk"], "bleu": 0.3651171690745112, "rouge_l": 0.5238095238095238}
{"id": 2676, "predictions": ["\u2581// \u2581socket Unix Remove Stale \u2581creates \u2581a \u2581unix \u2581socket \u2581file \u2581if \u2581it \u2581is \u2581 mounted"], "references": ["\u2581// \u2581Remove \u2581any \u2581stale \u2581socket \u2581file \u2581at \u2581the \u2581given \u2581 path ."], "bleu": 0.12300686288463772, "rouge_l": 0.30235439900867406}
{"id": 2578, "predictions": ["\u2581// \u2581 Filter \u2581filters \u2581 filter \u2581field \u2581by \u2581 filter ."], "references": ["\u2581// \u2581 Filter FieldByName \u2581returns \u2581the \u2581field \u2581with \u2581the \u2581given \u2581 name \u2581if \u2581that \u2581field \u2581can \u2581be \u2581// \u2581used \u2581as \u2581query \u2581 filter , \u2581an \u2581error \u2581otherwise ."], "bleu": 0.059490364904012216, "rouge_l": 0.3803585346843336}
{"id": 2938, "predictions": ["\u2581// \u2581 get \u2581retrieves \u2581a \u2581 key \u2581from \u2581etcd ."], "references": ["\u2581// \u2581 get \u2581is \u2581an \u2581internal \u2581wrapper \u2581around \u2581etcd Client . Get \u2581that \u2581 wraps \u2581the \u2581 call \u2581in \u2581a \u2581// \u2581 trace"], "bleu": 0.07604071423846384, "rouge_l": 0.2829313543599258}
{"id": 2975, "predictions": ["\u2581// \u2581Get Datum \u2581datum \u2581returns \u2581the \u2581time \u2581of \u2581the \u2581 container ' s \u2581 status ."], "references": ["\u2581// \u2581Get Datum TotalTime \u2581 sums \u2581the \u2581timing \u2581stats \u2581from \u2581a \u2581 Datum Info"], "bleu": 0.16467029855845897, "rouge_l": 0.3373893805309734}
{"id": 2069, "predictions": ["\u2581// \u2581 GetOperation Websocket \u2581returns \u2581the \u2581websocket \u2581connection \u2581for \u2581the \u2581given \u2581 UUID ."], "references": ["\u2581// \u2581 GetOperation Websocket \u2581returns \u2581a \u2581websocket \u2581connection \u2581for \u2581the \u2581provided \u2581operation"], "bleu": 0.49202745153855076, "rouge_l": 0.7020460358056267}
{"id": 3361, "predictions": ["\u2581// \u2581 List Names \u2581returns \u2581the \u2581names \u2581of \u2581the \u2581registered \u2581 plugins ."], "references": ["\u2581// \u2581 List Names \u2581returns \u2581a \u2581list \u2581of \u2581non \u2581deprecated \u2581transport \u2581names . \u2581// \u2581 Deprecated \u2581 transports \u2581can \u2581be \u2581used , \u2581but \u2581are \u2581not \u2581presented \u2581to \u2581users ."], "bleu": 0.11610747950709288, "rouge_l": 0.35646457268078885}
{"id": 2501, "predictions": ["\u2581// \u2581new Db \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 type"], "references": ["\u2581// \u2581Return \u2581a \u2581new \u2581 db \u2581command ."], "bleu": 0.17033186037639278, "rouge_l": 0.433392539964476}
{"id": 3885, "predictions": ["\u2581// \u2581new Load Index \u2581returns \u2581a \u2581 slice \u2581of \u2581 empty \u2581string \u2581if \u2581it \u2581is \u2581not \u2581present ."], "references": ["\u2581// \u2581new Load Index \u2581returns \u2581the \u2581index \u2581in \u2581 stmts \u2581where \u2581a \u2581new \u2581load \u2581statement \u2581should \u2581// \u2581be \u2581inserted . \u2581after \u2581is \u2581a \u2581list \u2581of \u2581function \u2581names \u2581that \u2581the \u2581load"], "bleu": 0.1490073107578834, "rouge_l": 0.2790849673202615}
{"id": 3380, "predictions": ["\u2581// \u2581send Symlink \u2581 write \u2581a \u2581symlink \u2581to \u2581a \u2581file"], "references": ["\u2581// \u2581send Symlink \u2581sends \u2581a \u2581symlink \u2581into \u2581the \u2581tar \u2581stream ."], "bleu": 0.25246406216009776, "rouge_l": 0.47213622291021673}
{"id": 3974, "predictions": ["\u2581// \u2581 set Build Tags \u2581sets \u2581the \u2581tags \u2581for \u2581the \u2581 container"], "references": ["\u2581// \u2581 set Build Tags \u2581sets \u2581generic Tags \u2581by \u2581parsing \u2581as \u2581a \u2581comma \u2581separated \u2581list . \u2581An \u2581// \u2581error \u2581will \u2581be \u2581returned \u2581for \u2581tags \u2581that \u2581would n ' t \u2581be"], "bleu": 0.11175961451835317, "rouge_l": 0.30942028985507253}
{"id": 3747, "predictions": ["\u2581// \u2581root Type \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581root \u2581 type ."], "references": ["\u2581// \u2581root Type \u2581recurse s \u2581through \u2581 type defs \u2581and \u2581returns \u2581the \u2581underlying \u2581 type ."], "bleu": 0.24861072591702646, "rouge_l": 0.6093229744728079}
{"id": 2095, "predictions": ["\u2581// \u2581 Etag Check \u2581checks \u2581if \u2581the \u2581request \u2581is \u2581valid"], "references": ["\u2581// \u2581 Etag Check \u2581validates \u2581the \u2581hash \u2581of \u2581the \u2581current \u2581state \u2581with \u2581the \u2581hash \u2581// \u2581provided \u2581by \u2581the \u2581client"], "bleu": 0.14929466681989711, "rouge_l": 0.3265524625267666}
{"id": 3085, "predictions": ["\u2581// \u2581 milli Commit Prefix \u2581returns \u2581a \u2581 text \u2581 Prefix \u2581for \u2581the \u2581given \u2581commit ."], "references": ["\u2581// \u2581 scratch Commit Prefix \u2581returns \u2581an \u2581etcd \u2581prefix \u2581that ' s \u2581used \u2581to \u2581temporarily \u2581// \u2581store \u2581the \u2581state \u2581of \u2581a \u2581file \u2581in \u2581an \u2581open \u2581commit . \u2581 Once \u2581the"], "bleu": 0.08732597634122143, "rouge_l": 0.32972972972972975}
{"id": 2324, "predictions": ["\u2581// \u2581 URL Encode \u2581returns \u2581the \u2581 URL - value \u2581pair \u2581of \u2581the \u2581 path ."], "references": ["\u2581// \u2581 URL Encode \u2581encodes \u2581a \u2581 path \u2581and \u2581query \u2581parameters \u2581to \u2581a \u2581 URL ."], "bleu": 0.28175950490399515, "rouge_l": 0.4375}
{"id": 2797, "predictions": ["\u2581// \u2581 Inspect Repo \u2581returns \u2581information \u2581about \u2581a \u2581repository"], "references": ["\u2581// \u2581 Inspect Repo \u2581returns \u2581 info \u2581about \u2581a \u2581specific \u2581 Repo ."], "bleu": 0.37280198577439766, "rouge_l": 0.6161616161616162}
{"id": 2123, "predictions": ["\u2581// \u2581 Update Image Alias \u2581updates \u2581an \u2581image \u2581 alias \u2581for \u2581an \u2581image ."], "references": ["\u2581// \u2581 Update Image Alias \u2581updates \u2581the \u2581image \u2581 alias \u2581definition"], "bleu": 0.49202745153855076, "rouge_l": 0.7359249329758714}
{"id": 2320, "predictions": ["\u2581// \u2581Create Network \u2581creates \u2581a \u2581network \u2581network ."], "references": ["\u2581// \u2581Create Network \u2581defines \u2581a \u2581new \u2581network \u2581using \u2581the \u2581provided \u2581 Network \u2581struct"], "bleu": 0.17680564514930266, "rouge_l": 0.45658682634730546}
{"id": 2234, "predictions": ["\u2581// \u2581Create Project \u2581creates \u2581a \u2581project ."], "references": ["\u2581// \u2581Create Project \u2581defines \u2581a \u2581new \u2581 container \u2581project"], "bleu": 0.28751742289713444, "rouge_l": 0.6112224448897796}
{"id": 3048, "predictions": ["\u2581// \u2581 Write Microsoft Assets \u2581writes \u2581the \u2581 content \u2581to \u2581the \u2581 app"], "references": ["\u2581// \u2581 Write Microsoft Assets \u2581writes \u2581 assets \u2581to \u2581a \u2581 microsoft \u2581backend"], "bleu": 0.47275266063115623, "rouge_l": 0.6923076923076923}
{"id": 4061, "predictions": ["\u2581// \u2581 Store \u2581 loads \u2581the \u2581 app ' s \u2581 app \u2581 name \u2581and \u2581 name \u2581of \u2581the \u2581 app ."], "references": ["\u2581// \u2581 Store \u2581stores \u2581the \u2581 app \u2581 name \u2581related \u2581with \u2581the \u2581// \u2581 router \u2581 name ."], "bleu": 0.2694353370737825, "rouge_l": 0.5601001669449083}
{"id": 2946, "predictions": ["\u2581// \u2581 Clear \u2581removes \u2581all \u2581 keys \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581 Clear \u2581 clear s \u2581the \u2581cache ."], "bleu": 0.317023313852343, "rouge_l": 0.7128547579298832}
{"id": 2419, "predictions": ["\u2581// \u2581 Start Status Check \u2581starts \u2581the \u2581 status Check \u2581for \u2581the \u2581server ."], "references": ["\u2581// \u2581 Start Status Check \u2581starts \u2581a \u2581 periodic \u2581 status \u2581checker ."], "bleu": 0.4546697236991713, "rouge_l": 0.6711491442542787}
{"id": 3209, "predictions": ["\u2581// \u2581 insert \u2581adds \u2581a \u2581new \u2581 key \u2581to \u2581the \u2581 Field Tree ."], "references": ["\u2581// \u2581 insert \u2581inserts \u2581a \u2581sequence \u2581of \u2581field \u2581 accesses \u2581into \u2581the \u2581tree ."], "bleu": 0.195647514979229, "rouge_l": 0.5}
{"id": 3813, "predictions": ["\u2581// \u2581 push Peer \u2581adds \u2581a \u2581peer \u2581to \u2581the \u2581heap ."], "references": ["\u2581// \u2581 push Peer \u2581pushes \u2581the \u2581new \u2581peer \u2581into \u2581the \u2581heap ."], "bleu": 0.3987360570751107, "rouge_l": 0.6902404526166903}
{"id": 2757, "predictions": ["\u2581// \u2581 New Cache Server \u2581creates \u2581a \u2581new \u2581 Cache Server ."], "references": ["\u2581// \u2581 New Cache Server \u2581creates \u2581a \u2581new \u2581 Cache Server ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 3923, "predictions": ["\u2581// \u2581Check Internal Visibility \u2581checks \u2581if \u2581the \u2581 path \u2581is \u2581a \u2581valid \u2581 path"], "references": ["\u2581// \u2581Check Internal Visibility \u2581overrides \u2581the \u2581given \u2581 visibility \u2581if \u2581the \u2581package \u2581is \u2581// \u2581internal ."], "bleu": 0.2611938211208065, "rouge_l": 0.46112311015118784}
{"id": 2260, "predictions": ["\u2581// \u2581 Dump \u2581returns \u2581a \u2581 map \u2581of \u2581all \u2581the \u2581values \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Dump \u2581the \u2581current \u2581configuration \u2581 held \u2581by \u2581 this \u2581 Map . \u2581// \u2581// \u2581 Keys \u2581that \u2581match \u2581their \u2581default \u2581value \u2581will \u2581not \u2581be \u2581included \u2581in \u2581the \u2581"], "bleu": 0.0943665534081529, "rouge_l": 0.2885135135135135}
{"id": 3095, "predictions": ["\u2581// \u2581 Finish Report And Flush User Action \u2581 clear s \u2581the \u2581 status \u2581of \u2581the \u2581report \u2581and \u2581// \u2581 flush es \u2581the \u2581action \u2581to \u2581the \u2581 Flush User"], "references": ["\u2581// \u2581 Finish Report And Flush User Action \u2581immediately \u2581reports \u2581the \u2581metric \u2581but \u2581does \u2581// \u2581not \u2581block \u2581execution . \u2581It \u2581returns \u2581a \u2581wait \u2581function \u2581which \u2581waits \u2581or \u2581times \u2581// \u2581out"], "bleu": 0.26451302173393937, "rouge_l": 0.33795013850415506}
{"id": 3756, "predictions": ["\u2581// \u2581 Health \u2581returns \u2581a \u2581 status \u2581of \u2581the \u2581health \u2581check \u2581health \u2581check ."], "references": ["\u2581// \u2581 Health \u2581returns \u2581true \u2581as \u2581default \u2581 Health \u2581endpoint ."], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 2070, "predictions": ["\u2581// \u2581try Mount \u2581 mounts \u2581the \u2581mount \u2581 path \u2581to \u2581the \u2581specified \u2581destination"], "references": ["\u2581// \u2581 Useful \u2581function s \u2581for \u2581un reliable \u2581 backends"], "bleu": 0.1135935489027116, "rouge_l": 0.2671532846715329}
{"id": 2859, "predictions": ["\u2581// \u2581 Dump \u2581 dumps \u2581the \u2581 debug \u2581 debug \u2581 info"], "references": ["\u2581// \u2581 Dump \u2581writes \u2581 debug \u2581information \u2581from \u2581the \u2581server \u2581to \u2581 w ."], "bleu": 0.20918630991966447, "rouge_l": 0.45522388059701485}
{"id": 4084, "predictions": ["\u2581// \u2581Set Limit \u2581sets \u2581the \u2581 set \u2581of \u2581the \u2581 active \u2581 model ."], "references": ["\u2581// \u2581Set Limit \u2581 redefine s \u2581the \u2581limit \u2581of \u2581the \u2581 app . \u2581The \u2581new \u2581limit \u2581must \u2581be \u2581bigger \u2581// \u2581than \u2581or \u2581equal \u2581to \u2581the \u2581current \u2581number \u2581of \u2581units \u2581in"], "bleu": 0.08295647520702402, "rouge_l": 0.3412587412587413}
{"id": 3360, "predictions": ["\u2581// \u2581parse Docker References \u2581parses \u2581the \u2581 contents \u2581of \u2581a \u2581Docker References \u2581and \u2581returns \u2581a \u2581// \u2581reference ."], "references": ["\u2581// \u2581parse Docker References \u2581converts \u2581two \u2581reference \u2581strings \u2581into \u2581parsed \u2581entities , \u2581fail ing \u2581on \u2581any \u2581error"], "bleu": 0.1983544145418289, "rouge_l": 0.28719397363465166}
{"id": 3650, "predictions": ["\u2581// \u2581 ReadByte \u2581reads \u2581the \u2581next \u2581 byte \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 ReadByte \u2581returns \u2581the \u2581next \u2581 byte \u2581from \u2581the \u2581buffer ."], "bleu": 0.7611606003349892, "rouge_l": 0.9166666666666665}
{"id": 2377, "predictions": ["\u2581// \u2581 StoragePool Delete \u2581deletes \u2581a \u2581 thin - pool ."], "references": ["\u2581// \u2581 StoragePool Delete \u2581deletes \u2581storage \u2581pool ."], "bleu": 0.43361890903486755, "rouge_l": 0.6500888099467139}
{"id": 3410, "predictions": ["\u2581// \u2581 resolve Existing Path To Fully root \u2581sets \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581// \u2581of \u2581the \u2581 path \u2581to \u2581the \u2581 path ."], "references": ["\u2581// \u2581 resolve Existing Path To Fully Explicit \u2581is \u2581the \u2581same \u2581as \u2581 Resolve Path To Fully Explicit , \u2581// \u2581but \u2581without \u2581the \u2581special \u2581case \u2581for \u2581missing \u2581final \u2581component ."], "bleu": 0.24520590090403985, "rouge_l": 0.4}
{"id": 2750, "predictions": ["\u2581// \u2581Walk \u2581executes \u2581the \u2581given \u2581function \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 name ."], "references": ["\u2581// \u2581Walk \u2581implements \u2581the \u2581corresponding \u2581method \u2581in \u2581the \u2581 Client \u2581interface"], "bleu": 0.12874330508144843, "rouge_l": 0.39559014267185466}
{"id": 2142, "predictions": ["\u2581// \u2581check SchemaVersion s Have No Cnt s \u2581checks \u2581if \u2581the \u2581given \u2581 slice \u2581of \u2581 runes \u2581are \u2581valid ."], "references": ["\u2581// \u2581Check \u2581that \u2581the \u2581given \u2581list \u2581of \u2581update \u2581version \u2581numbers \u2581doesn ' t \u2581have \u2581\" holes \", \u2581// \u2581that \u2581is \u2581each \u2581version \u2581equal \u2581the \u2581 preceding \u2581version \u2581 plus \u2581"], "bleu": 0.06026510517822424, "rouge_l": 0.1930379746835443}
{"id": 4030, "predictions": ["\u2581// \u2581check Docker \u2581checks \u2581if \u2581the \u2581docker \u2581docker \u2581 config \u2581is \u2581valid"], "references": ["\u2581// \u2581Check \u2581Docker \u2581configs"], "bleu": 0.10390302174233558, "rouge_l": 0.13738738738738737}
{"id": 2539, "predictions": ["\u2581// \u2581 Ask Int \u2581 asks \u2581the \u2581 min \u2581and \u2581max \u2581 length \u2581of \u2581the \u2581given \u2581 length"], "references": ["\u2581// \u2581 Ask Int \u2581 asks \u2581the \u2581user \u2581to \u2581 enter \u2581an \u2581integer \u2581between \u2581a \u2581 min \u2581and \u2581max \u2581value"], "bleu": 0.4553993982997796, "rouge_l": 0.5735042735042736}
{"id": 3526, "predictions": ["\u2581// \u2581 Encode SQL \u2581encodes \u2581the \u2581 insert \u2581values \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode SQL \u2581performs \u2581the \u2581 SQL \u2581encoding \u2581for \u2581 Insert Values ."], "bleu": 0.26220676436185975, "rouge_l": 0.5398230088495575}
{"id": 3569, "predictions": ["\u2581// \u2581 Call Peer \u2581 Call \u2581a \u2581 call \u2581to \u2581 call \u2581a \u2581 call \u2581to \u2581the \u2581 call \u2581peer ."], "references": ["\u2581// \u2581 Call Peer \u2581makes \u2581a \u2581JSON \u2581 call \u2581using \u2581the \u2581given \u2581peer ."], "bleu": 0.2179301929852717, "rouge_l": 0.5928085519922255}
{"id": 2727, "predictions": ["\u2581// \u2581Get Etcd Client \u2581returns \u2581the \u2581etcd \u2581client \u2581for \u2581the \u2581 Etcd Env ."], "references": ["\u2581// \u2581Get Etcd Client \u2581returns \u2581the \u2581already \u2581connected \u2581etcd \u2581client \u2581without \u2581modification ."], "bleu": 0.4546697236991713, "rouge_l": 0.6711491442542787}
{"id": 2846, "predictions": ["\u2581// \u2581 Close \u2581implements \u2581 PutObject WriteCloser ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581writer ."], "bleu": 0.3155984539112945, "rouge_l": 0.5398230088495575}
{"id": 3469, "predictions": ["\u2581// \u2581 Mean StdDev With Mask \u2581returns \u2581the \u2581mean \u2581of \u2581the \u2581 product \u2581of \u2581the \u2581given \u2581mask ."], "references": ["\u2581// \u2581 Mean StdDev With Mask \u2581calculates \u2581mean \u2581and \u2581standard \u2581deviation \u2581of \u2581pixel \u2581values \u2581with \u2581mask"], "bleu": 0.3370129264673147, "rouge_l": 0.5350877192982456}
{"id": 2728, "predictions": ["\u2581// \u2581Get Kube Client \u2581returns \u2581a \u2581 Kube Client set \u2581for \u2581the \u2581given \u2581 Kubernetes \u2581 config ."], "references": ["\u2581// \u2581Get Kube Client \u2581returns \u2581the \u2581already \u2581connected \u2581 Kubernetes \u2581API \u2581client \u2581without \u2581// \u2581modification ."], "bleu": 0.2966090320349725, "rouge_l": 0.5350877192982456}
{"id": 2059, "predictions": ["\u2581// \u2581 Servers \u2581returns \u2581a \u2581list \u2581of \u2581 raft . Server ."], "references": ["\u2581// \u2581 Servers \u2581returns \u2581the \u2581servers \u2581that \u2581are \u2581currently \u2581part \u2581of \u2581the \u2581cluster . \u2581// \u2581// \u2581If \u2581 this \u2581 raft \u2581instance \u2581is \u2581not \u2581the \u2581leader , \u2581an \u2581error \u2581is"], "bleu": 0.07902598128872206, "rouge_l": 0.30942028985507253}
{"id": 3358, "predictions": ["\u2581// \u2581 Config Update \u2581updates \u2581the \u2581 config \u2581object \u2581for \u2581the \u2581given \u2581image ."], "references": ["\u2581// \u2581 Config Update \u2581updates \u2581the \u2581image ' s \u2581default \u2581configuration \u2581and \u2581adds \u2581annotations \u2581// \u2581which \u2581will \u2581be \u2581 visible \u2581in \u2581source \u2581images \u2581created \u2581using \u2581 this \u2581reference ."], "bleu": 0.1498455402671034, "rouge_l": 0.3500717360114778}
{"id": 2809, "predictions": ["\u2581// \u2581 Inspect Branch \u2581returns \u2581the \u2581branch \u2581of \u2581a \u2581branch"], "references": ["\u2581// \u2581 Inspect Branch \u2581returns \u2581information \u2581on \u2581a \u2581specific \u2581 P FS \u2581branch"], "bleu": 0.3675705171898876, "rouge_l": 0.5947075208913649}
{"id": 3970, "predictions": ["\u2581// \u2581 Resolver \u2581returns \u2581the \u2581 resolver \u2581for \u2581the \u2581given \u2581rule ."], "references": ["\u2581// \u2581 Resolver \u2581returns \u2581a \u2581 resolver \u2581for \u2581the \u2581given \u2581rule \u2581and \u2581package , \u2581and \u2581a \u2581bool \u2581// \u2581indicating \u2581whether \u2581one \u2581was \u2581found . \u2581 Empty \u2581string \u2581may \u2581be \u2581passed"], "bleu": 0.15286283375416643, "rouge_l": 0.4862318840579709}
{"id": 3132, "predictions": ["\u2581// \u2581new Mini o Client \u2581creates \u2581a \u2581new \u2581client \u2581for \u2581a \u2581 min io \u2581client ."], "references": ["\u2581// \u2581Creates \u2581a \u2581new \u2581 min io Client \u2581structure \u2581and \u2581returns"], "bleu": 0.18295654224495206, "rouge_l": 0.45979899497487436}
{"id": 3486, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581request \u2581and \u2581return \u2581the \u2581response ."], "bleu": 0.3775218276532607, "rouge_l": 0.6609907120743034}
{"id": 3019, "predictions": ["\u2581// \u2581new ST M Repeat able \u2581creates \u2581a \u2581new \u2581 v 3 Txn Response ."], "references": ["\u2581// \u2581new ST M Repeat able \u2581 initiate s \u2581new \u2581 repeatable \u2581read \u2581transaction ; \u2581reads \u2581within \u2581// \u2581the \u2581same \u2581transaction \u2581attempt \u2581to \u2581always \u2581return \u2581the \u2581same \u2581 data ."], "bleu": 0.1556563597384298, "rouge_l": 0.37731958762886597}
{"id": 3487, "predictions": ["\u2581// \u2581 Exec \u2581executes \u2581the \u2581request ."], "references": ["\u2581// \u2581 Exec \u2581sends \u2581the \u2581request \u2581a \u2581request \u2581and \u2581decodes \u2581the \u2581response ."], "bleu": 0.18132900282515496, "rouge_l": 0.5692068429237948}
{"id": 3122, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581port \u2581and \u2581 listen s \u2581for \u2581the \u2581port ."], "references": ["\u2581// \u2581 Close \u2581shut s \u2581down \u2581port \u2581 forwarding ."], "bleu": 0.195647514979229, "rouge_l": 0.5154929577464789}
{"id": 2861, "predictions": ["\u2581// \u2581 Binary \u2581writes \u2581a \u2581 debug \u2581 debug \u2581binary \u2581representation \u2581of \u2581the \u2581 APIClient \u2581to \u2581the \u2581given \u2581io . Writer"], "references": ["\u2581// \u2581 Binary \u2581writes \u2581the \u2581running \u2581 pac hd \u2581binary \u2581to \u2581 w ."], "bleu": 0.19692215902857169, "rouge_l": 0.47424684159378033}
{"id": 2151, "predictions": ["\u2581// \u2581 Dial Func \u2581returns \u2581a \u2581 Dial Func \u2581that \u2581 dial s \u2581the \u2581 Gateway"], "references": ["\u2581// \u2581 Dial Func \u2581returns \u2581a \u2581 dial \u2581function \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 connect \u2581to \u2581one \u2581of \u2581the \u2581// \u2581 dql ite \u2581nodes ."], "bleu": 0.25876619964141845, "rouge_l": 0.5022455089820359}
{"id": 2772, "predictions": ["\u2581// \u2581 Print Branch \u2581prints \u2581the \u2581 Branch Info \u2581for \u2581the \u2581given \u2581 Branch Info ."], "references": ["\u2581// \u2581 Print Branch \u2581pretty - print s \u2581a \u2581 Branch ."], "bleu": 0.2545984531673679, "rouge_l": 0.5132211538461539}
{"id": 3944, "predictions": ["\u2581// \u2581 Empty \u2581 path \u2581to \u2581 path"], "references": ["\u2581// \u2581other FileInfo \u2581returns \u2581information \u2581about \u2581a \u2581non - . go \u2581file . \u2581It \u2581will \u2581parse \u2581// \u2581part \u2581of \u2581the \u2581file \u2581to \u2581determine \u2581build \u2581tags . \u2581If \u2581the \u2581file \u2581can"], "bleu": 0.011345536615222427, "rouge_l": 0.0953125}
{"id": 2292, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581 Kubernetes \u2581version \u2581and \u2581returns \u2581a \u2581 slice \u2581of \u2581 type \u2581 type ."], "references": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581string \u2581starting \u2581with \u2581a \u2581 dotted \u2581version \u2581and \u2581returns \u2581it ."], "bleu": 0.2852636439147137, "rouge_l": 0.5545454545454546}
{"id": 2395, "predictions": ["\u2581// \u2581 S take Type To Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 S 3 \u2581 type \u2581of \u2581a \u2581volume ."], "references": ["\u2581// \u2581 S toragePoolVolume Type To Name \u2581converts \u2581a \u2581volume \u2581integer \u2581 type \u2581 code \u2581to \u2581its \u2581// \u2581human - readable \u2581 name ."], "bleu": 0.18524408814034998, "rouge_l": 0.4314002828854314}
{"id": 2191, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 data \u2581from \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Read \u2581in \u2581 Progress Reader \u2581is \u2581the \u2581same \u2581as \u2581io . Read"], "bleu": 0.18563688094442687, "rouge_l": 0.4698331193838254}
{"id": 2592, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581underlying \u2581writer ."], "references": ["\u2581// \u2581 Write \u2581in \u2581 Progress Writer \u2581is \u2581the \u2581same \u2581as \u2581io . Write"], "bleu": 0.18827843861792215, "rouge_l": 0.45522388059701485}
{"id": 2057, "predictions": ["\u2581// \u2581 Cert Update \u2581updates \u2581the \u2581 path \u2581of \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Cert Update \u2581updates \u2581the \u2581certificate \u2581with \u2581the \u2581given \u2581fingerprint ."], "bleu": 0.48683565933103, "rouge_l": 0.603960396039604}
{"id": 3345, "predictions": ["\u2581// \u2581convert DockerImage Reference \u2581converts \u2581a \u2581reference \u2581to \u2581a \u2581string ."], "references": ["\u2581// \u2581convert DockerImage Reference \u2581takes \u2581an \u2581image \u2581API \u2581 DockerImage Reference \u2581value \u2581and \u2581returns \u2581a \u2581reference \u2581we \u2581can \u2581actually \u2581use ; \u2581// \u2581currently \u2581 OpenShift \u2581stores \u2581the \u2581cluster - internal"], "bleu": 0.06481950337998618, "rouge_l": 0.2701107011070111}
{"id": 2408, "predictions": ["\u2581// \u2581 Event \u2581 - \u2581 Connect \u2581to \u2581 get \u2581all \u2581 active \u2581 machines \u2581that \u2581are \u2581 set \u2581to \u2581// \u2581 connect \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 Establish \u2581a \u2581client \u2581connection \u2581to \u2581 get \u2581events \u2581from \u2581the \u2581given \u2581node ."], "bleu": 0.10682827247639556, "rouge_l": 0.35144032921810703}
{"id": 2798, "predictions": ["\u2581// \u2581 List Repo \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 repositories"], "references": ["\u2581// \u2581 List Repo \u2581returns \u2581 info \u2581about \u2581all \u2581 Repos . \u2581// \u2581 provenance \u2581specifies \u2581a \u2581 set \u2581of \u2581 provenance \u2581 repos , \u2581only \u2581 repos \u2581which \u2581have"], "bleu": 0.0882031305796139, "rouge_l": 0.36014760147601477}
{"id": 2116, "predictions": ["\u2581// \u2581Get Image Aliases \u2581returns \u2581the \u2581 aliases \u2581for \u2581the \u2581 container"], "references": ["\u2581// \u2581Get Image Aliases \u2581returns \u2581the \u2581list \u2581of \u2581available \u2581 aliases \u2581as \u2581 Image Aliases Entry \u2581structs"], "bleu": 0.3523275906123519, "rouge_l": 0.6019736842105263}
{"id": 2693, "predictions": ["\u2581// \u2581 get RBD Filesystem \u2581returns \u2581the \u2581 GCE \u2581 config \u2581for \u2581the \u2581 Ceph \u2581 config ."], "references": ["\u2581// \u2581 get RBD Filesystem \u2581returns \u2581the \u2581filesystem \u2581the \u2581 RBD \u2581storage \u2581volume \u2581is \u2581supposed \u2581to \u2581// \u2581be \u2581created \u2581with"], "bleu": 0.3586320638394363, "rouge_l": 0.4692307692307693}
{"id": 2812, "predictions": ["\u2581// \u2581 Delete Branch \u2581deletes \u2581the \u2581branch \u2581of \u2581a \u2581repository"], "references": ["\u2581// \u2581 Delete Branch \u2581deletes \u2581a \u2581branch , \u2581but \u2581 leaves \u2581the \u2581commits \u2581themselves \u2581int act . \u2581// \u2581 In \u2581other \u2581words , \u2581those \u2581commits \u2581can \u2581still \u2581be \u2581accessed \u2581via"], "bleu": 0.06915573170477486, "rouge_l": 0.27518796992481204}
{"id": 3570, "predictions": ["\u2581// \u2581 Call SC \u2581executes \u2581the \u2581 ctx ."], "references": ["\u2581// \u2581 Call SC \u2581makes \u2581a \u2581JSON \u2581 call \u2581using \u2581the \u2581given \u2581sub channel ."], "bleu": 0.22682348481414455, "rouge_l": 0.47843137254901963}
{"id": 3585, "predictions": ["\u2581// \u2581Remove \u2581removes \u2581the \u2581peer \u2581from \u2581the \u2581list \u2581of \u2581 active \u2581 active \u2581peers ."], "references": ["\u2581// \u2581Remove \u2581removes \u2581a \u2581peer \u2581from \u2581the \u2581peer \u2581list . \u2581It \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581peer \u2581cannot \u2581be \u2581found . \u2581// \u2581Remove \u2581does \u2581not \u2581affect \u2581connections \u2581to \u2581the \u2581peer"], "bleu": 0.09320795658207887, "rouge_l": 0.3353951890034364}
{"id": 2290, "predictions": ["\u2581// \u2581Add Context \u2581adds \u2581a \u2581logger \u2581to \u2581the \u2581logger ."], "references": ["\u2581// \u2581Add Context \u2581will \u2581return \u2581a \u2581copy \u2581of \u2581the \u2581logger \u2581with \u2581extra \u2581context \u2581added"], "bleu": 0.19437836223653274, "rouge_l": 0.48541114058355433}
{"id": 2994, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581backoff \u2581channel \u2581and \u2581 flush es \u2581the \u2581 Backoff Buffer \u2581to \u2581the \u2581// \u2581 chan WriteCloser ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 WriteCloser \u2581contained \u2581in \u2581 b ."], "bleu": 0.24125880497129865, "rouge_l": 0.4969450101832994}
{"id": 2424, "predictions": ["\u2581// \u2581 Is Admin \u2581returns \u2581true \u2581if \u2581the \u2581user \u2581is \u2581in \u2581the \u2581 admin \u2581 admin \u2581 admin ."], "references": ["\u2581// \u2581 Is Admin \u2581returns \u2581whether \u2581or \u2581not \u2581the \u2581provided \u2581user \u2581is \u2581an \u2581 admin ."], "bleu": 0.33359103227594633, "rouge_l": 0.6384395813510941}
{"id": 2453, "predictions": ["\u2581// \u2581 Container NodeList \u2581returns \u2581a \u2581list \u2581of \u2581 container \u2581 container"], "references": ["\u2581// \u2581 Container NodeList \u2581returns \u2581all \u2581 container \u2581objects \u2581on \u2581the \u2581local \u2581node ."], "bleu": 0.3623213170287083, "rouge_l": 0.5310945273631842}
{"id": 3393, "predictions": ["\u2581// \u2581new Image Destination \u2581returns \u2581a \u2581new \u2581image Destination"], "references": ["\u2581// \u2581new Image Destination \u2581creates \u2581a \u2581new \u2581 Image Destination \u2581for \u2581the \u2581specified \u2581image \u2581reference ."], "bleu": 0.22102872063260687, "rouge_l": 0.5330836454431961}
{"id": 3609, "predictions": ["\u2581// \u2581 ListenAndServe \u2581returns \u2581a \u2581new \u2581 notifier \u2581with \u2581the \u2581given \u2581 sockets ."], "references": ["\u2581// \u2581 ListenAndServe \u2581 listen s \u2581on \u2581the \u2581given \u2581address \u2581and \u2581serves \u2581incoming \u2581requests . \u2581// \u2581The \u2581port \u2581may \u2581be \u25810, \u2581in \u2581which \u2581case \u2581the \u2581channel \u2581will \u2581use \u2581an \u2581"], "bleu": 0.06904950985252116, "rouge_l": 0.2986013986013986}
{"id": 3155, "predictions": ["\u2581// \u2581 Chunk \u2581returns \u2581a \u2581 slice \u2581of \u2581 data \u2581in \u2581 data \u2581in \u2581 data ."], "references": ["\u2581// \u2581 Chunk \u2581splits \u2581a \u2581piece \u2581of \u2581 data \u2581up , \u2581 this \u2581is \u2581useful \u2581for \u2581splitting \u2581up \u2581 data \u2581that ' s \u2581// \u2581bigger \u2581than \u2581 Max Msg Size"], "bleu": 0.10839836352151985, "rouge_l": 0.40531561461794013}
{"id": 3853, "predictions": ["\u2581// \u2581handle Ping Res \u2581checks \u2581if \u2581the \u2581given \u2581frame \u2581is \u2581a \u2581 ping Res"], "references": ["\u2581// \u2581handle Ping Res \u2581calls \u2581registered \u2581 ping \u2581 handlers ."], "bleu": 0.28295596283263513, "rouge_l": 0.49061662198391426}
{"id": 2885, "predictions": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 Writer ."], "references": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581index \u2581for \u2581a \u2581hash tree \u2581writer ."], "bleu": 0.39553325358771796, "rouge_l": 0.5}
{"id": 2649, "predictions": ["\u2581// \u2581 Node Add \u2581adds \u2581a \u2581node \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Node Add \u2581adds \u2581a \u2581node \u2581to \u2581the \u2581current \u2581list \u2581of \u2581 LXD \u2581nodes \u2581that \u2581are \u2581part \u2581of \u2581the \u2581// \u2581cluster . \u2581It \u2581returns \u2581the \u2581 ID \u2581of \u2581the"], "bleu": 0.154167629220845, "rouge_l": 0.49520295202952025}
{"id": 2376, "predictions": ["\u2581// \u2581 StoragePool Config Clear \u2581removes \u2581the \u2581 config \u2581 set \u2581of \u2581the \u2581storage \u2581 key \u2581from \u2581the \u2581pool ."], "references": ["\u2581// \u2581 StoragePool Config Clear \u2581deletes \u2581the \u2581storage \u2581pool \u2581 config ."], "bleu": 0.28943182557959846, "rouge_l": 0.5890557939914164}
{"id": 3312, "predictions": ["\u2581// \u2581new PR Signed Base Layer \u2581creates \u2581a \u2581new \u2581 Signed Base Base \u2581layer"], "references": ["\u2581// \u2581new PR Signed Base Layer \u2581is \u2581 New PR Signed Base Layer , \u2581except \u2581it \u2581returns \u2581the \u2581private \u2581 type ."], "bleu": 0.2567602325011828, "rouge_l": 0.4807355516637478}
{"id": 3666, "predictions": ["\u2581// \u2581 Write Uvarint \u2581writes \u2581a \u2581 byte \u2581 slice \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Write Uvarint \u2581writes \u2581an \u2581unsigned \u2581var int \u2581to \u2581the \u2581buffer"], "bleu": 0.41211837513230276, "rouge_l": 0.6240409207161125}
{"id": 3925, "predictions": ["\u2581// \u2581 Rel \u2581returns \u2581the \u2581 label \u2581for \u2581the \u2581given \u2581 label ."], "references": ["\u2581// \u2581 Rel \u2581attempts \u2581to \u2581compute \u2581a \u2581relative \u2581 label \u2581from \u2581 this \u2581 label . \u2581If \u2581 this \u2581 label \u2581// \u2581is \u2581already \u2581relative \u2581or \u2581is \u2581in \u2581a \u2581different"], "bleu": 0.07749860240262149, "rouge_l": 0.3473309608540925}
{"id": 2447, "predictions": ["\u2581// \u2581 Container Names \u2581returns \u2581a \u2581list \u2581of \u2581 container \u2581names \u2581for \u2581a \u2581given \u2581 container ."], "references": ["\u2581// \u2581 Container Names \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581containers \u2581the \u2581given \u2581project ."], "bleu": 0.30064545690526145, "rouge_l": 0.5252960172228203}
{"id": 2636, "predictions": ["\u2581// \u2581network Create Listener \u2581creates \u2581a \u2581listener \u2581for \u2581the \u2581given \u2581address ."], "references": ["\u2581// \u2581Create \u2581a \u2581new \u2581 net . Listener \u2581bound \u2581to \u2581the \u2581 tcp \u2581socket \u2581of \u2581the \u2581network \u2581endpoint ."], "bleu": 0.07930612703488676, "rouge_l": 0.2479674796747967}
{"id": 2963, "predictions": ["\u2581// \u2581 Restart Datum \u2581 Restart s \u2581a \u2581job \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Restart Datum \u2581restart s \u2581a \u2581datum \u2581that ' s \u2581being \u2581processed \u2581as \u2581part \u2581of \u2581a \u2581job . \u2581// \u2581datum Filter \u2581is \u2581a \u2581 slice \u2581of \u2581strings \u2581which \u2581are"], "bleu": 0.11084356514227289, "rouge_l": 0.3353951890034364}
{"id": 3028, "predictions": ["\u2581// \u2581 ClusterRole \u2581returns \u2581a \u2581 ClusterRole \u2581object"], "references": ["\u2581// \u2581 ClusterRole \u2581returns \u2581a \u2581 ClusterRole \u2581that \u2581should \u2581be \u2581bound \u2581to \u2581the \u2581 Pac hyd er m \u2581service \u2581account ."], "bleu": 0.1700017298788801, "rouge_l": 0.4466527196652719}
{"id": 3216, "predictions": ["\u2581// \u2581 format ASCII \u2581converts \u2581a \u2581string \u2581to \u2581a \u2581string \u2581 slice \u2581of \u2581 s ."], "references": ["\u2581// \u2581 format ASCII \u2581formats \u2581 s \u2581as \u2581an \u2581ASCII \u2581string . \u2581// \u2581This \u2581is \u2581useful \u2581for \u2581printing \u2581binary \u2581strings \u2581in \u2581a \u2581 semi - leg ible \u2581way ."], "bleu": 0.12233963169959136, "rouge_l": 0.3379501385041551}
{"id": 2285, "predictions": ["\u2581// \u2581 Translate Handler \u2581 - \u2581 get \u2581a \u2581log \u2581handler \u2581for \u2581the \u2581given \u2581 syslog \u2581file ."], "references": ["\u2581// \u2581 getSystem Handler \u2581on \u2581 Linux \u2581writes \u2581messages \u2581to \u2581 syslog ."], "bleu": 0.12673718536830808, "rouge_l": 0.4651416122004358}
{"id": 2124, "predictions": ["\u2581// \u2581 Rename Image Alias \u2581updates \u2581an \u2581image \u2581 alias \u2581for \u2581a \u2581given \u2581image ."], "references": ["\u2581// \u2581 Rename Image Alias \u2581rename s \u2581an \u2581existing \u2581image \u2581 alias"], "bleu": 0.393755531055134, "rouge_l": 0.6802973977695167}
{"id": 2257, "predictions": ["\u2581// \u2581 Update Profile \u2581updates \u2581the \u2581 Profile \u2581for \u2581the \u2581given \u2581 Profile"], "references": ["\u2581// \u2581 Update Profile \u2581updates \u2581the \u2581profile \u2581to \u2581match \u2581the \u2581provided \u2581 Profile \u2581struct"], "bleu": 0.45494972964213315, "rouge_l": 0.6622436670687575}
{"id": 3581, "predictions": ["\u2581// \u2581Set Strategy \u2581sets \u2581the \u2581 set \u2581of \u2581 active \u2581 min \u2581score ."], "references": ["\u2581// \u2581Set Strategy \u2581sets \u2581 customize d \u2581peer \u2581selection \u2581strategy ."], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 3659, "predictions": ["\u2581// \u2581 Fill From \u2581reads \u2581the \u2581 contents \u2581of \u2581the \u2581buffer \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Fill From \u2581fills \u2581the \u2581buffer \u2581from \u2581a \u2581reader"], "bleu": 0.30620490882364876, "rouge_l": 0.580952380952381}
{"id": 2119, "predictions": ["\u2581// \u2581 Update Image \u2581updates \u2581the \u2581 Image \u2581 Image \u2581 Store"], "references": ["\u2581// \u2581 Update Image \u2581updates \u2581the \u2581image \u2581definition"], "bleu": 0.4703709593866897, "rouge_l": 0.6224489795918368}
{"id": 2182, "predictions": ["\u2581// \u2581 Caller s \u2581returns \u2581the \u2581 Trace \u2581 trace \u2581for \u2581the \u2581given \u2581 Caller ."], "references": ["\u2581// \u2581 Caller s \u2581returns \u2581a \u2581 Trace \u2581for \u2581the \u2581current \u2581goroutine \u2581with \u2581element \u25810 \u2581// \u2581identifying \u2581the \u2581calling \u2581function ."], "bleu": 0.26665581432397273, "rouge_l": 0.5276816608996538}
{"id": 2269, "predictions": ["\u2581// \u2581 select Tables SQL \u2581 select \u2581 SQL \u2581statement"], "references": ["\u2581// \u2581Return \u2581a \u2581list \u2581of \u2581 SQL \u2581statements \u2581that \u2581can \u2581be \u2581used \u2581to \u2581create \u2581all \u2581tables \u2581in \u2581the \u2581// \u2581database ."], "bleu": 0.05934269577876743, "rouge_l": 0.18190854870775347}
{"id": 3137, "predictions": ["\u2581// \u2581 Pipeline Rc Name \u2581handles \u2581a \u2581 set \u2581of \u2581 Rc s \u2581and \u2581 add \u2581it \u2581to \u2581a \u2581 set \u2581of \u2581 Pipeline s ."], "references": ["\u2581// \u2581 Pipeline Rc Name \u2581generates \u2581the \u2581 name \u2581of \u2581the \u2581 k 8 s \u2581replication \u2581 controller \u2581that \u2581// \u2581manage s \u2581a \u2581pipeline ' s \u2581workers"], "bleu": 0.19961718465374745, "rouge_l": 0.4512946979038225}
{"id": 3536, "predictions": ["\u2581// \u2581 get Hello Packet \u2581returns \u2581a \u2581 Hello Server \u2581for \u2581the \u2581given \u2581 PubSub \u2581packet ."], "references": ["\u2581// \u2581 get \u2581the \u2581initial \u2581RPC \u2581containing \u2581all \u2581of \u2581our \u2581 subscriptions \u2581to \u2581send \u2581to \u2581new \u2581peers"], "bleu": 0.1487964117124549, "rouge_l": 0.29411764705882354}
{"id": 3617, "predictions": ["\u2581// \u2581send Updated \u2581sends \u2581the \u2581notification \u2581to \u2581the \u2581remote \u2581peer ."], "references": ["\u2581// \u2581exchange Updated \u2581updates \u2581the \u2581peer \u2581heap ."], "bleu": 0.14991106946711685, "rouge_l": 0.5417406749555951}
{"id": 2992, "predictions": ["\u2581// \u2581 New Exponential BackOff Config \u2581returns \u2581a \u2581new \u2581 Exponential BackOff Config ."], "references": ["\u2581// \u2581 New Exponential BackOff Config \u2581creates \u2581an \u2581 exponential \u2581back - off \u2581 config \u2581with \u2581// \u2581longer \u2581wait \u2581times \u2581than \u2581the \u2581default ."], "bleu": 0.20859775081757992, "rouge_l": 0.40197693574958815}
{"id": 2751, "predictions": ["\u2581// \u2581 Exists \u2581checks \u2581if \u2581the \u2581 data \u2581 exists \u2581in \u2581the \u2581 data \u2581 map"], "references": ["\u2581// \u2581 Exists \u2581implements \u2581the \u2581corresponding \u2581method \u2581in \u2581the \u2581 Client \u2581interface"], "bleu": 0.2140909265975804, "rouge_l": 0.5132211538461539}
{"id": 2497, "predictions": ["\u2581// \u2581 Debug \u2581logs \u2581a \u2581message \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 name ."], "references": ["\u2581// \u2581 General \u2581 wrappers \u2581around \u2581 Logger \u2581interface \u2581function s ."], "bleu": 0.12874330508144843, "rouge_l": 0.3779429987608426}
{"id": 3261, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 span"], "references": ["\u2581// \u2581String \u2581allows \u2581printing \u2581 span \u2581for \u2581debugging"], "bleu": 0.2086130724305753, "rouge_l": 0.4535315985130111}
{"id": 3470, "predictions": ["\u2581// \u2581Create Seq \u2581creates \u2581a \u2581new \u2581 Seq \u2581with \u2581 length \u2581 length ."], "references": ["\u2581// \u2581Creates \u2581a \u2581new \u2581sequence ."], "bleu": 0.13217947626377288, "rouge_l": 0.43109540636042404}
{"id": 2908, "predictions": ["\u2581// \u2581 remove Str \u2581removes \u2581the \u2581string \u2581from \u2581the \u2581list \u2581of \u2581strings ."], "references": ["\u2581// \u2581 remove Str \u2581removes \u2581' s ' \u2581from \u2581' s s ', \u2581 pre serving \u2581the \u2581sorted \u2581order \u2581of \u2581' s s ' \u2581 ( for \u2581// \u2581removing \u2581child"], "bleu": 0.10471612356375096, "rouge_l": 0.3473309608540925}
{"id": 3651, "predictions": ["\u2581// \u2581 ReadBytes \u2581reads \u2581the \u2581next \u2581 byte \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 ReadBytes \u2581returns \u2581the \u2581next \u2581 n \u2581bytes \u2581from \u2581the \u2581buffer"], "bleu": 0.35740464043618275, "rouge_l": 0.75}
{"id": 3602, "predictions": ["\u2581// \u2581 Num Pending Outbound \u2581returns \u2581the \u2581number \u2581of \u2581 inbound \u2581messages \u2581in \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Num Pending Outbound \u2581returns \u2581the \u2581number \u2581of \u2581pending \u2581outbound \u2581calls ."], "bleu": 0.5581600587827487, "rouge_l": 0.7027649769585255}
{"id": 2679, "predictions": ["\u2581// \u2581 Main OS D Pool Exists \u2581checks \u2581if \u2581the \u2581 container \u2581 name \u2581is \u2581in \u2581the \u2581 container \u2581 name \u2581and \u2581 provision \u2581 name"], "references": ["\u2581// \u2581 ceph OS D Pool Exists \u2581checks \u2581whether \u2581a \u2581given \u2581 OS D \u2581pool \u2581 exists ."], "bleu": 0.20333448190047887, "rouge_l": 0.4229583975346687}
{"id": 2968, "predictions": ["\u2581// \u2581 Inspect Pipeline \u2581returns \u2581the \u2581 Pipeline Info \u2581for \u2581the \u2581given \u2581 OpenShift \u2581 app ."], "references": ["\u2581// \u2581 Inspect Pipeline \u2581returns \u2581 info \u2581about \u2581a \u2581specific \u2581pipeline ."], "bleu": 0.28433291815307693, "rouge_l": 0.4982497082847141}
{"id": 2969, "predictions": ["\u2581// \u2581 List Pipeline \u2581returns \u2581the \u2581list \u2581of \u2581 Pipeline s \u2581for \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 List Pipeline \u2581returns \u2581 info \u2581about \u2581all \u2581 pipelines ."], "bleu": 0.3237722713145643, "rouge_l": 0.5291201982651798}
{"id": 2766, "predictions": ["\u2581// \u2581 split Key \u2581splits \u2581the \u2581 key \u2581and \u2581 key \u2581to \u2581the \u2581 key ."], "references": ["\u2581// \u2581 split Key \u2581splits \u2581a \u2581 key \u2581into \u2581the \u2581 format \u2581we \u2581want , \u2581and \u2581also \u2581 post p ends \u2581// \u2581the \u2581generation \u2581number"], "bleu": 0.21186926688208063, "rouge_l": 0.4692307692307693}
{"id": 2749, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581 data \u2581from \u2581the \u2581 data"], "references": ["\u2581// \u2581 Delete \u2581implements \u2581the \u2581corresponding \u2581method \u2581in \u2581the \u2581 Client \u2581interface"], "bleu": 0.23925530714892257, "rouge_l": 0.5176803394625177}
{"id": 3886, "predictions": ["\u2581// \u2581 remove Legacy Go Repository \u2581removes \u2581the \u2581given \u2581 path \u2581from \u2581the \u2581 path ."], "references": ["\u2581// \u2581 remove Legacy Go Repository \u2581removes \u2581 loads \u2581of \u2581go _ repository \u2581from \u2581// \u2581@ io _ baz el _ rules _ go . \u2581 Fix Load s \u2581should"], "bleu": 0.19104928374767646, "rouge_l": 0.41216216216216217}
{"id": 3939, "predictions": ["\u2581// \u2581 Rel BaseName \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Rel BaseName \u2581returns \u2581the \u2581base \u2581 name \u2581for \u2581rel , \u2581a \u2581slash - separated \u2581 path \u2581relative \u2581// \u2581to \u2581the \u2581repository \u2581root . \u2581If \u2581rel \u2581is \u2581 empty"], "bleu": 0.13626462819908836, "rouge_l": 0.4692307692307692}
{"id": 3340, "predictions": ["\u2581// \u2581 Sign Docker Manifest \u2581returns \u2581the \u2581 key \u2581identity \u2581of \u2581the \u2581given \u2581image , \u2581// \u2581and \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581 key \u2581is \u2581not \u2581found ."], "references": ["\u2581// \u2581 Sign Docker Manifest \u2581returns \u2581a \u2581signature \u2581for \u2581manifest \u2581as \u2581the \u2581specified \u2581docker Reference , \u2581// \u2581using \u2581 mech \u2581and \u2581 key Identity ."], "bleu": 0.25472966537158054, "rouge_l": 0.49562500000000004}
{"id": 2488, "predictions": ["\u2581// \u2581 Can did Server \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 key \u2581 key , \u2581and \u2581the \u2581 ID \u2581of \u2581the \u2581 key"], "references": ["\u2581// \u2581 Can did Server \u2581returns \u2581all \u2581the \u2581 Can did \u2581settings \u2581needed \u2581to \u2581 connect \u2581to \u2581a \u2581server ."], "bleu": 0.2605892927044566, "rouge_l": 0.4159090909090909}
{"id": 2134, "predictions": ["\u2581// \u2581 Defined Container \u2581checks \u2581if \u2581the \u2581 controller \u2581is \u2581a \u2581 controller ."], "references": ["\u2581// \u2581 Defined Container \u2581returns \u2581true \u2581if \u2581the \u2581 container \u2581is \u2581defined \u2581in \u2581 M AAS"], "bleu": 0.30160064586952917, "rouge_l": 0.5928725701943846}
{"id": 2899, "predictions": ["\u2581// \u2581 MkdirAll \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581 path \u2581of \u2581the \u2581 path ."], "references": ["\u2581// \u2581 MkdirAll \u2581puts \u2581all \u2581of \u2581the \u2581parent \u2581directories \u2581of \u2581a \u2581given \u2581// \u2581 path \u2581into \u2581the \u2581hash tree ."], "bleu": 0.16314640227830884, "rouge_l": 0.43571428571428567}
{"id": 3770, "predictions": ["\u2581// \u2581 add Exchange \u2581adds \u2581a \u2581 Exchange Exchange \u2581to \u2581the \u2581 set \u2581of \u2581 Exchange s ."], "references": ["\u2581// \u2581 add Exchange \u2581adds \u2581an \u2581exchange , \u2581it \u2581must \u2581be \u2581called \u2581with \u2581the \u2581 mex set \u2581locked ."], "bleu": 0.2805801224167524, "rouge_l": 0.48412698412698413}
{"id": 3831, "predictions": ["\u2581// \u2581 Resolve With Go Path \u2581 resolves \u2581the \u2581 path \u2581to \u2581the \u2581file \u2581 path"], "references": ["\u2581// \u2581 Resolve With Go Path \u2581will \u2581 resolve \u2581the \u2581 filename \u2581relative \u2581to \u2581 GOPATH \u2581and \u2581returns \u2581// \u2581the \u2581first \u2581file \u2581that \u2581 exists , \u2581or \u2581an \u2581error \u2581otherwise"], "bleu": 0.17941522599403456, "rouge_l": 0.5358108108108108}
{"id": 3303, "predictions": ["\u2581// \u2581 New Policy FromFile \u2581creates \u2581a \u2581new \u2581 Policy \u2581from \u2581a \u2581file ."], "references": ["\u2581// \u2581 New Policy FromFile \u2581returns \u2581a \u2581policy \u2581configured \u2581in \u2581the \u2581specified \u2581file ."], "bleu": 0.375022891676693, "rouge_l": 0.5714285714285714}
{"id": 2251, "predictions": ["\u2581// \u2581find Struct \u2581returns \u2581the \u2581first \u2581 type \u2581of \u2581 type , \u2581or \u2581nil \u2581if \u2581the \u2581 type \u2581is \u2581not \u2581found ."], "references": ["\u2581// \u2581Find \u2581the \u2581 StructType \u2581node \u2581for \u2581the \u2581structure \u2581with \u2581the \u2581given \u2581 name"], "bleu": 0.0866852806734874, "rouge_l": 0.2893738140417458}
{"id": 2333, "predictions": ["\u2581// \u2581 Every \u2581 collect s \u2581the \u2581 Schedule \u2581and \u2581returns \u2581a \u2581new \u2581 Schedule \u2581with \u2581the \u2581given \u2581interval ."], "references": ["\u2581// \u2581 Every \u2581returns \u2581a \u2581 Schedule \u2581that \u2581always \u2581returns \u2581the \u2581given \u2581time \u2581interval ."], "bleu": 0.1849304691034943, "rouge_l": 0.6451923076923077}
{"id": 2637, "predictions": ["\u2581// \u2581 Accept \u2581returns \u2581a \u2581 net . Listener \u2581that \u2581will \u2581be \u2581called \u2581when \u2581the \u2581listener \u2581// \u2581is \u2581closed ."], "references": ["\u2581// \u2581 Accept \u2581waits \u2581for \u2581and \u2581returns \u2581the \u2581next \u2581incoming \u2581 TLS \u2581connection \u2581then \u2581use \u2581the \u2581// \u2581current \u2581 TLS \u2581configuration \u2581to \u2581handle \u2581it ."], "bleu": 0.10844411037765406, "rouge_l": 0.3485714285714286}
{"id": 2052, "predictions": ["\u2581// \u2581 HTTPS Address \u2581returns \u2581the \u2581 HTTPS \u2581address \u2581of \u2581the \u2581given \u2581node ."], "references": ["\u2581// \u2581 HTTPS Address \u2581is \u2581a \u2581convenience \u2581for \u2581loading \u2581the \u2581node \u2581configuration \u2581and \u2581// \u2581returning \u2581the \u2581value \u2581of \u2581 core . https _ address ."], "bleu": 0.13656318271489418, "rouge_l": 0.3416}
{"id": 3338, "predictions": ["\u2581// \u2581 Load Manifest Descriptor \u2581 loads \u2581the \u2581 Image Reference \u2581from \u2581the \u2581given \u2581image \u2581reference"], "references": ["\u2581// \u2581 Load Manifest Descriptor \u2581 loads \u2581the \u2581manifest \u2581descriptor \u2581to \u2581be \u2581used \u2581to \u2581retrieve \u2581the \u2581image \u2581 name \u2581// \u2581when \u2581pull ing \u2581an \u2581image"], "bleu": 0.29369221527981015, "rouge_l": 0.4692307692307693}
{"id": 3624, "predictions": ["\u2581// \u2581 Read Uint 16 \u2581returns \u2581the \u2581uint 16 \u2581value \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Read Uint 16 \u2581reads \u2581a \u2581uint 16 ."], "bleu": 0.375022891676693, "rouge_l": 0.6873239436619719}
{"id": 2970, "predictions": ["\u2581// \u2581 Delete Pipeline \u2581deletes \u2581a \u2581pipeline"], "references": ["\u2581// \u2581 Delete Pipeline \u2581deletes \u2581a \u2581pipeline \u2581along \u2581with \u2581its \u2581output \u2581 Repo ."], "bleu": 0.36787944117144233, "rouge_l": 0.6288659793814433}
{"id": 4083, "predictions": ["\u2581// \u2581 Inc \u2581 increments \u2581the \u2581 Quota \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Inc \u2581implements \u2581 Inc \u2581method \u2581from \u2581 Quota Service \u2581interface"], "bleu": 0.20333448190047887, "rouge_l": 0.4680306905370844}
{"id": 3106, "predictions": ["\u2581// \u2581 New DAG \u2581creates \u2581a \u2581new \u2581 DAG \u2581with \u2581the \u2581given \u2581 set \u2581of \u2581 keys ."], "references": ["\u2581// \u2581 New DAG \u2581creates \u2581a \u2581 DAG \u2581and \u2581populate s \u2581it \u2581with \u2581the \u2581given \u2581nodes ."], "bleu": 0.41682189465797687, "rouge_l": 0.6892655367231638}
{"id": 3638, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581handler \u2581for \u2581the \u2581given \u2581handler ."], "references": ["\u2581// \u2581Register \u2581registers \u2581a \u2581handler \u2581on \u2581the \u2581sub channel \u2581for \u2581the \u2581given \u2581method . \u2581// \u2581// \u2581This \u2581function \u2581panic s \u2581if \u2581the \u2581 Handler \u2581for \u2581the \u2581 Sub Channel \u2581was"], "bleu": 0.08166332629810555, "rouge_l": 0.4127819548872181}
{"id": 3221, "predictions": ["\u2581// \u2581 Diff \u2581returns \u2581the \u2581diff \u2581of \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 Diff \u2581returns \u2581a \u2581human - readable \u2581report \u2581of \u2581the \u2581differences \u2581between \u2581two \u2581values . \u2581// \u2581It \u2581returns \u2581an \u2581 empty \u2581string \u2581if \u2581and \u2581only \u2581if \u2581 Equal \u2581returns"], "bleu": 0.06701988620057787, "rouge_l": 0.3151291512915129}
{"id": 3667, "predictions": ["\u2581// \u2581 WriteString \u2581writes \u2581a \u2581string \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 WriteString \u2581writes \u2581a \u2581string \u2581to \u2581the \u2581buffer"], "bleu": 0.8931539818068694, "rouge_l": 0.9564459930313588}
{"id": 3535, "predictions": ["\u2581// \u2581 From First \u2581returns \u2581the \u2581 token Extractor \u2581for \u2581the \u2581given \u2581 token ."], "references": ["\u2581// \u2581 From First \u2581returns \u2581a \u2581function \u2581that \u2581runs \u2581multiple \u2581 token \u2581 extractors \u2581and \u2581takes \u2581the \u2581// \u2581first \u2581 token \u2581it \u2581finds"], "bleu": 0.2237296852724163, "rouge_l": 0.5070656691604322}
{"id": 3025, "predictions": ["\u2581// \u2581 NewTicker \u2581returns \u2581a \u2581ticker \u2581that \u2581will \u2581 emit \u2581the \u2581given \u2581 BackOff ."], "references": ["\u2581// \u2581 NewTicker \u2581returns \u2581a \u2581new \u2581 Ticker \u2581containing \u2581a \u2581channel \u2581that \u2581will \u2581send \u2581the \u2581time \u2581at \u2581times \u2581// \u2581specified \u2581by \u2581the \u2581 BackOff \u2581argument . \u2581 Ticker \u2581is \u2581guaranteed"], "bleu": 0.14628187563941414, "rouge_l": 0.4611683848797251}
{"id": 3984, "predictions": ["\u2581// \u2581 get And Clear Written Dirs \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 set \u2581of \u2581 keys \u2581in \u2581the \u2581 set \u2581of \u2581 dir ."], "references": ["\u2581// \u2581 get And Clear Written Dirs \u2581retrieves \u2581a \u2581list \u2581of \u2581directories \u2581that \u2581have \u2581been \u2581// \u2581modified \u2581since \u2581the \u2581last \u2581time \u2581 get And Clear Written Dirs \u2581was \u2581called ."], "bleu": 0.23845888498126322, "rouge_l": 0.3878612716763006}
{"id": 3142, "predictions": ["\u2581// \u2581Get Expected Num Hash Sizes \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581given \u2581 path"], "references": ["\u2581// \u2581Get Expected Num Hash trees \u2581computes \u2581the \u2581expected \u2581number \u2581of \u2581hash trees \u2581that \u2581// \u2581 Pac hyd er m \u2581will \u2581create \u2581given \u2581the \u2581 Hash tree Spec \u2581' spec"], "bleu": 0.15639693948742198, "rouge_l": 0.4458471760797342}
{"id": 2799, "predictions": ["\u2581// \u2581 Delete Repo \u2581deletes \u2581a \u2581repository"], "references": ["\u2581// \u2581 Delete Repo \u2581deletes \u2581a \u2581repo \u2581and \u2581 reclaim s \u2581the \u2581storage \u2581space \u2581it \u2581was \u2581using . \u2581Note \u2581// \u2581that \u2581as \u2581of \u25811.0 \u2581we \u2581do \u2581not \u2581 reclaim \u2581the"], "bleu": 0.03146117349554454, "rouge_l": 0.29163346613545815}
{"id": 4017, "predictions": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 apps \u2581in \u2581the \u2581 indexer \u2581for \u2581a \u2581given \u2581namespace ."], "references": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 Apps \u2581in \u2581the \u2581 indexer \u2581for \u2581a \u2581given \u2581namespace ."], "bleu": 0.8282477531331041, "rouge_l": 0.9375000000000001}
{"id": 2827, "predictions": ["\u2581// \u2581 Inspect Object \u2581returns \u2581a \u2581 Kubernetes \u2581object \u2581for \u2581a \u2581 APIClient"], "references": ["\u2581// \u2581 Inspect Object \u2581returns \u2581 info \u2581about \u2581an \u2581Object ."], "bleu": 0.3636227046500071, "rouge_l": 0.507628294036061}
{"id": 4037, "predictions": ["\u2581// \u2581validate Version \u2581checks \u2581if \u2581the \u2581version \u2581is \u2581supported"], "references": ["\u2581// \u2581validate Version \u2581checks \u2581whether \u2581current \u2581version \u2581is \u2581greater \u2581or \u2581equal \u2581to \u2581// \u2581supported \u2581version ."], "bleu": 0.21461525035625467, "rouge_l": 0.5330836454431961}
{"id": 2813, "predictions": ["\u2581// \u2581 Delete Commit \u2581deletes \u2581a \u2581 set \u2581of \u2581 active \u2581 APIClient"], "references": ["\u2581// \u2581 Delete Commit \u2581deletes \u2581a \u2581commit ."], "bleu": 0.4324227075463215, "rouge_l": 0.5970636215334422}
{"id": 3905, "predictions": ["\u2581// \u2581 New Load \u2581creates \u2581a \u2581new \u2581 Load \u2581object \u2581from \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 New Load \u2581creates \u2581a \u2581new , \u2581 empty \u2581load \u2581statement \u2581for \u2581the \u2581given \u2581file \u2581 name ."], "bleu": 0.4486645486136426, "rouge_l": 0.731549815498155}
{"id": 3524, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581value ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581 printable \u2581version \u2581of \u2581the \u2581value ."], "bleu": 0.5317986230889064, "rouge_l": 0.7554179566563467}
{"id": 2430, "predictions": ["\u2581// \u2581internal Cluster Container Moved Post \u2581returns \u2581the \u2581 set \u2581of \u2581 sync \u2581 sync \u2581 container \u2581 data \u2581for \u2581the \u2581// \u2581given \u2581 container ."], "references": ["\u2581// \u2581 Notification \u2581that \u2581a \u2581 container \u2581was \u2581moved . \u2581// \u2581// \u2581 At \u2581the \u2581moment \u2581it ' s \u2581used \u2581for \u2581 ceph - based \u2581containers , \u2581where \u2581the \u2581target"], "bleu": 0.07449312341064418, "rouge_l": 0.24682080924855493}
{"id": 4081, "predictions": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581service"], "references": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581service \u2581instance \u2581 status ."], "bleu": 0.5558391766749284, "rouge_l": 0.7000000000000001}
{"id": 2802, "predictions": ["\u2581// \u2581 Finish Commit \u2581is \u2581part \u2581of \u2581the \u2581 APIClient \u2581interface"], "references": ["\u2581// \u2581 Finish Commit \u2581ends \u2581the \u2581process \u2581of \u2581 committing \u2581 data \u2581to \u2581a \u2581 Repo \u2581and \u2581 persist s \u2581the \u2581// \u2581 Commit . \u2581 Once \u2581a \u2581 Commit"], "bleu": 0.06338349501054427, "rouge_l": 0.3151291512915129}
{"id": 3532, "predictions": ["\u2581// \u2581 Handler With Next \u2581is \u2581a \u2581middleware \u2581that \u2581will \u2581 add \u2581a \u2581 token \u2581to \u2581the \u2581request"], "references": ["\u2581// \u2581Special \u2581implementation \u2581for \u2581 Neg r on i , \u2581but \u2581could \u2581be \u2581used \u2581else where ."], "bleu": 0.07535838128770536, "rouge_l": 0.11487758945386065}
{"id": 3055, "predictions": ["\u2581// \u2581 ObjectStore s \u2581the \u2581 Storage \u2581object \u2581to \u2581the \u2581 Storage \u2581object"], "references": ["\u2581// \u2581 LocalStorage \u2581creates \u2581a \u2581local \u2581chunk \u2581storage \u2581instance . \u2581// \u2581 Useful \u2581for \u2581storage \u2581layer \u2581tests ."], "bleu": 0.09195488969268498, "rouge_l": 0.18807810894141833}
{"id": 2931, "predictions": ["\u2581// \u2581 Is Err Too Short TTL \u2581indicates \u2581whether \u2581the \u2581error \u2581is \u2581a \u2581 TTL \u2581of \u2581the \u2581 TTL \u2581// \u2581 set \u2581to \u2581the \u2581 TTL \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Is Err Too Short TTL \u2581returns \u2581true \u2581if \u2581' err ' \u2581is \u2581a \u2581 Err Too Short TTL"], "bleu": 0.26598871140611724, "rouge_l": 0.45646258503401366}
{"id": 3245, "predictions": ["\u2581// \u2581 Run API Checks \u2581is \u2581a \u2581function \u2581that \u2581returns \u2581a \u2581 Tracer \u2581that \u2581implements \u2581the \u2581 Run \u2581API Checks ."], "references": ["\u2581// \u2581 Run API Checks \u2581runs \u2581a \u2581 test \u2581suite \u2581to \u2581check \u2581a \u2581 Tracer \u2581against \u2581the \u2581 Open Tracing \u2581API . \u2581// \u2581It \u2581is \u2581provided \u2581a \u2581function \u2581that \u2581will"], "bleu": 0.23669972700856406, "rouge_l": 0.49408099688473517}
{"id": 2120, "predictions": ["\u2581// \u2581 Delete Image \u2581deletes \u2581the \u2581 Image \u2581 Image \u2581from \u2581the \u2581 LXD \u2581 controller ."], "references": ["\u2581// \u2581 Delete Image \u2581requests \u2581that \u2581 LXD \u2581removes \u2581an \u2581image \u2581from \u2581the \u2581store"], "bleu": 0.25772294506990867, "rouge_l": 0.45963401506996776}
{"id": 3448, "predictions": ["\u2581// \u2581 Split \u2581 src \u2581 src \u2581into \u2581a \u2581 C - Image \u2581 Image"], "references": ["\u2581// \u2581 Split \u2581divide s \u2581a \u2581multi - channel \u2581array \u2581into \u2581several \u2581single - channel \u2581arrays ."], "bleu": 0.15411174368247596, "rouge_l": 0.3090172239108409}
{"id": 2227, "predictions": ["\u2581// \u2581is B tr fs Sub Volume \u2581returns \u2581true \u2581if \u2581 this \u2581volume \u2581is \u2581 B tr fs"], "references": ["\u2581// \u2581is B tr fs Sub Volume \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 Path \u2581is \u2581a \u2581 btrfs \u2581sub volume \u2581else \u2581// \u2581false ."], "bleu": 0.41110385873083316, "rouge_l": 0.6035007610350076}
{"id": 3977, "predictions": ["\u2581// \u2581find Go Tool \u2581 - \u2581 translate s \u2581the \u2581package \u2581 path \u2581to \u2581the \u2581package ."], "references": ["\u2581// \u2581find Go Tool \u2581attempts \u2581to \u2581locate \u2581the \u2581go \u2581executable . \u2581If \u2581 GO ROOT \u2581is \u2581 set , \u2581we ' ll \u2581// \u2581prefer \u2581the \u2581one \u2581in \u2581there ; \u2581otherwise"], "bleu": 0.11397517552080053, "rouge_l": 0.2837209302325582}
{"id": 3696, "predictions": ["\u2581// \u2581 Send \u2581a \u2581 call \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581failed \u2581 marks \u2581the \u2581writer \u2581as \u2581having \u2581failed"], "bleu": 0.1354599427337814, "rouge_l": 0.3055091819699499}
{"id": 3047, "predictions": ["\u2581// \u2581 Write Google Assets \u2581 uploads \u2581a \u2581 assets \u2581to \u2581a \u2581 Assets"], "references": ["\u2581// \u2581 Write Google Assets \u2581writes \u2581 assets \u2581to \u2581a \u2581 google \u2581backend ."], "bleu": 0.570282226440554, "rouge_l": 0.7142857142857143}
{"id": 2927, "predictions": ["\u2581// \u2581 Is ErrNo t Signed In \u2581checks \u2581if \u2581the \u2581given \u2581error \u2581is \u2581a \u2581 ErrNo t Signed \u2581object"], "references": ["\u2581// \u2581 Is ErrNo t Signed In \u2581returns \u2581true \u2581if \u2581' err ' \u2581is \u2581a \u2581 ErrNo t Signed In"], "bleu": 0.5628034654614363, "rouge_l": 0.7146443514644351}
{"id": 4051, "predictions": ["\u2581// \u2581 Deploy Cmd s \u2581 - \u2581 Deploy s \u2581the \u2581 app ' s \u2581 container"], "references": ["\u2581// \u2581 Deploy Cmd s \u2581deploy s \u2581an \u2581unit \u2581build ed \u2581by \u2581 t sur u ."], "bleu": 0.28433291815307693, "rouge_l": 0.4117647058823529}
{"id": 2953, "predictions": ["\u2581// \u2581 New P FS Input Opts \u2581creates \u2581a \u2581new \u2581 container . Input \u2581that \u2581can \u2581be \u2581used \u2581to \u2581create \u2581// \u2581a \u2581 container ."], "references": ["\u2581// \u2581 New P FS Input Opts \u2581returns \u2581a \u2581new \u2581 P FS \u2581input . \u2581It \u2581includes \u2581all \u2581options ."], "bleu": 0.32685141385924577, "rouge_l": 0.5442379182156134}
{"id": 2110, "predictions": ["\u2581// \u2581 set QueryParam \u2581sets \u2581the \u2581 URL \u2581parameter \u2581field ."], "references": ["\u2581// \u2581Set \u2581the \u2581value \u2581of \u2581a \u2581query \u2581parameter \u2581in \u2581the \u2581given \u2581URI ."], "bleu": 0.11941964005964323, "rouge_l": 0.3283983849259758}
{"id": 2515, "predictions": ["\u2581// \u2581assert KeyType \u2581returns \u2581the \u2581 name \u2581of \u2581a \u2581schema ."], "references": ["\u2581// \u2581Assert \u2581that \u2581the \u2581 Key \u2581with \u2581the \u2581given \u2581 name \u2581as \u2581the \u2581given \u2581 type . \u2581 Panic \u2581if \u2581no \u2581 Key \u2581// \u2581with \u2581such \u2581 name \u2581 exists"], "bleu": 0.03507268396779243, "rouge_l": 0.22509225092250923}
{"id": 2579, "predictions": ["\u2581// \u2581 Column Fields \u2581returns \u2581a \u2581list \u2581of \u2581fields \u2581that \u2581are \u2581in \u2581the \u2581 type ."], "references": ["\u2581// \u2581 Column Fields \u2581returns \u2581the \u2581fields \u2581that \u2581 map \u2581directly \u2581to \u2581a \u2581database \u2581column , \u2581// \u2581either \u2581on \u2581 this \u2581 table \u2581or \u2581on \u2581a \u2581joined \u2581one ."], "bleu": 0.15562061216997852, "rouge_l": 0.38019390581717455}
{"id": 3703, "predictions": ["\u2581// \u2581 Send \u2581the \u2581 Request Res"], "references": ["\u2581// \u2581failed \u2581indicates \u2581the \u2581reader \u2581failed"], "bleu": 0.20556680845025982, "rouge_l": 0.31202046035805625}
{"id": 2264, "predictions": ["\u2581// \u2581 GetInt 64 \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 key \u2581as \u2581int 64 \u2581or \u2581nil \u2581if \u2581not \u2581found ."], "references": ["\u2581// \u2581 GetInt 64 \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key , \u2581which \u2581must \u2581be \u2581of \u2581 type \u2581 Int 64."], "bleu": 0.42081772188247907, "rouge_l": 0.5193498452012384}
{"id": 2477, "predictions": ["\u2581// \u2581Default OS \u2581returns \u2581the \u2581default \u2581 OS \u2581 config \u2581for \u2581the \u2581 OS C \u2581 config ."], "references": ["\u2581// \u2581Default OS \u2581returns \u2581a \u2581fresh \u2581 uninitialized \u2581 OS \u2581instance \u2581with \u2581default \u2581values ."], "bleu": 0.2383041256525615, "rouge_l": 0.4929292929292929}
{"id": 3491, "predictions": ["\u2581// \u2581 Cat \u2581reads \u2581the \u2581 Shell \u2581from \u2581the \u2581 path \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581 Shell ."], "references": ["\u2581// \u2581 Cat \u2581the \u2581 content \u2581at \u2581the \u2581given \u2581 path . \u2581 Caller s \u2581need \u2581to \u2581 drain \u2581and \u2581 close \u2581the \u2581returned \u2581reader \u2581after \u2581usage ."], "bleu": 0.12196581087944353, "rouge_l": 0.4698331193838254}
{"id": 4010, "predictions": ["\u2581// \u2581Register Handler Version \u2581registers \u2581a \u2581version \u2581 path \u2581to \u2581the \u2581 T SM \u2581server ."], "references": ["\u2581// \u2581Register Handler Version \u2581inserts \u2581a \u2581handler \u2581on \u2581a \u2581list \u2581of \u2581 handlers"], "bleu": 0.23287896954139942, "rouge_l": 0.42165898617511516}
{"id": 3447, "predictions": ["\u2581// \u2581 Merge \u2581merges \u2581the \u2581given \u2581image \u2581to \u2581the \u2581 set \u2581of \u2581 src \u2581and \u2581returns \u2581the \u2581resulting \u2581// \u2581 Ip ."], "references": ["\u2581// \u2581 Merge \u2581creates \u2581one \u2581multi channel \u2581array \u2581out \u2581of \u2581several \u2581single - channel \u2581ones ."], "bleu": 0.11408424519986968, "rouge_l": 0.27087033747779754}
{"id": 3126, "predictions": ["\u2581// \u2581Check Type \u2581checks \u2581if \u2581the \u2581given \u2581 type \u2581is \u2581a \u2581valid \u2581 type ."], "references": ["\u2581// \u2581Check Type \u2581checks \u2581to \u2581make \u2581sure \u2581val \u2581has \u2581the \u2581same \u2581 type \u2581as \u2581template , \u2581unless \u2581// \u2581template \u2581is \u2581nil \u2581in \u2581which \u2581case \u2581it \u2581always \u2581returns \u2581nil ."], "bleu": 0.11320565968178264, "rouge_l": 0.386892177589852}
{"id": 3182, "predictions": ["\u2581// \u2581Extract All \u2581retrieves \u2581all \u2581 secrets \u2581from \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581Extract All \u2581cluster \u2581state \u2581as \u2581a \u2581 slice \u2581of \u2581operations ."], "bleu": 0.20468918037457082, "rouge_l": 0.34512022630834516}
{"id": 3814, "predictions": ["\u2581// \u2581 add Peer \u2581adds \u2581a \u2581peer \u2581to \u2581the \u2581heap ."], "references": ["\u2581// \u2581Add Peer \u2581adds \u2581a \u2581peer \u2581to \u2581the \u2581peer \u2581heap ."], "bleu": 0.5859059370151705, "rouge_l": 0.8181818181818181}
{"id": 2340, "predictions": ["\u2581// \u2581 Project Has Images \u2581returns \u2581the \u2581list \u2581of \u2581images \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Project Has Images \u2581is \u2581a \u2581 helper \u2581to \u2581check \u2581if \u2581a \u2581project \u2581has \u2581the \u2581images \u2581// \u2581feature \u2581enabled ."], "bleu": 0.21732777100157025, "rouge_l": 0.4412296564195298}
{"id": 2270, "predictions": ["\u2581// \u2581create SchemaTable \u2581creates \u2581a \u2581new \u2581 empty \u2581 DB ."], "references": ["\u2581// \u2581Create \u2581the \u2581schema \u2581 table ."], "bleu": 0.1354599427337814, "rouge_l": 0.3472485768500949}
{"id": 3610, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581handler \u2581for \u2581the \u2581given \u2581handler ."], "references": ["\u2581// \u2581Register \u2581registers \u2581a \u2581handler \u2581for \u2581a \u2581method . \u2581// \u2581// \u2581The \u2581handler \u2581is \u2581registered \u2581with \u2581the \u2581service \u2581 name \u2581used \u2581when \u2581the \u2581 Channel \u2581was \u2581// \u2581created . \u2581"], "bleu": 0.07086490174754785, "rouge_l": 0.36014760147601477}
{"id": 2585, "predictions": ["\u2581// \u2581 Field Args \u2581returns \u2581a \u2581 slice \u2581of \u2581fields \u2581that \u2581are \u2581 set \u2581in \u2581the \u2581fields \u2581of \u2581the \u2581field ."], "references": ["\u2581// \u2581 Field Args \u2581converts \u2581the \u2581given \u2581fields \u2581to \u2581function \u2581arguments , \u2581rendering \u2581their \u2581// \u2581 name \u2581and \u2581 type ."], "bleu": 0.19228544753133758, "rouge_l": 0.3333333333333333}
{"id": 2299, "predictions": ["\u2581// \u2581Get Certificates \u2581returns \u2581all \u2581the \u2581certificates \u2581in \u2581the \u2581 LXD \u2581 api"], "references": ["\u2581// \u2581Get Certificates \u2581returns \u2581a \u2581list \u2581of \u2581certificates"], "bleu": 0.27824623288353134, "rouge_l": 0.4975530179445351}
{"id": 3135, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 min io Writer ."], "references": ["\u2581// \u2581This \u2581will \u2581block \u2581 till \u2581upload \u2581is \u2581done"], "bleu": 0.13950796967929133, "rouge_l": 0.21254355400696867}
{"id": 3299, "predictions": ["\u2581// \u2581compute Diff ID \u2581returns \u2581the \u2581 \u2581digest \u2581of \u2581the \u2581given \u2581 decompressor ' s \u2581 contents ."], "references": ["\u2581// \u2581compute Diff ID \u2581reads \u2581all \u2581input \u2581from \u2581layer Stream , \u2581 uncompress es \u2581it \u2581using \u2581 decompressor \u2581if \u2581necessary , \u2581and \u2581returns \u2581its \u2581digest ."], "bleu": 0.15648040544437802, "rouge_l": 0.35209235209235207}
{"id": 2832, "predictions": ["\u2581// \u2581 New Put File Client \u2581creates \u2581a \u2581new \u2581 Put File Client"], "references": ["\u2581// \u2581 New Put File Client \u2581returns \u2581a \u2581new \u2581client \u2581for \u2581putting \u2581files \u2581into \u2581 pfs \u2581in \u2581a \u2581single \u2581request ."], "bleu": 0.26552935248827253, "rouge_l": 0.5078630897317299}
{"id": 2254, "predictions": ["\u2581// \u2581Get Profiles \u2581returns \u2581the \u2581profiles \u2581used \u2581by \u2581the \u2581 LXD \u2581 api \u2581server"], "references": ["\u2581// \u2581Get Profiles \u2581returns \u2581a \u2581list \u2581of \u2581available \u2581 Profile \u2581structs"], "bleu": 0.25748661016289676, "rouge_l": 0.40884718498659517}
{"id": 3495, "predictions": ["\u2581// \u2581 Version \u2581returns \u2581the \u2581version \u2581of \u2581the \u2581 Shell ."], "references": ["\u2581// \u2581returns \u2581 ipfs \u2581version \u2581and \u2581commit \u2581 sha"], "bleu": 0.14991106946711685, "rouge_l": 0.4073455759599332}
{"id": 2294, "predictions": ["\u2581// \u2581 Compare \u2581returns \u2581a \u2581 slice \u2581of \u2581two \u2581 items \u2581that \u2581are \u2581equal \u2581to \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581 Compare \u2581returns \u2581result \u2581of \u2581comparison \u2581between \u2581two \u2581versions"], "bleu": 0.18493046910349434, "rouge_l": 0.42558139534883715}
{"id": 3908, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581 key \u2581to \u2581the \u2581 Load \u2581 table ."], "references": ["\u2581// \u2581Add \u2581inserts \u2581a \u2581new \u2581 symbol \u2581into \u2581the \u2581load \u2581statement . \u2581This \u2581has \u2581no \u2581effect \u2581if \u2581// \u2581the \u2581 symbol \u2581is \u2581already \u2581loaded . \u2581 Symbols \u2581will \u2581be \u2581sorted"], "bleu": 0.04951719759387861, "rouge_l": 0.30391459074733096}
{"id": 3373, "predictions": ["\u2581// \u2581 RemoveAll Authentication \u2581removes \u2581the \u2581 auth \u2581 config \u2581from \u2581the \u2581docker \u2581registry"], "references": ["\u2581// \u2581 RemoveAll Authentication \u2581deletes \u2581all \u2581the \u2581credentials \u2581stored \u2581in \u2581 auth . json"], "bleu": 0.29256127307315066, "rouge_l": 0.5}
{"id": 2258, "predictions": ["\u2581// \u2581 Rename Profile \u2581rename s \u2581a \u2581profile \u2581profile ."], "references": ["\u2581// \u2581 Rename Profile \u2581rename s \u2581an \u2581existing \u2581profile \u2581entry"], "bleu": 0.5900468726392808, "rouge_l": 0.7000000000000001}
{"id": 3007, "predictions": ["\u2581// \u2581 NotEqual \u2581 asserts \u2581that \u2581the \u2581given \u2581value \u2581is \u2581a \u2581valid \u2581 type ."], "references": ["\u2581// \u2581 NotEqual \u2581checks \u2581in equality \u2581of \u2581two \u2581values ."], "bleu": 0.16188613565728213, "rouge_l": 0.3319727891156462}
{"id": 3769, "predictions": ["\u2581// \u2581new Message Exchange Set \u2581creates \u2581a \u2581new \u2581 Message Exchange Set \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581// \u2581 name ."], "references": ["\u2581// \u2581new Message Exchange Set \u2581creates \u2581a \u2581new \u2581message Exchange Set \u2581with \u2581a \u2581given \u2581 name ."], "bleu": 0.49227036815243036, "rouge_l": 0.7874354561101549}
{"id": 2297, "predictions": ["\u2581// \u2581project IsEmpty \u2581returns \u2581true \u2581if \u2581the \u2581project \u2581is \u2581in \u2581the \u2581 Project set"], "references": ["\u2581// \u2581Check \u2581if \u2581a \u2581project \u2581is \u2581 empty ."], "bleu": 0.13834368456410945, "rouge_l": 0.45252225519287836}
{"id": 3555, "predictions": ["\u2581// \u2581 get Validators \u2581returns \u2581the \u2581 slice \u2581of \u2581topic \u2581 IDs \u2581in \u2581the \u2581topic ."], "references": ["\u2581// \u2581 get Validators \u2581returns \u2581all \u2581 validators \u2581that \u2581 apply \u2581to \u2581a \u2581given \u2581message"], "bleu": 0.30277029197532096, "rouge_l": 0.45425531914893613}
{"id": 3550, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581to \u2581 get \u2581messages \u2581from \u2581 PubSub \u2581message"], "references": ["\u2581// \u2581 subscribed To Message \u2581returns \u2581whether \u2581we \u2581are \u2581 subscribed \u2581to \u2581one \u2581of \u2581the \u2581topics \u2581// \u2581of \u2581a \u2581given \u2581message"], "bleu": 0.08079339148488096, "rouge_l": 0.2821461609620721}
{"id": 2844, "predictions": ["\u2581// \u2581 Delete File \u2581deletes \u2581a \u2581file"], "references": ["\u2581// \u2581 Delete File \u2581deletes \u2581a \u2581file \u2581from \u2581a \u2581 Commit . \u2581// \u2581 Delete File \u2581 leaves \u2581a \u2581 tombstone \u2581in \u2581the \u2581 Commit , \u2581assuming \u2581the \u2581file \u2581isn"], "bleu": 0.03741385136723659, "rouge_l": 0.3402390438247012}
{"id": 2308, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581error \u2581message \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581 Error \u2581implements \u2581the \u2581error \u2581interface ."], "bleu": 0.2620251007173263, "rouge_l": 0.6500888099467139}
{"id": 2474, "predictions": ["\u2581// \u2581 Container Backup Remove \u2581removes \u2581the \u2581backup \u2581 remove \u2581from \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Container Backup Remove \u2581removes \u2581the \u2581 container \u2581backup \u2581with \u2581the \u2581given \u2581 name \u2581from \u2581// \u2581the \u2581database ."], "bleu": 0.3321528097085667, "rouge_l": 0.6421052631578947}
{"id": 2597, "predictions": ["\u2581// \u2581Get Exec Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 exec \u2581process"], "references": ["\u2581// \u2581Get Exec Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581current \u2581binary"], "bleu": 0.7577395672414201, "rouge_l": 0.8058124174372522}
{"id": 3761, "predictions": ["\u2581// \u2581 Wrap \u2581 wraps \u2581a \u2581context \u2581with \u2581the \u2581given \u2581context ."], "references": ["\u2581// \u2581 Wrap \u2581 wraps \u2581an \u2581existing \u2581context . Context \u2581into \u2581a \u2581 Context WithHeaders . \u2581// \u2581If \u2581the \u2581underlying \u2581context \u2581has \u2581 headers , \u2581they \u2581are \u2581preserved ."], "bleu": 0.11240909684940435, "rouge_l": 0.40848214285714285}
{"id": 2272, "predictions": ["\u2581// \u2581 New State \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 New State \u2581returns \u2581a \u2581new \u2581 State \u2581object \u2581with \u2581the \u2581given \u2581database \u2581and \u2581 operating \u2581// \u2581system \u2581components ."], "bleu": 0.18065951549294654, "rouge_l": 0.5078630897317299}
{"id": 2925, "predictions": ["\u2581// \u2581 Is ErrNo t Activated \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 ErrNo t Activated \u2581 - \u2581// \u2581 Not \u2581 - \u2581 Is ErrNo t Activated \u2581"], "references": ["\u2581// \u2581 Is ErrNo t Activated \u2581checks \u2581if \u2581an \u2581error \u2581is \u2581a \u2581 ErrNo t Activated"], "bleu": 0.37160442647213937, "rouge_l": 0.6440422322775264}
{"id": 3302, "predictions": ["\u2581// \u2581default Policy Path \u2581returns \u2581the \u2581default \u2581policy \u2581 path \u2581for \u2581the \u2581default \u2581policy"], "references": ["\u2581// \u2581default Policy Path \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581default \u2581policy \u2581of \u2581the \u2581system ."], "bleu": 0.39692877231857493, "rouge_l": 0.6587473002159828}
{"id": 2926, "predictions": ["\u2581// \u2581 Is Err NotSupported Activated \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581large \u2581 scaler \u2581 type ."], "references": ["\u2581// \u2581 Is Err Partially Activated \u2581checks \u2581if \u2581an \u2581error \u2581is \u2581a \u2581 Err Partially Activated"], "bleu": 0.25958657290343434, "rouge_l": 0.5803996194100857}
{"id": 2930, "predictions": ["\u2581// \u2581 Is Is Principal \u2581checks \u2581if \u2581the \u2581given \u2581error \u2581is \u2581a \u2581 GraphQL Principal ."], "references": ["\u2581// \u2581 Is ErrInvalid Principal \u2581returns \u2581true \u2581if \u2581' err ' \u2581is \u2581an \u2581 ErrInvalid Principal"], "bleu": 0.17534823156623092, "rouge_l": 0.5}
{"id": 2402, "predictions": ["\u2581// \u2581 stmt Code Var \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 type \u2581of \u2581a \u2581 type ."], "references": ["\u2581// \u2581Return \u2581the \u2581 name \u2581of \u2581the \u2581global \u2581variable \u2581holding \u2581the \u2581registration \u2581 code \u2581for \u2581// \u2581the \u2581given \u2581 kind \u2581of \u2581statement \u2581a gan st \u2581the \u2581given \u2581 entity ."], "bleu": 0.1553621574765733, "rouge_l": 0.438562091503268}
{"id": 4035, "predictions": ["\u2581// \u2581 Registry \u2581returns \u2581a \u2581list \u2581of \u2581 provisioner s \u2581that \u2581are \u2581registered \u2581in \u2581the \u2581// \u2581 provisioner ."], "references": ["\u2581// \u2581 Registry \u2581returns \u2581the \u2581list \u2581of \u2581registered \u2581 provisioner s ."], "bleu": 0.2812914871095839, "rouge_l": 0.6725468577728777}
{"id": 2103, "predictions": ["\u2581// \u2581 Fingerprint \u2581returns \u2581the \u2581fingerprint \u2581of \u2581the \u2581certificate \u2581 info"], "references": ["\u2581// \u2581 Fingerprint \u2581returns \u2581the \u2581fingerprint \u2581of \u2581the \u2581public \u2581 key ."], "bleu": 0.6658852464608146, "rouge_l": 0.7765205091937766}
{"id": 2275, "predictions": ["\u2581// \u2581 init Storage \u2581initializes \u2581the \u2581storage \u2581storage ."], "references": ["\u2581// \u2581Initialize \u2581storage \u2581interface \u2581for \u2581 this \u2581 container"], "bleu": 0.16784459625186196, "rouge_l": 0.2222222222222222}
{"id": 3898, "predictions": ["\u2581// \u2581 Match Build FileName \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581files \u2581in \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Match Build FileName \u2581looks \u2581for \u2581a \u2581file \u2581in \u2581files \u2581that \u2581has \u2581a \u2581 name \u2581from \u2581names . \u2581// \u2581If \u2581there \u2581is \u2581at \u2581least \u2581one \u2581matching \u2581file , \u2581a"], "bleu": 0.15595628746552004, "rouge_l": 0.3189542483660131}
{"id": 3384, "predictions": ["\u2581// \u2581image Matches Repo \u2581returns \u2581true \u2581if \u2581the \u2581image \u2581has \u2581a \u2581repository ."], "references": ["\u2581// \u2581image Matches Repo \u2581returns \u2581true \u2581if f \u2581image . Names \u2581 contains \u2581an \u2581element \u2581with \u2581the \u2581same \u2581repo \u2581as \u2581 ref"], "bleu": 0.278661040644384, "rouge_l": 0.4914950760966876}
{"id": 2195, "predictions": ["\u2581// \u2581 Delete Project \u2581deletes \u2581the \u2581project \u2581from \u2581the \u2581project ."], "references": ["\u2581// \u2581 Delete Project \u2581unset s \u2581the \u2581project \u2581 id \u2581from \u2581the \u2581 path \u2581and \u2581 clear s \u2581the \u2581quota \u2581for \u2581the \u2581project \u2581 id"], "bleu": 0.12144224328441251, "rouge_l": 0.4672340425531915}
{"id": 2662, "predictions": ["\u2581// \u2581 Profile Exists \u2581checks \u2581if \u2581the \u2581given \u2581 name \u2581is \u2581in \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Profile Exists \u2581checks \u2581if \u2581a \u2581profile \u2581with \u2581the \u2581given \u2581 key \u2581 exists ."], "bleu": 0.4265277238091732, "rouge_l": 0.5928725701943846}
{"id": 3586, "predictions": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 Peer List"], "references": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 Peer List \u2581as \u2581a \u2581 map \u2581from \u2581 hostPort \u2581to \u2581peer ."], "bleu": 0.40289032152913307, "rouge_l": 0.6508244422890399}
{"id": 3740, "predictions": ["\u2581// \u2581 Call Options \u2581returns \u2581a \u2581 Call Options \u2581object \u2581for \u2581 this \u2581 Inbound Call ."], "references": ["\u2581// \u2581 Call Options \u2581returns \u2581a \u2581 Call Options \u2581struct \u2581suitable \u2581for \u2581 forwarding \u2581a \u2581request ."], "bleu": 0.5611121564750133, "rouge_l": 0.7058823529411764}
{"id": 3643, "predictions": ["\u2581// \u2581 getOr Add \u2581returns \u2581a \u2581new \u2581 Sub Channel \u2581object \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 add \u2581// \u2581the \u2581given \u2581service \u2581to \u2581the \u2581given \u2581service ."], "references": ["\u2581// \u2581Get Or Add \u2581a \u2581sub channel \u2581for \u2581the \u2581given \u2581serviceName \u2581on \u2581the \u2581 map"], "bleu": 0.0755389958905035, "rouge_l": 0.3012345679012346}
{"id": 2894, "predictions": ["\u2581// \u2581Get Hash Tree Tag \u2581returns \u2581a \u2581hash \u2581tree \u2581for \u2581the \u2581given \u2581tag ."], "references": ["\u2581// \u2581Get Hash Tree Tag \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581deserialize \u2581a \u2581 Hash Tree \u2581from \u2581an \u2581 tagged \u2581object \u2581in \u2581the \u2581object \u2581store ."], "bleu": 0.16331688506234565, "rouge_l": 0.3904}
{"id": 3446, "predictions": ["\u2581// \u2581 F cp CC \u2581returns \u2581the \u2581 CC \u2581 CC \u2581 code \u2581for \u2581the \u2581 CC c c c c c c ."], "references": ["\u2581// \u2581 Prototype \u2581for \u2581 CV _ F OUR CC \u2581so \u2581that \u2581 swig \u2581can \u2581generate \u2581wrapper \u2581without \u2581mixin g \u2581up \u2581the \u2581define"], "bleu": 0.0877491027594595, "rouge_l": 0.2563025210084034}
{"id": 2331, "predictions": ["\u2581// \u2581 Write TempFile \u2581 write \u2581a \u2581directory \u2581to \u2581the \u2581given \u2581directory"], "references": ["\u2581// \u2581 Write TempFile \u2581creates \u2581a \u2581temp \u2581file \u2581with \u2581the \u2581specified \u2581 content"], "bleu": 0.299229756708663, "rouge_l": 0.4765625000000001}
{"id": 2338, "predictions": ["\u2581// \u2581 ProjectName s \u2581returns \u2581all \u2581 repositories \u2581that \u2581have \u2581been \u2581 owned \u2581by \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 ProjectName s \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581available \u2581projects ."], "bleu": 0.2928298013714697, "rouge_l": 0.4982497082847141}
{"id": 2935, "predictions": ["\u2581// \u2581 getIndex Path \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581 data , \u2581if \u2581it \u2581 exists ."], "references": ["\u2581// \u2581 G iving \u2581a \u2581value , \u2581an \u2581index , \u2581and \u2581the \u2581 key \u2581of \u2581the \u2581item , \u2581return \u2581the \u2581 path \u2581// \u2581under \u2581which \u2581the \u2581new \u2581index \u2581item \u2581should"], "bleu": 0.12899560604080965, "rouge_l": 0.2993865030674847}
{"id": 3233, "predictions": ["\u2581// \u2581 Start Span \u2581starts \u2581a \u2581 span \u2581for \u2581the \u2581specified \u2581operation"], "references": ["\u2581// \u2581 Start Span \u2581belongs \u2581to \u2581the \u2581 Tracer \u2581interface ."], "bleu": 0.31455601883230705, "rouge_l": 0.43821839080459773}
{"id": 3895, "predictions": ["\u2581// \u2581 Load Macro Data \u2581 loads \u2581a \u2581 File \u2581from \u2581a \u2581 path \u2581and \u2581returns \u2581a \u2581 File ."], "references": ["\u2581// \u2581 Load Macro Data \u2581parses \u2581a \u2581 bz l \u2581file \u2581from \u2581a \u2581 byte \u2581 slice \u2581and \u2581scan s \u2581for \u2581the \u2581load \u2581// \u2581statements \u2581and \u2581the \u2581rules \u2581called \u2581from"], "bleu": 0.19580106943542538, "rouge_l": 0.42468354430379746}
{"id": 2125, "predictions": ["\u2581// \u2581 Delete Image Alias \u2581deletes \u2581an \u2581image \u2581 alias \u2581from \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Delete Image Alias \u2581removes \u2581an \u2581 alias \u2581from \u2581the \u2581 LXD \u2581image \u2581store"], "bleu": 0.5533409598501607, "rouge_l": 0.7333333333333334}
{"id": 3508, "predictions": ["\u2581// \u2581 Lex \u2581returns \u2581the \u2581 token \u2581 type \u2581for \u2581the \u2581 lexer ."], "references": ["\u2581// \u2581 Lex \u2581returns \u2581the \u2581next \u2581 token \u2581 form \u2581the \u2581 Tokenizer . \u2581// \u2581This \u2581function \u2581is \u2581used \u2581by \u2581go \u2581 y acc ."], "bleu": 0.20870039503513366, "rouge_l": 0.5368}
{"id": 3661, "predictions": ["\u2581// \u2581 Write Single Byte \u2581writes \u2581the \u2581 byte \u2581 byte \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Write Single Byte \u2581writes \u2581a \u2581single \u2581 byte \u2581to \u2581the \u2581buffer"], "bleu": 0.6026080978557137, "rouge_l": 0.7959667852906288}
{"id": 3537, "predictions": ["\u2581// \u2581 New Flo o d sub With Protocols \u2581creates \u2581a \u2581new \u2581 Flo o d \u2581layer \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 New Flo o d sub With Protocols \u2581returns \u2581a \u2581new \u2581 flood sub - enabled \u2581 PubSub \u2581object ing \u2581using \u2581the \u2581 protocols \u2581specified \u2581in \u2581ps ."], "bleu": 0.3517821738587639, "rouge_l": 0.5651636812847437}
{"id": 3834, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581client \u2581for \u2581the \u2581given \u2581hosts ."], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581that \u2581can \u2581make \u2581calls \u2581to \u2581a \u2581benchmark \u2581server ."], "bleu": 0.32061397846312534, "rouge_l": 0.4682017543859649}
{"id": 2460, "predictions": ["\u2581// \u2581 Container Set ById \u2581returns \u2581a \u2581 container \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Container Set Stateful \u2581 toggle s \u2581the \u2581 stateful \u2581flag \u2581of \u2581the \u2581 container \u2581with \u2581the \u2581// \u2581given \u2581 ID ."], "bleu": 0.3151961940517168, "rouge_l": 0.6084788029925188}
{"id": 2893, "predictions": ["\u2581// \u2581Get Hash Tree Object \u2581returns \u2581a \u2581hash Tree \u2581object \u2581for \u2581the \u2581given \u2581 api ."], "references": ["\u2581// \u2581Get Hash Tree Object \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581deserialize \u2581a \u2581 Hash Tree \u2581from \u2581an \u2581object \u2581in \u2581the \u2581object \u2581store ."], "bleu": 0.21633771514346256, "rouge_l": 0.496742671009772}
{"id": 3882, "predictions": ["\u2581// \u2581restore Build Files In Repo \u2581 loads \u2581all \u2581the \u2581 contents \u2581of \u2581the \u2581build \u2581file \u2581to \u2581the \u2581// \u2581directory ."], "references": ["\u2581// \u2581restore Build Files In Repo \u2581copies \u2581 BUILD . in \u2581and \u2581 BUILD . baz el . in \u2581files \u2581and \u2581// \u2581copies \u2581them \u2581to \u2581 BUILD \u2581and \u2581 BUILD"], "bleu": 0.1960460170620623, "rouge_l": 0.34205607476635513}
{"id": 4005, "predictions": ["\u2581// \u2581 Hijack \u2581implements \u2581the \u2581http . Hijack er \u2581interface ."], "references": ["\u2581// \u2581 Hijack \u2581will \u2581 hijack \u2581the \u2581underlying \u2581 TCP \u2581connection , \u2581if \u2581available \u2581in \u2581the \u2581// \u2581 ResponseWriter ."], "bleu": 0.10352367155021043, "rouge_l": 0.3065326633165829}
{"id": 3879, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581platform ."], "references": ["\u2581// \u2581String \u2581returns \u2581 OS , \u2581 Arch , \u2581or \u2581\" OS _ Arch \" \u2581if \u2581both \u2581are \u2581 set . \u2581This \u2581must \u2581match \u2581// \u2581the \u2581names \u2581of \u2581 config"], "bleu": 0.036520949774262054, "rouge_l": 0.22932330827067668}
{"id": 2189, "predictions": ["\u2581// \u2581Get Caps \u2581returns \u2581the \u2581 capability \u2581from \u2581the \u2581 path"], "references": ["\u2581// \u2581Get Caps \u2581extracts \u2581the \u2581list \u2581of \u2581capabilities \u2581effective \u2581on \u2581the \u2581file"], "bleu": 0.21423488883339475, "rouge_l": 0.4314002828854314}
{"id": 2126, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581a \u2581new \u2581database ."], "references": ["\u2581// \u2581 Open \u2581the \u2581node - local \u2581database \u2581object ."], "bleu": 0.2601435417217584, "rouge_l": 0.5213675213675214}
{"id": 3082, "predictions": ["\u2581// \u2581validate Repo Name \u2581checks \u2581if \u2581the \u2581given \u2581repo \u2581 name \u2581is \u2581valid ."], "references": ["\u2581// \u2581validate Repo Name \u2581determines \u2581if \u2581a \u2581repo \u2581 name \u2581is \u2581valid"], "bleu": 0.5038920485259633, "rouge_l": 0.7800511508951408}
{"id": 2574, "predictions": ["\u2581// \u2581 Container Exists \u2581checks \u2581if \u2581a \u2581 container \u2581 exists \u2581in \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Container Exists \u2581checks \u2581if \u2581a \u2581 container \u2581with \u2581the \u2581given \u2581 key \u2581 exists ."], "bleu": 0.5541582055153461, "rouge_l": 0.6975051975051975}
{"id": 2351, "predictions": ["\u2581// \u2581Generate Client Certificate \u2581generates \u2581a \u2581certificate \u2581certificate \u2581for \u2581the \u2581 key"], "references": ["\u2581// \u2581Generate Client Certificate \u2581will \u2581generate \u2581the \u2581needed \u2581client . crt \u2581and \u2581client . key \u2581if \u2581needed"], "bleu": 0.2073681080883528, "rouge_l": 0.4013157894736842}
{"id": 2971, "predictions": ["\u2581// \u2581 Start Pipeline \u2581starts \u2581a \u2581pipeline"], "references": ["\u2581// \u2581 Start Pipeline \u2581restart s \u2581a \u2581stopped \u2581pipeline ."], "bleu": 0.3663311028927658, "rouge_l": 0.6841121495327103}
{"id": 4015, "predictions": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 apps \u2581in \u2581the \u2581 indexer ."], "references": ["\u2581// \u2581 List \u2581lists \u2581all \u2581 Apps \u2581in \u2581the \u2581 indexer ."], "bleu": 0.7611606003349892, "rouge_l": 0.9166666666666665}
{"id": 2215, "predictions": ["\u2581// \u2581 Proto Send Control \u2581sends \u2581a \u2581 Send Control \u2581message \u2581to \u2581a \u2581websocket ."], "references": ["\u2581// \u2581 Proto Send Control \u2581sends \u2581a \u2581migration \u2581control \u2581message \u2581over \u2581a \u2581websocket"], "bleu": 0.4958271734659374, "rouge_l": 0.7236061684460261}
{"id": 3180, "predictions": ["\u2581// \u2581 Inspect Cluster \u2581returns \u2581information \u2581about \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Inspect Cluster \u2581retrieves \u2581cluster \u2581state"], "bleu": 0.4111336169005197, "rouge_l": 0.639412997903564}
{"id": 2972, "predictions": ["\u2581// \u2581 Stop Pipeline \u2581stops \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 Stop Pipeline \u2581prevents \u2581a \u2581pipeline \u2581from \u2581processing \u2581things , \u2581it \u2581can \u2581be \u2581restarted \u2581// \u2581with \u2581 Start Pipeline ."], "bleu": 0.09198492174595936, "rouge_l": 0.3190376569037656}
{"id": 3525, "predictions": ["\u2581// \u2581 Encode SQL \u2581encodes \u2581 Value \u2581to \u2581 b ."], "references": ["\u2581// \u2581 Encode SQL \u2581encodes \u2581the \u2581value \u2581into \u2581an \u2581 SQL \u2581statement . \u2581 Can \u2581be \u2581binary ."], "bleu": 0.2443571853549041, "rouge_l": 0.5287107258938244}
{"id": 3290, "predictions": ["\u2581// \u2581 OCI 1 From Components \u2581converts \u2581a \u2581 OCI \u2581 Descriptor \u2581to \u2581a \u2581 OCI \u2581 OCI \u2581 OCI \u2581 OCI \u2581 Descriptor"], "references": ["\u2581// \u2581 OCI 1 From Components \u2581creates \u2581an \u2581 OCI 1 \u2581manifest \u2581instance \u2581from \u2581the \u2581supplied \u2581 data ."], "bleu": 0.2605892927044566, "rouge_l": 0.42757009345794394}
{"id": 2486, "predictions": ["\u2581// \u2581 close Listener \u2581is \u2581used \u2581to \u2581 close \u2581the \u2581endpoints \u2581for \u2581a \u2581given \u2581 kind ."], "references": ["\u2581// \u2581 Stop \u2581the \u2581HTTP \u2581server \u2581of \u2581the \u2581endpoint \u2581associated \u2581with \u2581the \u2581given \u2581 code . \u2581The \u2581// \u2581associated \u2581socket \u2581will \u2581be \u2581shutdown \u2581too ."], "bleu": 0.08122650797562653, "rouge_l": 0.2762264150943396}
{"id": 3503, "predictions": ["\u2581// \u2581 Publish \u2581 publishes \u2581a \u2581 text \u2581to \u2581the \u2581 Shell"], "references": ["\u2581// \u2581 Publish \u2581updates \u2581a \u2581mutable \u2581 name \u2581to \u2581point \u2581to \u2581a \u2581given \u2581value"], "bleu": 0.18827843861792215, "rouge_l": 0.45522388059701485}
{"id": 3833, "predictions": ["\u2581// \u2581register \u2581registers \u2581a \u2581handler \u2581for \u2581the \u2581handler ."], "references": ["\u2581// \u2581Registers \u2581a \u2581handler"], "bleu": 0.19960198807747329, "rouge_l": 0.4959349593495934}
{"id": 3464, "predictions": ["\u2581// \u2581 Sub Scalar With Mask \u2581 subtract s \u2581 IP \u2581from \u2581a \u2581 slice \u2581of \u2581 src \u2581to \u2581a \u2581 slice \u2581of \u2581 src ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581difference \u2581between \u2581an \u2581array \u2581and \u2581a \u2581scalar \u2581with \u2581a \u2581mask . \u2581// \u2581dst \u2581= \u2581 src \u2581 - \u2581value"], "bleu": 0.07850691379498788, "rouge_l": 0.1967741935483871}
{"id": 3268, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581the \u2581 name \u2581of \u2581the \u2581 container"], "references": ["\u2581// \u2581 registries DirPath \u2581returns \u2581a \u2581 path \u2581to \u2581 registries . d"], "bleu": 0.15310245441182443, "rouge_l": 0.2982885085574572}
{"id": 3982, "predictions": ["\u2581// \u2581 shouldIgnore \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581 git \u2581 git \u2581 git \u2581 path"], "references": ["\u2581// \u2581 shouldIgnore \u2581returns \u2581whether \u2581a \u2581 write \u2581to \u2581the \u2581given \u2581file \u2581should \u2581be \u2581ignored \u2581// \u2581because \u2581they \u2581were \u2581caused \u2581by \u2581 gaze ll e \u2581or \u2581 auto gaze ll"], "bleu": 0.13898172778571863, "rouge_l": 0.30886075949367087}
{"id": 3081, "predictions": ["\u2581// \u2581 Version \u2581returns \u2581the \u2581version \u2581of \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 Version \u2581returns \u2581the \u2581version \u2581of \u2581 pac hd \u2581as \u2581a \u2581string ."], "bleu": 0.46850730074624486, "rouge_l": 0.6472148541114059}
{"id": 3453, "predictions": ["\u2581// \u2581 And Scalar With Mask \u2581adds \u2581a \u2581 set \u2581of \u2581image \u2581to \u2581the \u2581specified \u2581 path ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581bit - wise \u2581 conjunction \u2581of \u2581an \u2581array \u2581and \u2581a \u2581scalar \u2581with \u2581a \u2581mask ."], "bleu": 0.07883940605755958, "rouge_l": 0.2023217247097844}
{"id": 3457, "predictions": ["\u2581// \u2581 Or Scalar With Mask \u2581creates \u2581a \u2581 set \u2581of \u2581image \u2581 type \u2581with \u2581a \u2581given \u2581mask ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581bit - wise \u2581 disjunction \u2581of \u2581an \u2581array \u2581and \u2581a \u2581scalar \u2581with \u2581a \u2581mask ."], "bleu": 0.11110906082717913, "rouge_l": 0.34687246141348493}
{"id": 4043, "predictions": ["\u2581// \u2581 Pools Constraints \u2581returns \u2581the \u2581 set \u2581of \u2581 pools \u2581for \u2581the \u2581given \u2581storage ."], "references": ["\u2581// \u2581 Pools Constraints \u2581return \u2581the \u2581pool \u2581constraints \u2581collection ."], "bleu": 0.23287896954139942, "rouge_l": 0.48157894736842105}
{"id": 2924, "predictions": ["\u2581// \u2581Parse Scope \u2581parses \u2581a \u2581 scope \u2581string \u2581and \u2581returns \u2581a \u2581 Scope \u2581object ."], "references": ["\u2581// \u2581Parse Scope \u2581parses \u2581the \u2581string \u2581' s ' \u2581to \u2581a \u2581 scope \u2581 ( for \u2581example , \u2581parsing \u2581a \u2581command - \u2581// \u2581line \u2581argument ."], "bleu": 0.1627617472517464, "rouge_l": 0.41876430205949655}
{"id": 3836, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581listener \u2581and \u2581closes \u2581the \u2581listener ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581listener . \u2581// \u2581Any \u2581blocked \u2581 Accept \u2581operations \u2581will \u2581be \u2581un blocked \u2581and \u2581return \u2581errors ."], "bleu": 0.25444749257061783, "rouge_l": 0.47332686711930166}
{"id": 3577, "predictions": ["\u2581// \u2581 Advertise \u2581 advertise s \u2581the \u2581 advertise \u2581and \u2581 advertise s \u2581the \u2581 advertise s \u2581// \u2581and \u2581returns \u2581the \u2581 active \u2581 advertise s ."], "references": ["\u2581// \u2581 Advertise \u2581 advertise s \u2581the \u2581service \u2581with \u2581 Hyper ba h n , \u2581and \u2581returns \u2581any \u2581errors \u2581on \u2581initial \u2581 advertisement . \u2581// \u2581 Advertise \u2581can \u2581register \u2581multiple"], "bleu": 0.26179532972312036, "rouge_l": 0.41709401709401706}
{"id": 3460, "predictions": ["\u2581// \u2581Add Scalar With Mask \u2581adds \u2581a \u2581 set \u2581of \u2581image \u2581to \u2581the \u2581 set \u2581of \u2581 src \u2581to \u2581dst ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581sum \u2581of \u2581an \u2581array \u2581and \u2581a \u2581scalar \u2581with \u2581a \u2581mask . \u2581// \u2581dst \u2581= \u2581 src \u2581+ \u2581value"], "bleu": 0.08723076162619453, "rouge_l": 0.21958243340532757}
{"id": 2051, "predictions": ["\u2581// \u2581 Patch \u2581applies \u2581the \u2581patch \u2581and \u2581returns \u2581the \u2581 map \u2581of \u2581 keys ."], "references": ["\u2581// \u2581 Patch \u2581changes \u2581only \u2581the \u2581configuration \u2581 keys \u2581in \u2581the \u2581given \u2581 map ."], "bleu": 0.22401521369401356, "rouge_l": 0.5333333333333332}
{"id": 2796, "predictions": ["\u2581// \u2581Create Repo \u2581creates \u2581a \u2581new \u2581repo"], "references": ["\u2581// \u2581Create Repo \u2581creates \u2581a \u2581new \u2581 Repo \u2581object \u2581in \u2581 pfs \u2581with \u2581the \u2581given \u2581 name . \u2581 Repos \u2581are \u2581// \u2581the \u2581 top \u2581level \u2581 data \u2581object \u2581in"], "bleu": 0.03146117349554454, "rouge_l": 0.29163346613545815}
{"id": 2111, "predictions": ["\u2581// \u2581Get Images \u2581returns \u2581the \u2581list \u2581of \u2581available \u2581images"], "references": ["\u2581// \u2581 Image \u2581handling \u2581function s \u2581// \u2581Get Images \u2581returns \u2581a \u2581list \u2581of \u2581available \u2581images \u2581as \u2581 Image \u2581structs"], "bleu": 0.2166211682500856, "rouge_l": 0.5368536853685368}
{"id": 2557, "predictions": ["\u2581// \u2581 Update Op \u2581updates \u2581the \u2581 Progress \u2581document ."], "references": ["\u2581// \u2581 Update Op \u2581is \u2581a \u2581 helper \u2581to \u2581update \u2581the \u2581 status \u2581using \u2581a \u2581 LXD \u2581API \u2581operation"], "bleu": 0.16406218625922425, "rouge_l": 0.3918629550321199}
{"id": 2962, "predictions": ["\u2581// \u2581 Stop Job \u2581stops \u2581a \u2581job"], "references": ["\u2581// \u2581 Stop Job \u2581stops \u2581a \u2581job ."], "bleu": 0.8668778997501817, "rouge_l": 0.9222462203023757}
{"id": 3115, "predictions": ["\u2581// \u2581 Run For Daemon \u2581runs \u2581the \u2581given \u2581application \u2581and \u2581runs \u2581the \u2581 container er ."], "references": ["\u2581// \u2581 Run For Daemon \u2581creates \u2581a \u2581port \u2581 forwarder \u2581for \u2581the \u2581 pac hd \u2581daemon ."], "bleu": 0.30658668997935346, "rouge_l": 0.4822134387351779}
{"id": 2961, "predictions": ["\u2581// \u2581 Delete Job \u2581deletes \u2581a \u2581job \u2581from \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 Delete Job \u2581deletes \u2581a \u2581job ."], "bleu": 0.6132297420585351, "rouge_l": 0.7584369449378331}
{"id": 3743, "predictions": ["\u2581// \u2581Set Application Error \u2581sets \u2581the \u2581 Inbound Error \u2581for \u2581the \u2581 Inbound Call Response ."], "references": ["\u2581// \u2581Set Application Error \u2581 marks \u2581the \u2581response \u2581as \u2581being \u2581an \u2581application \u2581error . \u2581This \u2581method \u2581can \u2581// \u2581only \u2581be \u2581called \u2581before \u2581any \u2581arguments \u2581have \u2581been \u2581sent \u2581to \u2581the \u2581calling"], "bleu": 0.10337337995132273, "rouge_l": 0.2885135135135135}
{"id": 2387, "predictions": ["\u2581// \u2581 StoragePool Node Volume Role By Project \u2581returns \u2581the \u2581specified \u2581volume \u2581 type \u2581for \u2581a \u2581given \u2581volume ."], "references": ["\u2581// \u2581 StoragePool Node Volume GetType By Project \u2581gets \u2581a \u2581single \u2581storage \u2581volume \u2581attached \u2581to \u2581a \u2581// \u2581given \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581 type , \u2581on \u2581the \u2581current \u2581node"], "bleu": 0.18377647367990005, "rouge_l": 0.392282958199357}
{"id": 2303, "predictions": ["\u2581// \u2581 Delete Certificate \u2581deletes \u2581a \u2581certificate \u2581from \u2581the \u2581 LXD \u2581 controller"], "references": ["\u2581// \u2581 Delete Certificate \u2581removes \u2581a \u2581certificate \u2581from \u2581the \u2581 LXD \u2581trust \u2581store"], "bleu": 0.6162607099729586, "rouge_l": 0.7692307692307693}
{"id": 2690, "predictions": ["\u2581// \u2581 Main RBD Volume Copy \u2581creates \u2581a \u2581new \u2581 RBD \u2581volume \u2581 config"], "references": ["\u2581// \u2581 ceph RBD Volume Copy \u2581copies \u2581an \u2581 RBD \u2581storage \u2581volume \u2581// \u2581This \u2581is \u2581a \u2581non - sparse \u2581copy \u2581which \u2581doesn ' t \u2581 introduce \u2581any \u2581dependency \u2581relationship \u2581//"], "bleu": 0.07676719059502947, "rouge_l": 0.3839160839160839}
{"id": 3129, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581pool \u2581and \u2581closes \u2581all \u2581connections ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581all \u2581connections \u2581stored \u2581in \u2581the \u2581pool , \u2581it \u2581returns \u2581an \u2581error \u2581if \u2581any \u2581// \u2581of \u2581the \u2581calls \u2581to \u2581 Close \u2581error ."], "bleu": 0.11915798444993492, "rouge_l": 0.3526011560693642}
{"id": 3815, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 T Chan Client"], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581 Client \u2581that \u2581makes \u2581calls \u2581over \u2581the \u2581given \u2581 t channel \u2581to \u2581the \u2581given \u2581 Hyper ba h n \u2581service ."], "bleu": 0.05448285485456052, "rouge_l": 0.3086003372681282}
{"id": 3942, "predictions": ["\u2581// \u2581check \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 config \u2581is \u2581valid ."], "references": ["\u2581// \u2581check \u2581returns \u2581true \u2581if \u2581at \u2581least \u2581one \u2581of \u2581the \u2581tag \u2581 groups \u2581is \u2581 satisfied ."], "bleu": 0.28507061823581925, "rouge_l": 0.6019736842105263}
{"id": 2900, "predictions": ["\u2581// \u2581 Put Dir \u2581 uploads \u2581the \u2581 path \u2581to \u2581the \u2581 Ordered Node ."], "references": ["\u2581// \u2581 Put Dir \u2581puts \u2581a \u2581directory \u2581in \u2581the \u2581hash tree ."], "bleu": 0.2490328638846773, "rouge_l": 0.4535315985130111}
{"id": 3540, "predictions": ["\u2581// \u2581 New Random Sub \u2581creates \u2581a \u2581new \u2581 PubSub \u2581object ."], "references": ["\u2581// \u2581 New Random Sub \u2581returns \u2581a \u2581new \u2581 PubSub \u2581object \u2581using \u2581 Random Sub Router \u2581as \u2581the \u2581 router ."], "bleu": 0.32361062159703086, "rouge_l": 0.6354166666666667}
{"id": 2945, "predictions": ["\u2581// \u2581 Keys \u2581returns \u2581the \u2581 keys \u2581of \u2581the \u2581cache ."], "references": ["\u2581// \u2581 Keys \u2581returns \u2581the \u2581 keys \u2581in \u2581sorted \u2581order ."], "bleu": 0.6315552371794037, "rouge_l": 0.7272727272727273}
{"id": 3413, "predictions": ["\u2581// \u2581 remove Dir Contents \u2581removes \u2581all \u2581files \u2581from \u2581the \u2581directory"], "references": ["\u2581// \u2581deletes \u2581the \u2581 contents \u2581of \u2581a \u2581directory"], "bleu": 0.14323145079400493, "rouge_l": 0.32504440497335696}
{"id": 3805, "predictions": ["\u2581// \u2581int To IP 4 \u2581converts \u2581a \u2581 4 \u2581 IP \u2581address \u2581to \u2581a \u2581 net . IP \u2581address ."], "references": ["\u2581// \u2581int To IP 4 \u2581converts \u2581an \u2581integer \u2581 IP \u2581representation \u2581into \u2581a \u2581 4- byte \u2581 net . IP \u2581struct"], "bleu": 0.42594588204425576, "rouge_l": 0.6313694267515925}
{"id": 3823, "predictions": ["\u2581// \u2581 Call List \u2581returns \u2581the \u2581 Call List \u2581for \u2581the \u2581 type \u2581of \u2581 this \u2581method ."], "references": ["\u2581// \u2581 Call List \u2581creates \u2581the \u2581 call \u2581to \u2581a \u2581function \u2581satisfy ing \u2581 Interface \u2581from \u2581an \u2581 Args \u2581struct ."], "bleu": 0.2017200873309299, "rouge_l": 0.45522388059701485}
{"id": 2350, "predictions": ["\u2581// \u2581 Has Client Certificate \u2581returns \u2581true \u2581if \u2581the \u2581configuration \u2581is \u2581 set"], "references": ["\u2581// \u2581 Has Client Certificate \u2581will \u2581return \u2581true \u2581if \u2581a \u2581client \u2581certificate \u2581has \u2581already \u2581been \u2581generated"], "bleu": 0.3124082452837443, "rouge_l": 0.4739178690344062}
{"id": 3273, "predictions": ["\u2581// \u2581do HTTP \u2581creates \u2581a \u2581HTTP \u2581HTTP \u2581request ."], "references": ["\u2581// \u2581do Http \u2581uses \u2581the \u2581clients \u2581internal \u2581 TLS \u2581configuration \u2581for \u2581doing \u2581the \u2581// \u2581provided \u2581HTTP \u2581request . \u2581It \u2581returns \u2581the \u2581response \u2581and \u2581an \u2581error \u2581on \u2581failure ."], "bleu": 0.037831953655452735, "rouge_l": 0.24736415247364155}
{"id": 2951, "predictions": ["\u2581// \u2581 Datum Tag Prefix \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Datum Tag Prefix \u2581hashes \u2581a \u2581pipeline \u2581salt \u2581to \u2581a \u2581string \u2581of \u2581a \u2581fixed \u2581 size \u2581for \u2581use \u2581as \u2581// \u2581the \u2581prefix \u2581for \u2581datum \u2581output \u2581trees . \u2581This \u2581prefix"], "bleu": 0.1379632118165202, "rouge_l": 0.41924398625429554}
{"id": 3630, "predictions": ["\u2581// \u2581 Put \u2581adds \u2581a \u2581new \u2581 relay \u2581to \u2581the \u2581 Pool Pool ."], "references": ["\u2581// \u2581 Put \u2581returns \u2581a \u2581 relay Timer \u2581back \u2581to \u2581the \u2581pool ."], "bleu": 0.23505204106959593, "rouge_l": 0.6711491442542787}
{"id": 2468, "predictions": ["\u2581// \u2581 Container Get Snapshots Full \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581snapshots \u2581for \u2581a \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Container Get Snapshots Full \u2581returns \u2581all \u2581 container \u2581objects \u2581for \u2581snapshots \u2581of \u2581a \u2581given \u2581 container"], "bleu": 0.4747354911173249, "rouge_l": 0.6666666666666666}
{"id": 3466, "predictions": ["\u2581// \u2581 Sub Scalar With Mask Rev \u2581adds \u2581a \u2581 dot \u2581 Y \u2581image \u2581to \u2581a \u2581 dot \u2581 dot \u2581 format"], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581difference \u2581between \u2581a \u2581scalar \u2581and \u2581an \u2581array \u2581with \u2581a \u2581mask . \u2581// \u2581dst \u2581= \u2581value \u2581 - \u2581 src"], "bleu": 0.06360128437923929, "rouge_l": 0.21034482758620687}
{"id": 3024, "predictions": ["\u2581// \u2581 Jobs \u2581returns \u2581a \u2581 slice \u2581of \u2581jobs \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581given \u2581etcd \u2581etcd ."], "references": ["\u2581// \u2581 Jobs \u2581returns \u2581a \u2581 Collection \u2581of \u2581jobs"], "bleu": 0.27748702735605824, "rouge_l": 0.5583524027459954}
{"id": 3212, "predictions": ["\u2581// \u2581 Filter Path \u2581returns \u2581a \u2581 Option \u2581that \u2581sets \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Filter Path \u2581returns \u2581a \u2581new \u2581 Option \u2581where \u2581opt \u2581is \u2581only \u2581evaluated \u2581if \u2581 filter \u2581 f \u2581// \u2581returns \u2581true \u2581for \u2581the \u2581current \u2581 Path \u2581in \u2581the \u2581value"], "bleu": 0.198247602457432, "rouge_l": 0.4315112540192926}
{"id": 2628, "predictions": ["\u2581// \u2581 code \u2581returns \u2581the \u2581 code \u2581of \u2581the \u2581 Buffer ."], "references": ["\u2581// \u2581Returns \u2581the \u2581source \u2581 code \u2581to \u2581 add \u2581to \u2581the \u2581target \u2581file ."], "bleu": 0.1479170582755855, "rouge_l": 0.45522388059701485}
{"id": 2884, "predictions": ["\u2581// \u2581 Copy \u2581copies \u2581the \u2581 contents \u2581of \u2581the \u2581 contents \u2581into \u2581a \u2581 Writer ."], "references": ["\u2581// \u2581 Copy \u2581copies \u2581a \u2581hash tree \u2581reader \u2581in \u2581a \u2581writer ."], "bleu": 0.23287896954139942, "rouge_l": 0.43990384615384615}
{"id": 3051, "predictions": ["\u2581// \u2581with Canonical Random ization Factor \u2581returns \u2581the \u2581maximum \u2581 exponential \u2581backoff \u2581// \u2581 width \u2581for \u2581the \u2581given \u2581 exponential \u2581backoff ."], "references": ["\u2581// \u2581with Canonical Random ization Factor \u2581is \u2581a \u2581utility \u2581function \u2581used \u2581by \u2581all \u2581// \u2581 New XYZ Backoff \u2581function s \u2581to \u2581 clamp \u2581 b . Random ization Factor \u2581to"], "bleu": 0.20727747162434973, "rouge_l": 0.37423312883435583}
{"id": 2086, "predictions": ["\u2581// \u2581check Trusted Client \u2581checks \u2581if \u2581authentication \u2581is \u2581authorized"], "references": ["\u2581// \u2581Convenience \u2581function \u2581around \u2581 Authenticate"], "bleu": 0.14113991930789777, "rouge_l": 0.13832199546485258}
{"id": 3668, "predictions": ["\u2581// \u2581 Write Len 8 String \u2581writes \u2581the \u2581 length \u2581of \u2581the \u2581buffer \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Write Len 8 String \u2581writes \u2581an \u2581 8- bit \u2581 length \u2581preceded \u2581string"], "bleu": 0.4251768826212766, "rouge_l": 0.5689119170984456}
{"id": 3183, "predictions": ["\u2581// \u2581Extract Writer \u2581returns \u2581the \u2581 set \u2581of \u2581objects \u2581for \u2581the \u2581given \u2581image ."], "references": ["\u2581// \u2581Extract Writer \u2581extracts \u2581all \u2581cluster \u2581state \u2581and \u2581marshal s \u2581it \u2581to \u2581 w ."], "bleu": 0.16951909200513388, "rouge_l": 0.34269662921348315}
{"id": 2819, "predictions": ["\u2581// \u2581 PutObject Async \u2581 - \u2581returns \u2581new \u2581 PutObject WriteCloser \u2581with \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 PutObject Async \u2581puts \u2581a \u2581value \u2581into \u2581the \u2581object \u2581store \u2581asynchronously ."], "bleu": 0.2186976686325118, "rouge_l": 0.40985442329227323}
{"id": 3103, "predictions": ["\u2581// \u2581 Commits \u2581returns \u2581a \u2581new \u2581 doc \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581etcd \u2581address ."], "references": ["\u2581// \u2581 Commits \u2581returns \u2581a \u2581collection \u2581of \u2581commits"], "bleu": 0.2646015952359329, "rouge_l": 0.4277699859747546}
{"id": 3778, "predictions": ["\u2581// \u2581 New Frame \u2581returns \u2581a \u2581new \u2581frame \u2581with \u2581the \u2581given \u2581payload ."], "references": ["\u2581// \u2581 New Frame \u2581 allocate s \u2581a \u2581new \u2581frame \u2581with \u2581the \u2581given \u2581payload \u2581capacity"], "bleu": 0.5999703042908046, "rouge_l": 0.7757225433526012}
{"id": 2581, "predictions": ["\u2581// \u2581 Ref Fields \u2581returns \u2581the \u2581fields \u2581of \u2581the \u2581mapping ."], "references": ["\u2581// \u2581 Ref Fields \u2581returns \u2581the \u2581fields \u2581that \u2581are \u2581one - to - many \u2581references \u2581to \u2581other \u2581// \u2581tables ."], "bleu": 0.2786631179160763, "rouge_l": 0.49045226130653274}
{"id": 3529, "predictions": ["\u2581// \u2581Walk Select \u2581walk s \u2581the \u2581 Select Node \u2581to \u2581the \u2581list \u2581of \u2581 SQL \u2581nodes ."], "references": ["\u2581// \u2581Walk Select \u2581normalize s \u2581the \u2581AST \u2581in \u2581 Select \u2581mode ."], "bleu": 0.18710158230410626, "rouge_l": 0.5694282380396732}
{"id": 3866, "predictions": ["\u2581// \u2581log Failed Registration Retry \u2581logs \u2581a \u2581 warning \u2581message \u2581with \u2581the \u2581given \u2581 rate \u2581level \u2581// \u2581 rate ."], "references": ["\u2581// \u2581log Failed Registration Retry \u2581logs \u2581either \u2581a \u2581 warning \u2581or \u2581 info \u2581depending \u2581on \u2581the \u2581number \u2581of \u2581// \u2581consecutive Failures . \u2581If \u2581consecutive Failures \u2581 > \u2581max Advertise Failures"], "bleu": 0.22823488822858948, "rouge_l": 0.46329113924050636}
{"id": 2466, "predictions": ["\u2581// \u2581 Container LastUsed Update \u2581updates \u2581the \u2581 LastUsed \u2581 v 1."], "references": ["\u2581// \u2581 Container LastUsed Update \u2581updates \u2581the \u2581last _ use _ date \u2581field \u2581of \u2581the \u2581 container \u2581// \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.2249722789181041, "rouge_l": 0.47164948453608246}
{"id": 3203, "predictions": ["\u2581// \u2581 format Map Key \u2581converts \u2581a \u2581 map \u2581of \u2581 type \u2581to \u2581a \u2581string ."], "references": ["\u2581// \u2581 format Map Key \u2581formats \u2581 v \u2581as \u2581if \u2581it \u2581were \u2581a \u2581 map \u2581 key . \u2581// \u2581The \u2581result \u2581is \u2581guaranteed \u2581to \u2581be \u2581a \u2581single \u2581line ."], "bleu": 0.1744704360955898, "rouge_l": 0.5069252077562327}
{"id": 3807, "predictions": ["\u2581// \u2581 New Stats d Reporter \u2581returns \u2581a \u2581new \u2581 Stats Reporter \u2581that \u2581 wraps \u2581the \u2581given \u2581// \u2581 statsd \u2581 Stats Reporter ."], "references": ["\u2581// \u2581 New Stats d Reporter \u2581returns \u2581a \u2581 Stats Reporter \u2581that \u2581reports \u2581to \u2581 statsd \u2581on \u2581the \u2581given \u2581 addr ."], "bleu": 0.47581040383390794, "rouge_l": 0.744971264367816}
{"id": 3669, "predictions": ["\u2581// \u2581 Write Len 16 String \u2581writes \u2581the \u2581 length \u2581of \u2581the \u2581 byte \u2581array \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Write Len 16 String \u2581writes \u2581a \u2581 16 - bit \u2581 length \u2581preceded \u2581string"], "bleu": 0.388172465412544, "rouge_l": 0.5223596574690771}
{"id": 3350, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface \u2581for \u2581 MediaType Signature ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface"], "bleu": 0.6262844962765469, "rouge_l": 0.8145400593471811}
{"id": 3252, "predictions": ["\u2581// \u2581 Tags \u2581returns \u2581a \u2581 map \u2581of \u2581tags \u2581for \u2581a \u2581 span ."], "references": ["\u2581// \u2581 Tags \u2581returns \u2581a \u2581copy \u2581of \u2581tags \u2581 accumulated \u2581by \u2581the \u2581 span \u2581so \u2581far"], "bleu": 0.35525479681911737, "rouge_l": 0.5928725701943846}
{"id": 2762, "predictions": ["\u2581// \u2581 New Debug Server \u2581creates \u2581a \u2581new \u2581 debug \u2581server"], "references": ["\u2581// \u2581 New Debug Server \u2581creates \u2581a \u2581new \u2581server \u2581that \u2581serves \u2581the \u2581 debug \u2581 api \u2581over \u2581 GRPC"], "bleu": 0.3798513017037065, "rouge_l": 0.6360792492179353}
{"id": 3109, "predictions": ["\u2581// \u2581 Leaves \u2581returns \u2581a \u2581list \u2581of \u2581 DAG \u2581names \u2581that \u2581are \u2581 eligible \u2581for \u2581 this \u2581 DAG ."], "references": ["\u2581// \u2581 Leaves \u2581returns \u2581a \u2581 slice \u2581containing \u2581all \u2581 leaves \u2581in \u2581 d ."], "bleu": 0.25422541413895555, "rouge_l": 0.5278846153846154}
{"id": 3178, "predictions": ["\u2581// \u2581 Time Difference \u2581returns \u2581a \u2581string \u2581representing \u2581the \u2581difference \u2581of \u2581the \u2581given \u2581// \u2581timestamp \u2581to \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 Time Difference \u2581pretty - print s \u2581the \u2581duration \u2581of \u2581time \u2581between \u2581from \u2581// \u2581and \u2581to \u2581as \u2581a \u2581human - re ab able \u2581string ."], "bleu": 0.1567620478632633, "rouge_l": 0.38231197771587744}
{"id": 2537, "predictions": ["\u2581// \u2581 Container Storage Ready \u2581returns \u2581the \u2581 Filesystem \u2581for \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Things \u2581we \u2581do \u2581have \u2581to \u2581care \u2581about"], "bleu": 0.11633270842295028, "rouge_l": 0.18100890207715134}
{"id": 3158, "predictions": ["\u2581// \u2581 WriteTo Streaming Bytes Server \u2581writes \u2581a \u2581 protobuf \u2581 data \u2581to \u2581a \u2581 Reader ."], "references": ["\u2581// \u2581 WriteTo Streaming Bytes Server \u2581writes \u2581the \u2581 data \u2581from \u2581the \u2581io . Reader \u2581to \u2581the \u2581 Streaming Bytes Server ."], "bleu": 0.3446418248291757, "rouge_l": 0.6014790468364831}
{"id": 2848, "predictions": ["\u2581// \u2581recursive Block Quote \u2581example \u2581is \u2581used \u2581to \u2581 strip \u2581all \u2581 templates"], "references": ["\u2581// \u2581Walk \u2581the \u2581command \u2581tree , \u2581wrap \u2581any \u2581examples \u2581in \u2581a \u2581block - quote \u2581with \u2581shell \u2581 highlighting"], "bleu": 0.07195858996018069, "rouge_l": 0.12538540596094552}
{"id": 3124, "predictions": ["\u2581// \u2581 Unmarshal Prev \u2581unmarshal s \u2581a \u2581 key \u2581from \u2581the \u2581event ."], "references": ["\u2581// \u2581 Unmarshal Prev \u2581unmarshal s \u2581the \u2581prev \u2581item \u2581in \u2581an \u2581event \u2581into \u2581a \u2581 protobuf \u2581// \u2581message ."], "bleu": 0.3241323542425451, "rouge_l": 0.5441030723488601}
{"id": 3288, "predictions": ["\u2581// \u2581 Blob Info From OCI 1 Descriptor \u2581returns \u2581a \u2581 Blob Info \u2581from \u2581the \u2581given \u2581// \u2581 OCI Descriptor ."], "references": ["\u2581// \u2581 Blob Info From OCI 1 Descriptor \u2581returns \u2581a \u2581types . Blob Info \u2581based \u2581on \u2581the \u2581input \u2581 OCI 1 \u2581descriptor ."], "bleu": 0.48895950589172876, "rouge_l": 0.721359940872136}
{"id": 2311, "predictions": ["\u2581// \u2581 Update Schema \u2581updates \u2581the \u2581schema \u2581of \u2581the \u2581schema ."], "references": ["\u2581// \u2581 Update Schema \u2581updates \u2581the \u2581schema . go \u2581file \u2581of \u2581the \u2581cluster \u2581and \u2581node \u2581 databases ."], "bleu": 0.38891302103085124, "rouge_l": 0.6608884073672807}
{"id": 3825, "predictions": ["\u2581// \u2581 Wrap Result \u2581 wraps \u2581a \u2581string \u2581and \u2581returns \u2581a \u2581 descriptive \u2581error \u2581if \u2581the \u2581// \u2581error \u2581is \u2581not \u2581a \u2581valid \u2581 type ."], "references": ["\u2581// \u2581 Wrap Result \u2581 wraps \u2581the \u2581result \u2581variable \u2581before \u2581being \u2581used \u2581in \u2581the \u2581result \u2581struct ."], "bleu": 0.23423016820418144, "rouge_l": 0.39450282942603077}
{"id": 3522, "predictions": ["\u2581// \u2581 Back Width \u2581returns \u2581a \u2581 hex - encoded \u2581string \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Back tick \u2581produces \u2581a \u2581 backtick ed \u2581literal \u2581given \u2581an \u2581input \u2581string ."], "bleu": 0.18295654224495206, "rouge_l": 0.45425531914893613}
{"id": 3111, "predictions": ["\u2581// \u2581 Descendants \u2581returns \u2581a \u2581list \u2581of \u2581strings \u2581that \u2581are \u2581not \u2581present \u2581in \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 Descendants \u2581returns \u2581a \u2581 slice \u2581containing \u2581all \u2581 descendants \u2581of \u2581a \u2581node , \u2581' id ', \u2581// \u2581in \u2581 d \u2581which \u2581are \u2581an \u2581ancestor \u2581of \u2581at \u2581least \u2581one"], "bleu": 0.1490073107578834, "rouge_l": 0.3189542483660131}
{"id": 3808, "predictions": ["\u2581// \u2581 Unmarshal Text \u2581unmarshal s \u2581a \u2581 text \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581 Text Un Marshaler \u2581from \u2581encoding"], "bleu": 0.23287896954139942, "rouge_l": 0.45979899497487436}
{"id": 2113, "predictions": ["\u2581// \u2581Get Image Secret \u2581returns \u2581the \u2581 secret \u2581 name \u2581of \u2581the \u2581image ."], "references": ["\u2581// \u2581Get Image Secret \u2581is \u2581a \u2581 helper \u2581around \u2581Create Image Secret \u2581that \u2581returns \u2581a \u2581 secret \u2581for \u2581the \u2581image"], "bleu": 0.2160039120218823, "rouge_l": 0.5130841121495328}
{"id": 2399, "predictions": ["\u2581// \u2581 Patches Mark Applied \u2581 patches \u2581the \u2581node \u2581with \u2581 name"], "references": ["\u2581// \u2581 Patches Mark Applied \u2581 marks \u2581the \u2581patch \u2581with \u2581the \u2581given \u2581 name \u2581as \u2581applied \u2581on \u2581 this \u2581node ."], "bleu": 0.2642269660858719, "rouge_l": 0.5776515151515151}
{"id": 3567, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581client \u2581client"], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581 json . Client \u2581used \u2581to \u2581make \u2581outbound \u2581JSON \u2581calls ."], "bleu": 0.11610218285945821, "rouge_l": 0.31443298969072164}
{"id": 3199, "predictions": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581index \u2581 path \u2581for \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581it h \u2581step \u2581in \u2581the \u2581 Path \u2581and \u2581supports \u2581negative \u2581indexing . \u2581// \u2581 A \u2581negative \u2581index \u2581starts \u2581count ing \u2581from \u2581the \u2581tail \u2581of \u2581the"], "bleu": 0.10751100696282835, "rouge_l": 0.30391459074733096}
{"id": 3760, "predictions": ["\u2581// \u2581 Child \u2581returns \u2581a \u2581new \u2581 Context \u2581containing \u2581the \u2581 headers \u2581in \u2581the \u2581 Context ."], "references": ["\u2581// \u2581 Child \u2581creates \u2581a \u2581child \u2581context \u2581with \u2581a \u2581separate \u2581 container \u2581for \u2581 headers ."], "bleu": 0.17694975149532557, "rouge_l": 0.48751248751248744}
{"id": 3762, "predictions": ["\u2581// \u2581 Wrap WithHeaders \u2581 wraps \u2581a \u2581 Request \u2581with \u2581a \u2581 headers ."], "references": ["\u2581// \u2581 Wrap WithHeaders \u2581returns \u2581a \u2581 Context \u2581that \u2581can \u2581be \u2581used \u2581to \u2581make \u2581a \u2581 call \u2581with \u2581request \u2581 headers . \u2581// \u2581If \u2581the \u2581parent \u2581` ctx ` \u2581is"], "bleu": 0.1273087657056144, "rouge_l": 0.4692307692307692}
{"id": 2075, "predictions": ["\u2581// \u2581 Project Exists \u2581checks \u2581if \u2581a \u2581 Project \u2581is \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Project Exists \u2581checks \u2581if \u2581a \u2581project \u2581with \u2581the \u2581given \u2581 key \u2581 exists ."], "bleu": 0.4467092575755771, "rouge_l": 0.5928725701943846}
{"id": 3283, "predictions": ["\u2581// \u2581change State \u2581saves \u2581the \u2581policy \u2581and \u2581validates \u2581the \u2581policy ."], "references": ["\u2581// \u2581change Context State \u2581changes \u2581pc . state , \u2581or \u2581fails \u2581if \u2581the \u2581state \u2581is \u2581unexpected"], "bleu": 0.11315783212651204, "rouge_l": 0.28672150411280845}
{"id": 2929, "predictions": ["\u2581// \u2581 Is Err HealthStatus \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 fatal \u2581error ."], "references": ["\u2581// \u2581 Is Err NotAuthorized \u2581checks \u2581if \u2581an \u2581error \u2581is \u2581a \u2581 Err NotAuthorized"], "bleu": 0.36821398145189993, "rouge_l": 0.6073008849557523}
{"id": 2434, "predictions": ["\u2581// \u2581 DeviceName s \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 slice \u2581of \u2581 Devices"], "references": ["\u2581// \u2581 DeviceName s \u2581returns \u2581the \u2581 name \u2581of \u2581all \u2581devices \u2581in \u2581the \u2581 set , \u2581sorted \u2581properly"], "bleu": 0.5127583772775618, "rouge_l": 0.6559139784946237}
{"id": 2940, "predictions": ["\u2581// \u2581 Watch \u2581is \u2581a \u2581 watch \u2581function \u2581that \u2581 watches \u2581for \u2581changes \u2581to \u2581the \u2581 config ."], "references": ["\u2581// \u2581 Watch \u2581a \u2581collection , \u2581returning \u2581the \u2581current \u2581 content \u2581of \u2581the \u2581collection \u2581as \u2581// \u2581well \u2581as \u2581any \u2581future \u2581 additions ."], "bleu": 0.11757428093403516, "rouge_l": 0.3818466353677621}
{"id": 3992, "predictions": ["\u2581// \u2581Register Fail Handler With T \u2581creates \u2581a \u2581new \u2581handler \u2581for \u2581 Fail Handler \u2581with \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581Register Fail Handler With T \u2581ensures \u2581that \u2581the \u2581given \u2581types . T With Helper \u2581and \u2581fail \u2581handler \u2581// \u2581are \u2581used \u2581globally ."], "bleu": 0.27696006905199483, "rouge_l": 0.41340361445783136}
{"id": 3919, "predictions": ["\u2581// \u2581 Private Attr Keys \u2581returns \u2581the \u2581 keys \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581 Rule"], "references": ["\u2581// \u2581 Private Attr Keys \u2581returns \u2581a \u2581sorted \u2581list \u2581of \u2581private \u2581attribute \u2581names ."], "bleu": 0.3381307292971254, "rouge_l": 0.45963401506996776}
{"id": 2587, "predictions": ["\u2581// \u2581 Field Criteria \u2581returns \u2581a \u2581 slice \u2581of \u2581fields \u2581that \u2581match \u2581the \u2581field ."], "references": ["\u2581// \u2581 Field Criteria \u2581converts \u2581the \u2581given \u2581fields \u2581to \u2581AND - separated \u2581WHERE \u2581 criteria ."], "bleu": 0.24807889278164413, "rouge_l": 0.38485804416403785}
{"id": 3782, "predictions": ["\u2581// \u2581 Has Retries \u2581checks \u2581if \u2581the \u2581given \u2581error \u2581is \u2581 set \u2581to \u2581the \u2581 set \u2581of \u2581// \u2581 this \u2581request ."], "references": ["\u2581// \u2581 Has Retries \u2581will \u2581return \u2581true \u2581if \u2581there \u2581are \u2581more \u2581retries \u2581 left ."], "bleu": 0.1733705613469748, "rouge_l": 0.39174311926605504}
{"id": 2480, "predictions": ["\u2581// \u2581 Refresh \u2581 refresh es \u2581the \u2581current \u2581state \u2581of \u2581the \u2581operation ."], "references": ["\u2581// \u2581 Refresh \u2581pull s \u2581the \u2581current \u2581version \u2581of \u2581the \u2581operation \u2581and \u2581updates \u2581the \u2581struct"], "bleu": 0.24569871671253493, "rouge_l": 0.5641618497109826}
{"id": 3949, "predictions": ["\u2581// \u2581 Is Self Import \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 label \u2581is \u2581a \u2581valid \u2581import ."], "references": ["\u2581// \u2581 Is Self Import \u2581returns \u2581true \u2581if \u2581the \u2581result ' s \u2581 label \u2581matches \u2581the \u2581given \u2581 label \u2581// \u2581or \u2581the \u2581result ' s \u2581rule \u2581 transitive ly \u2581"], "bleu": 0.2988566571121597, "rouge_l": 0.48637873754152827}
{"id": 3244, "predictions": ["\u2581// \u2581 Emit Lazy Logger \u2581implements \u2581the \u2581 KeyValue \u2581interface ."], "references": ["\u2581// \u2581 Emit Lazy Logger \u2581belongs \u2581to \u2581the \u2581log . Encoder \u2581interface"], "bleu": 0.42161204844881867, "rouge_l": 0.603960396039604}
{"id": 3810, "predictions": ["\u2581// \u2581 Pop \u2581removes \u2581the \u2581 oldest \u2581element \u2581from \u2581the \u2581heap ."], "references": ["\u2581// \u2581 Pop \u2581implements \u2581heap \u2581 Pop \u2581interface"], "bleu": 0.21401603033752975, "rouge_l": 0.4149659863945578}
{"id": 3738, "predictions": ["\u2581// \u2581handle Call Req Continue \u2581is \u2581called \u2581when \u2581the \u2581 Call Req Request \u2581is \u2581 set \u2581to \u2581the \u2581// \u2581connection ."], "references": ["\u2581// \u2581handle Call Req Continue \u2581handles \u2581the \u2581 continuation \u2581of \u2581a \u2581 call \u2581request , \u2581 forwarding \u2581// \u2581it \u2581to \u2581the \u2581request \u2581channel \u2581for \u2581that \u2581request , \u2581where \u2581it \u2581can"], "bleu": 0.17932157037142718, "rouge_l": 0.38006230529595014}
{"id": 3691, "predictions": ["\u2581// \u2581 Arg 2 Reader \u2581returns \u2581a \u2581 Arg o Reader \u2581 type \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581 Arg 2 Reader \u2581returns \u2581an \u2581 Arg Reader \u2581to \u2581read \u2581the \u2581second \u2581argument . \u2581// \u2581The \u2581 ReadCloser \u2581must \u2581be \u2581closed \u2581once \u2581the \u2581argument \u2581has \u2581been \u2581read ."], "bleu": 0.18468309114144724, "rouge_l": 0.48637873754152827}
{"id": 2122, "predictions": ["\u2581// \u2581Create Image Alias \u2581creates \u2581a \u2581 alias \u2581for \u2581a \u2581 Image Aliases"], "references": ["\u2581// \u2581Create Image Alias \u2581sets \u2581up \u2581a \u2581new \u2581image \u2581 alias"], "bleu": 0.3161487584488943, "rouge_l": 0.5922330097087377}
{"id": 3922, "predictions": ["\u2581// \u2581 IsEmpty \u2581returns \u2581true \u2581if \u2581the \u2581rule \u2581is \u2581 empty ."], "references": ["\u2581// \u2581 IsEmpty \u2581returns \u2581true \u2581when \u2581the \u2581rule \u2581 contains \u2581 none \u2581of \u2581the \u2581attributes \u2581in \u2581attrs \u2581// \u2581for \u2581its \u2581 kind . \u2581attrs \u2581should \u2581contain \u2581attributes \u2581that \u2581make \u2581the"], "bleu": 0.10098621160144783, "rouge_l": 0.3978260869565217}
{"id": 3915, "predictions": ["\u2581// \u2581 Attr String \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581 key \u2581in \u2581the \u2581 Rule ."], "references": ["\u2581// \u2581 Attr String \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581named \u2581attribute \u2581if \u2581it \u2581is \u2581a \u2581scalar \u2581string . \u2581// \u2581\"\" \u2581is \u2581returned \u2581if \u2581the \u2581attribute \u2581is \u2581not \u2581 set \u2581or"], "bleu": 0.21921281349372848, "rouge_l": 0.45337837837837835}
{"id": 3614, "predictions": ["\u2581// \u2581 Ping \u2581implements \u2581the \u2581 Ping er \u2581interface \u2581for \u2581 Channel ."], "references": ["\u2581// \u2581 Ping \u2581sends \u2581a \u2581 ping \u2581message \u2581to \u2581the \u2581given \u2581 hostPort \u2581and \u2581waits \u2581for \u2581a \u2581response ."], "bleu": 0.13724404296861528, "rouge_l": 0.4231912784935579}
{"id": 2967, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581true \u2581if \u2581the \u2581log \u2581 iterator \u2581is \u2581closed ."], "references": ["\u2581// \u2581 Next \u2581retrieves \u2581the \u2581next \u2581relevant \u2581log \u2581message \u2581from \u2581 pac hd"], "bleu": 0.2044800736021839, "rouge_l": 0.4615384615384617}
{"id": 3612, "predictions": ["\u2581// \u2581Get Sub Channel \u2581returns \u2581a \u2581new \u2581 Sub Channel \u2581object \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Sub Channel \u2581returns \u2581a \u2581 Sub Channel \u2581for \u2581the \u2581given \u2581service \u2581 name . \u2581If \u2581the \u2581sub channel \u2581does \u2581not \u2581// \u2581exist , \u2581it \u2581is \u2581created ."], "bleu": 0.2472387368405282, "rouge_l": 0.5813478556841388}
{"id": 2646, "predictions": ["\u2581// \u2581 Nodes Count \u2581returns \u2581the \u2581number \u2581of \u2581nodes \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Nodes Count \u2581returns \u2581the \u2581number \u2581of \u2581nodes \u2581in \u2581the \u2581 LXD \u2581cluster . \u2581// \u2581// \u2581Since \u2581there ' s \u2581always \u2581at \u2581least \u2581one \u2581node \u2581row , \u2581even \u2581when"], "bleu": 0.24088128802106726, "rouge_l": 0.5644128113879003}
{"id": 2327, "predictions": ["\u2581// \u2581 File Move \u2581moves \u2581a \u2581file \u2581to \u2581a \u2581file . \u2581// \u2581 File \u2581must \u2581be \u2581a \u2581file \u2581 path ."], "references": ["\u2581// \u2581 File Move \u2581tries \u2581to \u2581move \u2581a \u2581file \u2581by \u2581using \u2581os . Rename , \u2581// \u2581if \u2581that \u2581fails \u2581it \u2581tries \u2581to \u2581copy \u2581the \u2581file \u2581and \u2581 remove \u2581the \u2581source"], "bleu": 0.13862546808919785, "rouge_l": 0.41806853582554515}
{"id": 3110, "predictions": ["\u2581// \u2581 Ancestors \u2581returns \u2581the \u2581list \u2581of \u2581 DAG s \u2581that \u2581are \u2581 owned \u2581by \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 Ancestors \u2581returns \u2581a \u2581 slice \u2581containing \u2581all \u2581 ancestors \u2581of \u2581a \u2581node , \u2581' id ', \u2581// \u2581in \u2581 d \u2581which \u2581are \u2581a \u2581 descendant \u2581of \u2581at \u2581least"], "bleu": 0.1255841676923334, "rouge_l": 0.30886075949367087}
{"id": 3822, "predictions": ["\u2581// \u2581 Arg List \u2581returns \u2581a \u2581string \u2581list \u2581of \u2581all \u2581arguments ."], "references": ["\u2581// \u2581 Arg List \u2581returns \u2581the \u2581argument \u2581list \u2581for \u2581the \u2581function ."], "bleu": 0.4089601472043678, "rouge_l": 0.5833333333333334}
{"id": 3326, "predictions": ["\u2581// \u2581 RetryPolicy Image \u2581returns \u2581true \u2581if \u2581the \u2581image \u2581is \u2581 empty ."], "references": ["\u2581// \u2581 isMulti Image \u2581returns \u2581true \u2581if \u2581 img \u2581is \u2581a \u2581list \u2581of \u2581images"], "bleu": 0.3014896054317117, "rouge_l": 0.5150784077201447}
{"id": 3206, "predictions": ["\u2581// \u2581 format Pointer \u2581formats \u2581the \u2581given \u2581struct \u2581to \u2581the \u2581given \u2581struct ."], "references": ["\u2581// \u2581 format Pointer \u2581prints \u2581the \u2581address \u2581of \u2581the \u2581pointer ."], "bleu": 0.29899503549981366, "rouge_l": 0.5922330097087377}
{"id": 3123, "predictions": ["\u2581// \u2581 Unmarshal \u2581unmarshal s \u2581a \u2581 key \u2581into \u2581a \u2581 protobuf \u2581 type ."], "references": ["\u2581// \u2581 Unmarshal \u2581unmarshal s \u2581the \u2581item \u2581in \u2581an \u2581event \u2581into \u2581a \u2581 protobuf \u2581message ."], "bleu": 0.4386820411938891, "rouge_l": 0.6414300736067298}
{"id": 3431, "predictions": ["\u2581// \u2581 Matches Digest \u2581checks \u2581if \u2581the \u2581given \u2581digest \u2581matches \u2581the \u2581digest \u2581and \u2581digest ."], "references": ["\u2581// \u2581 Matches Digest \u2581returns \u2581true \u2581if f \u2581the \u2581manifest \u2581matches \u2581expected Digest . \u2581// \u2581 Error \u2581may \u2581be \u2581 set \u2581if \u2581 this \u2581returns \u2581false . \u2581// \u2581Note \u2581that"], "bleu": 0.09755472262973743, "rouge_l": 0.3353951890034364}
{"id": 3806, "predictions": ["\u2581// \u2581service Peer To HostPort \u2581returns \u2581the \u2581 IP \u2581address \u2581of \u2581the \u2581given \u2581service ."], "references": ["\u2581// \u2581service Peer To HostPort \u2581converts \u2581a \u2581 Hyper ba h n \u2581 Service Peer \u2581into \u2581a \u2581 hostPort \u2581string ."], "bleu": 0.21703104381264227, "rouge_l": 0.37754199823165346}
{"id": 2613, "predictions": ["\u2581// \u2581storage Pool ClusterConfig For Etag \u2581returns \u2581a \u2581 map \u2581of \u2581storage \u2581 keys \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581This \u2581 helper \u2581deletes \u2581any \u2581node - specific \u2581values \u2581from \u2581the \u2581 config \u2581object , \u2581since \u2581// \u2581they \u2581should \u2581not \u2581be \u2581part \u2581of \u2581the \u2581calculated \u2581etag ."], "bleu": 0.05600642712063756, "rouge_l": 0.20225464190981432}
{"id": 3027, "predictions": ["\u2581// \u2581 ServiceAccount \u2581returns \u2581a \u2581 ServiceAccount \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581create \u2581a \u2581 ServiceAccount \u2581object ."], "references": ["\u2581// \u2581 ServiceAccount \u2581returns \u2581a \u2581 kubernetes \u2581service \u2581account \u2581for \u2581use \u2581with \u2581 Pac hyd er m ."], "bleu": 0.310441435588881, "rouge_l": 0.43455031166518254}
{"id": 2094, "predictions": ["\u2581// \u2581 Etag Hash \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 Etag Hash \u2581hashes \u2581the \u2581provided \u2581 data \u2581and \u2581returns \u2581the \u2581 sha 256"], "bleu": 0.29998515214540233, "rouge_l": 0.49364161849710986}
{"id": 3177, "predictions": ["\u2581// \u2581 Ago \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Timestamp"], "references": ["\u2581// \u2581 Ago \u2581pretty - print s \u2581the \u2581amount \u2581of \u2581time \u2581that \u2581has \u2581passed \u2581// \u2581since \u2581timestamp \u2581as \u2581a \u2581human - readable \u2581string ."], "bleu": 0.07733019124048345, "rouge_l": 0.2677787532923617}
{"id": 2443, "predictions": ["\u2581// \u2581Get Attack Release \u2581returns \u2581the \u2581 map \u2581of \u2581the \u2581release"], "references": ["\u2581// \u2581Get LSB Release \u2581returns \u2581a \u2581 map \u2581with \u2581 Linux \u2581distribution \u2581information"], "bleu": 0.18370575619328847, "rouge_l": 0.4925975773889637}
{"id": 3606, "predictions": ["\u2581// \u2581 Clear All \u2581 clear s \u2581all \u2581 keys \u2581from \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Clear All \u2581 clear s \u2581all \u2581the \u2581 keys ."], "bleu": 0.5946035575013605, "rouge_l": 0.8314745972738538}
{"id": 3894, "predictions": ["\u2581// \u2581 Load Workspace Data \u2581reads \u2581the \u2581 workspace \u2581 data \u2581from \u2581the \u2581 workspace ."], "references": ["\u2581// \u2581 Load Workspace Data \u2581is \u2581similar \u2581to \u2581 Load Data \u2581but \u2581parses \u2581the \u2581 data \u2581as \u2581a \u2581// \u2581 WORK SPACE \u2581file ."], "bleu": 0.22106543460667968, "rouge_l": 0.4825949367088607}
{"id": 3592, "predictions": ["\u2581// \u2581 get Conn \u2581returns \u2581the \u2581connection \u2581connection ."], "references": ["\u2581// \u2581 get Conn \u2581treat s \u2581 inbound \u2581and \u2581outbound \u2581connections \u2581as \u2581a \u2581single \u2581virtual \u2581list \u2581// \u2581that \u2581can \u2581be \u2581indexed . \u2581The \u2581peer \u2581must \u2581be \u2581read - locked ."], "bleu": 0.039868435886053814, "rouge_l": 0.23371647509578544}
{"id": 3434, "predictions": ["\u2581// \u2581 New Reference \u2581returns \u2581a \u2581new \u2581image \u2581reference \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581There \u2581is \u2581no \u2581directory . Parse Reference \u2581because \u2581it \u2581is \u2581rather \u2581point less . \u2581// \u2581 Caller s \u2581who \u2581need \u2581a \u2581transport - independent \u2581interface \u2581will \u2581go \u2581through \u2581//"], "bleu": 0.04736201512792776, "rouge_l": 0.12577319587628866}
{"id": 3652, "predictions": ["\u2581// \u2581 Read String \u2581reads \u2581the \u2581 data \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Read String \u2581returns \u2581a \u2581string \u2581of \u2581 size \u2581 n \u2581from \u2581the \u2581buffer"], "bleu": 0.31021871556345015, "rouge_l": 0.5809523809523809}
{"id": 3906, "predictions": ["\u2581// \u2581 Symbols \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581 measurements \u2581in \u2581the \u2581 Load \u2581 table ."], "references": ["\u2581// \u2581 Symbols \u2581returns \u2581a \u2581list \u2581of \u2581symbols \u2581 this \u2581statement \u2581 loads ."], "bleu": 0.2680165156355778, "rouge_l": 0.5607763023493361}
{"id": 3786, "predictions": ["\u2581// \u2581 Checksum Size \u2581returns \u2581the \u2581checksum \u2581of \u2581the \u2581checksum ."], "references": ["\u2581// \u2581 Checksum Size \u2581returns \u2581the \u2581 size \u2581in \u2581bytes \u2581of \u2581the \u2581checksum \u2581calculation"], "bleu": 0.4826999428554263, "rouge_l": 0.7047496790757382}
{"id": 3494, "predictions": ["\u2581// \u2581 Pins \u2581returns \u2581the \u2581 keys \u2581of \u2581the \u2581 Shell ."], "references": ["\u2581// \u2581 Pins \u2581returns \u2581a \u2581 map \u2581of \u2581the \u2581pin \u2581hashes \u2581to \u2581their \u2581 info \u2581 ( currently \u2581just \u2581the \u2581// \u2581pin \u2581 type , \u2581one \u2581of \u2581 Direct Pin"], "bleu": 0.08113519232216128, "rouge_l": 0.3536231884057971}
{"id": 3198, "predictions": ["\u2581// \u2581 Eq uate NaN s \u2581compares \u2581two \u2581 NaN s ."], "references": ["\u2581// \u2581 Eq uate NaN s \u2581returns \u2581a \u2581 Comparer \u2581option \u2581that \u2581determines \u2581float 32 \u2581and \u2581float 64 \u2581// \u2581 NaN \u2581values \u2581to \u2581be \u2581equal . \u2581// \u2581// \u2581 Eq"], "bleu": 0.1192507077334439, "rouge_l": 0.3978260869565217}
{"id": 3893, "predictions": ["\u2581// \u2581 Load Data \u2581 loads \u2581a \u2581 File \u2581from \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Load Data \u2581parses \u2581a \u2581build \u2581file \u2581from \u2581a \u2581 byte \u2581 slice \u2581and \u2581scan s \u2581it \u2581for \u2581rules \u2581and \u2581// \u2581load \u2581statements . \u2581The \u2581syntax \u2581tree \u2581within \u2581the"], "bleu": 0.10845843803319692, "rouge_l": 0.3353951890034364}
{"id": 2568, "predictions": ["\u2581// \u2581 Raft Node Delete \u2581deletes \u2581the \u2581node \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 Raft Node Delete \u2581removes \u2581a \u2581node \u2581from \u2581the \u2581current \u2581list \u2581of \u2581 LXD \u2581nodes \u2581that \u2581are \u2581// \u2581part \u2581of \u2581the \u2581 dql ite \u2581 Raft \u2581cluster ."], "bleu": 0.12904301286108927, "rouge_l": 0.39383070301291256}
{"id": 3102, "predictions": ["\u2581// \u2581 Put File Records \u2581updates \u2581the \u2581 key \u2581to \u2581the \u2581database ."], "references": ["\u2581// \u2581 Put File Records \u2581returns \u2581a \u2581collection \u2581of \u2581 put File Records"], "bleu": 0.3636227046500071, "rouge_l": 0.4615384615384617}
{"id": 3108, "predictions": ["\u2581// \u2581 Sorted \u2581returns \u2581a \u2581sorted \u2581list \u2581of \u2581 DAG \u2581names ."], "references": ["\u2581// \u2581 Sorted \u2581returns \u2581all \u2581nodes \u2581in \u2581a \u2581 topological ly \u2581sorted \u2581order"], "bleu": 0.299229756708663, "rouge_l": 0.4765625000000001}
{"id": 3759, "predictions": ["\u2581// \u2581Set ResponseHeaders \u2581sets \u2581the \u2581 headers \u2581of \u2581the \u2581request \u2581context"], "references": ["\u2581// \u2581Set ResponseHeaders \u2581sets \u2581the \u2581response \u2581 headers ."], "bleu": 0.46924700641055994, "rouge_l": 0.7128547579298832}
{"id": 3370, "predictions": ["\u2581// \u2581 Schema 2 From Components \u2581returns \u2581a \u2581 Schema 2 \u2581from \u2581a \u2581 set \u2581of \u2581 schemas ."], "references": ["\u2581// \u2581 Schema 2 From Components \u2581creates \u2581an \u2581 Schema 2 \u2581manifest \u2581instance \u2581from \u2581the \u2581supplied \u2581 data ."], "bleu": 0.3827673535697134, "rouge_l": 0.631578947368421}
{"id": 3871, "predictions": ["\u2581// \u2581 Call \u2581the \u2581 call \u2581to \u2581 call \u2581 this \u2581function \u2581to \u2581 call \u2581the \u2581 call \u2581// \u2581function ."], "references": ["\u2581// \u2581finishes Call \u2581checks \u2581whether \u2581 this \u2581frame \u2581is \u2581the \u2581last \u2581one \u2581we \u2581should \u2581expect \u2581for \u2581// \u2581 this \u2581RPC \u2581req - res ."], "bleu": 0.0965367067333981, "rouge_l": 0.3074154067674586}
{"id": 2386, "predictions": ["\u2581// \u2581 StoragePool Node Volume Role \u2581is \u2581used \u2581to \u2581 remove \u2581volume \u2581volume \u2581 type \u2581by \u2581volume \u2581 type"], "references": ["\u2581// \u2581 StoragePool Node Volume GetType \u2581gets \u2581a \u2581single \u2581storage \u2581volume \u2581attached \u2581to \u2581a \u2581// \u2581given \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581 type , \u2581on \u2581the \u2581current \u2581node ."], "bleu": 0.1657222515922116, "rouge_l": 0.32126398946675444}
{"id": 2586, "predictions": ["\u2581// \u2581 Field Params \u2581returns \u2581the \u2581params \u2581for \u2581the \u2581field \u2581params ."], "references": ["\u2581// \u2581 Field Params \u2581converts \u2581the \u2581given \u2581fields \u2581to \u2581function \u2581parameters , \u2581rendering \u2581their \u2581// \u2581 name ."], "bleu": 0.19078786961893873, "rouge_l": 0.3860759493670886}
{"id": 2867, "predictions": ["\u2581// \u2581 Rand String \u2581returns \u2581a \u2581random \u2581string \u2581of \u2581 n \u2581and \u2581 n \u2581characters ."], "references": ["\u2581// \u2581 Rand String \u2581returns \u2581a \u2581random \u2581alphabetical \u2581string \u2581of \u2581 size \u2581 n"], "bleu": 0.5312583871630396, "rouge_l": 0.8097345132743362}
{"id": 2876, "predictions": ["\u2581// \u2581 Put File Overwrite \u2581updates \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581 path \u2581with \u2581the \u2581given \u2581 size ."], "references": ["\u2581// \u2581 Put File Overwrite \u2581is \u2581the \u2581same \u2581as \u2581 Put File , \u2581except \u2581that \u2581instead \u2581of \u2581// \u2581appending \u2581the \u2581objects \u2581to \u2581the \u2581end \u2581of \u2581the \u2581given \u2581file , \u2581the"], "bleu": 0.18562075987716872, "rouge_l": 0.42468354430379746}
{"id": 3989, "predictions": ["\u2581// \u2581Verify JSON JSON ing \u2581returns \u2581a \u2581 HandlerFunc \u2581that \u2581handles \u2581 json \u2581 data \u2581from \u2581// \u2581the \u2581given \u2581object ."], "references": ["\u2581// Verify JSON Represent ing \u2581is \u2581similar \u2581to \u2581Verify JSON . \u2581Instead \u2581of \u2581taking \u2581a \u2581JSON \u2581string , \u2581however , \u2581it \u2581// take s \u2581an \u2581arbitrary \u2581JSON - en cod"], "bleu": 0.06555193661974819, "rouge_l": 0.19003115264797507}
{"id": 2183, "predictions": ["\u2581// \u2581 name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 call ."], "references": ["\u2581// \u2581 name \u2581returns \u2581the \u2581import \u2581 path \u2581qualified \u2581 name \u2581of \u2581the \u2581function \u2581containing \u2581the \u2581// \u2581 call ."], "bleu": 0.34843066550872176, "rouge_l": 0.7176470588235294}
{"id": 4042, "predictions": ["\u2581// \u2581 Apps \u2581returns \u2581the \u2581storage \u2581storage ."], "references": ["\u2581// \u2581 Apps \u2581returns \u2581the \u2581 apps \u2581collection \u2581from \u2581 MongoDB ."], "bleu": 0.3702709453863886, "rouge_l": 0.5791139240506329}
{"id": 2788, "predictions": ["\u2581// \u2581 Print File \u2581prints \u2581a \u2581file \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Print File \u2581values \u2581for \u2581a \u2581 pfs \u2581file ."], "bleu": 0.32523403430389786, "rouge_l": 0.6135057471264368}
{"id": 2739, "predictions": ["\u2581// \u2581 Run \u2581runs \u2581the \u2581command \u2581and \u2581returns \u2581the \u2581function \u2581that \u2581is \u2581not \u2581// \u2581running ."], "references": ["\u2581// \u2581 Run \u2581makes \u2581a \u2581new \u2581 cobra \u2581run \u2581function \u2581that \u2581 wraps \u2581the \u2581given \u2581function ."], "bleu": 0.17187176571209348, "rouge_l": 0.3616600790513834}
{"id": 3620, "predictions": ["\u2581// \u2581 remove Closed Conn \u2581removes \u2581a \u2581connection \u2581from \u2581the \u2581 Channel ."], "references": ["\u2581// \u2581 remove Closed Conn \u2581removes \u2581a \u2581connection \u2581if \u2581it ' s \u2581closed . \u2581// \u2581 Until \u2581a \u2581connection \u2581is \u2581fully \u2581closed , \u2581the \u2581channel \u2581must \u2581keep \u2581track \u2581of \u2581it"], "bleu": 0.17309927456186694, "rouge_l": 0.3907473309608541}
{"id": 2993, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 Backoff ReadCloser \u2581and \u2581 flush es \u2581the \u2581 Backoff \u2581to \u2581the \u2581// \u2581 Backoff ' s \u2581 Close ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 Reader Closer \u2581contained \u2581in \u2581 b ."], "bleu": 0.23423016820418144, "rouge_l": 0.4464775846294603}
{"id": 3468, "predictions": ["\u2581// \u2581 Abs Diff Scalar \u2581 translate s \u2581a \u2581 translation \u2581to \u2581a \u2581 dot \u2581 L l \u2581image ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581absolute \u2581difference \u2581between \u2581an \u2581array \u2581and \u2581a \u2581scalar ."], "bleu": 0.07264339766175722, "rouge_l": 0.17596153846153845}
{"id": 2259, "predictions": ["\u2581// \u2581 Load \u2581 loads \u2581a \u2581 map \u2581of \u2581values \u2581from \u2581the \u2581schema ."], "references": ["\u2581// \u2581 Load \u2581creates \u2581a \u2581new \u2581configuration \u2581 Map \u2581with \u2581the \u2581given \u2581schema \u2581and \u2581initial \u2581// \u2581values . \u2581It \u2581is \u2581meant \u2581to \u2581be \u2581called \u2581with \u2581a \u2581 set \u2581of \u2581initial"], "bleu": 0.07419852709467267, "rouge_l": 0.3412587412587413}
{"id": 2432, "predictions": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581 this \u2581 Devices \u2581is \u2581 l exicographical ly ."], "references": ["\u2581// \u2581 Contains \u2581checks \u2581if \u2581a \u2581given \u2581device \u2581 exists \u2581in \u2581the \u2581 set \u2581and \u2581if \u2581it ' s \u2581// \u2581identical \u2581to \u2581that \u2581provided"], "bleu": 0.09987758481973842, "rouge_l": 0.28955696202531644}
{"id": 3112, "predictions": ["\u2581// \u2581 getToken s \u2581returns \u2581the \u2581list \u2581of \u2581 DAG s \u2581in \u2581the \u2581 DAG ."], "references": ["\u2581// \u2581 Ghost s \u2581returns \u2581nodes \u2581that \u2581were \u2581referenced \u2581as \u2581parents \u2581but \u2581never \u2581created ."], "bleu": 0.1332358437599213, "rouge_l": 0.32446808510638303}
{"id": 2512, "predictions": ["\u2581// \u2581 Keys \u2581returns \u2581the \u2581 keys \u2581of \u2581the \u2581 Schema ."], "references": ["\u2581// \u2581 Keys \u2581returns \u2581all \u2581 keys \u2581defined \u2581in \u2581the \u2581schema"], "bleu": 0.3438931217657843, "rouge_l": 0.6135057471264368}
{"id": 2942, "predictions": ["\u2581// \u2581 Watch One \u2581 watches \u2581for \u2581changes \u2581to \u2581the \u2581 key \u2581and \u2581returns \u2581the \u2581watcher ."], "references": ["\u2581// \u2581 Watch One \u2581 watches \u2581a \u2581given \u2581item . \u2581The \u2581first \u2581value \u2581returned \u2581from \u2581the \u2581 watch \u2581// \u2581will \u2581be \u2581the \u2581current \u2581value \u2581of \u2581the \u2581item ."], "bleu": 0.19924293777082222, "rouge_l": 0.4256803907885556}
{"id": 2222, "predictions": ["\u2581// \u2581 Container Storage Ready \u2581returns \u2581true \u2581if \u2581the \u2581 container \u2581is \u2581in \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Functions \u2581dealing \u2581with \u2581 container \u2581storage ."], "bleu": 0.12512236921161915, "rouge_l": 0.40720961281708945}
{"id": 4091, "predictions": ["\u2581// \u2581Find ByName \u2581finds \u2581a \u2581platform \u2581by \u2581 name ."], "references": ["\u2581// \u2581Find ByName \u2581implements \u2581Find ByName \u2581method \u2581of \u2581 Platform Service \u2581interface"], "bleu": 0.20311412297014433, "rouge_l": 0.3577712609970674}
{"id": 3237, "predictions": ["\u2581// \u2581Extract \u2581extracts \u2581the \u2581 SpanContext \u2581from \u2581the \u2581 ledger ."], "references": ["\u2581// \u2581Extract \u2581belongs \u2581to \u2581the \u2581 Tracer \u2581interface ."], "bleu": 0.1972940627795883, "rouge_l": 0.5091819699499166}
{"id": 2083, "predictions": ["\u2581// \u2581 New Daemon \u2581creates \u2581a \u2581new \u2581 Daemon \u2581instance"], "references": ["\u2581// \u2581 New Daemon \u2581returns \u2581a \u2581new \u2581 Daemon \u2581object \u2581with \u2581the \u2581given \u2581configuration ."], "bleu": 0.35647527751064534, "rouge_l": 0.6177215189873417}
{"id": 4044, "predictions": ["\u2581// \u2581 Users \u2581returns \u2581a \u2581 Collection \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581 User ."], "references": ["\u2581// \u2581 Users \u2581returns \u2581the \u2581users \u2581collection \u2581from \u2581 MongoDB ."], "bleu": 0.21314568971111159, "rouge_l": 0.5047281323877069}
{"id": 3194, "predictions": ["\u2581// \u2581 Pointer Of \u2581returns \u2581a \u2581pointer \u2581to \u2581a \u2581pointer \u2581to \u2581a \u2581pointer \u2581to \u2581a \u2581pointer \u2581to \u2581// \u2581 v ."], "references": ["\u2581// \u2581 Pointer Of \u2581returns \u2581a \u2581 Pointer \u2581from \u2581 v , \u2581which \u2581must \u2581be \u2581a \u2581// \u2581reflect . Ptr , \u2581reflect . Slice , \u2581or \u2581reflect . Map ."], "bleu": 0.20374864108138016, "rouge_l": 0.34205607476635513}
{"id": 2293, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 healthcheck \u2581version ."], "references": ["\u2581// \u2581String \u2581returns \u2581version \u2581as \u2581a \u2581string"], "bleu": 0.23901088824528133, "rouge_l": 0.552536231884058}
{"id": 3538, "predictions": ["\u2581// \u2581 New Flo o d Sub \u2581creates \u2581a \u2581new \u2581 Flo o d \u2581 PubSub \u2581object ."], "references": ["\u2581// \u2581 New Flo o d Sub \u2581returns \u2581a \u2581new \u2581 PubSub \u2581object \u2581using \u2581the \u2581 Flo o d Sub Router ."], "bleu": 0.5084278250045062, "rouge_l": 0.6876006441223833}
{"id": 3201, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581 Reporter ' s \u2581 contents \u2581of \u2581the \u2581default \u2581reporter ."], "references": ["\u2581// \u2581String \u2581provides \u2581a \u2581full \u2581report \u2581of \u2581the \u2581differences \u2581detected \u2581as \u2581a \u2581 structured \u2581// \u2581literal \u2581in \u2581pseudo - Go \u2581syntax . \u2581String \u2581may \u2581only \u2581be \u2581called \u2581after \u2581the \u2581entire"], "bleu": 0.0563232453709982, "rouge_l": 0.20962199312714777}
{"id": 2723, "predictions": ["\u2581// \u2581 Accept \u2581returns \u2581a \u2581 net . Conn \u2581that \u2581will \u2581be \u2581called \u2581when \u2581the \u2581listener \u2581is \u2581closed ."], "references": ["\u2581// \u2581 Accept \u2581implements \u2581the \u2581corresponding \u2581method \u2581of \u2581 net . Listener \u2581for \u2581// \u2581 Test Listener"], "bleu": 0.17923344640485428, "rouge_l": 0.33670653173873044}
{"id": 3050, "predictions": ["\u2581// \u2581Add Registry \u2581adds \u2581a \u2581registry \u2581to \u2581the \u2581registry"], "references": ["\u2581// \u2581Add Registry \u2581 switches \u2581the \u2581registry \u2581that \u2581an \u2581image \u2581is \u2581 targeting , \u2581unless \u2581registry \u2581is \u2581 blank"], "bleu": 0.10687840114061235, "rouge_l": 0.3355335533553355}
{"id": 3304, "predictions": ["\u2581// \u2581 New Policy FromBytes \u2581creates \u2581a \u2581new \u2581 Policy \u2581from \u2581a \u2581 byte \u2581array ."], "references": ["\u2581// \u2581 New Policy FromBytes \u2581returns \u2581a \u2581policy \u2581parsed \u2581from \u2581the \u2581specified \u2581blob . \u2581// \u2581Use \u2581 this \u2581function \u2581instead \u2581of \u2581calling \u2581 json . Unmarshal \u2581directly ."], "bleu": 0.15487027615758578, "rouge_l": 0.38991477272727276}
{"id": 2530, "predictions": ["\u2581// \u2581 container Get Parent And Snapshot Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 container \u2581 name \u2581for \u2581the \u2581given \u2581// \u2581 name ."], "references": ["\u2581// \u2581 Helper \u2581function s \u2581// \u2581Returns \u2581the \u2581parent \u2581 container \u2581 name , \u2581snapshot \u2581 name , \u2581and \u2581whether \u2581it \u2581actually \u2581was \u2581// \u2581a \u2581snapshot \u2581 name ."], "bleu": 0.19049201542982974, "rouge_l": 0.40203714799281}
{"id": 3176, "predictions": ["\u2581// \u2581 New APIServer \u2581returns \u2581a \u2581new \u2581 api . Server Server"], "references": ["\u2581// \u2581 New APIServer \u2581returns \u2581a \u2581new \u2581 admin . APIServer"], "bleu": 0.6652049901111008, "rouge_l": 0.7887931034482759}
{"id": 2271, "predictions": ["\u2581// \u2581 insert SchemaVersion \u2581 insert \u2581a \u2581new \u2581transaction \u2581to \u2581the \u2581database ."], "references": ["\u2581// \u2581 Insert \u2581a \u2581new \u2581version \u2581into \u2581the \u2581schema \u2581 table ."], "bleu": 0.1777835117834348, "rouge_l": 0.4834874504623514}
{"id": 3891, "predictions": ["\u2581// \u2581 Load Macro File \u2581 loads \u2581a \u2581file \u2581from \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Load Macro File \u2581 loads \u2581a \u2581 bz l \u2581file \u2581from \u2581disk , \u2581parses \u2581it , \u2581then \u2581scan s \u2581for \u2581the \u2581load \u2581// \u2581statements \u2581and \u2581the \u2581rules \u2581called"], "bleu": 0.21305594091854857, "rouge_l": 0.4611683848797251}
{"id": 3681, "predictions": ["\u2581// \u2581finish \u2581implements \u2581the \u2581 Retriever \u2581interface ."], "references": ["\u2581// \u2581finish \u2581finishes \u2581the \u2581fragment , \u2581updating \u2581the \u2581final \u2581checksum \u2581and \u2581fragment \u2581flags"], "bleu": 0.12139281957861149, "rouge_l": 0.2739520958083832}
{"id": 2307, "predictions": ["\u2581// \u2581 getContainer \u2581retrieves \u2581a \u2581 path \u2581from \u2581the \u2581 container ."], "references": ["\u2581// \u2581Return \u2581the \u2581full \u2581 path \u2581of \u2581a \u2581 container \u2581template ."], "bleu": 0.21401603033752975, "rouge_l": 0.5}
{"id": 3744, "predictions": ["\u2581// \u2581 Arg 2 Writer \u2581returns \u2581a \u2581 trace \u2581 code \u2581for \u2581the \u2581given \u2581arguments ."], "references": ["\u2581// \u2581 Arg 2 Writer \u2581returns \u2581a \u2581 WriteCloser \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 write \u2581the \u2581second \u2581argument . \u2581// \u2581The \u2581returned \u2581writer \u2581must \u2581be \u2581closed \u2581once \u2581the \u2581"], "bleu": 0.21486981479867082, "rouge_l": 0.45337837837837835}
{"id": 2491, "predictions": ["\u2581// \u2581 M AAS Controller \u2581returns \u2581the \u2581 M AAS \u2581 controller \u2581 controller ."], "references": ["\u2581// \u2581 M AAS Controller \u2581the \u2581configured \u2581 M AAS \u2581 url \u2581and \u2581 key , \u2581if \u2581any ."], "bleu": 0.37447999816178557, "rouge_l": 0.6912181303116147}
{"id": 3828, "predictions": ["\u2581// \u2581start Idle Sweep \u2581creates \u2581a \u2581 idle Sweep \u2581over \u2581the \u2581given \u2581channel ."], "references": ["\u2581// \u2581start Idle Sweep \u2581starts \u2581a \u2581 poller \u2581that \u2581checks \u2581for \u2581 idle \u2581connections \u2581at \u2581given \u2581// \u2581intervals ."], "bleu": 0.2265345666023703, "rouge_l": 0.5309477756286268}
{"id": 2309, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581error \u2581message ."], "references": ["\u2581// \u2581 ErrorList \u2581implements \u2581the \u2581error \u2581interface ."], "bleu": 0.2777619034011791, "rouge_l": 0.625}
{"id": 2394, "predictions": ["\u2581// \u2581 StoragePool Node Volume Role ID \u2581returns \u2581the \u2581 name \u2581of \u2581a \u2581volume \u2581volume \u2581by \u2581volume \u2581 name ."], "references": ["\u2581// \u2581 StoragePool Node Volume GetType ID \u2581 get \u2581the \u2581 ID \u2581of \u2581a \u2581storage \u2581volume \u2581on \u2581a \u2581given \u2581// \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581storage \u2581volume \u2581 type ,"], "bleu": 0.18863997366186722, "rouge_l": 0.5018987341772152}
{"id": 3844, "predictions": ["\u2581// \u2581Register Health Handler \u2581registers \u2581a \u2581health - check \u2581function \u2581for \u2581the \u2581given \u2581health \u2581// \u2581function ."], "references": ["\u2581// \u2581Register Health Handler \u2581uses \u2581the \u2581user - specified \u2581function \u2581 f \u2581for \u2581the \u2581 Health \u2581endpoint ."], "bleu": 0.23836935010038224, "rouge_l": 0.5116495806150979}
{"id": 2256, "predictions": ["\u2581// \u2581Create Profile \u2581creates \u2581a \u2581profile \u2581with \u2581the \u2581given \u2581profiles"], "references": ["\u2581// \u2581Create Profile \u2581defines \u2581a \u2581new \u2581 container \u2581profile"], "bleu": 0.25965358893403384, "rouge_l": 0.5313588850174217}
{"id": 3975, "predictions": ["\u2581// \u2581 split Value \u2581splits \u2581a \u2581string \u2581into \u2581a \u2581string \u2581 slice ."], "references": ["\u2581// \u2581 split Directive \u2581splits \u2581a \u2581comma - separated \u2581directive \u2581value \u2581into \u2581its \u2581component \u2581// \u2581parts , \u2581trimming \u2581each \u2581of \u2581any \u2581whitespace \u2581characters ."], "bleu": 0.09747735077285258, "rouge_l": 0.35912531539108494}
{"id": 3713, "predictions": ["\u2581// \u2581 SetTimeout Per Attempt \u2581sets \u2581the \u2581 set \u2581of \u2581 Attempt \u2581to \u2581use ."], "references": ["\u2581// \u2581 SetTimeout Per Attempt \u2581sets \u2581 Timeout Per Attempt \u2581in \u2581 Retry Options ."], "bleu": 0.4169392927528885, "rouge_l": 0.6}
{"id": 3709, "predictions": ["\u2581// \u2581Add Header \u2581adds \u2581a \u2581new \u2581header \u2581value \u2581to \u2581the \u2581context ."], "references": ["\u2581// \u2581Add Header \u2581adds \u2581a \u2581single \u2581application \u2581header \u2581to \u2581the \u2581 Context ."], "bleu": 0.41640179828975427, "rouge_l": 0.71484375}
{"id": 2567, "predictions": ["\u2581// \u2581 Raft Node Add \u2581adds \u2581a \u2581node \u2581to \u2581the \u2581node ."], "references": ["\u2581// \u2581 Raft Node Add \u2581adds \u2581a \u2581node \u2581to \u2581the \u2581current \u2581list \u2581of \u2581 LXD \u2581nodes \u2581that \u2581are \u2581part \u2581of \u2581the \u2581// \u2581 dql ite \u2581 Raft \u2581cluster . \u2581It"], "bleu": 0.18795651843724034, "rouge_l": 0.4862318840579709}
{"id": 3451, "predictions": ["\u2581// \u2581 And With Mask \u2581creates \u2581a \u2581 set \u2581of \u2581 src \u2581with \u2581the \u2581given \u2581mask ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581bit - wise \u2581 conjunction \u2581of \u2581two \u2581arrays \u2581with \u2581a \u2581mask ."], "bleu": 0.11797452162512975, "rouge_l": 0.34109972041006525}
{"id": 3462, "predictions": ["\u2581// \u2581 Subtract With Mask \u2581 subtract s \u2581the \u2581 src \u2581from \u2581a \u2581 src \u2581 src \u2581to \u2581a \u2581 slice \u2581of \u2581 src ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581difference \u2581between \u2581two \u2581arrays \u2581with \u2581a \u2581mask . \u2581// \u2581dst \u2581= \u2581 src 1 \u2581 - \u2581 src 2"], "bleu": 0.09562406574442013, "rouge_l": 0.32000000000000006}
{"id": 3455, "predictions": ["\u2581// \u2581 Or With Mask \u2581creates \u2581a \u2581 set \u2581of \u2581 src \u2581with \u2581the \u2581given \u2581mask ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581bit - wise \u2581 disjunction \u2581of \u2581two \u2581arrays \u2581with \u2581a \u2581mask ."], "bleu": 0.11797452162512975, "rouge_l": 0.34109972041006525}
{"id": 2580, "predictions": ["\u2581// \u2581 Scalar Fields \u2581returns \u2581a \u2581list \u2581of \u2581fields \u2581that \u2581are \u2581 set \u2581in \u2581the \u2581mapping ."], "references": ["\u2581// \u2581 Scalar Fields \u2581returns \u2581the \u2581fields \u2581that \u2581 map \u2581directly \u2581to \u2581a \u2581single \u2581database \u2581// \u2581column \u2581on \u2581another \u2581 table \u2581that \u2581can \u2581be \u2581joined \u2581to \u2581 this \u2581one ."], "bleu": 0.15329843583118236, "rouge_l": 0.36478405315614615}
{"id": 3023, "predictions": ["\u2581// \u2581 Pipeline s \u2581creates \u2581a \u2581new \u2581 Collection \u2581with \u2581the \u2581given \u2581etcd ."], "references": ["\u2581// \u2581 Pipeline s \u2581returns \u2581a \u2581 Collection \u2581of \u2581 pipelines"], "bleu": 0.29256127307315066, "rouge_l": 0.5723860589812332}
{"id": 3892, "predictions": ["\u2581// \u2581 Empty Macro File \u2581is \u2581used \u2581to \u2581create \u2581a \u2581 File \u2581from \u2581a \u2581file"], "references": ["\u2581// \u2581 Empty Macro File \u2581creates \u2581a \u2581 bz l \u2581file \u2581at \u2581the \u2581given \u2581 path \u2581and \u2581within \u2581the \u2581file \u2581creates \u2581// \u2581a \u2581 Star lark \u2581function \u2581with \u2581the \u2581provided"], "bleu": 0.13181595631945853, "rouge_l": 0.3353951890034364}
{"id": 3386, "predictions": ["\u2581// \u2581 Transport \u2581returns \u2581a \u2581 shallow \u2581copy \u2581of \u2581the \u2581 Reference Transport ."], "references": ["\u2581// \u2581Return \u2581a \u2581 Transport \u2581object \u2581that \u2581defaults \u2581to \u2581using \u2581the \u2581same \u2581store \u2581that \u2581we \u2581used \u2581// \u2581to \u2581build \u2581 this \u2581reference \u2581object ."], "bleu": 0.08053904821357082, "rouge_l": 0.30148270181219106}
{"id": 2740, "predictions": ["\u2581// \u2581 Error AndExit \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581prints \u2581the \u2581 format \u2581of \u2581the \u2581error \u2581and \u2581exits ."], "references": ["\u2581// \u2581 Error AndExit \u2581errors \u2581with \u2581the \u2581given \u2581 format \u2581and \u2581args , \u2581and \u2581then \u2581exits ."], "bleu": 0.2291421308389693, "rouge_l": 0.5485611510791367}
{"id": 3154, "predictions": ["\u2581// \u2581 Delete All \u2581deletes \u2581all \u2581 Storage \u2581objects ."], "references": ["\u2581// \u2581 Delete All \u2581deletes \u2581all \u2581of \u2581the \u2581chunks \u2581in \u2581object \u2581storage ."], "bleu": 0.43711747430744424, "rouge_l": 0.5947075208913649}
{"id": 2482, "predictions": ["\u2581// \u2581Get Target \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581operation ."], "references": ["\u2581// \u2581Get Target \u2581returns \u2581the \u2581target \u2581operation"], "bleu": 0.43361890903486755, "rouge_l": 0.6944971537001898}
{"id": 2301, "predictions": ["\u2581// \u2581Create Certificate \u2581creates \u2581a \u2581certificate"], "references": ["\u2581// \u2581Create Certificate \u2581adds \u2581a \u2581new \u2581certificate \u2581to \u2581the \u2581 LXD \u2581trust \u2581store"], "bleu": 0.14168664218430702, "rouge_l": 0.4935275080906149}
{"id": 3904, "predictions": ["\u2581// \u2581 Has Default Visibility \u2581returns \u2581true \u2581if \u2581the \u2581 path \u2581is \u2581a \u2581default \u2581value ."], "references": ["\u2581// \u2581 Has Default Visibility \u2581returns \u2581whether \u2581the \u2581 File \u2581 contains \u2581a \u2581\" package \" \u2581rule \u2581with \u2581// \u2581a \u2581\" default _ visibility \" \u2581attribute . \u2581 Rules \u2581generated"], "bleu": 0.16891781647225745, "rouge_l": 0.41216216216216217}
{"id": 2161, "predictions": ["\u2581// \u2581 Metadata AsMap \u2581returns \u2581the \u2581metadata \u2581metadata \u2581for \u2581the \u2581 Response ."], "references": ["\u2581// \u2581 Metadata AsMap \u2581parses \u2581the \u2581 Response \u2581metadata \u2581into \u2581a \u2581 map"], "bleu": 0.3661926362999429, "rouge_l": 0.5384615384615383}
{"id": 3615, "predictions": ["\u2581// \u2581 Stats Tags \u2581returns \u2581the \u2581tags \u2581of \u2581the \u2581channel ."], "references": ["\u2581// \u2581 Stats Tags \u2581returns \u2581the \u2581common \u2581tags \u2581that \u2581should \u2581be \u2581used \u2581when \u2581 reporting \u2581stats . \u2581// \u2581It \u2581returns \u2581a \u2581new \u2581 map \u2581for \u2581each \u2581 call ."], "bleu": 0.10690256631367123, "rouge_l": 0.3699772554965883}
{"id": 3311, "predictions": ["\u2581// \u2581 IsValid \u2581returns \u2581true \u2581if \u2581the \u2581 name \u2581is \u2581a \u2581valid \u2581 key"], "references": ["\u2581// \u2581 IsValid \u2581returns \u2581true \u2581if f \u2581 kt \u2581is \u2581a \u2581recognized \u2581value"], "bleu": 0.4546697236991713, "rouge_l": 0.6711491442542787}
{"id": 2794, "predictions": ["\u2581// \u2581 New Commit \u2581constructs \u2581a \u2581new \u2581 Proxy Commit"], "references": ["\u2581// \u2581 New Commit Provenance \u2581creates \u2581a \u2581 pfs . Commit Provenance ."], "bleu": 0.2923180730788836, "rouge_l": 0.5947075208913649}
{"id": 3792, "predictions": ["\u2581// \u2581 Report Info \u2581returns \u2581a \u2581 State Info \u2581for \u2581the \u2581 introspection ."], "references": ["\u2581// \u2581 Report Info \u2581returns \u2581 Channel Info \u2581for \u2581a \u2581channel ."], "bleu": 0.3943168375847628, "rouge_l": 0.7020460358056267}
{"id": 3589, "predictions": ["\u2581// \u2581 getPeer Score \u2581returns \u2581a \u2581 set \u2581of \u2581 active \u2581 min \u2581score \u2581and \u2581 min \u2581score ."], "references": ["\u2581// \u2581 getPeer Score \u2581is \u2581called \u2581to \u2581find \u2581the \u2581peer \u2581and \u2581its \u2581score \u2581from \u2581a \u2581host \u2581port \u2581 key . \u2581// \u2581Note \u2581that \u2581at \u2581least \u2581a \u2581 Read \u2581lock \u2581must"], "bleu": 0.1293655328764583, "rouge_l": 0.2745980707395499}
{"id": 3396, "predictions": ["\u2581// \u2581new Nodes Location Reference \u2581returns \u2581a \u2581 slice \u2581of \u2581 interest \u2581in \u2581the \u2581given \u2581reference ."], "references": ["\u2581// \u2581new BIC Location Reference \u2581returns \u2581a \u2581 BIC Location Reference \u2581appropriate \u2581for \u2581 ref ."], "bleu": 0.3146660996956416, "rouge_l": 0.5484515484515484}
{"id": 2159, "predictions": ["\u2581// \u2581 A \u2581 Dial Func \u2581that \u2581is \u2581a \u2581 Dial Func \u2581that \u2581returns \u2581a \u2581 Dial Func \u2581that \u2581// \u2581 translate s \u2581the \u2581given \u2581 net . Listener \u2581to"], "references": ["\u2581// \u2581Create \u2581a \u2581 dial \u2581function \u2581that \u2581connects \u2581to \u2581the \u2581given \u2581listener ."], "bleu": 0.07732700624904287, "rouge_l": 0.3505747126436782}
{"id": 2276, "predictions": ["\u2581// \u2581 On Network Up \u2581returns \u2581a \u2581 net . EventListener \u2581for \u2581a \u2581 Network Up"], "references": ["\u2581// \u2581 On Network Up \u2581is \u2581called \u2581by \u2581the \u2581 LXD \u2581 call hook \u2581when \u2581the \u2581 L X C \u2581network \u2581up \u2581 script \u2581is \u2581run ."], "bleu": 0.15679201229434211, "rouge_l": 0.3112244897959183}
{"id": 3458, "predictions": ["\u2581// \u2581Add With Mask \u2581adds \u2581a \u2581 set \u2581of \u2581 src \u2581to \u2581the \u2581 src \u2581 set ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581sum \u2581of \u2581two \u2581arrays \u2581with \u2581a \u2581mask . \u2581// \u2581dst \u2581= \u2581 src 1 \u2581+ \u2581 src 2"], "bleu": 0.09602111260189056, "rouge_l": 0.2785388127853881}
{"id": 3824, "predictions": ["\u2581// \u2581 Ret Type \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581method \u2581 type"], "references": ["\u2581// \u2581 Ret Type \u2581returns \u2581the \u2581go \u2581return \u2581 type \u2581of \u2581the \u2581method ."], "bleu": 0.5306890805233174, "rouge_l": 0.7358262967430639}
{"id": 4064, "predictions": ["\u2581// \u2581 New App Informer \u2581constructs \u2581a \u2581new \u2581 informer \u2581for \u2581 App \u2581 type . \u2581// \u2581Always \u2581prefer \u2581using \u2581an \u2581 informer \u2581factory \u2581to \u2581 get \u2581a \u2581shared \u2581"], "references": ["\u2581// \u2581 New App Informer \u2581constructs \u2581a \u2581new \u2581 informer \u2581for \u2581 App \u2581 type . \u2581// \u2581Always \u2581prefer \u2581using \u2581an \u2581 informer \u2581factory \u2581to \u2581 get \u2581a \u2581shared \u2581"], "bleu": 1.0, "rouge_l": 1.0}
{"id": 4025, "predictions": ["\u2581// \u2581 Debugf \u2581implements \u2581the \u2581 Target \u2581interface ."], "references": ["\u2581// \u2581 Debugf \u2581writes \u2581the \u2581formatted \u2581string \u2581to \u2581the \u2581 Target \u2581// \u2581logger ."], "bleu": 0.22537874966994986, "rouge_l": 0.5857338820301784}
{"id": 3496, "predictions": ["\u2581// \u2581 Swarm Peers \u2581is \u2581a \u2581 helper \u2581to \u2581 get \u2581a \u2581 Swarm \u2581peers"], "references": ["\u2581// \u2581 Swarm Peers \u2581gets \u2581all \u2581the \u2581 swarm \u2581peers"], "bleu": 0.2490328638846773, "rouge_l": 0.4979591836734694}
{"id": 3475, "predictions": ["\u2581// \u2581Get Elem At \u2581returns \u2581the \u2581 type \u2581of \u2581a \u2581given \u2581index ."], "references": ["\u2581// \u2581Gets \u2581a \u2581pointer \u2581to \u2581the \u2581element \u2581at \u2581the \u2581index"], "bleu": 0.12011055432195765, "rouge_l": 0.2671532846715329}
{"id": 2187, "predictions": ["\u2581// \u2581 Trim Above Name \u2581removes \u2581the \u2581 trace \u2581 name \u2581from \u2581the \u2581 trace ."], "references": ["\u2581// \u2581 Trim Above Name \u2581returns \u2581a \u2581 slice \u2581of \u2581the \u2581 Trace \u2581with \u2581all \u2581entries \u2581above \u2581the \u2581// \u2581highest \u2581with \u2581function \u2581 name \u2581 name \u2581removed ."], "bleu": 0.1756457914927792, "rouge_l": 0.4765625}
{"id": 2459, "predictions": ["\u2581// \u2581 Container Config Remove \u2581removes \u2581the \u2581 config \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Container Config Remove \u2581removes \u2581the \u2581given \u2581 key \u2581from \u2581the \u2581 config \u2581of \u2581the \u2581 container \u2581// \u2581with \u2581the \u2581given \u2581 ID ."], "bleu": 0.2620923261247898, "rouge_l": 0.5477551020408163}
{"id": 2724, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581listener \u2581and \u2581closes \u2581the \u2581listener ."], "references": ["\u2581// \u2581 Close \u2581implements \u2581the \u2581corresponding \u2581method \u2581of \u2581 net . Listener \u2581for \u2581// \u2581 Test Listener . \u2581Any \u2581blocked \u2581 Accept \u2581operations \u2581will \u2581be \u2581un blocked \u2581and \u2581return \u2581//"], "bleu": 0.04334741445875218, "rouge_l": 0.22509225092250923}
{"id": 3497, "predictions": ["\u2581// \u2581 Swarm Connect \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581create \u2581a \u2581new \u2581 swarm \u2581connection"], "references": ["\u2581// \u2581 Swarm Connect \u2581open s \u2581a \u2581 swarm \u2581connection \u2581to \u2581a \u2581specific \u2581address ."], "bleu": 0.3222538601891173, "rouge_l": 0.5191489361702127}
{"id": 3275, "predictions": ["\u2581// \u2581detect Properties \u2581returns \u2581the \u2581 set \u2581of \u2581properties \u2581that \u2581should \u2581be \u2581 set \u2581to \u2581// \u2581the \u2581docker \u2581client ."], "references": ["\u2581// \u2581detect Properties \u2581detect s \u2581various \u2581properties \u2581of \u2581the \u2581registry . \u2581// \u2581See \u2581the \u2581docker Client \u2581documentation \u2581for \u2581members \u2581which \u2581are \u2581affected \u2581by \u2581 this ."], "bleu": 0.11911339812233042, "rouge_l": 0.33983286908078}
{"id": 3809, "predictions": ["\u2581// \u2581 Push \u2581implements \u2581the \u2581heap . Interface ."], "references": ["\u2581// \u2581 Push \u2581implements \u2581heap \u2581 Push \u2581interface"], "bleu": 0.4111336169005197, "rouge_l": 0.594541910331384}
{"id": 3539, "predictions": ["\u2581// \u2581 New LRU Blacklist \u2581returns \u2581a \u2581 blacklist \u2581from \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 New LRU Blacklist \u2581creates \u2581a \u2581new \u2581 LRU Blacklist \u2581with \u2581capacity \u2581 cap"], "bleu": 0.3334477432809602, "rouge_l": 0.5333333333333332}
{"id": 2623, "predictions": ["\u2581// \u2581 Storage Volume Config Clear \u2581 clear s \u2581the \u2581volume \u2581 config \u2581for \u2581the \u2581given \u2581volume ."], "references": ["\u2581// \u2581 Storage Volume Config Clear \u2581deletes \u2581storage \u2581volume \u2581 config ."], "bleu": 0.388172465412544, "rouge_l": 0.6916099773242631}
{"id": 3601, "predictions": ["\u2581// \u2581 Num Connections \u2581returns \u2581the \u2581number \u2581of \u2581connections \u2581currently \u2581connected \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Num Connections \u2581returns \u2581the \u2581number \u2581of \u2581 inbound \u2581and \u2581outbound \u2581connections \u2581for \u2581 this \u2581peer ."], "bleu": 0.4647706637685015, "rouge_l": 0.6559139784946237}
{"id": 3861, "predictions": ["\u2581// \u2581has Pending Calls \u2581returns \u2581true \u2581if \u2581the \u2581connection \u2581is \u2581 alive ."], "references": ["\u2581// \u2581has Pending Calls \u2581returns \u2581whether \u2581there ' s \u2581any \u2581pending \u2581 inbound \u2581or \u2581outbound \u2581calls \u2581on \u2581 this \u2581connection ."], "bleu": 0.20925650499344492, "rouge_l": 0.395004625346901}
{"id": 3325, "predictions": ["\u2581// \u2581 append \u2581appends \u2581a \u2581 set \u2581of \u2581 items \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581 append \u2581adds \u2581 s \u2581to \u2581the \u2581end \u2581of \u2581os , \u2581only \u2581if \u2581it \u2581is \u2581not \u2581included \u2581already ."], "bleu": 0.14437687566318166, "rouge_l": 0.3899543378995435}
{"id": 2979, "predictions": ["\u2581// \u2581 Block Path FromEnv \u2581retrieves \u2581the \u2581 path \u2581of \u2581the \u2581block \u2581root \u2581file \u2581from \u2581the \u2581// \u2581given \u2581block ."], "references": ["\u2581// \u2581 Block Path FromEnv \u2581gets \u2581the \u2581 path \u2581to \u2581an \u2581object \u2581storage \u2581block \u2581based \u2581on \u2581environment \u2581variables ."], "bleu": 0.29945160623183903, "rouge_l": 0.5152027027027026}
{"id": 2380, "predictions": ["\u2581// \u2581 StoragePool Node Volumes Get \u2581returns \u2581the \u2581 Volumes \u2581for \u2581a \u2581node ."], "references": ["\u2581// \u2581 StoragePool Node Volumes Get \u2581returns \u2581all \u2581storage \u2581volumes \u2581attached \u2581to \u2581a \u2581given \u2581// \u2581storage \u2581pool \u2581on \u2581the \u2581current \u2581node ."], "bleu": 0.30749911719882217, "rouge_l": 0.5341506129597198}
{"id": 3987, "predictions": ["\u2581// \u2581Verify \u2581 satisfies \u2581the \u2581 HandlerFunc \u2581interface ."], "references": ["\u2581// Verify MimeType \u2581returns \u2581a \u2581handler \u2581that \u2581verifies \u2581that \u2581a \u2581request \u2581has \u2581a \u2581specified \u2581 mime \u2581 type \u2581 set \u2581// in \u2581 Content - Type \u2581header"], "bleu": 0.02271529597348064, "rouge_l": 0.15288220551378442}
{"id": 2211, "predictions": ["\u2581// \u2581Get Private Image File \u2581returns \u2581the \u2581image \u2581file \u2581for \u2581the \u2581given \u2581image"], "references": ["\u2581// \u2581Get Private Image File \u2581isn ' t \u2581relevant \u2581for \u2581the \u2581simple streams \u2581protocol"], "bleu": 0.3643653105640693, "rouge_l": 0.5150784077201447}
{"id": 3368, "predictions": ["\u2581// \u2581 Blob Info From Schema 2 Descriptor \u2581returns \u2581a \u2581 Blob Info \u2581for \u2581the \u2581given \u2581schema ."], "references": ["\u2581// \u2581 Blob Info From Schema 2 Descriptor \u2581returns \u2581a \u2581types . Blob Info \u2581based \u2581on \u2581the \u2581input \u2581schema \u2581 2 \u2581descriptor ."], "bleu": 0.46720493030274823, "rouge_l": 0.715962441314554}
{"id": 2494, "predictions": ["\u2581// \u2581 Config GetBool \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581 config ."], "references": ["\u2581// \u2581 Config GetBool \u2581is \u2581a \u2581convenience \u2581for \u2581loading \u2581the \u2581cluster \u2581configuration \u2581and \u2581// \u2581returning \u2581the \u2581value \u2581of \u2581a \u2581particular \u2581boolean \u2581 key . \u2581// \u2581// \u2581It ' s \u2581a"], "bleu": 0.11365131166063829, "rouge_l": 0.44202898550724634}
{"id": 3257, "predictions": ["\u2581// \u2581Set Baggage Item \u2581sets \u2581a \u2581 span \u2581for \u2581a \u2581 baggage \u2581 key ."], "references": ["\u2581// \u2581Set Baggage Item \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.23961829057131984, "rouge_l": 0.4149659863945578}
{"id": 3105, "predictions": ["\u2581// \u2581 Open Commits \u2581creates \u2581a \u2581new \u2581 Collection \u2581with \u2581the \u2581given \u2581etcd ."], "references": ["\u2581// \u2581 Open Commits \u2581returns \u2581a \u2581collection \u2581of \u2581open \u2581commits"], "bleu": 0.25748661016289676, "rouge_l": 0.42957746478873243}
{"id": 2513, "predictions": ["\u2581// \u2581Set \u2581returns \u2581a \u2581 map \u2581of \u2581schema \u2581values ."], "references": ["\u2581// \u2581Defaults \u2581returns \u2581a \u2581 map \u2581of \u2581all \u2581 key \u2581names \u2581in \u2581the \u2581schema \u2581along \u2581with \u2581their \u2581default \u2581// \u2581values ."], "bleu": 0.18277967409230755, "rouge_l": 0.5457256461232605}
{"id": 3101, "predictions": ["\u2581// \u2581 Repos \u2581returns \u2581a \u2581 set \u2581of \u2581 repositories \u2581that \u2581the \u2581etcd \u2581client \u2581is \u2581 set \u2581to ."], "references": ["\u2581// \u2581 Repos \u2581returns \u2581a \u2581collection \u2581of \u2581 repos"], "bleu": 0.26529518334824453, "rouge_l": 0.5344180225281602}
{"id": 2742, "predictions": ["\u2581// \u2581Parse Branch \u2581parses \u2581a \u2581 Branch \u2581and \u2581returns \u2581a \u2581 composed \u2581 Branch \u2581// \u2581object ."], "references": ["\u2581// \u2581Parse Branch \u2581takes \u2581an \u2581argument \u2581of \u2581the \u2581 form \u2581\" repo [@ branch ] \" \u2581and \u2581// \u2581returns \u2581the \u2581corresponding \u2581* pfs . Branch . \u2581This \u2581uses \u2581Parse Commit"], "bleu": 0.07869499290624131, "rouge_l": 0.3242524916943521}
{"id": 2629, "predictions": ["\u2581// \u2581 Pretty \u2581 - \u2581 Pretty \u2581 text \u2581 text"], "references": ["\u2581// \u2581 Pretty \u2581will \u2581attempt \u2581to \u2581convert \u2581any \u2581Go \u2581structure \u2581into \u2581a \u2581string \u2581suitable \u2581for \u2581logging"], "bleu": 0.1345680990831316, "rouge_l": 0.21504112808460632}
{"id": 4007, "predictions": ["\u2581// \u2581Add All \u2581adds \u2581a \u2581new \u2581 route \u2581to \u2581the \u2581underlying \u2581 router ."], "references": ["\u2581// \u2581Add All \u2581 binds \u2581a \u2581 path \u2581to \u2581 GET , \u2581 POST , \u2581 PUT \u2581and \u2581 DELETE \u2581methods ."], "bleu": 0.11378740451770311, "rouge_l": 0.4273204903677758}
{"id": 2621, "predictions": ["\u2581// \u2581 Storage Volume Description Update \u2581updates \u2581the \u2581 description \u2581of \u2581a \u2581volume ."], "references": ["\u2581// \u2581 Storage Volume Description Update \u2581updates \u2581the \u2581 description \u2581of \u2581a \u2581storage \u2581volume ."], "bleu": 0.8375289281278355, "rouge_l": 0.959550561797753}
{"id": 3870, "predictions": ["\u2581// \u2581Set TTL \u2581sets \u2581the \u2581 TTL \u2581of \u2581the \u2581 call \u2581to \u2581the \u2581given \u2581duration"], "references": ["\u2581// \u2581Set TTL \u2581overwrite s \u2581the \u2581frame ' s \u2581 TTL ."], "bleu": 0.1892240568795935, "rouge_l": 0.4535315985130111}
{"id": 3093, "predictions": ["\u2581// \u2581 New Reporter \u2581creates \u2581a \u2581new \u2581 Reporter \u2581instance"], "references": ["\u2581// \u2581 New Reporter \u2581creates \u2581a \u2581new \u2581reporter \u2581and \u2581 kick s \u2581off \u2581the \u2581loop \u2581to \u2581report \u2581cluster \u2581// \u2581metrics"], "bleu": 0.2571222582445427, "rouge_l": 0.5030927835051546}
{"id": 2544, "predictions": ["\u2581// \u2581 Read \u2581the \u2581response \u2581from \u2581the \u2581 stdout"], "references": ["\u2581// \u2581 Read \u2581the \u2581user ' s \u2581answer \u2581from \u2581the \u2581input \u2581stream , \u2581trimming \u2581newline \u2581and \u2581providing \u2581a \u2581default ."], "bleu": 0.1330892025370195, "rouge_l": 0.38730158730158726}
{"id": 3632, "predictions": ["\u2581// \u2581 Release \u2581 releases \u2581the \u2581 relay \u2581state \u2581of \u2581the \u2581 relay ."], "references": ["\u2581// \u2581 Release \u2581 releases \u2581a \u2581timer \u2581back \u2581to \u2581the \u2581timer \u2581pool . \u2581The \u2581timer \u2581MUST \u2581have \u2581run \u2581or \u2581be \u2581// \u2581stopped \u2581before \u2581 Release \u2581is \u2581called ."], "bleu": 0.13181595631945853, "rouge_l": 0.35935198821796754}
{"id": 2504, "predictions": ["\u2581// \u2581 Operations UUID s \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581 UUID s \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Operations UUID s \u2581returns \u2581the \u2581 UUID s \u2581of \u2581all \u2581operations \u2581associated \u2581with \u2581 this \u2581// \u2581node ."], "bleu": 0.4286919467112682, "rouge_l": 0.5735042735042736}
{"id": 4047, "predictions": ["\u2581// \u2581Create App Log Collection \u2581creates \u2581a \u2581new \u2581 Collection \u2581for \u2581the \u2581given \u2581 app ."], "references": ["\u2581// \u2581Create App Log Collection \u2581creates \u2581a \u2581new \u2581 c apped \u2581collection \u2581to \u2581store \u2581logs \u2581for \u2581an \u2581 app ."], "bleu": 0.49997080760616364, "rouge_l": 0.7080357142857143}
{"id": 2239, "predictions": ["\u2581// \u2581 New Cancel er \u2581returns \u2581a \u2581new \u2581 Cancel er ."], "references": ["\u2581// \u2581 New Cancel er \u2581returns \u2581a \u2581new \u2581 Cancel er \u2581struct"], "bleu": 0.912167909070388, "rouge_l": 0.9166666666666665}
{"id": 3821, "predictions": ["\u2581// \u2581 Arguments \u2581returns \u2581the \u2581 description \u2581of \u2581the \u2581method ."], "references": ["\u2581// \u2581 Arguments \u2581returns \u2581the \u2581argument \u2581declarations \u2581for \u2581 this \u2581method ."], "bleu": 0.4412739850976205, "rouge_l": 0.6902404526166903}
{"id": 3642, "predictions": ["\u2581// \u2581 get \u2581returns \u2581a \u2581new \u2581channel \u2581with \u2581the \u2581given \u2581service \u2581 name ."], "references": ["\u2581// \u2581Get \u2581sub channel \u2581if , \u2581we \u2581have \u2581one"], "bleu": 0.08839374326825923, "rouge_l": 0.09050445103857567}
{"id": 3010, "predictions": ["\u2581// \u2581 No Error \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581error \u2581if \u2581the \u2581error \u2581is \u2581not \u2581nil ."], "references": ["\u2581// \u2581 No Error \u2581checks \u2581for \u2581no \u2581error ."], "bleu": 0.18493046910349434, "rouge_l": 0.44417475728155337}
{"id": 3485, "predictions": ["\u2581// \u2581 Header \u2581adds \u2581a \u2581request \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581 Header \u2581sets \u2581the \u2581given \u2581header ."], "bleu": 0.25965358893403384, "rouge_l": 0.5669144981412639}
{"id": 4041, "predictions": ["\u2581// \u2581 Conn \u2581returns \u2581a \u2581new \u2581 Storage \u2581object ."], "references": ["\u2581// \u2581 Conn \u2581reads \u2581the \u2581 t sur u \u2581 config \u2581and \u2581calls \u2581storage . Open \u2581to \u2581 get \u2581a \u2581database \u2581connection . \u2581// \u2581// \u2581 Most \u2581 t sur"], "bleu": 0.036520949774262054, "rouge_l": 0.22932330827067668}
{"id": 3889, "predictions": ["\u2581// \u2581 Empty File \u2581returns \u2581a \u2581 File \u2581that \u2581will \u2581 set \u2581the \u2581file \u2581 path \u2581to \u2581a \u2581file ."], "references": ["\u2581// \u2581 Empty File \u2581creates \u2581a \u2581 File \u2581wrapped \u2581around \u2581an \u2581 empty \u2581syntax \u2581tree ."], "bleu": 0.2404315522172745, "rouge_l": 0.5102230483271376}
{"id": 3682, "predictions": ["\u2581// \u2581new Writable Chunk \u2581creates \u2581a \u2581new \u2581 Nonce Chunk ."], "references": ["\u2581// \u2581new Writable Chunk \u2581creates \u2581a \u2581new \u2581writable \u2581chunk \u2581around \u2581a \u2581checksum \u2581and \u2581a \u2581buffer \u2581to \u2581hold \u2581 data"], "bleu": 0.3051833307618768, "rouge_l": 0.5088633993743482}
{"id": 4036, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581error \u2581string \u2581representation \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Error \u2581is \u2581the \u2581string \u2581representation \u2581of \u2581a \u2581 provisioning \u2581error ."], "bleu": 0.29444053526895814, "rouge_l": 0.71484375}
{"id": 2495, "predictions": ["\u2581// \u2581 Config GetInt 64 \u2581returns \u2581the \u2581 config \u2581value \u2581from \u2581the \u2581 Cluster ."], "references": ["\u2581// \u2581 Config GetInt 64 \u2581is \u2581a \u2581convenience \u2581for \u2581loading \u2581the \u2581cluster \u2581configuration \u2581and \u2581// \u2581returning \u2581the \u2581value \u2581of \u2581a \u2581particular \u2581 key . \u2581// \u2581// \u2581It ' s \u2581a"], "bleu": 0.12897954619115953, "rouge_l": 0.37731958762886597}
{"id": 3391, "predictions": ["\u2581// \u2581 X z Decompressor \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 x z file ."], "references": ["\u2581// \u2581 X z Decompressor \u2581is \u2581a \u2581 Decompressor Func \u2581for \u2581the \u2581 x z \u2581compression \u2581algorithm ."], "bleu": 0.39549114009835573, "rouge_l": 0.6402671755725191}
{"id": 2514, "predictions": ["\u2581// \u2581must GetKey \u2581returns \u2581a \u2581 key \u2581for \u2581the \u2581given \u2581 name . \u2581If \u2581the \u2581 key \u2581is \u2581not \u2581present , \u2581// \u2581it \u2581panic s ."], "references": ["\u2581// \u2581Get \u2581the \u2581 Key \u2581associated \u2581with \u2581the \u2581given \u2581 name , \u2581or \u2581panic ."], "bleu": 0.16730402692499982, "rouge_l": 0.4613445378151261}
{"id": 3018, "predictions": ["\u2581// \u2581 New Dry run ST M \u2581creates \u2581a \u2581new \u2581 Dry run s \u2581instance ."], "references": ["\u2581// \u2581 New Dry run ST M \u2581int iate s \u2581a \u2581new \u2581 ST M \u2581operation , \u2581but \u2581the \u2581final \u2581commit \u2581is \u2581skipped . \u2581// \u2581It \u2581uses \u2581a \u2581 serializable"], "bleu": 0.21570427638234646, "rouge_l": 0.45337837837837835}
{"id": 3869, "predictions": ["\u2581// \u2581 TTL \u2581returns \u2581the \u2581time \u2581 TTL \u2581of \u2581the \u2581request"], "references": ["\u2581// \u2581 TTL \u2581returns \u2581the \u2581time \u2581to \u2581live \u2581for \u2581 this \u2581 call Req ."], "bleu": 0.37062817570654066, "rouge_l": 0.5239263803680982}
{"id": 3530, "predictions": ["\u2581// \u2581 BindVariable s Equal \u2581returns \u2581true \u2581if \u2581the \u2581 x \u2581 equals \u2581 x \u2581and \u2581 y ."], "references": ["\u2581// \u2581 BindVariable s Equal \u2581compares \u2581two \u2581maps \u2581of \u2581 bind \u2581variables ."], "bleu": 0.2534743707366162, "rouge_l": 0.4528101802757158}
{"id": 2493, "predictions": ["\u2581// \u2581 Config GetString \u2581returns \u2581the \u2581 config \u2581value \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Config GetString \u2581is \u2581a \u2581convenience \u2581for \u2581loading \u2581the \u2581cluster \u2581configuration \u2581and \u2581// \u2581returning \u2581the \u2581value \u2581of \u2581a \u2581particular \u2581 key . \u2581// \u2581// \u2581It ' s \u2581a \u2581deprecated"], "bleu": 0.12466383462185707, "rouge_l": 0.37731958762886597}
{"id": 2753, "predictions": ["\u2581// \u2581 Health \u2581returns \u2581the \u2581health \u2581of \u2581the \u2581health \u2581check ."], "references": ["\u2581// \u2581 Health \u2581implements \u2581the \u2581 Health \u2581method \u2581for \u2581health Server ."], "bleu": 0.22265215139875258, "rouge_l": 0.5176803394625177}
{"id": 4070, "predictions": ["\u2581// \u2581 Proxy \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sends \u2581a \u2581 route \u2581to \u2581the \u2581server"], "references": ["\u2581// \u2581 Proxy \u2581is \u2581not \u2581implemented \u2581for \u2581 OS B \u2581API \u2581implementations"], "bleu": 0.2240750868020436, "rouge_l": 0.36658653846153844}
{"id": 2354, "predictions": ["\u2581// \u2581 P stats Address \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 active \u2581 Address ."], "references": ["\u2581// \u2581 P prof Address \u2581returns \u2581the \u2581network \u2581address s \u2581of \u2581the \u2581 pprof \u2581endpoint , \u2581or \u2581an \u2581 empty \u2581string \u2581if \u2581there ' s \u2581no \u2581 pprof \u2581endpoint"], "bleu": 0.12289196913423664, "rouge_l": 0.4224376731301939}
{"id": 2791, "predictions": ["\u2581// \u2581 Is Expired \u2581implements \u2581the \u2581 Credentials Provider \u2581interface ."], "references": ["\u2581// \u2581 Is Expired \u2581returns \u2581if \u2581the \u2581credentials \u2581are \u2581no \u2581longer \u2581valid , \u2581and \u2581need \u2581to \u2581be \u2581// \u2581retrieved ."], "bleu": 0.15215679837804733, "rouge_l": 0.36783919597989945}
{"id": 3560, "predictions": ["\u2581// \u2581 List Peers \u2581returns \u2581a \u2581list \u2581of \u2581peers \u2581that \u2581are \u2581currently \u2581connected \u2581to \u2581the \u2581given \u2581topic ."], "references": ["\u2581// \u2581 List Peers \u2581returns \u2581a \u2581list \u2581of \u2581peers \u2581we \u2581are \u2581connected \u2581to \u2581in \u2581the \u2581given \u2581topic ."], "bleu": 0.6602703762983495, "rouge_l": 0.8888888888888888}
{"id": 2496, "predictions": ["\u2581// \u2581 Cluster Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Cluster Address \u2581returns \u2581the \u2581cluster \u2581address s \u2581of \u2581the \u2581cluster \u2581endpoint , \u2581or \u2581an \u2581// \u2581 empty \u2581string \u2581if \u2581there ' s \u2581no \u2581cluster \u2581endpoint ."], "bleu": 0.141492730435919, "rouge_l": 0.5229929851909587}
{"id": 2633, "predictions": ["\u2581// \u2581 Network Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581 Endpoints \u2581that \u2581is \u2581 active ."], "references": ["\u2581// \u2581 Network Address \u2581returns \u2581the \u2581network \u2581address s \u2581of \u2581the \u2581network \u2581endpoint , \u2581or \u2581an \u2581// \u2581 empty \u2581string \u2581if \u2581there ' s \u2581no \u2581network \u2581endpoint"], "bleu": 0.20375377989497853, "rouge_l": 0.4446064139941691}
{"id": 3369, "predictions": ["\u2581// \u2581 Schema 2 From Manifest \u2581returns \u2581a \u2581 Schema \u2581from \u2581a \u2581manifest \u2581 path ."], "references": ["\u2581// \u2581 Schema 2 From Manifest \u2581creates \u2581a \u2581 Schema 2 \u2581manifest \u2581instance \u2581from \u2581a \u2581manifest \u2581blob ."], "bleu": 0.45168706813352083, "rouge_l": 0.7566793893129771}
{"id": 4034, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 provisioner \u2581from \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get \u2581gets \u2581the \u2581named \u2581 provisioner \u2581from \u2581the \u2581registry ."], "bleu": 0.3541698766144061, "rouge_l": 0.7011494252873562}
{"id": 3595, "predictions": ["\u2581// \u2581 remove \u2581the \u2581peer ' s \u2581 active \u2581 inbound \u2581connections ."], "references": ["\u2581// \u2581can Remove \u2581returns \u2581whether \u2581 this \u2581peer \u2581can \u2581be \u2581safely \u2581removed \u2581from \u2581the \u2581root \u2581peer \u2581list ."], "bleu": 0.08557366716621025, "rouge_l": 0.31346351490236385}
{"id": 3926, "predictions": ["\u2581// \u2581 Equal \u2581returns \u2581true \u2581if \u2581two \u2581 Label \u2581 equals \u2581another ."], "references": ["\u2581// \u2581 Equal \u2581returns \u2581whether \u2581two \u2581labels \u2581are \u2581exactly \u2581the \u2581same . \u2581It \u2581does \u2581not \u2581return \u2581// \u2581true \u2581for \u2581different \u2581labels \u2581that \u2581refer \u2581to \u2581the \u2581same \u2581target ."], "bleu": 0.09430939520806864, "rouge_l": 0.27456864216054017}
{"id": 2261, "predictions": ["\u2581// \u2581Get Raw \u2581returns \u2581the \u2581raw \u2581value \u2581of \u2581the \u2581 map \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Raw \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key , \u2581which \u2581must \u2581be \u2581of \u2581 type \u2581String ."], "bleu": 0.34493814379091947, "rouge_l": 0.5860262008733624}
{"id": 3564, "predictions": ["\u2581// \u2581 Unregister Topic Validator \u2581removes \u2581a \u2581topic \u2581from \u2581the \u2581given \u2581topic"], "references": ["\u2581// \u2581 Unregister Topic Validator \u2581removes \u2581a \u2581 validator \u2581from \u2581a \u2581topic . \u2581// \u2581Returns \u2581an \u2581error \u2581if \u2581there \u2581was \u2581no \u2581 validator \u2581registered \u2581with \u2581the \u2581topic ."], "bleu": 0.16871725148927694, "rouge_l": 0.4663608562691131}
{"id": 3243, "predictions": ["\u2581// \u2581 Emit String \u2581implements \u2581the \u2581 KeyValue \u2581interface ."], "references": ["\u2581// \u2581 Emit String \u2581belongs \u2581to \u2581the \u2581log . Encoder \u2581interface"], "bleu": 0.3570381007186144, "rouge_l": 0.56656346749226}
{"id": 3575, "predictions": ["\u2581// \u2581 New TCP Raw Relay \u2581creates \u2581a \u2581new \u2581 TCP Raw Relay \u2581using \u2581the \u2581given \u2581 slice \u2581and \u2581// \u2581 net . Conn ."], "references": ["\u2581// \u2581 New TCP Raw Relay \u2581creates \u2581a \u2581 relay \u2581that \u2581just \u2581 pipes \u2581 data \u2581from \u2581one \u2581connection \u2581// \u2581to \u2581another \u2581directly ."], "bleu": 0.3383792470222344, "rouge_l": 0.49160510409670927}
{"id": 2329, "predictions": ["\u2581// \u2581String Map Has String Key \u2581returns \u2581true \u2581if \u2581the \u2581 key \u2581is \u2581in \u2581the \u2581 map"], "references": ["\u2581// \u2581String Map Has String Key \u2581returns \u2581true \u2581if \u2581any \u2581of \u2581the \u2581supplied \u2581 keys \u2581are \u2581present \u2581in \u2581the \u2581 map ."], "bleu": 0.5039424763216606, "rouge_l": 0.751848808545604}
{"id": 4026, "predictions": ["\u2581// \u2581Get Std Logger \u2581returns \u2581the \u2581logger ' s \u2581logger ."], "references": ["\u2581// \u2581Get Std Logger \u2581returns \u2581a \u2581standard \u2581 Logger \u2581instance \u2581// \u2581useful \u2581for \u2581 configuring \u2581log \u2581in \u2581external \u2581packages ."], "bleu": 0.19132704483408294, "rouge_l": 0.36783919597989945}
{"id": 2638, "predictions": ["\u2581// \u2581 Config \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581 TLS \u2581configuration \u2581for \u2581the \u2581given \u2581certificate ."], "references": ["\u2581// \u2581 Config \u2581safely \u2581swap s \u2581the \u2581underlying \u2581 TLS \u2581configuration ."], "bleu": 0.20706193828327604, "rouge_l": 0.5694282380396732}
{"id": 3017, "predictions": ["\u2581// \u2581 New ST M \u2581creates \u2581a \u2581new \u2581 v 3 Txn Response ."], "references": ["\u2581// \u2581 New ST M \u2581int iate s \u2581a \u2581new \u2581 ST M \u2581operation . \u2581It \u2581uses \u2581a \u2581 serializable \u2581 model ."], "bleu": 0.2224703006386178, "rouge_l": 0.4660441426146011}
{"id": 2677, "predictions": ["\u2581// \u2581socket Unix Set Permissions \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581 set \u2581permissions \u2581on \u2581local \u2581// \u2581permissions ."], "references": ["\u2581// \u2581 Change \u2581the \u2581file \u2581mode \u2581of \u2581the \u2581given \u2581unix \u2581socket \u2581file ,"], "bleu": 0.07658412276041004, "rouge_l": 0.1293743372216331}
{"id": 3289, "predictions": ["\u2581// \u2581 OCI 1 From Manifest \u2581converts \u2581a \u2581 Manifest \u2581to \u2581a \u2581 OCI \u2581 OCI \u2581 OCI \u2581 OCI \u2581 OCI \u2581 OCI \u2581 OCI \u2581 OCI \u2581 OCI"], "references": ["\u2581// \u2581 OCI 1 From Manifest \u2581creates \u2581an \u2581 OCI 1 \u2581manifest \u2581instance \u2581from \u2581a \u2581manifest \u2581blob ."], "bleu": 0.20750198923629268, "rouge_l": 0.3490701001430615}
{"id": 3556, "predictions": ["\u2581// \u2581 Subscribe \u2581 subscribe s \u2581to \u2581a \u2581topic \u2581for \u2581a \u2581topic ."], "references": ["\u2581// \u2581 Subscribe \u2581returns \u2581a \u2581new \u2581 Subscription \u2581for \u2581the \u2581given \u2581topic . \u2581// \u2581Note \u2581that \u2581subscription \u2581is \u2581not \u2581an \u2581 instant en e ous \u2581operation . \u2581It \u2581may \u2581take"], "bleu": 0.06327734388841769, "rouge_l": 0.30391459074733096}
{"id": 4045, "predictions": ["\u2581// \u2581 SAML Requests \u2581returns \u2581the \u2581 SAML \u2581 data \u2581for \u2581the \u2581given \u2581 role ."], "references": ["\u2581// \u2581 SAML Requests \u2581returns \u2581the \u2581 saml _ requests \u2581from \u2581 MongoDB ."], "bleu": 0.4378826865860793, "rouge_l": 0.6073008849557523}
{"id": 2185, "predictions": ["\u2581// \u2581 Trim Above \u2581returns \u2581the \u2581 trace \u2581at \u2581the \u2581given \u2581 path . \u2581If \u2581the \u2581 call \u2581is \u2581not \u2581// \u2581 empty , \u2581the \u2581 trace \u2581is \u2581not \u2581"], "references": ["\u2581// \u2581 Trim Above \u2581returns \u2581a \u2581 slice \u2581of \u2581the \u2581 Trace \u2581with \u2581all \u2581entries \u2581above \u2581pc \u2581removed ."], "bleu": 0.17572088410223174, "rouge_l": 0.3828451882845188}
{"id": 3284, "predictions": ["\u2581// \u2581 Destroy \u2581 destroy s \u2581the \u2581policy \u2581and \u2581returns \u2581the \u2581 Policy Context ."], "references": ["\u2581// \u2581 Destroy \u2581should \u2581be \u2581called \u2581when \u2581the \u2581user \u2581of \u2581the \u2581context \u2581is \u2581done \u2581with \u2581it ."], "bleu": 0.15411174368247596, "rouge_l": 0.37082066869300917}
{"id": 3969, "predictions": ["\u2581// \u2581 Mapped Kind \u2581returns \u2581the \u2581 kind \u2581of \u2581 type \u2581 kind \u2581for \u2581the \u2581given \u2581 kind ."], "references": ["\u2581// \u2581 Mapped Kind \u2581records \u2581the \u2581fact \u2581that \u2581the \u2581given \u2581mapping \u2581was \u2581applied \u2581while \u2581// \u2581processing \u2581the \u2581given \u2581package ."], "bleu": 0.20826058354833846, "rouge_l": 0.4083682008368201}
{"id": 2137, "predictions": ["\u2581// \u2581 Delete Container \u2581deletes \u2581a \u2581 container"], "references": ["\u2581// \u2581 Delete Container \u2581removes \u2581the \u2581 M AAS \u2581device \u2581for \u2581the \u2581 container"], "bleu": 0.2424870307094059, "rouge_l": 0.5198863636363635}
{"id": 3280, "predictions": ["\u2581// \u2581Get Insecure Registries \u2581returns \u2581the \u2581 insecure \u2581 Registries \u2581 Registries \u2581 characteristics \u2581of \u2581the \u2581// \u2581system ."], "references": ["\u2581// \u2581Get Insecure Registries \u2581returns \u2581an \u2581array \u2581of \u2581strings \u2581that \u2581contain \u2581the \u2581names \u2581// \u2581of \u2581the \u2581 insecure \u2581 registries \u2581as \u2581defined \u2581in \u2581the \u2581system - wide \u2581// \u2581 registries"], "bleu": 0.22899518430320487, "rouge_l": 0.4315112540192926}
{"id": 3890, "predictions": ["\u2581// \u2581 Load Workspace File \u2581 loads \u2581a \u2581file \u2581from \u2581the \u2581 workspace \u2581 path ."], "references": ["\u2581// \u2581 Load Workspace File \u2581is \u2581similar \u2581to \u2581 Load File \u2581but \u2581parses \u2581the \u2581file \u2581as \u2581a \u2581 WORK SPACE \u2581// \u2581file ."], "bleu": 0.21633771514346256, "rouge_l": 0.4470684039087948}
{"id": 2089, "predictions": ["\u2581// \u2581 Unix Socket \u2581returns \u2581the \u2581socket \u2581 path \u2581of \u2581the \u2581 container"], "references": ["\u2581// \u2581 Unix Socket \u2581returns \u2581the \u2581full \u2581 path \u2581to \u2581the \u2581unix . socket \u2581file \u2581that \u2581 this \u2581daemon \u2581is \u2581// \u2581listening \u2581on . \u2581 Used \u2581by \u2581tests ."], "bleu": 0.14696115786450958, "rouge_l": 0.44558071585098613}
{"id": 2584, "predictions": ["\u2581// \u2581 Field Columns \u2581returns \u2581the \u2581field \u2581columns \u2581for \u2581the \u2581field ."], "references": ["\u2581// \u2581 Field Columns \u2581converts \u2581the given \u2581fields \u2581to \u2581list \u2581of \u2581column \u2581names \u2581separated \u2581// \u2581by \u2581a \u2581comma ."], "bleu": 0.1755333138219321, "rouge_l": 0.3719512195121951}
{"id": 3848, "predictions": ["\u2581// \u2581 New Wrapped Temp \u2581creates \u2581a \u2581new \u2581 Wrapped \u2581instance \u2581with \u2581the \u2581given \u2581 code ."], "references": ["\u2581// \u2581 New Wrapped SystemError \u2581defines \u2581a \u2581new \u2581 SystemError \u2581wrapping \u2581an \u2581existing \u2581error"], "bleu": 0.2689054715066593, "rouge_l": 0.45963401506996776}
{"id": 2717, "predictions": ["\u2581// \u2581 Write \u2581implements \u2581 Writer ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581val \u2581to \u2581 r ."], "bleu": 0.28751742289713444, "rouge_l": 0.6112224448897796}
{"id": 3510, "predictions": ["\u2581// \u2581reset \u2581is \u2581used \u2581to \u2581 clear \u2581the \u2581 Tokenizer ."], "references": ["\u2581// \u2581reset \u2581 clear s \u2581any \u2581internal \u2581state ."], "bleu": 0.1972940627795883, "rouge_l": 0.5091819699499166}
{"id": 2188, "predictions": ["\u2581// \u2581 Trim Runtime \u2581returns \u2581the \u2581 trace \u2581from \u2581the \u2581 trace ."], "references": ["\u2581// \u2581 Trim Runtime \u2581returns \u2581a \u2581 slice \u2581of \u2581the \u2581 Trace \u2581with \u2581the \u2581 top most \u2581entries \u2581from \u2581the \u2581// \u2581go \u2581runtime \u2581removed . \u2581It \u2581consider s \u2581any \u2581calls"], "bleu": 0.1265546877768354, "rouge_l": 0.43416370106761565}
{"id": 4066, "predictions": ["\u2581// \u2581 Watch \u2581returns \u2581a \u2581 watch . Interface \u2581that \u2581 watches \u2581the \u2581requested \u2581 Apps ."], "references": ["\u2581// \u2581 Watch \u2581returns \u2581a \u2581 watch . Interface \u2581that \u2581 watches \u2581the \u2581requested \u2581 apps ."], "bleu": 0.8915993127600096, "rouge_l": 0.9411764705882352}
{"id": 3527, "predictions": ["\u2581// \u2581 Encode SQL \u2581encodes \u2581the \u2581tuple \u2581into \u2581the \u2581 SQL \u2581aggregation \u2581list ."], "references": ["\u2581// \u2581 Encode SQL \u2581generates \u2581the \u2581where \u2581clause \u2581constraints \u2581for \u2581the \u2581tuple \u2581// \u2581equality ."], "bleu": 0.2805329853308473, "rouge_l": 0.4797752808988765}
{"id": 4022, "predictions": ["\u2581// \u2581 Error \u2581implements \u2581the \u2581 Target \u2581interface ."], "references": ["\u2581// \u2581 Error \u2581writes \u2581the \u2581given \u2581values \u2581to \u2581the \u2581 Target \u2581// \u2581logger ."], "bleu": 0.22537874966994986, "rouge_l": 0.5857338820301784}
{"id": 2210, "predictions": ["\u2581// \u2581Get Private Image \u2581returns \u2581the \u2581image \u2581image \u2581for \u2581the \u2581given \u2581image"], "references": ["\u2581// \u2581Get Private Image \u2581isn ' t \u2581relevant \u2581for \u2581the \u2581simple streams \u2581protocol"], "bleu": 0.3060090678676363, "rouge_l": 0.4765625000000001}
{"id": 3062, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 Close \u2581the \u2581connection \u2581to \u2581gRPC"], "bleu": 0.3655552228545123, "rouge_l": 0.5714285714285714}
{"id": 3279, "predictions": ["\u2581// \u2581Get Registries \u2581returns \u2581 statistic d \u2581by \u2581 kubelet ' s \u2581 path ."], "references": ["\u2581// \u2581Get Registries \u2581returns \u2581an \u2581array \u2581of \u2581strings \u2581that \u2581contain \u2581the \u2581names \u2581// \u2581of \u2581the \u2581 registries \u2581as \u2581defined \u2581in \u2581the \u2581system - wide \u2581// \u2581 registries \u2581file . \u2581it"], "bleu": 0.09472403025585548, "rouge_l": 0.2934707903780069}
{"id": 3013, "predictions": ["\u2581// \u2581 Yes Error \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581error \u2581is \u2581not \u2581nil ."], "references": ["\u2581// \u2581 Yes Error \u2581checks \u2581for \u2581an \u2581error ."], "bleu": 0.29256127307315066, "rouge_l": 0.6335311572700296}
{"id": 3721, "predictions": ["\u2581// \u2581 Write JSON \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581 Arg o \u2581 format ."], "references": ["\u2581// \u2581 Write JSON \u2581writes \u2581the \u2581given \u2581object \u2581as \u2581JSON ."], "bleu": 0.360056585428503, "rouge_l": 0.53643216080402}
{"id": 4027, "predictions": ["\u2581// \u2581 Namespace \u2581returns \u2581the \u2581namespace \u2581of \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Namespace \u2581returns \u2581the \u2581namespace \u2581to \u2581be \u2581used \u2581by \u2581 Custom \u2581 Resources"], "bleu": 0.366595791717893, "rouge_l": 0.5020576131687242}
{"id": 3254, "predictions": ["\u2581// \u2581 Logs \u2581returns \u2581the \u2581 data \u2581of \u2581the \u2581 span"], "references": ["\u2581// \u2581 Logs \u2581returns \u2581a \u2581copy \u2581of \u2581logs \u2581 accumulated \u2581in \u2581the \u2581 span \u2581so \u2581far"], "bleu": 0.2845768818926518, "rouge_l": 0.5734430082256169}
{"id": 2173, "predictions": ["\u2581// \u2581 New Config \u2581returns \u2581a \u2581new \u2581 Config \u2581instance"], "references": ["\u2581// \u2581 New Config \u2581returns \u2581a \u2581 Config , \u2581optionally \u2581using \u2581default \u2581 remotes ."], "bleu": 0.3830576146513924, "rouge_l": 0.6177215189873417}
{"id": 2363, "predictions": ["\u2581// \u2581 StoragePool Config Add \u2581adds \u2581a \u2581new \u2581 config \u2581to \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 StoragePool Config Add \u2581adds \u2581a \u2581new \u2581entry \u2581in \u2581the \u2581storage _ pools _ config \u2581 table"], "bleu": 0.4451024859759426, "rouge_l": 0.5501002004008017}
{"id": 2538, "predictions": ["\u2581// \u2581 Ask Choice \u2581checks \u2581the \u2581 token \u2581to \u2581be \u2581 resized"], "references": ["\u2581// \u2581 Ask Choice \u2581 asks \u2581the \u2581user \u2581to \u2581 select \u2581one \u2581of \u2581multiple \u2581options"], "bleu": 0.26086180586191693, "rouge_l": 0.5083333333333334}
{"id": 3116, "predictions": ["\u2581// \u2581 Run For SAML Blocks \u2581implements \u2581 PortForward er \u2581interface ."], "references": ["\u2581// \u2581 Run For SAML ACS \u2581creates \u2581a \u2581port \u2581 forwarder \u2581for \u2581 SAML \u2581 ACS ."], "bleu": 0.2696031451698737, "rouge_l": 0.4682017543859649}
{"id": 3120, "predictions": ["\u2581// \u2581 Run For S 3 Gateway \u2581 Run s \u2581the \u2581 listen er \u2581for \u2581the \u2581given \u2581gateway \u2581 name ."], "references": ["\u2581// \u2581 Run For S 3 Gateway \u2581creates \u2581a \u2581port \u2581 forwarder \u2581for \u2581the \u2581 s 3 gateway ."], "bleu": 0.38305978177479755, "rouge_l": 0.6054590570719602}
{"id": 3733, "predictions": ["\u2581// \u2581 Write Struct \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Write Struct \u2581writes \u2581the \u2581given \u2581Thrift \u2581struct \u2581to \u2581a \u2581writer . \u2581It \u2581 pools \u2581 TProtocol s ."], "bleu": 0.310322383647999, "rouge_l": 0.525358851674641}
{"id": 2163, "predictions": ["\u2581// \u2581 Metadata AsString Slice \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581response ."], "references": ["\u2581// \u2581 Metadata AsString Slice \u2581parses \u2581the \u2581 Response \u2581metadata \u2581into \u2581a \u2581 slice \u2581of \u2581string"], "bleu": 0.32174411956056614, "rouge_l": 0.541620421753607}
{"id": 3717, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 data \u2581from \u2581the \u2581 slice \u2581of \u2581bytes ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581from \u2581the \u2581reader \u2581into \u2581the \u2581 byte \u2581 slice ."], "bleu": 0.3521856535823236, "rouge_l": 0.642857142857143}
{"id": 2726, "predictions": ["\u2581// \u2581 Init With Kube \u2581initializes \u2581a \u2581new \u2581 Service Env \u2581with \u2581the \u2581given \u2581configuration ."], "references": ["\u2581// \u2581 Init With Kube \u2581is \u2581like \u2581 Init Service Env , \u2581but \u2581also \u2581assumes \u2581that \u2581it ' s \u2581run \u2581inside \u2581// \u2581a \u2581 kubernetes \u2581cluster \u2581and \u2581tries \u2581to \u2581"], "bleu": 0.13967812699315366, "rouge_l": 0.32972972972972975}
{"id": 3685, "predictions": ["\u2581// \u2581 Arg Writer \u2581returns \u2581the \u2581 Arg Writer \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arg Writer \u2581returns \u2581an \u2581 Arg Writer \u2581to \u2581 write \u2581an \u2581argument . \u2581The \u2581 Arg Writer \u2581will \u2581handle \u2581// \u2581fragment ation \u2581as \u2581needed . \u2581 Once \u2581the"], "bleu": 0.15160987754015437, "rouge_l": 0.41924398625429554}
{"id": 3684, "predictions": ["\u2581// \u2581new Fragment ing Writer \u2581creates \u2581a \u2581new \u2581fragment ing Writer ."], "references": ["\u2581// \u2581new Fragment ing Writer \u2581creates \u2581a \u2581new \u2581fragment ing \u2581writer"], "bleu": 0.8242367502646054, "rouge_l": 0.8764367816091955}
{"id": 3310, "predictions": ["\u2581// \u2581 New PR Signed ByKey Data \u2581creates \u2581a \u2581new \u2581 Public Signed ByKey \u2581object"], "references": ["\u2581// \u2581 New PR Signed ByKey Data \u2581returns \u2581a \u2581new \u2581\" signed By \" \u2581 Policy Requirement \u2581using \u2581a \u2581 Key Data"], "bleu": 0.3109278086622796, "rouge_l": 0.522707797772065}
{"id": 3817, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581peer ' s \u2581 Peer ."], "references": ["\u2581// \u2581Get \u2581returns \u2581a \u2581peer \u2581for \u2581the \u2581given \u2581 hostPort \u2581if \u2581it \u2581 exists ."], "bleu": 0.16923172176950127, "rouge_l": 0.46329113924050636}
{"id": 3473, "predictions": ["\u2581// \u2581 Push Front \u2581inserts \u2581a \u2581 seq \u2581into \u2581the \u2581 seq ."], "references": ["\u2581// \u2581Adds \u2581an \u2581element \u2581to \u2581the \u2581sequence \u2581beginning . \u2581// \u2581Returns \u2581a \u2581pointer \u2581to \u2581the \u2581element \u2581added ."], "bleu": 0.08176074349645106, "rouge_l": 0.25077081192189105}
{"id": 3680, "predictions": ["\u2581// \u2581 Arg Reader \u2581returns \u2581the \u2581next \u2581 Arg Reader \u2581for \u2581the \u2581given \u2581 doc ."], "references": ["\u2581// \u2581The \u2581 Arg Reader \u2581will \u2581handle \u2581fragment ation \u2581as \u2581needed . \u2581 Once \u2581the \u2581argument \u2581has \u2581// \u2581been \u2581read , \u2581the \u2581 Arg Reader \u2581must \u2581be \u2581closed ."], "bleu": 0.10513729762762022, "rouge_l": 0.38019390581717455}
{"id": 3734, "predictions": ["\u2581// \u2581 Read Struct \u2581reads \u2581a \u2581 protobuf \u2581reader \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581 Read Struct \u2581reads \u2581the \u2581given \u2581Thrift \u2581struct . \u2581It \u2581 pools \u2581 TProtocol s ."], "bleu": 0.32235977248679504, "rouge_l": 0.5424901185770752}
{"id": 2413, "predictions": ["\u2581// \u2581 removeAll Parse Profile \u2581will \u2581 remove \u2581the \u2581 app \u2581profile ."], "references": ["\u2581// \u2581Parse \u2581the \u2581profile \u2581without \u2581loading \u2581it \u2581into \u2581the \u2581kernel ."], "bleu": 0.12011055432195765, "rouge_l": 0.33841886269070737}
{"id": 3364, "predictions": ["\u2581// \u2581Validate ImageName \u2581validates \u2581the \u2581image \u2581 name \u2581and \u2581 contains \u2581the \u2581correct \u2581 name"], "references": ["\u2581// \u2581Validate ImageName \u2581returns \u2581nil \u2581if \u2581the \u2581image \u2581 name \u2581is \u2581 empty \u2581or \u2581matches \u2581the \u2581open - containers \u2581image \u2581 name \u2581specs . \u2581// \u2581 In \u2581any \u2581other \u2581case"], "bleu": 0.12956186142846438, "rouge_l": 0.4611683848797251}
{"id": 3225, "predictions": ["\u2581// \u2581make \u2581address \u2581returns \u2581a \u2581 Value \u2581that \u2581is \u2581the \u2581same \u2581value \u2581as \u2581 v ."], "references": ["\u2581// \u2581make Addressable \u2581returns \u2581a \u2581value \u2581that \u2581is \u2581always \u2581address able . \u2581// \u2581It \u2581returns \u2581the \u2581input \u2581 verbatim \u2581if \u2581it \u2581is \u2581already \u2581address able , \u2581// \u2581otherwise \u2581it \u2581creates"], "bleu": 0.07097503052612043, "rouge_l": 0.32972972972972975}
{"id": 2384, "predictions": ["\u2581// \u2581 StoragePool Node Volumes Volumes \u2581returns \u2581the \u2581list \u2581of \u2581 Volumes \u2581instances \u2581for \u2581a \u2581given \u2581 type ."], "references": ["\u2581// \u2581 StoragePool Node Volumes GetType \u2581returns \u2581all \u2581storage \u2581volumes \u2581attached \u2581to \u2581a \u2581// \u2581given \u2581storage \u2581pool \u2581of \u2581a \u2581given \u2581volume \u2581 type , \u2581on \u2581the \u2581current \u2581node ."], "bleu": 0.18734820289406123, "rouge_l": 0.48189598420013163}
{"id": 3636, "predictions": ["\u2581// \u2581 Isolated \u2581is \u2581part \u2581of \u2581the \u2581 raft . Channel \u2581interface ."], "references": ["\u2581// \u2581 Isolated \u2581is \u2581a \u2581 Sub ChannelOption \u2581that \u2581creates \u2581an \u2581 isolated \u2581sub channel ."], "bleu": 0.229585358002991, "rouge_l": 0.4062153163152054}
{"id": 3119, "predictions": ["\u2581// \u2581 Run For P FS \u2581 mounts \u2581the \u2581given \u2581 P FS \u2581into \u2581the \u2581 router ."], "references": ["\u2581// \u2581 Run For P FS \u2581creates \u2581a \u2581port \u2581 forwarder \u2581for \u2581 P FS \u2581over \u2581HTTP ."], "bleu": 0.39670882908365773, "rouge_l": 0.6111111111111113}
{"id": 3121, "predictions": ["\u2581// \u2581 Lock \u2581 loads \u2581the \u2581 pid \u2581file \u2581for \u2581the \u2581port \u2581 set ."], "references": ["\u2581// \u2581 Lock \u2581uses \u2581 pidfile s \u2581to \u2581ensure \u2581that \u2581only \u2581one \u2581port \u2581 forwarder \u2581is \u2581running \u2581across \u2581// \u2581one \u2581or \u2581more \u2581` p ach ctl ` \u2581instances"], "bleu": 0.07954040506762983, "rouge_l": 0.2646420824295011}
{"id": 3790, "predictions": ["\u2581// \u2581with State Funcs \u2581is \u2581a \u2581convenience \u2581function \u2581that \u2581returns \u2581the \u2581 Template \u2581template \u2581// \u2581for \u2581the \u2581template ."], "references": ["\u2581// \u2581with State Funcs \u2581adds \u2581function s \u2581to \u2581the \u2581template \u2581that \u2581are \u2581dependent \u2581upon \u2581state ."], "bleu": 0.22537412722674852, "rouge_l": 0.4643196955280685}
{"id": 3049, "predictions": ["\u2581// \u2581 Images \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581images \u2581in \u2581the \u2581 Image \u2581 config"], "references": ["\u2581// \u2581 Images \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581images \u2581that \u2581are \u2581used \u2581by \u2581a \u2581 pac hyd er m \u2581deployment ."], "bleu": 0.3456517143443623, "rouge_l": 0.522707797772065}
{"id": 2162, "predictions": ["\u2581// \u2581 Metadata As Operation \u2581returns \u2581the \u2581operation \u2581 type \u2581of \u2581the \u2581operation ."], "references": ["\u2581// \u2581 Metadata As Operation \u2581 turn s \u2581the \u2581 Response \u2581metadata \u2581into \u2581an \u2581 Operation"], "bleu": 0.3016006458695292, "rouge_l": 0.46112311015118784}
{"id": 2352, "predictions": ["\u2581// \u2581 Load Module \u2581 loads \u2581a \u2581module \u2581from \u2581the \u2581system ."], "references": ["\u2581// \u2581 Load Module \u2581 loads \u2581the \u2581kernel \u2581module \u2581with \u2581the \u2581given \u2581 name , \u2581by \u2581invoking \u2581// \u2581mod probe ."], "bleu": 0.24290985189770614, "rouge_l": 0.5198863636363635}
{"id": 3591, "predictions": ["\u2581// \u2581update Peer \u2581updates \u2581the \u2581peer \u2581list ."], "references": ["\u2581// \u2581update Peer \u2581is \u2581called \u2581to \u2581update \u2581the \u2581score \u2581of \u2581the \u2581peer \u2581given \u2581the \u2581existing \u2581score . \u2581// \u2581Note \u2581that \u2581a \u2581 Write \u2581lock \u2581must \u2581be \u2581 held \u2581to \u2581"], "bleu": 0.023582602720858287, "rouge_l": 0.2859375}
{"id": 2101, "predictions": ["\u2581// \u2581 PublicKey \u2581returns \u2581the \u2581public \u2581 key \u2581of \u2581the \u2581certificate ."], "references": ["\u2581// \u2581 PublicKey \u2581is \u2581a \u2581convenience \u2581to \u2581 encode \u2581the \u2581underlying \u2581public \u2581 key \u2581to \u2581ASCII ."], "bleu": 0.19633516290958308, "rouge_l": 0.5350877192982455}
{"id": 3985, "predictions": ["\u2581// \u2581 Combine Handlers \u2581returns \u2581a \u2581middleware \u2581that \u2581handles \u2581the \u2581 handlers \u2581in \u2581the \u2581 Handlers ."], "references": ["\u2581// Combine Handler \u2581takes \u2581 variadic \u2581list \u2581of \u2581 handlers \u2581and \u2581produces \u2581one \u2581handler \u2581// that \u2581calls \u2581each \u2581handler \u2581in \u2581order ."], "bleu": 0.09053430196761592, "rouge_l": 0.30073952341824156}
{"id": 3117, "predictions": ["\u2581// \u2581 Run For Dash UI \u2581runs \u2581the \u2581 UI \u2581 handlers \u2581for \u2581the \u2581 router er ."], "references": ["\u2581// \u2581 Run For Dash UI \u2581creates \u2581a \u2581port \u2581 forwarder \u2581for \u2581the \u2581 dash \u2581 UI ."], "bleu": 0.4246163317880344, "rouge_l": 0.6111111111111113}
{"id": 3118, "predictions": ["\u2581// \u2581 Run For Dash WebSocket \u2581starts \u2581a \u2581 PortForward er \u2581for \u2581the \u2581given \u2581 pipe ."], "references": ["\u2581// \u2581 Run For Dash WebSocket \u2581creates \u2581a \u2581port \u2581 forwarder \u2581for \u2581the \u2581 dash \u2581websocket ."], "bleu": 0.396766210849689, "rouge_l": 0.7058823529411764}
{"id": 3058, "predictions": ["\u2581// \u2581clean 1 _ 7 Hash tree Path Path Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 7 \u2581hash tree Path \u2581// \u2581 path \u2581is \u2581 empty ."], "references": ["\u2581// \u2581clean \u2581 canonicalize s \u2581' path ' \u2581for \u2581a \u2581 Pac hyd er m \u2581 1.7 \u2581hash tree"], "bleu": 0.0829597922281908, "rouge_l": 0.30852601156069365}
{"id": 3208, "predictions": ["\u2581// \u2581retrieve Un monitor Field \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581struct \u2581field ."], "references": ["\u2581// \u2581retrieve Un exported Field \u2581uses \u2581 unsafe \u2581to \u2581for ci b ly \u2581retrieve \u2581any \u2581field \u2581from \u2581// \u2581a \u2581struct \u2581such \u2581that \u2581the \u2581value \u2581has \u2581read - write \u2581permissions ."], "bleu": 0.07034986821781213, "rouge_l": 0.30391459074733096}
{"id": 3309, "predictions": ["\u2581// \u2581 New PR Signed ByKey Data \u2581creates \u2581a \u2581new \u2581 Signed Signed \u2581object \u2581from \u2581the \u2581given \u2581 data \u2581 data ."], "references": ["\u2581// \u2581new PR Signed ByKey Data \u2581is \u2581 New PR Signed ByKey Data , \u2581except \u2581it \u2581returns \u2581the \u2581private \u2581 type ."], "bleu": 0.2927057121559395, "rouge_l": 0.45454545454545453}
{"id": 2405, "predictions": ["\u2581// \u2581 Copy Config \u2581copies \u2581a \u2581 map \u2581of \u2581values \u2581to \u2581a \u2581 map \u2581of \u2581strings ."], "references": ["\u2581// \u2581 Copy Config \u2581creates \u2581a \u2581new \u2581 map \u2581with \u2581a \u2581copy \u2581of \u2581the \u2581given \u2581 config ."], "bleu": 0.24948573796911913, "rouge_l": 0.5684995340167754}
{"id": 2952, "predictions": ["\u2581// \u2581 New P FS Input \u2581creates \u2581a \u2581new \u2581 exec . Input \u2581that \u2581can \u2581be \u2581used \u2581to \u2581create \u2581a \u2581 container ."], "references": ["\u2581// \u2581 New P FS Input \u2581returns \u2581a \u2581new \u2581 P FS \u2581input . \u2581It \u2581only \u2581includes \u2581required \u2581options ."], "bleu": 0.3083012995502152, "rouge_l": 0.5181467181467182}
{"id": 2659, "predictions": ["\u2581// \u2581rollback \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581rollback \u2581a \u2581transaction ."], "references": ["\u2581// \u2581 Rollback \u2581a \u2581transaction \u2581after \u2581the \u2581given \u2581error \u2581occurred . \u2581If \u2581the \u2581rollback \u2581// \u2581succeeds \u2581the \u2581given \u2581error \u2581is \u2581returned , \u2581otherwise \u2581a \u2581new \u2581error \u2581that \u2581 wraps \u2581it"], "bleu": 0.0401556890478535, "rouge_l": 0.22101449275362317}
{"id": 3365, "predictions": ["\u2581// \u2581 Split Path And Image \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581image , \u2581 this \u2581is \u2581a \u2581 hex - encoded \u2581string \u2581// \u2581of \u2581the \u2581 path ."], "references": ["\u2581// \u2581 Split Path And Image \u2581tries \u2581to \u2581 split \u2581the \u2581provided \u2581 OCI \u2581reference \u2581into \u2581the \u2581 OCI \u2581 path \u2581and \u2581image . \u2581// \u2581 Neither \u2581 path \u2581nor"], "bleu": 0.2559471622206333, "rouge_l": 0.47313019390581723}
{"id": 3830, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581 idle \u2581connections ."], "references": ["\u2581// \u2581 Stop \u2581kill s \u2581the \u2581 poller \u2581checking \u2581for \u2581 idle \u2581connections ."], "bleu": 0.32264525894998397, "rouge_l": 0.6694101508916324}
{"id": 3826, "predictions": ["\u2581// \u2581Return With \u2581implements \u2581 Method . \u2581Return With \u2581method \u2581of \u2581 Method ."], "references": ["\u2581// \u2581Return With \u2581takes \u2581the \u2581result \u2581 name \u2581and \u2581the \u2581error \u2581 name , \u2581and \u2581generates \u2581the \u2581return \u2581expression ."], "bleu": 0.12326794127584526, "rouge_l": 0.34205607476635513}
{"id": 4062, "predictions": ["\u2581// \u2581 T u u V 1 \u2581retrieves \u2581the \u2581 T u u V 1 Client"], "references": ["\u2581// \u2581 T sur u V 1 \u2581retrieves \u2581the \u2581 T sur u V 1 Client"], "bleu": 0.6422727797927412, "rouge_l": 0.875}
{"id": 3574, "predictions": ["\u2581// \u2581 Read Headers \u2581reads \u2581the \u2581 headers \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Read Headers \u2581reads \u2581 key - value \u2581pairs \u2581encoded \u2581using \u2581 WriteHeader s ."], "bleu": 0.29303275024879544, "rouge_l": 0.48744292237442927}
{"id": 3588, "predictions": ["\u2581// \u2581 exists \u2581returns \u2581the \u2581 set \u2581of \u2581 active \u2581 active \u2581 active \u2581 ids ."], "references": ["\u2581// \u2581 exists \u2581checks \u2581if \u2581a \u2581 hostport \u2581 exists \u2581in \u2581the \u2581peer \u2581list ."], "bleu": 0.1598921499894403, "rouge_l": 0.37927461139896373}
{"id": 3645, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581client \u2581and \u2581starts \u2581the \u2581 listen \u2581server ."], "references": ["\u2581// \u2581 Start \u2581begins \u2581a \u2581 Cross dock \u2581client \u2581in \u2581the \u2581background ."], "bleu": 0.21142141714303078, "rouge_l": 0.4615384615384617}
{"id": 4090, "predictions": ["\u2581// \u2581 List \u2581returns \u2581all \u2581platform \u2581names ."], "references": ["\u2581// \u2581 List \u2581implements \u2581 List \u2581method \u2581of \u2581 Platform Service \u2581interface"], "bleu": 0.1810339897381413, "rouge_l": 0.28955696202531644}
{"id": 4024, "predictions": ["\u2581// \u2581 Fatal \u2581implements \u2581the \u2581 Target \u2581interface ."], "references": ["\u2581// \u2581 Fatal \u2581writes \u2581the \u2581given \u2581values \u2581to \u2581the \u2581 Target \u2581// \u2581logger ."], "bleu": 0.22537874966994986, "rouge_l": 0.5857338820301784}
{"id": 3910, "predictions": ["\u2581// \u2581 Insert \u2581inserts \u2581a \u2581new \u2581index \u2581to \u2581the \u2581 Load \u2581 table ."], "references": ["\u2581// \u2581 Insert \u2581 marks \u2581 this \u2581statement \u2581for \u2581insertion \u2581at \u2581the \u2581given \u2581index . \u2581If \u2581multiple \u2581// \u2581statements \u2581are \u2581inserted \u2581at \u2581the \u2581same \u2581index , \u2581they \u2581will \u2581be \u2581inserted"], "bleu": 0.0642578093873745, "rouge_l": 0.2559440559440559}
{"id": 3930, "predictions": ["\u2581// \u2581 Unit \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581 set \u2581of \u2581 name ."], "references": ["\u2581// \u2581 shouldUpdate \u2581returns \u2581true \u2581if \u2581Walk \u2581should \u2581pass \u2581true \u2581to \u2581the \u2581callback ' s \u2581update \u2581// \u2581parameter \u2581in \u2581the \u2581directory \u2581rel . \u2581This \u2581indicates \u2581the \u2581build \u2581file \u2581should \u2581be"], "bleu": 0.08315082956481416, "rouge_l": 0.2790849673202615}
{"id": 3931, "predictions": ["\u2581// \u2581should Visit \u2581returns \u2581true \u2581if \u2581the \u2581 path \u2581should \u2581be \u2581 set \u2581to \u2581true \u2581if \u2581the \u2581// \u2581 set \u2581of \u2581 data \u2581is \u2581 set \u2581to \u2581true \u2581if \u2581the"], "references": ["\u2581// \u2581should Visit \u2581returns \u2581true \u2581if \u2581Walk \u2581should \u2581visit \u2581the \u2581 subdirectory \u2581rel ."], "bleu": 0.20750198923629268, "rouge_l": 0.4377990430622009}
{"id": 2097, "predictions": ["\u2581// \u2581 Is Java Request \u2581checks \u2581if \u2581the \u2581request \u2581is \u2581a \u2581valid \u2581 form \u2581of \u2581 type ."], "references": ["\u2581// \u2581 Is Recursion Request \u2581checks \u2581whether \u2581the \u2581given \u2581HTTP \u2581request \u2581is \u2581marked \u2581with \u2581the \u2581// \u2581\" recursion \" \u2581flag \u2581in \u2581its \u2581 form \u2581values ."], "bleu": 0.12718096056272607, "rouge_l": 0.48412698412698424}
{"id": 3986, "predictions": ["\u2581// \u2581Verify ContentType \u2581returns \u2581a \u2581 HandlerFunc \u2581that \u2581is \u2581used \u2581to \u2581validate \u2581the \u2581 ContentType \u2581 type ."], "references": ["\u2581// Verify ContentType \u2581returns \u2581a \u2581handler \u2581that \u2581verifies \u2581that \u2581a \u2581request \u2581has \u2581a \u2581 Content - Type \u2581header \u2581 set \u2581to \u2581the \u2581// specified \u2581value"], "bleu": 0.11607306319057561, "rouge_l": 0.31629629629629635}
{"id": 2325, "predictions": ["\u2581// \u2581 Is Unix Socket \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581unix \u2581socket \u2581socket"], "references": ["\u2581// \u2581 Is Unix Socket \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581either \u2581a \u2581 Unix \u2581socket \u2581// \u2581or \u2581a \u2581symbolic \u2581 link \u2581pointing \u2581at \u2581a \u2581 Unix \u2581socket"], "bleu": 0.36953096759369397, "rouge_l": 0.6485049833887042}
{"id": 2878, "predictions": ["\u2581// \u2581 Put FileHeader Footer \u2581replaces \u2581the \u2581 content \u2581 footer \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Put FileHeader Footer \u2581implements \u2581the \u2581 Hash Tree \u2581 Put FileHeader Footer \u2581method"], "bleu": 0.3064859599765908, "rouge_l": 0.505699481865285}
{"id": 2536, "predictions": ["\u2581// \u2581 Container Mount \u2581returns \u2581the \u2581 container \u2581mount \u2581of \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Things \u2581we \u2581don ' t \u2581need \u2581to \u2581care \u2581about"], "bleu": 0.11633270842295028, "rouge_l": 0.16353887399463804}
{"id": 3207, "predictions": ["\u2581// \u2581 Visit \u2581 visits \u2581all \u2581the \u2581 items \u2581in \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 Visit \u2581inserts \u2581pointer \u2581 v \u2581into \u2581the \u2581visited \u2581 map \u2581and \u2581reports \u2581whether \u2581it \u2581had \u2581// \u2581already \u2581been \u2581visited \u2581before ."], "bleu": 0.106810987000467, "rouge_l": 0.35494596841230264}
{"id": 3467, "predictions": ["\u2581// \u2581 Abs Diff \u2581returns \u2581the \u2581difference \u2581of \u2581the \u2581given \u2581 src \u2581as \u2581a \u2581diff ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581absolute \u2581difference \u2581between \u2581two \u2581arrays ."], "bleu": 0.09672649511413092, "rouge_l": 0.2932692307692307}
{"id": 2804, "predictions": ["\u2581// \u2581 Block Commit \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581 Block Commit \u2581returns \u2581 info \u2581about \u2581a \u2581specific \u2581 Commit , \u2581but \u2581blocks \u2581until \u2581that \u2581// \u2581commit \u2581has \u2581been \u2581finished ."], "bleu": 0.17421129181705858, "rouge_l": 0.3703382480485689}
{"id": 2803, "predictions": ["\u2581// \u2581 Inspect Commit \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581repository ."], "references": ["\u2581// \u2581 Inspect Commit \u2581returns \u2581 info \u2581about \u2581a \u2581specific \u2581 Commit ."], "bleu": 0.3762614992413644, "rouge_l": 0.5559895833333334}
{"id": 3249, "predictions": ["\u2581// \u2581Check Everything \u2581is \u2581used \u2581to \u2581check \u2581whether \u2581the \u2581API \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check Everything \u2581returns \u2581an \u2581option \u2581that \u2581enables \u2581all \u2581API \u2581checks ."], "bleu": 0.19674979811155635, "rouge_l": 0.4029062087186261}
{"id": 2455, "predictions": ["\u2581// \u2581 Container Remove \u2581removes \u2581a \u2581 container \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Container Remove \u2581removes \u2581the \u2581 container \u2581with \u2581the \u2581given \u2581 name \u2581from \u2581the \u2581database ."], "bleu": 0.31756500481949046, "rouge_l": 0.668859649122807}
{"id": 2954, "predictions": ["\u2581// \u2581 New Job Input \u2581creates \u2581a \u2581new \u2581 exec . Job Input ."], "references": ["\u2581// \u2581 New Job Input \u2581creates \u2581a \u2581 pps . Job Input ."], "bleu": 0.6606328636027614, "rouge_l": 0.8948655256723717}
{"id": 2273, "predictions": ["\u2581// \u2581 container L X C Unload \u2581removes \u2581the \u2581 container \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 Unload \u2581is \u2581called \u2581by \u2581the \u2581garbage \u2581collector"], "bleu": 0.12300686288463772, "rouge_l": 0.3490701001430615}
{"id": 2863, "predictions": ["\u2581// \u2581wait \u2581waits \u2581for \u2581the \u2581given \u2581number \u2581of \u2581times \u2581to \u2581the \u2581counter ."], "references": ["\u2581// \u2581wait \u2581until \u2581more \u2581than \u2581 n \u2581bytes \u2581have \u2581been \u2581written"], "bleu": 0.12571192676522522, "rouge_l": 0.16920943134535368}
{"id": 3043, "predictions": ["\u2581// \u2581 Write Dashboard Assets \u2581writes \u2581the \u2581 dashboard \u2581to \u2581the \u2581 dashboard"], "references": ["\u2581// \u2581 Write Dashboard Assets \u2581writes \u2581the \u2581 k 8 s \u2581 config \u2581for \u2581deploy ing \u2581the \u2581 Pac hyd er m \u2581// \u2581 dashboard \u2581to \u2581' encoder '"], "bleu": 0.21353383675629464, "rouge_l": 0.4901387874360847}
{"id": 3042, "predictions": ["\u2581// \u2581Google Secret \u2581returns \u2581a \u2581 secret \u2581 secret \u2581 name \u2581for \u2581the \u2581given \u2581bucket ."], "references": ["\u2581// \u2581Google Secret \u2581creates \u2581a \u2581 google \u2581 secret \u2581with \u2581a \u2581bucket \u2581 name ."], "bleu": 0.2240750868020436, "rouge_l": 0.6489361702127661}
{"id": 3995, "predictions": ["\u2581// \u2581 Expect \u2581 asserts \u2581that \u2581the \u2581provided \u2581value \u2581is \u2581the \u2581same \u2581as \u2581 T UF \u2581with \u2581the \u2581// \u2581provided \u2581 type ."], "references": ["\u2581// \u2581 Expect \u2581is \u2581used \u2581to \u2581make \u2581assertions . \u2581See \u2581documentation \u2581for \u2581 Expect ."], "bleu": 0.11328360454400997, "rouge_l": 0.32825112107623317}
{"id": 3672, "predictions": ["\u2581// \u2581 Flush To \u2581writes \u2581the \u2581 contents \u2581of \u2581the \u2581buffer \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Flush To \u2581 flush es \u2581the \u2581written \u2581buffer \u2581to \u2581the \u2581given \u2581writer"], "bleu": 0.3315796151992083, "rouge_l": 0.6939704209328782}
{"id": 4063, "predictions": ["\u2581// \u2581 T sur u \u2581implements \u2581the \u2581 T u u . Client Client \u2581interface ."], "references": ["\u2581// \u2581 T sur u \u2581retrieves \u2581the \u2581 T sur u V 1 Client"], "bleu": 0.37709297891717664, "rouge_l": 0.6747787610619468}
{"id": 3749, "predictions": ["\u2581// \u2581is Result Pointer \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 type \u2581is \u2581a \u2581valid \u2581 type ."], "references": ["\u2581// \u2581is Result Pointer \u2581returns \u2581whether \u2581the \u2581result \u2581for \u2581 this \u2581method \u2581is \u2581a \u2581pointer ."], "bleu": 0.3222538601891173, "rouge_l": 0.6093906093906094}
{"id": 2887, "predictions": ["\u2581// \u2581 New Filter \u2581returns \u2581a \u2581new \u2581 filter \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 filter \u2581the \u2581// \u2581given \u2581number \u2581of \u2581 filter \u2581and \u2581returns \u2581true \u2581if \u2581the \u2581number \u2581of"], "references": ["\u2581// \u2581 New Filter \u2581creates \u2581a \u2581 filter \u2581for \u2581a \u2581hash tree \u2581shard ."], "bleu": 0.13351899845512327, "rouge_l": 0.3405103668261563}
{"id": 2547, "predictions": ["\u2581// \u2581 Is Root Disk Device \u2581returns \u2581true \u2581if \u2581the \u2581device \u2581is \u2581a \u2581root \u2581disk \u2581device"], "references": ["\u2581// \u2581 Is Root Disk Device \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581device \u2581representation \u2581is \u2581// \u2581configured \u2581as \u2581root \u2581disk \u2581for \u2581a \u2581 container . \u2581It \u2581typically \u2581 get \u2581passed \u2581a"], "bleu": 0.2860925638387284, "rouge_l": 0.577027027027027}
{"id": 3086, "predictions": ["\u2581// \u2581 milli File Prefix \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581file ."], "references": ["\u2581// \u2581 scratch File Prefix \u2581returns \u2581an \u2581etcd \u2581prefix \u2581that ' s \u2581used \u2581to \u2581temporarily \u2581// \u2581store \u2581the \u2581state \u2581of \u2581a \u2581file \u2581in \u2581an \u2581open \u2581commit . \u2581 Once \u2581the"], "bleu": 0.09563703393488762, "rouge_l": 0.3986928104575163}
{"id": 2186, "predictions": ["\u2581// \u2581 Trim Below Name \u2581returns \u2581the \u2581 trace \u2581 name \u2581of \u2581the \u2581 trace ."], "references": ["\u2581// \u2581 Trim Below Name \u2581returns \u2581a \u2581 slice \u2581of \u2581the \u2581 Trace \u2581with \u2581all \u2581entries \u2581below \u2581the \u2581// \u2581lowest \u2581with \u2581function \u2581 name \u2581 name \u2581removed ."], "bleu": 0.23052516494073325, "rouge_l": 0.5198863636363635}
{"id": 3307, "predictions": ["\u2581// \u2581new PR Signed ByKey Path \u2581creates \u2581a \u2581new \u2581 Signed Signed \u2581object"], "references": ["\u2581// \u2581new PR Signed ByKey Path \u2581is \u2581 New PR Signed ByKey Path , \u2581except \u2581it \u2581returns \u2581the \u2581private \u2581 type ."], "bleu": 0.23042478902492325, "rouge_l": 0.4368845120859445}
{"id": 3724, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 relay \u2581item \u2581for \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581Get \u2581checks \u2581for \u2581a \u2581 relay \u2581item \u2581by \u2581 ID , \u2581returning \u2581the \u2581item \u2581and \u2581a \u2581bool \u2581indicating \u2581// \u2581whether \u2581the \u2581item \u2581was \u2581found ."], "bleu": 0.0905033919565055, "rouge_l": 0.33862014274385405}
{"id": 3720, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581 Arg o \u2581 format ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581given \u2581bytes \u2581to \u2581the \u2581underlying \u2581writer ."], "bleu": 0.3489981252688509, "rouge_l": 0.6047087980173481}
{"id": 3333, "predictions": ["\u2581// \u2581index Exists \u2581checks \u2581if \u2581a \u2581reference \u2581 exists \u2581in \u2581the \u2581 path"], "references": ["\u2581// \u2581index Exists \u2581checks \u2581whether \u2581the \u2581index \u2581location \u2581specified \u2581in \u2581the \u2581 OCI \u2581reference \u2581 exists . \u2581// \u2581The \u2581implementation \u2581is \u2581op in ion ated , \u2581since \u2581in \u2581case \u2581of"], "bleu": 0.11831390399585888, "rouge_l": 0.3473309608540925}
{"id": 3308, "predictions": ["\u2581// \u2581 New PR Signed ByKey Path \u2581creates \u2581a \u2581new \u2581 PR Signed ByKey \u2581 type"], "references": ["\u2581// \u2581 New PR Signed ByKey Path \u2581returns \u2581a \u2581new \u2581\" signed By \" \u2581 Policy Requirement \u2581using \u2581a \u2581 KeyPath"], "bleu": 0.34668419788517524, "rouge_l": 0.5804498269896193}
{"id": 2577, "predictions": ["\u2581// \u2581 Field ColumnName \u2581returns \u2581the \u2581field \u2581 name \u2581for \u2581a \u2581field \u2581 name ."], "references": ["\u2581// \u2581 Field ColumnName \u2581returns \u2581the \u2581column \u2581 name \u2581of \u2581the \u2581field \u2581with \u2581the \u2581given \u2581 name , \u2581// \u2581prefixed \u2581with \u2581the \u2581 entity ' s \u2581 table \u2581 name"], "bleu": 0.17347955460452025, "rouge_l": 0.4611683848797251}
{"id": 3437, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Pool ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Pool \u2581of \u2581workers \u2581that \u2581starts \u2581with \u2581 n \u2581workers . \u2581You \u2581must \u2581// \u2581provide \u2581a \u2581 constructor \u2581function \u2581that \u2581creates \u2581new \u2581 Worker"], "bleu": 0.08762406445626589, "rouge_l": 0.4206896551724138}
{"id": 3941, "predictions": ["\u2581// \u2581 IsValid Build FileName \u2581checks \u2581if \u2581the \u2581 config \u2581is \u2581valid"], "references": ["\u2581// \u2581 IsValid Build FileName \u2581returns \u2581true \u2581if \u2581a \u2581file \u2581with \u2581the \u2581given \u2581base \u2581 name \u2581// \u2581should \u2581be \u2581treated \u2581as \u2581a \u2581build \u2581file ."], "bleu": 0.142555320338866, "rouge_l": 0.4066666666666666}
{"id": 2490, "predictions": ["\u2581// \u2581 Auto Update Interval \u2581returns \u2581the \u2581interval \u2581of \u2581the \u2581 auto - running \u2581interval ."], "references": ["\u2581// \u2581 Auto Update Interval \u2581returns \u2581the \u2581configured \u2581images \u2581 auto \u2581update \u2581interval ."], "bleu": 0.4880217780091719, "rouge_l": 0.7422566371681415}
{"id": 3471, "predictions": ["\u2581// \u2581 Push \u2581adds \u2581a \u2581new \u2581element \u2581to \u2581the \u2581 seq ."], "references": ["\u2581// \u2581Adds \u2581an \u2581element \u2581to \u2581the \u2581sequence \u2581end . \u2581// \u2581Returns \u2581a \u2581pointer \u2581to \u2581the \u2581element \u2581added ."], "bleu": 0.1349073963756865, "rouge_l": 0.32172995780590713}
{"id": 3493, "predictions": ["\u2581// \u2581 Pin \u2581 - \u2581 get \u2581the \u2581pin \u2581for \u2581a \u2581given \u2581 path"], "references": ["\u2581// \u2581 Pin \u2581the \u2581given \u2581 path"], "bleu": 0.24601372576927547, "rouge_l": 0.7093023255813954}
{"id": 3903, "predictions": ["\u2581// \u2581Save \u2581saves \u2581the \u2581file \u2581to \u2581the \u2581file ."], "references": ["\u2581// \u2581Save \u2581writes \u2581the \u2581build \u2581file \u2581to \u2581disk . \u2581This \u2581method \u2581calls \u2581 Sync \u2581internally ."], "bleu": 0.11672465327028693, "rouge_l": 0.45692883895131076}
{"id": 2088, "predictions": ["\u2581// \u2581 State \u2581returns \u2581a \u2581state \u2581of \u2581the \u2581 Daemon ."], "references": ["\u2581// \u2581 State \u2581creates \u2581a \u2581new \u2581 State \u2581instance \u2581linked \u2581to \u2581our \u2581internal \u2581 db \u2581and \u2581os ."], "bleu": 0.12904435067542389, "rouge_l": 0.3965330444203684}
{"id": 2289, "predictions": ["\u2581// \u2581 Wait Record \u2581 marks \u2581a \u2581time . Record \u2581and \u2581returns \u2581a \u2581new \u2581record ."], "references": ["\u2581// \u2581 Wait Record \u2581blocks \u2581until \u2581a \u2581log . Record \u2581is \u2581received \u2581on \u2581the \u2581given \u2581channel . \u2581It \u2581// \u2581returns \u2581the \u2581emitted \u2581record , \u2581or \u2581nil \u2581if \u2581no \u2581record \u2581was"], "bleu": 0.1149274481183857, "rouge_l": 0.370945945945946}
{"id": 3518, "predictions": ["\u2581// \u2581Parse Strict DDL \u2581parses \u2581a \u2581string \u2581and \u2581returns \u2581the \u2581 DDL \u2581statement ."], "references": ["\u2581// \u2581Parse Strict DDL \u2581is \u2581the \u2581same \u2581as \u2581Parse \u2581except \u2581it \u2581errors \u2581on \u2581// \u2581partial ly \u2581parsed \u2581 DDL \u2581statements ."], "bleu": 0.1827501435703006, "rouge_l": 0.4412296564195298}
{"id": 3800, "predictions": ["\u2581// \u2581 NewContext \u2581returns \u2581a \u2581new \u2581 Context ."], "references": ["\u2581// \u2581 NewContext \u2581returns \u2581a \u2581 Context \u2581that \u2581can \u2581be \u2581used \u2581to \u2581make \u2581JSON \u2581calls ."], "bleu": 0.27510692355510713, "rouge_l": 0.6092384519350812}
{"id": 3618, "predictions": ["\u2581// \u2581update Peer \u2581updates \u2581the \u2581peer ' s \u2581peer ."], "references": ["\u2581// \u2581update Peer \u2581updates \u2581the \u2581score \u2581of \u2581the \u2581peer \u2581and \u2581update \u2581it ' s \u2581position \u2581in \u2581heap \u2581as \u2581well ."], "bleu": 0.20993944473708495, "rouge_l": 0.5659793814432991}
{"id": 3868, "predictions": ["\u2581// \u2581 Service \u2581returns \u2581the \u2581 data \u2581for \u2581the \u2581service"], "references": ["\u2581// \u2581 Service \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581destination \u2581service \u2581for \u2581 this \u2581 call Req ."], "bleu": 0.28033571489263304, "rouge_l": 0.5434298440979956}
{"id": 2763, "predictions": ["\u2581// \u2581 Health \u2581returns \u2581the \u2581health \u2581of \u2581the \u2581health \u2581of \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 Health \u2581health \u2581checks \u2581 pac hd , \u2581it \u2581returns \u2581an \u2581error \u2581if \u2581 pac hd \u2581isn ' t \u2581 healthy ."], "bleu": 0.09474980272538823, "rouge_l": 0.2645273200346921}
{"id": 2795, "predictions": ["\u2581// \u2581 NewFile \u2581returns \u2581a \u2581new \u2581 Discovery \u2581struct"], "references": ["\u2581// \u2581 NewFile \u2581creates \u2581a \u2581 pfs . File ."], "bleu": 0.2601435417217584, "rouge_l": 0.5213675213675214}
{"id": 3698, "predictions": ["\u2581// \u2581arg 2 Reader \u2581returns \u2581a \u2581 Reader Reader \u2581which \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 data \u2581reader \u2581for \u2581the \u2581request ."], "references": ["\u2581// \u2581arg 2 Reader \u2581returns \u2581an \u2581 Arg Reader \u2581to \u2581read \u2581arg 2."], "bleu": 0.19696330878717075, "rouge_l": 0.4464775846294603}
{"id": 3697, "predictions": ["\u2581// \u2581arg 1 Reader \u2581implements \u2581the \u2581 Query Reader \u2581interface ."], "references": ["\u2581// \u2581arg 1 Reader \u2581returns \u2581an \u2581 Arg Reader \u2581to \u2581read \u2581arg 1."], "bleu": 0.2875150462888186, "rouge_l": 0.4925975773889637}
{"id": 2839, "predictions": ["\u2581// \u2581 Inspect File \u2581returns \u2581the \u2581 FileInfo \u2581for \u2581a \u2581given \u2581file"], "references": ["\u2581// \u2581 Inspect File \u2581returns \u2581 info \u2581about \u2581a \u2581specific \u2581file ."], "bleu": 0.4211813371894875, "rouge_l": 0.6666666666666666}
{"id": 4068, "predictions": ["\u2581// \u2581 New Shared Informer Factory \u2581constructs \u2581a \u2581new \u2581 Shared Informer Factory ."], "references": ["\u2581// \u2581 New Shared Informer Factory \u2581constructs \u2581a \u2581new \u2581instance \u2581of \u2581shared Informer Factory"], "bleu": 0.6729864884660303, "rouge_l": 0.7857142857142857}
{"id": 3753, "predictions": ["\u2581// \u2581new Incoming Context \u2581creates \u2581a \u2581new \u2581 Context ."], "references": ["\u2581// \u2581new Incoming Context \u2581creates \u2581a \u2581new \u2581context \u2581for \u2581an \u2581incoming \u2581 call \u2581with \u2581the \u2581given \u2581 span ."], "bleu": 0.2917484077907492, "rouge_l": 0.5877944325481799}
{"id": 2240, "predictions": ["\u2581// \u2581 Cancel able \u2581cancel s \u2581the \u2581cancel er \u2581and \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581cancel er ."], "references": ["\u2581// \u2581 Cancel able \u2581indicates \u2581whether \u2581there \u2581are \u2581operations \u2581that \u2581support \u2581cancel ation"], "bleu": 0.18759202316167212, "rouge_l": 0.3234358430540827}
{"id": 2131, "predictions": ["\u2581// \u2581 Architecture Get Local \u2581returns \u2581the \u2581local \u2581local \u2581local \u2581local \u2581local \u2581 config"], "references": ["\u2581// \u2581 Architecture Get Local \u2581returns \u2581the \u2581local \u2581 hardware \u2581 architecture"], "bleu": 0.5828233954152653, "rouge_l": 0.7020460358056267}
{"id": 3509, "predictions": ["\u2581// \u2581skip Statement \u2581 consume s \u2581next \u2581statement ."], "references": ["\u2581// \u2581skip Statement \u2581scan s \u2581until \u2581the \u2581 EOF , \u2581or \u2581end \u2581of \u2581statement \u2581is \u2581encountered ."], "bleu": 0.1284290102874165, "rouge_l": 0.4372759856630824}
{"id": 3723, "predictions": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581 relay s \u2581in \u2581the \u2581 relay \u2581 slice ."], "references": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581non - tombstone \u2581 items \u2581in \u2581the \u2581 relay ."], "bleu": 0.549995519064483, "rouge_l": 0.7647058823529411}
{"id": 3789, "predictions": ["\u2581// \u2581 New StringSlice Flag \u2581returns \u2581a \u2581new \u2581 slice \u2581of \u2581strings \u2581with \u2581the \u2581given \u2581 name , \u2581usage , \u2581and \u2581usage \u2581string ."], "references": ["\u2581// \u2581 New StringSlice Flag \u2581creates \u2581a \u2581new \u2581string \u2581 slice \u2581flag . \u2581The \u2581default \u2581value \u2581is \u2581always \u2581nil ."], "bleu": 0.24004335671708577, "rouge_l": 0.46212121212121204}
{"id": 2906, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581version ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Version ."], "bleu": 0.7302542206757164, "rouge_l": 0.8498452012383902}
{"id": 3973, "predictions": ["\u2581// \u2581 preprocess Tags \u2581sets \u2581the \u2581tags \u2581for \u2581the \u2581 config ."], "references": ["\u2581// \u2581 preprocess Tags \u2581adds \u2581some \u2581tags \u2581which \u2581are \u2581on \u2581by \u2581default \u2581before \u2581they \u2581are \u2581// \u2581used \u2581to \u2581match \u2581files ."], "bleu": 0.14858574225975457, "rouge_l": 0.346590909090909}
{"id": 2716, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 data \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581val \u2581from \u2581 r ."], "bleu": 0.3565506208559251, "rouge_l": 0.6110183639398998}
{"id": 3865, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581that \u2581the \u2581given \u2581 Service \u2581is \u2581valid ."], "references": ["\u2581// \u2581Validate \u2581validates \u2581that \u2581the \u2581given \u2581spec \u2581is \u2581supported \u2581by \u2581thrift - gen ."], "bleu": 0.20625141357032833, "rouge_l": 0.5481386392811297}
{"id": 3909, "predictions": ["\u2581// \u2581Remove \u2581removes \u2581the \u2581given \u2581 key \u2581from \u2581the \u2581 Load \u2581 map ."], "references": ["\u2581// \u2581Remove \u2581deletes \u2581a \u2581 symbol \u2581from \u2581the \u2581load \u2581statement . \u2581This \u2581has \u2581no \u2581effect \u2581if \u2581// \u2581the \u2581 symbol \u2581is \u2581not \u2581loaded ."], "bleu": 0.0891311084878313, "rouge_l": 0.3517298187808896}
{"id": 3395, "predictions": ["\u2581// \u2581 Manually Transport Scope \u2581returns \u2581the \u2581 empty \u2581 slice \u2581of \u2581the \u2581 Transport Transport Scope \u2581// \u2581for \u2581the \u2581given \u2581 ref \u2581reference ."], "references": ["\u2581// \u2581 bic Transport Scope \u2581returns \u2581a \u2581 BIC Transport Scope \u2581appropriate \u2581for \u2581 ref ."], "bleu": 0.14440028187544326, "rouge_l": 0.6094920899250625}
{"id": 2701, "predictions": ["\u2581// \u2581 New Local Client \u2581returns \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581root \u2581 path ."], "references": ["\u2581// \u2581 New Local Client \u2581returns \u2581a \u2581 Client \u2581that \u2581stores \u2581 data \u2581on \u2581the \u2581local \u2581file \u2581system"], "bleu": 0.4195833254303197, "rouge_l": 0.5684995340167754}
{"id": 2875, "predictions": ["\u2581// \u2581 Destroy \u2581 destroy s \u2581the \u2581hash \u2581tree ."], "references": ["\u2581// \u2581 Destroy \u2581clean s \u2581up \u2581the \u2581on \u2581disk \u2581structures \u2581for \u2581the \u2581hash tree ."], "bleu": 0.1818513197242336, "rouge_l": 0.540506329113924}
{"id": 3699, "predictions": ["\u2581// \u2581arg 3 Reader \u2581reads \u2581the \u2581reader \u2581for \u2581the \u2581request ."], "references": ["\u2581// \u2581arg 3 Reader \u2581returns \u2581an \u2581 Arg Reader \u2581to \u2581read \u2581arg 3."], "bleu": 0.26431911302225475, "rouge_l": 0.3283983849259758}
{"id": 2056, "predictions": ["\u2581// \u2581 Cert Delete \u2581deletes \u2581the \u2581 Cert Delete \u2581from \u2581the \u2581cluster"], "references": ["\u2581// \u2581 Cert Delete \u2581deletes \u2581a \u2581certificate \u2581from \u2581the \u2581 db ."], "bleu": 0.45814307665229687, "rouge_l": 0.5833333333333334}
{"id": 3914, "predictions": ["\u2581// \u2581 Attr \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Attr \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581named \u2581attribute . \u2581nil \u2581is \u2581returned \u2581when \u2581the \u2581// \u2581attribute \u2581is \u2581not \u2581 set ."], "bleu": 0.27239579226153166, "rouge_l": 0.5407801418439716}
{"id": 3443, "predictions": ["\u2581// \u2581 BR \u2581returns \u2581the \u2581 height \u2581of \u2581the \u2581rectangle ."], "references": ["\u2581// \u2581Returns \u2581the \u2581 Bottom - Right \u2581 Point \u2581of \u2581the \u2581rectangle"], "bleu": 0.24737714147554007, "rouge_l": 0.5176803394625177}
{"id": 3157, "predictions": ["\u2581// \u2581 New Streaming Bytes Reader \u2581returns \u2581a \u2581new \u2581io . ReadCloser \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581streaming Bytes Reader ."], "references": ["\u2581// \u2581 New Streaming Bytes Reader \u2581returns \u2581an \u2581io . Reader \u2581for \u2581a \u2581 Streaming Bytes Client ."], "bleu": 0.31649183953796767, "rouge_l": 0.575019638648861}
{"id": 3152, "predictions": ["\u2581// \u2581 New HTTPError \u2581creates \u2581a \u2581new \u2581 HTTPError \u2581instance ."], "references": ["\u2581// \u2581 New HTTPError \u2581returns \u2581a \u2581new \u2581 HTTPError \u2581where \u2581the \u2581HTTP \u2581error \u2581 code \u2581is \u2581' code ' \u2581and \u2581// \u2581the \u2581error \u2581message \u2581is \u2581based \u2581on \u2581' format Str"], "bleu": 0.094408006611415, "rouge_l": 0.36014760147601477}
{"id": 3438, "predictions": ["\u2581// \u2581 New Func \u2581returns \u2581a \u2581new \u2581 Pool"], "references": ["\u2581// \u2581 New Func \u2581creates \u2581a \u2581new \u2581 Pool \u2581of \u2581workers \u2581where \u2581each \u2581worker \u2581will \u2581process \u2581using \u2581// \u2581the \u2581provided \u2581func ."], "bleu": 0.15521584958425919, "rouge_l": 0.47984267453294005}
{"id": 2283, "predictions": ["\u2581// \u2581 Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 container \u2581 name"], "references": ["\u2581// \u2581 Var ious \u2581 container \u2581paths"], "bleu": 0.15807437922444714, "rouge_l": 0.42287694974003465}
{"id": 2112, "predictions": ["\u2581// \u2581Get Image File \u2581returns \u2581a \u2581file \u2581from \u2581the \u2581 LXD \u2581 api \u2581file"], "references": ["\u2581// \u2581Get Image File \u2581 downloads \u2581an \u2581image \u2581from \u2581the \u2581server , \u2581returning \u2581an \u2581 Image File Request \u2581struct"], "bleu": 0.21081416843475398, "rouge_l": 0.41295938104448743}
{"id": 3412, "predictions": ["\u2581// \u2581 isDir Empty \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581 empty \u2581directory"], "references": ["\u2581// \u2581returns \u2581true \u2581if \u2581directory \u2581is \u2581 empty"], "bleu": 0.18842393723950338, "rouge_l": 0.6206395348837209}
{"id": 2909, "predictions": ["\u2581// \u2581 Public Cert To PEM \u2581returns \u2581a \u2581 PEM - encoded \u2581 byte \u2581 slice \u2581of \u2581the \u2581certificate \u2581// \u2581 PEM - encoded \u2581 PEM - encoded \u2581 byte"], "references": ["\u2581// \u2581 Public Cert To PEM \u2581serialize s \u2581the \u2581public \u2581 x 509 \u2581cert \u2581in \u2581' cert ' \u2581to \u2581a \u2581 PEM - formatted \u2581// \u2581block"], "bleu": 0.2764393753270045, "rouge_l": 0.3979833926453144}
{"id": 3611, "predictions": ["\u2581// \u2581 Peer Info \u2581returns \u2581the \u2581 Local Peer Info \u2581for \u2581the \u2581given \u2581channel ."], "references": ["\u2581// \u2581 Peer Info \u2581returns \u2581the \u2581current \u2581peer \u2581 info \u2581for \u2581the \u2581channel"], "bleu": 0.4333207865423752, "rouge_l": 0.7236061684460261}
{"id": 3213, "predictions": ["\u2581// \u2581normalize Option \u2581returns \u2581a \u2581option \u2581that \u2581sets \u2581the \u2581 Option \u2581to \u2581the \u2581 Option ."], "references": ["\u2581// \u2581normalize Option \u2581normalize s \u2581the \u2581input \u2581options \u2581such \u2581that \u2581all \u2581 Options \u2581 groups \u2581// \u2581are \u2581flattened \u2581and \u2581 groups \u2581with \u2581a \u2581single \u2581element \u2581are \u2581reduced \u2581to \u2581that \u2581element"], "bleu": 0.07504695770013659, "rouge_l": 0.24729729729729732}
{"id": 3783, "predictions": ["\u2581// \u2581Since Start \u2581returns \u2581the \u2581time \u2581duration \u2581for \u2581the \u2581given \u2581time ."], "references": ["\u2581// \u2581Since Start \u2581returns \u2581the \u2581time \u2581since \u2581the \u2581start \u2581of \u2581the \u2581request . \u2581If \u2581there \u2581is \u2581no \u2581request \u2581state , \u2581// \u2581then \u2581the \u2581fallback \u2581is \u2581returned ."], "bleu": 0.14350218560078978, "rouge_l": 0.38364779874213834}
{"id": 2699, "predictions": ["\u2581// \u2581 New Router \u2581creates \u2581a \u2581new \u2581 router \u2581with \u2581 dialer"], "references": ["\u2581// \u2581 New Router \u2581creates \u2581a \u2581 Router ."], "bleu": 0.48633831680799433, "rouge_l": 0.6842948717948718}
{"id": 2892, "predictions": ["\u2581// \u2581 Glob Literal Prefix \u2581returns \u2581the \u2581prefix \u2581prefix \u2581for \u2581the \u2581given \u2581pattern ."], "references": ["\u2581// \u2581 Glob Literal Prefix \u2581returns \u2581the \u2581prefix \u2581before \u2581the \u2581first \u2581glob \u2581character"], "bleu": 0.5659119256652702, "rouge_l": 0.6711491442542787}
{"id": 2268, "predictions": ["\u2581// \u2581 select SchemaVersion s \u2581returns \u2581the \u2581 slice \u2581of \u2581all \u2581the \u2581 data \u2581in \u2581the \u2581database ."], "references": ["\u2581// \u2581Return \u2581all \u2581versions \u2581in \u2581the \u2581schema \u2581 table , \u2581in \u2581 incr easing \u2581order ."], "bleu": 0.11451997463067552, "rouge_l": 0.35672514619883033}
{"id": 2184, "predictions": ["\u2581// \u2581 Trim Below \u2581returns \u2581the \u2581 trace \u2581at \u2581the \u2581given \u2581 type . \u2581// \u2581If \u2581the \u2581 type \u2581is \u2581not \u2581 empty , \u2581the \u2581 length \u2581of \u2581the \u2581"], "references": ["\u2581// \u2581 Trim Below \u2581returns \u2581a \u2581 slice \u2581of \u2581the \u2581 Trace \u2581with \u2581all \u2581entries \u2581below \u2581pc \u2581removed ."], "bleu": 0.19775876971405587, "rouge_l": 0.3828451882845188}
{"id": 2171, "predictions": ["\u2581// \u2581 ConfigPath \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the \u2581 path"], "references": ["\u2581// \u2581 ConfigPath \u2581returns \u2581a \u2581joined \u2581 path \u2581of \u2581the \u2581configuration \u2581directory \u2581and \u2581passed \u2581arguments"], "bleu": 0.21314568971111159, "rouge_l": 0.4206896551724138}
{"id": 2492, "predictions": ["\u2581// \u2581 Offline Threshold \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581connections \u2581in \u2581the \u2581// \u2581 config ."], "references": ["\u2581// \u2581 Offline Threshold \u2581returns \u2581the \u2581configured \u2581heartbeat \u2581threshold , \u2581 i . e . \u2581the \u2581// \u2581number \u2581of \u2581seconds \u2581before \u2581after \u2581which \u2581an \u2581un responsive \u2581node \u2581is \u2581considered \u2581//"], "bleu": 0.19095240021990714, "rouge_l": 0.36478405315614615}
{"id": 2725, "predictions": ["\u2581// \u2581error f \u2581returns \u2581a \u2581 slice \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581error f \u2581is \u2581 analog ous \u2581to \u2581fmt . Errorf , \u2581but \u2581generates \u2581hash Tree Errors \u2581instead \u2581of \u2581// \u2581error Strings ."], "bleu": 0.10992827772533784, "rouge_l": 0.3477198697068404}
{"id": 3266, "predictions": ["\u2581// \u2581 LogEvent With Payload \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581 LogEvent With Payload \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.4302241682304373, "rouge_l": 0.5893719806763285}
{"id": 2576, "predictions": ["\u2581// \u2581 FieldByName \u2581returns \u2581the \u2581field \u2581 name \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 FieldByName \u2581returns \u2581the \u2581field \u2581with \u2581the \u2581given \u2581 name , \u2581if \u2581any ."], "bleu": 0.5426451706118739, "rouge_l": 0.7539325842696629}
{"id": 3138, "predictions": ["\u2581// \u2581 GetRequest s ResourceList From Pipeline \u2581returns \u2581the \u2581 ResourceList \u2581for \u2581the \u2581pipeline"], "references": ["\u2581// \u2581 GetRequest s ResourceList From Pipeline \u2581returns \u2581a \u2581list \u2581of \u2581resources \u2581that \u2581the \u2581pipeline , \u2581// \u2581 minimal ly \u2581requires ."], "bleu": 0.3444800002747774, "rouge_l": 0.5341506129597198}
{"id": 3947, "predictions": ["\u2581// \u2581 Finish \u2581removes \u2581all \u2581 items \u2581from \u2581the \u2581index ."], "references": ["\u2581// \u2581 Finish \u2581constructs \u2581the \u2581import \u2581index \u2581and \u2581performs \u2581any \u2581other \u2581necessary \u2581indexing \u2581// \u2581actions \u2581after \u2581all \u2581rules \u2581have \u2581been \u2581added . \u2581This \u2581step \u2581is \u2581necessary \u2581because \u2581// \u2581a \u2581rule"], "bleu": 0.04481889913725955, "rouge_l": 0.2701107011070111}
{"id": 3267, "predictions": ["\u2581// \u2581Set Operation Name \u2581sets \u2581the \u2581 span \u2581for \u2581the \u2581operation"], "references": ["\u2581// \u2581Set Operation Name \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.3646285861936466, "rouge_l": 0.5763779527559055}
{"id": 3655, "predictions": ["\u2581// \u2581 Read Uint 64 \u2581returns \u2581the \u2581 64 \u2581encoded \u2581 64 \u2581encoded \u2581value \u2581as \u2581uint 64."], "references": ["\u2581// \u2581 Read Uint 64 \u2581returns \u2581the \u2581next \u2581value \u2581in \u2581the \u2581buffer \u2581as \u2581a \u2581uint 64"], "bleu": 0.43039475299861296, "rouge_l": 0.6093906093906094}
{"id": 2707, "predictions": ["\u2581// \u2581 Stream Server Interceptor \u2581returns \u2581a \u2581gRPC \u2581interceptor \u2581that \u2581interceptor \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581// \u2581the \u2581interceptor \u2581for \u2581the \u2581server \u2581interceptor ."], "references": ["\u2581// \u2581 Stream Server Interceptor \u2581returns \u2581a \u2581 GRPC \u2581interceptor \u2581for \u2581non - streaming \u2581 GRPC \u2581RPC s"], "bleu": 0.2928787572874777, "rouge_l": 0.47918303220738423}
{"id": 2220, "predictions": ["\u2581// \u2581 App Armor Profile \u2581returns \u2581the \u2581 home \u2581profile \u2581for \u2581the \u2581 app Armor \u2581profile ."], "references": ["\u2581// \u2581 App Armor Profile \u2581returns \u2581the \u2581current \u2581 app armor \u2581profile ."], "bleu": 0.4583034067124109, "rouge_l": 0.7513997760358343}
{"id": 3259, "predictions": ["\u2581// \u2581 Finish \u2581 mocks \u2581the \u2581method"], "references": ["\u2581// \u2581 Finish \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.28751742289713444, "rouge_l": 0.48897795591182364}
{"id": 3662, "predictions": ["\u2581// \u2581 WriteByte s \u2581appends \u2581the \u2581 contents \u2581of \u2581the \u2581 Buffer \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 WriteByte s \u2581writes \u2581a \u2581 slice \u2581of \u2581bytes \u2581to \u2581the \u2581buffer"], "bleu": 0.30277029197532096, "rouge_l": 0.6324884792626728}
{"id": 2977, "predictions": ["\u2581// \u2581 New Buf Pool \u2581creates \u2581a \u2581new \u2581 Buf Pool \u2581with \u2581the \u2581given \u2581 size ."], "references": ["\u2581// \u2581 New Buf Pool \u2581creates \u2581a \u2581new \u2581 Buf Pool \u2581that \u2581returns \u2581buffers \u2581of \u2581the \u2581given \u2581 size ."], "bleu": 0.7036321661008308, "rouge_l": 0.8524017467248909}
{"id": 2705, "predictions": ["\u2581// \u2581 Stream Client Interceptor \u2581returns \u2581a \u2581 Stream Client \u2581interceptor \u2581that \u2581 collect s \u2581the \u2581client \u2581interceptor ."], "references": ["\u2581// \u2581 Stream Client Interceptor \u2581returns \u2581a \u2581 GRPC \u2581interceptor \u2581for \u2581non - streaming \u2581 GRPC \u2581RPC s"], "bleu": 0.4315229271655712, "rouge_l": 0.597506678539626}
{"id": 3663, "predictions": ["\u2581// \u2581 Write Uint 16 \u2581writes \u2581the \u2581uint 16 \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Write Uint 16 \u2581writes \u2581a \u2581big \u2581 endian \u2581encoded \u2581uint 16 \u2581value \u2581to \u2581the \u2581buffer"], "bleu": 0.42132608528403687, "rouge_l": 0.7161152614727856}
{"id": 3640, "predictions": ["\u2581// \u2581 Stats Tags \u2581returns \u2581the \u2581 set \u2581of \u2581tags \u2581for \u2581the \u2581channel ."], "references": ["\u2581// \u2581 Stats Tags \u2581returns \u2581the \u2581stats \u2581tags \u2581for \u2581 this \u2581sub channel ."], "bleu": 0.46563348805256366, "rouge_l": 0.642857142857143}
{"id": 3664, "predictions": ["\u2581// \u2581 Write Uint 32 \u2581writes \u2581the \u2581 32 - bit \u2581integer \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Write Uint 32 \u2581writes \u2581a \u2581big \u2581 endian \u2581uint 32 \u2581value \u2581to \u2581the \u2581buffer"], "bleu": 0.44815017360408727, "rouge_l": 0.6875}
{"id": 3665, "predictions": ["\u2581// \u2581 Write Uint 64 \u2581writes \u2581the \u2581uint 64 \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Write Uint 64 \u2581writes \u2581a \u2581big \u2581 endian \u2581uint 64 \u2581to \u2581the \u2581buffer"], "bleu": 0.5999703042908046, "rouge_l": 0.7757225433526012}
{"id": 2948, "predictions": ["\u2581// \u2581 New Deploy Server \u2581creates \u2581a \u2581new \u2581 APIServer \u2581with \u2581the \u2581given \u2581 kube - apiserver"], "references": ["\u2581// \u2581 New Deploy Server \u2581creates \u2581a \u2581deploy \u2581server"], "bleu": 0.388905561152711, "rouge_l": 0.5700934579439252}
{"id": 2769, "predictions": ["\u2581// \u2581 Print Repo Header \u2581prints \u2581a \u2581 structured \u2581 headers \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Print Repo Header \u2581prints \u2581a \u2581repo \u2581header ."], "bleu": 0.42649937722961534, "rouge_l": 0.6421052631578947}
{"id": 3654, "predictions": ["\u2581// \u2581 Read Uint 32 \u2581returns \u2581the \u2581 32 - bit \u2581value \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Read Uint 32 \u2581returns \u2581the \u2581next \u2581value \u2581in \u2581the \u2581buffer \u2581as \u2581a \u2581uint 32"], "bleu": 0.4738611152748619, "rouge_l": 0.625}
{"id": 3803, "predictions": ["\u2581// \u2581 init From Open Tracing \u2581initializes \u2581 tracing \u2581from \u2581 span ."], "references": ["\u2581// \u2581 init From Open Tracing \u2581initializes \u2581 injectable Span \u2581fields \u2581from \u2581an \u2581 Open Tracing \u2581 Span , \u2581// \u2581assuming \u2581the \u2581 tracing \u2581implementation \u2581supports \u2581 Zipkin - style"], "bleu": 0.17827209918834536, "rouge_l": 0.43416370106761565}
{"id": 3900, "predictions": ["\u2581// \u2581 Macro Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581named \u2581macro ."], "references": ["\u2581// \u2581 Macro Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581macro \u2581function \u2581that \u2581 this \u2581file \u2581is \u2581 editing , \u2581// \u2581or \u2581an \u2581 empty \u2581string \u2581if \u2581a \u2581macro \u2581function"], "bleu": 0.20943224712750194, "rouge_l": 0.47758007117437723}
{"id": 3534, "predictions": ["\u2581// \u2581 From Parameter \u2581returns \u2581a \u2581 Token Extractor \u2581that \u2581extracts \u2581the \u2581 token \u2581from \u2581the \u2581request ."], "references": ["\u2581// \u2581 From Parameter \u2581returns \u2581a \u2581function \u2581that \u2581extracts \u2581the \u2581 token \u2581from \u2581the \u2581specified \u2581// \u2581query \u2581string \u2581parameter"], "bleu": 0.5832081621812593, "rouge_l": 0.6992945326278659}
{"id": 3653, "predictions": ["\u2581// \u2581 Read Uint 16 \u2581returns \u2581the \u2581 16 - bit \u2581value \u2581of \u2581the \u2581 Read Buffer ."], "references": ["\u2581// \u2581 Read Uint 16 \u2581returns \u2581the \u2581next \u2581value \u2581in \u2581the \u2581buffer \u2581as \u2581a \u2581uint 16"], "bleu": 0.39696685122270786, "rouge_l": 0.5350877192982456}
{"id": 3435, "predictions": ["\u2581// \u2581layer Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581digest ."], "references": ["\u2581// \u2581layer Path \u2581returns \u2581a \u2581 path \u2581for \u2581a \u2581layer \u2581 tarball \u2581within \u2581a \u2581directory \u2581using \u2581our \u2581convention s ."], "bleu": 0.17656061583211333, "rouge_l": 0.41862745098039217}
{"id": 3381, "predictions": ["\u2581// \u2581send Bytes \u2581sends \u2581a \u2581 byte \u2581 slice \u2581to \u2581a \u2581 Destination ."], "references": ["\u2581// \u2581send Bytes \u2581sends \u2581a \u2581 path \u2581into \u2581the \u2581tar \u2581stream ."], "bleu": 0.41374412020518814, "rouge_l": 0.5460358056265985}
{"id": 2481, "predictions": ["\u2581// \u2581 Cancel Target \u2581 Cancel s \u2581the \u2581 status \u2581of \u2581the \u2581operation ."], "references": ["\u2581// \u2581 Cancel Target \u2581attempts \u2581to \u2581cancel \u2581the \u2581target \u2581operation"], "bleu": 0.2676032275663791, "rouge_l": 0.5154929577464789}
{"id": 3857, "predictions": ["\u2581// \u2581with State Lock \u2581calls \u2581the \u2581function \u2581 f \u2581on \u2581the \u2581connection ."], "references": ["\u2581// \u2581with State Lock \u2581performs \u2581an \u2581action \u2581with \u2581the \u2581connection \u2581state \u2581 mutex \u2581locked"], "bleu": 0.29274144538476715, "rouge_l": 0.4414957780458384}
{"id": 2263, "predictions": ["\u2581// \u2581 GetBool \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 name \u2581as \u2581a \u2581bool ."], "references": ["\u2581// \u2581 GetBool \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key , \u2581which \u2581must \u2581be \u2581of \u2581 type \u2581 Bool ."], "bleu": 0.44703341325314666, "rouge_l": 0.5932802829354553}
{"id": 4046, "predictions": ["\u2581// \u2581 App Log Collection \u2581returns \u2581the \u2581 Collection \u2581for \u2581the \u2581given \u2581 app ."], "references": ["\u2581// \u2581 App Log Collection \u2581returns \u2581the \u2581logs \u2581collection \u2581for \u2581one \u2581 app \u2581from \u2581 MongoDB ."], "bleu": 0.45244111100479767, "rouge_l": 0.67983789260385}
{"id": 2704, "predictions": ["\u2581// \u2581 Unary Client Interceptor \u2581returns \u2581a \u2581 unary \u2581client \u2581interceptor \u2581that \u2581 collect s \u2581the \u2581interceptor \u2581// \u2581for \u2581 Unary Client ."], "references": ["\u2581// \u2581 Unary Client Interceptor \u2581returns \u2581a \u2581 GRPC \u2581interceptor \u2581for \u2581non - streaming \u2581 GRPC \u2581RPC s"], "bleu": 0.3617640392425988, "rouge_l": 0.5486508585445625}
{"id": 3418, "predictions": ["\u2581// \u2581 Put Manifest \u2581is \u2581part \u2581of \u2581the \u2581 OCI Archive \u2581interface ."], "references": ["\u2581// \u2581 Put Manifest \u2581writes \u2581manifest \u2581to \u2581the \u2581destination"], "bleu": 0.27824623288353134, "rouge_l": 0.4699537750385208}
{"id": 3573, "predictions": ["\u2581// \u2581 ResponseWriter \u2581returns \u2581a \u2581response \u2581with \u2581the \u2581 status \u2581 code \u2581 set"], "references": ["\u2581// \u2581 ResponseWriter \u2581returns \u2581a \u2581http . ResponseWriter \u2581that \u2581will \u2581 write \u2581to \u2581an \u2581underlying \u2581writer . \u2581// \u2581It \u2581also \u2581returns \u2581a \u2581function \u2581that \u2581should \u2581be \u2581called \u2581once \u2581the \u2581handler"], "bleu": 0.11095267705942849, "rouge_l": 0.2559440559440559}
{"id": 3858, "predictions": ["\u2581// \u2581with State RLock \u2581calls \u2581the \u2581function \u2581 f \u2581for \u2581the \u2581connection \u2581lock ."], "references": ["\u2581// \u2581with State RLock \u2581performs \u2581an \u2581action \u2581with \u2581the \u2581connection \u2581state \u2581 mutex \u2581 r locked ."], "bleu": 0.24318784513425337, "rouge_l": 0.4438669438669438}
{"id": 3139, "predictions": ["\u2581// \u2581Get Limits ResourceList From Pipeline \u2581returns \u2581the \u2581 ResourceList \u2581information \u2581for \u2581the \u2581pipeline"], "references": ["\u2581// \u2581Get Limits ResourceList From Pipeline \u2581returns \u2581a \u2581list \u2581of \u2581resources \u2581that \u2581the \u2581pipeline , \u2581// \u2581maximal ly \u2581is \u2581limited \u2581to ."], "bleu": 0.29379781513682046, "rouge_l": 0.4807355516637478}
{"id": 4008, "predictions": ["\u2581// \u2581 SAML Request Timeout \u2581returns \u2581the \u2581 token \u2581 type \u2581of \u2581the \u2581 SAML \u2581 token"], "references": ["\u2581// Return \u2581timeout \u2581in \u2581seconds"], "bleu": 0.07223943354597204, "rouge_l": 0.10082644628099173}
{"id": 3016, "predictions": ["\u2581// \u2581False \u2581checks \u2581if \u2581the \u2581given \u2581value \u2581is \u2581a \u2581 set \u2581of \u2581 code ."], "references": ["\u2581// \u2581False \u2581checks \u2581a \u2581value \u2581is \u2581false ."], "bleu": 0.195647514979229, "rouge_l": 0.5520361990950226}
{"id": 3294, "predictions": ["\u2581// \u2581is TTY \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581writer \u2581is \u2581a \u2581terminal ."], "references": ["\u2581// \u2581is TTY \u2581returns \u2581true \u2581if \u2581the \u2581io . Writer \u2581is \u2581a \u2581file \u2581and \u2581a \u2581 tty ."], "bleu": 0.3919253119847528, "rouge_l": 0.6269270298047277}
{"id": 3851, "predictions": ["\u2581// \u2581Get System ErrorCode \u2581returns \u2581the \u2581 ErrorCode \u2581for \u2581the \u2581system \u2581error"], "references": ["\u2581// \u2581Get System ErrorCode \u2581returns \u2581the \u2581 code \u2581to \u2581report \u2581for \u2581the \u2581given \u2581error . \u2581If \u2581the \u2581error \u2581is \u2581a \u2581// \u2581 SystemError , \u2581we \u2581can \u2581 get \u2581the \u2581"], "bleu": 0.13974295995266459, "rouge_l": 0.44202898550724634}
{"id": 3335, "predictions": ["\u2581// \u2581Parse Reference \u2581parses \u2581a \u2581reference \u2581to \u2581a \u2581 Image Reference ."], "references": ["\u2581// \u2581Parse Reference \u2581converts \u2581a \u2581string , \u2581which \u2581should \u2581not \u2581start \u2581with \u2581the \u2581 Image Transport . Name \u2581prefix , \u2581into \u2581an \u2581 OCI \u2581 Image Reference ."], "bleu": 0.10499830943925068, "rouge_l": 0.3730886850152905}
{"id": 3357, "predictions": ["\u2581// \u2581 Manifest \u2581returns \u2581the \u2581manifest \u2581manifest \u2581for \u2581the \u2581given \u2581 Manifest ."], "references": ["\u2581// \u2581 Manifest \u2581overrides \u2581the \u2581 Un parsed Image . Manifest \u2581to \u2581always \u2581use \u2581the \u2581fields \u2581which \u2581we \u2581have \u2581already \u2581fetched ."], "bleu": 0.10896115536332415, "rouge_l": 0.38227394807520143}
{"id": 3875, "predictions": ["\u2581// \u2581Get Proto Config \u2581returns \u2581the \u2581 config \u2581configuration \u2581for \u2581the \u2581given \u2581configuration ."], "references": ["\u2581// \u2581Get Proto Config \u2581returns \u2581the \u2581proto \u2581 language \u2581configuration . \u2581If \u2581the \u2581proto \u2581// \u2581extension \u2581was \u2581not \u2581run , \u2581it \u2581will \u2581return \u2581nil ."], "bleu": 0.21223295858756877, "rouge_l": 0.4880000000000001}
{"id": 2880, "predictions": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581new \u2581 Reader \u2581that \u2581will \u2581 filter \u2581the \u2581 filter ."], "references": ["\u2581// \u2581 NewReader \u2581creates \u2581a \u2581new \u2581hash tree \u2581reader ."], "bleu": 0.17694975149532557, "rouge_l": 0.48157894736842105}
{"id": 3835, "predictions": ["\u2581// \u2581 Listen IP \u2581returns \u2581a \u2581 net . IP \u2581address \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 listen \u2581for \u2581// \u2581the \u2581 IP \u2581address ."], "references": ["\u2581// \u2581 Listen IP \u2581returns \u2581the \u2581 IP \u2581to \u2581 bind \u2581to \u2581in \u2581 Listen . \u2581It \u2581tries \u2581to \u2581find \u2581an \u2581 IP \u2581that \u2581can \u2581be \u2581used \u2581// \u2581by \u2581other"], "bleu": 0.23487109007792276, "rouge_l": 0.429325513196481}
{"id": 3690, "predictions": ["\u2581// \u2581handle Call Res \u2581is \u2581called \u2581when \u2581the \u2581 Call Res e \u2581is \u2581 established ."], "references": ["\u2581// \u2581handle Call Res \u2581handles \u2581an \u2581incoming \u2581 call \u2581req \u2581message , \u2581 forwarding \u2581the \u2581// \u2581frame \u2581to \u2581the \u2581response \u2581channel \u2581waiting \u2581for \u2581it"], "bleu": 0.14604309110779978, "rouge_l": 0.28955696202531644}
{"id": 3758, "predictions": ["\u2581// \u2581 ResponseHeaders \u2581returns \u2581the \u2581 headers \u2581of \u2581the \u2581request \u2581context"], "references": ["\u2581// \u2581 ResponseHeaders \u2581returns \u2581the \u2581response \u2581 headers ."], "bleu": 0.46924700641055994, "rouge_l": 0.7128547579298832}
{"id": 2955, "predictions": ["\u2581// \u2581 New Pipeline Input \u2581creates \u2581a \u2581new \u2581 Pipeline Input \u2581instance ."], "references": ["\u2581// \u2581 New Pipeline Input \u2581creates \u2581a \u2581new \u2581 pps . Pipeline Input"], "bleu": 0.7419446627365011, "rouge_l": 0.8461538461538461}
{"id": 3757, "predictions": ["\u2581// \u2581 Headers \u2581returns \u2581the \u2581 headers \u2581of \u2581the \u2581request \u2581context ."], "references": ["\u2581// \u2581 Headers \u2581gets \u2581application \u2581 headers \u2581out \u2581of \u2581the \u2581context ."], "bleu": 0.2891784933232572, "rouge_l": 0.75}
{"id": 2870, "predictions": ["\u2581// \u2581 FS Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 data \u2581in \u2581 this \u2581tree \u2581tree ."], "references": ["\u2581// \u2581 FS Size \u2581gets \u2581the \u2581 size \u2581of \u2581the \u2581hash tree"], "bleu": 0.37903259135181483, "rouge_l": 0.6224489795918368}
{"id": 3076, "predictions": ["\u2581// \u2581 Is Commit Deleted Err \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581commit Deleted"], "references": ["\u2581// \u2581 Is Commit Deleted Err \u2581returns \u2581true \u2581if \u2581' err ' \u2581has \u2581an \u2581error \u2581message \u2581that \u2581matches \u2581// \u2581 Err Commit Deleted"], "bleu": 0.3578562153088407, "rouge_l": 0.5577722360764755}
{"id": 2706, "predictions": ["\u2581// \u2581 UnaryServer Interceptor \u2581returns \u2581a \u2581 unary \u2581server \u2581interceptor \u2581that \u2581 wraps \u2581 Open Tracing ."], "references": ["\u2581// \u2581 UnaryServer Interceptor \u2581returns \u2581a \u2581 GRPC \u2581interceptor \u2581for \u2581non - streaming \u2581 GRPC \u2581RPC s"], "bleu": 0.4112175645551036, "rouge_l": 0.5294117647058824}
{"id": 2890, "predictions": ["\u2581// \u2581 Hash \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581hash \u2581tree ."], "references": ["\u2581// \u2581 Hash \u2581updates \u2581all \u2581of \u2581the \u2581hashes \u2581and \u2581node \u2581 size \u2581metadata , \u2581it \u2581also \u2581checks \u2581// \u2581for \u2581conflicts ."], "bleu": 0.10556737707670708, "rouge_l": 0.35499515033947615}
{"id": 4033, "predictions": ["\u2581// \u2581 Available \u2581returns \u2581true \u2581if \u2581 this \u2581unit \u2581has \u2581 status \u2581 status ."], "references": ["\u2581// \u2581 Available \u2581returns \u2581true \u2581if \u2581the \u2581unit \u2581is \u2581available . \u2581It \u2581will \u2581return \u2581true \u2581// \u2581whenever \u2581the \u2581unit \u2581itself \u2581is \u2581available , \u2581even \u2581when \u2581the \u2581application \u2581process \u2581is \u2581//"], "bleu": 0.1458783355867521, "rouge_l": 0.3353951890034364}
{"id": 2400, "predictions": ["\u2581// \u2581 helper \u2581function \u2581to \u2581parse \u2581the \u2581 entity \u2581 name \u2581and \u2581 entity \u2581 name"], "references": ["\u2581// \u2581Return \u2581Go \u2581 type \u2581of \u2581the \u2581given \u2581database \u2581 entity ."], "bleu": 0.1203921753741131, "rouge_l": 0.36658653846153844}
{"id": 2928, "predictions": ["\u2581// \u2581 Is TimeoutError Token \u2581checks \u2581if \u2581the \u2581given \u2581error \u2581is \u2581a \u2581valid \u2581 token"], "references": ["\u2581// \u2581 Is ErrBad Token \u2581returns \u2581true \u2581if \u2581' err ' \u2581is \u2581a \u2581 ErrBad Token"], "bleu": 0.1884991955924285, "rouge_l": 0.5131440588853837}
{"id": 3558, "predictions": ["\u2581// \u2581Get Topics \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581available \u2581topics"], "references": ["\u2581// \u2581Get Topics \u2581returns \u2581the \u2581topics \u2581 this \u2581node \u2581is \u2581 subscribed \u2581to ."], "bleu": 0.24614529278805308, "rouge_l": 0.40450928381962864}
{"id": 3075, "predictions": ["\u2581// \u2581 Is Commit NotFound Err \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581commit \u2581error ."], "references": ["\u2581// \u2581 Is Commit NotFound Err \u2581returns \u2581true \u2581if \u2581' err ' \u2581has \u2581an \u2581error \u2581message \u2581that \u2581matches \u2581// \u2581 Err Commit NotFound"], "bleu": 0.36037521946398726, "rouge_l": 0.496742671009772}
{"id": 3077, "predictions": ["\u2581// \u2581 Is Commit Finished Err \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581commit \u2581of \u2581the \u2581// \u2581 Err Commit ."], "references": ["\u2581// \u2581 Is Commit Finished Err \u2581returns \u2581true \u2581of \u2581' err ' \u2581has \u2581an \u2581error \u2581message \u2581that \u2581matches \u2581// \u2581 Err Commit Finished"], "bleu": 0.4484751162812289, "rouge_l": 0.5861049519586106}
{"id": 3978, "predictions": ["\u2581// \u2581is Build able \u2581returns \u2581true \u2581if \u2581the \u2581package \u2581is \u2581a \u2581build able able \u2581build able"], "references": ["\u2581// \u2581is Build able \u2581returns \u2581true \u2581if \u2581anything \u2581in \u2581the \u2581package \u2581is \u2581build able . \u2581// \u2581This \u2581is \u2581true \u2581if \u2581the \u2581package \u2581has \u2581Go \u2581 code \u2581that \u2581 satisfies \u2581build"], "bleu": 0.25749802288897505, "rouge_l": 0.5358108108108108}
{"id": 2792, "predictions": ["\u2581// \u2581 New Branch \u2581creates \u2581a \u2581new \u2581 Branch"], "references": ["\u2581// \u2581 New Branch \u2581creates \u2581a \u2581 pfs . Branch"], "bleu": 0.6088262405071142, "rouge_l": 0.8341880341880341}
{"id": 2834, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 put \u2581file ."], "references": ["\u2581// \u2581 Close \u2581must \u2581be \u2581called \u2581after \u2581you ' re \u2581done \u2581using \u2581a \u2581 put File Client . \u2581// \u2581 Further \u2581requests \u2581will \u2581throw \u2581errors ."], "bleu": 0.049102697515668155, "rouge_l": 0.3152454780361757}
{"id": 2831, "predictions": ["\u2581// \u2581 Compact \u2581 clear s \u2581the \u2581 data \u2581from \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 Compact \u2581force s \u2581 compaction \u2581of \u2581objects ."], "bleu": 0.19674979811155635, "rouge_l": 0.44525547445255476}
{"id": 2793, "predictions": ["\u2581// \u2581 New Commit \u2581creates \u2581a \u2581new \u2581 deliver \u2581 Commit"], "references": ["\u2581// \u2581 New Commit \u2581creates \u2581a \u2581 pfs . Commit ."], "bleu": 0.5491004867761125, "rouge_l": 0.7272727272727273}
{"id": 3200, "predictions": ["\u2581// \u2581 Key \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581index ."], "references": ["\u2581// \u2581 Key \u2581is \u2581the \u2581index \u2581 key ; \u2581it \u2581may \u2581return \u2581-1 \u2581if \u2581in \u2581a \u2581 split \u2581state"], "bleu": 0.13842605887773904, "rouge_l": 0.38164754953076124}
{"id": 3476, "predictions": ["\u2581// \u2581Remove At \u2581removes \u2581the \u2581given \u2581index \u2581at \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581Removes \u2581an \u2581element \u2581from \u2581the \u2581middle \u2581of \u2581a \u2581sequence ."], "bleu": 0.1235622127262679, "rouge_l": 0.2629310344827586}
{"id": 3474, "predictions": ["\u2581// \u2581 Pop Front \u2581removes \u2581the \u2581first \u2581element \u2581from \u2581the \u2581sequence ."], "references": ["\u2581// \u2581Removes \u2581element \u2581from \u2581the \u2581sequence \u2581beginning . \u2581// \u2581 Copies \u2581the \u2581element \u2581into \u2581the \u2581 param ter \u2581element ."], "bleu": 0.18183687769949694, "rouge_l": 0.3588235294117647}
{"id": 3705, "predictions": ["\u2581// \u2581 NewContext \u2581returns \u2581a \u2581new \u2581 Context ."], "references": ["\u2581// \u2581 NewContext \u2581returns \u2581a \u2581 Context \u2581that \u2581can \u2581be \u2581used \u2581to \u2581make \u2581Thrift \u2581calls ."], "bleu": 0.27510692355510713, "rouge_l": 0.6092384519350812}
{"id": 3258, "predictions": ["\u2581// \u2581 Baggage Item \u2581returns \u2581a \u2581 baggage \u2581item \u2581in \u2581the \u2581 span ."], "references": ["\u2581// \u2581 Baggage Item \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.28295596283263513, "rouge_l": 0.5154929577464789}
{"id": 2847, "predictions": ["\u2581// \u2581 PrettyPrint Version No Additional \u2581returns \u2581the \u2581version \u2581of \u2581the \u2581version \u2581of \u2581the \u2581version ."], "references": ["\u2581// \u2581 PrettyPrint Version No Additional \u2581returns \u2581a \u2581version \u2581string \u2581without \u2581// \u2581version . Additional ."], "bleu": 0.46366459199876225, "rouge_l": 0.625}
{"id": 3725, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 relay \u2581item \u2581to \u2581the \u2581 slice ."], "references": ["\u2581// \u2581Add \u2581adds \u2581a \u2581 relay \u2581item ."], "bleu": 0.3661926362999429, "rouge_l": 0.7960848287112561}
{"id": 4020, "predictions": ["\u2581// \u2581 Collection \u2581returns \u2581a \u2581collection \u2581of \u2581 Collection \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Collection \u2581returns \u2581a \u2581collection \u2581by \u2581its \u2581 name . \u2581// \u2581// \u2581If \u2581the \u2581collection \u2581does \u2581not \u2581exist , \u2581 MongoDB \u2581will \u2581create \u2581it ."], "bleu": 0.23017987039896157, "rouge_l": 0.4652936689549962}
{"id": 4028, "predictions": ["\u2581// \u2581 Detect s \u2581the \u2581 container ' s \u2581containers ."], "references": ["\u2581// \u2581recreate Containers \u2581re launch \u2581all \u2581node \u2581containers \u2581in \u2581the \u2581cluster \u2581for \u2581the \u2581given \u2581// \u2581Docker Provisioner , \u2581logging \u2581progress \u2581to \u2581the \u2581given \u2581writer . \u2581// \u2581// \u2581It \u2581assumes \u2581that"], "bleu": 0.0254620505917539, "rouge_l": 0.13505535055350554}
{"id": 2807, "predictions": ["\u2581// \u2581 List Commit By Repo \u2581returns \u2581all \u2581 repositories \u2581for \u2581a \u2581repository"], "references": ["\u2581// \u2581 List Commit By Repo \u2581lists \u2581all \u2581commits \u2581in \u2581a \u2581repo ."], "bleu": 0.460462862587273, "rouge_l": 0.6153846153846153}
{"id": 3580, "predictions": ["\u2581// \u2581 Port \u2581returns \u2581the \u2581port \u2581of \u2581the \u2581server ."], "references": ["\u2581// \u2581 Port \u2581returns \u2581the \u2581actual \u2581port \u2581the \u2581server \u2581 listen s \u2581to"], "bleu": 0.39620879478817245, "rouge_l": 0.67966573816156}
{"id": 3702, "predictions": ["\u2581// \u2581release Previous Fragment \u2581 releases \u2581all \u2581the \u2581fragment \u2581fragment ' s \u2581fragment \u2581fragment ."], "references": ["\u2581// \u2581release Previous Frame nt \u2581 releases \u2581the \u2581last \u2581fragment \u2581returned \u2581by \u2581the \u2581reader \u2581if \u2581// \u2581it ' s \u2581still \u2581around . \u2581This \u2581operation \u2581is \u2581 idempotent ."], "bleu": 0.09416488121207314, "rouge_l": 0.4410701373825017}
{"id": 3850, "predictions": ["\u2581// \u2581Get Context Error \u2581returns \u2581the \u2581error \u2581if \u2581the \u2581error \u2581is \u2581not \u2581nil ."], "references": ["\u2581// \u2581Get Context Error \u2581converts \u2581the \u2581context \u2581error \u2581to \u2581a \u2581 t channel \u2581error ."], "bleu": 0.2653117169252599, "rouge_l": 0.548314606741573}
{"id": 3847, "predictions": ["\u2581// \u2581 New Imports \u2581creates \u2581a \u2581new \u2581temporary \u2581file"], "references": ["\u2581// \u2581 New SystemError \u2581defines \u2581a \u2581new \u2581 SystemError \u2581with \u2581a \u2581 code \u2581and \u2581message"], "bleu": 0.16038842424444547, "rouge_l": 0.3986928104575163}
{"id": 3763, "predictions": ["\u2581// \u2581 Without Headers \u2581returns \u2581a \u2581context \u2581with \u2581the \u2581given \u2581 set \u2581of \u2581 headers ."], "references": ["\u2581// \u2581 Without Headers \u2581 hide s \u2581any \u2581 T Channel \u2581 headers \u2581from \u2581the \u2581given \u2581context ."], "bleu": 0.2602478059181997, "rouge_l": 0.465648854961832}
{"id": 3637, "predictions": ["\u2581// \u2581 Isolated \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581channel ."], "references": ["\u2581// \u2581 Isolated \u2581returns \u2581whether \u2581 this \u2581sub channel \u2581is \u2581an \u2581 isolated \u2581sub channel ."], "bleu": 0.21888531592084717, "rouge_l": 0.43008225616921264}
{"id": 2310, "predictions": ["\u2581// \u2581 add \u2581adds \u2581a \u2581new \u2581value \u2581to \u2581the \u2581 ErrorList ."], "references": ["\u2581// \u2581Add \u2581adds \u2581an \u2581 Error \u2581with \u2581given \u2581 key \u2581 name , \u2581value \u2581and \u2581reason ."], "bleu": 0.09368911897670924, "rouge_l": 0.26754385964912275}
{"id": 3710, "predictions": ["\u2581// \u2581Set Headers \u2581sets \u2581the \u2581 headers \u2581of \u2581the \u2581query"], "references": ["\u2581// \u2581Set Headers \u2581sets \u2581the \u2581application \u2581 headers \u2581for \u2581 this \u2581 Context . \u2581// \u2581If \u2581there \u2581is \u2581a \u2581 Parent Context , \u2581its \u2581 headers \u2581will \u2581be \u2581ignored \u2581after"], "bleu": 0.07028058400358093, "rouge_l": 0.32105263157894737}
{"id": 3622, "predictions": ["\u2581// \u2581 State \u2581returns \u2581the \u2581current \u2581state \u2581of \u2581the \u2581channel ."], "references": ["\u2581// \u2581 State \u2581returns \u2581the \u2581current \u2581channel \u2581state ."], "bleu": 0.5637560315259289, "rouge_l": 0.8146911519198664}
{"id": 2542, "predictions": ["\u2581// \u2581 Ask Password Once \u2581 asks \u2581the \u2581user \u2581to \u2581be \u2581used \u2581for \u2581 login ."], "references": ["\u2581// \u2581 Ask Password Once \u2581 asks \u2581the \u2581user \u2581to \u2581 enter \u2581a \u2581password . \u2581// \u2581// \u2581It ' s \u2581the \u2581same \u2581as \u2581 Ask Password , \u2581but \u2581it \u2581won"], "bleu": 0.26522486732158357, "rouge_l": 0.49459459459459465}
{"id": 2050, "predictions": ["\u2581// \u2581 Replace \u2581the \u2581 config \u2581with \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Replace \u2581the \u2581current \u2581configuration \u2581with \u2581the \u2581given \u2581values ."], "bleu": 0.39832871551569504, "rouge_l": 0.7011494252873562}
{"id": 3561, "predictions": ["\u2581// \u2581 With Validator Timeout \u2581sets \u2581the \u2581timeout \u2581for \u2581the \u2581 validator \u2581 set \u2581to \u2581be \u2581used \u2581for \u2581// \u2581the \u2581 set \u2581of \u2581 validator \u2581 set \u2581to \u2581the \u2581"], "references": ["\u2581// \u2581 With Validator Timeout \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581topic \u2581 validator \u2581timeout ."], "bleu": 0.18702869706385972, "rouge_l": 0.414027149321267}
{"id": 2632, "predictions": ["\u2581// \u2581 Network Cert \u2581returns \u2581the \u2581 Cert Info \u2581for \u2581the \u2581 Endpoints"], "references": ["\u2581// \u2581 Network Cert \u2581returns \u2581the \u2581full \u2581 TLS \u2581certificate \u2581information \u2581for \u2581 this \u2581endpoint ."], "bleu": 0.3753290488187955, "rouge_l": 0.6093229744728079}
{"id": 3929, "predictions": ["\u2581// \u2581should Call \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581should \u2581be \u2581 set \u2581to \u2581true \u2581if \u2581the \u2581// \u2581 path \u2581is \u2581 set ."], "references": ["\u2581// \u2581should Call \u2581returns \u2581true \u2581if \u2581Walk \u2581should \u2581 call \u2581the \u2581callback \u2581in \u2581the \u2581// \u2581directory \u2581rel ."], "bleu": 0.26687306188746734, "rouge_l": 0.5271013354281225}
{"id": 3472, "predictions": ["\u2581// \u2581 Pop \u2581removes \u2581the \u2581element \u2581from \u2581the \u2581 seq ."], "references": ["\u2581// \u2581Removes \u2581element \u2581from \u2581the \u2581sequence \u2581end . \u2581// \u2581 Copies \u2581the \u2581element \u2581into \u2581the \u2581 param ter \u2581element ."], "bleu": 0.13624481385266127, "rouge_l": 0.42914572864321615}
{"id": 2631, "predictions": ["\u2581// \u2581 Network PrivateKey \u2581returns \u2581the \u2581private \u2581 key \u2581of \u2581the \u2581endpoints ."], "references": ["\u2581// \u2581 Network PrivateKey \u2581returns \u2581the \u2581private \u2581 key \u2581of \u2581the \u2581 TLS \u2581certificate \u2581used \u2581by \u2581the \u2581// \u2581network \u2581endpoint ."], "bleu": 0.46235458020309245, "rouge_l": 0.6771507863089733}
{"id": 3658, "predictions": ["\u2581// \u2581 Read Len 16 String \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Read Len 16 String \u2581reads \u2581a \u2581 16 - bit \u2581 length \u2581preceded \u2581string \u2581value"], "bleu": 0.3574321057782187, "rouge_l": 0.5072765072765073}
{"id": 3657, "predictions": ["\u2581// \u2581 Read Len 8 String \u2581implements \u2581the \u2581 Read Buffer \u2581interface ."], "references": ["\u2581// \u2581 Read Len 8 String \u2581reads \u2581an \u2581 8- bit \u2581 length \u2581preceded \u2581string \u2581value"], "bleu": 0.3549642985355191, "rouge_l": 0.4739178690344062}
{"id": 3543, "predictions": ["\u2581// \u2581 With Validate Throttle \u2581sets \u2581the \u2581 rate \u2581of \u2581the \u2581 PubSub \u2581connection ."], "references": ["\u2581// \u2581 With Validate Throttle \u2581sets \u2581the \u2581upper \u2581bound \u2581on \u2581the \u2581number \u2581of \u2581 active \u2581validation \u2581// \u2581goroutines ."], "bleu": 0.37537696266594855, "rouge_l": 0.5760151085930123}
{"id": 3500, "predictions": ["\u2581// \u2581 Kind \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581 taskID ."], "references": ["\u2581// \u2581 Kind \u2581is \u2581an \u2581option \u2581for \u2581 Dag . Put \u2581which \u2581specifies \u2581the \u2581 format \u2581that \u2581the \u2581 dag \u2581// \u2581will \u2581be \u2581added \u2581as . \u2581Default \u2581is \u2581\" cb"], "bleu": 0.06004676067680603, "rouge_l": 0.3536231884057971}
{"id": 2630, "predictions": ["\u2581// \u2581 Network PublicKey \u2581returns \u2581the \u2581public \u2581 key \u2581of \u2581the \u2581endpoints ."], "references": ["\u2581// \u2581 Network PublicKey \u2581returns \u2581the \u2581public \u2581 key \u2581of \u2581the \u2581 TLS \u2581certificate \u2581used \u2581by \u2581the \u2581// \u2581network \u2581endpoint ."], "bleu": 0.46235458020309245, "rouge_l": 0.6771507863089733}
{"id": 4021, "predictions": ["\u2581// \u2581Set Logger \u2581sets \u2581the \u2581logger ' s \u2581logger ."], "references": ["\u2581// \u2581Set Logger \u2581defines \u2581a \u2581new \u2581logger \u2581for \u2581the \u2581current \u2581target . \u2581// \u2581// \u2581See \u2581the \u2581 builtin \u2581log \u2581package \u2581for \u2581more \u2581details ."], "bleu": 0.0665455091918004, "rouge_l": 0.2737881508078994}
{"id": 3514, "predictions": ["\u2581// \u2581 New Tracked Buffer \u2581returns \u2581a \u2581new \u2581 Tracked Buffer ."], "references": ["\u2581// \u2581 New Tracked Buffer \u2581creates \u2581a \u2581new \u2581 Tracked Buffer ."], "bleu": 0.7611606003349892, "rouge_l": 0.9166666666666665}
{"id": 3623, "predictions": ["\u2581// \u2581 NewReader \u2581creates \u2581a \u2581new \u2581reader \u2581for \u2581reading \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581reader \u2581that \u2581reads \u2581typed \u2581values \u2581from \u2581the \u2581reader ."], "bleu": 0.18842393723950338, "rouge_l": 0.5398230088495575}
{"id": 2612, "predictions": ["\u2581// \u2581 Update Config \u2581updates \u2581the \u2581 config \u2581with \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 Update Config \u2581updates \u2581the \u2581given \u2581 LXD \u2581cluster \u2581configuration \u2581 keys \u2581in \u2581the \u2581// \u2581 config \u2581 table . \u2581 Config \u2581 keys \u2581 set \u2581to \u2581 empty"], "bleu": 0.1725546836530342, "rouge_l": 0.4692307692307692}
{"id": 3520, "predictions": ["\u2581// \u2581 Append \u2581appends \u2581a \u2581 SQL Node \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Append \u2581appends \u2581the \u2581 SQL Node \u2581to \u2581the \u2581buffer ."], "bleu": 0.7611606003349892, "rouge_l": 0.9166666666666665}
{"id": 2610, "predictions": ["\u2581// \u2581 Update Config \u2581updates \u2581the \u2581 config \u2581values \u2581for \u2581the \u2581node ."], "references": ["\u2581// \u2581 Update Config \u2581updates \u2581the \u2581given \u2581 LXD \u2581node - level \u2581configuration \u2581 keys \u2581in \u2581the \u2581// \u2581 config \u2581 table . \u2581 Config \u2581 keys \u2581 set \u2581to"], "bleu": 0.13907287648170694, "rouge_l": 0.3907473309608541}
{"id": 3390, "predictions": ["\u2581// \u2581 B zip 2 Decompressor \u2581 loads \u2581the \u2581 contents \u2581of \u2581a \u2581zip \u2581file ."], "references": ["\u2581// \u2581 B zip 2 Decompressor \u2581is \u2581a \u2581 Decompressor Func \u2581for \u2581the \u2581 b zip 2 \u2581compression \u2581algorithm ."], "bleu": 0.32251999935859654, "rouge_l": 0.5446428571428571}
{"id": 2854, "predictions": ["\u2581// \u2581 New Pull er \u2581returns \u2581a \u2581new \u2581pull er ."], "references": ["\u2581// \u2581 New Pull er \u2581creates \u2581a \u2581new \u2581 Pull er \u2581struct ."], "bleu": 0.4136817680097794, "rouge_l": 0.7388963660834454}
{"id": 4016, "predictions": ["\u2581// \u2581 Apps \u2581returns \u2581an \u2581object \u2581that \u2581can \u2581list \u2581and \u2581 get \u2581 Apps ."], "references": ["\u2581// \u2581 Apps \u2581returns \u2581an \u2581object \u2581that \u2581can \u2581list \u2581and \u2581 get \u2581 Apps ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 2288, "predictions": ["\u2581// \u2581Set Logger \u2581sets \u2581the \u2581logger \u2581for \u2581the \u2581logger ."], "references": ["\u2581// \u2581Set Logger \u2581install s \u2581the \u2581given \u2581logger \u2581as \u2581global \u2581logger . \u2581It \u2581returns \u2581a \u2581function \u2581// \u2581that \u2581can \u2581be \u2581used \u2581to \u2581restore \u2581whatever \u2581logger \u2581was \u2581installed \u2581before hand ."], "bleu": 0.040576514093271565, "rouge_l": 0.32105263157894737}
{"id": 3793, "predictions": ["\u2581// \u2581 Introspect State \u2581 - \u2581 introspect s \u2581a \u2581 introspection \u2581 introspection ."], "references": ["\u2581// \u2581 Introspect State \u2581returns \u2581the \u2581runtime \u2581state \u2581of \u2581the"], "bleu": 0.22894156860669912, "rouge_l": 0.3319727891156462}
{"id": 2713, "predictions": ["\u2581// \u2581 New GRPC Log Writer \u2581creates \u2581a \u2581new \u2581 GRPC Log Writer"], "references": ["\u2581// \u2581 New GRPC Log Writer \u2581creates \u2581a \u2581new \u2581 GRPC \u2581log \u2581writer . \u2581` logger ` \u2581specifies \u2581the \u2581// \u2581underlying \u2581logger , \u2581and \u2581` source ` \u2581specifies \u2581where \u2581these"], "bleu": 0.2267875592838286, "rouge_l": 0.47758007117437723}
{"id": 4053, "predictions": ["\u2581// \u2581new Apps \u2581returns \u2581a \u2581 Apps \u2581instance"], "references": ["\u2581// \u2581new Apps \u2581returns \u2581a \u2581 Apps"], "bleu": 0.8633400213704505, "rouge_l": 0.9446902654867256}
{"id": 3463, "predictions": ["\u2581// \u2581 Sub Scalar \u2581 subtract s \u2581the \u2581 translation \u2581from \u2581the \u2581specified \u2581 path"], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581difference \u2581between \u2581an \u2581array \u2581and \u2581a \u2581scalar . \u2581// \u2581dst \u2581= \u2581 src \u2581 - \u2581value"], "bleu": 0.0648636054691442, "rouge_l": 0.20908311910882607}
{"id": 3465, "predictions": ["\u2581// \u2581 Sub Scalar Rev \u2581 subtract s \u2581 v \u2581and \u2581 o \u2581 v \u2581to \u2581dst ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581difference \u2581between \u2581a \u2581scalar \u2581and \u2581an \u2581array . \u2581// \u2581dst \u2581= \u2581value \u2581 - \u2581 src"], "bleu": 0.07457888268313391, "rouge_l": 0.19645732689210954}
{"id": 4050, "predictions": ["\u2581// \u2581 Archive Deploy Cmd s \u2581deploy s \u2581a \u2581 container \u2581to \u2581the \u2581 app ' s \u2581directory"], "references": ["\u2581// \u2581 Archive Deploy Cmd s \u2581is \u2581a \u2581legacy \u2581command \u2581to \u2581deploy s \u2581an \u2581unit \u2581using \u2581the \u2581archive \u2581method ."], "bleu": 0.32803759972779695, "rouge_l": 0.4692307692307693}
{"id": 4049, "predictions": ["\u2581// \u2581 Archive Build Cmd s \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 app \u2581to \u2581the \u2581 app ."], "references": ["\u2581// \u2581 Archive Build Cmd s \u2581build \u2581a \u2581image \u2581using \u2581the \u2581archive \u2581method ."], "bleu": 0.310441435588881, "rouge_l": 0.49846782431052095}
{"id": 3660, "predictions": ["\u2581// \u2581 Wrap \u2581 wraps \u2581the \u2581underlying \u2581 Buffer \u2581method ."], "references": ["\u2581// \u2581 Wrap \u2581initializes \u2581the \u2581buffer \u2581to \u2581read \u2581from \u2581the \u2581given \u2581 byte \u2581 slice"], "bleu": 0.16950516895876122, "rouge_l": 0.37423312883435583}
{"id": 3190, "predictions": ["\u2581// \u2581Ignore Types \u2581returns \u2581a \u2581 Option \u2581that \u2581sets \u2581the \u2581 type \u2581of \u2581the \u2581given \u2581types ."], "references": ["\u2581// \u2581Ignore Types \u2581returns \u2581an \u2581 Option \u2581that \u2581ignores \u2581all \u2581values \u2581 assignable \u2581to \u2581// \u2581certain \u2581types , \u2581which \u2581are \u2581specified \u2581by \u2581passing \u2581in \u2581a \u2581value \u2581of \u2581each \u2581 type"], "bleu": 0.14687305648301038, "rouge_l": 0.36478405315614615}
{"id": 3441, "predictions": ["\u2581// \u2581Get Size \u2581returns \u2581the \u2581number \u2581of \u2581workers \u2581that \u2581are \u2581currently \u2581running ."], "references": ["\u2581// \u2581Get Size \u2581returns \u2581the \u2581current \u2581 size \u2581of \u2581the \u2581pool ."], "bleu": 0.3759663529467017, "rouge_l": 0.5640686922060767}
{"id": 2262, "predictions": ["\u2581// \u2581 GetString \u2581returns \u2581the \u2581string \u2581value \u2581of \u2581the \u2581 map \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581 GetString \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key , \u2581which \u2581must \u2581be \u2581of \u2581 type \u2581String ."], "bleu": 0.28894155874357685, "rouge_l": 0.5570776255707762}
{"id": 3489, "predictions": ["\u2581// \u2581 Cancel \u2581cancel s \u2581the \u2581subscription ."], "references": ["\u2581// \u2581 Cancel \u2581cancel s \u2581the \u2581given \u2581subscription ."], "bleu": 0.7090230911670939, "rouge_l": 0.931297709923664}
{"id": 3499, "predictions": ["\u2581// \u2581 Pin \u2581sets \u2581the \u2581pin \u2581to \u2581the \u2581pin"], "references": ["\u2581// \u2581 Pin \u2581is \u2581an \u2581option \u2581for \u2581 Dag . Put \u2581which \u2581specifies \u2581whether \u2581to \u2581pin \u2581the \u2581added \u2581// \u2581 dag s . \u2581Default \u2581is \u2581\" false \" ."], "bleu": 0.0327420479222823, "rouge_l": 0.24034672970843185}
{"id": 3501, "predictions": ["\u2581// \u2581 Hash \u2581returns \u2581a \u2581 shallow \u2581copy \u2581of \u2581the \u2581 center \u2581of \u2581the \u2581 center \u2581 config ."], "references": ["\u2581// \u2581 Hash \u2581is \u2581an \u2581option \u2581for \u2581 Dag . Put \u2581which \u2581specifies \u2581the \u2581hash \u2581function \u2581to \u2581use"], "bleu": 0.1378592993183041, "rouge_l": 0.2715939447907391}
{"id": 2698, "predictions": ["\u2581// \u2581 New Shard er \u2581creates \u2581a \u2581new \u2581 Shard er \u2581that \u2581uses \u2581the \u2581provided \u2581 Client \u2581to \u2581 collect \u2581the \u2581// \u2581 shards ."], "references": ["\u2581// \u2581 New Shard er \u2581creates \u2581a \u2581 Shard er \u2581using \u2581a \u2581discovery \u2581client ."], "bleu": 0.3203759015876555, "rouge_l": 0.5759656652360514}
{"id": 4029, "predictions": ["\u2581// \u2581check Provisioner \u2581checks \u2581if \u2581the \u2581 provisioner \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check \u2581 provisioner \u2581configs"], "bleu": 0.16108992769687397, "rouge_l": 0.40219780219780216}
{"id": 3065, "predictions": ["\u2581// \u2581 With Ctx \u2581sets \u2581the \u2581context \u2581of \u2581the \u2581 APIClient"], "references": ["\u2581// \u2581 With Ctx \u2581returns \u2581a \u2581new \u2581 APIClient \u2581that \u2581uses \u2581 ctx \u2581for \u2581requests \u2581it \u2581sends . \u2581Note \u2581// \u2581that \u2581the \u2581new \u2581 APIClient \u2581will \u2581still \u2581use \u2581the \u2581authentication"], "bleu": 0.06902267979217218, "rouge_l": 0.3151291512915129}
{"id": 2627, "predictions": ["\u2581// \u2581 L \u2581prints \u2581a \u2581formatted \u2581string \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 L \u2581 accumulate s \u2581a \u2581single \u2581line \u2581of \u2581source \u2581 code ."], "bleu": 0.1786189637183548, "rouge_l": 0.39152759948652116}
{"id": 2609, "predictions": ["\u2581// \u2581 Config \u2581returns \u2581the \u2581 config \u2581for \u2581the \u2581node ."], "references": ["\u2581// \u2581 Config \u2581fetches \u2581all \u2581 LXD \u2581node - level \u2581 config \u2581 keys ."], "bleu": 0.1883283134652959, "rouge_l": 0.44907975460122695}
{"id": 3599, "predictions": ["\u2581// \u2581 Connect \u2581connects \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Connect \u2581adds \u2581a \u2581new \u2581outbound \u2581connection \u2581to \u2581the \u2581peer ."], "bleu": 0.3620679794762826, "rouge_l": 0.6756329113924051}
{"id": 2611, "predictions": ["\u2581// \u2581 Config \u2581returns \u2581the \u2581 config \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Config \u2581fetches \u2581all \u2581 LXD \u2581cluster \u2581 config \u2581 keys ."], "bleu": 0.2258802450731742, "rouge_l": 0.4925975773889637}
{"id": 2479, "predictions": ["\u2581// \u2581Get Websocket \u2581returns \u2581the \u2581websocket \u2581connection ."], "references": ["\u2581// \u2581Get Websocket \u2581returns \u2581a \u2581raw \u2581websocket \u2581connection \u2581from \u2581the \u2581operation"], "bleu": 0.36479336700864445, "rouge_l": 0.6140939597315436}
{"id": 3452, "predictions": ["\u2581// \u2581 And Scalar \u2581 wraps \u2581the \u2581given \u2581 Ip _ Image \u2581with \u2581the \u2581specified \u2581 Ip _ Image \u2581 Value"], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581bit - wise \u2581 conjunction \u2581of \u2581an \u2581array \u2581and \u2581a \u2581scalar ."], "bleu": 0.0690889519686715, "rouge_l": 0.15601023017902813}
{"id": 3253, "predictions": ["\u2581// \u2581 Tag \u2581returns \u2581a \u2581 slice \u2581of \u2581tags \u2581for \u2581a \u2581given \u2581 key"], "references": ["\u2581// \u2581 Tag \u2581returns \u2581a \u2581single \u2581tag"], "bleu": 0.3237722713145643, "rouge_l": 0.5066445182724253}
{"id": 3562, "predictions": ["\u2581// \u2581 With Validator Concurrency \u2581sets \u2581the \u2581number \u2581of \u2581 validator \u2581 set \u2581to \u2581be \u2581 set \u2581to \u2581 set"], "references": ["\u2581// \u2581 With Validator Concurrency \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581topic \u2581 validator \u2581 throttle ."], "bleu": 0.29240074556521944, "rouge_l": 0.5102230483271376}
{"id": 3456, "predictions": ["\u2581// \u2581 Or Scalar \u2581 wraps \u2581the \u2581 v l Image \u2581to \u2581a \u2581 dot \u2581 Image \u2581 Image"], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581bit - wise \u2581 disjunction \u2581of \u2581an \u2581array \u2581and \u2581a \u2581scalar ."], "bleu": 0.08097785064266201, "rouge_l": 0.21727515583259127}
{"id": 2811, "predictions": ["\u2581// \u2581Set Branch \u2581 - \u2581 set \u2581branch \u2581for \u2581given \u2581branch"], "references": ["\u2581// \u2581Set Branch \u2581sets \u2581a \u2581commit \u2581and \u2581its \u2581 ancestors \u2581as \u2581a \u2581branch . \u2581// \u2581Set Branch \u2581is \u2581deprecated \u2581in \u2581favor \u2581of \u2581 Commit Branch ."], "bleu": 0.06235746683221999, "rouge_l": 0.2518579686209744}
{"id": 4000, "predictions": ["\u2581// \u2581 Timeout Writer \u2581returns \u2581a \u2581writer \u2581that \u2581writes \u2581to \u2581the \u2581given \u2581writer . \u2581// \u2581// \u2581 A \u2581timeout \u2581is \u2581returned \u2581if \u2581the \u2581timeout \u2581is \u2581closed ."], "references": ["\u2581// \u2581 Timeout Writer \u2581returns \u2581an \u2581io . Writer \u2581that \u2581 wraps \u2581the \u2581passed - in \u2581io . Writer . \u2581If \u2581the \u2581underlying \u2581 Writer \u2581fails \u2581to \u2581 write \u2581within"], "bleu": 0.17861170664603615, "rouge_l": 0.31282051282051276}
{"id": 3787, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581checksum ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Checksum \u2581of \u2581the \u2581given \u2581 type"], "bleu": 0.18999003005410345, "rouge_l": 0.45658682634730546}
{"id": 2729, "predictions": ["\u2581// \u2581 New Hasher \u2581creates \u2581a \u2581new \u2581 Hasher \u2581instance"], "references": ["\u2581// \u2581 New Hasher \u2581creates \u2581a \u2581hasher ."], "bleu": 0.5706745777055999, "rouge_l": 0.6802973977695167}
{"id": 3896, "predictions": ["\u2581// \u2581 Scan AST \u2581scan s \u2581the \u2581given \u2581string \u2581into \u2581a \u2581 File ."], "references": ["\u2581// \u2581 Scan AST \u2581creates \u2581a \u2581 File \u2581wrapped \u2581around \u2581the \u2581given \u2581syntax \u2581tree . \u2581This \u2581tree \u2581// \u2581will \u2581be \u2581modified \u2581by \u2581 editing \u2581methods ."], "bleu": 0.15714725225428147, "rouge_l": 0.3794712286158632}
{"id": 4073, "predictions": ["\u2581// \u2581Remove \u2581a \u2581plan \u2581from \u2581the \u2581 Plan Service ."], "references": ["\u2581// \u2581Remove \u2581implements \u2581Remove \u2581method \u2581of \u2581 Plan Service \u2581interface"], "bleu": 0.27901593935858265, "rouge_l": 0.5}
{"id": 3378, "predictions": ["\u2581// \u2581Add Repo Tags \u2581adds \u2581tags \u2581to \u2581the \u2581destination \u2581 Destination ."], "references": ["\u2581// \u2581Add Repo Tags \u2581adds \u2581the \u2581specified \u2581tags \u2581to \u2581the \u2581destination ' s \u2581repo Tags ."], "bleu": 0.42440386496687155, "rouge_l": 0.6963470319634703}
{"id": 3436, "predictions": ["\u2581// \u2581signature Path \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581signature Path \u2581returns \u2581a \u2581 path \u2581for \u2581a \u2581signature \u2581within \u2581a \u2581directory \u2581using \u2581our \u2581convention s ."], "bleu": 0.22468234632303136, "rouge_l": 0.40744274809160297}
{"id": 2730, "predictions": ["\u2581// \u2581 Hash Job \u2581returns \u2581the \u2581 Hasher \u2581for \u2581the \u2581given \u2581job ."], "references": ["\u2581// \u2581 Hash Job \u2581computes \u2581and \u2581returns \u2581the \u2581hash \u2581of \u2581a \u2581job ."], "bleu": 0.3407806467081348, "rouge_l": 0.6153846153846153}
{"id": 3849, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581error \u2581message \u2581for \u2581the \u2581current \u2581directory"], "references": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581 code \u2581and \u2581message , \u2581 conform ing \u2581to \u2581the \u2581error \u2581interface"], "bleu": 0.28009266907237096, "rouge_l": 0.48139797068771134}
{"id": 2888, "predictions": ["\u2581// \u2581 Path To Tree \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Path To Tree \u2581computes \u2581the \u2581hash tree \u2581shard \u2581for \u2581a \u2581 path ."], "bleu": 0.43638331478846537, "rouge_l": 0.6}
{"id": 3999, "predictions": ["\u2581// \u2581 Timeout Reader \u2581returns \u2581a \u2581reader \u2581that \u2581reads \u2581from \u2581the \u2581reader \u2581to \u2581 get \u2581the \u2581timeout \u2581// \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Timeout Reader \u2581returns \u2581an \u2581io . Reader \u2581that \u2581 wraps \u2581the \u2581passed - in \u2581io . Reader . \u2581If \u2581the \u2581underlying \u2581 Reader \u2581fails \u2581to \u2581read \u2581within \u2581the"], "bleu": 0.17109937877592135, "rouge_l": 0.3368098159509202}
{"id": 2564, "predictions": ["\u2581// \u2581 IsActive \u2581returns \u2581true \u2581if \u2581the \u2581 container \u2581is \u2581 alive ."], "references": ["\u2581// \u2581 IsActive \u2581checks \u2581whether \u2581the \u2581 container \u2581state \u2581indicates \u2581the \u2581 container \u2581is \u2581 active"], "bleu": 0.35356951990009544, "rouge_l": 0.541620421753607}
{"id": 2549, "predictions": ["\u2581// \u2581 Forwarded Response \u2581creates \u2581a \u2581 functional \u2581 api ."], "references": ["\u2581// \u2581 Forwarded Response \u2581takes \u2581a \u2581request \u2581 directed \u2581to \u2581a \u2581node \u2581and \u2581forwards \u2581it \u2581to \u2581// \u2581another \u2581node , \u2581writing \u2581back \u2581the \u2581response \u2581it \u2581 ge gs ."], "bleu": 0.07149005479936668, "rouge_l": 0.3699772554965883}
{"id": 3517, "predictions": ["\u2581// \u2581 Space Left \u2581returns \u2581the \u2581number \u2581of \u2581space \u2581 left \u2581in \u2581the \u2581range \u2581range"], "references": ["\u2581// \u2581 Space Left \u2581returns \u2581the \u2581amount \u2581of \u2581space \u2581 left \u2581in \u2581the \u2581aren a ."], "bleu": 0.6304425599486114, "rouge_l": 0.7697160883280757}
{"id": 3626, "predictions": ["\u2581// \u2581 Read Len 16 String \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581string ."], "references": ["\u2581// \u2581 Read Len 16 String \u2581reads \u2581a \u2581uint 16 - length \u2581prefixed \u2581string ."], "bleu": 0.42332605679461044, "rouge_l": 0.6168539325842697}
{"id": 2731, "predictions": ["\u2581// \u2581 Hash Pipeline \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 Hash Pipeline \u2581computes \u2581and \u2581returns \u2581the \u2581hash \u2581of \u2581a \u2581pipeline ."], "bleu": 0.45723134461864345, "rouge_l": 0.6923076923076923}
{"id": 3052, "predictions": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581 Exponential \u2581backoff \u2581and \u2581returns \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 Reset \u2581the \u2581interval \u2581back \u2581to \u2581the \u2581initial \u2581retry \u2581interval \u2581and \u2581restart s \u2581the \u2581timer ."], "bleu": 0.15791058149723844, "rouge_l": 0.4438669438669438}
{"id": 3998, "predictions": ["\u2581// \u2581 Timeout Closer \u2581returns \u2581a \u2581new \u2581 Closer \u2581that \u2581will \u2581 close \u2581the \u2581 Closer \u2581// \u2581and \u2581 close \u2581the \u2581timeout ."], "references": ["\u2581// \u2581 Timeout Closer \u2581returns \u2581an \u2581io . Closer \u2581that \u2581 wraps \u2581the \u2581passed - in \u2581io . Closer . \u2581If \u2581the \u2581underlying \u2581 Closer \u2581fails \u2581to \u2581 close \u2581within"], "bleu": 0.20548302908176874, "rouge_l": 0.479154078549849}
{"id": 3754, "predictions": ["\u2581// \u2581 Current Call \u2581returns \u2581the \u2581current \u2581 status \u2581of \u2581the \u2581 Context ."], "references": ["\u2581// \u2581 Current Call \u2581returns \u2581the \u2581current \u2581incoming \u2581 call , \u2581or \u2581nil \u2581if \u2581 this \u2581is \u2581not \u2581an \u2581incoming \u2581 call \u2581context ."], "bleu": 0.2522648130215603, "rouge_l": 0.5024711696869852}
{"id": 2499, "predictions": ["\u2581// \u2581project Param \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581request"], "references": ["\u2581// \u2581Extract \u2581the \u2581project \u2581query \u2581parameter \u2581from \u2581the \u2581given \u2581request ."], "bleu": 0.15011602950163877, "rouge_l": 0.37770897832817335}
{"id": 2337, "predictions": ["\u2581// \u2581 Project Has Profiles \u2581returns \u2581whether \u2581the \u2581cluster \u2581has \u2581a \u2581project"], "references": ["\u2581// \u2581 Project Has Profiles \u2581is \u2581a \u2581 helper \u2581to \u2581check \u2581if \u2581a \u2581project \u2581has \u2581the \u2581profiles \u2581// \u2581feature \u2581enabled ."], "bleu": 0.21378781163791613, "rouge_l": 0.4043560606060606}
{"id": 3238, "predictions": ["\u2581// \u2581 Context With Span \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581 span \u2581 set \u2581in \u2581the \u2581context ."], "references": ["\u2581// \u2581 Context With Span \u2581returns \u2581a \u2581new \u2581` context . Context ` \u2581that \u2581holds \u2581a \u2581reference \u2581to \u2581// \u2581` span ` ' s \u2581 SpanContext ."], "bleu": 0.2832324705581614, "rouge_l": 0.4637180373185902}
{"id": 2172, "predictions": ["\u2581// \u2581 Server CertPath \u2581returns \u2581the \u2581server \u2581 path \u2581to \u2581the \u2581server \u2581server"], "references": ["\u2581// \u2581 Server CertPath \u2581returns \u2581the \u2581 path \u2581for \u2581the \u2581remote ' s \u2581server \u2581certificate"], "bleu": 0.43142401352131887, "rouge_l": 0.7052023121387283}
{"id": 3402, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581source \u2581file ."], "references": ["\u2581// \u2581 Close \u2581removes \u2581resources \u2581associated \u2581with \u2581an \u2581initialized \u2581 Source , \u2581if \u2581any ."], "bleu": 0.13156100890487687, "rouge_l": 0.32972972972972975}
{"id": 3924, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 label \u2581for \u2581the \u2581given \u2581repository ."], "references": ["\u2581// \u2581 New \u2581constructs \u2581a \u2581new \u2581 label \u2581from \u2581components ."], "bleu": 0.3661926362999429, "rouge_l": 0.6768377253814147}
{"id": 2439, "predictions": ["\u2581// \u2581 Crit f \u2581logs \u2581a \u2581formatted \u2581message \u2581with \u2581the \u2581 format \u2581 specifier \u2581and \u2581exits ."], "references": ["\u2581// \u2581 Crit f \u2581logs \u2581at \u2581the \u2581 CRITICAL \u2581log \u2581level \u2581using \u2581a \u2581standard \u2581 printf \u2581 format \u2581string"], "bleu": 0.2977428610856937, "rouge_l": 0.4400360685302073}
{"id": 3459, "predictions": ["\u2581// \u2581Add Scalar \u2581adds \u2581a \u2581 Ip \u2581to \u2581the \u2581 src \u2581 map"], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581sum \u2581of \u2581an \u2581array \u2581and \u2581a \u2581scalar . \u2581// \u2581dst \u2581= \u2581 src \u2581+ \u2581value"], "bleu": 0.08079339148488096, "rouge_l": 0.22571692876965768}
{"id": 3417, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 OCI \u2581archive"], "references": ["\u2581// \u2581 Close \u2581removes \u2581resources \u2581associated \u2581with \u2581an \u2581initialized \u2581 Image Destination , \u2581if \u2581any \u2581// \u2581 Close \u2581deletes \u2581the \u2581temp \u2581directory \u2581of \u2581the \u2581 oci - archive \u2581image"], "bleu": 0.025712354529504645, "rouge_l": 0.24517684887459806}
{"id": 3480, "predictions": ["\u2581// \u2581 Arguments \u2581defines \u2581the \u2581request \u2581 name \u2581and \u2581 description \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581 Arguments \u2581adds \u2581the \u2581arguments \u2581to \u2581the \u2581args ."], "bleu": 0.17609282679116184, "rouge_l": 0.4979591836734694}
{"id": 3282, "predictions": ["\u2581// \u2581 New Optional Bool \u2581returns \u2581a \u2581bool \u2581value \u2581if \u2581the \u2581value \u2581is \u2581not \u2581present ."], "references": ["\u2581// \u2581 New Optional Bool \u2581converts \u2581the \u2581input \u2581bool \u2581into \u2581either \u2581Optional Bool True \u2581or \u2581// \u2581Optional Bool False . \u2581The \u2581function \u2581is \u2581meant \u2581to \u2581avoid \u2581 boilerplate \u2581 code"], "bleu": 0.13345445966421488, "rouge_l": 0.2885135135135135}
{"id": 3125, "predictions": ["\u2581// \u2581Make Watcher \u2581creates \u2581a \u2581new \u2581watcher \u2581that \u2581 watches \u2581the \u2581events \u2581to \u2581be \u2581sent \u2581// \u2581to \u2581the \u2581channel ."], "references": ["\u2581// \u2581Make Watcher \u2581returns \u2581a \u2581 Watcher \u2581that \u2581uses \u2581the \u2581given \u2581event \u2581channel \u2581and \u2581done \u2581// \u2581channel \u2581internally \u2581to \u2581 deliver \u2581events \u2581and \u2581signal \u2581closure , \u2581respectively ."], "bleu": 0.10232623826186778, "rouge_l": 0.3640583554376658}
{"id": 3677, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 ref ' s \u2581value ."], "references": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581uint 64 \u2581in \u2581the \u2581buffer"], "bleu": 0.41722614486115056, "rouge_l": 0.4803149606299213}
{"id": 2708, "predictions": ["\u2581// \u2581 Close And Report Trace s \u2581 close \u2581the \u2581 trace \u2581 trace ."], "references": ["\u2581// \u2581 Close And Report Trace s \u2581tries \u2581to \u2581 close \u2581the \u2581global \u2581tracer , \u2581which , \u2581in \u2581the \u2581case \u2581of \u2581// \u2581the \u2581 Ja e ger \u2581tracer , \u2581causes"], "bleu": 0.20485529000253205, "rouge_l": 0.4611683848797251}
{"id": 3968, "predictions": ["\u2581// \u2581Add Builtin \u2581adds \u2581a \u2581new \u2581 resolver \u2581to \u2581the \u2581 meta Resolver ."], "references": ["\u2581// \u2581Add Builtin \u2581registers \u2581a \u2581 builtin \u2581 kind \u2581with \u2581its \u2581 info ."], "bleu": 0.195647514979229, "rouge_l": 0.5}
{"id": 2721, "predictions": ["\u2581// \u2581 Read \u2581implements \u2581the \u2581 Conn \u2581interface ."], "references": ["\u2581// \u2581 Read \u2581implements \u2581the \u2581corresponding \u2581method \u2581of \u2581 net . Conn"], "bleu": 0.4099453631759974, "rouge_l": 0.6499238964992391}
{"id": 3675, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 16 - Ref \u2581value ."], "references": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581uint 16 \u2581in \u2581the \u2581buffer"], "bleu": 0.43361890903486755, "rouge_l": 0.5763779527559055}
{"id": 3676, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 32 - Ref \u2581value ."], "references": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581uint 32 \u2581in \u2581the \u2581buffer"], "bleu": 0.43361890903486755, "rouge_l": 0.5763779527559055}
{"id": 2722, "predictions": ["\u2581// \u2581 Write \u2581implements \u2581 net . Conn . Write"], "references": ["\u2581// \u2581 Write \u2581implements \u2581the \u2581corresponding \u2581method \u2581of \u2581 net . Conn"], "bleu": 0.48119129303084457, "rouge_l": 0.7155425219941348}
{"id": 3706, "predictions": ["\u2581// \u2581 WithHeaders \u2581adds \u2581a \u2581 headers \u2581to \u2581the \u2581 Context ."], "references": ["\u2581// \u2581 WithHeaders \u2581returns \u2581a \u2581 Context \u2581that \u2581can \u2581be \u2581used \u2581to \u2581make \u2581a \u2581 call \u2581with \u2581request \u2581 headers ."], "bleu": 0.13989213570013223, "rouge_l": 0.4621212121212121}
{"id": 3242, "predictions": ["\u2581// \u2581Set String \u2581sets \u2581the \u2581 data \u2581to \u2581the \u2581 4 \u2581tag ."], "references": ["\u2581// \u2581Set String \u2581records \u2581 IP \u2581 v 4 \u2581host \u2581address \u2581of \u2581the \u2581peer \u2581as \u2581a \u2581 . - separated \u2581tuple \u2581to \u2581the \u2581` span `. \u2581 E . g"], "bleu": 0.06653279756147502, "rouge_l": 0.3907473309608541}
{"id": 3397, "predictions": ["\u2581// \u2581parse \u2581the \u2581location Reference Reference ."], "references": ["\u2581// \u2581parse BIC Location Reference \u2581returns \u2581a \u2581repository \u2581for \u2581encoded \u2581 lr ."], "bleu": 0.11787460936700446, "rouge_l": 0.3794712286158632}
{"id": 3587, "predictions": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581 active \u2581 active \u2581 items"], "references": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 Peer List ."], "bleu": 0.3334477432809602, "rouge_l": 0.5065243179122182}
{"id": 3285, "predictions": ["\u2581// \u2581policy Identity Log Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 ref \u2581reference \u2581to \u2581the \u2581// \u2581 ref - value \u2581 name"], "references": ["\u2581// \u2581policy Identity Log Name \u2581returns \u2581a \u2581string \u2581 description \u2581of \u2581the \u2581image \u2581identity \u2581for \u2581policy \u2581purposes . \u2581// \u2581 ONLY \u2581use \u2581 this \u2581for \u2581log \u2581messages , \u2581not \u2581for"], "bleu": 0.22166339926679554, "rouge_l": 0.4422960725075529}
{"id": 3066, "predictions": ["\u2581// \u2581 New D Lock \u2581creates \u2581a \u2581new \u2581 D Lock ."], "references": ["\u2581// \u2581 New D Lock \u2581attempts \u2581to \u2581acquire \u2581a \u2581distributed \u2581lock \u2581that \u2581locks \u2581a \u2581given \u2581prefix \u2581// \u2581in \u2581the \u2581 data \u2581store ."], "bleu": 0.16840921209171716, "rouge_l": 0.43262411347517726}
{"id": 2409, "predictions": ["\u2581// \u2581 StoragePool Init \u2581implements \u2581storage . Storage ."], "references": ["\u2581// \u2581Initialize \u2581a \u2581full \u2581storage \u2581interface ."], "bleu": 0.16784459625186196, "rouge_l": 0.38364779874213834}
{"id": 3356, "predictions": ["\u2581// \u2581read Registry Conf \u2581reads \u2581 config \u2581from \u2581 config \u2581file"], "references": ["\u2581// \u2581Reads \u2581the \u2581global \u2581registry \u2581file \u2581from \u2581the \u2581filesystem . \u2581Returns \u2581a \u2581 byte \u2581array ."], "bleu": 0.09091421815660788, "rouge_l": 0.21504112808460632}
{"id": 3246, "predictions": ["\u2581// \u2581Check Baggage Values \u2581returns \u2581a \u2581 functional \u2581option \u2581for \u2581 validating \u2581if \u2581the \u2581// \u2581value \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check Baggage Values \u2581returns \u2581an \u2581option \u2581that \u2581sets \u2581whether \u2581to \u2581check \u2581for \u2581 propagation \u2581of \u2581 baggage \u2581values ."], "bleu": 0.27255078380311043, "rouge_l": 0.4594142259414226}
{"id": 2438, "predictions": ["\u2581// \u2581 Errorf \u2581logs \u2581a \u2581 debug \u2581error \u2581message"], "references": ["\u2581// \u2581 Errorf \u2581logs \u2581at \u2581the \u2581 ERROR \u2581log \u2581level \u2581using \u2581a \u2581standard \u2581 printf \u2581 format \u2581string"], "bleu": 0.1571901051328651, "rouge_l": 0.41924398625429554}
{"id": 3513, "predictions": ["\u2581// \u2581String In \u2581returns \u2581true \u2581if \u2581the \u2581string \u2581 contains \u2581a \u2581string ."], "references": ["\u2581// \u2581String In \u2581is \u2581a \u2581convenience \u2581function \u2581that \u2581returns \u2581// \u2581true \u2581if \u2581str \u2581matches \u2581any \u2581of \u2581the \u2581values ."], "bleu": 0.15141453247714312, "rouge_l": 0.483647175421209}
{"id": 2437, "predictions": ["\u2581// \u2581 Warnf \u2581logs \u2581a \u2581formatted \u2581formatted \u2581message ."], "references": ["\u2581// \u2581 Warnf \u2581logs \u2581at \u2581the \u2581 WARNING \u2581log \u2581level \u2581using \u2581a \u2581standard \u2581 printf \u2581 format \u2581string"], "bleu": 0.15124760523215705, "rouge_l": 0.34936998854524626}
{"id": 3262, "predictions": ["\u2581// \u2581 Log Fields \u2581 mocks \u2581the \u2581 span \u2581field \u2581 set"], "references": ["\u2581// \u2581 Log Fields \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.33260249505555045, "rouge_l": 0.5545454545454546}
{"id": 3179, "predictions": ["\u2581// \u2581 Duration \u2581returns \u2581the \u2581duration \u2581of \u2581the \u2581given \u2581duration ."], "references": ["\u2581// \u2581 Duration \u2581pretty \u2581prints \u2581a \u2581duration \u2581in \u2581a \u2581human \u2581readable \u2581way ."], "bleu": 0.19561803044642362, "rouge_l": 0.41049798115746977}
{"id": 2752, "predictions": ["\u2581// \u2581 GetBlock \u2581returns \u2581a \u2581 Block \u2581from \u2581a \u2581hash . Hash \u2581 type ."], "references": ["\u2581// \u2581 GetBlock \u2581encodes \u2581a \u2581hash \u2581into \u2581a \u2581readable \u2581 format \u2581in \u2581the \u2581 form \u2581of \u2581a \u2581 Block ."], "bleu": 0.18592201297681313, "rouge_l": 0.4456621004566209}
{"id": 4071, "predictions": ["\u2581// \u2581 Unbind Unit \u2581 - \u2581 Unbind s \u2581a \u2581unit \u2581with \u2581specified \u2581 name"], "references": ["\u2581// \u2581 Unbind Unit \u2581is \u2581a \u2581no - op \u2581for \u2581 OS B \u2581API \u2581implementations"], "bleu": 0.25748661016289676, "rouge_l": 0.4}
{"id": 3649, "predictions": ["\u2581// \u2581 New Read Buffer With Size \u2581returns \u2581a \u2581new \u2581 Read Buffer ."], "references": ["\u2581// \u2581 New Read Buffer With Size \u2581returns \u2581a \u2581 Read Buffer \u2581with \u2581a \u2581given \u2581capacity"], "bleu": 0.6277563357610636, "rouge_l": 0.7904967602591793}
{"id": 2436, "predictions": ["\u2581// \u2581 Debugf \u2581logs \u2581a \u2581 debug \u2581log ."], "references": ["\u2581// \u2581 Debugf \u2581logs \u2581at \u2581the \u2581 DEBUG \u2581log \u2581level \u2581using \u2581a \u2581standard \u2581 printf \u2581 format \u2581string"], "bleu": 0.162526128842793, "rouge_l": 0.41924398625429554}
{"id": 2902, "predictions": ["\u2581// \u2581 New NonEmpty \u2581returns \u2581a \u2581new \u2581 merkle \u2581root \u2581 path"], "references": ["\u2581// \u2581 New Unordered \u2581creates \u2581a \u2581new \u2581 unordered \u2581hash tree ."], "bleu": 0.2796842457966537, "rouge_l": 0.5}
{"id": 2435, "predictions": ["\u2581// \u2581 Infof \u2581logs \u2581a \u2581message \u2581with \u2581 INFO \u2581level ."], "references": ["\u2581// \u2581 Infof \u2581logs \u2581at \u2581the \u2581 INFO \u2581log \u2581level \u2581using \u2581a \u2581standard \u2581 printf \u2581 format \u2581string"], "bleu": 0.20547908120642636, "rouge_l": 0.46262188515709646}
{"id": 2552, "predictions": ["\u2581// \u2581 Forwarded Operation Response \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 Forwarded - Response \u2581// \u2581of \u2581the \u2581operation ."], "references": ["\u2581// \u2581 Forwarded Operation Response \u2581creates \u2581a \u2581response \u2581that \u2581forwards \u2581the \u2581metadata \u2581of \u2581// \u2581an \u2581operation \u2581created \u2581on \u2581another \u2581node ."], "bleu": 0.2461351840762152, "rouge_l": 0.5137825421133231}
{"id": 3363, "predictions": ["\u2581// \u2581signature Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581index"], "references": ["\u2581// \u2581signature Path \u2581returns \u2581a \u2581 path \u2581for \u2581a \u2581signature \u2581within \u2581a \u2581os tree \u2581using \u2581our \u2581convention s ."], "bleu": 0.20168439859003828, "rouge_l": 0.34560906515580736}
{"id": 3324, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 OCI \u2581archive \u2581 data ."], "references": ["\u2581// \u2581 Close \u2581removes \u2581resources \u2581associated \u2581with \u2581an \u2581initialized \u2581 ImageSource , \u2581if \u2581any . \u2581// \u2581 Close \u2581deletes \u2581the \u2581temporary \u2581directory \u2581at \u2581dst"], "bleu": 0.07733019124048345, "rouge_l": 0.2677787532923617}
{"id": 2366, "predictions": ["\u2581// \u2581 StoragePool Error ed \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581will \u2581 remove \u2581the \u2581// \u2581 set \u2581of \u2581 active \u2581 items \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 StoragePool Error ed \u2581sets \u2581the \u2581state \u2581of \u2581the \u2581given \u2581pool \u2581to \u2581\" Error ed \" ."], "bleu": 0.18693000799960027, "rouge_l": 0.4149659863945578}
{"id": 3627, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581channel ."], "references": ["\u2581// \u2581Register \u2581function \u2581adds \u2581JSON \u2581and \u2581Thrift \u2581 handlers \u2581to \u2581the \u2581server \u2581channel \u2581 ch"], "bleu": 0.0837738790831083, "rouge_l": 0.2559440559440559}
{"id": 2201, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581backup \u2581and \u2581deletes \u2581it ."], "references": ["\u2581// \u2581 Delete \u2581removes \u2581a \u2581 container \u2581backup"], "bleu": 0.24808415001701817, "rouge_l": 0.4535315985130111}
{"id": 2980, "predictions": ["\u2581// \u2581 New Google Client \u2581 - \u2581creates \u2581new \u2581Google \u2581client \u2581client ."], "references": ["\u2581// \u2581 New Google Client \u2581creates \u2581a \u2581 google \u2581client \u2581with \u2581the \u2581given \u2581bucket \u2581 name ."], "bleu": 0.2922452165863901, "rouge_l": 0.5208110992529349}
{"id": 3565, "predictions": ["\u2581// \u2581Default Metric Prefix \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581metric \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Default Metric Prefix \u2581is \u2581the \u2581default \u2581mapping \u2581for \u2581metrics \u2581to \u2581 statsd \u2581 keys . \u2581// \u2581It \u2581uses \u2581a \u2581\" t channel \" \u2581prefix \u2581for \u2581all \u2581stats ."], "bleu": 0.11496601025068999, "rouge_l": 0.3321987746766508}
{"id": 3022, "predictions": ["\u2581// \u2581commit \u2581returns \u2581the \u2581 v 3 Txn Response ."], "references": ["\u2581// \u2581commit \u2581always \u2581goes \u2581through \u2581when \u2581read \u2581committed"], "bleu": 0.16590387014219712, "rouge_l": 0.22676579925650556}
{"id": 3603, "predictions": ["\u2581// \u2581is Ephemeral HostPort \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 length \u2581is \u2581a \u2581valid \u2581 ephemeral \u2581host ."], "references": ["\u2581// \u2581is Ephemeral HostPort \u2581returns \u2581if \u2581 hostPort \u2581is \u2581the \u2581default \u2581 ephemeral \u2581 hostPort ."], "bleu": 0.31671615012203974, "rouge_l": 0.6539961013645226}
{"id": 2423, "predictions": ["\u2581// \u2581 Rename Project \u2581rename s \u2581a \u2581project ."], "references": ["\u2581// \u2581 Rename Project \u2581rename s \u2581an \u2581existing \u2581project \u2581resource \u2581in \u2581 RBAC ."], "bleu": 0.39036744537470053, "rouge_l": 0.6694101508916324}
{"id": 3153, "predictions": ["\u2581// \u2581 New Storage \u2581creates \u2581a \u2581new \u2581storage \u2581storage ."], "references": ["\u2581// \u2581 New Storage \u2581creates \u2581a \u2581new \u2581 Storage ."], "bleu": 0.6989307622784944, "rouge_l": 0.8}
{"id": 3175, "predictions": ["\u2581// \u2581 contains Empty \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581string \u2581is \u2581a \u2581 empty \u2581string ."], "references": ["\u2581// \u2581 contains Empty \u2581is \u2581a \u2581 helper \u2581function \u2581used \u2581for \u2581validation \u2581 ( part icul ar ly \u2581for \u2581// \u2581 validating \u2581that \u2581creds \u2581arguments \u2581aren ' t \u2581 empty"], "bleu": 0.1277623562789481, "rouge_l": 0.32972972972972975}
{"id": 2710, "predictions": ["\u2581// \u2581 For \u2581returns \u2581the \u2581 Constant BackOff \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 fill \u2581the \u2581constant ."], "references": ["\u2581// \u2581 For \u2581sets \u2581 b . Max ElapsedTime \u2581to \u2581' max Elapsed ' \u2581and \u2581returns \u2581 b"], "bleu": 0.1552207177944405, "rouge_l": 0.3333333333333333}
{"id": 3239, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 span ."], "references": ["\u2581// \u2581Set \u2581adds \u2581a \u2581uint 32 \u2581tag \u2581to \u2581the \u2581` span `"], "bleu": 0.15433335889254143, "rouge_l": 0.3577712609970674}
{"id": 3240, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 span ."], "references": ["\u2581// \u2581Set \u2581adds \u2581a \u2581uint 16 \u2581tag \u2581to \u2581the \u2581` span `"], "bleu": 0.15433335889254143, "rouge_l": 0.3577712609970674}
{"id": 3250, "predictions": ["\u2581// \u2581Use Probe \u2581returns \u2581a \u2581 functional \u2581option \u2581that \u2581sets \u2581the \u2581probe \u2581API \u2581check ."], "references": ["\u2581// \u2581Use Probe \u2581returns \u2581an \u2581option \u2581that \u2581specifies \u2581an \u2581API Check Probe \u2581implementation \u2581to \u2581use ."], "bleu": 0.2623114922934634, "rouge_l": 0.5131440588853837}
{"id": 3255, "predictions": ["\u2581// \u2581 Context \u2581implements \u2581 opentracing . Span \u2581interface"], "references": ["\u2581// \u2581 Context \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.32466791547509893, "rouge_l": 0.6666666666666666}
{"id": 3712, "predictions": ["\u2581// \u2581Set Retry Options \u2581sets \u2581the \u2581retry \u2581options \u2581for \u2581the \u2581 Context Builder ."], "references": ["\u2581// \u2581Set Retry Options \u2581sets \u2581 Retry Options \u2581in \u2581the \u2581context ."], "bleu": 0.35831291876413535, "rouge_l": 0.5460358056265985}
{"id": 4086, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 Quota \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581Get \u2581implements \u2581Get \u2581method \u2581from \u2581 Quota Service \u2581interface"], "bleu": 0.17194656088289215, "rouge_l": 0.3696969696969697}
{"id": 3656, "predictions": ["\u2581// \u2581 Read Uvarint \u2581returns \u2581the \u2581uint 64 \u2581value ."], "references": ["\u2581// \u2581 Read Uvarint \u2581reads \u2581an \u2581unsigned \u2581var int \u2581from \u2581the \u2581buffer ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 3752, "predictions": ["\u2581// \u2581 NewContext \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581given \u2581timeout ."], "references": ["\u2581// \u2581 NewContext \u2581returns \u2581a \u2581new \u2581root \u2581context \u2581used \u2581to \u2581make \u2581 T Channel \u2581requests ."], "bleu": 0.3588903580169846, "rouge_l": 0.5570776255707762}
{"id": 2365, "predictions": ["\u2581// \u2581 StoragePool Created \u2581is \u2581part \u2581of \u2581the \u2581 Cluster \u2581interface ."], "references": ["\u2581// \u2581 StoragePool Created \u2581sets \u2581the \u2581state \u2581of \u2581the \u2581given \u2581pool \u2581to \u2581\" Created \" ."], "bleu": 0.24641018923614913, "rouge_l": 0.48744292237442927}
{"id": 2849, "predictions": ["\u2581// \u2581 Missing \u2581the \u2581field \u2581 name \u2581and \u2581 name"], "references": ["\u2581// \u2581err Missing Field \u2581returns \u2581a \u2581logical \u2581response \u2581error \u2581that \u2581prints \u2581a \u2581consistent \u2581// \u2581error \u2581message \u2581for \u2581when \u2581a \u2581required \u2581field \u2581is \u2581missing ."], "bleu": 0.03696761459183028, "rouge_l": 0.1642728904847397}
{"id": 3983, "predictions": ["\u2581// \u2581record Write \u2581 write \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581record Write \u2581records \u2581that \u2581a \u2581directory \u2581has \u2581been \u2581modified \u2581and \u2581that \u2581its \u2581build \u2581// \u2581file \u2581should \u2581be \u2581updated \u2581the \u2581next \u2581time \u2581 gaze ll e \u2581runs ."], "bleu": 0.05199071993513971, "rouge_l": 0.2852689010132502}
{"id": 3247, "predictions": ["\u2581// \u2581Check Extract \u2581validates \u2581the \u2581 api ."], "references": ["\u2581// \u2581Check Extract \u2581returns \u2581an \u2581option \u2581that \u2581sets \u2581whether \u2581to \u2581check \u2581if \u2581extracting \u2581 contexts \u2581from \u2581 carrier s \u2581works ."], "bleu": 0.0650431619334818, "rouge_l": 0.3190376569037656}
{"id": 4009, "predictions": ["\u2581// \u2581Register Handler \u2581registers \u2581the \u2581 handlers \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Register Handler \u2581inserts \u2581a \u2581handler \u2581on \u2581a \u2581list \u2581of \u2581 handlers \u2581for \u2581version \u25811.0"], "bleu": 0.22045576450240884, "rouge_l": 0.423121387283237}
{"id": 3001, "predictions": ["\u2581// \u2581hash Token \u2581returns \u2581the \u2581 token \u2581for \u2581the \u2581 token ."], "references": ["\u2581// \u2581hash Token \u2581converts \u2581a \u2581 token \u2581to \u2581a \u2581 cryptographic \u2581hash . \u2581// \u2581We \u2581don ' t \u2581want \u2581to \u2581store \u2581tokens \u2581 verbatim \u2581in \u2581the \u2581database , \u2581as \u2581then"], "bleu": 0.056788720057911184, "rouge_l": 0.30942028985507253}
{"id": 3551, "predictions": ["\u2581// \u2581msg ID \u2581returns \u2581the \u2581 ID \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581msg ID \u2581returns \u2581a \u2581unique \u2581 ID \u2581of \u2581the \u2581passed \u2581 Message"], "bleu": 0.4427832757482162, "rouge_l": 0.6567967698519516}
{"id": 3248, "predictions": ["\u2581// \u2581Check Inject \u2581checks \u2581if \u2581the \u2581 cli \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check Inject \u2581returns \u2581an \u2581option \u2581that \u2581sets \u2581whether \u2581to \u2581check \u2581if \u2581inject ing \u2581 contexts \u2581works ."], "bleu": 0.12904435067542389, "rouge_l": 0.3965330444203684}
{"id": 3079, "predictions": ["\u2581// \u2581 Is Branch NotFound Err \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 Branch NotFound \u2581error"], "references": ["\u2581// \u2581 Is Branch NotFound Err \u2581returns \u2581true \u2581if \u2581' err ' \u2581is \u2581an \u2581error \u2581message \u2581about \u2581a \u2581// \u2581branch \u2581not \u2581being \u2581found"], "bleu": 0.3839988287954329, "rouge_l": 0.5355147645650439}
{"id": 3234, "predictions": ["\u2581// \u2581Register Injector \u2581registers \u2581a \u2581new \u2581 injector"], "references": ["\u2581// \u2581Register Injector \u2581registers \u2581 injector \u2581for \u2581given \u2581 format"], "bleu": 0.3997935253995127, "rouge_l": 0.6535714285714286}
{"id": 3544, "predictions": ["\u2581// \u2581 With Blacklist \u2581sets \u2581the \u2581 Blacklist \u2581 blacklist \u2581to \u2581the \u2581 blacklist ."], "references": ["\u2581// \u2581 With Blacklist \u2581provides \u2581an \u2581implementation \u2581of \u2581the \u2581 blacklist ; \u2581the \u2581default \u2581is \u2581a \u2581// \u2581 Map Blacklist"], "bleu": 0.23758717623824147, "rouge_l": 0.5013698630136987}
{"id": 3078, "predictions": ["\u2581// \u2581 Is Repo NotFound Err \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581repo \u2581 NotFound \u2581error ."], "references": ["\u2581// \u2581 Is Repo NotFound Err \u2581returns \u2581true \u2581if \u2581' err ' \u2581is \u2581an \u2581error \u2581message \u2581about \u2581a \u2581repo \u2581// \u2581not \u2581being \u2581found"], "bleu": 0.4081247260135874, "rouge_l": 0.5727699530516431}
{"id": 3478, "predictions": ["\u2581// \u2581 BackOff Delay \u2581returns \u2581the \u2581delay \u2581that \u2581 this \u2581is \u2581the \u2581maximum \u2581number \u2581of \u2581// \u2581 concurrent \u2581 concurrent \u2581use ."], "references": ["\u2581// \u2581 BackOff Delay \u2581is \u2581a \u2581 Delay Type \u2581which \u2581increase s \u2581delay \u2581between \u2581consecutive \u2581retries"], "bleu": 0.1733705613469748, "rouge_l": 0.32504440497335696}
{"id": 3241, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 span \u2581tag \u2581to \u2581the \u2581 span ."], "references": ["\u2581// \u2581Add \u2581adds \u2581a \u2581bool \u2581tag \u2581to \u2581the \u2581` span `"], "bleu": 0.21401603033752975, "rouge_l": 0.43821839080459773}
{"id": 3674, "predictions": ["\u2581// \u2581 Wrap \u2581 wraps \u2581the \u2581 byte \u2581 slice \u2581of \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Wrap \u2581initializes \u2581the \u2581buffer \u2581to \u2581wrap \u2581the \u2581given \u2581 byte \u2581 slice"], "bleu": 0.37030468338190614, "rouge_l": 0.5714285714285714}
{"id": 3450, "predictions": ["\u2581// \u2581 And \u2581 turn s \u2581the \u2581 src \u2581into \u2581dst ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581bit - wise \u2581 conjunction \u2581of \u2581two \u2581arrays ."], "bleu": 0.10175120467701641, "rouge_l": 0.29047619047619044}
{"id": 3454, "predictions": ["\u2581// \u2581 Or \u2581 wraps \u2581the \u2581given \u2581 src \u2581and \u2581 src \u2581to \u2581dst ."], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581bit - wise \u2581 disjunction \u2581of \u2581two \u2581arrays ."], "bleu": 0.10343603005129705, "rouge_l": 0.2666666666666666}
{"id": 3917, "predictions": ["\u2581// \u2581 Del Attr \u2581removes \u2581an \u2581attribute \u2581from \u2581the \u2581 Rule ."], "references": ["\u2581// \u2581 Del Attr \u2581removes \u2581the \u2581named \u2581attribute \u2581from \u2581the \u2581rule ."], "bleu": 0.49735673561245436, "rouge_l": 0.75}
{"id": 2639, "predictions": ["\u2581// \u2581 Is Offline \u2581returns \u2581whether \u2581the \u2581given \u2581 NodeInfo \u2581is \u2581 Offline"], "references": ["\u2581// \u2581 Is Offline \u2581returns \u2581true \u2581if \u2581the \u2581last \u2581successful \u2581heartbeat \u2581time \u2581of \u2581the \u2581node \u2581is \u2581// \u2581older \u2581than \u2581the \u2581given \u2581threshold ."], "bleu": 0.18778450050080986, "rouge_l": 0.3703382480485689}
{"id": 3482, "predictions": ["\u2581// \u2581 Body Bytes \u2581returns \u2581the \u2581request \u2581 body \u2581as \u2581a \u2581request ."], "references": ["\u2581// \u2581 Body Bytes \u2581sets \u2581the \u2581request \u2581 body \u2581to \u2581the \u2581given \u2581buffer ."], "bleu": 0.4233784290521556, "rouge_l": 0.6622436670687575}
{"id": 3750, "predictions": ["\u2581// \u2581go Type \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581 type ."], "references": ["\u2581// \u2581go Type \u2581returns \u2581the \u2581Go \u2581 type \u2581 name \u2581for \u2581the \u2581given \u2581thrift \u2581 type ."], "bleu": 0.3804561083573423, "rouge_l": 0.67983789260385}
{"id": 2868, "predictions": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581new \u2581 Reader \u2581that \u2581 wraps \u2581the \u2581given \u2581 length ."], "references": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581 Reader \u2581which \u2581generates \u2581strings \u2581of \u2581characters ."], "bleu": 0.32635983266098934, "rouge_l": 0.5622119815668203}
{"id": 3671, "predictions": ["\u2581// \u2581 Defer Bytes \u2581returns \u2581the \u2581bytes \u2581of \u2581the \u2581buffer \u2581in \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Defer Bytes \u2581 reserve s \u2581space \u2581in \u2581the \u2581buffer \u2581for \u2581a \u2581fixed \u2581sequence \u2581of \u2581bytes , \u2581and \u2581// \u2581returns \u2581a \u2581reference \u2581that \u2581can \u2581be \u2581used \u2581to \u2581update \u2581those"], "bleu": 0.1136281554171264, "rouge_l": 0.2986013986013986}
{"id": 3461, "predictions": ["\u2581// \u2581 Subtract \u2581 - \u2581 subtract s \u2581image \u2581from \u2581the \u2581given \u2581 src"], "references": ["\u2581// \u2581Calculates \u2581the \u2581per - element \u2581difference \u2581between \u2581two \u2581arrays . \u2581// \u2581dst \u2581= \u2581 src 1 \u2581 - \u2581 src 2"], "bleu": 0.11872460814481242, "rouge_l": 0.32049036777583184}
{"id": 2712, "predictions": ["\u2581// \u2581 Format \u2581implements \u2581logrus . Formatter \u2581interface ."], "references": ["\u2581// \u2581 Format \u2581proxies \u2581the \u2581closure \u2581in \u2581order \u2581to \u2581satisfy \u2581` logrus . Formatter ` ' s \u2581// \u2581interface ."], "bleu": 0.104558777266414, "rouge_l": 0.4518518518518519}
{"id": 3755, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581random \u2581generator ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581rand . Rand \u2581that \u2581is \u2581thread safe ."], "bleu": 0.34449658314088427, "rouge_l": 0.5281385281385281}
{"id": 3278, "predictions": ["\u2581// \u2581read Registry Conf \u2581reads \u2581the \u2581 config \u2581file \u2581from \u2581the \u2581system"], "references": ["\u2581// \u2581Reads \u2581the \u2581global \u2581registry \u2581file \u2581from \u2581the \u2581filesystem . \u2581Returns \u2581// \u2581a \u2581 byte \u2581array"], "bleu": 0.15937425748101036, "rouge_l": 0.3481735159817351}
{"id": 3714, "predictions": ["\u2581// \u2581Set Parent Context \u2581sets \u2581the \u2581parent \u2581context \u2581of \u2581the \u2581context ."], "references": ["\u2581// \u2581Set Parent Context \u2581sets \u2581the \u2581parent \u2581for \u2581the \u2581 Context ."], "bleu": 0.591460168684858, "rouge_l": 0.75}
{"id": 3678, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 ref ' s \u2581value ."], "references": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581bytes \u2581in \u2581the \u2581buffer"], "bleu": 0.41722614486115056, "rouge_l": 0.5091819699499166}
{"id": 4019, "predictions": ["\u2581// \u2581 Drop Database \u2581removes \u2581the \u2581database \u2581from \u2581database ."], "references": ["\u2581// \u2581 Drop Database \u2581drop \u2581database \u2581of \u2581any \u2581given \u2581 name"], "bleu": 0.33226139141332744, "rouge_l": 0.47213622291021673}
{"id": 3080, "predictions": ["\u2581// \u2581 Is FileContents Err \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 mounted \u2581error ."], "references": ["\u2581// \u2581 Is FileNotFound Err \u2581returns \u2581true \u2581if \u2581' err ' \u2581is \u2581an \u2581error \u2581message \u2581about \u2581a \u2581 P FS \u2581// \u2581file \u2581not \u2581being \u2581found"], "bleu": 0.18765261572384642, "rouge_l": 0.4692307692307693}
{"id": 3812, "predictions": ["\u2581// \u2581 remove Peer \u2581removes \u2581the \u2581peer \u2581from \u2581the \u2581heap ."], "references": ["\u2581// \u2581 remove Peer \u2581 remove \u2581peer \u2581at \u2581specific \u2581index ."], "bleu": 0.3448444257953326, "rouge_l": 0.5454545454545454}
{"id": 2084, "predictions": ["\u2581// \u2581Default Daemon \u2581returns \u2581the \u2581default \u2581daemon \u2581used \u2581to \u2581 set \u2581the \u2581default \u2581daemon"], "references": ["\u2581// \u2581Default Daemon \u2581returns \u2581a \u2581new , \u2581un - initialized \u2581 Daemon \u2581object \u2581with \u2581default \u2581values ."], "bleu": 0.21598731412474637, "rouge_l": 0.3804573804573805}
{"id": 2780, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581 Merge Cache \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581a \u2581hash tree \u2581from \u2581the \u2581cache ."], "bleu": 0.38677062763523445, "rouge_l": 0.6135057471264368}
{"id": 3679, "predictions": ["\u2581// \u2581 Update String \u2581replaces \u2581the \u2581 ref - value \u2581pair \u2581of \u2581the \u2581 ref ."], "references": ["\u2581// \u2581 Update String \u2581updates \u2581the \u2581bytes \u2581in \u2581the \u2581buffer \u2581from \u2581a \u2581string"], "bleu": 0.23287896954139942, "rouge_l": 0.42165898617511516}
{"id": 2164, "predictions": ["\u2581// \u2581 Metadata As Struct \u2581converts \u2581a \u2581JSON \u2581struct \u2581into \u2581a \u2581struct ."], "references": ["\u2581// \u2581 Metadata As Struct \u2581parses \u2581the \u2581 Response \u2581metadata \u2581into \u2581a \u2581provided \u2581struct"], "bleu": 0.3752538475396915, "rouge_l": 0.5886610373944512}
{"id": 2401, "predictions": ["\u2581// \u2581 entity Post \u2581returns \u2581a \u2581 slice \u2581of \u2581 entity \u2581 content \u2581 name ."], "references": ["\u2581// \u2581Return \u2581the \u2581 name \u2581of \u2581the \u2581 Post \u2581struct \u2581for \u2581the \u2581given \u2581 entity ."], "bleu": 0.1513851459876605, "rouge_l": 0.375}
{"id": 3719, "predictions": ["\u2581// \u2581 New Arg Writer \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Arg Write Helper"], "references": ["\u2581// \u2581 New Arg Writer \u2581 wraps \u2581the \u2581result \u2581of \u2581calling \u2581 Arg X Writer \u2581to \u2581provider \u2581a \u2581simple r \u2581// \u2581interface \u2581for \u2581writing \u2581arguments ."], "bleu": 0.1633972480279808, "rouge_l": 0.3794712286158632}
{"id": 3864, "predictions": ["\u2581// \u2581 getLast Activity Time \u2581returns \u2581the \u2581time \u2581that \u2581the \u2581last \u2581activity \u2581was \u2581 tracked ."], "references": ["\u2581// \u2581 getLast Activity Time \u2581returns \u2581the \u2581timestamp \u2581of \u2581the \u2581last \u2581frame \u2581read \u2581or \u2581written , \u2581// \u2581 excluding \u2581 ping s . \u2581If \u2581no \u2581frames \u2581were \u2581 transmitted \u2581yet"], "bleu": 0.19753470156058942, "rouge_l": 0.45337837837837835}
{"id": 3902, "predictions": ["\u2581// \u2581 Format \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581file ."], "references": ["\u2581// \u2581 Format \u2581formats \u2581the \u2581build \u2581file \u2581in \u2581a \u2581 form \u2581that \u2581can \u2581be \u2581written \u2581to \u2581disk . \u2581// \u2581This \u2581method \u2581calls \u2581 Sync \u2581internally ."], "bleu": 0.06447427260206484, "rouge_l": 0.3022295623451693}
{"id": 3442, "predictions": ["\u2581// \u2581 TL \u2581returns \u2581the \u2581 Rect \u2581of \u2581the \u2581rectangle ."], "references": ["\u2581// \u2581Returns \u2581the \u2581 Top - Left \u2581 Point \u2581of \u2581the \u2581rectangle"], "bleu": 0.24737714147554007, "rouge_l": 0.5176803394625177}
{"id": 2744, "predictions": ["\u2581// \u2581Set \u2581implements \u2581the \u2581 json . Value \u2581interface \u2581for \u2581 Prepend String Arg ."], "references": ["\u2581// \u2581Set \u2581adds \u2581a \u2581string \u2581to \u2581 r"], "bleu": 0.11633270842295028, "rouge_l": 0.2760180995475113}
{"id": 3265, "predictions": ["\u2581// \u2581 LogEvent \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581 mocks \u2581the \u2581 span"], "references": ["\u2581// \u2581 LogEvent \u2581belongs \u2581to \u2581the \u2581 Span \u2581interface"], "bleu": 0.195647514979229, "rouge_l": 0.45252225519287836}
{"id": 3907, "predictions": ["\u2581// \u2581 Has \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 key \u2581is \u2581present \u2581in \u2581the \u2581 Load \u2581 table ."], "references": ["\u2581// \u2581 Has \u2581returns \u2581true \u2581if \u2581 sym \u2581is \u2581loaded \u2581by \u2581 this \u2581statement ."], "bleu": 0.3264128346656048, "rouge_l": 0.6009852216748769}
{"id": 3228, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 span ' s \u2581value ."], "references": ["\u2581// \u2581Set \u2581applies \u2581the \u2581tag \u2581to \u2581an \u2581existing \u2581 Span ."], "bleu": 0.17851905035930718, "rouge_l": 0.47213622291021673}
{"id": 2995, "predictions": ["\u2581// \u2581 Is Retryable \u2581returns \u2581true \u2581if \u2581the \u2581client \u2581is \u2581a \u2581 retryable \u2581error ."], "references": ["\u2581// \u2581 Is Retryable \u2581determines \u2581if \u2581an \u2581operation \u2581should \u2581be \u2581re tried \u2581given \u2581an \u2581error"], "bleu": 0.2490328638846773, "rouge_l": 0.4}
{"id": 2996, "predictions": ["\u2581// \u2581 Run Stdin \u2581runs \u2581the \u2581command \u2581with \u2581the \u2581given \u2581arguments \u2581and \u2581returns \u2581the \u2581// \u2581 IO IO \u2581 IO \u2581 IO \u2581 IO \u2581 IO \u2581 IO \u2581 data"], "references": ["\u2581// \u2581 Run Stdin \u2581runs \u2581the \u2581command \u2581with \u2581the \u2581given \u2581stdin \u2581and \u2581arguments ."], "bleu": 0.333663896953101, "rouge_l": 0.5350877192982456}
{"id": 3481, "predictions": ["\u2581// \u2581 Body String \u2581returns \u2581the \u2581request \u2581 body \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581 Body String \u2581sets \u2581the \u2581request \u2581 body \u2581to \u2581the \u2581given \u2581string ."], "bleu": 0.4483063445554949, "rouge_l": 0.7358262967430639}
{"id": 3990, "predictions": ["\u2581// \u2581Verify Form KV \u2581returns \u2581a \u2581 HandlerFunc \u2581that \u2581matches \u2581the \u2581 key \u2581 key ."], "references": ["\u2581// Verify Form KV \u2581returns \u2581a \u2581handler \u2581that \u2581verifies \u2581a \u2581request \u2581 contains \u2581a \u2581 form \u2581 key \u2581with \u2581the \u2581specified \u2581values . \u2581// \u2581// It \u2581is \u2581a \u2581convenience \u2581wrapper"], "bleu": 0.12541709638418416, "rouge_l": 0.41216216216216217}
{"id": 3827, "predictions": ["\u2581// \u2581 Declaration \u2581returns \u2581a \u2581declaration \u2581for \u2581the \u2581field ."], "references": ["\u2581// \u2581 Declaration \u2581returns \u2581the \u2581declaration \u2581for \u2581 this \u2581field ."], "bleu": 0.4177965809560845, "rouge_l": 0.7554179566563467}
{"id": 2882, "predictions": ["\u2581// \u2581 NewWriter \u2581returns \u2581a \u2581new \u2581 Writer \u2581that \u2581writes \u2581to \u2581the \u2581given \u2581io . Writer ."], "references": ["\u2581// \u2581 NewWriter \u2581creates \u2581a \u2581new \u2581hash tree \u2581writer ."], "bleu": 0.1661742929957894, "rouge_l": 0.4662420382165604}
{"id": 3811, "predictions": ["\u2581// \u2581update Peer \u2581sets \u2581the \u2581peer \u2581 set \u2581for \u2581the \u2581heap ."], "references": ["\u2581// \u2581update Peer \u2581updates \u2581the \u2581score \u2581for \u2581the \u2581given \u2581peer ."], "bleu": 0.2545093860020286, "rouge_l": 0.6135057471264368}
{"id": 2905, "predictions": ["\u2581// \u2581 New APIServer \u2581returns \u2581a \u2581new \u2581 APIServer \u2581with \u2581the \u2581given \u2581version"], "references": ["\u2581// \u2581 New APIServer \u2581creates \u2581a \u2581new \u2581 APIServer \u2581for \u2581the \u2581given \u2581 Version ."], "bleu": 0.41511422636679984, "rouge_l": 0.7052023121387283}
{"id": 2556, "predictions": ["\u2581// \u2581 Update Progress \u2581updates \u2581the \u2581progress \u2581progress \u2581of \u2581the \u2581progress \u2581 bar"], "references": ["\u2581// \u2581 Update Progress \u2581is \u2581a \u2581 helper \u2581to \u2581update \u2581the \u2581 status \u2581using \u2581an \u2581io pg res s \u2581instance"], "bleu": 0.1687777200044908, "rouge_l": 0.35023923444976074}
{"id": 3136, "predictions": ["\u2581// \u2581 Pipeline Repo \u2581creates \u2581a \u2581new \u2581pipeline \u2581 name ."], "references": ["\u2581// \u2581 Pipeline Repo \u2581creates \u2581a \u2581 pfs \u2581repo \u2581for \u2581a \u2581given \u2581pipeline ."], "bleu": 0.4291876848033846, "rouge_l": 0.6264441591784339}
{"id": 3227, "predictions": ["\u2581// \u2581String \u2581implements \u2581the \u2581 Field \u2581interface ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 key \u2581and \u2581value ."], "bleu": 0.14867523320266893, "rouge_l": 0.45658682634730546}
{"id": 3389, "predictions": ["\u2581// \u2581 Gzip Gzip \u2581reads \u2581the \u2581 contents \u2581of \u2581the \u2581 gzipped \u2581reader \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581 Gzip \u2581stream ."], "references": ["\u2581// \u2581 Gzip Decompressor \u2581is \u2581a \u2581 Decompressor Func \u2581for \u2581the \u2581gzip \u2581compression \u2581algorithm ."], "bleu": 0.10401577613691954, "rouge_l": 0.3141630901287554}
{"id": 2777, "predictions": ["\u2581// \u2581Add \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581 this \u2581 polynomial ."], "references": ["\u2581// \u2581Add \u2581adds \u2581an \u2581 ancestry \u2581reference \u2581to \u2581the \u2581given \u2581string ."], "bleu": 0.16261701715194898, "rouge_l": 0.3333333333333333}
{"id": 2934, "predictions": ["\u2581// \u2581 Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 path ."], "references": ["\u2581// \u2581 Path \u2581returns \u2581the \u2581full \u2581 path \u2581of \u2581a \u2581 key \u2581in \u2581the \u2581etcd \u2581namespace"], "bleu": 0.3242940465804018, "rouge_l": 0.5570776255707762}
{"id": 3711, "predictions": ["\u2581// \u2581Set ConnectTimeout \u2581sets \u2581the \u2581 ConnectTimeout \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581Set ConnectTimeout \u2581sets \u2581the \u2581 Connection Timeout \u2581for \u2581 this \u2581context . \u2581// \u2581The \u2581context \u2581timeout \u2581applies \u2581to \u2581the \u2581whole \u2581 call , \u2581while \u2581the \u2581 connect \u2581// \u2581timeout"], "bleu": 0.10851674651568557, "rouge_l": 0.30942028985507253}
{"id": 2138, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581update \u2581to \u2581the \u2581schema ."], "references": ["\u2581// \u2581Add \u2581a \u2581new \u2581update \u2581to \u2581the \u2581schema . \u2581It \u2581will \u2581be \u2581appended \u2581at \u2581the \u2581end \u2581of \u2581the \u2581// \u2581existing \u2581series ."], "bleu": 0.22346943797538496, "rouge_l": 0.5268714011516316}
{"id": 3151, "predictions": ["\u2581// \u2581 Code \u2581returns \u2581the \u2581 code \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Code \u2581returns \u2581the \u2581HTTP \u2581error \u2581 code \u2581associated \u2581with \u2581' h '"], "bleu": 0.3679134727458049, "rouge_l": 0.5481386392811297}
{"id": 3235, "predictions": ["\u2581// \u2581Register Extractor \u2581allows \u2581you \u2581to \u2581 set \u2581the \u2581 Extractor \u2581for \u2581a \u2581custom \u2581 format"], "references": ["\u2581// \u2581Register Extractor \u2581registers \u2581extractor \u2581for \u2581given \u2581 format"], "bleu": 0.17694975149532557, "rouge_l": 0.505524861878453}
{"id": 3483, "predictions": ["\u2581// \u2581 Body \u2581sets \u2581the \u2581request \u2581 body ."], "references": ["\u2581// \u2581 Body \u2581sets \u2581the \u2581request \u2581 body \u2581to \u2581the \u2581given \u2581reader ."], "bleu": 0.5793718836606455, "rouge_l": 0.7922077922077922}
{"id": 3912, "predictions": ["\u2581// \u2581Set Kind \u2581sets \u2581the \u2581 Kind \u2581field \u2581of \u2581the \u2581rule ."], "references": ["\u2581// \u2581Set Kind \u2581changes \u2581the \u2581 kind \u2581of \u2581rule \u2581 this \u2581is ."], "bleu": 0.23415993906190488, "rouge_l": 0.6354166666666667}
{"id": 2718, "predictions": ["\u2581// \u2581 New ReadWriter \u2581returns \u2581a \u2581new \u2581 ReadWriter ."], "references": ["\u2581// \u2581 New ReadWriter \u2581returns \u2581a \u2581new \u2581 ReadWriter \u2581with \u2581rw \u2581as \u2581both \u2581its \u2581source \u2581and \u2581its \u2581sink ."], "bleu": 0.371885697769524, "rouge_l": 0.6531049250535332}
{"id": 3477, "predictions": ["\u2581// \u2581 Delay \u2581sets \u2581the \u2581delay \u2581to \u2581be \u2581executed \u2581before \u2581the \u2581 Config \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Delay \u2581 set \u2581delay \u2581between \u2581retry \u2581// \u2581default \u2581is \u2581100 ms"], "bleu": 0.17181529671327242, "rouge_l": 0.34154535274356107}
{"id": 2148, "predictions": ["\u2581// \u2581Register Stmt \u2581adds \u2581a \u2581statement \u2581to \u2581the \u2581 SQL \u2581statement ."], "references": ["\u2581// \u2581Register Stmt \u2581register \u2581a \u2581 SQL \u2581statement . \u2581// \u2581// \u2581 Registered \u2581statements \u2581will \u2581be \u2581prepared \u2581up front \u2581and \u2581re - used , \u2581to \u2581speed \u2581up \u2581// \u2581execution ."], "bleu": 0.09125134314003602, "rouge_l": 0.3536231884057971}
{"id": 2754, "predictions": ["\u2581// \u2581 split \u2581 - \u2581 split \u2581 s \u2581into \u2581 s ."], "references": ["\u2581// \u2581 split \u2581is \u2581like \u2581 path . Split , \u2581but \u2581uses \u2581 this \u2581library ' s \u2581defaults \u2581for \u2581canonical \u2581// \u2581paths"], "bleu": 0.10579948872923432, "rouge_l": 0.3276633840644584}
{"id": 2129, "predictions": ["\u2581// \u2581 Schema \u2581returns \u2581schema \u2581schema \u2581schema ."], "references": ["\u2581// \u2581 Schema \u2581for \u2581the \u2581local \u2581database ."], "bleu": 0.3155984539112945, "rouge_l": 0.5}
{"id": 3708, "predictions": ["\u2581// \u2581 SetTimeout \u2581sets \u2581the \u2581timeout \u2581for \u2581the \u2581query ."], "references": ["\u2581// \u2581 SetTimeout \u2581sets \u2581the \u2581timeout \u2581for \u2581the \u2581 Context ."], "bleu": 0.7302542206757164, "rouge_l": 0.8498452012383902}
{"id": 3673, "predictions": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581buffer \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581buffer \u2581to \u2581an \u2581 empty \u2581state , \u2581ready \u2581for \u2581writing"], "bleu": 0.4116221948604353, "rouge_l": 0.540506329113924}
{"id": 3064, "predictions": ["\u2581// \u2581 SetMax Concurrent Streams \u2581sets \u2581the \u2581maximum \u2581 size \u2581of \u2581 this \u2581 APIClient \u2581to \u2581 this \u2581// \u2581 APIClient \u2581to \u2581 connect \u2581to \u2581the \u2581 APIClient ."], "references": ["\u2581// \u2581 SetMax Concurrent Streams \u2581Sets \u2581the \u2581maximum \u2581number \u2581of \u2581 concurrent \u2581streams \u2581the \u2581// \u2581client \u2581can \u2581have . \u2581It \u2581is \u2581not \u2581safe \u2581to \u2581 call \u2581 this \u2581operations \u2581while"], "bleu": 0.22206608465468944, "rouge_l": 0.4393351800554017}
{"id": 3920, "predictions": ["\u2581// \u2581Set Private Attr \u2581sets \u2581the \u2581value \u2581of \u2581a \u2581 key \u2581in \u2581the \u2581rule"], "references": ["\u2581// \u2581Set Private Attr \u2581associate s \u2581a \u2581value \u2581with \u2581a \u2581 key . \u2581 Un like \u2581Set Attr , \u2581 this \u2581value \u2581// \u2581is \u2581not \u2581converted \u2581to \u2581a \u2581build \u2581syntax"], "bleu": 0.10806832313179944, "rouge_l": 0.3412587412587413}
{"id": 3633, "predictions": ["\u2581// \u2581 New Logger \u2581creates \u2581a \u2581new \u2581 Logger \u2581that \u2581writes \u2581the \u2581given \u2581 data \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 New Logger \u2581returns \u2581a \u2581 Logger \u2581that \u2581writes \u2581to \u2581the \u2581given \u2581writer ."], "bleu": 0.46298522813477694, "rouge_l": 0.8211538461538462}
{"id": 3549, "predictions": ["\u2581// \u2581broadcast Message \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581message \u2581is \u2581 empty ."], "references": ["\u2581// \u2581seen Message \u2581returns \u2581whether \u2581we \u2581already \u2581 saw \u2581 this \u2581message \u2581before"], "bleu": 0.14949751774990683, "rouge_l": 0.30769230769230765}
{"id": 3818, "predictions": ["\u2581// \u2581 WithTimeout \u2581sets \u2581the \u2581timeout \u2581for \u2581the \u2581 container ."], "references": ["\u2581// \u2581 WithTimeout \u2581sets \u2581the \u2581timeout \u2581to \u2581use \u2581for \u2581each \u2581 call ."], "bleu": 0.47003323636722666, "rouge_l": 0.7388963660834454}
{"id": 2891, "predictions": ["\u2581// \u2581 Is Glob \u2581returns \u2581true \u2581if \u2581the \u2581pattern \u2581matches \u2581the \u2581pattern ."], "references": ["\u2581// \u2581 Is Glob \u2581checks \u2581if \u2581the \u2581pattern \u2581 contains \u2581a \u2581glob \u2581character"], "bleu": 0.35556702356686953, "rouge_l": 0.5384615384615383}
{"id": 2543, "predictions": ["\u2581// \u2581 ask Question \u2581to \u2581 ask \u2581the \u2581 question \u2581to \u2581the \u2581 question"], "references": ["\u2581// \u2581 Ask \u2581a \u2581 question \u2581on \u2581the \u2581output \u2581stream \u2581and \u2581read \u2581the \u2581answer \u2581from \u2581the \u2581input \u2581stream"], "bleu": 0.11957343700241443, "rouge_l": 0.3056112224448898}
{"id": 3383, "predictions": ["\u2581// \u2581 Commit \u2581commits \u2581the \u2581destination \u2581to \u2581the \u2581file ."], "references": ["\u2581// \u2581 Commit \u2581finishes \u2581writing \u2581 data \u2581to \u2581the \u2581underlying \u2581io . Writer . \u2581// \u2581It \u2581is \u2581the \u2581caller ' s \u2581responsibility \u2581to \u2581 close \u2581it , \u2581if \u2581necessary ."], "bleu": 0.040576514093271565, "rouge_l": 0.27518796992481204}
{"id": 2414, "predictions": ["\u2581// \u2581 Translate Handler \u2581 wraps \u2581a \u2581 debug \u2581log . Handler \u2581with \u2581a \u2581 format ."], "references": ["\u2581// \u2581 getSystem Handler \u2581on \u2581Windows \u2581does \u2581nothing ."], "bleu": 0.10802314890908067, "rouge_l": 0.3257676902536716}
{"id": 2674, "predictions": ["\u2581// \u2581 Is Terminal \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 fd \u2581is \u2581a \u2581terminal ."], "references": ["\u2581// \u2581 Is Terminal \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581file \u2581descriptor \u2581is \u2581a \u2581terminal ."], "bleu": 0.7447819789879647, "rouge_l": 0.8666666666666667}
{"id": 4255, "predictions": ["\u2581// \u2581Apply \u2581applies \u2581the \u2581given \u2581 Resource \u2581to \u2581the \u2581 firewall"], "references": ["\u2581// \u2581Apply \u2581will \u2581compare \u2581the \u2581actual \u2581and \u2581expected \u2581 firewall \u2581 config , \u2581if \u2581needed \u2581it \u2581will \u2581create \u2581the \u2581 firewall ."], "bleu": 0.09966585606803818, "rouge_l": 0.40018744142455487}
{"id": 4979, "predictions": ["\u2581// \u2581HTTP Handler \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sends \u2581a \u2581stream \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581HTTP Handler \u2581serves \u2581new \u2581connections \u2581with \u2581events \u2581for \u2581a \u2581given \u2581stream \u2581..."], "bleu": 0.1487964117124549, "rouge_l": 0.34154535274356107}
{"id": 4335, "predictions": ["\u2581// \u2581Save Config Data \u2581writes \u2581configuration \u2581to \u2581 config ."], "references": ["\u2581// \u2581Save Config Data \u2581writes \u2581configuration \u2581to \u2581a \u2581writer"], "bleu": 0.6786502681586726, "rouge_l": 0.7439024390243903}
{"id": 6109, "predictions": ["\u2581// \u2581This \u2581function \u2581is \u2581responsible \u2581for \u2581 validating \u2581the \u2581API \u2581client"], "references": ["\u2581// \u2581 Command \u2581line \u2581client \u2581entry \u2581point ."], "bleu": 0.1354599427337814, "rouge_l": 0.32504440497335696}
{"id": 6048, "predictions": ["\u2581// \u2581 Call \u2581 - \u2581sends \u2581a \u2581request \u2581to \u2581a \u2581 POST \u2581request ."], "references": ["\u2581// \u2581 Call \u2581 SOAP \u2581client \u2581API \u2581 call"], "bleu": 0.25748661016289676, "rouge_l": 0.45252225519287836}
{"id": 5557, "predictions": ["\u2581// \u2581step 1 b \u2581prints \u2581whether \u2581the \u2581 set \u2581of \u2581values \u2581are \u2581 set \u2581in \u2581the \u2581 set \u2581of \u2581// \u2581 data ."], "references": ["\u2581// \u2581 Step \u2581 1 b \u2581is \u2581the \u2581normalization \u2581of \u2581various \u2581\" ly \" \u2581and \u2581\" ed \" \u2581 suff i c ies . \u2581//"], "bleu": 0.09777289713934957, "rouge_l": 0.2894915254237288}
{"id": 6000, "predictions": ["\u2581// \u2581 Frames To Frame Range \u2581returns \u2581the \u2581 slice \u2581of \u2581frames \u2581in \u2581the \u2581 slice \u2581of \u2581 data \u2581in \u2581 slice ."], "references": ["\u2581// \u2581 Frames To Frame Range \u2581takes \u2581a \u2581 slice \u2581of \u2581frame \u2581numbers \u2581and \u2581// \u2581compress es \u2581them \u2581into \u2581a \u2581frame \u2581range \u2581string . \u2581// \u2581// \u2581If \u2581sorted \u2581== \u2581true"], "bleu": 0.22251107591531366, "rouge_l": 0.3685800604229607}
{"id": 5924, "predictions": ["\u2581// \u2581 Endpoint \u2581returns \u2581a \u2581handler \u2581that \u2581will \u2581 add \u2581the \u2581 group \u2581to \u2581the \u2581 router ."], "references": ["\u2581// \u2581 Endpoint \u2581will \u2581return \u2581an \u2581http \u2581handler \u2581that \u2581serves \u2581requests \u2581for \u2581 this \u2581 group . \u2581The \u2581// \u2581specified \u2581prefix \u2581is \u2581used \u2581to \u2581parse \u2581the \u2581requests \u2581and \u2581generate \u2581urls"], "bleu": 0.09926757918048, "rouge_l": 0.3986928104575163}
{"id": 5622, "predictions": ["\u2581// \u2581Try Lock \u2581acquire s \u2581a \u2581lock . \u2581If \u2581the \u2581 owner \u2581is \u2581not \u2581already \u2581 set , \u2581it \u2581will \u2581// \u2581be \u2581called \u2581with \u2581the \u2581 owner \u2581of \u2581the \u2581"], "references": ["\u2581// \u2581Try Lock \u2581tries \u2581to \u2581own \u2581the \u2581lock . \u2581// \u2581It \u2581Returns \u2581nil , \u2581if \u2581successful \u2581and \u2581and \u2581error \u2581describing \u2581the \u2581reason , \u2581it \u2581didn ' t \u2581work \u2581out ."], "bleu": 0.10985970458010323, "rouge_l": 0.2666666666666666}
{"id": 4271, "predictions": ["\u2581// \u2581 New Provisioner Cluster \u2581creates \u2581a \u2581new \u2581cluster \u2581 config \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581// \u2581 config ."], "references": ["\u2581// \u2581 New Ubuntu Cluster \u2581creates \u2581a \u2581simple \u2581 Ubuntu \u2581 Openstack \u2581cluster ."], "bleu": 0.17509131039045966, "rouge_l": 0.5335276967930028}
{"id": 4156, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581the \u2581middleware \u2581function \u2581to \u2581the \u2581 Cors \u2581middleware ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Cors Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.30130404892785684, "rouge_l": 0.5551763367463025}
{"id": 5357, "predictions": ["\u2581// \u2581 NewReader Encrypted \u2581returns \u2581a \u2581new \u2581 Reader \u2581with \u2581the \u2581given \u2581 size ."], "references": ["\u2581// \u2581 NewReader Encrypted \u2581open s \u2581a \u2581file \u2581for \u2581reading , \u2581using \u2581the \u2581 data \u2581in \u2581 f \u2581with \u2581the \u2581given \u2581total \u2581 size . \u2581// \u2581If \u2581the \u2581PDF \u2581is"], "bleu": 0.14450843425723595, "rouge_l": 0.5030927835051546}
{"id": 4234, "predictions": ["\u2581// \u2581 New Provisioner Cluster \u2581creates \u2581a \u2581new \u2581cluster \u2581 config ."], "references": ["\u2581// \u2581 New Ubuntu Cluster \u2581creates \u2581a \u2581basic \u2581Azure \u2581cluster \u2581profile , \u2581to \u2581bootstrap \u2581 Kubernetes ."], "bleu": 0.20157536727158923, "rouge_l": 0.6019736842105263}
{"id": 4233, "predictions": ["\u2581// \u2581Create Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 controller"], "references": ["\u2581// \u2581Create Cmd \u2581represents \u2581create \u2581command"], "bleu": 0.18798317647335086, "rouge_l": 0.45101663585951934}
{"id": 5561, "predictions": ["\u2581// \u2581 Compare Special Word \u2581 searches \u2581the \u2581word \u2581to \u2581be \u2581printed \u2581as \u2581a \u2581 Word \u2581 type ."], "references": ["\u2581// \u2581Returns \u2581the \u2581 stem med \u2581version \u2581of \u2581a \u2581word \u2581if \u2581it \u2581is \u2581a \u2581special \u2581// \u2581case , \u2581otherwise \u2581returns \u2581the \u2581 empty \u2581string . \u2581//"], "bleu": 0.06300761065244084, "rouge_l": 0.25939050318922746}
{"id": 5388, "predictions": ["\u2581// \u2581 Bytes \u2581returns \u2581the \u2581 byte \u2581 slice \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581 Bytes \u2581returns \u2581the \u2581 mail \u2581 data"], "bleu": 0.44710186192584195, "rouge_l": 0.657935285053929}
{"id": 5400, "predictions": ["\u2581// \u2581parse MultiPart Body \u2581parses \u2581the \u2581 content \u2581of \u2581a \u2581 body \u2581and \u2581returns \u2581a \u2581 json ."], "references": ["\u2581// \u2581parse MultiPart Body \u2581parses \u2581a \u2581multipart \u2581message \u2581in \u2581root . \u2581The \u2581result \u2581is \u2581placed \u2581in \u2581 e ."], "bleu": 0.26110922528849173, "rouge_l": 0.43033509700176364}
{"id": 4209, "predictions": ["\u2581// \u2581Validate \u2581checks \u2581the \u2581 config \u2581values \u2581for \u2581the \u2581 config ."], "references": ["\u2581// \u2581Validate \u2581checks \u2581a \u2581 Config \u2581instance . \u2581It \u2581will \u2581return \u2581a \u2581// \u2581 sarama . Configuration Error \u2581if \u2581the \u2581specified \u2581values \u2581don ' t \u2581make \u2581sense ."], "bleu": 0.062432368324207135, "rouge_l": 0.2798165137614679}
{"id": 5931, "predictions": ["\u2581// \u2581 Visualize \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 Catalog \u2581with \u2581the \u2581given \u2581 title ."], "references": ["\u2581// \u2581 Visualize \u2581emits \u2581a \u2581string \u2581in \u2581 dot \u2581 format \u2581which \u2581when \u2581rendered \u2581with \u2581 graphviz \u2581// \u2581 visualize s \u2581the \u2581 models \u2581and \u2581their \u2581 relationships ."], "bleu": 0.08968679796773343, "rouge_l": 0.3737236215112321}
{"id": 5525, "predictions": ["\u2581// \u2581is Stop Word \u2581is \u2581a \u2581function \u2581to \u2581 set \u2581the \u2581word \u2581 name \u2581for \u2581a \u2581word ."], "references": ["\u2581// \u2581Return \u2581` true ` \u2581if \u2581the \u2581input \u2581` word ` \u2581is \u2581a \u2581 F rench \u2581stop \u2581word . \u2581//"], "bleu": 0.11340941636995293, "rouge_l": 0.31282051282051276}
{"id": 5450, "predictions": ["\u2581// \u2581 Envelope To Markdown \u2581converts \u2581a \u2581envelope \u2581to \u2581a \u2581 Markdown \u2581object ."], "references": ["\u2581// \u2581 Envelope To Markdown \u2581renders \u2581the \u2581 contents \u2581of \u2581an \u2581 en mime . Envelope \u2581in \u2581 Markdown \u2581 format . \u2581 Used \u2581by \u2581// \u2581 mime - dump"], "bleu": 0.11959725930229445, "rouge_l": 0.3412587412587413}
{"id": 4636, "predictions": ["\u2581// \u2581 set \u2581the \u2581value \u2581of \u2581the \u2581item \u2581in \u2581the \u2581 set \u2581of \u2581policies ."], "references": ["\u2581// \u2581 set \u2581sets \u2581the \u2581given \u2581 items \u2581using \u2581the \u2581given \u2581conflict \u2581resolution \u2581policy . \u2581// \u2581 appengine . Multi Error \u2581may \u2581be \u2581returned ."], "bleu": 0.0934781260034518, "rouge_l": 0.3349019607843138}
{"id": 5536, "predictions": ["\u2581// \u2581step 4 \u2581calculates \u2581the \u2581 4 \u2581 code \u2581for \u2581the \u2581word ."], "references": ["\u2581// \u2581 Step \u2581 4 \u2581is \u2581the \u2581clean ing \u2581up \u2581of \u2581 residual \u2581 suffixes . \u2581//"], "bleu": 0.11421985585914946, "rouge_l": 0.3906083244397012}
{"id": 5535, "predictions": ["\u2581// \u2581step 2 b \u2581converts \u2581a \u2581 2 d \u2581word \u2581to \u2581 b ."], "references": ["\u2581// \u2581 Step \u2581 2 b \u2581is \u2581the \u2581removal \u2581of \u2581verb \u2581 suffixes \u2581beginning \u2581 y , \u2581// \u2581 Search \u2581for \u2581the \u2581longest \u2581among \u2581the \u2581following \u2581 suffixes \u2581// \u2581in"], "bleu": 0.04882537665432506, "rouge_l": 0.21328671328671328}
{"id": 4658, "predictions": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581 subscriptions \u2581for \u2581a \u2581query ."], "references": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581results \u2581for \u2581the \u2581query . \u2581// \u2581// \u2581The \u2581running \u2581time \u2581and \u2581number \u2581of \u2581API \u2581calls \u2581made \u2581by \u2581 Count \u2581scale \u2581linear ly \u2581with"], "bleu": 0.18641591316415773, "rouge_l": 0.41924398625429554}
{"id": 4701, "predictions": ["\u2581// \u2581 Task \u2581returns \u2581a \u2581task \u2581task \u2581for \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 Task \u2581creates \u2581a \u2581 Task \u2581that \u2581will \u2581invoke \u2581the \u2581function . \u2581// \u2581 Its \u2581parameters \u2581may \u2581be \u2581 tweak ed \u2581before \u2581adding \u2581it \u2581to \u2581a \u2581queue . \u2581//"], "bleu": 0.05717753472068341, "rouge_l": 0.30391459074733096}
{"id": 5868, "predictions": ["\u2581// \u2581 To Argv \u2581returns \u2581a \u2581 slice \u2581of \u2581strings \u2581representing \u2581a \u2581string \u2581 slice ."], "references": ["\u2581// \u2581 To Argv \u2581converts \u2581string \u2581 s \u2581into \u2581an \u2581 argv \u2581for \u2581 exec ."], "bleu": 0.26220676436185975, "rouge_l": 0.4375}
{"id": 5440, "predictions": ["\u2581// \u2581parse Parts \u2581parses \u2581the \u2581 content \u2581of \u2581a \u2581 MIME \u2581 type \u2581and \u2581returns \u2581a \u2581 map \u2581of \u2581// \u2581 children \u2581of \u2581the \u2581 MIME \u2581 content ."], "references": ["\u2581// \u2581parse Parts \u2581recursively \u2581parses \u2581a \u2581 MIME \u2581multipart \u2581document \u2581and \u2581sets \u2581each \u2581 Parts \u2581 Part ID ."], "bleu": 0.12861981016228477, "rouge_l": 0.4762242725337118}
{"id": 5556, "predictions": ["\u2581// \u2581step 0 \u2581 - \u2581 Moving \u2581 2."], "references": ["\u2581// \u2581 Step \u25810 \u2581is \u2581the \u2581removal \u2581of \u2581attached \u2581 pro noun s \u2581//"], "bleu": 0.09630141125179911, "rouge_l": 0.2510288065843621}
{"id": 4821, "predictions": ["\u2581// \u2581 ListenAndServe TLS \u2581is \u2581used \u2581to \u2581serve \u2581a \u2581 TLS \u2581server"], "references": ["\u2581// \u2581 ListenAndServe TLS \u2581act s \u2581identical ly \u2581to \u2581 ListenAndServe , \u2581except \u2581that \u2581it \u2581// \u2581uses \u2581the \u2581 T EL NET \u2581protocol \u2581over \u2581 TLS . \u2581// \u2581// \u2581"], "bleu": 0.07673292733354292, "rouge_l": 0.30942028985507253}
{"id": 5527, "predictions": ["\u2581// \u2581step 2 \u2581converts \u2581 2 d \u2581 format \u2581to \u2581 2 d \u2581mode ."], "references": ["\u2581// \u2581 Step \u2581 2 \u2581is \u2581the \u2581 stem m ing \u2581of \u2581various \u2581 endings \u2581found \u2581in \u2581// \u2581 R 1 \u2581including \u2581\" al \", \u2581\" ness \", \u2581and \u2581\""], "bleu": 0.04736201512792776, "rouge_l": 0.20962199312714777}
{"id": 5800, "predictions": ["\u2581// \u2581calculate \u2581returns \u2581the \u2581current \u2581 left - value \u2581pair \u2581of \u2581the \u2581 dom ."], "references": ["\u2581// \u2581calculate \u2581runs \u2581the \u2581main \u2581part \u2581of \u2581LT ."], "bleu": 0.12874330508144843, "rouge_l": 0.4363376251788269}
{"id": 5381, "predictions": ["\u2581// \u2581 Join Protected Requested C \u2581enables \u2581a \u2581 confirmation \u2581 code \u2581for \u2581a \u2581 confirmation \u2581 code ."], "references": ["\u2581// \u2581 x ep - 004 5 \u2581 7 . 2.6"], "bleu": 0.09629943614188137, "rouge_l": 0.2801377726750861}
{"id": 4258, "predictions": ["\u2581// \u2581 New State Store \u2581creates \u2581a \u2581new \u2581 State Store r \u2581with \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 New State Store \u2581returns \u2581cluster Store r \u2581object \u2581based \u2581on \u2581 type ."], "bleu": 0.3146660996956416, "rouge_l": 0.505699481865285}
{"id": 5540, "predictions": ["\u2581// \u2581is Stop Word \u2581checks \u2581whether \u2581a \u2581word \u2581is \u2581 set \u2581in \u2581the \u2581 format"], "references": ["\u2581// \u2581Return \u2581` true ` \u2581if \u2581the \u2581input \u2581` word ` \u2581is \u2581a \u2581 No rw eg ian \u2581stop \u2581word . \u2581//"], "bleu": 0.07055586073849472, "rouge_l": 0.20908311910882607}
{"id": 4920, "predictions": ["\u2581// \u2581 Draw \u2581draw s \u2581the \u2581 color \u2581of \u2581the \u2581matrix \u2581with \u2581the \u2581given \u2581 dot ."], "references": ["\u2581// \u2581 Draw \u2581the \u2581 droid \u2581on \u2581a \u2581certain \u2581position ."], "bleu": 0.1661742929957894, "rouge_l": 0.4457978075517661}
{"id": 4228, "predictions": ["\u2581// \u2581Get Reconcile r \u2581returns \u2581a \u2581 reconcile r \u2581that \u2581will \u2581 reconcile \u2581the \u2581 cloud \u2581 controller \u2581for \u2581the \u2581cluster"], "references": ["\u2581// \u2581Get Reconcile r \u2581gets \u2581the \u2581correct \u2581 Reconcile r \u2581for \u2581the \u2581 cloud \u2581provider \u2581current y \u2581used ."], "bleu": 0.2487344417023396, "rouge_l": 0.4540942928039702}
{"id": 4926, "predictions": ["\u2581// \u2581 Checksum 32 S \u2581returns \u2581the \u2581 32 - bit \u2581checksum \u2581of \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Checksum 32 S \u2581returns \u2581the \u2581checksum \u2581of \u2581the \u2581input \u2581bytes \u2581with \u2581the \u2581specific \u2581seed ."], "bleu": 0.42461633178803443, "rouge_l": 0.6172953081876725}
{"id": 5558, "predictions": ["\u2581// \u2581step 2 b \u2581converts \u2581 2 d \u2581mode \u2581to \u2581 b ."], "references": ["\u2581// \u2581 Step \u2581 2 b \u2581is \u2581the \u2581removal \u2581of \u2581 Verb \u2581 suffixes \u2581in \u2581 RV \u2581// \u2581that \u2581do \u2581not \u2581begin \u2581with \u2581\" i \" . \u2581//"], "bleu": 0.05423560340346527, "rouge_l": 0.27456864216054017}
{"id": 4551, "predictions": ["\u2581// \u2581 apply Compare \u2581compares \u2581the \u2581 key \u2581and \u2581 b \u2581and \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581 apply Compare \u2581applies \u2581the \u2581compare \u2581request . \u2581// \u2581It \u2581returns \u2581the \u2581revision \u2581at \u2581which \u2581the \u2581comparison \u2581happens . \u2581If \u2581the \u2581comparison \u2581// \u2581succeeds , \u2581the \u2581it \u2581returns \u2581true"], "bleu": 0.12966245005443422, "rouge_l": 0.34746835443037977}
{"id": 5364, "predictions": ["\u2581// \u2581 parseJSON Save With Config \u2581 modifies \u2581the \u2581 config \u2581 config \u2581with \u2581the \u2581given \u2581configuration \u2581// \u2581 config ."], "references": ["\u2581// \u2581Runs \u2581a \u2581 cascade d \u2581save \u2581operation \u2581with \u2581one \u2581configuration"], "bleu": 0.07305267243289862, "rouge_l": 0.26492942453854507}
{"id": 5541, "predictions": ["\u2581// \u2581is Stop Word \u2581checks \u2581whether \u2581the \u2581word \u2581is \u2581a \u2581valid \u2581 table ."], "references": ["\u2581// \u2581Return \u2581` true ` \u2581if \u2581the \u2581input \u2581` word ` \u2581is \u2581a \u2581 Swe d ish \u2581stop \u2581word . \u2581//"], "bleu": 0.09016682584991724, "rouge_l": 0.3309222423146474}
{"id": 5994, "predictions": ["\u2581// \u2581handle Match \u2581 turn s \u2581a \u2581 set \u2581of \u2581 headers \u2581to \u2581the \u2581 set \u2581of \u2581 keys ."], "references": ["\u2581// \u2581 Process \u2581a \u2581range Pattern \u2581match \u2581 group"], "bleu": 0.07681104116622756, "rouge_l": 0.2961165048543689}
{"id": 5959, "predictions": ["\u2581// \u2581 Relationship Validator \u2581checks \u2581if \u2581the \u2581 model \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Relationship Validator \u2581makes \u2581sure \u2581all \u2581 relationships \u2581of \u2581a \u2581 model \u2581are \u2581correct \u2581and \u2581// \u2581in \u2581place . \u2581It \u2581does \u2581so \u2581by \u2581 combining \u2581a \u2581 Dependent Resources"], "bleu": 0.07673292733354292, "rouge_l": 0.30942028985507253}
{"id": 4820, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 data \u2581from \u2581the \u2581 data \u2581stream ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 T EL NET \u2581escaped \u2581 data \u2581from \u2581the \u2581wrapped \u2581io . Reader , \u2581and \u2581\" un - escape s \" \u2581it \u2581into \u2581' data"], "bleu": 0.1737715174030466, "rouge_l": 0.43416370106761565}
{"id": 5877, "predictions": ["\u2581// \u2581 Reap Children \u2581is \u2581used \u2581to \u2581 reap \u2581all \u2581 children \u2581of \u2581the \u2581 children \u2581// \u2581of \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Reap Children \u2581is \u2581a \u2581long - running \u2581routine \u2581that \u2581blocks \u2581waiting \u2581for \u2581child \u2581// \u2581processes \u2581to \u2581 exit \u2581and \u2581 reap s \u2581them , \u2581 reporting \u2581 reap"], "bleu": 0.18611459930483798, "rouge_l": 0.37423312883435583}
{"id": 5754, "predictions": ["\u2581// \u2581 helper \u2581function \u2581to \u2581 get \u2581 code \u2581for \u2581a \u2581 type ."], "references": ["\u2581// \u2581Generate \u2581the \u2581 name \u2581the \u2581runtime \u2581uses \u2581for \u2581a \u2581 dwarf \u2581 type . \u2581The \u2581 D WAR F \u2581generator \u2581// \u2581and \u2581the \u2581runtime \u2581use \u2581slightly \u2581different \u2581names \u2581for"], "bleu": 0.08295647520702402, "rouge_l": 0.2986013986013986}
{"id": 4661, "predictions": ["\u2581// \u2581 Cursor \u2581returns \u2581the \u2581cursor \u2581for \u2581the \u2581cursor ."], "references": ["\u2581// \u2581 Cursor \u2581returns \u2581a \u2581cursor \u2581for \u2581the \u2581 iterator ' s \u2581current \u2581location ."], "bleu": 0.2931179403571363, "rouge_l": 0.6177215189873417}
{"id": 5755, "predictions": ["\u2581// \u2581read Runtime Constants \u2581reads \u2581the \u2581runtime \u2581values \u2581from \u2581the \u2581runtime ."], "references": ["\u2581// \u2581read Runtime Constants \u2581populate s \u2581the \u2581 p . rt Constants \u2581 map ."], "bleu": 0.24497647378642431, "rouge_l": 0.43571428571428567}
{"id": 4758, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581 data \u2581from \u2581 File ."], "references": ["\u2581// \u2581 renameTo p \u2581rename s \u2581all \u2581references \u2581to \u2581the \u2581 top - level \u2581 name \u2581old . \u2581// \u2581It \u2581returns \u2581true \u2581if \u2581it \u2581makes \u2581any \u2581changes ."], "bleu": 0.04900739990236013, "rouge_l": 0.27456864216054017}
{"id": 5679, "predictions": ["\u2581// \u2581 Append Duration \u2581appends \u2581a \u2581 Duration \u2581to \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Append Duration \u2581appends \u2581a \u2581human - readable \u2581representation \u2581of \u2581 d \u2581to \u2581 b . \u2581// \u2581// \u2581The \u2581function \u2581copies \u2581the \u2581implementation \u2581of \u2581time . Duration . String"], "bleu": 0.15675647312598798, "rouge_l": 0.41924398625429554}
{"id": 5531, "predictions": ["\u2581// \u2581step 1 \u2581 - \u2581checks \u2581whether \u2581the \u2581 data \u2581is \u2581 set \u2581in \u2581the \u2581 format ."], "references": ["\u2581// \u2581 Step \u2581 1 \u2581is \u2581the \u2581 stem m ing \u2581of \u2581various \u2581 endings \u2581found \u2581in \u2581// \u2581 R 1 \u2581including \u2581\" he tern a \", \u2581\" or n"], "bleu": 0.06216974582363912, "rouge_l": 0.2790849673202615}
{"id": 4128, "predictions": ["\u2581// \u2581 Revoke \u2581 revoke s \u2581a \u2581team"], "references": ["\u2581// \u2581 Revoke \u2581removes \u2581the \u2581access \u2581from \u2581a \u2581team . \u2581It \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581team \u2581do \u2581// \u2581not \u2581have \u2581access \u2581to \u2581the \u2581 app ."], "bleu": 0.034312484493200644, "rouge_l": 0.2602389078498294}
{"id": 5500, "predictions": ["\u2581// \u2581 Read \u2581the \u2581block \u2581header \u2581from \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581read BlockHeader \u2581returns \u2581the \u2581next \u2581block \u2581header \u2581in \u2581the \u2581archive . \u2581// \u2581It \u2581will \u2581return \u2581io . EOF \u2581if \u2581there \u2581were \u2581no \u2581bytes \u2581read ."], "bleu": 0.05715789117263137, "rouge_l": 0.2902458366375893}
{"id": 4837, "predictions": ["\u2581// \u2581 Insert \u2581inserts \u2581a \u2581new \u2581node \u2581into \u2581the \u2581tree ."], "references": ["\u2581// \u2581 Insert \u2581is \u2581used \u2581to \u2581 add \u2581a \u2581new entry \u2581or \u2581update \u2581// \u2581an \u2581existing \u2581entry . \u2581Returns \u2581if \u2581updated ."], "bleu": 0.0963936476247809, "rouge_l": 0.3430178069353327}
{"id": 5354, "predictions": ["\u2581// \u2581 Interpret \u2581a \u2581 Value \u2581from \u2581a \u2581 Value ."], "references": ["\u2581// \u2581 Interpret \u2581interpret s \u2581the \u2581 content \u2581in \u2581a \u2581stream \u2581as \u2581a \u2581basic \u2581 Post Script \u2581program , \u2581// \u2581pushing \u2581values \u2581onto \u2581a \u2581stack \u2581and \u2581then \u2581calling \u2581the \u2581do"], "bleu": 0.04481889913725955, "rouge_l": 0.2701107011070111}
{"id": 5398, "predictions": ["\u2581// \u2581 Envelope From Part \u2581parses \u2581the \u2581 data \u2581from \u2581the \u2581 data \u2581into \u2581a \u2581 Envelope ."], "references": ["\u2581// \u2581 Envelope From Part \u2581uses \u2581the \u2581provided \u2581 Part \u2581tree \u2581to \u2581build \u2581an \u2581 Envelope , \u2581down convert ing \u2581HTML \u2581to \u2581 plain \u2581// \u2581 text \u2581if \u2581needed ,"], "bleu": 0.15595628746552004, "rouge_l": 0.3588235294117647}
{"id": 4451, "predictions": ["\u2581// \u2581Verify Message Provider Raw \u2581verifies \u2581the \u2581 token \u2581 manager \u2581and \u2581 publish \u2581 headers"], "references": ["\u2581// \u2581Verify Message Provider Raw \u2581runs \u2581provider \u2581message \u2581verification . \u2581// \u2581// \u2581 A \u2581 Message \u2581 Producer \u2581is \u2581an a lag ous \u2581to \u2581 Consumer \u2581in \u2581the \u2581HTTP \u2581"], "bleu": 0.13667253901149035, "rouge_l": 0.370945945945946}
{"id": 4119, "predictions": ["\u2581// \u2581MarshalJSON \u2581 - \u2581encodes \u2581 App \u2581to \u2581JSON \u2581 data ."], "references": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581the \u2581 app \u2581in \u2581 json \u2581 format ."], "bleu": 0.15549322861581405, "rouge_l": 0.4765625000000001}
{"id": 4914, "predictions": ["\u2581// \u2581 Flatten \u2581recursively \u2581 concatenate s \u2581the \u2581 contents \u2581of \u2581a \u2581 slice \u2581of \u2581 data \u2581into \u2581a \u2581 slice \u2581of \u2581// \u2581 children ."], "references": ["\u2581// \u2581 Flatten \u2581convert \u2581 curves \u2581into \u2581 straight \u2581segments \u2581keeping \u2581 join \u2581segments \u2581 info"], "bleu": 0.10640850690356463, "rouge_l": 0.3482871125611745}
{"id": 5799, "predictions": ["\u2581// \u2581initialize \u2581initializes \u2581the \u2581 dom \u2581 dom ."], "references": ["\u2581// \u2581initialize \u2581implements \u2581step \u2581 1 \u2581of \u2581LT ."], "bleu": 0.21105340631872635, "rouge_l": 0.4444444444444444}
{"id": 4253, "predictions": ["\u2581// \u2581 Actual \u2581 set \u2581 Firewall s \u2581for \u2581a \u2581 firewall"], "references": ["\u2581// \u2581 Actual \u2581calls \u2581 DO \u2581 firewall \u2581 Api \u2581and \u2581returns \u2581the \u2581actual \u2581state \u2581of \u2581 firewall \u2581in \u2581the \u2581 cloud ."], "bleu": 0.09881261609736544, "rouge_l": 0.3785460992907802}
{"id": 5498, "predictions": ["\u2581// \u2581 decode Name \u2581decodes \u2581the \u2581 name \u2581of \u2581the \u2581 byte \u2581array ."], "references": ["\u2581// \u2581 decode Name \u2581decodes \u2581a \u2581non - unicode \u2581 filename \u2581from \u2581a \u2581file \u2581header ."], "bleu": 0.3016006458695292, "rouge_l": 0.46112311015118784}
{"id": 4763, "predictions": ["\u2581// \u2581 flush Log \u2581logs \u2581the \u2581log \u2581log \u2581to \u2581the \u2581log \u2581log ."], "references": ["\u2581// \u2581 flush Log \u2581attempts \u2581to \u2581 flush \u2581any \u2581pending \u2581logs \u2581to \u2581the \u2581 app server . \u2581// \u2581It \u2581should \u2581not \u2581be \u2581called \u2581concurrently ."], "bleu": 0.12935773337007855, "rouge_l": 0.3983673469387755}
{"id": 4543, "predictions": ["\u2581// \u2581make Local Connection Status Slice \u2581returns \u2581a \u2581 slice \u2581of \u2581 Connection Connection Status Slice \u2581for \u2581// \u2581the \u2581given \u2581 OS C \u2581 Connection ."], "references": ["\u2581// \u2581make Local Connection Status Slice \u2581takes \u2581a \u2581snapshot \u2581of \u2581the \u2581 active \u2581local \u2581// \u2581connections \u2581in \u2581the \u2581 Connection Maker ."], "bleu": 0.2657251941599823, "rouge_l": 0.5922330097087377}
{"id": 4875, "predictions": ["\u2581// \u2581 embed \u2581a \u2581 font \u2581 font"], "references": ["\u2581// \u2581 Embed \u2581 svg \u2581 font \u2581definition \u2581to \u2581 svg \u2581tree \u2581itself \u2581// \u2581 Or \u2581update \u2581existing \u2581if \u2581already \u2581 exists \u2581for \u2581cur ent \u2581 font \u2581 data"], "bleu": 0.028255698531225726, "rouge_l": 0.2942122186495177}
{"id": 5375, "predictions": ["\u2581// \u2581 Recv \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Chat \u2581object \u2581that \u2581can \u2581be \u2581// \u2581used \u2581to \u2581send \u2581the \u2581 status \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Recv \u2581waits \u2581to \u2581receive \u2581the \u2581next \u2581 XMPP \u2581 stanza . \u2581// \u2581Return \u2581 type \u2581is \u2581either \u2581a \u2581presence \u2581notification \u2581or \u2581a \u2581chat \u2581message ."], "bleu": 0.10630643627589147, "rouge_l": 0.28756629345904533}
{"id": 4760, "predictions": ["\u2581// \u2581delete Import \u2581removes \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581file ."], "references": ["\u2581// \u2581delete Import \u2581deletes \u2581the \u2581import \u2581 path \u2581from \u2581the \u2581file \u2581 f , \u2581if \u2581present ."], "bleu": 0.1561396080897017, "rouge_l": 0.5350877192982455}
{"id": 5507, "predictions": ["\u2581// \u2581process Filters \u2581 consume s \u2581the \u2581 text \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581process Filters \u2581processes \u2581any \u2581filters \u2581valid \u2581at \u2581the \u2581current \u2581read \u2581index \u2581// \u2581and \u2581stores \u2581the \u2581output \u2581in \u2581out buf ."], "bleu": 0.11050777889861528, "rouge_l": 0.33857539315448665}
{"id": 4249, "predictions": ["\u2581// \u2581 New Provisioner Cluster \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 kubernetes \u2581cluster"], "references": ["\u2581// \u2581 New Ubuntu Cluster \u2581creates \u2581a \u2581simple \u2581 Ubuntu \u2581Amazon \u2581cluster"], "bleu": 0.25336549464486463, "rouge_l": 0.6240409207161125}
{"id": 5750, "predictions": ["\u2581// \u2581 helper \u2581function \u2581to \u2581 set \u2581the \u2581 type \u2581of \u2581a \u2581 type , \u2581and \u2581returns \u2581true \u2581if \u2581the \u2581// \u2581 type \u2581is \u2581 Kind , \u2581or \u2581false \u2581if"], "references": ["\u2581// \u2581edges 1 \u2581calls \u2581fn \u2581for \u2581the \u2581edges \u2581found \u2581in \u2581an \u2581object \u2581of \u2581 type \u2581 t \u2581 l iving \u2581at \u2581offset \u2581off \u2581in \u2581the \u2581root \u2581 r . \u2581//"], "bleu": 0.07346761234551784, "rouge_l": 0.2333333333333334}
{"id": 4125, "predictions": ["\u2581// \u2581 Update Node Status \u2581updates \u2581the \u2581 status \u2581of \u2581the \u2581node \u2581 status \u2581of \u2581the \u2581node ."], "references": ["\u2581// \u2581 Update Node Status \u2581updates \u2581the \u2581 status \u2581of \u2581the \u2581given \u2581node \u2581and \u2581its \u2581units , \u2581// \u2581returning \u2581a \u2581 map \u2581which \u2581units \u2581were \u2581found \u2581during \u2581the \u2581update ."], "bleu": 0.32980739343783355, "rouge_l": 0.5980392156862745}
{"id": 4909, "predictions": ["\u2581// \u2581 Draw \u2581draw s \u2581the \u2581 width \u2581and \u2581 height \u2581of \u2581the \u2581given \u2581 width \u2581and \u2581 height ."], "references": ["\u2581// \u2581 Draw \u2581all \u2581 figures \u2581in \u2581a \u2581nice \u2581 4 x 3 \u2581 grid ."], "bleu": 0.1352045976914347, "rouge_l": 0.39684014869888473}
{"id": 4906, "predictions": ["\u2581// \u2581 Fill Style \u2581draw s \u2581the \u2581 color \u2581of \u2581the \u2581given \u2581 color ."], "references": ["\u2581// \u2581 Fill Style \u2581 d emonstrate s \u2581the \u2581difference \u2581between \u2581even \u2581odd \u2581and \u2581non \u2581zero \u2581 winding \u2581rule ."], "bleu": 0.20627416081678596, "rouge_l": 0.4456621004566209}
{"id": 4856, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Path ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581 debug \u2581 text \u2581 view \u2581of \u2581the \u2581 path"], "bleu": 0.32280090699723923, "rouge_l": 0.5481386392811297}
{"id": 4717, "predictions": ["\u2581// \u2581 Put Multi \u2581 put \u2581a \u2581 key \u2581into \u2581the \u2581list \u2581of \u2581 keys ."], "references": ["\u2581// \u2581 Put Multi \u2581is \u2581a \u2581batch \u2581version \u2581of \u2581 Put . \u2581// \u2581// \u2581 src \u2581must \u2581satisfy \u2581the \u2581same \u2581conditions \u2581as \u2581the \u2581dst \u2581argument \u2581to \u2581Get Multi ."], "bleu": 0.12233963169959136, "rouge_l": 0.3379501385041551}
{"id": 4929, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Gl g ."], "references": ["\u2581// \u2581 New \u2581returns \u2581 plain \u2581gl g \u2581instance"], "bleu": 0.25965358893403384, "rouge_l": 0.5313588850174217}
{"id": 5880, "predictions": ["\u2581// \u2581 Endpoint \u2581returns \u2581a \u2581handler \u2581that \u2581serves \u2581the \u2581 Authenticator"], "references": ["\u2581// \u2581 Endpoint \u2581returns \u2581a \u2581handler \u2581for \u2581the \u2581common \u2581 token \u2581and \u2581 authorize \u2581endpoint ."], "bleu": 0.3485340766146352, "rouge_l": 0.5734430082256169}
{"id": 5484, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Next \u2581advance s \u2581to \u2581the \u2581next \u2581file \u2581in \u2581the \u2581archive ."], "bleu": 0.2184641923320139, "rouge_l": 0.4925975773889637}
{"id": 4700, "predictions": ["\u2581// \u2581 Func \u2581creates \u2581a \u2581function \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581function \u2581 key ."], "references": ["\u2581// \u2581 Func \u2581declare s \u2581a \u2581new \u2581 Function . \u2581The \u2581second \u2581argument \u2581must \u2581be \u2581a \u2581function \u2581with \u2581a \u2581// \u2581first \u2581argument \u2581of \u2581 type \u2581context . Context . \u2581//"], "bleu": 0.08792129771307855, "rouge_l": 0.3189542483660131}
{"id": 5437, "predictions": ["\u2581// \u2581 Info Detected Charset \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 data \u2581from \u2581the \u2581 data ."], "references": ["\u2581// \u2581 convertFrom Detected Charset \u2581attempts \u2581to \u2581detect \u2581the \u2581character \u2581 set \u2581for \u2581the \u2581given \u2581part , \u2581and \u2581returns \u2581// \u2581an \u2581io . Reader \u2581that \u2581will \u2581convert \u2581from \u2581that \u2581charset"], "bleu": 0.07046120691469841, "rouge_l": 0.3189542483660131}
{"id": 4974, "predictions": ["\u2581// \u2581 Subscribe Chan \u2581 subscribe s \u2581to \u2581the \u2581channel \u2581and \u2581sends \u2581it \u2581to \u2581the \u2581 Client ."], "references": ["\u2581// \u2581 Subscribe Chan \u2581sends \u2581all \u2581events \u2581to \u2581the \u2581provided \u2581channel"], "bleu": 0.23210911117419966, "rouge_l": 0.5047281323877069}
{"id": 5768, "predictions": ["\u2581// \u2581 Core \u2581returns \u2581a \u2581 Process . Process \u2581that \u2581 contains \u2581the \u2581given \u2581 core ."], "references": ["\u2581// \u2581 Core \u2581takes \u2581a \u2581loaded \u2581 core \u2581file \u2581and \u2581extracts \u2581Go \u2581information \u2581from \u2581it ."], "bleu": 0.17181529671327242, "rouge_l": 0.4265734265734266}
{"id": 4868, "predictions": ["\u2581// \u2581 GetString Bounds \u2581returns \u2581the \u2581 width \u2581of \u2581the \u2581 top \u2581of \u2581the \u2581 top \u2581of \u2581the \u2581 font ."], "references": ["\u2581// \u2581 GetString Bounds \u2581returns \u2581the \u2581approximate \u2581pixel \u2581bounds \u2581of \u2581the \u2581string \u2581 s \u2581at \u2581 x , \u2581 y . \u2581// \u2581The \u2581the \u2581 left \u2581edge \u2581of \u2581the \u2581"], "bleu": 0.2543504095142437, "rouge_l": 0.5320872274143301}
{"id": 4851, "predictions": ["\u2581// \u2581 Print \u2581record \u2581prints \u2581a \u2581 byte \u2581 slice \u2581to \u2581a \u2581 slice \u2581of \u2581 IP ."], "references": ["\u2581// \u2581for \u2581debugging \u2581purposes"], "bleu": 0.06809398432036522, "rouge_l": 0.1026936026936027}
{"id": 4865, "predictions": ["\u2581// \u2581 Paint \u2581 - \u2581 Paint s \u2581a \u2581 span ."], "references": ["\u2581// \u2581 Paint \u2581 satisfies \u2581the \u2581 Painter \u2581interface \u2581by \u2581paint ing \u2581 s s \u2581onto \u2581an \u2581image . RGBA ."], "bleu": 0.15822068320325738, "rouge_l": 0.4043560606060606}
{"id": 5372, "predictions": ["\u2581// \u2581start TLS If Required \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Stream Features \u2581// \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 connect \u2581to \u2581the \u2581 controller ."], "references": ["\u2581// \u2581start Tls If Required \u2581 examine s \u2581the \u2581server ' s \u2581stream \u2581features \u2581and , \u2581if \u2581 START TLS \u2581is \u2581required \u2581or \u2581supported , \u2581performs \u2581the \u2581 TLS \u2581handshake"], "bleu": 0.0873729975041559, "rouge_l": 0.27036011080332406}
{"id": 4910, "predictions": ["\u2581// \u2581Convert Path \u2581converts \u2581a \u2581 path \u2581to \u2581a \u2581 slice \u2581of \u2581 s to d \u2581 path ."], "references": ["\u2581// \u2581Convert Path \u2581converts \u2581a \u2581paths \u2581to \u2581the \u2581 pdf \u2581 api"], "bleu": 0.2610490903329069, "rouge_l": 0.538037486218302}
{"id": 4486, "predictions": ["\u2581// \u2581to Type Description \u2581converts \u2581a \u2581 type \u2581of \u2581 type \u2581to \u2581a \u2581string \u2581 type ."], "references": ["\u2581// \u2581to Type Description \u2581converts \u2581Go \u2581types \u2581into \u2581a \u2581human \u2581readable \u2581 description"], "bleu": 0.28433291815307693, "rouge_l": 0.4781634938409854}
{"id": 6089, "predictions": ["\u2581// \u2581new Param \u2581returns \u2581a \u2581new \u2581 empty \u2581 Param Param \u2581 type ."], "references": ["\u2581// \u2581 New \u2581parameter \u2581from \u2581raw \u2581values"], "bleu": 0.09782375748961449, "rouge_l": 0.2026578073089701}
{"id": 5490, "predictions": ["\u2581// \u2581read Code Length Table \u2581reads \u2581the \u2581 code \u2581from \u2581the \u2581 data \u2581and \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 data \u2581// \u2581in \u2581the \u2581 data \u2581 data ."], "references": ["\u2581// \u2581read Code Length Table \u2581reads \u2581a \u2581new \u2581 code \u2581 length \u2581 table \u2581into \u2581 code Length \u2581from \u2581 br . \u2581// \u2581If \u2581 add Old \u2581is \u2581 set"], "bleu": 0.24850685748956688, "rouge_l": 0.4666666666666668}
{"id": 4659, "predictions": ["\u2581// \u2581 Run \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581 iterator \u2581for \u2581the \u2581query ."], "references": ["\u2581// \u2581 Run \u2581runs \u2581the \u2581query \u2581in \u2581the \u2581given \u2581context ."], "bleu": 0.195647514979229, "rouge_l": 0.4747081712062256}
{"id": 4098, "predictions": ["\u2581// \u2581start \u2581starts \u2581a \u2581goroutine \u2581that \u2581will \u2581 call \u2581 this \u2581 call \u2581to \u2581 bind \u2581 sync er ."], "references": ["\u2581// \u2581start \u2581starts \u2581the \u2581 sync \u2581process \u2581on \u2581a \u2581different \u2581goroutine"], "bleu": 0.14528679532351443, "rouge_l": 0.34040178571428575}
{"id": 4691, "predictions": ["\u2581// \u2581Add Multi \u2581adds \u2581a \u2581 Task \u2581to \u2581the \u2581list \u2581of \u2581tasks ."], "references": ["\u2581// \u2581Add Multi \u2581adds \u2581multiple \u2581tasks \u2581to \u2581a \u2581named \u2581queue . \u2581// \u2581An \u2581 empty \u2581queue \u2581 name \u2581means \u2581that \u2581the \u2581default \u2581queue \u2581will \u2581be \u2581used . \u2581// \u2581Add Multi"], "bleu": 0.08756208587968624, "rouge_l": 0.3473309608540925}
{"id": 5453, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581next \u2581 byte \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Read \u2581returns \u2581a \u2581buffer \u2581containing \u2581the \u2581 content \u2581up \u2581until \u2581boundary"], "bleu": 0.20464059737135373, "rouge_l": 0.39713541666666663}
{"id": 5901, "predictions": ["\u2581// \u2581 Callback \u2581is \u2581called \u2581when \u2581the \u2581 healthcheck \u2581action \u2581is \u2581 established ."], "references": ["\u2581// \u2581 Callback \u2581will \u2581return \u2581a \u2581callback \u2581that \u2581 authorize s \u2581operations \u2581using \u2581the \u2581strategy ."], "bleu": 0.16403415300999094, "rouge_l": 0.3293736501079914}
{"id": 5534, "predictions": ["\u2581// \u2581 remove Ad ject i val \u2581removes \u2581a \u2581 set \u2581of \u2581 templates \u2581that \u2581are \u2581 forwarding \u2581for \u2581 this \u2581 Ad ject i val"], "references": ["\u2581// \u2581Remove \u2581 ad ject i val \u2581 endings \u2581and \u2581return \u2581true \u2581if \u2581one \u2581was \u2581removed . \u2581//"], "bleu": 0.09992869870690119, "rouge_l": 0.2819722650231125}
{"id": 6004, "predictions": ["\u2581// \u2581process Sources \u2581returns \u2581a \u2581list \u2581of \u2581files \u2581that \u2581are \u2581 reachable \u2581by \u2581the \u2581// \u2581 path \u2581and \u2581 path ."], "references": ["\u2581// \u2581process Sources \u2581pull s \u2581from \u2581input \u2581channels , \u2581and \u2581processes \u2581// \u2581them \u2581into \u2581the \u2581output \u2581channel \u2581until \u2581there \u2581is \u2581no \u2581more \u2581work"], "bleu": 0.11306926011951215, "rouge_l": 0.180339985218034}
{"id": 5509, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581next \u2581 data \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Read \u2581decodes \u2581 data \u2581and \u2581stores \u2581it \u2581in \u2581 p ."], "bleu": 0.21990063276566446, "rouge_l": 0.4765625000000001}
{"id": 4145, "predictions": ["\u2581// \u2581 Swap \u2581 - \u2581 Swap s \u2581the \u2581 app ' s \u2581 app ."], "references": ["\u2581// \u2581 Swap \u2581calls \u2581the \u2581 Router . Swap \u2581and \u2581updates \u2581the \u2581 app . C Name \u2581in \u2581the \u2581database ."], "bleu": 0.186268207442886, "rouge_l": 0.47491349480968864}
{"id": 4472, "predictions": ["\u2581// \u2581 url \u2581returns \u2581a \u2581 URL \u2581for \u2581 this \u2581bucket ."], "references": ["\u2581// \u2581 url \u2581returns \u2581a \u2581parsed \u2581 url \u2581to \u2581the \u2581given \u2581 path . \u2581 c \u2581must \u2581not \u2581be \u2581nil"], "bleu": 0.21624170873012138, "rouge_l": 0.47843137254901963}
{"id": 6031, "predictions": ["\u2581// \u2581 Append Unique \u2581appends \u2581a \u2581new \u2581 set \u2581of \u2581 items \u2581to \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Append Unique \u2581creates \u2581and \u2581adds \u2581another \u2581range \u2581of \u2581values \u2581// \u2581to \u2581the \u2581total \u2581range \u2581list . \u2581 Only \u2581unique \u2581values \u2581from \u2581the \u2581// \u2581given \u2581range \u2581are \u2581appended \u2581to"], "bleu": 0.11767646173056052, "rouge_l": 0.3242524916943521}
{"id": 4828, "predictions": ["\u2581// \u2581 Write Help \u2581writes \u2581the \u2581help \u2581 text \u2581 text \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Write Help \u2581writes \u2581the \u2581usage \u2581string \u2581followed \u2581by \u2581the \u2581full \u2581help \u2581string \u2581for \u2581each \u2581option"], "bleu": 0.34834973465570856, "rouge_l": 0.4219367588932806}
{"id": 4257, "predictions": ["\u2581// \u2581 Delete Cmd \u2581returns \u2581a \u2581 Command \u2581command \u2581for \u2581 Delete Options"], "references": ["\u2581// \u2581 Delete Cmd \u2581represents \u2581the \u2581delete \u2581command"], "bleu": 0.27824623288353134, "rouge_l": 0.4975530179445351}
{"id": 5526, "predictions": ["\u2581// \u2581 capitalize s \u2581the \u2581word \u2581 -> \u2581 date , \u2581 plus \u2581the \u2581 data \u2581 set , \u2581 plus \u2581the \u2581 data \u2581// \u2581 plus \u2581a \u2581 lower"], "references": ["\u2581// \u2581 Capitalize \u2581 Y , \u2581 I , \u2581and \u2581 U \u2581 runes \u2581that \u2581are \u2581act ing \u2581as \u2581cons an ants . \u2581// \u2581 Put \u2581into \u2581upper \u2581case \u2581\""], "bleu": 0.08736820732355158, "rouge_l": 0.3333333333333333}
{"id": 4815, "predictions": ["\u2581// \u2581 UnmarshalBinary Bare \u2581decodes \u2581a \u2581 Bare Bare \u2581encoded \u2581 byte \u2581array \u2581into \u2581a \u2581 Codec ."], "references": ["\u2581// \u2581 UnmarshalBinary Bare \u2581will \u2581panic \u2581if \u2581 ptr \u2581is \u2581a \u2581nil - pointer ."], "bleu": 0.21314568971111159, "rouge_l": 0.43131313131313137}
{"id": 4260, "predictions": ["\u2581// \u2581Apply Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 cli \u2581command"], "references": ["\u2581// \u2581Apply Cmd \u2581represents \u2581the \u2581 apply \u2581command"], "bleu": 0.18207052811092136, "rouge_l": 0.47805642633228845}
{"id": 4723, "predictions": ["\u2581// \u2581proto To Record \u2581converts \u2581a \u2581 Request Log \u2581into \u2581a \u2581 Record ."], "references": ["\u2581// \u2581proto To Record \u2581converts \u2581a \u2581 Request Log , \u2581the \u2581internal \u2581 Protocol \u2581 Buffer \u2581// \u2581representation \u2581of \u2581a \u2581single \u2581request - level \u2581log , \u2581to \u2581a \u2581 Record"], "bleu": 0.23093864999161237, "rouge_l": 0.5118881118881118}
{"id": 4144, "predictions": ["\u2581// \u2581 List \u2581all \u2581 app \u2581 ids \u2581in \u2581the \u2581 filter ."], "references": ["\u2581// \u2581 List \u2581returns \u2581the \u2581list \u2581of \u2581 apps \u2581filtered \u2581through \u2581the \u2581 filter \u2581parameter ."], "bleu": 0.21737035207924496, "rouge_l": 0.541620421753607}
{"id": 6070, "predictions": ["\u2581// \u2581 Output Json \u2581prints \u2581the \u2581log \u2581at \u2581the \u2581given \u2581 body ."], "references": ["\u2581// \u2581 Output \u2581 json \u2581 format \u2581records \u2581the \u2581log \u2581with \u2581special \u2581 call stack \u2581depth \u2581and \u2581log \u2581level ."], "bleu": 0.13259672232669711, "rouge_l": 0.40861244019138754}
{"id": 6058, "predictions": ["\u2581// \u2581 Open Db \u2581open s \u2581the \u2581 data \u2581file \u2581and \u2581 uploads \u2581the \u2581 data \u2581to \u2581the \u2581file"], "references": ["\u2581// \u2581Opens \u2581a \u2581 GeoIP \u2581database \u2581by \u2581 filename \u2581with \u2581specified \u2581 GeoIP Options \u2581flag . \u2581// \u2581 All \u2581formats \u2581supported \u2581by \u2581 lib geoip \u2581are \u2581supported \u2581though \u2581there \u2581are"], "bleu": 0.056491799404781204, "rouge_l": 0.1961414790996785}
{"id": 4913, "predictions": ["\u2581// \u2581 Draw \u2581draw s \u2581the \u2581 path \u2581and \u2581 display \u2581 data \u2581in \u2581the \u2581 path ."], "references": ["\u2581// \u2581 Draw Contour \u2581draw s \u2581the \u2581given \u2581closed \u2581 contour \u2581at \u2581the \u2581given \u2581sub - pixel \u2581offset ."], "bleu": 0.18955995242264623, "rouge_l": 0.48412698412698413}
{"id": 4207, "predictions": ["\u2581// \u2581 Fetch \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581 Fetch \u2581the \u2581binary \u2581from \u2581the \u2581provided \u2581 URL"], "bleu": 0.24384183193426084, "rouge_l": 0.4803149606299213}
{"id": 6069, "predictions": ["\u2581// \u2581 Output \u2581is \u2581a \u2581convenience \u2581method \u2581for \u2581 Output ."], "references": ["\u2581// \u2581 Output \u2581records \u2581the \u2581log \u2581with \u2581special \u2581 call stack \u2581depth \u2581and \u2581log \u2581level ."], "bleu": 0.14892408222374315, "rouge_l": 0.3584018801410106}
{"id": 4227, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581resource \u2581instance \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581resource"], "references": ["\u2581// \u2581 Delete \u2581is \u2581used \u2581to \u2581delete \u2581the \u2581instances \u2581on \u2581the \u2581 cloud \u2581provider"], "bleu": 0.1892240568795935, "rouge_l": 0.42857142857142855}
{"id": 4262, "predictions": ["\u2581// \u2581 Completion Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581 this \u2581command ."], "references": ["\u2581// \u2581 Completion Cmd \u2581represents \u2581the \u2581completion \u2581command"], "bleu": 0.2676032275663791, "rouge_l": 0.5736677115987461}
{"id": 5373, "predictions": ["\u2581// \u2581start Stream \u2581is \u2581a \u2581convenience \u2581method \u2581that \u2581returns \u2581a \u2581stream \u2581features \u2581// \u2581that \u2581will \u2581be \u2581used \u2581to \u2581report \u2581the \u2581stream \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581start Stream \u2581will \u2581start \u2581a \u2581new \u2581XML \u2581decoder \u2581for \u2581the \u2581connection , \u2581signal \u2581the \u2581start \u2581of \u2581a \u2581stream \u2581to \u2581the \u2581server \u2581and \u2581verify \u2581that \u2581the \u2581server \u2581has \u2581// \u2581also"], "bleu": 0.10948834203438121, "rouge_l": 0.3173410404624277}
{"id": 5893, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581stream \u2581to \u2581the \u2581 Watcher ."], "references": ["\u2581// \u2581Add \u2581will \u2581 add \u2581a \u2581stream \u2581to \u2581the \u2581watcher ."], "bleu": 0.27901593935858265, "rouge_l": 0.6363636363636364}
{"id": 4452, "predictions": ["\u2581// \u2581Verify Message Consumer Raw \u2581validates \u2581a \u2581message \u2581and \u2581returns \u2581a \u2581JSON \u2581representation \u2581of \u2581// \u2581the \u2581message ."], "references": ["\u2581// \u2581Verify Message Consumer Raw \u2581creates \u2581a \u2581new \u2581 Pact \u2581 _ message _ \u2581interaction \u2581to \u2581build \u2581a \u2581 test able \u2581// \u2581interaction . \u2581// \u2581// \u2581// \u2581 A \u2581"], "bleu": 0.14549879798120413, "rouge_l": 0.3588235294117647}
{"id": 6087, "predictions": ["\u2581// \u2581parse DataType \u2581parses \u2581the \u2581 data \u2581 data \u2581from \u2581a \u2581 path ."], "references": ["\u2581// \u2581Parse \u2581 data \u2581 type \u2581in \u2581context"], "bleu": 0.17395797375642236, "rouge_l": 0.3824451410658307}
{"id": 5424, "predictions": ["\u2581// \u2581fix M angle d MediaType \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 media \u2581 type \u2581 type ."], "references": ["\u2581// \u2581fix M angle d MediaType \u2581is \u2581used \u2581to \u2581 insert \u2581 ; \u2581separators \u2581into \u2581 media \u2581 type \u2581strings \u2581that \u2581lack \u2581them , \u2581and \u2581// \u2581 remove \u2581repeated \u2581parameters"], "bleu": 0.24280273437541844, "rouge_l": 0.4707395498392284}
{"id": 4928, "predictions": ["\u2581// \u2581 getStage \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581node ' s \u2581 data ."], "references": ["\u2581// \u2581Returns \u2581the \u2581current \u2581stage \u2581in \u2581the \u2581\" daemon ization \u2581process \", \u2581that ' s \u2581kept \u2581in \u2581// \u2581an \u2581environment \u2581variable . \u2581The \u2581variable \u2581is \u2581 instrumented \u2581with \u2581a \u2581"], "bleu": 0.052414685822650756, "rouge_l": 0.2515463917525773}
{"id": 5423, "predictions": ["\u2581// \u2581parse MediaType \u2581returns \u2581a \u2581 type \u2581 type \u2581from \u2581a \u2581 media \u2581 type ."], "references": ["\u2581// \u2581parse MediaType \u2581is \u2581a \u2581more \u2581 tolerant \u2581implementation \u2581of \u2581Go ' s \u2581 mime . Parse MediaType \u2581function ."], "bleu": 0.1325988138590531, "rouge_l": 0.3812499999999999}
{"id": 6010, "predictions": ["\u2581// \u2581 Pad Frame Range \u2581 Pad \u2581pad s \u2581the \u2581given \u2581string \u2581to \u2581the \u2581given \u2581 length . \u2581// \u2581If \u2581the \u2581 length \u2581is \u2581not \u2581 empty , \u2581the \u2581"], "references": ["\u2581// \u2581 Pad Frame Range \u2581takes \u2581a \u2581frame \u2581range \u2581string \u2581and \u2581returns \u2581a \u2581// \u2581new \u2581range \u2581with \u2581each \u2581number \u2581padded \u2581out \u2581with \u2581 zeros \u2581to \u2581a \u2581given \u2581 width"], "bleu": 0.18391565202644336, "rouge_l": 0.3060200668896321}
{"id": 5532, "predictions": ["\u2581// \u2581step 2 a \u2581converts \u2581a \u2581 set \u2581of \u2581words \u2581to \u2581a \u2581 lower - case d \u2581word ."], "references": ["\u2581// \u2581 Step \u2581 2 a \u2581is \u2581the \u2581removal \u2581of \u2581 Verb \u2581 suffixes \u2581beginning \u2581// \u2581with \u2581\" i \" \u2581in \u2581the \u2581 RV \u2581region . \u2581//"], "bleu": 0.07108744502535716, "rouge_l": 0.25293711126468554}
{"id": 5365, "predictions": ["\u2581// \u2581 Map From Cascade Properties \u2581converts \u2581 map \u2581 data \u2581into \u2581a \u2581 map \u2581of \u2581 type \u2581 doc ."], "references": ["\u2581// \u2581If \u2581you \u2581need \u2581to , \u2581you \u2581can \u2581use \u2581 this \u2581to \u2581construct \u2581the \u2581 data \u2581 map \u2581that \u2581will \u2581be \u2581 cascade d \u2581down \u2581to \u2581// \u2581related \u2581documents ."], "bleu": 0.07254514305841674, "rouge_l": 0.3040498442367601}
{"id": 4847, "predictions": ["\u2581// \u2581check IP \u2581returns \u2581the \u2581 ip \u2581address \u2581of \u2581the \u2581given \u2581 IP \u2581address ."], "references": ["\u2581// \u2581 get \u2581 IP \u2581 type \u2581and \u2581calculate \u2581 IP \u2581number ; \u2581calculates \u2581index \u2581too \u2581if \u2581 exists"], "bleu": 0.09860814573660683, "rouge_l": 0.28800755429650615}
{"id": 4480, "predictions": ["\u2581// \u2581 put Part \u2581appends \u2581the \u2581 contents \u2581of \u2581the \u2581 model \u2581to \u2581the \u2581 model ."], "references": ["\u2581// \u2581 uploads \u2581a \u2581part , \u2581checking \u2581the \u2581etag \u2581against \u2581the \u2581calculated \u2581value"], "bleu": 0.10802314890908067, "rouge_l": 0.2732362821948488}
{"id": 4225, "predictions": ["\u2581// \u2581 Actual \u2581 set \u2581the \u2581 InstanceGroup s \u2581and \u2581returns \u2581the \u2581 cloud . Cluster \u2581object ."], "references": ["\u2581// \u2581 Actual \u2581is \u2581used \u2581to \u2581build \u2581a \u2581cluster \u2581based \u2581on \u2581instances \u2581on \u2581the \u2581 cloud \u2581provider ."], "bleu": 0.18951629567590744, "rouge_l": 0.3888888888888889}
{"id": 5766, "predictions": ["\u2581// \u2581 type FieldName \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581 type \u2581 type ."], "references": ["\u2581// \u2581 type FieldName \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581field \u2581at \u2581offset \u2581off \u2581in \u2581 t ."], "bleu": 0.419468515826214, "rouge_l": 0.6111111111111113}
{"id": 4827, "predictions": ["\u2581// \u2581 Write Usage \u2581writes \u2581the \u2581usage \u2581of \u2581the \u2581 contents \u2581of \u2581the \u2581command \u2581to \u2581the \u2581// \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Write Usage \u2581writes \u2581usage \u2581information \u2581to \u2581the \u2581given \u2581writer"], "bleu": 0.28320384389628495, "rouge_l": 0.6808035714285715}
{"id": 4445, "predictions": ["\u2581// \u2581match \u2581returns \u2581a \u2581matcher \u2581that \u2581matches \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581match \u2581recursively \u2581traverse s \u2581the \u2581provided \u2581 type \u2581and \u2581outputs \u2581a \u2581// \u2581matcher \u2581string \u2581for \u2581it \u2581that \u2581is \u2581compatible \u2581with \u2581the \u2581 Pact \u2581 dsl ."], "bleu": 0.05858452194935042, "rouge_l": 0.38364779874213834}
{"id": 5451, "predictions": ["\u2581// \u2581 Format Part \u2581writes \u2581a \u2581 byte \u2581 slice \u2581to \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Format Part \u2581pretty \u2581prints \u2581the \u2581 Part \u2581tree"], "bleu": 0.21042990347620458, "rouge_l": 0.3885350318471337}
{"id": 5804, "predictions": ["\u2581// \u2581reverse \u2581reverse s \u2581the \u2581 dom ."], "references": ["\u2581// \u2581reverse \u2581computes \u2581and \u2581stores \u2581reverse \u2581edges \u2581for \u2581each \u2581vertex ."], "bleu": 0.16481400866629634, "rouge_l": 0.4093959731543625}
{"id": 4155, "predictions": ["\u2581// \u2581Get Cors Info \u2581returns \u2581request \u2581 headers \u2581for \u2581 Cors - Control"], "references": ["\u2581// \u2581Get Cors Info \u2581 derive s \u2581 Cors Info \u2581from \u2581 Request ."], "bleu": 0.29274144538476715, "rouge_l": 0.5150784077201447}
{"id": 4221, "predictions": ["\u2581// \u2581fetch Offsets \u2581retrieves \u2581the \u2581cached \u2581offsets \u2581for \u2581the \u2581given \u2581 map ."], "references": ["\u2581// \u2581Fetches \u2581latest \u2581committed \u2581offsets \u2581for \u2581all \u2581 subscriptions"], "bleu": 0.14283632578659286, "rouge_l": 0.37596302003081655}
{"id": 4838, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581a \u2581leaf \u2581node \u2581from \u2581the \u2581tree ."], "references": ["\u2581// \u2581 Delete \u2581is \u2581used \u2581to \u2581delete \u2581a \u2581 key , \u2581returning \u2581the \u2581previous \u2581// \u2581value \u2581and \u2581if \u2581it \u2581was \u2581deleted"], "bleu": 0.09452753864466681, "rouge_l": 0.29582929194956353}
{"id": 5537, "predictions": ["\u2581// \u2581step 5 \u2581computes \u2581the \u2581 5 \u2581checksum \u2581of \u2581the \u2581 v 2 \u2581checksum \u2581word ."], "references": ["\u2581// \u2581 Step \u2581 5 \u2581is \u2581the \u2581 stem m ing \u2581of \u2581\" e \" \u2581and \u2581\" l \" \u2581 suff i c ies \u2581// \u2581found \u2581in \u2581 R 2."], "bleu": 0.05772316055978617, "rouge_l": 0.24729729729729732}
{"id": 5524, "predictions": ["\u2581// \u2581step 3 \u2581 translate s \u2581the \u2581 s now ation \u2581mode \u2581of \u2581a \u2581 v 2 \u2581 format \u2581to \u2581a \u2581 3 - style \u2581file ."], "references": ["\u2581// \u2581 Step \u2581 3 \u2581is \u2581the \u2581 stem m ing \u2581of \u2581various \u2581longer \u2581 suff i c ies \u2581// \u2581found \u2581in \u2581 R 1. \u2581//"], "bleu": 0.08839374326825923, "rouge_l": 0.26505276225946617}
{"id": 5563, "predictions": ["\u2581// \u2581step 1 a \u2581returns \u2581true \u2581if \u2581the \u2581 2 d \u2581 data \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Step \u2581 1 a \u2581is \u2581normalization \u2581of \u2581various \u2581special \u2581\" s \" - endings . \u2581//"], "bleu": 0.11416845809894884, "rouge_l": 0.29103053435114506}
{"id": 5811, "predictions": ["\u2581// \u2581Create \u2581a \u2581new \u2581 B tr fs Filesystem"], "references": ["\u2581// \u2581 lower \u2581your \u2581 expectations"], "bleu": 0.15619699684601276, "rouge_l": 0.27664399092970515}
{"id": 5627, "predictions": ["\u2581// \u2581 Log With Time \u2581 wraps \u2581the \u2581given \u2581 Writer \u2581with \u2581the \u2581given \u2581parameters ."], "references": ["\u2581// \u2581 Log With Time \u2581will \u2581log \u2581a \u2581message \u2581at \u2581the \u2581provided \u2581level \u2581to \u2581all \u2581added \u2581logger s \u2581with \u2581the \u2581timestamp \u2581 set \u2581to \u2581the \u2581// \u2581value \u2581of \u2581 ts"], "bleu": 0.1430462819193642, "rouge_l": 0.32972972972972975}
{"id": 4740, "predictions": ["\u2581// \u2581Get Presence Multi \u2581returns \u2581a \u2581list \u2581of \u2581 Bulk Presence s \u2581for \u2581the \u2581given \u2581// \u2581string ."], "references": ["\u2581// \u2581Get Presence Multi \u2581retrieves \u2581multiple \u2581users ' \u2581presence . \u2581// \u2581If \u2581the \u2581from \u2581address \u2581is \u2581an \u2581 empty \u2581string \u2581the \u2581default \u2581// \u2581 ( your app @ app spot"], "bleu": 0.11571093510524211, "rouge_l": 0.2790849673202615}
{"id": 5454, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 EOF \u2581in \u2581the \u2581 torrent ."], "references": ["\u2581// \u2581 Next \u2581moves \u2581over \u2581the \u2581boundary \u2581to \u2581the \u2581next \u2581part , \u2581returns \u2581true \u2581if \u2581there \u2581is \u2581another \u2581part \u2581to \u2581be \u2581read ."], "bleu": 0.10841743191378198, "rouge_l": 0.31743278404163056}
{"id": 4857, "predictions": ["\u2581// \u2581 Vertical Flip \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 left \u2581 path ."], "references": ["\u2581// \u2581Returns \u2581new \u2581 Path \u2581with \u2581 flipped \u2581 y \u2581axes"], "bleu": 0.10343603005129705, "rouge_l": 0.3164721141374838}
{"id": 4575, "predictions": ["\u2581// \u2581 New Default Server \u2581returns \u2581a \u2581new \u2581 Server ."], "references": ["\u2581// \u2581 New Default Server \u2581is \u2581like \u2581 NewServer , \u2581but \u2581we \u2581take \u2581care \u2581of \u2581creating \u2581a \u2581// \u2581mesh . Router \u2581and \u2581mesh conn . Peer \u2581for \u2581you , \u2581with"], "bleu": 0.08208226190540568, "rouge_l": 0.3151291512915129}
{"id": 4698, "predictions": ["\u2581// \u2581 Queue Stats \u2581returns \u2581the \u2581 oldest \u2581queue \u2581for \u2581a \u2581 set \u2581of \u2581 active \u2581 Engine ."], "references": ["\u2581// \u2581 Queue Stats \u2581retrieves \u2581statistics \u2581about \u2581queues ."], "bleu": 0.18759202316167212, "rouge_l": 0.3817271589486859}
{"id": 4798, "predictions": ["\u2581// \u2581 Allocate IDs \u2581returns \u2581a \u2581 slice \u2581of \u2581 data \u2581from \u2581the \u2581 type \u2581of \u2581 type \u2581 set ."], "references": ["\u2581// \u2581 Allocate IDs \u2581returns \u2581a \u2581range \u2581of \u2581 n \u2581integer \u2581 IDs \u2581with \u2581the \u2581given \u2581 kind \u2581and \u2581parent \u2581// \u2581combination . \u2581 kind \u2581cannot \u2581be \u2581 empty ;"], "bleu": 0.2154379580445169, "rouge_l": 0.45607476635514016}
{"id": 5939, "predictions": ["\u2581// \u2581 Root Tracer \u2581returns \u2581a \u2581middleware \u2581that \u2581serves \u2581the \u2581 headers \u2581to \u2581 filter"], "references": ["\u2581// \u2581 Root Tracer \u2581is \u2581a \u2581middleware \u2581that \u2581can \u2581be \u2581used \u2581to \u2581create \u2581root \u2581 trace \u2581 span \u2581for \u2581an \u2581// \u2581incoming \u2581request ."], "bleu": 0.1819747511129052, "rouge_l": 0.44309927360774815}
{"id": 5499, "predictions": ["\u2581// \u2581read Ext Times \u2581reads \u2581the \u2581 contents \u2581of \u2581the \u2581file \u2581and \u2581returns \u2581the \u2581number \u2581of \u2581// \u2581 data \u2581in \u2581the \u2581file ."], "references": ["\u2581// \u2581read Ext Times \u2581reads \u2581and \u2581parses \u2581the \u2581optional \u2581extra \u2581time \u2581field \u2581from \u2581the \u2581file \u2581header ."], "bleu": 0.23606740829164724, "rouge_l": 0.5139005897219882}
{"id": 5361, "predictions": ["\u2581// \u2581 Paginate \u2581runs \u2581the \u2581 pagination \u2581 page \u2581and \u2581 status \u2581of \u2581the \u2581results ."], "references": ["\u2581// \u2581Set \u2581skip \u2581+ \u2581limit \u2581on \u2581the \u2581current \u2581query \u2581and \u2581generates \u2581a \u2581 Pagination Info \u2581struct \u2581with \u2581 info \u2581for \u2581your \u2581front \u2581end"], "bleu": 0.06536374500548343, "rouge_l": 0.19869706840390877}
{"id": 5846, "predictions": ["\u2581// \u2581tasks \u2581runs \u2581the \u2581 Project \u2581to \u2581 test \u2581 data \u2581for \u2581the \u2581project ."], "references": ["\u2581// \u2581 Project \u2581is \u2581local \u2581project ."], "bleu": 0.14247788801610148, "rouge_l": 0.4864433811802232}
{"id": 5435, "predictions": ["\u2581// \u2581setup Headers \u2581adds \u2581the \u2581 Content - Type \u2581header \u2581to \u2581the \u2581request \u2581 body ."], "references": ["\u2581// \u2581setup Headers \u2581reads \u2581the \u2581header , \u2581then \u2581populate s \u2581the \u2581 MIME \u2581header \u2581values \u2581for \u2581 this \u2581 Part ."], "bleu": 0.14153323111745833, "rouge_l": 0.42214532871972316}
{"id": 6105, "predictions": ["\u2581// \u2581 List \u2581all \u2581instances \u2581of \u2581a \u2581 container"], "references": ["\u2581// \u2581Makes \u2581a \u2581 GET \u2581 call \u2581on \u2581the \u2581given \u2581server \u2581array \u2581and \u2581returns \u2581all \u2581its \u2581current \u2581instances ."], "bleu": 0.07557444220890304, "rouge_l": 0.2684268426842684}
{"id": 4904, "predictions": ["\u2581// \u2581 Cubic Curve \u2581computes \u2581the \u2581 multiplication \u2581of \u2581the \u2581 x \u2581and \u2581 y ."], "references": ["\u2581// \u2581 Cubic Curve \u2581draw s \u2581a \u2581 cubic \u2581curve \u2581with \u2581its \u2581control \u2581points ."], "bleu": 0.23287896954139942, "rouge_l": 0.3893617021276596}
{"id": 4127, "predictions": ["\u2581// \u2581 Grant \u2581 grants \u2581a \u2581user \u2581to \u2581a \u2581team ."], "references": ["\u2581// \u2581 Grant \u2581allows \u2581a \u2581team \u2581to \u2581have \u2581access \u2581to \u2581an \u2581 app . \u2581It \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581// \u2581team \u2581already \u2581have \u2581access \u2581to \u2581the \u2581 app ."], "bleu": 0.049600265336077476, "rouge_l": 0.3151291512915129}
{"id": 4840, "predictions": ["\u2581// \u2581delete Prefix \u2581removes \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581node \u2581and \u2581removes \u2581it \u2581from \u2581the \u2581// \u2581 top - level \u2581 table ."], "references": ["\u2581// \u2581delete \u2581does \u2581a \u2581recursive \u2581deletion"], "bleu": 0.06667489966054595, "rouge_l": 0.14950980392156862}
{"id": 5370, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581client \u2581for \u2581the \u2581 container ."], "references": ["\u2581// \u2581 NewClient \u2581 establish es \u2581a \u2581new \u2581 Client \u2581connection \u2581based \u2581on \u2581a \u2581 set \u2581of \u2581 Options ."], "bleu": 0.1268779105584255, "rouge_l": 0.41862745098039217}
{"id": 4256, "predictions": ["\u2581// \u2581 Delete \u2581returns \u2581a \u2581new \u2581cluster \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581resource ."], "references": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581 firewall"], "bleu": 0.16943571815930883, "rouge_l": 0.4864433811802232}
{"id": 5574, "predictions": ["\u2581// \u2581Get Tags \u2581returns \u2581a \u2581list \u2581of \u2581tags \u2581for \u2581a \u2581given \u2581string"], "references": ["\u2581// \u2581Get Tags \u2581returns \u2581a \u2581 slice \u2581of \u2581 Tags , \u2581that \u2581is \u2581all \u2581characters \u2581after \u2581rune \u2581char \u2581up \u2581// \u2581to \u2581occurrence \u2581of \u2581space \u2581or \u2581another \u2581occurrence \u2581of \u2581rune \u2581char"], "bleu": 0.08825539821705701, "rouge_l": 0.26521739130434785}
{"id": 5491, "predictions": ["\u2581// \u2581 get States \u2581 get \u2581the \u2581state \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 slice \u2581of \u2581 data ."], "references": ["\u2581// \u2581 shrink States \u2581 shrink s \u2581the \u2581state \u2581list \u2581down \u2581to \u2581 size \u2581states"], "bleu": 0.12217114537124342, "rouge_l": 0.4105769230769231}
{"id": 5518, "predictions": ["\u2581// \u2581step 6 \u2581calculates \u2581the \u2581 set \u2581of \u2581words \u2581for \u2581the \u2581given \u2581word ."], "references": ["\u2581// \u2581 Step \u2581 6 \u2581 Un - accent \u2581//"], "bleu": 0.10511846841633776, "rouge_l": 0.2577464788732394}
{"id": 4195, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581a \u2581 HandlerFunc \u2581and \u2581returns \u2581a \u2581 HandlerFunc \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581response \u2581 status ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Status Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.1447953615777742, "rouge_l": 0.41391009329940626}
{"id": 4956, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581 key \u2581from \u2581the \u2581 C ed ar \u2581 key ."], "references": ["\u2581// \u2581 Delete \u2581removes \u2581a \u2581 key - value \u2581pair \u2581from \u2581the \u2581 c ed ar . \u2581// \u2581It \u2581will \u2581return \u2581 ErrNo Path , \u2581if \u2581the \u2581 key \u2581has"], "bleu": 0.1705396134667248, "rouge_l": 0.5358108108108108}
{"id": 6015, "predictions": ["\u2581// \u2581 End \u2581returns \u2581the \u2581end \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 End \u2581returns \u2581the \u2581end \u2581of \u2581the \u2581range . \u2581This \u2581value \u2581may \u2581// \u2581be \u2581different \u2581from \u2581the \u2581end \u2581value \u2581given \u2581when \u2581the \u2581// \u2581range \u2581was \u2581first \u2581initialized , \u2581since"], "bleu": 0.1296390067599724, "rouge_l": 0.40516605166051656}
{"id": 5399, "predictions": ["\u2581// \u2581parse Text Only Body \u2581parses \u2581the \u2581 content \u2581of \u2581the \u2581 body \u2581and \u2581returns \u2581the \u2581 body \u2581// \u2581of \u2581the \u2581 body ."], "references": ["\u2581// \u2581parse Text Only Body \u2581parses \u2581a \u2581 plain \u2581 text \u2581message \u2581in \u2581root \u2581that \u2581has \u2581 MIME - like \u2581 headers , \u2581but \u2581// \u2581only \u2581 contains \u2581a \u2581single"], "bleu": 0.20438148989775537, "rouge_l": 0.3994047619047618}
{"id": 5402, "predictions": ["\u2581// \u2581ensure \u2581that \u2581primitive Addresses \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581// \u2581checks \u2581the \u2581 name \u2581of \u2581the \u2581 name \u2581and \u2581the \u2581 name \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581 Used \u2581by \u2581 Address List \u2581to \u2581ensure \u2581that \u2581address \u2581lists \u2581are \u2581properly \u2581 delimited"], "bleu": 0.06792376439547665, "rouge_l": 0.1875480399692544}
{"id": 5655, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Stack Driver ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581 Stack driver Hook \u2581using \u2581the \u2581provided \u2581options \u2581that \u2581is \u2581 suit ible \u2581// \u2581for \u2581using \u2581with \u2581logrus \u2581for \u2581logging \u2581to \u2581Google \u2581 Stack driver"], "bleu": 0.09550686224708844, "rouge_l": 0.30942028985507253}
{"id": 6047, "predictions": ["\u2581// \u2581 Unmarshal XML \u2581unmarshal s \u2581a \u2581 body \u2581from \u2581a \u2581 body . xml . xml ."], "references": ["\u2581// \u2581 Unmarshal XML \u2581unmarshal \u2581 SOAP Body"], "bleu": 0.2592170537135687, "rouge_l": 0.4959349593495934}
{"id": 4326, "predictions": ["\u2581// \u2581 explain Group \u2581prints \u2581a \u2581 group \u2581of \u2581 group \u2581 name \u2581and \u2581 name \u2581to \u2581a \u2581 group ."], "references": ["\u2581// \u2581 explain Group \u2581 explain s \u2581all \u2581the \u2581 subcommands \u2581for \u2581a \u2581particular \u2581 group ."], "bleu": 0.23418123261847468, "rouge_l": 0.5364995602462621}
{"id": 4325, "predictions": ["\u2581// \u2581 explain \u2581writes \u2581the \u2581 contents \u2581of \u2581the \u2581 clipboard \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 explain \u2581prints \u2581a \u2581 brief \u2581 description \u2581of \u2581all \u2581the \u2581 subcommands \u2581and \u2581the \u2581// \u2581important \u2581 top - level \u2581flags ."], "bleu": 0.11733516978652929, "rouge_l": 0.4343354430379746}
{"id": 4484, "predictions": ["\u2581// \u2581 Process \u2581 loads \u2581the \u2581 data \u2581from \u2581the \u2581environment \u2581and \u2581returns \u2581the \u2581 set \u2581of \u2581tags"], "references": ["\u2581// \u2581 Process \u2581populate s \u2581the \u2581specified \u2581struct \u2581based \u2581on \u2581environment \u2581variables"], "bleu": 0.14025775160081475, "rouge_l": 0.34580498866213155}
{"id": 5706, "predictions": ["\u2581// \u2581 Decode \u2581decodes \u2581the \u2581 data \u2581into \u2581a \u2581 Decoder ."], "references": ["\u2581// \u2581 Decode \u2581expects \u2581 v \u2581to \u2581be \u2581a \u2581pointer \u2581to \u2581a \u2581value \u2581in \u2581which \u2581the \u2581decoder \u2581will \u2581load \u2581// \u2581the \u2581next \u2581parsed \u2581 data . \u2581// \u2581// \u2581The \u2581method"], "bleu": 0.05830441645253641, "rouge_l": 0.30942028985507253}
{"id": 5496, "predictions": ["\u2581// \u2581calc A es in Params \u2581returns \u2581a \u2581 slice \u2581of \u2581 byte \u2581 slice \u2581of \u2581 data \u2581that \u2581are \u2581 decrypted \u2581// \u2581with \u2581a \u2581 key \u2581and \u2581 key"], "references": ["\u2581// \u2581Calculates \u2581the \u2581 key \u2581and \u2581 iv \u2581for \u2581 AES \u2581 decryption \u2581given \u2581a \u2581password \u2581and \u2581salt ."], "bleu": 0.13004800471424346, "rouge_l": 0.297768479776848}
{"id": 5805, "predictions": ["\u2581// \u2581calc Size \u2581 increments \u2581the \u2581 size \u2581of \u2581a \u2581process ."], "references": ["\u2581// \u2581calc Size \u2581calculates \u2581the \u2581total \u2581 retained \u2581 size \u2581for \u2581each \u2581vertex ."], "bleu": 0.21543754406384827, "rouge_l": 0.5310945273631842}
{"id": 5468, "predictions": ["\u2581// \u2581calc Keys \u2581 - \u2581 min \u2581 keys \u2581and \u2581password"], "references": ["\u2581// \u2581calc Keys 50 \u2581calculates \u2581the \u2581 keys \u2581used \u2581in \u2581 R AR \u2581 5 \u2581archive \u2581processing . \u2581// \u2581The \u2581returned \u2581 slice \u2581of \u2581 byte \u2581slices \u2581 contains \u2581"], "bleu": 0.0481610413903312, "rouge_l": 0.2701107011070111}
{"id": 4592, "predictions": ["\u2581// \u2581 On Gossip \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 gossip \u2581 data \u2581for \u2581the \u2581 gossip \u2581 Gossip"], "references": ["\u2581// \u2581 On Gossip \u2581should \u2581return \u2581\" everything \u2581new \u2581 I ' ve \u2581just \u2581 learn t \" . \u2581// \u2581 surrogate Gossip er \u2581doesn ' t \u2581understand \u2581the \u2581"], "bleu": 0.13278909006097422, "rouge_l": 0.34746835443037977}
{"id": 4905, "predictions": ["\u2581// \u2581 Fill Stroke \u2581 fill s \u2581the \u2581 stroke \u2581 stroke"], "references": ["\u2581// \u2581 Fill Stroke \u2581first \u2581fills \u2581and \u2581afterwards \u2581 stroke s \u2581a \u2581 path ."], "bleu": 0.2758277772476023, "rouge_l": 0.5083333333333334}
{"id": 4474, "predictions": ["\u2581// \u2581 Instance Keys \u2581returns \u2581the \u2581 keys \u2581of \u2581the \u2581 role \u2581in \u2581the \u2581 cloud ."], "references": ["\u2581// \u2581 Instance Keys \u2581 Requests \u2581the \u2581AWS \u2581 keys \u2581from \u2581the \u2581instance - based \u2581metadata \u2581on \u2581 EC 2 \u2581// \u2581Assumes \u2581only \u2581one \u2581 IAM \u2581 role ."], "bleu": 0.13948178143449966, "rouge_l": 0.45677331518039477}
{"id": 5759, "predictions": ["\u2581// \u2581read \u2581 data \u2581from \u2581 core . Process ."], "references": ["\u2581// \u2581read \u2581parses \u2581a \u2581pc tab \u2581from \u2581the \u2581 core \u2581file \u2581at \u2581address \u2581 data ."], "bleu": 0.1425009109605729, "rouge_l": 0.44309927360774815}
{"id": 5589, "predictions": ["\u2581// \u2581Generate E KeyPair \u2581generates \u2581a \u2581 key \u2581for \u2581a \u2581 key ."], "references": ["\u2581// \u2581Generate E KeyPair \u2581returns \u2581an \u2581 ephemeral \u2581public \u2581 key \u2581and \u2581returns \u2581a \u2581function \u2581that \u2581will \u2581compute \u2581// \u2581the \u2581shared \u2581 secret \u2581 key . \u2581 Used \u2581in \u2581the"], "bleu": 0.10822068909767886, "rouge_l": 0.43416370106761565}
{"id": 6054, "predictions": ["\u2581// \u2581 Analyze d \u2581renders \u2581a \u2581 Document \u2581with \u2581the \u2581given \u2581version \u2581and \u2581version ."], "references": ["\u2581// \u2581 Analyze d \u2581creates \u2581a \u2581new \u2581 analyzed \u2581spec \u2581document"], "bleu": 0.2490328638846773, "rouge_l": 0.4747081712062256}
{"id": 6008, "predictions": ["\u2581// \u2581load Recursive \u2581walk s \u2581all \u2581files \u2581in \u2581the \u2581given \u2581paths ."], "references": ["\u2581// \u2581 Parallel \u2581walk \u2581the \u2581root \u2581paths \u2581and \u2581populate \u2581the \u2581 path \u2581// \u2581channel \u2581for \u2581the \u2581worker \u2581routine s \u2581to \u2581 consume ."], "bleu": 0.05682532314083884, "rouge_l": 0.2703900709219858}
{"id": 4876, "predictions": ["\u2581// \u2581 Trace Quad \u2581returns \u2581the \u2581 quad \u2581 quad \u2581 text \u2581in \u2581the \u2581 Line r ."], "references": ["\u2581// \u2581 Trace Quad \u2581generate \u2581lines \u2581sub div id ing \u2581the \u2581curve \u2581using \u2581a \u2581 Line r \u2581// \u2581flatten ing _ threshold \u2581help s \u2581determines \u2581the \u2581flatten ing \u2581 expectation"], "bleu": 0.14092241382939683, "rouge_l": 0.3189542483660131}
{"id": 4578, "predictions": ["\u2581// \u2581 New Router \u2581creates \u2581a \u2581new \u2581 router \u2581with \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 New Router \u2581returns \u2581a \u2581new \u2581 router . \u2581It \u2581must \u2581be \u2581started ."], "bleu": 0.393755531055134, "rouge_l": 0.6}
{"id": 4693, "predictions": ["\u2581// \u2581 Delete Multi \u2581deletes \u2581a \u2581task \u2581by \u2581 name"], "references": ["\u2581// \u2581 Delete Multi \u2581deletes \u2581multiple \u2581tasks \u2581from \u2581a \u2581named \u2581queue . \u2581// \u2581If \u2581a \u2581given \u2581task \u2581could \u2581not \u2581be \u2581deleted , \u2581an \u2581 appengine . Multi Error \u2581is \u2581returned"], "bleu": 0.06915573170477486, "rouge_l": 0.3669172932330827}
{"id": 4736, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 slack \u2581server ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message . \u2581// \u2581If \u2581any \u2581failures \u2581occur \u2581with \u2581specific \u2581 recipients , \u2581the \u2581error \u2581will \u2581be \u2581an \u2581 appengine . Multi Error ."], "bleu": 0.13555223461271698, "rouge_l": 0.41972477064220187}
{"id": 4246, "predictions": ["\u2581// \u2581 GetConfig Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581 Kubernetes \u2581 config"], "references": ["\u2581// \u2581 GetConfig Cmd \u2581represents \u2581the \u2581 apply \u2581command"], "bleu": 0.29256127307315066, "rouge_l": 0.6335311572700296}
{"id": 4240, "predictions": ["\u2581// \u2581 Deploy Controller Cmd \u2581returns \u2581a \u2581 Command \u2581command \u2581for \u2581 controller \u2581 controller"], "references": ["\u2581// \u2581 Deploy Controller Cmd \u2581represents \u2581the \u2581 apply \u2581command"], "bleu": 0.3237722713145643, "rouge_l": 0.580952380952381}
{"id": 5695, "predictions": ["\u2581// \u2581 Encode Map \u2581encodes \u2581a \u2581 map \u2581of \u2581 Encoder \u2581to \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode Map \u2581provides \u2581the \u2581implementation \u2581of \u2581the \u2581 map \u2581encoding \u2581algorithm , \u2581where \u2581 n \u2581// \u2581is \u2581the \u2581number \u2581of \u2581elements \u2581in \u2581the \u2581 map , \u2581and \u2581"], "bleu": 0.1252997134629004, "rouge_l": 0.3588235294117647}
{"id": 5656, "predictions": ["\u2581// \u2581 Fire \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581 add \u2581a \u2581 set \u2581of \u2581messages \u2581to \u2581the \u2581// \u2581stack ."], "references": ["\u2581// \u2581 Fire \u2581writes \u2581the \u2581message \u2581to \u2581the \u2581 Stack driver \u2581entry \u2581service ."], "bleu": 0.13817790393734294, "rouge_l": 0.3556851311953353}
{"id": 4440, "predictions": ["\u2581// \u2581Find Port InRange \u2581returns \u2581the \u2581number \u2581of \u2581ports \u2581in \u2581the \u2581given \u2581string ."], "references": ["\u2581// \u2581Find Port InRange \u2581Iterate \u2581through \u2581CSV \u2581or \u2581 Range \u2581of \u2581ports \u2581to \u2581find \u2581open \u2581port \u2581// \u2581 Valid \u2581inputs \u2581are \u2581\" 808 1\", \u2581\" 808 1, 808 5\", \u2581\""], "bleu": 0.09023651198124501, "rouge_l": 0.2559440559440559}
{"id": 4250, "predictions": ["\u2581// \u2581 Edit Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 edit \u2581 edit \u2581command"], "references": ["\u2581// \u2581 Edit Cmd \u2581represents \u2581 edit \u2581command"], "bleu": 0.30620490882364876, "rouge_l": 0.6440422322775264}
{"id": 4977, "predictions": ["\u2581// \u2581 New Event Parser \u2581returns \u2581a \u2581new \u2581 Event \u2581stream \u2581from \u2581the \u2581given \u2581stream ."], "references": ["\u2581// \u2581 New Event StreamReader \u2581creates \u2581an \u2581instance \u2581of \u2581 Event StreamReader ."], "bleu": 0.2545984531673679, "rouge_l": 0.4919354838709677}
{"id": 5616, "predictions": ["\u2581// \u2581 Unmarshal Ed 25519 PrivateKey \u2581converts \u2581a \u2581 Ed 25519 \u2581private \u2581 key \u2581into \u2581a \u2581 Bitcoin 25519 \u2581private \u2581 key ."], "references": ["\u2581// \u2581 Unmarshal Ed 25519 PrivateKey \u2581returns \u2581a \u2581private \u2581 key \u2581from \u2581input \u2581bytes ."], "bleu": 0.3083012995502152, "rouge_l": 0.6017937219730942}
{"id": 4783, "predictions": ["\u2581// \u2581 Delete Multi \u2581deletes \u2581a \u2581 set \u2581of \u2581 items \u2581from \u2581the \u2581index ."], "references": ["\u2581// \u2581 Delete Multi \u2581deletes \u2581multiple \u2581documents \u2581from \u2581the \u2581index . \u2581// \u2581// \u2581The \u2581returned \u2581error \u2581may \u2581be \u2581an \u2581instance \u2581of \u2581 appengine . Multi Error , \u2581in \u2581which \u2581case"], "bleu": 0.18156979781518245, "rouge_l": 0.37731958762886597}
{"id": 4769, "predictions": ["\u2581// \u2581 ocsp Main \u2581 loads \u2581the \u2581 contents \u2581of \u2581the \u2581file \u2581and \u2581 write \u2581it \u2581to \u2581the \u2581// \u2581given \u2581 path ."], "references": ["\u2581// \u2581 synthesize Main \u2581generates \u2581a \u2581new \u2581main \u2581func \u2581and \u2581writes \u2581it \u2581to \u2581the \u2581 tarball ."], "bleu": 0.14071964689317512, "rouge_l": 0.4625105307497894}
{"id": 5203, "predictions": ["\u2581// \u2581 Coerce \u2581 this \u2581node ' s \u2581 children ."], "references": ["\u2581// \u2581 xpath \u2581builds \u2581the \u2581 xpath \u2581string ."], "bleu": 0.17033186037639278, "rouge_l": 0.4073455759599332}
{"id": 4200, "predictions": ["\u2581// \u2581 Fetch \u2581returns \u2581the \u2581 body \u2581of \u2581the \u2581 S 3 \u2581 key ."], "references": ["\u2581// \u2581 Fetch \u2581the \u2581binary \u2581from \u2581 S 3"], "bleu": 0.22894156860669912, "rouge_l": 0.6108726752503576}
{"id": 4206, "predictions": ["\u2581// \u2581 Fetch \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581file ."], "references": ["\u2581// \u2581 Fetch \u2581file \u2581from \u2581the \u2581specified \u2581 Path"], "bleu": 0.24384183193426084, "rouge_l": 0.5091819699499166}
{"id": 6084, "predictions": ["\u2581// \u2581setup Metadata \u2581returns \u2581the \u2581 set \u2581of \u2581 Actions \u2581that \u2581have \u2581 this \u2581 config ."], "references": ["\u2581// \u2581Initialize \u2581 Gen Metadata \u2581from \u2581each \u2581 SS \u2581API \u2581generated \u2581metadata"], "bleu": 0.09083627868206415, "rouge_l": 0.21353558926487748}
{"id": 4430, "predictions": ["\u2581// \u2581 User Login \u2581returns \u2581a \u2581user - side \u2581 login \u2581user ."], "references": ["\u2581// \u2581 User Login \u2581logs \u2581a \u2581user \u2581in , \u2581returning \u2581an \u2581 auth \u2581 token \u2581and \u2581the \u2581user \u2581object"], "bleu": 0.20522771238299164, "rouge_l": 0.483647175421209}
{"id": 4903, "predictions": ["\u2581// \u2581 Dash \u2581returns \u2581the \u2581 Dash \u2581 dash \u2581 product \u2581of \u2581the \u2581 dot d \u2581 box ."], "references": ["\u2581// \u2581 Dash \u2581draw s \u2581a \u2581line \u2581with \u2581a \u2581 dash \u2581pattern"], "bleu": 0.14253911354181859, "rouge_l": 0.33627342888643885}
{"id": 4112, "predictions": ["\u2581// \u2581Do \u2581will \u2581 write \u2581the \u2581 data \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581Do \u2581shutdown s \u2581 All \u2581registered \u2581 Shutdown able \u2581 items"], "bleu": 0.15537125692760353, "rouge_l": 0.3333333333333333}
{"id": 4813, "predictions": ["\u2581// \u2581 MarshalBinary Bare \u2581implements \u2581the \u2581encoding . Binary Marshaler \u2581interface \u2581for \u2581// \u2581 Codec ."], "references": ["\u2581// \u2581 MarshalBinary Bare \u2581encodes \u2581the \u2581object \u2581 o \u2581according \u2581to \u2581the \u2581 A min o \u2581spec . \u2581// \u2581 MarshalBinary Bare \u2581doesn ' t \u2581prefix \u2581the \u2581 byte -"], "bleu": 0.10930404136525158, "rouge_l": 0.32972972972972975}
{"id": 4488, "predictions": ["\u2581// \u2581 Usage f \u2581returns \u2581the \u2581usage \u2581of \u2581the \u2581 set \u2581of \u2581tags ."], "references": ["\u2581// \u2581 Usage f \u2581writes \u2581usage \u2581information \u2581to \u2581the \u2581specified \u2581io . Writer \u2581using \u2581the \u2581spec if ed \u2581template \u2581specification"], "bleu": 0.1856313221764489, "rouge_l": 0.39906542056074773}
{"id": 5338, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581a \u2581connection \u2581to \u2581the \u2581driver ."], "references": ["\u2581// \u2581 Open \u2581open s \u2581a \u2581connection"], "bleu": 0.6132297420585351, "rouge_l": 0.8102466793168881}
{"id": 4555, "predictions": ["\u2581// \u2581choose Short ID \u2581returns \u2581the \u2581 Peer Short ID \u2581of \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Choose \u2581an \u2581available \u2581short \u2581 ID \u2581at \u2581random ."], "bleu": 0.11114924776032006, "rouge_l": 0.3270777479892761}
{"id": 5416, "predictions": ["\u2581// \u2581 Encode \u2581writes \u2581the \u2581 Part \u2581of \u2581the \u2581 Part \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode \u2581writes \u2581 this \u2581 Part \u2581and \u2581all \u2581its \u2581 children \u2581to \u2581the \u2581specified \u2581writer \u2581in \u2581 MIME \u2581 format ."], "bleu": 0.18892503727877236, "rouge_l": 0.4773082942097027}
{"id": 4673, "predictions": ["\u2581// \u2581 Serving URL \u2581returns \u2581the \u2581 serving \u2581 api \u2581 URL \u2581for \u2581the \u2581given \u2581 container ."], "references": ["\u2581// \u2581 Serving URL \u2581returns \u2581a \u2581 URL \u2581that \u2581will \u2581serve \u2581an \u2581image \u2581from \u2581 Blobstore ."], "bleu": 0.2966090320349725, "rouge_l": 0.5169491525423728}
{"id": 4244, "predictions": ["\u2581// \u2581 Explain Cmd \u2581returns \u2581a \u2581 cobra \u2581command \u2581for \u2581 explain s \u2581the \u2581 explain s \u2581command ."], "references": ["\u2581// \u2581 Explain Cmd \u2581represents \u2581the \u2581 explain \u2581command"], "bleu": 0.24688498672025874, "rouge_l": 0.6107634543178974}
{"id": 6001, "predictions": ["\u2581// \u2581frame Range Matches \u2581returns \u2581a \u2581list \u2581of \u2581strings \u2581that \u2581match \u2581the \u2581given \u2581// \u2581string ."], "references": ["\u2581// \u2581frame Range Matches \u2581break s \u2581down \u2581the \u2581string \u2581frame \u2581range \u2581// \u2581into \u2581 groups \u2581of \u2581range \u2581matches , \u2581for \u2581further \u2581processing ."], "bleu": 0.16438111611833178, "rouge_l": 0.3477198697068404}
{"id": 4825, "predictions": ["\u2581// \u2581 Serve \u2581starts \u2581the \u2581server \u2581and \u2581serves \u2581the \u2581 handlers \u2581and \u2581 listen s \u2581on \u2581the \u2581listener ."], "references": ["\u2581// \u2581 Serve \u2581accepts \u2581an \u2581incoming \u2581 T EL NET \u2581client \u2581connection \u2581on \u2581the \u2581 net . Listener \u2581` listener `."], "bleu": 0.15013058019014866, "rouge_l": 0.34687246141348493}
{"id": 5446, "predictions": ["\u2581// \u2581 Wrap \u2581 wraps \u2581a \u2581 slice \u2581of \u2581strings \u2581and \u2581returns \u2581a \u2581 slice \u2581of \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Wrap \u2581builds \u2581a \u2581 byte \u2581 slice \u2581from \u2581str s , \u2581wrapping \u2581on \u2581word \u2581boundaries \u2581before \u2581max \u2581chars"], "bleu": 0.2314734800742452, "rouge_l": 0.3919678714859438}
{"id": 4196, "predictions": ["\u2581// \u2581Get Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 status \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581Get Status \u2581computes \u2581and \u2581returns \u2581a \u2581 Status \u2581object \u2581based \u2581on \u2581the \u2581request \u2581information s \u2581 accumulated \u2581// \u2581since \u2581the \u2581start \u2581of \u2581the \u2581process ."], "bleu": 0.11218442352161156, "rouge_l": 0.4652936689549962}
{"id": 5742, "predictions": ["\u2581// \u2581 Is Ptr \u2581returns \u2581true \u2581if \u2581the \u2581 type \u2581of \u2581 this \u2581 Process \u2581is \u2581a \u2581pointer \u2581to \u2581the \u2581// \u2581 slice \u2581of \u2581 keys ."], "references": ["\u2581// \u2581 Is Ptr \u2581reports \u2581whether \u2581the \u2581infer i or \u2581at \u2581address \u2581a \u2581 contains \u2581a \u2581pointer ."], "bleu": 0.157188773630212, "rouge_l": 0.4149659863945578}
{"id": 5487, "predictions": ["\u2581// \u2581 get V 3 Filter \u2581returns \u2581a \u2581 filter \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581 filter \u2581// \u2581 filter ."], "references": ["\u2581// \u2581 get V 3 Filter \u2581returns \u2581a \u2581 V 3 \u2581 filter \u2581function \u2581from \u2581a \u2581 code \u2581 byte \u2581 slice ."], "bleu": 0.40784428374394943, "rouge_l": 0.5980392156862746}
{"id": 5363, "predictions": ["\u2581// \u2581 parseJSON Delete With Config \u2581 modifies \u2581the \u2581 config \u2581 config \u2581for \u2581a \u2581 config ."], "references": ["\u2581// \u2581Runs \u2581a \u2581 cascade d \u2581delete \u2581operation \u2581with \u2581one \u2581configuration"], "bleu": 0.09629943614188137, "rouge_l": 0.21631205673758863}
{"id": 5899, "predictions": ["\u2581// \u2581Ensure Application \u2581creates \u2581a \u2581 cloud \u2581 key \u2581for \u2581the \u2581given \u2581 name \u2581and \u2581 key ."], "references": ["\u2581// \u2581Ensure Application \u2581will \u2581ensure \u2581that \u2581an \u2581application \u2581with \u2581the \u2581provided \u2581 name \u2581// \u2581 exists \u2581and \u2581returns \u2581its \u2581 key ."], "bleu": 0.17577406659435338, "rouge_l": 0.4911433172302737}
{"id": 4902, "predictions": ["\u2581// \u2581 Bubble \u2581 Bubble \u2581 Bubble \u2581 color"], "references": ["\u2581// \u2581 Bubble \u2581draw s \u2581a \u2581 text \u2581 ball o on ."], "bleu": 0.1864009928871988, "rouge_l": 0.4401154401154401}
{"id": 5891, "predictions": ["\u2581// \u2581 Callback \u2581adds \u2581a \u2581new \u2581 model \u2581to \u2581the \u2581queue ."], "references": ["\u2581// \u2581 Callback \u2581is \u2581a \u2581factory \u2581to \u2581create \u2581callbacks \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 enqueue \u2581jobs \u2581// \u2581during \u2581request \u2581processing ."], "bleu": 0.09994680606571214, "rouge_l": 0.33516483516483514}
{"id": 5986, "predictions": ["\u2581// \u2581 Load Exception s FromFile \u2581 loads \u2581all \u2581 templates \u2581from \u2581 filename ."], "references": ["\u2581// \u2581 Load Exception s FromFile \u2581 loads \u2581exceptions \u2581from \u2581a \u2581YAML \u2581file ."], "bleu": 0.539339630419803, "rouge_l": 0.6939704209328782}
{"id": 4450, "predictions": ["\u2581// \u2581state Handler Middleware \u2581is \u2581a \u2581handler \u2581that \u2581handles \u2581 handlers \u2581for \u2581a \u2581state ."], "references": ["\u2581// \u2581state Handler Middleware \u2581respond s \u2581to \u2581the \u2581various \u2581states \u2581that \u2581are \u2581// \u2581given \u2581during \u2581provider \u2581verification \u2581// \u2581// \u2581state handler \u2581accepts \u2581a \u2581state \u2581object \u2581from \u2581the \u2581 verifier \u2581and"], "bleu": 0.10315156032159929, "rouge_l": 0.2934707903780069}
{"id": 4989, "predictions": ["\u2581// \u2581 FromRequest \u2581returns \u2581the \u2581 IP \u2581address \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581 FromRequest \u2581return \u2581client ' s \u2581real \u2581public \u2581 IP \u2581address \u2581from \u2581http \u2581request \u2581 headers ."], "bleu": 0.18063707003030016, "rouge_l": 0.5147679324894514}
{"id": 4139, "predictions": ["\u2581// \u2581Set Env s \u2581sets \u2581the \u2581environment \u2581variables \u2581for \u2581the \u2581 app ."], "references": ["\u2581// \u2581Set Env s \u2581saves \u2581a \u2581list \u2581of \u2581environment \u2581variables \u2581in \u2581the \u2581 app ."], "bleu": 0.41511422636679984, "rouge_l": 0.7052023121387283}
{"id": 4633, "predictions": ["\u2581// \u2581 Delete Multi \u2581deletes \u2581a \u2581 key \u2581from \u2581the \u2581 memcache ."], "references": ["\u2581// \u2581 Delete Multi \u2581is \u2581a \u2581batch \u2581version \u2581of \u2581 Delete . \u2581// \u2581If \u2581any \u2581 keys \u2581cannot \u2581be \u2581found , \u2581an \u2581 appengine . Multi Error \u2581is \u2581returned ."], "bleu": 0.08327766790020474, "rouge_l": 0.3473309608540925}
{"id": 4814, "predictions": ["\u2581// \u2581 UnmarshalBinary Length Prefixed \u2581implements \u2581the \u2581encoding . Binary Length \u2581interface ."], "references": ["\u2581// \u2581 Like \u2581 UnmarshalBinary Bare , \u2581but \u2581will \u2581first \u2581 decode \u2581the \u2581 byte - length \u2581prefix . \u2581// \u2581 UnmarshalBinary Length Prefixed \u2581will \u2581panic \u2581if \u2581 ptr \u2581is"], "bleu": 0.1016776327105769, "rouge_l": 0.26049822064056943}
{"id": 5479, "predictions": ["\u2581// \u2581 Mode \u2581returns \u2581the \u2581mode \u2581of \u2581the \u2581 FileHeader ."], "references": ["\u2581// \u2581 Mode \u2581returns \u2581an \u2581os . FileMode \u2581for \u2581the \u2581file , \u2581calculated \u2581from \u2581the \u2581 Attributes \u2581field ."], "bleu": 0.18762309623060902, "rouge_l": 0.5088633993743482}
{"id": 6009, "predictions": ["\u2581// \u2581prepare Paths \u2581returns \u2581a \u2581list \u2581of \u2581paths \u2581that \u2581are \u2581 set \u2581to \u2581the \u2581given \u2581paths ."], "references": ["\u2581// \u2581Take \u2581a \u2581list \u2581of \u2581paths \u2581and \u2581 reduce \u2581them \u2581to \u2581cleaned \u2581// \u2581and \u2581unique \u2581paths . \u2581Return \u2581two \u2581slices , \u2581separated \u2581by \u2581// \u2581directory \u2581paths , \u2581and \u2581sequence \u2581patterns"], "bleu": 0.11767646173056052, "rouge_l": 0.36478405315614615}
{"id": 4873, "predictions": ["\u2581// \u2581new Group \u2581returns \u2581a \u2581new \u2581 group \u2581with \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581Creates \u2581new \u2581 group \u2581from \u2581current \u2581context \u2581// \u2581attach \u2581it \u2581to \u2581 svg \u2581and \u2581return"], "bleu": 0.15783291701520194, "rouge_l": 0.3293736501079914}
{"id": 5735, "predictions": ["\u2581// \u2581 Has Permission \u2581returns \u2581true \u2581if \u2581the \u2581 role \u2581is \u2581a \u2581permission \u2581of \u2581a \u2581permission"], "references": ["\u2581// \u2581 Has Permission \u2581check \u2581 roles \u2581has \u2581permission \u2581for \u2581mode \u2581or \u2581not"], "bleu": 0.23287896954139942, "rouge_l": 0.42165898617511516}
{"id": 5469, "predictions": ["\u2581// \u2581 getHost \u2581 - \u2581 get \u2581 keys \u2581from \u2581 data"], "references": ["\u2581// \u2581 getKeys \u2581reads \u2581 kdf count \u2581and \u2581salt \u2581from \u2581 b \u2581and \u2581returns \u2581the \u2581corresponding \u2581encryption \u2581 keys ."], "bleu": 0.10669118016346142, "rouge_l": 0.3588235294117647}
{"id": 4781, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581Get \u2581 loads \u2581the \u2581document \u2581with \u2581the \u2581given \u2581 ID \u2581into \u2581dst . \u2581// \u2581// \u2581The \u2581 ID \u2581is \u2581a \u2581human - readable \u2581ASCII \u2581string . \u2581It \u2581must \u2581be"], "bleu": 0.056788720057911184, "rouge_l": 0.30942028985507253}
{"id": 5765, "predictions": ["\u2581// \u2581 fieldName \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 get \u2581the \u2581 name \u2581of \u2581a \u2581 slice \u2581of \u2581 type \u2581// \u2581 A \u2581 table \u2581is \u2581a \u2581 type \u2581of"], "references": ["\u2581// \u2581 fieldName \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581field \u2581at \u2581offset \u2581off \u2581in \u2581 x ."], "bleu": 0.15465401249808575, "rouge_l": 0.3582966226138032}
{"id": 4957, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581version \u2581of \u2581the \u2581version ."], "references": ["\u2581// \u2581Set \u2581parses \u2581and \u2581updates \u2581 v \u2581from \u2581the \u2581given \u2581version \u2581string . \u2581 Implements \u2581flag . Value"], "bleu": 0.08126306442139648, "rouge_l": 0.34936998854524626}
{"id": 4919, "predictions": ["\u2581// \u2581 Draw \u2581draw s \u2581the \u2581 width \u2581and \u2581 y \u2581in \u2581the \u2581 dot ."], "references": ["\u2581// \u2581 Draw \u2581the \u2581image \u2581frame \u2581with \u2581certain \u2581parameters ."], "bleu": 0.15844501337268932, "rouge_l": 0.4013157894736842}
{"id": 5712, "predictions": ["\u2581// \u2581 Decode \u2581decodes \u2581the \u2581 data \u2581from \u2581the \u2581stream ."], "references": ["\u2581// \u2581Decodes \u2581the \u2581next \u2581value \u2581from \u2581the \u2581stream \u2581into \u2581 v ."], "bleu": 0.23021036988792515, "rouge_l": 0.5176803394625177}
{"id": 5958, "predictions": ["\u2581// \u2581 Timestamp Validator \u2581returns \u2581a \u2581 Callback \u2581that \u2581sets \u2581the \u2581timestamp \u2581// \u2581 set \u2581to \u2581the \u2581 model ."], "references": ["\u2581// \u2581 Timestamp Validator \u2581will \u2581 set \u2581timestamp \u2581fields \u2581on \u2581create \u2581and \u2581update \u2581operations . \u2581// \u2581The \u2581fields \u2581are \u2581 inferred \u2581from \u2581the \u2581 model \u2581using \u2581the \u2581\" fire -"], "bleu": 0.16772729053659155, "rouge_l": 0.42468354430379746}
{"id": 4419, "predictions": ["\u2581// \u2581 getUser \u2581retrieves \u2581a \u2581user \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 getUser \u2581finds \u2581a \u2581user"], "bleu": 0.27901593935858265, "rouge_l": 0.6545064377682404}
{"id": 5395, "predictions": ["\u2581// \u2581 Address List \u2581returns \u2581a \u2581list \u2581of \u2581 mail \u2581addresses \u2581for \u2581the \u2581envelope ."], "references": ["\u2581// \u2581 Address List \u2581returns \u2581a \u2581 mail . Address \u2581 slice \u2581with \u2581RFC \u2581 2047 \u2581encoded \u2581names \u2581converted \u2581to \u2581 UTF -8"], "bleu": 0.24822048955078158, "rouge_l": 0.456359102244389}
{"id": 4238, "predictions": ["\u2581// \u2581Set Machine ProviderConfig s \u2581sets \u2581the \u2581 config \u2581provider \u2581for \u2581the \u2581machine \u2581// \u2581with \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581Set Machine ProviderConfig \u2581will \u2581attempt \u2581to \u2581match \u2581a \u2581provider \u2581 config \u2581to \u2581a \u2581machine \u2581 set \u2581// \u2581on \u2581the \u2581\" Name \" \u2581field . \u2581If \u2581a \u2581match \u2581cannot \u2581be"], "bleu": 0.1384522639613673, "rouge_l": 0.3860759493670886}
{"id": 4185, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581the \u2581provided \u2581middleware \u2581function ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Auth Basic Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.2478539992548469, "rouge_l": 0.5239263803680982}
{"id": 4434, "predictions": ["\u2581// \u2581 Update Message \u2581updates \u2581 this \u2581 healthcheck \u2581client"], "references": ["\u2581// \u2581 Update Message Pact \u2581adds \u2581a \u2581 pact \u2581message \u2581to \u2581a \u2581contract \u2581file"], "bleu": 0.24614529278805308, "rouge_l": 0.40450928381962864}
{"id": 5492, "predictions": ["\u2581// \u2581expand States \u2581returns \u2581the \u2581list \u2581of \u2581states \u2581that \u2581are \u2581 set \u2581to \u2581the \u2581// \u2581 top \u2581of \u2581the \u2581 alloc \u2581 set ."], "references": ["\u2581// \u2581expand States \u2581expand s \u2581the \u2581states \u2581list \u2581by \u2581one"], "bleu": 0.10845182904139573, "rouge_l": 0.3177083333333333}
{"id": 4449, "predictions": ["\u2581// \u2581Verify \u2581verifies \u2581the \u2581 healthcheck \u2581 code \u2581and \u2581 kick s \u2581them \u2581to \u2581the \u2581 test \u2581server ."], "references": ["\u2581// \u2581Verify \u2581runs \u2581the \u2581current \u2581 test \u2581case \u2581against \u2581a \u2581 Mock \u2581 Service . \u2581// \u2581Will \u2581cleanup \u2581 interactions \u2581between \u2581tests \u2581within \u2581a \u2581suite ."], "bleu": 0.08768005785989223, "rouge_l": 0.34585400425230334}
{"id": 5511, "predictions": ["\u2581// \u2581find Sig \u2581finds \u2581the \u2581 Sig \u2581and \u2581 height \u2581of \u2581the \u2581given \u2581 Reader ."], "references": ["\u2581// \u2581find Sig \u2581 searches \u2581for \u2581the \u2581 R AR \u2581signature \u2581and \u2581version \u2581at \u2581the \u2581beginning \u2581of \u2581a \u2581file . \u2581// \u2581It \u2581 searches \u2581no \u2581more \u2581than \u2581max S fx"], "bleu": 0.08440401128919774, "rouge_l": 0.32972972972972975}
{"id": 5436, "predictions": ["\u2581// \u2581setup Content Headers \u2581adds \u2581the \u2581 content \u2581 headers \u2581to \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581// \u2581of \u2581the \u2581 content \u2581of \u2581the \u2581"], "references": ["\u2581// \u2581setup Content Headers \u2581uses \u2581 Content - Type \u2581 media \u2581params \u2581and \u2581 Content - Disposition \u2581 headers \u2581to \u2581populate \u2581// \u2581the \u2581 disposition , \u2581 filename , \u2581and"], "bleu": 0.1826249361348376, "rouge_l": 0.4}
{"id": 4912, "predictions": ["\u2581// \u2581 Draw \u2581draw s \u2581the \u2581 \u2581draw s ."], "references": ["\u2581// \u2581 Draw \u2581a \u2581line \u2581with \u2581an \u2581angle \u2581with \u2581specified \u2581line \u2581 cap \u2581and \u2581 join"], "bleu": 0.13615146825983562, "rouge_l": 0.2953995157384988}
{"id": 5353, "predictions": ["\u2581// \u2581 Encoder \u2581returns \u2581a \u2581 text \u2581encoding \u2581of \u2581the \u2581 Font ."], "references": ["\u2581// \u2581 Encoder \u2581returns \u2581the \u2581encoding \u2581between \u2581 font \u2581 code \u2581point \u2581sequences \u2581and \u2581 UTF -8 ."], "bleu": 0.2152063795907075, "rouge_l": 0.43884892086330934}
{"id": 4114, "predictions": ["\u2581// \u2581 Migrate Apps CRD s \u2581migrate s \u2581all \u2581 controllers \u2581and \u2581 remove \u2581them \u2581from \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 Migrate Apps CRD s \u2581creates \u2581the \u2581necessary \u2581 CRD s \u2581for \u2581every \u2581application \u2581// \u2581on \u2581a \u2581 Kubernetes \u2581cluster . \u2581This \u2581is \u2581done \u2581by \u2581re - provisioning \u2581the"], "bleu": 0.198247602457432, "rouge_l": 0.392282958199357}
{"id": 5366, "predictions": ["\u2581// \u2581 Connect \u2581 establish es \u2581a \u2581connection \u2581to \u2581the \u2581connection ."], "references": ["\u2581// \u2581 Connect \u2581to \u2581the \u2581database \u2581using \u2581the \u2581provided \u2581 config"], "bleu": 0.23901088824528133, "rouge_l": 0.43821839080459773}
{"id": 4772, "predictions": ["\u2581// \u2581 copyFile \u2581copies \u2581the \u2581 contents \u2581of \u2581dst \u2581to \u2581dst ."], "references": ["\u2581// \u2581 copyFile \u2581copies \u2581 src \u2581to \u2581tar \u2581file \u2581dst ."], "bleu": 0.3541698766144061, "rouge_l": 0.7011494252873562}
{"id": 4973, "predictions": ["\u2581// \u2581 Subscribe \u2581adds \u2581a \u2581new \u2581event \u2581to \u2581the \u2581client ."], "references": ["\u2581// \u2581 Subscribe \u2581to \u2581a \u2581 data \u2581stream"], "bleu": 0.23462350320527994, "rouge_l": 0.433392539964476}
{"id": 5418, "predictions": ["\u2581// \u2581 encode Content \u2581encodes \u2581 content \u2581as \u2581a \u2581base 64 \u2581encoded \u2581 byte \u2581array ."], "references": ["\u2581// \u2581 encode Content \u2581writes \u2581out \u2581the \u2581 content \u2581in \u2581the \u2581selected \u2581encoding ."], "bleu": 0.2545984531673679, "rouge_l": 0.4723451327433628}
{"id": 5422, "predictions": ["\u2581// \u2581 decode To UTF 8 Base 64 Header \u2581decodes \u2581a \u2581 UTF 8 \u2581 token \u2581header \u2581into \u2581a \u2581 UTF 8 Base 64 \u2581header"], "references": ["\u2581// \u2581 decode To UTF 8 Base 64 Header \u2581decodes \u2581a \u2581 MIME \u2581header \u2581per \u2581RFC \u2581 2047 , \u2581re encoding \u2581to \u2581= ? utf -8 b ?"], "bleu": 0.4298707064766557, "rouge_l": 0.5229638701775873}
{"id": 4513, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581decodes \u2581a \u2581 Int 64 \u2581value \u2581into \u2581a \u2581 Int 64 \u2581struct"], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581 json . Unmarshaler . \u2581// \u2581It \u2581supports \u2581number \u2581and \u2581null \u2581input . \u2581// \u25810 \u2581will \u2581be \u2581considered \u2581a \u2581null \u2581 Int . \u2581// \u2581It \u2581also \u2581supports"], "bleu": 0.05074371972808812, "rouge_l": 0.2559440559440559}
{"id": 5763, "predictions": ["\u2581// \u2581read Core \u2581reads \u2581a \u2581 core . Process \u2581from \u2581a \u2581 core . Process . Process ."], "references": ["\u2581// \u2581read Core \u2581reads \u2581 core file \u2581and \u2581returns \u2581 core \u2581and \u2581go core \u2581process \u2581states ."], "bleu": 0.24941747177008258, "rouge_l": 0.5169491525423728}
{"id": 4872, "predictions": ["\u2581// \u2581draw String \u2581draw s \u2581a \u2581string \u2581with \u2581 color \u2581 width \u2581and \u2581 y ."], "references": ["\u2581// \u2581Add \u2581 text \u2581element \u2581to \u2581 svg \u2581and \u2581returns \u2581its \u2581expected \u2581 width"], "bleu": 0.12512236921161915, "rouge_l": 0.3373893805309734}
{"id": 5975, "predictions": ["\u2581// \u2581 Load Rules FromFile \u2581 loads \u2581the \u2581 Rules \u2581from \u2581the \u2581file \u2581 path"], "references": ["\u2581// \u2581 Load Rules FromFile \u2581 loads \u2581rules \u2581from \u2581a \u2581YAML \u2581file ."], "bleu": 0.4682568791024402, "rouge_l": 0.6512455516014234}
{"id": 4411, "predictions": ["\u2581// \u2581 Equals Element \u2581returns \u2581true \u2581if \u2581the \u2581 Selection \u2581 contains \u2581the \u2581same \u2581// \u2581 Selection ."], "references": ["\u2581// \u2581 Equals Element \u2581returns \u2581whether \u2581or \u2581not \u2581two \u2581 selections \u2581of \u2581exactly \u2581// \u2581one \u2581element \u2581refer \u2581to \u2581the \u2581same \u2581element ."], "bleu": 0.24323309053074293, "rouge_l": 0.44202898550724634}
{"id": 4786, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 iterator \u2581in \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581 ID \u2581of \u2581the \u2581next \u2581result . \u2581When \u2581there \u2581are \u2581no \u2581more \u2581results , \u2581// \u2581 Done \u2581is \u2581returned \u2581as \u2581the \u2581error . \u2581// \u2581//"], "bleu": 0.11976587996191089, "rouge_l": 0.3907473309608541}
{"id": 4689, "predictions": ["\u2581// \u2581Parse RequestHeaders \u2581parses \u2581a \u2581 POST \u2581request \u2581header \u2581into \u2581a \u2581 RequestHeaders ."], "references": ["\u2581// \u2581Parse RequestHeaders \u2581parses \u2581the \u2581special \u2581HTTP \u2581request \u2581 headers \u2581available \u2581to \u2581 push \u2581// \u2581task \u2581request \u2581 handlers . \u2581This \u2581function \u2581 silently \u2581ignores \u2581values \u2581of \u2581the \u2581wrong \u2581//"], "bleu": 0.09087426552401023, "rouge_l": 0.3412587412587413}
{"id": 4460, "predictions": ["\u2581// \u2581 call \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581 call \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 Pact \u2581service"], "bleu": 0.20643565894052812, "rouge_l": 0.4273204903677758}
{"id": 5521, "predictions": ["\u2581// \u2581step 4 \u2581calculates \u2581the \u2581 4 \u2581mode \u2581of \u2581the \u2581word ."], "references": ["\u2581// \u2581 Step \u2581 4 \u2581is \u2581the \u2581un doub ling \u2581of \u2581double \u2581non - vowel \u2581 endings \u2581// \u2581and \u2581removal \u2581of \u2581super l ative \u2581 endings . \u2581//"], "bleu": 0.04454955587770889, "rouge_l": 0.2798165137614679}
{"id": 4217, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581consumer \u2581and \u2581 drain s \u2581all \u2581the \u2581 active \u2581 subscribers ."], "references": ["\u2581// \u2581 Close \u2581safely \u2581closes \u2581the \u2581consumer \u2581and \u2581 releases \u2581all \u2581resources"], "bleu": 0.3457913759237496, "rouge_l": 0.6406067677946324}
{"id": 5630, "predictions": ["\u2581// \u2581 New Template With Func Map \u2581creates \u2581a \u2581new \u2581template \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 New Template With Func Map \u2581creates \u2581a \u2581new \u2581 Template \u2581from \u2581the \u2581given \u2581string \u2581and \u2581a \u2581template \u2581 Func Map . \u2581The \u2581 Func Map \u2581available \u2581// \u2581to"], "bleu": 0.2999995332492491, "rouge_l": 0.5674418604651164}
{"id": 6103, "predictions": ["\u2581// \u2581fetch Details \u2581 - \u2581 get \u2581details \u2581of \u2581the \u2581 Environment Detail \u2581 config \u2581for \u2581the \u2581given \u2581 Environment ."], "references": ["\u2581// \u2581 Fetch \u2581details \u2581about \u2581all \u2581servers \u2581and \u2581server \u2581arrays \u2581in \u2581an \u2581environment"], "bleu": 0.0690889519686715, "rouge_l": 0.18429003021148035}
{"id": 4378, "predictions": ["\u2581// \u2581 Next Window \u2581will \u2581 set \u2581the \u2581window \u2581window ."], "references": ["\u2581// \u2581 Next Window \u2581 switches \u2581to \u2581the \u2581next \u2581available \u2581window ."], "bleu": 0.35453206016838706, "rouge_l": 0.6902404526166903}
{"id": 4771, "predictions": ["\u2581// \u2581copy Tree \u2581copies \u2581the \u2581tree \u2581and \u2581 children \u2581to \u2581dst ."], "references": ["\u2581// \u2581copy Tree \u2581copies \u2581 srcDir \u2581to \u2581tar \u2581file \u2581dst Dir , \u2581ignoring \u2581skip Files ."], "bleu": 0.24000444747337554, "rouge_l": 0.5570776255707762}
{"id": 6053, "predictions": ["\u2581// \u2581 Spec \u2581returns \u2581the \u2581 Document \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Spec \u2581 loads \u2581a \u2581new \u2581spec \u2581document"], "bleu": 0.18798317647335086, "rouge_l": 0.37596302003081655}
{"id": 5987, "predictions": ["\u2581// \u2581print Plain Results \u2581prints \u2581the \u2581 text \u2581 text \u2581to \u2581the \u2581 text \u2581 slice \u2581of \u2581the \u2581// \u2581results ."], "references": ["\u2581// \u2581print Plain Results \u2581prints \u2581 plain - text \u2581output \u2581for \u2581results"], "bleu": 0.23550061570724218, "rouge_l": 0.509926854754441}
{"id": 4184, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581underlying \u2581writer ."], "references": ["\u2581// \u2581Make \u2581sure \u2581the \u2581local \u2581 WriteHeader \u2581is \u2581called , \u2581and \u2581 encode \u2581the \u2581payload \u2581if \u2581necessary . \u2581// \u2581 Provided \u2581in \u2581order \u2581to \u2581implement \u2581the \u2581http . ResponseWriter \u2581interface"], "bleu": 0.038990513239941516, "rouge_l": 0.30942028985507253}
{"id": 4682, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 Client ."], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581client \u2581for \u2581the \u2581given \u2581host . \u2581 All \u2581communication \u2581will \u2581// \u2581be \u2581performed \u2581over \u2581 SSL \u2581unless \u2581the \u2581host \u2581is \u2581 localhost ."], "bleu": 0.036589862902810404, "rouge_l": 0.29683698296836986}
{"id": 4242, "predictions": ["\u2581// \u2581 Run Retry \u2581runs \u2581the \u2581 Re trie \u2581handler ."], "references": ["\u2581// \u2581 Run Retry \u2581runs \u2581a \u2581 retryable \u2581function ."], "bleu": 0.44833867003844585, "rouge_l": 0.6724409448818898}
{"id": 4539, "predictions": ["\u2581// \u2581 New Status \u2581returns \u2581a \u2581new \u2581 Status \u2581instance"], "references": ["\u2581// \u2581 New Status \u2581returns \u2581a \u2581 Status \u2581object , \u2581taken \u2581as \u2581a \u2581snapshot \u2581from \u2581the \u2581 router ."], "bleu": 0.2567711978874235, "rouge_l": 0.5224839400428266}
{"id": 4855, "predictions": ["\u2581// \u2581 Arc To \u2581draw s \u2581a \u2581 path ."], "references": ["\u2581// \u2581 Arc To \u2581adds \u2581an \u2581arc \u2581to \u2581the \u2581 path"], "bleu": 0.3651271103378581, "rouge_l": 0.56656346749226}
{"id": 5417, "predictions": ["\u2581// \u2581 encode Header \u2581encodes \u2581 b \u2581into \u2581the \u2581 Part \u2581of \u2581the \u2581 Part ."], "references": ["\u2581// \u2581 encode Header \u2581writes \u2581out \u2581a \u2581sorted \u2581list \u2581of \u2581 headers ."], "bleu": 0.24078435074822624, "rouge_l": 0.4919354838709677}
{"id": 4120, "predictions": ["\u2581// \u2581 Acquire Application Lock Wait \u2581waits \u2581for \u2581the \u2581application \u2581to \u2581wait \u2581for \u2581a \u2581lock ."], "references": ["\u2581// \u2581 Same \u2581as \u2581 Acquire Application Lock \u2581but \u2581it \u2581keeps \u2581trying \u2581to \u2581acquire \u2581the \u2581lock \u2581// \u2581until \u2581timeout \u2581is \u2581reached ."], "bleu": 0.1850217708440803, "rouge_l": 0.4093959731543625}
{"id": 5481, "predictions": ["\u2581// \u2581next \u2581returns \u2581the \u2581next \u2581block \u2581from \u2581the \u2581 pack file ."], "references": ["\u2581// \u2581next \u2581advance s \u2581to \u2581the \u2581next \u2581packed \u2581file \u2581in \u2581the \u2581 R AR \u2581archive ."], "bleu": 0.14889953668322528, "rouge_l": 0.48744292237442927}
{"id": 4612, "predictions": ["\u2581// \u2581do Intro \u2581performs \u2581the \u2581 dealer \u2581on \u2581the \u2581 EC 2 \u2581protocol \u2581 set \u2581of \u2581 duplication , \u2581// \u2581and \u2581returns \u2581the \u2581 data \u2581 set \u2581to \u2581the \u2581"], "references": ["\u2581// \u2581Do Intro \u2581executes \u2581the \u2581protocol \u2581 introduction ."], "bleu": 0.0631372362157204, "rouge_l": 0.2839851024208566}
{"id": 4787, "predictions": ["\u2581// \u2581 Facets \u2581returns \u2581the \u2581 facets \u2581of \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Facets \u2581returns \u2581the \u2581 facets \u2581found \u2581within \u2581the \u2581 search \u2581results , \u2581if \u2581any \u2581 facets \u2581// \u2581were \u2581requested \u2581in \u2581the \u2581 Search Options ."], "bleu": 0.17943351238239852, "rouge_l": 0.4795597484276729}
{"id": 5700, "predictions": ["\u2581// \u2581new StructType \u2581returns \u2581a \u2581pointer \u2581to \u2581a \u2581struct \u2581struct ."], "references": ["\u2581// \u2581new StructType \u2581takes \u2581a \u2581Go \u2581 type \u2581as \u2581argument \u2581and \u2581extract \u2581information \u2581to \u2581make \u2581a \u2581// \u2581new \u2581struct Type \u2581value . \u2581// \u2581The \u2581 type \u2581has \u2581to \u2581be \u2581a"], "bleu": 0.04615824793450715, "rouge_l": 0.36014760147601477}
{"id": 4389, "predictions": ["\u2581// \u2581 Touch \u2581updates \u2581the \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581 Selection ."], "references": ["\u2581// \u2581 Touch \u2581performs \u2581the \u2581provided \u2581 Touch \u2581event \u2581at \u2581the \u2581location \u2581of \u2581each \u2581element \u2581in \u2581the \u2581// \u2581selection ."], "bleu": 0.14823030834641143, "rouge_l": 0.5013698630136987}
{"id": 4773, "predictions": ["\u2581// \u2581check Main \u2581checks \u2581if \u2581the \u2581given \u2581 Context \u2581is \u2581valid ."], "references": ["\u2581// \u2581check Main \u2581verifies \u2581that \u2581there \u2581is \u2581a \u2581single \u2581\" main \" \u2581function . \u2581// \u2581It \u2581also \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581Go \u2581source \u2581files \u2581in \u2581the \u2581 app ."], "bleu": 0.05131440122676713, "rouge_l": 0.26521739130434785}
{"id": 4140, "predictions": ["\u2581// \u2581 Unset Env s \u2581removes \u2581all \u2581 Env Env \u2581variables \u2581from \u2581environment \u2581variables ."], "references": ["\u2581// \u2581 Unset Env s \u2581removes \u2581environment \u2581variables \u2581from \u2581an \u2581 app , \u2581 serializing \u2581the \u2581// \u2581remaining \u2581list \u2581of \u2581environment \u2581variables \u2581to \u2581all \u2581units \u2581of \u2581the \u2581 app ."], "bleu": 0.17506400721922863, "rouge_l": 0.4611683848797251}
{"id": 5533, "predictions": ["\u2581// \u2581 remove Perf ec 2 Ge run d \u2581removes \u2581 info \u2581from \u2581 Perf D 2."], "references": ["\u2581// \u2581Remove \u2581 perfect ive \u2581 ger und \u2581 endings \u2581and \u2581return \u2581true \u2581if \u2581one \u2581was \u2581removed . \u2581//"], "bleu": 0.080754338801203, "rouge_l": 0.22001803426510366}
{"id": 6100, "predictions": ["\u2581// \u2581 Load Response \u2581 - \u2581 Load Response \u2581 body"], "references": ["\u2581// \u2581 Load Response \u2581deserialize s \u2581the \u2581JSON \u2581response \u2581into \u2581a \u2581generic \u2581object . \u2581// \u2581If \u2581the \u2581response \u2581has \u2581a \u2581\" Location \" \u2581header \u2581then \u2581the \u2581returned \u2581object \u2581is \u2581a"], "bleu": 0.05635678205677782, "rouge_l": 0.18007380073800738}
{"id": 4123, "predictions": ["\u2581// \u2581Add Units \u2581adds \u2581a \u2581 set \u2581of \u2581units \u2581to \u2581the \u2581 app ' s \u2581 status ."], "references": ["\u2581// \u2581Add Units \u2581creates \u2581 n \u2581new \u2581units \u2581within \u2581the \u2581 provisioner , \u2581saves \u2581new \u2581units \u2581in \u2581the \u2581// \u2581database \u2581and \u2581 enqueue s \u2581the \u2581 app rc \u2581serialization ."], "bleu": 0.107681158460186, "rouge_l": 0.3986928104575163}
{"id": 4363, "predictions": ["\u2581// \u2581Get Cookies \u2581returns \u2581a \u2581list \u2581of \u2581cookies \u2581for \u2581the \u2581 page ."], "references": ["\u2581// \u2581Get Cookies \u2581returns \u2581all \u2581cookies \u2581on \u2581the \u2581 page ."], "bleu": 0.45723134461864345, "rouge_l": 0.7614424410540915}
{"id": 4631, "predictions": ["\u2581// \u2581Get Multi \u2581returns \u2581a \u2581 map \u2581of \u2581 Item \u2581objects \u2581from \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get Multi \u2581is \u2581a \u2581batch \u2581version \u2581of \u2581Get . \u2581The \u2581returned \u2581 map \u2581from \u2581 keys \u2581to \u2581 items \u2581may \u2581// \u2581have \u2581fewer \u2581elements \u2581than \u2581the \u2581input \u2581 slice"], "bleu": 0.09029581511349671, "rouge_l": 0.36478405315614615}
{"id": 4687, "predictions": ["\u2581// \u2581to Retry Parameters \u2581converts \u2581the \u2581given \u2581 Retry Retry \u2581parameters \u2581to \u2581the \u2581 slice \u2581of \u2581// \u2581 hooks ."], "references": ["\u2581// \u2581to Retry Parameter \u2581converts \u2581 Retry Options \u2581to \u2581 pb . TaskQueue Retry Parameters ."], "bleu": 0.17001078098404226, "rouge_l": 0.5102230483271376}
{"id": 4179, "predictions": ["\u2581// \u2581 Middleware Func \u2581is \u2581a \u2581middleware \u2581that \u2581 wraps \u2581the \u2581recover \u2581middleware ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Recover Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.27668736912821895, "rouge_l": 0.5}
{"id": 5667, "predictions": ["\u2581// \u2581Google Compute Credentials \u2581returns \u2581a \u2581 Option \u2581that \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581// \u2581 oauth \u2581credentials ."], "references": ["\u2581// \u2581Google Compute Credentials \u2581is \u2581an \u2581option \u2581that \u2581 loads \u2581the \u2581Google \u2581 Service \u2581 Account \u2581// \u2581credentials \u2581from \u2581the \u2581 GCE \u2581metadata \u2581associated \u2581with \u2581the \u2581 GCE \u2581compute \u2581instance"], "bleu": 0.1384522639613673, "rouge_l": 0.34746835443037977}
{"id": 4784, "predictions": ["\u2581// \u2581 Search \u2581 searches \u2581the \u2581index \u2581for \u2581the \u2581given \u2581query ."], "references": ["\u2581// \u2581 Search \u2581 searches \u2581the \u2581index \u2581for \u2581the \u2581given \u2581query ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 4540, "predictions": ["\u2581// \u2581make Peer Status Slice \u2581returns \u2581a \u2581 slice \u2581of \u2581peers \u2581that \u2581have \u2581been \u2581connected \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581make Peer Status Slice \u2581takes \u2581a \u2581snapshot \u2581of \u2581the \u2581state \u2581of \u2581peers ."], "bleu": 0.2872797668292002, "rouge_l": 0.5607763023493361}
{"id": 5885, "predictions": ["\u2581// \u2581 Enqueue \u2581creates \u2581a \u2581new \u2581job \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581delay ."], "references": ["\u2581// \u2581 Enqueue \u2581will \u2581 enqueue \u2581a \u2581job \u2581using \u2581the \u2581specified \u2581 name \u2581and \u2581 data . \u2581If \u2581a \u2581delay \u2581// \u2581is \u2581specified \u2581the \u2581job \u2581will \u2581not \u2581be \u2581 dequeue"], "bleu": 0.09320795658207887, "rouge_l": 0.41924398625429554}
{"id": 4324, "predictions": ["\u2581// \u2581Execute \u2581executes \u2581a \u2581 container"], "references": ["\u2581// \u2581Execute \u2581should \u2581be \u2581called \u2581once \u2581the \u2581 top - level - flags \u2581on \u2581a \u2581 Commander \u2581// \u2581have \u2581been \u2581initialized . \u2581It \u2581finds \u2581the \u2581correct \u2581 subcommand \u2581and \u2581executes"], "bleu": 0.007007617316623046, "rouge_l": 0.1983739837398374}
{"id": 5867, "predictions": ["\u2581// \u2581 Template With Delimiter s \u2581returns \u2581a \u2581string \u2581with \u2581the \u2581 set \u2581of \u2581 text \u2581 keys ."], "references": ["\u2581// \u2581 Template With Delimiter s \u2581is \u2581string \u2581template \u2581with \u2581user - define able \u2581opening \u2581and \u2581closing \u2581 delimiters ."], "bleu": 0.3096774789029905, "rouge_l": 0.5104602510460251}
{"id": 4570, "predictions": ["\u2581// \u2581 WriteTo \u2581implements \u2581the \u2581 net . Peer To \u2581interface . \u2581It \u2581serialize s \u2581the \u2581peer \u2581// \u2581into \u2581the \u2581 data \u2581of \u2581the \u2581 Peer ."], "references": ["\u2581// \u2581 WriteTo \u2581implements \u2581 net . Packet Conn ."], "bleu": 0.1721916742076807, "rouge_l": 0.4714975845410628}
{"id": 5505, "predictions": ["\u2581// \u2581read \u2581reads \u2581the \u2581 size \u2581of \u2581the \u2581window ."], "references": ["\u2581// \u2581read \u2581reads \u2581bytes \u2581from \u2581the \u2581beginning \u2581of \u2581the \u2581window \u2581into \u2581 p"], "bleu": 0.2676786924268436, "rouge_l": 0.5947075208913649}
{"id": 6055, "predictions": ["\u2581// \u2581 Expanded \u2581returns \u2581a \u2581 Document \u2581object \u2581from \u2581the \u2581given \u2581options"], "references": ["\u2581// \u2581 Expanded \u2581expand s \u2581the \u2581 ref \u2581fields \u2581in \u2581the \u2581spec \u2581document \u2581and \u2581returns \u2581a \u2581new \u2581spec \u2581document"], "bleu": 0.13790411478074494, "rouge_l": 0.30995934959349586}
{"id": 4520, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface \u2581for \u2581// \u2581 Float ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581 json . Unmarshaler . \u2581// \u2581It \u2581supports \u2581number \u2581and \u2581null \u2581input . \u2581// \u25810 \u2581will \u2581not \u2581be \u2581considered \u2581a \u2581null \u2581 Float . \u2581// \u2581It \u2581also"], "bleu": 0.13194571298767155, "rouge_l": 0.4692307692307692}
{"id": 4417, "predictions": ["\u2581// \u2581Check Version \u2581checks \u2581if \u2581the \u2581version \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check Version \u2581checks \u2581installation \u2581of \u2581a \u2581given \u2581binary \u2581using \u2581 semver - compatible \u2581// \u2581 compar is ions"], "bleu": 0.14264251332762312, "rouge_l": 0.2612419700214133}
{"id": 5493, "predictions": ["\u2581// \u2581 push Byte \u2581 allocate s \u2581the \u2581 byte \u2581 slice \u2581of \u2581the \u2581 allocator ."], "references": ["\u2581// \u2581 push Byte \u2581puts \u2581a \u2581 byte \u2581on \u2581the \u2581heap \u2581and \u2581returns \u2581a \u2581state . succ \u2581index \u2581that \u2581// \u2581can \u2581be \u2581used \u2581to \u2581retrieve \u2581it ."], "bleu": 0.13673838043434547, "rouge_l": 0.34931997136721543}
{"id": 5699, "predictions": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581given \u2581value \u2581into \u2581the \u2581 Stream \u2581stream ."], "references": ["\u2581// \u2581 Encode \u2581writes \u2581 v \u2581to \u2581the \u2581stream , \u2581encoding \u2581it \u2581based \u2581on \u2581the \u2581emitter \u2581configured \u2581// \u2581on \u2581 e ."], "bleu": 0.10896115536332415, "rouge_l": 0.38227394807520143}
{"id": 4537, "predictions": ["\u2581// \u2581start Local Connection \u2581starts \u2581a \u2581connection \u2581to \u2581the \u2581 router ."], "references": ["\u2581// \u2581If \u2581the \u2581connection \u2581is \u2581successful , \u2581it \u2581will \u2581end \u2581up \u2581in \u2581the \u2581local \u2581peer ' s \u2581// \u2581connections \u2581 map ."], "bleu": 0.059428726447571, "rouge_l": 0.2793040293040293}
{"id": 5517, "predictions": ["\u2581// \u2581 Stem \u2581returns \u2581the \u2581word \u2581at \u2581the \u2581given \u2581word ."], "references": ["\u2581// \u2581 Stem \u2581an \u2581 English \u2581word . \u2581This \u2581is \u2581the \u2581only \u2581exported \u2581// \u2581function \u2581in \u2581 this \u2581package . \u2581//"], "bleu": 0.10556737707670708, "rouge_l": 0.35499515033947615}
{"id": 4986, "predictions": ["\u2581// \u2581print Account \u2581prints \u2581a \u2581 tab - encoded \u2581 tab - encoded \u2581 tab - separated \u2581// \u2581 tab - encoded \u2581 tab - encoded \u2581 tab ."], "references": ["\u2581// \u2581print Account \u2581outputs \u2581account \u2581into \u2581into \u2581 w \u2581using \u2581 tab writer ."], "bleu": 0.0993195473228234, "rouge_l": 0.34743694060211555}
{"id": 4226, "predictions": ["\u2581// \u2581 Expected \u2581returns \u2581the \u2581 cloud \u2581and \u2581 cloud \u2581 cloud \u2581and \u2581 cloud ."], "references": ["\u2581// \u2581 Expected \u2581is \u2581used \u2581to \u2581build \u2581a \u2581cluster \u2581expected \u2581to \u2581be \u2581on \u2581the \u2581 cloud \u2581provider ."], "bleu": 0.18893457959383067, "rouge_l": 0.40744274809160297}
{"id": 4834, "predictions": ["\u2581// \u2581can Parse \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 type \u2581is \u2581a \u2581valid \u2581 type ."], "references": ["\u2581// \u2581can Parse \u2581returns \u2581true \u2581if \u2581the \u2581 type \u2581can \u2581be \u2581parsed \u2581from \u2581a \u2581string"], "bleu": 0.46366459199876225, "rouge_l": 0.6489361702127661}
{"id": 4731, "predictions": ["\u2581// \u2581 Upload URL \u2581 uploads \u2581a \u2581 URL \u2581to \u2581the \u2581remote \u2581store ."], "references": ["\u2581// \u2581 Upload URL \u2581creates \u2581an \u2581upload \u2581 URL \u2581for \u2581the \u2581 form \u2581that \u2581the \u2581user \u2581will \u2581// \u2581 fill \u2581out , \u2581passing \u2581the \u2581application \u2581 path \u2581to \u2581load \u2581when"], "bleu": 0.09865243055173982, "rouge_l": 0.2986013986013986}
{"id": 5619, "predictions": ["\u2581// \u2581 Write Matrix \u2581 write \u2581a \u2581 slice \u2581of \u2581 Matrix \u2581to \u2581a \u2581 slice \u2581of \u2581 src ."], "references": ["\u2581// \u2581 Write Matrix \u2581writes \u2581a \u2581 visual \u2581representation \u2581of \u2581the \u2581given \u2581matrix \u2581for \u2581the \u2581given \u2581// \u2581strings \u2581to \u2581the \u2581given \u2581writer ."], "bleu": 0.18399977514334162, "rouge_l": 0.41340361445783136}
{"id": 4165, "predictions": ["\u2581// \u2581find Route FromURL \u2581 searches \u2581the \u2581 route \u2581for \u2581the \u2581 route \u2581and \u2581 path \u2581to \u2581the \u2581 route ."], "references": ["\u2581// \u2581Return \u2581the \u2581first \u2581matching \u2581 Route \u2581and \u2581the \u2581corresponding \u2581parameters \u2581for \u2581a \u2581given \u2581 URL \u2581object ."], "bleu": 0.08687475782716618, "rouge_l": 0.36402387041773226}
{"id": 5889, "predictions": ["\u2581// \u2581 Or \u2581returns \u2581a \u2581 authorizer \u2581that \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 authorizer \u2581on \u2581the \u2581 authorizer"], "references": ["\u2581// \u2581 Or \u2581will \u2581match \u2581and \u2581run \u2581the \u2581first \u2581 authorizer \u2581and \u2581return \u2581its \u2581enforce rs \u2581on \u2581 success . \u2581// \u2581If \u2581no \u2581enforce rs \u2581are \u2581returned \u2581it \u2581will \u2581match"], "bleu": 0.09075426294580834, "rouge_l": 0.30886075949367087}
{"id": 5474, "predictions": ["\u2581// \u2581 Read \u2581implements \u2581the \u2581 Block Reader \u2581interface ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581and \u2581decrypt s \u2581 data \u2581into \u2581 p . \u2581// \u2581If \u2581the \u2581input \u2581is \u2581not \u2581a \u2581multiple \u2581of \u2581the \u2581cipher \u2581block \u2581 size , \u2581// \u2581the"], "bleu": 0.036520949774262054, "rouge_l": 0.22932330827067668}
{"id": 6063, "predictions": ["\u2581// \u2581 New Rot ating FileHandler \u2581creates \u2581a \u2581new \u2581 rot ating \u2581file \u2581file \u2581at \u2581the \u2581specified \u2581 path ."], "references": ["\u2581// \u2581 New Rot ating FileHandler \u2581creates \u2581a \u2581 Rot ating FileHandler"], "bleu": 0.40051071695431895, "rouge_l": 0.6545064377682404}
{"id": 4833, "predictions": ["\u2581// \u2581 set Slice \u2581sets \u2581the \u2581 slice \u2581of \u2581 items \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581parse \u2581a \u2581value \u2581as \u2581the \u2581appropriate \u2581 type \u2581and \u2581store \u2581it \u2581in \u2581the \u2581struct"], "bleu": 0.1203921753741131, "rouge_l": 0.32446808510638303}
{"id": 4259, "predictions": ["\u2581// \u2581 Commit \u2581implements \u2581 Git Store . Commit ."], "references": ["\u2581// Performs \u2581a \u2581 git \u2581' commit ' \u2581and \u2581' push ' \u2581of \u2581the \u2581current \u2581cluster \u2581changes ."], "bleu": 0.06735938555336447, "rouge_l": 0.20378619153674832}
{"id": 5523, "predictions": ["\u2581// \u2581step 1 c \u2581computes \u2581whether \u2581the \u2581 v 1 \u2581checksum \u2581is \u2581a \u2581valid \u2581 Y 2 \u2581checksum ."], "references": ["\u2581// \u2581 Step \u2581 1 c \u2581is \u2581the \u2581normalization \u2581of \u2581various \u2581\" y \" \u2581 endings . \u2581//"], "bleu": 0.11154288433080788, "rouge_l": 0.3259127337488869}
{"id": 5376, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581chat \u2581to \u2581 slack ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581message \u2581wrapped \u2581inside \u2581an \u2581 XMPP \u2581message \u2581 stanza \u2581 body ."], "bleu": 0.1895133844991882, "rouge_l": 0.42459396751740147}
{"id": 5888, "predictions": ["\u2581// \u2581 And \u2581returns \u2581a \u2581 authorizer \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581 authorizer \u2581on \u2581the \u2581 authorizer"], "references": ["\u2581// \u2581 And \u2581will \u2581match \u2581and \u2581run \u2581both \u2581 authorizer s \u2581and \u2581return \u2581immediately \u2581if \u2581one \u2581does \u2581not \u2581// \u2581return \u2581a \u2581 set \u2581of \u2581enforce rs . \u2581The \u2581two \u2581successfully"], "bleu": 0.0951787281596248, "rouge_l": 0.22803738317757008}
{"id": 5439, "predictions": ["\u2581// \u2581 Read Parts \u2581reads \u2581the \u2581 content \u2581from \u2581the \u2581reader \u2581and \u2581returns \u2581the \u2581 Part \u2581// \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Read Parts \u2581reads \u2581a \u2581 MIME \u2581document \u2581from \u2581the \u2581provided \u2581reader \u2581and \u2581parses \u2581it \u2581into \u2581tree \u2581of \u2581 Part \u2581objects ."], "bleu": 0.27415742536525645, "rouge_l": 0.5754716981132075}
{"id": 4162, "predictions": ["\u2581// \u2581 A \u2581 path Exp y \u2581 path"], "references": ["\u2581// \u2581This \u2581is \u2581run \u2581at \u2581 init \u2581time \u2581only ."], "bleu": 0.1397712139461423, "rouge_l": 0.20854700854700853}
{"id": 4463, "predictions": ["\u2581// \u2581 Write \u2581a \u2581 data \u2581 call \u2581to \u2581 this \u2581service"], "references": ["\u2581// \u2581 Write Pact \u2581writes \u2581the \u2581 pact \u2581file \u2581to \u2581disk ."], "bleu": 0.21401603033752975, "rouge_l": 0.4166666666666667}
{"id": 4420, "predictions": ["\u2581// \u2581 login \u2581requests \u2581the \u2581user \u2581to \u2581the \u2581user ."], "references": ["\u2581// \u2581 Login \u2581handles \u2581the \u2581 login \u2581API \u2581 call \u2581to \u2581the \u2581 User \u2581 Service ."], "bleu": 0.12519876989274992, "rouge_l": 0.42459396751740147}
{"id": 5935, "predictions": ["\u2581// \u2581 Compose \u2581creates \u2581a \u2581middleware \u2581that \u2581 wraps \u2581the \u2581given \u2581 Chain ."], "references": ["\u2581// \u2581 Compose \u2581is \u2581a \u2581short - hand \u2581for \u2581chaining \u2581the \u2581specified \u2581middleware \u2581and \u2581handler \u2581// \u2581together ."], "bleu": 0.14702466495349747, "rouge_l": 0.3667334669338677}
{"id": 5743, "predictions": ["\u2581// \u2581Find Object \u2581returns \u2581the \u2581object \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 Process ."], "references": ["\u2581// \u2581Find Object \u2581finds \u2581the \u2581object \u2581containing \u2581a . \u2581Returns \u2581that \u2581object \u2581and \u2581the \u2581offset \u2581within \u2581// \u2581that \u2581object \u2581to \u2581which \u2581a \u2581points . \u2581// \u2581Returns \u2581 0,0 \u2581if \u2581a"], "bleu": 0.07412555955791748, "rouge_l": 0.2934707903780069}
{"id": 5917, "predictions": ["\u2581// \u2581Generate Token \u2581generates \u2581a \u2581 token \u2581for \u2581a \u2581 token ."], "references": ["\u2581// \u2581Generate Token \u2581returns \u2581a \u2581new \u2581 token \u2581for \u2581the \u2581provided \u2581information ."], "bleu": 0.27400779283791565, "rouge_l": 0.6354166666666667}
{"id": 4254, "predictions": ["\u2581// \u2581 Expected \u2581returns \u2581a \u2581new \u2581cluster \u2581with \u2581the \u2581given \u2581 Cluster"], "references": ["\u2581// \u2581 Expected \u2581returns \u2581the \u2581 Firewall \u2581structure \u2581of \u2581what \u2581is \u2581 Expected ."], "bleu": 0.2662659213958957, "rouge_l": 0.45522388059701485}
{"id": 4231, "predictions": ["\u2581// \u2581 Actual \u2581 Cluster \u2581implementation"], "references": ["\u2581// \u2581 Actual \u2581returns \u2581the \u2581actual \u2581resource \u2581 group \u2581in \u2581Azure \u2581if \u2581it \u2581 exists ."], "bleu": 0.0821081667546808, "rouge_l": 0.3360881542699724}
{"id": 4166, "predictions": ["\u2581// \u2581 Middleware Func \u2581returns \u2581a \u2581middleware \u2581that \u2581 wraps \u2581the \u2581provided \u2581function ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Content TypeChecker Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.25761331100951257, "rouge_l": 0.4797752808988765}
{"id": 4675, "predictions": ["\u2581// \u2581 Current OAuth \u2581returns \u2581the \u2581 auth \u2581user \u2581for \u2581the \u2581given \u2581 app ."], "references": ["\u2581// \u2581 Current OAuth \u2581returns \u2581the \u2581user \u2581associated \u2581with \u2581the \u2581OAuth \u2581consumer \u2581making \u2581 this \u2581// \u2581request . \u2581If \u2581the \u2581OAuth \u2581consumer \u2581did \u2581not \u2581make \u2581a \u2581valid \u2581OAuth \u2581request ,"], "bleu": 0.153383394020349, "rouge_l": 0.41924398625429554}
{"id": 6097, "predictions": ["\u2581// \u2581 write Multipart Params \u2581writes \u2581the \u2581params \u2581to \u2581the \u2581multipart \u2581writer ."], "references": ["\u2581// \u2581 Handle \u2581payload \u2581params . \u2581Each \u2581payload \u2581 param \u2581gets \u2581its \u2581own \u2581multipart \u2581// \u2581 form \u2581section \u2581with \u2581the \u2581section \u2581 name \u2581being \u2581the \u2581variable \u2581 name \u2581and \u2581//"], "bleu": 0.04344553129835821, "rouge_l": 0.17366548042704624}
{"id": 4697, "predictions": ["\u2581// \u2581 Modify Lease \u2581updates \u2581the \u2581given \u2581 Lease ID ."], "references": ["\u2581// \u2581 Modify Lease \u2581 modifies \u2581the \u2581lease \u2581of \u2581a \u2581task . \u2581// \u2581 Used \u2581to \u2581request \u2581more \u2581processing \u2581time , \u2581or \u2581to \u2581 abandon \u2581processing . \u2581// \u2581lease Time"], "bleu": 0.06338349501054427, "rouge_l": 0.3151291512915129}
{"id": 5538, "predictions": ["\u2581// \u2581 Stem \u2581returns \u2581the \u2581word \u2581at \u2581the \u2581given \u2581word ."], "references": ["\u2581// \u2581 Stem \u2581an \u2581 Span ish \u2581word . \u2581This \u2581is \u2581the \u2581only \u2581exported \u2581// \u2581function \u2581in \u2581 this \u2581package . \u2581//"], "bleu": 0.0963936476247809, "rouge_l": 0.3430178069353327}
{"id": 5504, "predictions": ["\u2581// \u2581copy Bytes \u2581writes \u2581the \u2581 size \u2581of \u2581the \u2581window ."], "references": ["\u2581// \u2581copy Bytes \u2581copies \u2581len \u2581bytes \u2581at \u2581off \u2581distance \u2581from \u2581the \u2581end \u2581// \u2581to \u2581the \u2581end \u2581of \u2581the \u2581window ."], "bleu": 0.19267926355343126, "rouge_l": 0.49045226130653274}
{"id": 5960, "predictions": ["\u2581// \u2581 Inspect \u2581returns \u2581the \u2581number \u2581of \u2581 data \u2581in \u2581the \u2581 Seek ."], "references": ["\u2581// \u2581 Inspect \u2581executes \u2581the \u2581 inspection \u2581into \u2581all \u2581loaded \u2581objects , \u2581by \u2581checking \u2581all \u2581// \u2581rules \u2581and \u2581exceptions \u2581loaded ."], "bleu": 0.12332859744942397, "rouge_l": 0.3309222423146474}
{"id": 4296, "predictions": ["\u2581// \u2581 Message \u2581returns \u2581the \u2581message \u2581 name \u2581of \u2581the \u2581record ."], "references": ["\u2581// \u2581 Message \u2581returns \u2581the \u2581log \u2581record \u2581message ."], "bleu": 0.4211813371894875, "rouge_l": 0.6842948717948718}
{"id": 5438, "predictions": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581deep \u2581copy \u2581of \u2581the \u2581 Part ."], "references": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581clone \u2581of \u2581the \u2581current \u2581 Part ."], "bleu": 0.5266403878479265, "rouge_l": 0.8333333333333334}
{"id": 5734, "predictions": ["\u2581// \u2581 Concat \u2581 - \u2581 Concat \u2581 Permission"], "references": ["\u2581// \u2581 Concat \u2581 concat \u2581two \u2581permissions \u2581into \u2581a \u2581new \u2581one"], "bleu": 0.3145413833897494, "rouge_l": 0.3929146537842191}
{"id": 4954, "predictions": ["\u2581// \u2581 Key \u2581returns \u2581the \u2581 key \u2581for \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 Key \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581node \u2581with \u2581the \u2581given \u2581` id `. \u2581// \u2581It \u2581will \u2581return \u2581 ErrNo Path , \u2581if \u2581the \u2581node \u2581does \u2581not \u2581exist"], "bleu": 0.1591340950936792, "rouge_l": 0.43416370106761565}
{"id": 4160, "predictions": ["\u2581// \u2581 App Func \u2581returns \u2581a \u2581handler \u2581for \u2581the \u2581 route \u2581 route ."], "references": ["\u2581// \u2581 Handle \u2581the \u2581REST \u2581routing \u2581and \u2581run \u2581the \u2581user \u2581 code ."], "bleu": 0.13834368456410945, "rouge_l": 0.3728606356968216}
{"id": 4146, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 app ' s \u2581 container ."], "references": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 app \u2581calling \u2581the \u2581 provisioner . Start \u2581method \u2581and \u2581// \u2581changing \u2581the \u2581units \u2581state \u2581to \u2581 Status Started ."], "bleu": 0.20018881742762587, "rouge_l": 0.4575000000000001}
{"id": 4911, "predictions": ["\u2581// \u2581 Main \u2581is \u2581the \u2581main \u2581point \u2581for \u2581 Main . Main . Main . Main ."], "references": ["\u2581// \u2581 Main \u2581draw s \u2581the \u2581different \u2581line \u2581 caps \u2581and \u2581 joins . \u2581// \u2581This \u2581should \u2581only \u2581be \u2581used \u2581during \u2581testing ."], "bleu": 0.11234318621099061, "rouge_l": 0.3407821229050279}
{"id": 4690, "predictions": ["\u2581// \u2581Add \u2581a \u2581task \u2581to \u2581the \u2581task ."], "references": ["\u2581// \u2581Add \u2581adds \u2581the \u2581task \u2581to \u2581a \u2581named \u2581queue . \u2581// \u2581An \u2581 empty \u2581queue \u2581 name \u2581means \u2581that \u2581the \u2581default \u2581queue \u2581will \u2581be \u2581used . \u2581// \u2581Add \u2581returns \u2581an"], "bleu": 0.020503699235087682, "rouge_l": 0.2859375}
{"id": 5528, "predictions": ["\u2581// \u2581step 3 \u2581checks \u2581whether \u2581the \u2581word \u2581is \u2581a \u2581valid \u2581 table ."], "references": ["\u2581// \u2581 Step \u2581 3 \u2581is \u2581the \u2581removal \u2581of \u2581 residual \u2581 suffixes . \u2581//"], "bleu": 0.11202079346313554, "rouge_l": 0.35260115606936415}
{"id": 5433, "predictions": ["\u2581// \u2581Add Child \u2581adds \u2581a \u2581new \u2581child \u2581to \u2581the \u2581 Part \u2581of \u2581the \u2581 Part \u2581of \u2581the \u2581 Part \u2581// \u2581of \u2581the \u2581 Part ."], "references": ["\u2581// \u2581Add Child \u2581adds \u2581a \u2581child \u2581part \u2581to \u2581either \u2581 FirstChild \u2581or \u2581the \u2581end \u2581of \u2581the \u2581 children \u2581 Next Sibling \u2581chain . \u2581// \u2581The \u2581child \u2581may \u2581have \u2581 siblings"], "bleu": 0.217439054103494, "rouge_l": 0.5008797653958944}
{"id": 4894, "predictions": ["\u2581// \u2581 Draw \u2581draw s \u2581the \u2581 \u2581draw s \u2581with \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 Draw \u2581\" Hello \u2581 World \""], "bleu": 0.16188613565728213, "rouge_l": 0.36802413273001505}
{"id": 4270, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581 graceful \u2581 graceful ly \u2581 call ."], "references": ["\u2581// \u2581Register \u2581starts \u2581handling \u2581signals ."], "bleu": 0.14694106251955755, "rouge_l": 0.3546511627906977}
{"id": 4547, "predictions": ["\u2581// \u2581 Delete Range \u2581deletes \u2581the \u2581given \u2581 GCE \u2581instance ."], "references": ["\u2581// \u2581 Delete \u2581implements \u2581gRPC \u2581 KV Server . \u2581// \u2581 Delete \u2581deletes \u2581the \u2581given \u2581range \u2581from \u2581the \u2581store . \u2581// \u2581 A \u2581delete \u2581request \u2581increase \u2581the \u2581revision \u2581of \u2581the"], "bleu": 0.05804092400844258, "rouge_l": 0.3151291512915129}
{"id": 4535, "predictions": ["\u2581// \u2581 createConnection \u2581creates \u2581a \u2581new \u2581 net . Conn \u2581that \u2581 wraps \u2581the \u2581local \u2581peer ."], "references": ["\u2581// \u2581 createConnection \u2581creates \u2581a \u2581new \u2581connection , \u2581 originating \u2581from \u2581// \u2581local Addr , \u2581to \u2581peer Addr . \u2581If \u2581accept New Peer \u2581is \u2581false , \u2581peer Addr \u2581must \u2581//"], "bleu": 0.1704326398045037, "rouge_l": 0.40531561461794013}
{"id": 5694, "predictions": ["\u2581// \u2581 Encode Array \u2581encodes \u2581a \u2581 byte \u2581 slice \u2581to \u2581a \u2581 Encoder ."], "references": ["\u2581// \u2581 Encode Array \u2581provides \u2581the \u2581implementation \u2581of \u2581the \u2581array \u2581encoding \u2581algorithm , \u2581// \u2581where \u2581 n \u2581is \u2581the \u2581number \u2581of \u2581elements \u2581in \u2581the \u2581array , \u2581and \u2581 f \u2581a"], "bleu": 0.09472403025585548, "rouge_l": 0.2934707903780069}
{"id": 4467, "predictions": ["\u2581// \u2581 User Login \u2581is \u2581used \u2581to \u2581generate \u2581a \u2581user \u2581 login \u2581user ."], "references": ["\u2581// \u2581 User Login \u2581is \u2581the \u2581 login \u2581 route ."], "bleu": 0.375022891676693, "rouge_l": 0.6541554959785522}
{"id": 5809, "predictions": ["\u2581// \u2581 split Mappings At \u2581splits \u2581the \u2581 contents \u2581of \u2581the \u2581 Process \u2581into \u2581a \u2581 slice \u2581of \u2581// \u2581 this \u2581 Process ."], "references": ["\u2581// \u2581 split Mappings At \u2581ensures \u2581that \u2581a \u2581is \u2581not \u2581in \u2581the \u2581middle \u2581of \u2581any \u2581mapping . \u2581// \u2581 Splits \u2581mappings \u2581as \u2581necessary ."], "bleu": 0.23096862760324496, "rouge_l": 0.4166666666666667}
{"id": 4149, "predictions": ["\u2581// \u2581 NewForConfig \u2581creates \u2581a \u2581new \u2581 Client set \u2581with \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 NewForConfig \u2581creates \u2581a \u2581new \u2581 Client set \u2581for \u2581the \u2581given \u2581 config ."], "bleu": 0.8153551038173115, "rouge_l": 0.9333333333333336}
{"id": 4186, "predictions": ["\u2581// \u2581 Change \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581node \u2581at \u2581the \u2581given \u2581level ."], "references": ["\u2581// \u2581 Private \u2581function \u2581for \u2581now"], "bleu": 0.1082597837309053, "rouge_l": 0.2064297800338409}
{"id": 4842, "predictions": ["\u2581// \u2581 Longest Prefix \u2581returns \u2581the \u2581prefix \u2581of \u2581the \u2581tree \u2581in \u2581the \u2581tree ."], "references": ["\u2581// \u2581 Longest Prefix \u2581is \u2581like \u2581Get , \u2581but \u2581instead \u2581of \u2581an \u2581// \u2581exact \u2581match , \u2581it \u2581will \u2581return \u2581the \u2581longest \u2581prefix \u2581match ."], "bleu": 0.13949772349914413, "rouge_l": 0.3517298187808896}
{"id": 4163, "predictions": ["\u2581// \u2581start \u2581starts \u2581the \u2581 router ."], "references": ["\u2581// \u2581This \u2581validates \u2581the \u2581 Routes \u2581and \u2581prepare s \u2581the \u2581 Trie \u2581 data \u2581structure . \u2581// \u2581It \u2581must \u2581be \u2581called \u2581once \u2581the \u2581 Routes \u2581are \u2581defined \u2581and \u2581before \u2581trying"], "bleu": 0.010392142569332444, "rouge_l": 0.1944223107569721}
{"id": 4334, "predictions": ["\u2581// \u2581 GetKey List \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581the \u2581 keys \u2581in \u2581the \u2581section"], "references": ["\u2581// \u2581 GetKey List \u2581returns \u2581the \u2581list \u2581of \u2581all \u2581 keys \u2581in \u2581give \u2581section \u2581// \u2581in \u2581the \u2581same \u2581order \u2581in \u2581the \u2581file . \u2581// \u2581It \u2581returns \u2581nil \u2581if \u2581given \u2581section"], "bleu": 0.1834322958332879, "rouge_l": 0.5450171821305841}
{"id": 4248, "predictions": ["\u2581// \u2581 List Cmd \u2581returns \u2581a \u2581 Command \u2581command \u2581for \u2581the \u2581 cli \u2581flags ."], "references": ["\u2581// \u2581 List Cmd \u2581represents \u2581the \u2581list \u2581command"], "bleu": 0.2490328638846773, "rouge_l": 0.46003016591251883}
{"id": 4810, "predictions": ["\u2581// \u2581check Conflicts In Pr io _ no no s \u2581 - \u2581checks \u2581if \u2581the \u2581 Conflicts \u2581 exists \u2581in \u2581the \u2581// \u2581 topo _ no _ no _ no"], "references": ["\u2581// \u2581Ensure \u2581that \u2581prefix - conflicting \u2581implementing \u2581concrete \u2581types \u2581// \u2581are \u2581all \u2581registered \u2581in \u2581the \u2581priority \u2581list . \u2581// \u2581Returns \u2581an \u2581error \u2581if \u2581a \u2581dis a mb \u2581conflict \u2581is \u2581found"], "bleu": 0.06561789050024278, "rouge_l": 0.16666666666666666}
{"id": 5471, "predictions": ["\u2581// \u2581 parseFile Encryption Record \u2581reads \u2581the \u2581 Encryption Record \u2581from \u2581the \u2581 data \u2581file ."], "references": ["\u2581// \u2581 parseFile Encryption Record \u2581processes \u2581the \u2581optional \u2581file \u2581encryption \u2581record \u2581from \u2581a \u2581file \u2581header ."], "bleu": 0.32014060615821366, "rouge_l": 0.5625}
{"id": 5802, "predictions": ["\u2581// \u2581compress \u2581compress es \u2581the \u2581 v v ."], "references": ["\u2581// \u2581compress \u2581is \u2581 COMPRESS \u2581from \u2581the \u2581paper s ."], "bleu": 0.19766634639198594, "rouge_l": 0.41709401709401706}
{"id": 5419, "predictions": ["\u2581// \u2581 select Transfer Encoding \u2581returns \u2581the \u2581base \u2581encoding \u2581of \u2581 content \u2581in \u2581 src , \u2581// \u2581if \u2581 none \u2581is \u2581found , \u2581 this \u2581will \u2581be \u2581 split \u2581into"], "references": ["\u2581// \u2581 select Transfer Encoding \u2581scan s \u2581 content \u2581for \u2581non - ASCII \u2581characters \u2581and \u2581selects \u2581' b ' \u2581or \u2581' q ' \u2581encoding ."], "bleu": 0.17115279944073908, "rouge_l": 0.25878787878787884}
{"id": 5900, "predictions": ["\u2581// \u2581Ensure First User \u2581is \u2581called \u2581when \u2581a \u2581user \u2581is \u2581already \u2581 owned \u2581by \u2581the \u2581 name \u2581// \u2581and \u2581 add \u2581it \u2581to \u2581the \u2581 name \u2581of \u2581the \u2581"], "references": ["\u2581// \u2581Ensure First User \u2581ensures \u2581the \u2581existence \u2581of \u2581a \u2581first \u2581user \u2581if \u2581no \u2581other \u2581has \u2581been \u2581// \u2581created ."], "bleu": 0.13821098063724324, "rouge_l": 0.30305180979418034}
{"id": 4850, "predictions": ["\u2581// \u2581load \u2581message \u2581 - \u2581 loads \u2581a \u2581 IP 2 Location \u2581record \u2581from \u2581 this \u2581 IP \u2581address ."], "references": ["\u2581// \u2581populate \u2581record \u2581with \u2581message"], "bleu": 0.07264339766175722, "rouge_l": 0.17941176470588235}
{"id": 5621, "predictions": ["\u2581// \u2581Get Owner \u2581returns \u2581the \u2581 owner \u2581of \u2581the \u2581process ."], "references": ["\u2581// \u2581Get Owner \u2581returns \u2581who \u2581 owns \u2581the \u2581 lockfile ."], "bleu": 0.37700638045494705, "rouge_l": 0.6363636363636364}
{"id": 4142, "predictions": ["\u2581// \u2581 Log \u2581logs \u2581a \u2581log \u2581message \u2581to \u2581the \u2581specified \u2581log ."], "references": ["\u2581// \u2581 Log \u2581adds \u2581a \u2581log \u2581message \u2581to \u2581the \u2581 app . \u2581Specify ing \u2581a \u2581good \u2581source \u2581is \u2581good \u2581so \u2581the \u2581// \u2581user \u2581can \u2581 filter \u2581where \u2581the \u2581message \u2581come"], "bleu": 0.1109752880681072, "rouge_l": 0.3978260869565217}
{"id": 5506, "predictions": ["\u2581// \u2581queue Filter \u2581adds \u2581a \u2581new \u2581 filter \u2581to \u2581the \u2581 decode ."], "references": ["\u2581// \u2581queue Filter \u2581adds \u2581a \u2581 filter Block \u2581to \u2581the \u2581end \u2581 decode Reader ' s \u2581filters ."], "bleu": 0.3249795083734467, "rouge_l": 0.7523124357656733}
{"id": 4545, "predictions": ["\u2581// \u2581 Range \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581 Range \u2581for \u2581the \u2581given \u2581 Range"], "references": ["\u2581// \u2581 Range \u2581implements \u2581gRPC \u2581 KV Server . \u2581// \u2581 Range \u2581gets \u2581the \u2581 keys \u2581in \u2581the \u2581range \u2581from \u2581the \u2581store ."], "bleu": 0.13206846022730853, "rouge_l": 0.39739413680781754}
{"id": 4726, "predictions": ["\u2581// \u2581 Current \u2581returns \u2581the \u2581current \u2581user ' s \u2581 data ."], "references": ["\u2581// \u2581 Current \u2581returns \u2581the \u2581currently \u2581logged - in \u2581user , \u2581// \u2581or \u2581nil \u2581if \u2581the \u2581user \u2581is \u2581not \u2581signed \u2581in ."], "bleu": 0.1777333473258092, "rouge_l": 0.391025641025641}
{"id": 5701, "predictions": ["\u2581// \u2581lookup \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581lookup \u2581takes \u2581a \u2581Go \u2581 type \u2581as \u2581argument \u2581and \u2581returns \u2581the \u2581matching \u2581struct Type \u2581value , \u2581// \u2581potentially \u2581creating \u2581it \u2581if \u2581it \u2581didn ' t \u2581already \u2581exist . \u2581//"], "bleu": 0.06413317978967234, "rouge_l": 0.24729729729729732}
{"id": 4546, "predictions": ["\u2581// \u2581 Put \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581etcd \u2581server ."], "references": ["\u2581// \u2581 Put \u2581implements \u2581gRPC \u2581 KV Server . \u2581// \u2581 Put \u2581puts \u2581the \u2581given \u2581 key \u2581into \u2581the \u2581store . \u2581// \u2581 A \u2581 put \u2581request \u2581increase s \u2581the"], "bleu": 0.04962965758858181, "rouge_l": 0.26521739130434785}
{"id": 4548, "predictions": ["\u2581// \u2581 Txn \u2581is \u2581the \u2581main \u2581implementation \u2581of \u2581 raft ."], "references": ["\u2581// \u2581 Txn \u2581implements \u2581gRPC \u2581 KV Server . \u2581// \u2581 Txn \u2581processes \u2581all \u2581the \u2581requests \u2581in \u2581one \u2581transaction . \u2581// \u2581 A \u2581txn \u2581request \u2581increase s \u2581the \u2581revision \u2581of"], "bleu": 0.04481889913725955, "rouge_l": 0.22509225092250923}
{"id": 4863, "predictions": ["\u2581// \u2581 Main \u2581is \u2581the \u2581main \u2581point \u2581for \u2581 dot ."], "references": ["\u2581// \u2581 Main \u2581draw s \u2581 vertical ly \u2581 spaced \u2581lines \u2581and \u2581returns \u2581the \u2581 filename . \u2581// \u2581This \u2581should \u2581only \u2581be \u2581used \u2581during \u2581testing ."], "bleu": 0.06235746683221999, "rouge_l": 0.3022295623451693}
{"id": 4388, "predictions": ["\u2581// \u2581 Tap \u2581 wraps \u2581the \u2581 Tap \u2581event \u2581to \u2581the \u2581 Selection . \u2581// \u2581// \u2581It \u2581is \u2581called \u2581when \u2581the \u2581 Selection \u2581is \u2581 checked ."], "references": ["\u2581// \u2581 Tap \u2581performs \u2581the \u2581provided \u2581 Tap \u2581event \u2581on \u2581each \u2581element \u2581in \u2581the \u2581selection ."], "bleu": 0.13217947626377288, "rouge_l": 0.43884892086330934}
{"id": 4987, "predictions": ["\u2581// \u2581 helper \u2581function \u2581to \u2581 call \u2581 text \u2581to \u2581 w ."], "references": ["\u2581// \u2581tmpl \u2581executes \u2581the \u2581given \u2581template \u2581 text \u2581on \u2581 data , \u2581writing \u2581the \u2581result \u2581to \u2581 w ."], "bleu": 0.20522771238299164, "rouge_l": 0.4231912784935579}
{"id": 5456, "predictions": ["\u2581// \u2581 Assign \u2581 assign \u2581 symbol \u2581to \u2581a \u2581 slice \u2581of \u2581 key ."], "references": ["\u2581// \u2581 Assign \u2581produces \u2581a \u2581command \u2581to \u2581 assign \u2581a \u2581value \u2581to \u2581a \u2581variable \u2581within \u2581a \u2581go \u2581session"], "bleu": 0.16937251755859037, "rouge_l": 0.41739980449657876}
{"id": 5810, "predictions": ["\u2581// \u2581 Dynamic Type \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581process ."], "references": ["\u2581// \u2581 Dynamic Type \u2581returns \u2581the \u2581concrete \u2581 type \u2581stored \u2581in \u2581the \u2581interface \u2581 type \u2581 t \u2581at \u2581address \u2581a . \u2581// \u2581If \u2581the \u2581interface \u2581is \u2581nil , \u2581returns \u2581nil"], "bleu": 0.12212628222282819, "rouge_l": 0.44202898550724634}
{"id": 4361, "predictions": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581 Page ' s \u2581 data ."], "references": ["\u2581// \u2581 Reset \u2581deletes \u2581all \u2581cookies \u2581 set \u2581for \u2581the \u2581current \u2581 domain \u2581and \u2581 navigate s \u2581to \u2581a \u2581 blank \u2581 page . \u2581// \u2581 Un like \u2581 Destroy"], "bleu": 0.052847858828081004, "rouge_l": 0.3536231884057971}
{"id": 4137, "predictions": ["\u2581// \u2581Get UUID \u2581returns \u2581the \u2581 UUID \u2581of \u2581the \u2581 app"], "references": ["\u2581// \u2581Get UUID \u2581returns \u2581the \u2581 app \u2581 v 4 \u2581 UUID . \u2581An \u2581 UUID \u2581will \u2581be \u2581generated \u2581// \u2581if \u2581it \u2581does \u2581not \u2581exist ."], "bleu": 0.16214421144865382, "rouge_l": 0.40297274979355907}
{"id": 5623, "predictions": ["\u2581// \u2581 Unlock \u2581 unlock s \u2581the \u2581 owner \u2581of \u2581the \u2581 owner \u2581of \u2581the \u2581 owner ."], "references": ["\u2581// \u2581 Unlock \u2581a \u2581lock \u2581again , \u2581if \u2581we \u2581 owned \u2581it . \u2581Returns \u2581any \u2581error \u2581that \u2581 h append \u2581during \u2581release \u2581of \u2581lock ."], "bleu": 0.1021572652395868, "rouge_l": 0.31629629629629635}
{"id": 5522, "predictions": ["\u2581// \u2581 Stem \u2581returns \u2581the \u2581 left \u2581 product \u2581of \u2581the \u2581given \u2581word ."], "references": ["\u2581// \u2581 Stem \u2581a \u2581word \u2581in \u2581the \u2581specified \u2581 language . \u2581//"], "bleu": 0.195647514979229, "rouge_l": 0.4680306905370844}
{"id": 5914, "predictions": ["\u2581// \u2581 New Asset Server \u2581creates \u2581a \u2581new \u2581 strip Prefix \u2581 path"], "references": ["\u2581// \u2581 New Asset Server \u2581constructs \u2581an \u2581asset \u2581server \u2581handler \u2581that \u2581serves \u2581an \u2581asset \u2581// \u2581directory \u2581on \u2581a \u2581specified \u2581 path \u2581and \u2581serves \u2581the \u2581index \u2581file \u2581for \u2581not \u2581found \u2581paths"], "bleu": 0.10959957458274744, "rouge_l": 0.3473309608540925}
{"id": 4887, "predictions": ["\u2581// \u2581Create String Path \u2581creates \u2581a \u2581new \u2581 path \u2581with \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581Create String Path \u2581creates \u2581a \u2581 path \u2581from \u2581the \u2581string \u2581 s \u2581at \u2581 x , \u2581 y , \u2581and \u2581returns \u2581the \u2581string \u2581 width ."], "bleu": 0.19898533817085284, "rouge_l": 0.4981440237564959}
{"id": 4561, "predictions": ["\u2581// \u2581new Routes \u2581creates \u2581a \u2581new \u2581 routes ."], "references": ["\u2581// \u2581new Routes \u2581returns \u2581a \u2581 usable \u2581 Routes \u2581based \u2581on \u2581the \u2581 Local Peer \u2581and \u2581existing \u2581 Peers ."], "bleu": 0.08900211389367521, "rouge_l": 0.38730158730158726}
{"id": 5918, "predictions": ["\u2581// \u2581Parse Token \u2581parses \u2581a \u2581 token \u2581 token \u2581string \u2581into \u2581a \u2581 Token Claims ."], "references": ["\u2581// \u2581Parse Token \u2581will \u2581parse \u2581the \u2581presented \u2581 token \u2581and \u2581return \u2581its \u2581claims , \u2581if \u2581it \u2581is \u2581// \u2581expired \u2581and \u2581eventual \u2581errors ."], "bleu": 0.11424734630473865, "rouge_l": 0.29804560260586316}
{"id": 4505, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface \u2581for \u2581// \u2581String String ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581 json . Unmarshaler . \u2581// \u2581It \u2581supports \u2581string \u2581and \u2581null \u2581input . \u2581 Blank \u2581string \u2581input \u2581produces \u2581a \u2581null \u2581String . \u2581// \u2581It \u2581also \u2581supports \u2581"], "bleu": 0.1136281554171264, "rouge_l": 0.42657342657342656}
{"id": 5426, "predictions": ["\u2581// \u2581detect Binary Body \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 body \u2581is \u2581a \u2581binary \u2581 body ."], "references": ["\u2581// \u2581detect Binary Body \u2581returns \u2581true \u2581if \u2581the \u2581 mail \u2581header \u2581defines \u2581a \u2581binary \u2581 body ."], "bleu": 0.66543778279419, "rouge_l": 0.8235294117647058}
{"id": 4745, "predictions": ["\u2581// \u2581 Run InTransaction \u2581runs \u2581a \u2581transaction \u2581with \u2581the \u2581given \u2581context ."], "references": ["\u2581// \u2581 Run InTransaction \u2581runs \u2581 f \u2581in \u2581a \u2581transaction . \u2581It \u2581calls \u2581 f \u2581with \u2581a \u2581transaction \u2581// \u2581context \u2581tc \u2581that \u2581 f \u2581should \u2581use \u2581for \u2581all \u2581 App"], "bleu": 0.10342136170982112, "rouge_l": 0.3978260869565217}
{"id": 4844, "predictions": ["\u2581// \u2581Walk Prefix \u2581walk s \u2581the \u2581prefix \u2581of \u2581a \u2581tree \u2581and \u2581walk s \u2581the \u2581prefix ."], "references": ["\u2581// \u2581Walk Prefix \u2581is \u2581used \u2581to \u2581walk \u2581the \u2581tree \u2581under \u2581a \u2581prefix"], "bleu": 0.17534823156623092, "rouge_l": 0.5132211538461539}
{"id": 5718, "predictions": ["\u2581// \u2581print \u2581prints \u2581the \u2581log \u2581to \u2581the \u2581given \u2581log ."], "references": ["\u2581// \u2581print \u2581outputs \u2581a \u2581log \u2581message \u2581to \u2581the \u2581writer \u2581associated \u2581with \u2581the \u2581backend \u2581after \u2581// \u2581creating \u2581a \u2581prefix \u2581for \u2581the \u2581given \u2581level \u2581and \u2581tag \u2581according \u2581to \u2581the \u2581 format Header"], "bleu": 0.03412064524452389, "rouge_l": 0.27518796992481204}
{"id": 4483, "predictions": ["\u2581// \u2581Check \u2581whether \u2581 this \u2581is \u2581a \u2581valid \u2581 path \u2581and \u2581 set \u2581the \u2581environment \u2581variables \u2581// \u2581and \u2581the \u2581 name \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581Check Disallowed \u2581checks \u2581that \u2581no \u2581environment \u2581variables \u2581with \u2581the \u2581prefix \u2581are \u2581 set \u2581// \u2581that \u2581we \u2581don ' t \u2581know \u2581how \u2581or \u2581want \u2581to \u2581parse . \u2581This \u2581is \u2581likely"], "bleu": 0.08668152489983967, "rouge_l": 0.24682080924855493}
{"id": 4569, "predictions": ["\u2581// \u2581 ReadFrom \u2581implements \u2581 net . Peer From \u2581interface . \u2581It \u2581serialize s \u2581the \u2581// \u2581peer \u2581from \u2581the \u2581 Peer ."], "references": ["\u2581// \u2581 ReadFrom \u2581implements \u2581 net . Packet Conn . \u2581// \u2581 Clients \u2581should \u2581 consume \u2581from \u2581 ReadFrom \u2581without \u2581blocking ."], "bleu": 0.3366593727675651, "rouge_l": 0.5454545454545454}
{"id": 4364, "predictions": ["\u2581// \u2581 SetCookie \u2581adds \u2581a \u2581cookie \u2581to \u2581the \u2581cookie"], "references": ["\u2581// \u2581 SetCookie \u2581sets \u2581a \u2581cookie \u2581on \u2581the \u2581 page ."], "bleu": 0.2599737434479445, "rouge_l": 0.5893719806763285}
{"id": 5875, "predictions": ["\u2581// \u2581 Wrap HTML \u2581 wraps \u2581 html . HTML \u2581with \u2581 html \u2581 type"], "references": ["\u2581// \u2581 Wrap HTML \u2581 wraps \u2581 s \u2581within \u2581HTML \u2581tag \u2581having \u2581attributes \u2581attrs . \u2581Note , \u2581// \u2581 Wrap HTML \u2581does \u2581not \u2581 escape \u2581 s \u2581value ."], "bleu": 0.1927249587231562, "rouge_l": 0.47286821705426363}
{"id": 4756, "predictions": ["\u2581// \u2581 Function \u2581function \u2581to \u2581determine \u2581if \u2581the \u2581 type \u2581is \u2581a \u2581 type ."], "references": ["\u2581// \u2581assigns To \u2581returns \u2581true \u2581if \u2581any \u2581of \u2581the \u2581 code \u2581in \u2581 scope \u2581assigns \u2581to \u2581or \u2581takes \u2581the \u2581address \u2581of \u2581 x ."], "bleu": 0.07819352282933813, "rouge_l": 0.2953995157384988}
{"id": 6106, "predictions": ["\u2581// \u2581server \u2581returns \u2581the \u2581instance \u2581of \u2581the \u2581instance \u2581of \u2581the \u2581instance \u2581of \u2581the \u2581server ."], "references": ["\u2581// \u2581Makes \u2581a \u2581 GET \u2581 call \u2581on \u2581the \u2581given \u2581server \u2581and \u2581returns \u2581the \u2581current \u2581instance \u2581of \u2581the \u2581server ."], "bleu": 0.2629334322955157, "rouge_l": 0.5013698630136987}
{"id": 4263, "predictions": ["\u2581// \u2581 Ad opt Cmd \u2581returns \u2581a \u2581command \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581a \u2581 cobra \u2581command \u2581for \u2581// \u2581 Kubernetes \u2581 Ad opt \u2581command ."], "references": ["\u2581// \u2581 Ad opt Cmd \u2581represents \u2581the \u2581 adopt \u2581command"], "bleu": 0.17034799410713272, "rouge_l": 0.40283018867924525}
{"id": 4415, "predictions": ["\u2581// \u2581HTTP Reverse Proxy \u2581returns \u2581a \u2581 slice \u2581of \u2581proxy \u2581proxy \u2581to \u2581the \u2581proxy \u2581server ."], "references": ["\u2581// \u2581HTTP Reverse Proxy \u2581provides \u2581a \u2581default \u2581setup \u2581for \u2581proxy ing \u2581// \u2581internal \u2581components \u2581within \u2581the \u2581 framework"], "bleu": 0.21884144707425857, "rouge_l": 0.40744274809160297}
{"id": 4219, "predictions": ["\u2581// \u2581 Used \u2581to \u2581periodically \u2581 collect s \u2581all \u2581 subscribed \u2581topic \u2581 data \u2581from \u2581the \u2581// \u2581 Consumer ' s \u2581 data ."], "references": ["\u2581// \u2581topic \u2581watcher \u2581loop , \u2581triggered \u2581by \u2581the \u2581main Loop"], "bleu": 0.06024757292375468, "rouge_l": 0.19062500000000002}
{"id": 4908, "predictions": ["\u2581// \u2581 Star \u2581 show \u2581 color \u2581 data \u2581from \u2581 x"], "references": ["\u2581// \u2581 Star \u2581draw s \u2581many \u2581lines \u2581from \u2581a \u2581 center ."], "bleu": 0.21401603033752975, "rouge_l": 0.4166666666666667}
{"id": 4715, "predictions": ["\u2581// \u2581 key To Reference Value \u2581returns \u2581a \u2581 PropertyValue Value \u2581that \u2581represents \u2581the \u2581 key \u2581// \u2581 name \u2581and \u2581 path ."], "references": ["\u2581// \u2581 key To Reference Value \u2581is \u2581the \u2581same \u2581as \u2581 key To Proto \u2581except \u2581the \u2581output \u2581is \u2581a \u2581// \u2581 PropertyValue _ Reference Value \u2581instead \u2581of \u2581a \u2581 Reference"], "bleu": 0.2468684838443288, "rouge_l": 0.4422960725075529}
{"id": 4638, "predictions": ["\u2581// \u2581 Stats \u2581returns \u2581statistics \u2581about \u2581the \u2581 memcache ."], "references": ["\u2581// \u2581 Stats \u2581retrieves \u2581the \u2581current \u2581 memcache \u2581statistics ."], "bleu": 0.3087818953963449, "rouge_l": 0.7000000000000001}
{"id": 5677, "predictions": ["\u2581// \u2581 Install \u2581registers \u2581the \u2581given \u2581 type \u2581and \u2581prepare s \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Install \u2581adds \u2581an \u2581adapter \u2581for \u2581typ . \u2581// \u2581// \u2581The \u2581function \u2581panic s \u2581if \u2581one \u2581of \u2581the \u2581encoder \u2581and \u2581decoder \u2581function s \u2581of \u2581the \u2581// \u2581adapter \u2581are \u2581nil"], "bleu": 0.0689816059082601, "rouge_l": 0.2934707903780069}
{"id": 5963, "predictions": ["\u2581// \u2581 Run \u2581runs \u2581the \u2581 Rule ."], "references": ["\u2581// \u2581 Run \u2581executes \u2581the \u2581rule \u2581into \u2581a \u2581 content \u2581to \u2581find \u2581all \u2581lines \u2581that \u2581matches \u2581it ."], "bleu": 0.09835552785740045, "rouge_l": 0.43160377358490565}
{"id": 4739, "predictions": ["\u2581// \u2581Get Presence \u2581returns \u2581the \u2581presence \u2581of \u2581the \u2581given \u2581 id \u2581from \u2581the \u2581given \u2581context ."], "references": ["\u2581// \u2581Get Presence \u2581retrieves \u2581a \u2581user ' s \u2581presence . \u2581// \u2581If \u2581the \u2581from \u2581address \u2581is \u2581an \u2581 empty \u2581string \u2581the \u2581default \u2581// \u2581 ( your app @ app spot"], "bleu": 0.07504695770013659, "rouge_l": 0.2885135135135135}
{"id": 4711, "predictions": ["\u2581// \u2581fetch \u2581fetches \u2581the \u2581 data \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581fetch \u2581fetches \u2581read BufferSize \u2581bytes \u2581starting \u2581at \u2581the \u2581given \u2581offset . \u2581 On \u2581 success , \u2581// \u2581the \u2581 data \u2581is \u2581saved \u2581as \u2581 r . buf ."], "bleu": 0.05404339594234205, "rouge_l": 0.32998454404945904}
{"id": 4109, "predictions": ["\u2581// \u2581 ResetPassword \u2581 asks \u2581the \u2581user \u2581to \u2581the \u2581user ."], "references": ["\u2581// \u2581 ResetPassword \u2581actually \u2581resets \u2581the \u2581password \u2581of \u2581the \u2581user . \u2581It \u2581needs \u2581the \u2581 token \u2581// \u2581string . \u2581The \u2581new \u2581password \u2581will \u2581be \u2581a \u2581random \u2581string , \u2581that \u2581will"], "bleu": 0.05804092400844258, "rouge_l": 0.3151291512915129}
{"id": 5520, "predictions": ["\u2581// \u2581step 2 a \u2581converts \u2581word \u2581to \u2581 2 d \u2581mode ."], "references": ["\u2581// \u2581 Step \u2581 2 a \u2581is \u2581the \u2581removal \u2581of \u2581verb \u2581 suffixes \u2581beginning \u2581 y , \u2581// \u2581 Search \u2581for \u2581the \u2581longest \u2581among \u2581the \u2581following \u2581 suffixes \u2581// \u2581in"], "bleu": 0.03836646366677146, "rouge_l": 0.17681159420289855}
{"id": 5515, "predictions": ["\u2581// \u2581 UInt 32 \u2581returns \u2581the \u2581uint 32 \u2581value \u2581from \u2581the \u2581 year"], "references": ["\u2581// \u2581 readUint 32 \u2581reads \u2581a \u2581 R AR \u2581 V 3 \u2581encoded \u2581uint 32"], "bleu": 0.14742765518715117, "rouge_l": 0.35260115606936415}
{"id": 4197, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581the \u2581middleware \u2581function \u2581to \u2581 add \u2581a \u2581 HandlerFunc \u2581to \u2581the \u2581// \u2581 Json p Middleware \u2581interface ."], "references": ["\u2581// \u2581 Middleware Func \u2581returns \u2581a \u2581 HandlerFunc \u2581that \u2581implements \u2581the \u2581middleware ."], "bleu": 0.21223633441554032, "rouge_l": 0.5140449438202248}
{"id": 5764, "predictions": ["\u2581// \u2581typeName \u2581returns \u2581a \u2581 name \u2581of \u2581the \u2581 type \u2581of \u2581 v . Process ."], "references": ["\u2581// \u2581typeName \u2581returns \u2581a \u2581string \u2581representing \u2581the \u2581 type \u2581of \u2581 this \u2581object ."], "bleu": 0.4385068972747104, "rouge_l": 0.6747787610619468}
{"id": 4330, "predictions": ["\u2581// \u2581 Load FromData \u2581 loads \u2581a \u2581 config \u2581from \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 Load FromData \u2581accepts \u2581raw \u2581 data \u2581directly \u2581from \u2581memory \u2581// \u2581and \u2581returns \u2581a \u2581new \u2581configuration \u2581representation . \u2581// \u2581Note \u2581that \u2581the \u2581configuration \u2581is \u2581written \u2581to \u2581the \u2581system \u2581//"], "bleu": 0.10845843803319692, "rouge_l": 0.2934707903780069}
{"id": 6060, "predictions": ["\u2581// \u2581Returns \u2581the \u2581 path \u2581of \u2581the \u2581 ip \u2581address"], "references": ["\u2581// \u2581Returns \u2581the \u2581 country \u2581 code \u2581and \u2581region \u2581 code \u2581for \u2581an \u2581 IP \u2581address . \u2581 Requires \u2581// \u2581the \u2581 GeoIP \u2581 Region \u2581database ."], "bleu": 0.07622034247017173, "rouge_l": 0.2995090016366612}
{"id": 4390, "predictions": ["\u2581// \u2581 F lic k ById \u2581creates \u2581a \u2581new \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581// \u2581 Selection . \u2581It \u2581returns \u2581an"], "references": ["\u2581// \u2581 F lic k Finger \u2581performs \u2581a \u2581 flick \u2581touch \u2581action \u2581by \u2581the \u2581provided \u2581offset \u2581and \u2581at \u2581the \u2581// \u2581provided \u2581speed \u2581on \u2581exactly \u2581one \u2581element ."], "bleu": 0.18391565202644336, "rouge_l": 0.3896631823461092}
{"id": 4190, "predictions": ["\u2581// \u2581Find Routes And Path Matched \u2581finds \u2581the \u2581 routes \u2581and \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 routes ."], "references": ["\u2581// \u2581 Same \u2581as \u2581Find Routes , \u2581but \u2581return \u2581in \u2581addition \u2581a \u2581boolean \u2581indicating \u2581if \u2581the \u2581 path \u2581was \u2581matched . \u2581// \u2581 Useful \u2581to \u2581return \u2581 405"], "bleu": 0.1029759613011821, "rouge_l": 0.28315649867374004}
{"id": 6095, "predictions": ["\u2581// \u2581 Substitute \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581patterns \u2581in \u2581the \u2581 path Pattern ."], "references": ["\u2581// \u2581 Substitute \u2581at temp s \u2581to \u2581substitute \u2581the \u2581 path \u2581pattern \u2581variables \u2581with \u2581the \u2581given \u2581values . \u2581// \u2581 - \u2581If \u2581the \u2581substitution \u2581succeeds , \u2581it \u2581returns \u2581the \u2581resulting"], "bleu": 0.10337337995132273, "rouge_l": 0.32972972972972975}
{"id": 4500, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface \u2581for \u2581 Bool ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581 json . Unmarshaler . \u2581// \u2581It \u2581supports \u2581number \u2581and \u2581null \u2581input . \u2581// \u25810 \u2581will \u2581not \u2581be \u2581considered \u2581a \u2581null \u2581 Bool . \u2581// \u2581It \u2581also"], "bleu": 0.11831390399585888, "rouge_l": 0.43416370106761565}
{"id": 5886, "predictions": ["\u2581// \u2581 A \u2581 call \u2581function \u2581to \u2581 call \u2581 authorizer \u2581on \u2581 authorizer \u2581on \u2581context"], "references": ["\u2581// \u2581 A \u2581is \u2581a \u2581short - hand \u2581function \u2581to \u2581construct \u2581an \u2581 authorizer . \u2581It \u2581will \u2581also \u2581 add \u2581 tracing \u2581// \u2581 code \u2581around \u2581the \u2581execution \u2581of \u2581the"], "bleu": 0.08732597634122143, "rouge_l": 0.32972972972972975}
{"id": 4849, "predictions": ["\u2581// \u2581read \u2581uint 128 \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581read \u2581unsigned \u2581 128 - bit \u2581integer"], "bleu": 0.17033186037639278, "rouge_l": 0.32504440497335696}
{"id": 5204, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 NodeType ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581 NodeType \u2581as \u2581string \u2581value ."], "bleu": 0.3264971028628052, "rouge_l": 0.6724409448818898}
{"id": 5902, "predictions": ["\u2581// \u2581 Open Stream \u2581creates \u2581a \u2581new \u2581stream ."], "references": ["\u2581// \u2581 Open Stream \u2581will \u2581open \u2581a \u2581stream \u2581and \u2581 continuous ly \u2581forward \u2581events \u2581to \u2581the \u2581specified \u2581// \u2581receiver \u2581until \u2581the \u2581stream \u2581is \u2581closed . \u2581If \u2581a \u2581 token \u2581is"], "bleu": 0.0428414224319881, "rouge_l": 0.32720306513409964}
{"id": 5428, "predictions": ["\u2581// \u2581 B Binary th Match All \u2581returns \u2581the \u2581 Part \u2581of \u2581the \u2581 children \u2581of \u2581the \u2581 Part \u2581of \u2581the \u2581// \u2581 Part \u2581of \u2581the \u2581 Part \u2581of \u2581the"], "references": ["\u2581// \u2581 B read th Match All \u2581performs \u2581a \u2581 breadth \u2581first \u2581 search \u2581of \u2581the \u2581 Part \u2581tree \u2581and \u2581returns \u2581all \u2581parts \u2581that \u2581cause \u2581// \u2581the \u2581given \u2581matcher \u2581to"], "bleu": 0.20290499947732502, "rouge_l": 0.4666666666666668}
{"id": 4399, "predictions": ["\u2581// \u2581 Active \u2581returns \u2581true \u2581if \u2581the \u2581 set \u2581of \u2581elements \u2581have \u2581been \u2581 active ."], "references": ["\u2581// \u2581 Active \u2581returns \u2581true \u2581if \u2581the \u2581single \u2581element \u2581that \u2581the \u2581selection \u2581refers \u2581to \u2581is \u2581 active ."], "bleu": 0.4379675661000709, "rouge_l": 0.5820610687022901}
{"id": 4247, "predictions": ["\u2581// \u2581 Run Annotated \u2581runs \u2581the \u2581given \u2581task \u2581and \u2581returns \u2581a \u2581 warning \u2581that \u2581is \u2581// \u2581 canceled ."], "references": ["\u2581// \u2581 Run Annotated \u2581 annotate s \u2581a \u2581task \u2581with \u2581a \u2581 description \u2581and \u2581a \u2581sequence \u2581of \u2581symbols \u2581indicating \u2581task \u2581activity \u2581until \u2581it \u2581terminate s"], "bleu": 0.16434573273781525, "rouge_l": 0.31054545454545457}
{"id": 4597, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 TCP \u2581server ."], "references": ["\u2581// \u2581 Send \u2581implements \u2581 TCP Sender \u2581by \u2581writing \u2581the \u2581 size \u2581of \u2581the \u2581msg \u2581as \u2581a \u2581big - endian \u2581// \u2581uint 32 \u2581before \u2581the \u2581msg . \u2581msgs \u2581larger \u2581than"], "bleu": 0.06004676067680603, "rouge_l": 0.26521739130434785}
{"id": 4804, "predictions": ["\u2581// \u2581 decode Field Number And Typ 3 \u2581decodes \u2581the \u2581field \u2581number \u2581and \u2581returns \u2581the \u2581number \u2581of \u2581bytes \u2581// \u2581in \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Read \u2581field \u2581 key ."], "bleu": 0.07305891545072536, "rouge_l": 0.33813747228381374}
{"id": 4762, "predictions": ["\u2581// \u2581Default Ticket \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 active \u2581 app ."], "references": ["\u2581// \u2581Default Ticket \u2581returns \u2581a \u2581ticket \u2581used \u2581for \u2581background \u2581context \u2581or \u2581 dev _ app server ."], "bleu": 0.22331928599561657, "rouge_l": 0.4438669438669438}
{"id": 4878, "predictions": ["\u2581// \u2581 New Stack Graphic Context \u2581returns \u2581a \u2581new \u2581 Stack Graphic \u2581context ."], "references": ["\u2581/** \u2581* \u2581Create \u2581a \u2581new \u2581 Graphic \u2581context \u2581from \u2581an \u2581image \u2581*/"], "bleu": 0.195647514979229, "rouge_l": 0.3900255754475704}
{"id": 6020, "predictions": ["\u2581// \u2581closest InRange \u2581returns \u2581the \u2581 major \u2581and \u2581end \u2581of \u2581the \u2581given \u2581range ."], "references": ["\u2581// \u2581closest InRange \u2581finds \u2581the \u2581closest \u2581valid \u2581value \u2581within \u2581the \u2581range , \u2581// \u2581to \u2581a \u2581given \u2581value . \u2581 Values \u2581outside \u2581the \u2581range \u2581are \u2581 clipped \u2581to \u2581either \u2581// \u2581the"], "bleu": 0.06597285649383577, "rouge_l": 0.2986013986013986}
{"id": 5482, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581next \u2581 byte \u2581from \u2581the \u2581 pack FileReader ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581packed \u2581 data \u2581for \u2581the \u2581current \u2581file \u2581into \u2581 p ."], "bleu": 0.3189038559775543, "rouge_l": 0.5928725701943846}
{"id": 4886, "predictions": ["\u2581// \u2581 GetString Bounds \u2581returns \u2581the \u2581 width \u2581of \u2581the \u2581 top \u2581of \u2581the \u2581given \u2581 font ."], "references": ["\u2581// \u2581 GetString Bounds \u2581returns \u2581the \u2581approximate \u2581pixel \u2581bounds \u2581of \u2581the \u2581string \u2581 s \u2581at \u2581 x , \u2581 y . \u2581// \u2581The \u2581 left \u2581edge \u2581of \u2581the \u2581 em"], "bleu": 0.22179811221414708, "rouge_l": 0.47843137254901963}
{"id": 5976, "predictions": ["\u2581// \u2581 Load Rules From Dir \u2581 loads \u2581the \u2581 ruleset \u2581from \u2581the \u2581directory ."], "references": ["\u2581// \u2581 Load Rules FromFile \u2581 loads \u2581rules \u2581from \u2581all \u2581YAML \u2581files \u2581inside \u2581a \u2581directory ."], "bleu": 0.2818720423903184, "rouge_l": 0.5772870662460569}
{"id": 5362, "predictions": ["\u2581// \u2581 Cascade Delete \u2581 loads \u2581the \u2581 data \u2581from \u2581the \u2581 model ."], "references": ["\u2581// \u2581Deletes \u2581references \u2581to \u2581a \u2581document \u2581from \u2581its \u2581related \u2581documents"], "bleu": 0.09782375748961449, "rouge_l": 0.17183098591549298}
{"id": 5753, "predictions": ["\u2581// \u2581 alloc Heap Info \u2581returns \u2581the \u2581heap Info \u2581for \u2581the \u2581given \u2581 slice \u2581of \u2581 type ."], "references": ["\u2581// \u2581 Same \u2581as \u2581find Heap Info , \u2581but \u2581 allocate s \u2581the \u2581heap Info \u2581if \u2581it \u2581// \u2581hasn ' t \u2581been \u2581allocated \u2581yet ."], "bleu": 0.1227323214772354, "rouge_l": 0.36148148148148146}
{"id": 4738, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581remote \u2581state ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581presence \u2581update ."], "bleu": 0.43361890903486755, "rouge_l": 0.6500888099467139}
{"id": 5625, "predictions": ["\u2581// \u2581Set Fallback Logger \u2581sets \u2581the \u2581logger ' s \u2581logger"], "references": ["\u2581// \u2581Set Fallback Logger \u2581sets \u2581a \u2581 Logger \u2581to \u2581be \u2581used \u2581if \u2581there \u2581aren ' t \u2581any \u2581logger s \u2581added \u2581or \u2581any \u2581of \u2581// \u2581the \u2581added \u2581logger s \u2581are \u2581in"], "bleu": 0.07271361304044333, "rouge_l": 0.3669172932330827}
{"id": 4307, "predictions": ["\u2581// \u2581 format FuncName \u2581formats \u2581the \u2581 name \u2581of \u2581the \u2581 type \u2581and \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581// \u2581 text ual \u2581 format ."], "references": ["\u2581// \u2581 format FuncName \u2581tries \u2581to \u2581extract \u2581certain \u2581part \u2581of \u2581the \u2581runtime \u2581formatted \u2581// \u2581function \u2581 name \u2581to \u2581some \u2581 pre - defined \u2581 variation . \u2581// \u2581// \u2581This \u2581function"], "bleu": 0.15653982247250325, "rouge_l": 0.3878612716763006}
{"id": 4532, "predictions": ["\u2581// \u2581 Prefix Range End \u2581returns \u2581the \u2581end \u2581of \u2581the \u2581given \u2581prefix ."], "references": ["\u2581// \u2581 Prefix Range End \u2581allows \u2581Get , \u2581 Delete , \u2581and \u2581 Watch \u2581requests \u2581to \u2581operate \u2581on \u2581all \u2581 keys \u2581// \u2581with \u2581a \u2581matching \u2581prefix . \u2581 Pass \u2581the"], "bleu": 0.10959957458274744, "rouge_l": 0.30391459074733096}
{"id": 5626, "predictions": ["\u2581// \u2581Add Logger \u2581adds \u2581a \u2581new \u2581logger \u2581to \u2581the \u2581 Base ."], "references": ["\u2581// \u2581Add Logger \u2581adds \u2581a \u2581new \u2581logger \u2581instance \u2581to \u2581the \u2581 Base"], "bleu": 0.7611606003349892, "rouge_l": 0.9166666666666665}
{"id": 5441, "predictions": ["\u2581// \u2581 UUID \u2581returns \u2581a \u2581 UUID \u2581string \u2581for \u2581the \u2581 UUID ."], "references": ["\u2581// \u2581 UUID \u2581generates \u2581a \u2581random \u2581 UUID \u2581according \u2581to \u2581RFC \u2581 412 2."], "bleu": 0.21036641013752694, "rouge_l": 0.5150784077201447}
{"id": 6062, "predictions": ["\u2581// \u2581Get \u2581the \u2581 path \u2581of \u2581the \u2581 container"], "references": ["\u2581// \u2581Takes \u2581an \u2581IPv 4 \u2581address \u2581string \u2581and \u2581returns \u2581the \u2581 country \u2581 code \u2581for \u2581that \u2581 IP \u2581// \u2581and \u2581the \u2581 netmask \u2581for \u2581that \u2581 IP \u2581range ."], "bleu": 0.02649181072447243, "rouge_l": 0.24034672970843185}
{"id": 6014, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581formatted \u2581string \u2581representation \u2581// \u2581of \u2581the \u2581integer \u2581range"], "bleu": 0.3710657122133101, "rouge_l": 0.6902404526166903}
{"id": 4841, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581string ."], "references": ["\u2581// \u2581Get \u2581is \u2581used \u2581to \u2581lookup \u2581a \u2581specific \u2581 key , \u2581returning \u2581// \u2581the \u2581value \u2581and \u2581if \u2581it \u2581was \u2581found"], "bleu": 0.07201220769530987, "rouge_l": 0.2582010582010582}
{"id": 5549, "predictions": ["\u2581// \u2581 First Prefix \u2581returns \u2581the \u2581first \u2581prefix \u2581of \u2581the \u2581first \u2581prefix \u2581of \u2581the \u2581 set ."], "references": ["\u2581// \u2581Return \u2581the \u2581first \u2581prefix \u2581found \u2581or \u2581the \u2581 empty \u2581string ."], "bleu": 0.17181529671327242, "rouge_l": 0.4982497082847141}
{"id": 4168, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581the \u2581middleware \u2581function \u2581to \u2581 call \u2581the \u2581middleware \u2581// \u2581 Middleware \u2581 type ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 AccessLog Apache Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.2137772394158387, "rouge_l": 0.5278846153846154}
{"id": 4148, "predictions": ["\u2581// \u2581 GetCurrent Db Driver \u2581returns \u2581the \u2581current \u2581 Db Driver"], "references": ["\u2581// \u2581 GetCurrent Db Driver \u2581returns \u2581the \u2581 DB \u2581driver \u2581specified \u2581in \u2581the \u2581configuration \u2581file . \u2581// \u2581If \u2581 this \u2581configuration \u2581was \u2581omitted , \u2581it \u2581returns \u2581the \u2581default \u2581 DB"], "bleu": 0.11227067317551866, "rouge_l": 0.36014760147601477}
{"id": 4261, "predictions": ["\u2581// \u2581 Expand Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581current \u2581 path"], "references": ["\u2581// \u2581 Expand Path \u2581returns \u2581working \u2581directory \u2581 path"], "bleu": 0.3934995962231127, "rouge_l": 0.657935285053929}
{"id": 5818, "predictions": ["\u2581// \u2581 Between \u2581returns \u2581a \u2581 slice \u2581of \u2581 left - separated \u2581elements \u2581between \u2581two \u2581 left \u2581and \u2581 left ."], "references": ["\u2581// \u2581 Between \u2581extracts \u2581a \u2581string \u2581between \u2581 left \u2581and \u2581right \u2581strings ."], "bleu": 0.1709686260975486, "rouge_l": 0.552870090634441}
{"id": 4600, "predictions": ["\u2581// \u2581 Receive \u2581implements \u2581the \u2581 Receive \u2581method \u2581of \u2581the \u2581 Sender \u2581interface ."], "references": ["\u2581// \u2581 Receive \u2581implements \u2581 TCP Receiver \u2581by \u2581making \u2581a \u2581 length - limited \u2581read \u2581into \u2581a \u2581 byte \u2581buffer ."], "bleu": 0.16781937253149157, "rouge_l": 0.3860759493670886}
{"id": 4866, "predictions": ["\u2581// \u2581Set Color \u2581sets \u2581the \u2581 color \u2581of \u2581the \u2581 song ."], "references": ["\u2581// \u2581Set Color \u2581sets \u2581the \u2581 color \u2581to \u2581paint \u2581the \u2581spans ."], "bleu": 0.591460168684858, "rouge_l": 0.75}
{"id": 4982, "predictions": ["\u2581// \u2581read Key \u2581reads \u2581the \u2581 key \u2581from \u2581the \u2581 path \u2581and \u2581returns \u2581it ."], "references": ["\u2581// \u2581read Key \u2581reads \u2581a \u2581private \u2581 rsa \u2581 key \u2581from \u2581 path . \u2581// \u2581The \u2581 key \u2581is \u2581expected \u2581to \u2581be \u2581in \u2581 PEM \u2581 format ."], "bleu": 0.14485582690816526, "rouge_l": 0.4410701373825017}
{"id": 4616, "predictions": ["\u2581// \u2581new Gossip Sender \u2581returns \u2581a \u2581new \u2581 gossip \u2581sender ."], "references": ["\u2581// \u2581 New Gossip Sender \u2581constructs \u2581a \u2581 usable \u2581 Gossip Sender ."], "bleu": 0.15447751184440917, "rouge_l": 0.4925975773889637}
{"id": 4949, "predictions": ["\u2581// \u2581 get \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581given \u2581 key \u2581from \u2581the \u2581 ar ed ar ar ar ."], "references": ["\u2581// \u2581Get \u2581value \u2581by \u2581 key , \u2581 insert \u2581the \u2581 key \u2581if \u2581not \u2581exist"], "bleu": 0.1136930615245481, "rouge_l": 0.3519230769230769}
{"id": 4708, "predictions": ["\u2581// \u2581 Public Certificates \u2581returns \u2581the \u2581certificates \u2581of \u2581the \u2581 app ' s \u2581certificate ."], "references": ["\u2581// \u2581 Public Certificates \u2581retrieves \u2581the \u2581public \u2581certificates \u2581for \u2581the \u2581 app . \u2581// \u2581They \u2581can \u2581be \u2581used \u2581to \u2581verify \u2581a \u2581signature \u2581returned \u2581by \u2581 Sign Bytes ."], "bleu": 0.139379618744228, "rouge_l": 0.4410701373825017}
{"id": 4135, "predictions": ["\u2581// \u2581 Run \u2581runs \u2581the \u2581 app ' s \u2581command ."], "references": ["\u2581// \u2581 Run \u2581executes \u2581the \u2581command \u2581in \u2581 app \u2581units , \u2581 s our c ing \u2581 app rc \u2581before \u2581running \u2581the \u2581// \u2581command ."], "bleu": 0.08483156094600386, "rouge_l": 0.4672340425531915}
{"id": 5744, "predictions": ["\u2581// \u2581 ForEach Object \u2581iterates \u2581over \u2581the \u2581 page \u2581of \u2581elements \u2581in \u2581the \u2581process ."], "references": ["\u2581// \u2581 ForEach Object \u2581calls \u2581fn \u2581with \u2581each \u2581object \u2581in \u2581the \u2581Go \u2581heap . \u2581// \u2581If \u2581fn \u2581returns \u2581false , \u2581 ForEach Object \u2581returns \u2581immediately ."], "bleu": 0.13467521066244992, "rouge_l": 0.32570556826849734}
{"id": 4384, "predictions": ["\u2581// \u2581 Click \u2581sends \u2581an \u2581 button \u2581to \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Click \u2581performs \u2581the \u2581provided \u2581 Click \u2581event \u2581using \u2581the \u2581provided \u2581 Button \u2581at \u2581the \u2581// \u2581current \u2581mouse \u2581position ."], "bleu": 0.10863258824953546, "rouge_l": 0.4043560606060606}
{"id": 5497, "predictions": ["\u2581// \u2581parse Do s Time \u2581returns \u2581the \u2581time . Time \u2581from \u2581the \u2581 format \u2581of \u2581 t ."], "references": ["\u2581// \u2581parse Do s Time \u2581converts \u2581a \u2581 32 bit \u2581 DOS \u2581time \u2581value \u2581to \u2581time . Time"], "bleu": 0.33380800216772966, "rouge_l": 0.4444444444444444}
{"id": 4667, "predictions": ["\u2581// \u2581 dot \u2581 - \u2581returns \u2581the \u2581 dot \u2581 type \u2581of \u2581a \u2581 type ."], "references": ["\u2581// \u2581 dot \u2581returns \u2581the \u2581 type \u2581of \u2581\" typ . name \", \u2581making \u2581its \u2581decision \u2581// \u2581using \u2581the \u2581 type \u2581information \u2581in \u2581cfg ."], "bleu": 0.16315301746045782, "rouge_l": 0.5161538461538462}
{"id": 5413, "predictions": ["\u2581// \u2581Add File Attachment \u2581adds \u2581a \u2581new \u2581 mail \u2581to \u2581the \u2581 Mail Builder ."], "references": ["\u2581// \u2581Add File Attachment \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581that \u2581includes \u2581the \u2581specified \u2581attachment . \u2581// \u2581 fileName , \u2581will \u2581be \u2581populated \u2581from \u2581the \u2581base \u2581 name \u2581of"], "bleu": 0.12466383462185707, "rouge_l": 0.37731958762886597}
{"id": 5339, "predictions": ["\u2581// \u2581 Prev pos \u2581returns \u2581the \u2581previous \u2581position \u2581of \u2581the \u2581 ring ."], "references": ["\u2581// \u2581 Prev pos \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581element \u2581before \u2581// \u2581from , \u2581or \u2581-1 \u2581if \u2581no \u2581more \u2581and \u2581from \u2581is \u2581the \u2581// \u2581first \u2581in \u2581the \u2581 ring ."], "bleu": 0.17487488405026402, "rouge_l": 0.47758007117437723}
{"id": 5512, "predictions": ["\u2581// \u2581execute \u2581runs \u2581the \u2581 VM ."], "references": ["\u2581// \u2581execute \u2581runs \u2581a \u2581list \u2581of \u2581commands \u2581on \u2581the \u2581vm ."], "bleu": 0.21606281467072083, "rouge_l": 0.5341506129597198}
{"id": 4476, "predictions": ["\u2581// \u2581 Sign \u2581adds \u2581a \u2581 Request \u2581to \u2581the \u2581bucket ."], "references": ["\u2581// \u2581 Sign \u2581sign s \u2581the \u2581http . Request"], "bleu": 0.24384183193426084, "rouge_l": 0.5091819699499166}
{"id": 5973, "predictions": ["\u2581// \u2581 Run \u2581returns \u2581true \u2581if \u2581the \u2581 secret \u2581 contains \u2581the \u2581given \u2581 secret ."], "references": ["\u2581// \u2581 Run \u2581executes \u2581the \u2581exception \u2581into \u2581a \u2581 secret \u2581to \u2581determine \u2581if \u2581it ' s \u2581an \u2581exception \u2581// \u2581or \u2581not ."], "bleu": 0.12950175193229368, "rouge_l": 0.358221476510067}
{"id": 4124, "predictions": ["\u2581// \u2581Set Unit Status \u2581sets \u2581the \u2581 status \u2581of \u2581the \u2581unit ."], "references": ["\u2581// \u2581Set Unit Status \u2581changes \u2581the \u2581 status \u2581of \u2581the \u2581given \u2581unit ."], "bleu": 0.57357236890287, "rouge_l": 0.8736979166666665}
{"id": 4481, "predictions": ["\u2581// \u2581abort \u2581sends \u2581a \u2581 POST \u2581request \u2581to \u2581a \u2581remote \u2581server ."], "references": ["\u2581// \u2581Try \u2581to \u2581abort \u2581multipart \u2581upload . \u2581Do \u2581not \u2581error \u2581on \u2581failure ."], "bleu": 0.12020484516681697, "rouge_l": 0.23828125000000006}
{"id": 5785, "predictions": ["\u2581// \u2581 Read Uint 32 \u2581reads \u2581a \u2581 32 - bit \u2581integer \u2581from \u2581the \u2581 Process ."], "references": ["\u2581// \u2581 Read Uint 32 \u2581returns \u2581a \u2581uint 32 \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.2737217754921356, "rouge_l": 0.5500450856627592}
{"id": 5784, "predictions": ["\u2581// \u2581 Read Uint 16 \u2581returns \u2581the \u2581 16 - th \u2581value \u2581of \u2581the \u2581process ."], "references": ["\u2581// \u2581 Read Uint 16 \u2581returns \u2581a \u2581uint 16 \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.3359331908984033, "rouge_l": 0.5627306273062731}
{"id": 4721, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 Record ."], "references": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581log \u2581record ,"], "bleu": 0.6389431042462724, "rouge_l": 0.6666666666666666}
{"id": 4823, "predictions": ["\u2581// \u2581 Promote HandlerFunc \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581 promote s \u2581a \u2581 set \u2581of \u2581 Promote HandlerFunc \u2581to \u2581the \u2581// \u2581 router ."], "references": ["\u2581// \u2581 Promote HandlerFunc \u2581 turn s \u2581a \u2581 HandlerFunc \u2581into \u2581a \u2581 Handler ."], "bleu": 0.20389696163541748, "rouge_l": 0.5638655462184875}
{"id": 4138, "predictions": ["\u2581// \u2581 Env s \u2581returns \u2581the \u2581environment \u2581variables \u2581for \u2581the \u2581 app ."], "references": ["\u2581// \u2581 Env s \u2581returns \u2581a \u2581 map \u2581representing \u2581the \u2581 apps \u2581environment \u2581variables ."], "bleu": 0.3797013378346243, "rouge_l": 0.6346820809248555}
{"id": 4391, "predictions": ["\u2581// \u2581 Scroll Intent \u2581is \u2581the \u2581 scroll \u2581offset \u2581of \u2581the \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581// \u2581 Selection . \u2581It \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581 data"], "references": ["\u2581// \u2581 Scroll Finger \u2581performs \u2581a \u2581 scroll \u2581touch \u2581action \u2581by \u2581the \u2581provided \u2581offset \u2581on \u2581exactly \u2581// \u2581one \u2581element ."], "bleu": 0.1014524997386625, "rouge_l": 0.3319727891156462}
{"id": 5786, "predictions": ["\u2581// \u2581 Read Uint 64 \u2581returns \u2581the \u2581 64- bit \u2581integer \u2581value \u2581from \u2581the \u2581 Process ."], "references": ["\u2581// \u2581 Read Uint 64 \u2581returns \u2581a \u2581uint 64 \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.31784740934127337, "rouge_l": 0.49504057709648325}
{"id": 4468, "predictions": ["\u2581// \u2581 Region \u2581returns \u2581the \u2581region \u2581 name \u2581of \u2581the \u2581 S 3 \u2581 domain"], "references": ["\u2581// \u2581 Region \u2581returns \u2581the \u2581service \u2581region \u2581infer ing \u2581it \u2581from \u2581 S 3 \u2581 domain ."], "bleu": 0.4746750027854103, "rouge_l": 0.67983789260385}
{"id": 5475, "predictions": ["\u2581// \u2581 ReadByte \u2581reads \u2581the \u2581 byte \u2581 byte \u2581from \u2581the \u2581 \u2581cipher ."], "references": ["\u2581// \u2581 ReadByte \u2581returns \u2581the \u2581next \u2581 decrypted \u2581 byte ."], "bleu": 0.21651956746181053, "rouge_l": 0.6541554959785522}
{"id": 5502, "predictions": ["\u2581// \u2581read Filter 5 Data \u2581reads \u2581a \u2581 filter \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581read Filter 5 Data \u2581reads \u2581an \u2581encoded \u2581integer \u2581used \u2581in \u2581 V 5 \u2581filters ."], "bleu": 0.3708163623065084, "rouge_l": 0.5}
{"id": 4614, "predictions": ["\u2581// \u2581new Connection Maker \u2581returns \u2581a \u2581new \u2581 Connection Maker ."], "references": ["\u2581// \u2581new Connection Maker \u2581returns \u2581a \u2581 usable \u2581 Connection Maker , \u2581seed ed \u2581with \u2581// \u2581peers , \u2581making \u2581outbound \u2581connections \u2581from \u2581local Addr , \u2581and \u2581listening \u2581on \u2581// \u2581port"], "bleu": 0.11271356411355567, "rouge_l": 0.40516605166051656}
{"id": 4983, "predictions": ["\u2581// \u2581 write Key \u2581writes \u2581the \u2581 key \u2581to \u2581the \u2581 PEM - encoded \u2581 key ."], "references": ["\u2581// \u2581 write Key \u2581writes \u2581 k \u2581to \u2581the \u2581specified \u2581 path \u2581in \u2581 PEM \u2581 format . \u2581// \u2581If \u2581file \u2581does \u2581not \u2581 exists , \u2581it \u2581will \u2581be \u2581created"], "bleu": 0.1625417561008717, "rouge_l": 0.48637873754152827}
{"id": 5427, "predictions": ["\u2581// \u2581 B read th Match First \u2581returns \u2581the \u2581first \u2581part \u2581of \u2581the \u2581 children \u2581of \u2581the \u2581 children \u2581of \u2581the \u2581// \u2581 children ."], "references": ["\u2581// \u2581 B read th Match First \u2581performs \u2581a \u2581 breadth \u2581first \u2581 search \u2581of \u2581the \u2581 Part \u2581tree \u2581and \u2581returns \u2581the \u2581first \u2581part \u2581// \u2581that \u2581causes \u2581the \u2581given \u2581matcher"], "bleu": 0.3523791038310152, "rouge_l": 0.5008797653958944}
{"id": 5343, "predictions": ["\u2581// \u2581 Two Cont ig \u2581copies \u2581the \u2581 contents \u2581of \u2581the \u2581 Float 64 Ring \u2581and \u2581returns \u2581a \u2581new \u2581 slice \u2581of \u2581// \u2581 items \u2581that \u2581are \u2581 left ."], "references": ["\u2581// \u2581 Two Cont ig \u2581returns \u2581all \u2581readable \u2581float 64, \u2581but \u2581in \u2581two \u2581separate \u2581slices , \u2581// \u2581to \u2581avoid \u2581copying . \u2581The \u2581two \u2581slices \u2581are \u2581from \u2581the \u2581same \u2581buffer ,"], "bleu": 0.17193972960972626, "rouge_l": 0.2666666666666666}
{"id": 4267, "predictions": ["\u2581// \u2581 readFrom FS \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581file \u2581in \u2581the \u2581 path ."], "references": ["\u2581// \u2581 readFrom FS \u2581reads \u2581file \u2581from \u2581a \u2581local \u2581 path \u2581and \u2581returns \u2581as \u2581string"], "bleu": 0.26220676436185975, "rouge_l": 0.45425531914893613}
{"id": 5551, "predictions": ["\u2581// \u2581 First Suffix If In \u2581returns \u2581the \u2581first \u2581 unescaped \u2581string \u2581of \u2581 s anity \u2581 contains \u2581// \u2581the \u2581given \u2581 name \u2581of \u2581the \u2581given \u2581 name \u2581of \u2581the"], "references": ["\u2581// \u2581Find \u2581the \u2581first \u2581suffix \u2581that \u2581ends \u2581at \u2581` endPos ` \u2581in \u2581the \u2581word \u2581among \u2581// \u2581those \u2581provided ; \u2581then , \u2581// \u2581check \u2581to \u2581see \u2581if \u2581it \u2581begins \u2581after \u2581"], "bleu": 0.06561789050024278, "rouge_l": 0.16666666666666666}
{"id": 4369, "predictions": ["\u2581// \u2581 Screenshot \u2581retrieves \u2581the \u2581 content \u2581from \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Screenshot \u2581takes \u2581a \u2581 screenshot \u2581and \u2581saves \u2581it \u2581to \u2581the \u2581provided \u2581 filename . \u2581// \u2581The \u2581provided \u2581 filename \u2581may \u2581be \u2581an \u2581absolute \u2581or \u2581relative \u2581 path ."], "bleu": 0.05131440122676713, "rouge_l": 0.30942028985507253}
{"id": 5795, "predictions": ["\u2581// \u2581find Mapping \u2581finds \u2581the \u2581 table \u2581for \u2581a \u2581given \u2581address ."], "references": ["\u2581// \u2581find Mapping \u2581is \u2581simple \u2581enough \u2581that \u2581it \u2581in lines ."], "bleu": 0.2044800736021839, "rouge_l": 0.3505747126436781}
{"id": 4789, "predictions": ["\u2581// \u2581valid \u2581returns \u2581true \u2581if \u2581 key \u2581is \u2581valid ."], "references": ["\u2581// \u2581valid \u2581returns \u2581whether \u2581the \u2581 key \u2581is \u2581valid ."], "bleu": 0.587728372510532, "rouge_l": 0.8}
{"id": 4918, "predictions": ["\u2581// \u2581 Main \u2581is \u2581the \u2581main \u2581point \u2581for \u2581 p 2 d ."], "references": ["\u2581// \u2581 Main \u2581draw s \u2581the \u2581image \u2581frame \u2581and \u2581returns \u2581the \u2581 filename . \u2581// \u2581This \u2581should \u2581only \u2581be \u2581used \u2581during \u2581testing ."], "bleu": 0.09474980272538823, "rouge_l": 0.31743278404163056}
{"id": 4550, "predictions": ["\u2581// \u2581 propose Internal Raft Request \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581channel \u2581that \u2581// \u2581 satisfies \u2581the \u2581 Store \u2581interface ."], "references": ["\u2581// \u2581 From \u2581public \u2581API \u2581method \u2581to \u2581proposal c ."], "bleu": 0.07164684238257436, "rouge_l": 0.19062500000000002}
{"id": 4917, "predictions": ["\u2581// \u2581 Draw Image \u2581draw s \u2581a \u2581 text ."], "references": ["\u2581// \u2581 Draw Image \u2581draw s \u2581an \u2581image \u2581into \u2581dest \u2581using \u2581an \u2581 affine \u2581transformation \u2581matrix , \u2581an \u2581op \u2581and \u2581a \u2581 filter"], "bleu": 0.17211888118852395, "rouge_l": 0.4526901669758812}
{"id": 4938, "predictions": ["\u2581// \u2581Add Std Level \u2581adds \u2581a \u2581new \u2581 text \u2581to \u2581the \u2581 g g ."], "references": ["\u2581// \u2581Add Std Level \u2581adds \u2581 std \u2581log \u2581level \u2581and \u2581returns \u2581 LEVEL"], "bleu": 0.3237722713145643, "rouge_l": 0.5065243179122182}
{"id": 4425, "predictions": ["\u2581// \u2581 With Request \u2581adds \u2581a \u2581request \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581 With Request \u2581specifies \u2581the \u2581details \u2581of \u2581the \u2581HTTP \u2581request \u2581that \u2581will \u2581be \u2581used \u2581to \u2581// \u2581 confirm \u2581that \u2581the \u2581 Provider \u2581provides \u2581an \u2581API \u2581listening \u2581on \u2581the \u2581given"], "bleu": 0.06338349501054427, "rouge_l": 0.3151291512915129}
{"id": 4421, "predictions": ["\u2581// \u2581 login Handler \u2581 login s \u2581the \u2581user \u2581to \u2581the \u2581user ."], "references": ["\u2581// \u2581 Deal \u2581with \u2581the \u2581 login \u2581request ."], "bleu": 0.17194656088289215, "rouge_l": 0.4699537750385208}
{"id": 5715, "predictions": ["\u2581// \u2581 Level FromString \u2581returns \u2581a \u2581 Level \u2581 Value \u2581from \u2581the \u2581string \u2581 s ."], "references": ["\u2581// \u2581 Level FromString \u2581returns \u2581a \u2581level \u2581based \u2581on \u2581the \u2581input \u2581string \u2581 s . \u2581If \u2581the \u2581input \u2581// \u2581can ' t \u2581be \u2581interpreted \u2581as \u2581a \u2581valid \u2581log \u2581level ,"], "bleu": 0.21143078809525, "rouge_l": 0.45337837837837835}
{"id": 5379, "predictions": ["\u2581// \u2581 Send Html \u2581sends \u2581a \u2581notification \u2581to \u2581a \u2581 Chat URL ."], "references": ["\u2581// \u2581 Send Html \u2581sends \u2581the \u2581message \u2581as \u2581HTML \u2581as \u2581defined \u2581by \u2581 X EP - 007 1"], "bleu": 0.24752248336714236, "rouge_l": 0.37615621788283665}
{"id": 4218, "predictions": ["\u2581// \u2581 Read Loop \u2581 wraps \u2581the \u2581 Consumer \u2581interface \u2581and \u2581waits \u2581for \u2581the \u2581 Consumer . \u2581// \u2581// \u2581It \u2581is \u2581safe \u2581for \u2581 concurrent \u2581access ."], "references": ["\u2581// \u2581heartbeat \u2581loop , \u2581triggered \u2581by \u2581the \u2581main Loop"], "bleu": 0.053414136238197775, "rouge_l": 0.1221221221221221}
{"id": 5447, "predictions": ["\u2581// \u2581 ConvertTo UTF 8 String \u2581converts \u2581a \u2581string \u2581to \u2581a \u2581string \u2581 slice ."], "references": ["\u2581// \u2581 ConvertTo UTF 8 String \u2581uses \u2581the \u2581provided \u2581charset \u2581to \u2581 decode \u2581a \u2581 slice \u2581of \u2581bytes \u2581into \u2581a \u2581normal \u2581// \u2581 UTF -8 \u2581string ."], "bleu": 0.20680344775683682, "rouge_l": 0.4981440237564959}
{"id": 6091, "predictions": ["\u2581// \u2581to Go TypeName \u2581converts \u2581a \u2581 name \u2581to \u2581a \u2581string \u2581 name ."], "references": ["\u2581// \u2581 Produce \u2581go \u2581 type \u2581 name \u2581from \u2581given \u2581 ruby \u2581 type \u2581 name"], "bleu": 0.1327211341271203, "rouge_l": 0.3293736501079914}
{"id": 4438, "predictions": ["\u2581// \u2581 Log \u2581the \u2581response \u2581 code \u2581to \u2581 stdout"], "references": ["\u2581// \u2581 sanitise Ruby Response \u2581removes \u2581 Ruby - is ms \u2581from \u2581the \u2581response \u2581 content \u2581// \u2581making \u2581the \u2581output \u2581much \u2581more \u2581human \u2581readable"], "bleu": 0.07150780327539585, "rouge_l": 0.2737881508078994}
{"id": 6046, "predictions": ["\u2581// \u2581 Unmarshal XML \u2581unmarshal s \u2581the \u2581header \u2581from \u2581the \u2581 Header ."], "references": ["\u2581// \u2581 Unmarshal XML \u2581unmarshal \u2581 SOAP Header"], "bleu": 0.3759663529467017, "rouge_l": 0.696574225122349}
{"id": 4181, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581the \u2581 Middleware \u2581function \u2581to \u2581 call \u2581the \u2581 Gzip Middleware"], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Gzip Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.3308548466798256, "rouge_l": 0.5909580193756728}
{"id": 4189, "predictions": ["\u2581// \u2581Find Routes \u2581returns \u2581a \u2581list \u2581of \u2581 routes \u2581matching \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Given \u2581a \u2581 path \u2581and \u2581an \u2581http \u2581method , \u2581return \u2581all \u2581the \u2581matching \u2581 routes ."], "bleu": 0.14167842665022046, "rouge_l": 0.37082066869300917}
{"id": 4662, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581cursor ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581base - 64 \u2581string \u2581representation \u2581of \u2581a \u2581cursor ."], "bleu": 0.38201231782898754, "rouge_l": 0.7646239554317549}
{"id": 5349, "predictions": ["\u2581// \u2581 Two Cont ig \u2581returns \u2581the \u2581first \u2581 b \u2581and \u2581 b ."], "references": ["\u2581// \u2581 Two Cont ig \u2581returns \u2581all \u2581readable \u2581pointers , \u2581but \u2581in \u2581two \u2581separate \u2581slices , \u2581// \u2581to \u2581avoid \u2581copying . \u2581The \u2581two \u2581slices \u2581are \u2581from \u2581the \u2581same \u2581buffer ,"], "bleu": 0.13588872219570225, "rouge_l": 0.2986013986013986}
{"id": 4663, "predictions": ["\u2581// \u2581 Decode Cursor \u2581returns \u2581a \u2581 Cursor \u2581for \u2581the \u2581given \u2581string ."], "references": ["\u2581// \u2581 Decode \u2581decodes \u2581a \u2581cursor \u2581from \u2581its \u2581base - 64 \u2581string \u2581representation ."], "bleu": 0.18934058951353838, "rouge_l": 0.4414957780458384}
{"id": 5369, "predictions": ["\u2581// \u2581 Raw Information Query \u2581sends \u2581a \u2581 Query \u2581to \u2581 Rollbar \u2581with \u2581the \u2581given \u2581// \u2581 body ."], "references": ["\u2581// \u2581 Raw Information Query \u2581sends \u2581an \u2581information \u2581query \u2581request \u2581to \u2581the \u2581server ."], "bleu": 0.3187271473320672, "rouge_l": 0.5607763023493361}
{"id": 4729, "predictions": ["\u2581// \u2581 Stat \u2581returns \u2581a \u2581 Blob Info \u2581object \u2581from \u2581the \u2581given \u2581blob ."], "references": ["\u2581// \u2581 Stat \u2581returns \u2581the \u2581 Blob Info \u2581for \u2581a \u2581provided \u2581blob Key . \u2581If \u2581no \u2581blob \u2581was \u2581found \u2581for \u2581// \u2581that \u2581 key , \u2581 Stat \u2581returns \u2581datastore ."], "bleu": 0.1161269706200222, "rouge_l": 0.3839160839160839}
{"id": 4608, "predictions": ["\u2581// \u2581 forEach Connected Peer \u2581returns \u2581the \u2581peer \u2581 set \u2581of \u2581the \u2581peer \u2581 set \u2581for \u2581the \u2581peer \u2581// \u2581identified \u2581by \u2581the \u2581given \u2581 set \u2581of \u2581 Peer Name ."], "references": ["\u2581// \u2581Apply \u2581 f \u2581to \u2581all \u2581peers \u2581 reachable \u2581by \u2581peer . \u2581If \u2581 established And Symmetric \u2581is \u2581true , \u2581// \u2581only \u2581peers \u2581with \u2581 established \u2581 bidirectional \u2581connections \u2581will"], "bleu": 0.0617786518585955, "rouge_l": 0.2666666666666666}
{"id": 4899, "predictions": ["\u2581// \u2581 Main \u2581is \u2581the \u2581main \u2581point \u2581for \u2581 this \u2581 Main ."], "references": ["\u2581// \u2581 Main \u2581draw s \u2581the \u2581 t iger"], "bleu": 0.19674979811155635, "rouge_l": 0.4699537750385208}
{"id": 5993, "predictions": ["\u2581// \u2581 New Frame Set \u2581returns \u2581a \u2581new \u2581 Frame Set \u2581with \u2581the \u2581given \u2581 set ."], "references": ["\u2581// \u2581Create \u2581a \u2581new \u2581 Frame Set \u2581from \u2581a \u2581given \u2581frame \u2581range \u2581string \u2581// \u2581Returns \u2581an \u2581error \u2581if \u2581the \u2581frame \u2581range \u2581could \u2581not \u2581be \u2581parsed ."], "bleu": 0.17706553561490734, "rouge_l": 0.3585598824393828}
{"id": 5346, "predictions": ["\u2581// \u2581 New Atomic InMemory Ring Buffer \u2581creates \u2581a \u2581new \u2581 Atomic \u2581initialize \u2581with \u2581the \u2581given \u2581 size \u2581and \u2581// \u2581 size ."], "references": ["\u2581// \u2581 constructor . \u2581 New Atomic FixedSize Ring Buf \u2581will \u2581 allocate \u2581internally \u2581// \u2581two \u2581buffers \u2581of \u2581 size \u2581max View InBytes ."], "bleu": 0.14101576878340702, "rouge_l": 0.423905489923558}
{"id": 5954, "predictions": ["\u2581// \u2581 C \u2581creates \u2581a \u2581callback \u2581function \u2581for \u2581the \u2581given \u2581handler ."], "references": ["\u2581// \u2581 C \u2581is \u2581a \u2581short - hand \u2581function \u2581to \u2581construct \u2581a \u2581callback . \u2581It \u2581will \u2581also \u2581 add \u2581 tracing \u2581// \u2581 code \u2581around \u2581the \u2581execution \u2581of \u2581the \u2581callback"], "bleu": 0.056788720057911184, "rouge_l": 0.26521739130434785}
{"id": 4797, "predictions": ["\u2581// \u2581 New Key \u2581creates \u2581a \u2581new \u2581 Key \u2581with \u2581the \u2581given \u2581 kind \u2581and \u2581 kind ."], "references": ["\u2581// \u2581 New Key \u2581creates \u2581a \u2581new \u2581 key . \u2581// \u2581 kind \u2581cannot \u2581be \u2581 empty . \u2581// \u2581Either \u2581one \u2581or \u2581both \u2581of \u2581string ID \u2581and \u2581int ID \u2581must"], "bleu": 0.2507416917727219, "rouge_l": 0.47843137254901963}
{"id": 5555, "predictions": ["\u2581// \u2581 preprocess \u2581sets \u2581the \u2581 lower - case d \u2581word \u2581for \u2581the \u2581given \u2581word ."], "references": ["\u2581// \u2581Applies \u2581various \u2581 transformations \u2581necessary \u2581for \u2581the \u2581// \u2581other , \u2581subsequent \u2581 stem m ing \u2581steps . \u2581 Most \u2581important \u2581// \u2581of \u2581which \u2581is \u2581defining \u2581the \u2581two \u2581regions \u2581"], "bleu": 0.05392936098395744, "rouge_l": 0.20608108108108109}
{"id": 4881, "predictions": ["\u2581// \u2581 Main \u2581is \u2581the \u2581main \u2581point \u2581for \u2581 dot ."], "references": ["\u2581// \u2581 Main \u2581draw s \u2581a \u2581 rotated \u2581face \u2581of \u2581the \u2581go p her . \u2581 After wards \u2581it \u2581returns \u2581// \u2581the \u2581 filename . \u2581This \u2581should \u2581only \u2581be \u2581used"], "bleu": 0.04334741445875218, "rouge_l": 0.2701107011070111}
{"id": 4882, "predictions": ["\u2581// \u2581 New Quote \u2581creates \u2581a \u2581new \u2581 F of \u2581instance"], "references": ["\u2581// \u2581 New Pdf \u2581creates \u2581a \u2581new \u2581 pdf \u2581document \u2581with \u2581the \u2581draw 2 d \u2581 font folder , \u2581adds \u2581// \u2581a \u2581 page \u2581and \u2581 set \u2581 fill \u2581"], "bleu": 0.07537610324027871, "rouge_l": 0.3151291512915129}
{"id": 4552, "predictions": ["\u2581// \u2581 Descriptions \u2581returns \u2581a \u2581 slice \u2581of \u2581 traffic \u2581 Description \u2581for \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Descriptions \u2581returns \u2581 descriptions \u2581for \u2581all \u2581known \u2581peers ."], "bleu": 0.24078435074822624, "rouge_l": 0.53643216080402}
{"id": 6003, "predictions": ["\u2581// \u2581 New Work Manager \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Work Manager"], "references": ["\u2581// \u2581Create \u2581a \u2581new \u2581work Manager , \u2581with \u2581input \u2581and \u2581output \u2581channels , \u2581// \u2581with \u2581a \u2581given \u2581list \u2581of \u2581options"], "bleu": 0.08725355022842184, "rouge_l": 0.2334928229665072}
{"id": 6085, "predictions": ["\u2581// \u2581record Types \u2581sets \u2581the \u2581 data \u2581 type \u2581of \u2581the \u2581given \u2581root ."], "references": ["\u2581// \u2581Recursively \u2581record \u2581all \u2581 type \u2581declarations"], "bleu": 0.13217947626377288, "rouge_l": 0.4053156146179402}
{"id": 5704, "predictions": ["\u2581// \u2581Check Int 64 Bounds \u2581returns \u2581the \u2581minimum \u2581value \u2581of \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581Check Int 64 Bounds \u2581verifies \u2581that \u2581 v \u2581is \u2581within \u2581 min \u2581and \u2581max , \u2581 t \u2581represents \u2581the \u2581// \u2581original \u2581 type \u2581of \u2581 v ."], "bleu": 0.13181595631945853, "rouge_l": 0.35935198821796754}
{"id": 5602, "predictions": ["\u2581// \u2581 Equals \u2581checks \u2581whether \u2581the \u2581two \u2581 ECDSA \u2581public \u2581 key \u2581is \u2581equal \u2581to \u2581the \u2581same \u2581 key ."], "references": ["\u2581// \u2581 Equals \u2581compares \u2581to \u2581public \u2581 keys"], "bleu": 0.14051676978912422, "rouge_l": 0.38705583756345174}
{"id": 4714, "predictions": ["\u2581// \u2581reference Value To Key \u2581converts \u2581a \u2581 64- bit \u2581 key \u2581to \u2581a \u2581 key ."], "references": ["\u2581// \u2581It ' s \u2581unfortunate \u2581that \u2581the \u2581two \u2581 semantic ally \u2581equivalent \u2581 concepts \u2581 pb . Reference \u2581// \u2581and \u2581 pb . PropertyValue _ Reference Value \u2581aren ' t"], "bleu": 0.04599215909802949, "rouge_l": 0.20265780730897007}
{"id": 4874, "predictions": ["\u2581// \u2581new Mask \u2581returns \u2581a \u2581new \u2581 Mask \u2581that \u2581 contains \u2581the \u2581given \u2581 width \u2581and \u2581 width ."], "references": ["\u2581// \u2581creates \u2581new \u2581mask \u2581attached \u2581to \u2581 svg"], "bleu": 0.07658412276041004, "rouge_l": 0.2398427260812582}
{"id": 5684, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581human \u2581readable \u2581representation \u2581of \u2581the \u2581 type ."], "bleu": 0.6710275993197631, "rouge_l": 0.8628005657708628}
{"id": 6033, "predictions": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581 slice \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Index \u2581returns \u2581the \u25810 - based \u2581index \u2581of \u2581the \u2581first \u2581occurrence \u2581// \u2581of \u2581the \u2581given \u2581value , \u2581within \u2581the \u2581range . \u2581// \u2581If \u2581the \u2581value \u2581does \u2581not \u2581exist"], "bleu": 0.14834754265891367, "rouge_l": 0.41924398625429554}
{"id": 4669, "predictions": ["\u2581// \u2581valid PropertyName \u2581checks \u2581if \u2581the \u2581given \u2581 name \u2581is \u2581valid ."], "references": ["\u2581// \u2581valid PropertyName \u2581returns \u2581whether \u2581 name \u2581consists \u2581of \u2581one \u2581or \u2581more \u2581valid \u2581Go \u2581// \u2581identifiers \u2581joined \u2581by \u2581\".\" ."], "bleu": 0.1268779105584255, "rouge_l": 0.41862745098039217}
{"id": 4202, "predictions": ["\u2581// \u2581release \u2581 releases \u2581the \u2581session \u2581from \u2581the \u2581 Session ."], "references": ["\u2581// non - blocking \u2581 trigger \u2581 close"], "bleu": 0.1354599427337814, "rouge_l": 0.32504440497335696}
{"id": 5489, "predictions": ["\u2581// \u2581read BlockHeader \u2581reads \u2581the \u2581header \u2581from \u2581the \u2581 data ."], "references": ["\u2581// \u2581read BlockHeader \u2581determines \u2581and \u2581initializes \u2581the \u2581current \u2581decoder \u2581for \u2581a \u2581new \u2581 decode \u2581block ."], "bleu": 0.1547752911897908, "rouge_l": 0.43008225616921264}
{"id": 4315, "predictions": ["\u2581// \u2581 Log \u2581logs \u2581a \u2581log \u2581record \u2581to \u2581the \u2581logger ."], "references": ["\u2581// \u2581 Log \u2581passes \u2581the \u2581log \u2581record \u2581to \u2581all \u2581 backends ."], "bleu": 0.2981247384881109, "rouge_l": 0.603960396039604}
{"id": 5494, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581the \u2581 byte \u2581 slice \u2581from \u2581the \u2581 allocator ."], "references": ["\u2581// \u2581 succ Byte \u2581returns \u2581a \u2581 byte \u2581from \u2581the \u2581heap \u2581given \u2581a \u2581state . succ \u2581index"], "bleu": 0.1444788670919441, "rouge_l": 0.4117647058823529}
{"id": 4530, "predictions": ["\u2581// \u2581wait \u2581waits \u2581for \u2581the \u2581 token \u2581to \u2581wait \u2581for \u2581the \u2581 token \u2581to \u2581be \u2581 watched \u2581for \u2581// \u2581the \u2581 token ."], "references": ["\u2581// \u2581 Blocks \u2581until \u2581there \u2581is \u2581a \u2581 token \u2581available . \u2581// \u2581 Not \u2581safe \u2581for \u2581 concurrent \u2581use \u2581by \u2581multiple \u2581goroutines ."], "bleu": 0.09410489957951636, "rouge_l": 0.34782608695652173}
{"id": 4151, "predictions": ["\u2581// \u2581 New Pipeline \u2581creates \u2581a \u2581new \u2581pipeline \u2581 Pipeline"], "references": ["\u2581// \u2581 New Pipeline \u2581creates \u2581a \u2581new \u2581pipeline \u2581instance \u2581with \u2581the \u2581given \u2581list \u2581of \u2581actions ."], "bleu": 0.4314072726671336, "rouge_l": 0.5907990314769976}
{"id": 4220, "predictions": ["\u2581// \u2581 cm Loop \u2581 listen s \u2581for \u2581the \u2581consumer \u2581and \u2581waits \u2581for \u2581the \u2581 data \u2581channel ."], "references": ["\u2581// \u2581commit \u2581loop , \u2581triggered \u2581by \u2581the \u2581main Loop"], "bleu": 0.08097785064266204, "rouge_l": 0.15762273901808785}
{"id": 4706, "predictions": ["\u2581// \u2581 Module Hostname \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581module"], "references": ["\u2581// \u2581 Module Hostname \u2581returns \u2581a \u2581hostname \u2581of \u2581a \u2581module \u2581instance . \u2581// \u2581If \u2581module \u2581is \u2581the \u2581 empty \u2581string , \u2581it \u2581refers \u2581to \u2581the \u2581module \u2581of \u2581the \u2581current \u2581instance"], "bleu": 0.09706593788242303, "rouge_l": 0.40516605166051656}
{"id": 4775, "predictions": ["\u2581// \u2581 readFile \u2581reads \u2581a \u2581file \u2581from \u2581the \u2581file \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581// \u2581the \u2581file ."], "references": ["\u2581// \u2581 readFile \u2581reads \u2581and \u2581parses \u2581the \u2581Go \u2581source \u2581 code \u2581file \u2581and \u2581returns \u2581whether \u2581it \u2581has \u2581a \u2581main \u2581function ."], "bleu": 0.23878891183607934, "rouge_l": 0.445978878960195}
{"id": 4522, "predictions": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581the \u2581float 64 \u2581to \u2581 json ."], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581 json . Marshaler . \u2581// \u2581It \u2581will \u2581 encode \u2581null \u2581if \u2581 this \u2581 Float \u2581is \u2581null ."], "bleu": 0.09274952994348683, "rouge_l": 0.2858481724461106}
{"id": 4589, "predictions": ["\u2581// \u2581 merge Received \u2581updates \u2581the \u2581 gossip \u2581 data \u2581for \u2581the \u2581given \u2581 set \u2581of \u2581 gossip \u2581 data ."], "references": ["\u2581// \u2581 Merge \u2581the \u2581 set \u2581into \u2581our \u2581state , \u2581 abi ding \u2581increment - only \u2581 semantics . \u2581// \u2581Return \u2581a \u2581non - nil \u2581mesh . Gossip Data \u2581representation"], "bleu": 0.07795482943041197, "rouge_l": 0.3040498442367601}
{"id": 5458, "predictions": ["\u2581// \u2581 New R Client With Auth \u2581returns \u2581a \u2581new \u2581 R Client \u2581client \u2581with \u2581the \u2581given \u2581host \u2581and \u2581password ."], "references": ["\u2581// \u2581 New R Client With Auth \u2581creates \u2581a \u2581 R Client \u2581with \u2581the \u2581specified \u2581credentials \u2581and \u2581 R Serve \u2581server \u2581details"], "bleu": 0.39650872041320007, "rouge_l": 0.6484434320425209}
{"id": 6061, "predictions": ["\u2581// \u2581 GetRegion Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581region ."], "references": ["\u2581// \u2581Returns \u2581the \u2581region \u2581 name \u2581given \u2581a \u2581 country \u2581 code \u2581and \u2581region \u2581 code"], "bleu": 0.13401724179950414, "rouge_l": 0.3481735159817351}
{"id": 4386, "predictions": ["\u2581// \u2581 Kill \u2581 marks \u2581all \u2581the \u2581elements \u2581in \u2581the \u2581 Selection ."], "references": ["\u2581// \u2581 DoubleClick \u2581double - click s \u2581on \u2581all \u2581of \u2581the \u2581elements \u2581that \u2581the \u2581selection \u2581refers \u2581to ."], "bleu": 0.12101944068845574, "rouge_l": 0.43884892086330934}
{"id": 5779, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 set \u2581of \u2581 this \u2581 Region ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581string \u2581stored \u2581in \u2581 r ."], "bleu": 0.28175950490399515, "rouge_l": 0.5622119815668203}
{"id": 5653, "predictions": ["\u2581// \u2581 To LogLevel \u2581converts \u2581a \u2581string \u2581to \u2581a \u2581 LogLevel ."], "references": ["\u2581// \u2581 To LogLevel \u2581will \u2581take \u2581a \u2581string \u2581and \u2581return \u2581the \u2581appropriate \u2581log \u2581level \u2581for \u2581// \u2581the \u2581string \u2581if \u2581known . \u2581If \u2581the \u2581string \u2581is \u2581not \u2581recognized \u2581it \u2581will \u2581return"], "bleu": 0.07673292733354292, "rouge_l": 0.30942028985507253}
{"id": 4118, "predictions": ["\u2581// \u2581 Units \u2581returns \u2581the \u2581 Unit ' s \u2581 Unit \u2581for \u2581the \u2581 app ."], "references": ["\u2581// \u2581 Units \u2581returns \u2581the \u2581list \u2581of \u2581units ."], "bleu": 0.2928298013714697, "rouge_l": 0.505524861878453}
{"id": 4208, "predictions": ["\u2581// \u2581 New Config \u2581returns \u2581a \u2581new \u2581 Config \u2581object"], "references": ["\u2581// \u2581 New Config \u2581returns \u2581a \u2581new \u2581configuration \u2581instance \u2581with \u2581 sane \u2581defaults ."], "bleu": 0.46850730074624486, "rouge_l": 0.6472148541114059}
{"id": 6094, "predictions": ["\u2581// \u2581 Match Href \u2581returns \u2581true \u2581if \u2581the \u2581 href \u2581of \u2581the \u2581 href \u2581matches \u2581the \u2581// \u2581 href ."], "references": ["\u2581// \u2581 Match Href \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 href \u2581matches \u2581one \u2581of \u2581the \u2581action ' s \u2581 href \u2581patterns \u2581exactly"], "bleu": 0.45539401562856296, "rouge_l": 0.6609907120743034}
{"id": 5687, "predictions": ["\u2581// \u2581Parse Tag \u2581parses \u2581a \u2581string \u2581into \u2581a \u2581tag ."], "references": ["\u2581// \u2581Parse Tag \u2581parses \u2581a \u2581raw \u2581tag \u2581obtained \u2581from \u2581a \u2581struct \u2581field , \u2581returning \u2581the \u2581results \u2581// \u2581as \u2581a \u2581tag \u2581value ."], "bleu": 0.16108647488326006, "rouge_l": 0.4683301343570058}
{"id": 5488, "predictions": ["\u2581// \u2581 init \u2581initializes \u2581the \u2581decoder ."], "references": ["\u2581// \u2581 init \u2581int i alize s \u2581the \u2581decoder \u2581for \u2581decoding \u2581a \u2581new \u2581file ."], "bleu": 0.13626462819908836, "rouge_l": 0.5118881118881118}
{"id": 4475, "predictions": ["\u2581// \u2581 Env Keys \u2581returns \u2581the \u2581 keys \u2581of \u2581the \u2581environment \u2581variables"], "references": ["\u2581// \u2581 Env Keys \u2581Reads \u2581the \u2581AWS \u2581 keys \u2581from \u2581the \u2581environment"], "bleu": 0.38058030016749456, "rouge_l": 0.75}
{"id": 4725, "predictions": ["\u2581// \u2581run \u2581runs \u2581the \u2581 call \u2581to \u2581 get \u2581the \u2581logs \u2581from \u2581the \u2581 Log Log ."], "references": ["\u2581// \u2581run \u2581takes \u2581the \u2581query \u2581 Result \u2581produced \u2581by \u2581a \u2581 call \u2581to \u2581 Run \u2581and \u2581updates \u2581it \u2581with \u2581// \u2581more \u2581 Records . \u2581The \u2581updated \u2581 Result \u2581 contains"], "bleu": 0.11767646173056052, "rouge_l": 0.36478405315614615}
{"id": 5925, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 model \u2581to \u2581the \u2581 indexer ."], "references": ["\u2581// \u2581Add \u2581will \u2581 add \u2581an \u2581index \u2581to \u2581the \u2581internal \u2581index \u2581list . \u2581 Fields \u2581that \u2581are \u2581prefixed \u2581// \u2581with \u2581a \u2581 dash \u2581will \u2581result \u2581in \u2581an \u2581 descending \u2581index"], "bleu": 0.04443957504236769, "rouge_l": 0.26521739130434785}
{"id": 5773, "predictions": ["\u2581// \u2581 De ref \u2581returns \u2581the \u2581 ref ' s \u2581value ."], "references": ["\u2581// \u2581 De ref \u2581 loads \u2581from \u2581a \u2581pointer . \u2581 r \u2581must \u2581contain \u2581a \u2581pointer ."], "bleu": 0.2073681080883528, "rouge_l": 0.4013157894736842}
{"id": 4733, "predictions": ["\u2581// \u2581 Delete Multi \u2581deletes \u2581all \u2581 blobs \u2581in \u2581the \u2581blob ."], "references": ["\u2581// \u2581 Delete Multi \u2581deletes \u2581multiple \u2581 blobs ."], "bleu": 0.4408231875586727, "rouge_l": 0.7820512820512819}
{"id": 4274, "predictions": ["\u2581// \u2581 Beginning Of Week \u2581returns \u2581the \u2581 week \u2581in \u2581the \u2581current \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 Beginning Of Week \u2581beginning \u2581of \u2581 week"], "bleu": 0.28889830842564407, "rouge_l": 0.5516795865633075}
{"id": 4679, "predictions": ["\u2581// \u2581 Login URL Federa ted \u2581 login s \u2581for \u2581the \u2581given \u2581 URL \u2581and \u2581returns \u2581the \u2581 URL"], "references": ["\u2581// \u2581 Login URL Federa ted \u2581is \u2581like \u2581 Login URL \u2581but \u2581accepts \u2581a \u2581user ' s \u2581 OpenID \u2581 identifier ."], "bleu": 0.2848666145567315, "rouge_l": 0.4814522494080505}
{"id": 5513, "predictions": ["\u2581// \u2581new VM \u2581creates \u2581a \u2581new \u2581 VM ."], "references": ["\u2581// \u2581new VM \u2581creates \u2581a \u2581new \u2581 R AR \u2581virtual \u2581machine \u2581using \u2581the \u2581 byte \u2581 slice \u2581as \u2581memory ."], "bleu": 0.23051726073294254, "rouge_l": 0.5164021164021164}
{"id": 5539, "predictions": ["\u2581// \u2581 Stem \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581word \u2581at \u2581the \u2581given \u2581word ."], "references": ["\u2581// \u2581 Stem \u2581an \u2581 Ru s s ian \u2581word . \u2581This \u2581is \u2581the \u2581only \u2581exported \u2581// \u2581function \u2581in \u2581 this \u2581package . \u2581//"], "bleu": 0.10737363279348121, "rouge_l": 0.34463276836158196}
{"id": 4232, "predictions": ["\u2581// \u2581 Expected \u2581returns \u2581a \u2581new \u2581cluster \u2581with \u2581the \u2581given \u2581 Cluster ."], "references": ["\u2581// \u2581 Expected \u2581will \u2581return \u2581the \u2581expected \u2581resource \u2581 group \u2581as \u2581it \u2581would \u2581be \u2581defined \u2581in \u2581Azure"], "bleu": 0.14463893788984455, "rouge_l": 0.3255069370330843}
{"id": 4883, "predictions": ["\u2581// \u2581 Formats \u2581 x x 2 \u2581 x 2 \u2581 x 2 \u2581and \u2581 x 2"], "references": ["\u2581// \u2581 clearRect \u2581draw s \u2581a \u2581 white \u2581rectangle"], "bleu": 0.10216198665886358, "rouge_l": 0.2443257676902537}
{"id": 4743, "predictions": ["\u2581// \u2581 Namespaces \u2581returns \u2581a \u2581list \u2581of \u2581namespaces \u2581that \u2581are \u2581 set \u2581in \u2581the \u2581 Query ."], "references": ["\u2581// \u2581 Namespaces \u2581returns \u2581all \u2581the \u2581datastore \u2581namespaces ."], "bleu": 0.22612164703205964, "rouge_l": 0.4886515353805074}
{"id": 4829, "predictions": ["\u2581// \u2581Must Parse \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581parse \u2581the \u2581 Parser \u2581to \u2581parse \u2581the \u2581// \u2581output \u2581of \u2581the \u2581 stdout \u2581and \u2581stderr ."], "references": ["\u2581// \u2581Must Parse \u2581processes \u2581command \u2581line \u2581arguments \u2581and \u2581exits \u2581upon \u2581failure"], "bleu": 0.09970222994544457, "rouge_l": 0.24497991967871482}
{"id": 4831, "predictions": ["\u2581// \u2581walk Fields \u2581takes \u2581a \u2581reflect . Value \u2581and \u2581applies \u2581it \u2581to \u2581the \u2581struct ."], "references": ["\u2581// \u2581walk Fields \u2581calls \u2581a \u2581function \u2581for \u2581each \u2581field \u2581of \u2581a \u2581struct , \u2581recursively \u2581 expanding \u2581struct \u2581fields ."], "bleu": 0.13487448622208847, "rouge_l": 0.34560906515580736}
{"id": 6110, "predictions": ["\u2581// \u2581 runCommand \u2581runs \u2581the \u2581command \u2581and \u2581runs \u2581the \u2581command ."], "references": ["\u2581// \u2581 Helper \u2581that \u2581runs \u2581command \u2581line \u2581with \u2581give \u2581command \u2581client"], "bleu": 0.17827531042796255, "rouge_l": 0.45454545454545453}
{"id": 4681, "predictions": ["\u2581// \u2581 insert Context \u2581adds \u2581a \u2581 set \u2581of \u2581AST \u2581to \u2581the \u2581 ast ."], "references": ["\u2581// \u2581 ctx \u2581may \u2581be \u2581nil ."], "bleu": 0.11633270842295028, "rouge_l": 0.291866028708134}
{"id": 4191, "predictions": ["\u2581// \u2581Find Routes ForPath \u2581returns \u2581the \u2581 routes \u2581that \u2581match \u2581the \u2581 path ."], "references": ["\u2581// \u2581Given \u2581a \u2581 path , \u2581and \u2581whatever \u2581the \u2581http \u2581method , \u2581return \u2581all \u2581the \u2581matching \u2581 routes ."], "bleu": 0.11854951884650104, "rouge_l": 0.2949709864603482}
{"id": 5472, "predictions": ["\u2581// \u2581parse Encryption Block \u2581parses \u2581the \u2581 Encryption Block \u2581from \u2581the \u2581 topo ."], "references": ["\u2581// \u2581parse Encryption Block \u2581calculates \u2581the \u2581 key \u2581for \u2581block \u2581encryption ."], "bleu": 0.29256127307315066, "rouge_l": 0.5460358056265985}
{"id": 5559, "predictions": ["\u2581// \u2581 capitalize Y s \u2581 capitalize s \u2581the \u2581 Y A \u2581word \u2581word \u2581 format"], "references": ["\u2581// \u2581 Capitalize \u2581all \u2581' Y ' s \u2581preceded \u2581by \u2581 vowels \u2581or \u2581starting \u2581a \u2581word \u2581//"], "bleu": 0.1175415880875657, "rouge_l": 0.3616600790513834}
{"id": 4590, "predictions": ["\u2581// \u2581 merge Complete \u2581merges \u2581the \u2581 set \u2581of \u2581 gossip \u2581 data \u2581to \u2581the \u2581 set \u2581of \u2581 sync \u2581 data ."], "references": ["\u2581// \u2581 Merge \u2581the \u2581 set \u2581into \u2581our \u2581state , \u2581 abi ding \u2581increment - only \u2581 semantics . \u2581// \u2581Return \u2581our \u2581resulting , \u2581complete \u2581state ."], "bleu": 0.10893272947401535, "rouge_l": 0.3154492566257272}
{"id": 4795, "predictions": ["\u2581// \u2581 Decode Key \u2581decodes \u2581a \u2581 key \u2581from \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Decode Key \u2581decodes \u2581a \u2581 key \u2581from \u2581the \u2581 opaque \u2581representation \u2581returned \u2581by \u2581 Encode ."], "bleu": 0.6144849544941671, "rouge_l": 0.7751710654936461}
{"id": 5430, "predictions": ["\u2581// \u2581 Depth Match All \u2581returns \u2581the \u2581 Part \u2581of \u2581the \u2581 children \u2581of \u2581the \u2581 Part \u2581of \u2581the \u2581// \u2581 children \u2581of \u2581the \u2581 Part \u2581of \u2581the \u2581 Part"], "references": ["\u2581// \u2581 Depth Match All \u2581performs \u2581a \u2581depth \u2581first \u2581 search \u2581of \u2581the \u2581 Part \u2581tree \u2581and \u2581returns \u2581all \u2581parts \u2581that \u2581causes \u2581// \u2581the \u2581given \u2581matcher \u2581to \u2581return \u2581true"], "bleu": 0.24425731097422174, "rouge_l": 0.4080267558528428}
{"id": 4178, "predictions": ["\u2581// \u2581Make Path \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581 route \u2581 path"], "references": ["\u2581// \u2581Make Path \u2581generates \u2581the \u2581 path \u2581corresponding \u2581to \u2581 this \u2581 Route \u2581and \u2581the \u2581provided \u2581 path \u2581parameters . \u2581// \u2581This \u2581is \u2581used \u2581for \u2581reverse \u2581 route \u2581resolution ."], "bleu": 0.07820642565875682, "rouge_l": 0.3907473309608541}
{"id": 4848, "predictions": ["\u2581// \u2581read \u2581uint 32 \u2581reads \u2581a \u2581uint 32 \u2581from \u2581a \u2581 32 - bit \u2581unsigned \u2581integer ."], "references": ["\u2581// \u2581read \u2581unsigned \u2581 32 - bit \u2581integer"], "bleu": 0.24623953025272619, "rouge_l": 0.5988779803646563}
{"id": 5923, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 controller \u2581to \u2581the \u2581 group ."], "references": ["\u2581// \u2581Add \u2581will \u2581 add \u2581a \u2581 controller \u2581to \u2581the \u2581 group ."], "bleu": 0.5762095527681761, "rouge_l": 0.7942708333333333}
{"id": 4790, "predictions": ["\u2581// \u2581 Equal \u2581checks \u2581if \u2581two \u2581 Key \u2581objects \u2581are \u2581equal ."], "references": ["\u2581// \u2581 Equal \u2581returns \u2581whether \u2581two \u2581 keys \u2581are \u2581equal ."], "bleu": 0.31170906522700687, "rouge_l": 0.7011494252873562}
{"id": 5460, "predictions": ["\u2581// \u2581 Fuzz \u2581is \u2581the \u2581 fuzz \u2581function s \u2581for \u2581the \u2581given \u2581interface"], "references": ["\u2581// \u2581 Fuzz \u2581 Fill s \u2581passed \u2581interface \u2581with \u2581random \u2581 data \u2581based \u2581on \u2581the \u2581struct \u2581field \u2581 type , \u2581// \u2581take \u2581a \u2581look \u2581at \u2581 fuzz Value For \u2581for"], "bleu": 0.06496622227650835, "rouge_l": 0.30391459074733096}
{"id": 4730, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581response \u2581to \u2581the \u2581 api ."], "references": ["\u2581// \u2581 Send \u2581sets \u2581the \u2581 headers \u2581on \u2581response \u2581to \u2581 instruct \u2581 App \u2581 Engine \u2581to \u2581send \u2581a \u2581blob \u2581as \u2581// \u2581the \u2581response \u2581 body . \u2581This \u2581is \u2581more"], "bleu": 0.053845681207980764, "rouge_l": 0.36014760147601477}
{"id": 4237, "predictions": ["\u2581// \u2581 Machine ProviderConfig s \u2581returns \u2581the \u2581 config \u2581provider \u2581for \u2581the \u2581 Cluster \u2581// \u2581configuration ."], "references": ["\u2581// \u2581 Machine ProviderConfig s \u2581will \u2581return \u2581all \u2581 Machine ProviderConfig s \u2581for \u2581a \u2581cluster"], "bleu": 0.28433291815307693, "rouge_l": 0.44248704663212435}
{"id": 5950, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581task \u2581to \u2581the \u2581pool ."], "references": ["\u2581// \u2581Add \u2581will \u2581 add \u2581the \u2581specified \u2581task \u2581and \u2581its \u2581queue \u2581to \u2581the \u2581pool ."], "bleu": 0.23983663471592362, "rouge_l": 0.558169934640523}
{"id": 4859, "predictions": ["\u2581// \u2581 Fetch \u2581 searches \u2581for \u2581a \u2581 year \u2581in \u2581the \u2581cache"], "references": ["\u2581// \u2581 Fetch \u2581fetches \u2581a \u2581glyph \u2581from \u2581the \u2581cache , \u2581calling \u2581 render Glyph \u2581first \u2581if \u2581it \u2581doesn ' t \u2581already \u2581exist"], "bleu": 0.10739983258001305, "rouge_l": 0.33516483516483514}
{"id": 4895, "predictions": ["\u2581// \u2581Save To Png File \u2581writes \u2581a \u2581 Image \u2581to \u2581a \u2581file ."], "references": ["\u2581// \u2581Save To Png File \u2581create \u2581and \u2581save \u2581an \u2581image \u2581to \u2581a \u2581file \u2581using \u2581 PNG \u2581 format"], "bleu": 0.3112430451839831, "rouge_l": 0.5015416238437821}
{"id": 4299, "predictions": ["\u2581// \u2581 Reset \u2581 clear s \u2581all \u2581 backends \u2581and \u2581 backends ."], "references": ["\u2581// \u2581 Reset \u2581restore s \u2581the \u2581internal \u2581state \u2581of \u2581the \u2581logging \u2581library ."], "bleu": 0.19674979811155635, "rouge_l": 0.38461538461538464}
{"id": 4387, "predictions": ["\u2581// \u2581 Fill \u2581 apply \u2581the \u2581 set \u2581of \u2581elements \u2581into \u2581the \u2581 Selection ."], "references": ["\u2581// \u2581 Fill \u2581fills \u2581all \u2581of \u2581the \u2581fields \u2581the \u2581selection \u2581refers \u2581to \u2581with \u2581the \u2581provided \u2581 text ."], "bleu": 0.15352138726197065, "rouge_l": 0.41739980449657876}
{"id": 4108, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Write \u2581writes \u2581and \u2581logs \u2581the \u2581 data ."], "bleu": 0.4366835442847812, "rouge_l": 0.768503937007874}
{"id": 4605, "predictions": ["\u2581// \u2581 On Gossip Uni cast \u2581will \u2581 set \u2581the \u2581 gossip \u2581 button \u2581for \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Merge \u2581the \u2581 gossip ed \u2581 data \u2581represented \u2581by \u2581buf \u2581into \u2581our \u2581state ."], "bleu": 0.1619557012853241, "rouge_l": 0.4161793372319688}
{"id": 4398, "predictions": ["\u2581// \u2581 Text \u2581returns \u2581the \u2581 text \u2581 text \u2581for \u2581the \u2581 Selection ."], "references": ["\u2581// \u2581 Text \u2581returns \u2581the \u2581entire ty \u2581of \u2581the \u2581 text \u2581 content \u2581for \u2581exactly \u2581one \u2581element ."], "bleu": 0.38699068161669015, "rouge_l": 0.6112224448897796}
{"id": 5988, "predictions": ["\u2581// \u2581print Json Results \u2581prints \u2581JSON \u2581 data \u2581to \u2581JSON"], "references": ["\u2581// \u2581print Json Results \u2581prints \u2581 json - formatted \u2581output \u2581for \u2581results"], "bleu": 0.39289104553187615, "rouge_l": 0.5366568914956013}
{"id": 4812, "predictions": ["\u2581// \u2581 MarshalBinary Length \u2581encodes \u2581the \u2581 data \u2581into \u2581the \u2581 Codec ."], "references": ["\u2581// \u2581 MarshalBinary Length Prefixed Writer \u2581writes \u2581the \u2581bytes \u2581as \u2581would \u2581be \u2581returned \u2581from \u2581// \u2581 MarshalBinary Length Prefixed \u2581to \u2581the \u2581writer \u2581 w ."], "bleu": 0.12560423031576598, "rouge_l": 0.44816326530612244}
{"id": 4431, "predictions": ["\u2581// \u2581new Client \u2581creates \u2581a \u2581new \u2581client \u2581client"], "references": ["\u2581// \u2581new Client \u2581creates \u2581a \u2581new \u2581 Pact \u2581client \u2581 manager \u2581with \u2581the \u2581provided \u2581services"], "bleu": 0.3129065756932318, "rouge_l": 0.577027027027027}
{"id": 5751, "predictions": ["\u2581// \u2581 set Heap Ptr \u2581 - \u2581 set \u2581the \u2581heap ."], "references": ["\u2581// \u2581 set Heap Ptr \u2581records \u2581that \u2581the \u2581memory \u2581at \u2581heap \u2581address \u2581a \u2581 contains \u2581a \u2581pointer ."], "bleu": 0.26227763008279353, "rouge_l": 0.5147679324894514}
{"id": 6099, "predictions": ["\u2581// \u2581Perform Request WithContext \u2581executes \u2581a \u2581request \u2581with \u2581the \u2581given \u2581context ."], "references": ["\u2581// \u2581Perform Request WithContext \u2581performs \u2581everything \u2581the \u2581Perform Request \u2581does \u2581but \u2581is \u2581also \u2581context - aware ."], "bleu": 0.21440748973713442, "rouge_l": 0.4682017543859649}
{"id": 4984, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581the \u2581 key \u2581from \u2581the \u2581 key \u2581 name ."], "references": ["\u2581// \u2581any Key \u2581reads \u2581the \u2581 key \u2581from \u2581file \u2581or \u2581generates \u2581a \u2581new \u2581one \u2581if \u2581 gen \u2581== \u2581true . \u2581// \u2581It \u2581returns \u2581an \u2581error \u2581if \u2581 filename \u2581 exists"], "bleu": 0.11129152625886096, "rouge_l": 0.2837209302325582}
{"id": 5392, "predictions": ["\u2581// \u2581Set Header \u2581sets \u2581the \u2581 content \u2581of \u2581the \u2581envelope ."], "references": ["\u2581// \u2581Set Header \u2581sets \u2581given \u2581header \u2581 name \u2581to \u2581the \u2581given \u2581value . \u2581// \u2581If \u2581the \u2581header \u2581 exists \u2581already , \u2581all \u2581existing \u2581values \u2581are \u2581replaced ."], "bleu": 0.08574489306065655, "rouge_l": 0.34242181234963914}
{"id": 4409, "predictions": ["\u2581// \u2581 Switch To Frame \u2581 switches \u2581the \u2581 set \u2581of \u2581 items \u2581to \u2581the \u2581 set \u2581of \u2581 items ."], "references": ["\u2581// \u2581 Switch To Frame \u2581 focus es \u2581on \u2581the \u2581frame \u2581specified \u2581by \u2581the \u2581selection . \u2581 All \u2581new \u2581and \u2581// \u2581existing \u2581 selections \u2581will \u2581refer \u2581to \u2581the \u2581new \u2581frame"], "bleu": 0.20786685602546306, "rouge_l": 0.41806853582554515}
{"id": 5942, "predictions": ["\u2581// \u2581 Push \u2581adds \u2581a \u2581new \u2581 span \u2581to \u2581the \u2581 span ."], "references": ["\u2581// \u2581 Push \u2581will \u2581 add \u2581a \u2581new \u2581 span \u2581on \u2581to \u2581the \u2581stack . \u2581 Successful \u2581spans \u2581must \u2581be \u2581finished \u2581by \u2581// \u2581calling \u2581 Pop . \u2581If \u2581the \u2581"], "bleu": 0.11435506944136681, "rouge_l": 0.47758007117437723}
{"id": 4412, "predictions": ["\u2581// \u2581 Mouse To Element \u2581 Mouse \u2581 decrement s \u2581the \u2581current \u2581 set \u2581of \u2581elements \u2581to \u2581the \u2581 set \u2581of \u2581elements ."], "references": ["\u2581// \u2581 Mouse To Element \u2581moves \u2581the \u2581mouse \u2581over \u2581exactly \u2581one \u2581element \u2581in \u2581the \u2581selection ."], "bleu": 0.21451278268552823, "rouge_l": 0.4239791485664639}
{"id": 4707, "predictions": ["\u2581// \u2581 AccessToken \u2581returns \u2581the \u2581access \u2581 token \u2581for \u2581the \u2581given \u2581 token ."], "references": ["\u2581// \u2581 AccessToken \u2581generates \u2581an \u2581OAuth 2 \u2581access \u2581 token \u2581for \u2581the \u2581specified \u2581scopes \u2581on \u2581// \u2581be half \u2581of \u2581service \u2581account \u2581of \u2581 this \u2581application . \u2581This \u2581 token \u2581will"], "bleu": 0.146021934945424, "rouge_l": 0.42657342657342656}
{"id": 5631, "predictions": ["\u2581// \u2581Execute \u2581executes \u2581a \u2581template \u2581and \u2581returns \u2581the \u2581string ."], "references": ["\u2581// \u2581Execute \u2581takes \u2581a \u2581 Template Msg \u2581and \u2581applies \u2581it \u2581to \u2581the \u2581Go \u2581template . \u2581If \u2581 colorize \u2581is \u2581true \u2581the \u2581template \u2581// \u2581will \u2581 insert \u2581 ANSI \u2581 color"], "bleu": 0.02869192827226384, "rouge_l": 0.27518796992481204}
{"id": 4950, "predictions": ["\u2581// \u2581Save \u2581writes \u2581the \u2581 C ed ar \u2581 data \u2581to \u2581the \u2581given \u2581io . Writer ."], "references": ["\u2581// \u2581Save \u2581saves \u2581the \u2581 c ed ar \u2581to \u2581an \u2581io . Writer , \u2581// \u2581where \u2581 dataType \u2581is \u2581either \u2581\" json \" \u2581or \u2581\" go b \" ."], "bleu": 0.10598323503218865, "rouge_l": 0.45677331518039477}
{"id": 5470, "predictions": ["\u2581// \u2581check Password \u2581checks \u2581if \u2581the \u2581given \u2581buffer \u2581is \u2581valid \u2581and \u2581returns \u2581a \u2581valid \u2581// \u2581 byte \u2581array ."], "references": ["\u2581// \u2581check Password \u2581calculates \u2581if \u2581a \u2581password \u2581is \u2581correct \u2581given \u2581password \u2581check \u2581 data \u2581and \u2581 keys ."], "bleu": 0.15435109972796832, "rouge_l": 0.43455031166518254}
{"id": 5605, "predictions": ["\u2581// \u2581 Unmarshal Sec p 256 k 1 PrivateKey \u2581 loads \u2581the \u2581 Sec p 256 k \u2581from \u2581 data"], "references": ["\u2581// \u2581 Unmarshal Sec p 256 k 1 PrivateKey \u2581returns \u2581a \u2581private \u2581 key \u2581from \u2581bytes"], "bleu": 0.45298528719709075, "rouge_l": 0.6236059479553904}
{"id": 5708, "predictions": ["\u2581// \u2581 Decode Map \u2581decodes \u2581a \u2581 map \u2581from \u2581the \u2581decoder ."], "references": ["\u2581// \u2581 Decode Map \u2581provides \u2581the \u2581implementation \u2581of \u2581the \u2581algorithm \u2581for \u2581decoding \u2581maps , \u2581// \u2581where \u2581 f \u2581is \u2581called \u2581to \u2581 decode \u2581each \u2581pair \u2581of \u2581 key \u2581and \u2581value"], "bleu": 0.07018693485770518, "rouge_l": 0.22101449275362317}
{"id": 5761, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581function \u2581that \u2581 disable s \u2581the \u2581 top - level \u2581 path"], "references": ["\u2581// \u2581use Line \u2581is \u2581like \u2581 cobra . Command . Use Line \u2581but \u2581 tweak ed \u2581to \u2581use \u2581command Path ."], "bleu": 0.06789611016977404, "rouge_l": 0.15495342929720574}
{"id": 4871, "predictions": ["\u2581// \u2581 Clear Rect \u2581 clear s \u2581the \u2581 contents \u2581of \u2581a \u2581 uniform \u2581by \u2581 x ."], "references": ["\u2581// \u2581 Clear Rect \u2581fills \u2581the \u2581specified \u2581rectangle \u2581with \u2581a \u2581default \u2581 transparent \u2581 color"], "bleu": 0.21951524426618454, "rouge_l": 0.4929292929292929}
{"id": 5921, "predictions": ["\u2581// \u2581Must Set \u2581sets \u2581the \u2581value \u2581of \u2581a \u2581 key ."], "references": ["\u2581// \u2581Must Set \u2581will \u2581 set \u2581the \u2581given \u2581field \u2581to \u2581the \u2581the \u2581passed \u2581value d . \u2581Must Set \u2581will \u2581panic \u2581// \u2581if \u2581no \u2581field \u2581has \u2581been \u2581found ."], "bleu": 0.05375561292274624, "rouge_l": 0.2852689010132502}
{"id": 4542, "predictions": ["\u2581// \u2581make Broadcast Route Status Slice \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 routes \u2581in \u2581the \u2581 route ."], "references": ["\u2581// \u2581make Broadcast Route Status Slice \u2581takes \u2581a \u2581snapshot \u2581of \u2581the \u2581broadcast \u2581 routes \u2581in \u2581 routes ."], "bleu": 0.419468515826214, "rouge_l": 0.7222222222222221}
{"id": 4203, "predictions": ["\u2581// \u2581fetch Loop \u2581 loads \u2581the \u2581next \u2581loop \u2581from \u2581the \u2581 fetcher ' s \u2581 Min Min Interval \u2581// \u2581and \u2581 poll s \u2581the \u2581 fetcher \u2581to \u2581wait \u2581for \u2581the"], "references": ["\u2581// fetch Loop \u2581is \u2581run \u2581in \u2581a \u2581goroutine"], "bleu": 0.044644767873512764, "rouge_l": 0.11753371868978806}
{"id": 5717, "predictions": ["\u2581// \u2581 call site \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 call site \u2581returns \u2581the \u2581file \u2581 name \u2581and \u2581line \u2581number \u2581of \u2581the \u2581 call site \u2581to \u2581the \u2581// \u2581subsystem \u2581logger ."], "bleu": 0.2587021417077057, "rouge_l": 0.5178268251273345}
{"id": 4788, "predictions": ["\u2581// \u2581Default BucketName \u2581returns \u2581the \u2581default \u2581 config \u2581for \u2581the \u2581given \u2581 app ."], "references": ["\u2581// \u2581Default BucketName \u2581returns \u2581the \u2581 name \u2581of \u2581 this \u2581application ' s \u2581// \u2581default \u2581Google \u2581 Cloud \u2581 Storage \u2581bucket ."], "bleu": 0.20774642738103746, "rouge_l": 0.4807355516637478}
{"id": 5780, "predictions": ["\u2581// \u2581 Slice Ptr \u2581returns \u2581a \u2581 slice \u2581of \u2581 type \u2581 type \u2581 Kind ."], "references": ["\u2581// \u2581 Slice Ptr \u2581returns \u2581the \u2581pointer \u2581inside \u2581a \u2581 slice . \u2581 r \u2581must \u2581contain \u2581a \u2581 slice ."], "bleu": 0.30013867856071597, "rouge_l": 0.5991071428571428}
{"id": 5806, "predictions": ["\u2581// \u2581 List \u2581a \u2581 json . Process . Process Field ."], "references": ["\u2581// \u2581Returns \u2581the \u2581 name \u2581of \u2581the \u2581field \u2581at \u2581offset \u2581off \u2581in \u2581 x ."], "bleu": 0.10175120467701641, "rouge_l": 0.29047619047619044}
{"id": 4720, "predictions": ["\u2581// \u2581deploy \u2581deploy s \u2581the \u2581command \u2581to \u2581the \u2581docker \u2581command"], "references": ["\u2581// \u2581deploy \u2581calls \u2581the \u2581provided \u2581command \u2581to \u2581deploy \u2581the \u2581 app \u2581from \u2581the \u2581temporary \u2581directory ."], "bleu": 0.12876410866020174, "rouge_l": 0.44309927360774815}
{"id": 4854, "predictions": ["\u2581// \u2581 Cubic Curve To \u2581computes \u2581the \u2581 multiplication \u2581between \u2581two \u2581 geometries ."], "references": ["\u2581// \u2581 Cubic Curve To \u2581adds \u2581a \u2581 cubic \u2581 bezier \u2581curve \u2581to \u2581the \u2581current \u2581 path"], "bleu": 0.28920071571583394, "rouge_l": 0.4438669438669438}
{"id": 5758, "predictions": ["\u2581// \u2581find \u2581returns \u2581the \u2581first \u2581 n \u2581 items \u2581from \u2581the \u2581 map ."], "references": ["\u2581// \u2581Finds \u2581a \u2581 Func \u2581for \u2581the \u2581given \u2581address . \u2581 Sort \u2581must \u2581have \u2581been \u2581called \u2581already ."], "bleu": 0.0874213888217952, "rouge_l": 0.3056112224448898}
{"id": 4268, "predictions": ["\u2581// \u2581 Version Cmd \u2581returns \u2581the \u2581 cobra \u2581command \u2581for \u2581 kubeadm \u2581 kubeadm \u2581 subcommand ."], "references": ["\u2581// \u2581 Version Cmd \u2581represents \u2581the \u2581version \u2581command"], "bleu": 0.2186976686325118, "rouge_l": 0.5133239831697054}
{"id": 4710, "predictions": ["\u2581// \u2581 Sign Bytes \u2581returns \u2581a \u2581signed \u2581 plaintext \u2581 key \u2581for \u2581the \u2581given \u2581 App ."], "references": ["\u2581// \u2581 Sign Bytes \u2581sign s \u2581bytes \u2581using \u2581a \u2581private \u2581 key \u2581unique \u2581to \u2581your \u2581application ."], "bleu": 0.24623953025272619, "rouge_l": 0.4705882352941176}
{"id": 6002, "predictions": ["\u2581// \u2581to Range \u2581returns \u2581the \u2581range \u2581of \u2581 [ start , \u2581and \u2581end \u2581of \u2581the \u2581start ."], "references": ["\u2581// \u2581 Expand s \u2581a \u2581start , \u2581end , \u2581and \u2581step ping \u2581value \u2581// \u2581into \u2581the \u2581full \u2581range \u2581of \u2581int \u2581values ."], "bleu": 0.10849548030810126, "rouge_l": 0.30073952341824156}
{"id": 5603, "predictions": ["\u2581// \u2581Verify \u2581verifies \u2581the \u2581 ECDSA \u2581public \u2581 key \u2581is \u2581valid ."], "references": ["\u2581// \u2581Verify \u2581compares \u2581 data \u2581to \u2581a \u2581signature"], "bleu": 0.14694106251955755, "rouge_l": 0.3112244897959184}
{"id": 5837, "predictions": ["\u2581// \u2581 IndexOf \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581given \u2581 needle \u2581in \u2581the \u2581given \u2581 needle ."], "references": ["\u2581// \u2581 IndexOf \u2581finds \u2581the \u2581index \u2581of \u2581 needle \u2581in \u2581 s \u2581starting \u2581from \u2581start ."], "bleu": 0.26007682357229045, "rouge_l": 0.6703296703296704}
{"id": 4618, "predictions": ["\u2581// \u2581 Broadcast \u2581 publishes \u2581all \u2581 gossip \u2581 data \u2581to \u2581the \u2581 gossip \u2581sender"], "references": ["\u2581// \u2581 Broadcast \u2581 accumulate s \u2581the \u2581 Gossip Data \u2581under \u2581the \u2581given \u2581 src Name \u2581and \u2581will \u2581send \u2581// \u2581it \u2581 eventually . \u2581 Send \u2581and \u2581 Broadcast \u2581"], "bleu": 0.10315156032159929, "rouge_l": 0.2934707903780069}
{"id": 5929, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581 model \u2581to \u2581the \u2581 Catalog \u2581 table ."], "references": ["\u2581// \u2581Add \u2581will \u2581 add \u2581the \u2581specified \u2581 models \u2581to \u2581the \u2581catalog ."], "bleu": 0.1777835117834348, "rouge_l": 0.4615384615384617}
{"id": 4154, "predictions": ["\u2581// \u2581 Url For \u2581 - \u2581 For \u2581 url"], "references": ["\u2581// \u2581 Url For \u2581returns \u2581the \u2581 URL \u2581object \u2581from \u2581 Uri Base \u2581with \u2581the \u2581 Path \u2581 set \u2581to \u2581 path , \u2581and \u2581the \u2581query \u2581// \u2581string \u2581built \u2581with"], "bleu": 0.05340169573435527, "rouge_l": 0.32105263157894737}
{"id": 4811, "predictions": ["\u2581// \u2581construct CompositeKey Type \u2581returns \u2581the \u2581 type \u2581of \u2581a \u2581 type \u2581of \u2581 type \u2581 c ."], "references": ["\u2581// \u2581construct Concrete Type \u2581creates \u2581the \u2581concrete \u2581value \u2581as \u2581// \u2581well \u2581as \u2581the \u2581corresponding \u2581 set table \u2581value \u2581for \u2581it . \u2581// \u2581Return \u2581 i rv Set \u2581which \u2581should \u2581be"], "bleu": 0.05879651544656695, "rouge_l": 0.23921568627450981}
{"id": 5920, "predictions": ["\u2581// \u2581Must Get \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581named \u2581 name ."], "references": ["\u2581// \u2581Must Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581field . \u2581Must Get \u2581will \u2581panic \u2581if \u2581no \u2581field \u2581// \u2581has \u2581been \u2581found ."], "bleu": 0.23034715627458358, "rouge_l": 0.43262411347517726}
{"id": 5707, "predictions": ["\u2581// \u2581 Decode Array \u2581decodes \u2581the \u2581 data \u2581from \u2581the \u2581decoder ."], "references": ["\u2581// \u2581 Decode Array \u2581provides \u2581the \u2581implementation \u2581of \u2581the \u2581algorithm \u2581for \u2581decoding \u2581arrays , \u2581// \u2581where \u2581 f \u2581is \u2581called \u2581to \u2581 decode \u2581each \u2581element \u2581of \u2581the \u2581array ."], "bleu": 0.08123320734158483, "rouge_l": 0.363095238095238}
{"id": 4622, "predictions": ["\u2581// \u2581find Main Path \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581to \u2581the \u2581first \u2581 path ."], "references": ["\u2581// \u2581Find \u2581the \u2581 path \u2581to \u2581package \u2581main \u2581by \u2581looking \u2581at \u2581the \u2581root \u2581 Caller ."], "bleu": 0.21951524426618454, "rouge_l": 0.4756335282651072}
{"id": 4741, "predictions": ["\u2581// \u2581new Struct Less S \u2581returns \u2581a \u2581 Field Load Saver \u2581from \u2581a \u2581struct ."], "references": ["\u2581// \u2581new Struct FL S \u2581returns \u2581a \u2581 Field Load Saver \u2581for \u2581the \u2581struct \u2581pointer \u2581 p ."], "bleu": 0.45303726076701545, "rouge_l": 0.7155425219941348}
{"id": 5965, "predictions": ["\u2581// \u2581 New Object \u2581returns \u2581a \u2581new \u2581object \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 content ."], "references": ["\u2581// \u2581 New Object \u2581creates \u2581a \u2581new \u2581object ."], "bleu": 0.27694132751313416, "rouge_l": 0.6515353805073432}
{"id": 4130, "predictions": ["\u2581// \u2581 set Env \u2581sets \u2581environment \u2581variables \u2581to \u2581 env \u2581variables ."], "references": ["\u2581// \u2581 set Env \u2581sets \u2581the \u2581given \u2581environment \u2581variable \u2581in \u2581the \u2581 app ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 5814, "predictions": ["\u2581// \u2581new Default Classifier \u2581returns \u2581a \u2581default \u2581 token Classifier \u2581for \u2581 this \u2581 token ."], "references": ["\u2581// \u2581new Default Classifier \u2581creates \u2581a \u2581new \u2581classifier \u2581for \u2581ASCII \u2581characters ."], "bleu": 0.24078435074822624, "rouge_l": 0.5132211538461539}
{"id": 5878, "predictions": ["\u2581// \u2581 S d Notify \u2581 wraps \u2581the \u2581 cli . Notify \u2581to \u2581 notify \u2581the \u2581 app ' s \u2581 Unix \u2581 Unix \u2581 Unix \u2581// \u2581mode ."], "references": ["\u2581// \u2581 S d Notify \u2581sends \u2581a \u2581specified \u2581string \u2581to \u2581the \u2581 systemd \u2581notification \u2581socket ."], "bleu": 0.1818958799213559, "rouge_l": 0.42198308993082245}
{"id": 4408, "predictions": ["\u2581// \u2581 getEndpoint \u2581returns \u2581a \u2581 shallow \u2581copy \u2581of \u2581the \u2581given \u2581 name , \u2581 path , \u2581and \u2581 path ."], "references": ["\u2581// \u2581 Selendroid \u2581returns \u2581an \u2581instance \u2581of \u2581a \u2581 Selendroid \u2581 WebDriver . \u2581// \u2581// \u2581 Provided \u2581 Options \u2581will \u2581 apply \u2581as \u2581default \u2581arguments \u2581for \u2581new \u2581 pages ."], "bleu": 0.07627740073422004, "rouge_l": 0.34205607476635513}
{"id": 6107, "predictions": ["\u2581// \u2581to PackageName \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581version ."], "references": ["\u2581// \u2581Convert \u2581version \u2581number \u2581in \u2581index . json \u2581to \u2581go \u2581package \u2581 name \u2581// \u2581\" 1.6 \" \u2581=> \u2581\" v 1 _ 6 \""], "bleu": 0.048063865790527655, "rouge_l": 0.15721649484536082}
{"id": 4455, "predictions": ["\u2581// \u2581 Setup \u2581 initialise s \u2581the \u2581 manager \u2581and \u2581 listen s \u2581for \u2581the \u2581service"], "references": ["\u2581// \u2581 Setup \u2581the \u2581 Management \u2581services ."], "bleu": 0.1702602472176709, "rouge_l": 0.4433139534883721}
{"id": 4761, "predictions": ["\u2581// \u2581rewrite Import \u2581imports \u2581the \u2581given \u2581file \u2581to \u2581the \u2581given \u2581file ."], "references": ["\u2581// \u2581rewrite Import \u2581rewrite s \u2581any \u2581import \u2581of \u2581 path \u2581 oldPath \u2581to \u2581 path \u2581 newPath ."], "bleu": 0.12980728406970088, "rouge_l": 0.32172995780590713}
{"id": 5611, "predictions": ["\u2581// \u2581 Raw 25519 PrivateKey \u2581returns \u2581the \u2581 Ed 25519 \u2581private \u2581 key"], "references": ["\u2581// \u2581 Raw \u2581private \u2581 key \u2581bytes ."], "bleu": 0.25712008025141314, "rouge_l": 0.5970636215334422}
{"id": 4603, "predictions": ["\u2581// \u2581 incr \u2581 increments \u2581the \u2581peer ' s \u2581 data ."], "references": ["\u2581// \u2581 Increment \u2581the \u2581counter \u2581by \u2581one ."], "bleu": 0.15537125692760353, "rouge_l": 0.4149659863945578}
{"id": 4601, "predictions": ["\u2581// \u2581 Receive \u2581implements \u2581the \u2581 Codec \u2581interface ."], "references": ["\u2581// \u2581 Receive \u2581implements \u2581 TCP Receiver \u2581by \u2581reading \u2581from \u2581the \u2581wrapped \u2581 TCP Receiver \u2581and \u2581// \u2581 unbox ing \u2581the \u2581encrypted \u2581message , \u2581returning \u2581the \u2581decoded \u2581message ."], "bleu": 0.04787610649977213, "rouge_l": 0.3364854215918046}
{"id": 4199, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581the \u2581wrapped \u2581middleware \u2581function ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 AccessLog Json Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.2478539992548469, "rouge_l": 0.5239263803680982}
{"id": 4664, "predictions": ["\u2581// \u2581save Entity \u2581saves \u2581the \u2581 entity \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 key ."], "references": ["\u2581// \u2581save Entity \u2581saves \u2581an \u2581 Entity Proto \u2581into \u2581a \u2581 Property Load Saver \u2581or \u2581struct \u2581pointer ."], "bleu": 0.21249144372615247, "rouge_l": 0.40744274809160297}
{"id": 4806, "predictions": ["\u2581// \u2581 decode Typ 3 \u2581decodes \u2581the \u2581 3 3 \u2581encoded \u2581 data \u2581from \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Read \u2581typ 3 \u2581 byte ."], "bleu": 0.10996031481933312, "rouge_l": 0.4644670050761421}
{"id": 4407, "predictions": ["\u2581// \u2581 Edge Driver \u2581returns \u2581a \u2581 slice \u2581of \u2581 this \u2581edge \u2581 drivers \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 active \u2581edge \u2581 set \u2581of \u2581"], "references": ["\u2581// \u2581 Edge Driver \u2581returns \u2581an \u2581instance \u2581of \u2581a \u2581 Edge Driver \u2581 WebDriver . \u2581// \u2581// \u2581 Provided \u2581 Options \u2581will \u2581 apply \u2581as \u2581default \u2581arguments \u2581for \u2581new \u2581"], "bleu": 0.2021077149068507, "rouge_l": 0.4}
{"id": 4767, "predictions": ["\u2581// \u2581 Analyze \u2581a \u2581 app ."], "references": ["\u2581// \u2581analyze \u2581checks \u2581the \u2581 app \u2581for \u2581building \u2581with \u2581the \u2581given \u2581build \u2581tags \u2581and \u2581returns \u2581has Main , \u2581// \u2581 app \u2581files , \u2581and \u2581a \u2581 map \u2581of \u2581full \u2581directory"], "bleu": 0.012934746051157991, "rouge_l": 0.1944223107569721}
{"id": 5588, "predictions": ["\u2581// \u2581Generate KeyPair With Reader \u2581generates \u2581a \u2581new \u2581 key \u2581from \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581Generate KeyPair With Reader \u2581returns \u2581a \u2581 keypair \u2581of \u2581the \u2581given \u2581 type \u2581and \u2581bit size"], "bleu": 0.35424607029004235, "rouge_l": 0.6027667984189723}
{"id": 4132, "predictions": ["\u2581// \u2581validate New \u2581checks \u2581if \u2581the \u2581 app \u2581is \u2581valid ."], "references": ["\u2581// \u2581validate New \u2581checks \u2581 app \u2581 name \u2581 format , \u2581pool \u2581and \u2581plan"], "bleu": 0.27759188366995746, "rouge_l": 0.4698331193838254}
{"id": 5544, "predictions": ["\u2581// \u2581reset R 1 R 2 \u2581 clear s \u2581the \u2581 data \u2581from \u2581the \u2581 set \u2581of \u2581 data"], "references": ["\u2581// \u2581Resets \u2581 R 1 start \u2581and \u2581 R 2 start \u2581to \u2581ensure \u2581they \u2581// \u2581are \u2581within \u2581bounds \u2581of \u2581the \u2581current \u2581rune \u2581 slice ."], "bleu": 0.09464694563141023, "rouge_l": 0.31054545454545457}
{"id": 6016, "predictions": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581number \u2581of \u2581bytes \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581number \u2581of \u2581values \u2581in \u2581the \u2581range"], "bleu": 0.5622008276590377, "rouge_l": 0.7614424410540915}
{"id": 6052, "predictions": ["\u2581// \u2581 Embedded \u2581parses \u2581a \u2581 json \u2581document \u2581from \u2581the \u2581given \u2581 json ."], "references": ["\u2581// \u2581 Embedded \u2581returns \u2581a \u2581 Document \u2581based \u2581on \u2581embedded \u2581specs . \u2581 No \u2581analysis \u2581is \u2581required"], "bleu": 0.16968596279370338, "rouge_l": 0.3804573804573805}
{"id": 5516, "predictions": ["\u2581// \u2581step 3 \u2581is \u2581used \u2581to \u2581check \u2581whether \u2581the \u2581given \u2581word \u2581is \u2581a \u2581valid \u2581 format ."], "references": ["\u2581// \u2581 Step \u2581 3 \u2581is \u2581the \u2581removal \u2581of \u2581the \u2581 derivation al \u2581suffix . \u2581//"], "bleu": 0.11750296943620289, "rouge_l": 0.36563436563436563}
{"id": 5745, "predictions": ["\u2581// \u2581 ForEach Root \u2581calls \u2581the \u2581function \u2581for \u2581each \u2581 call \u2581to \u2581 call \u2581the \u2581callback ."], "references": ["\u2581// \u2581 ForEach Root \u2581calls \u2581fn \u2581with \u2581each \u2581garbage \u2581collection \u2581root . \u2581// \u2581If \u2581fn \u2581returns \u2581false , \u2581 ForEach Root \u2581returns \u2581immediately ."], "bleu": 0.1939939264599478, "rouge_l": 0.37858805275407287}
{"id": 4620, "predictions": ["\u2581// \u2581 Sender \u2581returns \u2581a \u2581 gossip \u2581sender \u2581that \u2581sends \u2581messages \u2581to \u2581the \u2581sender ."], "references": ["\u2581// \u2581 Sender \u2581yields \u2581the \u2581 Gossip Sender \u2581for \u2581the \u2581named \u2581channel . \u2581// \u2581It \u2581will \u2581use \u2581the \u2581factory \u2581function \u2581if \u2581no \u2581sender \u2581yet \u2581 exists ."], "bleu": 0.08180956179235578, "rouge_l": 0.31700074239049736}
{"id": 4952, "predictions": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581 C ed ar \u2581from \u2581the \u2581reader"], "references": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581 c ed ar \u2581from \u2581an \u2581io . Writer , \u2581// \u2581where \u2581 dataType \u2581is \u2581either \u2581\" json \" \u2581or \u2581\" go b \""], "bleu": 0.1666636645313649, "rouge_l": 0.43416370106761565}
{"id": 5465, "predictions": ["\u2581// \u2581send \u2581sends \u2581a \u2581 Query Event \u2581to \u2581the \u2581event \u2581channel ."], "references": ["\u2581// \u2581send \u2581sends \u2581an \u2581event \u2581on \u2581the \u2581event \u2581channel , \u2581aborting \u2581if \u2581either \u2581the \u2581passed \u2581or \u2581// \u2581the \u2581internal \u2581context \u2581 expire ."], "bleu": 0.11908329588433676, "rouge_l": 0.3785460992907802}
{"id": 5624, "predictions": ["\u2581// \u2581 New Base \u2581returns \u2581a \u2581new \u2581 Base \u2581instance"], "references": ["\u2581// \u2581 New Base \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Base \u2581with \u2581default \u2581values \u2581 set ."], "bleu": 0.22929162514899915, "rouge_l": 0.5661252900232019}
{"id": 4900, "predictions": ["\u2581// \u2581 Draw \u2581draw s \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581in \u2581the \u2581 box ."], "references": ["\u2581// \u2581 Draw \u2581a \u2581 t iger"], "bleu": 0.14216645907653844, "rouge_l": 0.3604135893648449}
{"id": 4719, "predictions": ["\u2581// \u2581 Delete Multi \u2581deletes \u2581a \u2581 key \u2581from \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Delete Multi \u2581is \u2581a \u2581batch \u2581version \u2581of \u2581 Delete ."], "bleu": 0.29899503549981366, "rouge_l": 0.5640686922060767}
{"id": 4164, "predictions": ["\u2581// \u2581 First Defined Route \u2581returns \u2581the \u2581first \u2581 route \u2581of \u2581the \u2581first \u2581 route ."], "references": ["\u2581// \u2581return \u2581the \u2581result \u2581that \u2581has \u2581the \u2581 route \u2581defined \u2581the \u2581 earliest"], "bleu": 0.12512236921161915, "rouge_l": 0.42165898617511516}
{"id": 4955, "predictions": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581given \u2581 id ."], "references": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581node \u2581with \u2581the \u2581given \u2581` id `. \u2581// \u2581It \u2581will \u2581return \u2581 ErrNo Value , \u2581if \u2581the \u2581node \u2581does \u2581not \u2581have \u2581a"], "bleu": 0.1381271628577434, "rouge_l": 0.3978260869565217}
{"id": 5632, "predictions": ["\u2581// \u2581 New Template Msg \u2581creates \u2581a \u2581new \u2581 Template Msg"], "references": ["\u2581// \u2581 New Template Msg \u2581will \u2581create \u2581a \u2581new \u2581 Template Msg \u2581with \u2581values \u2581from \u2581the \u2581given \u2581parameters"], "bleu": 0.38891302103085124, "rouge_l": 0.6608884073672807}
{"id": 4194, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581a \u2581 Power \u2581to \u2581 Power \u2581to \u2581 get \u2581a \u2581middleware \u2581function ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Power edBy Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.21951524426618454, "rouge_l": 0.48078817733990153}
{"id": 6098, "predictions": ["\u2581// \u2581Perform Request \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581Perform Request \u2581logs \u2581the \u2581request , \u2581 dump ing \u2581its \u2581 content \u2581if \u2581required \u2581then \u2581makes \u2581the \u2581request \u2581and \u2581logs \u2581// \u2581and \u2581 dumps \u2581the \u2581corresponding \u2581response ."], "bleu": 0.04036189159101581, "rouge_l": 0.2828438948995363}
{"id": 5635, "predictions": ["\u2581// \u2581 Log With Time \u2581 wraps \u2581a \u2581log \u2581entry \u2581with \u2581the \u2581given \u2581parameters ."], "references": ["\u2581// \u2581 Log With Time \u2581will \u2581log \u2581a \u2581message \u2581at \u2581the \u2581provided \u2581level \u2581to \u2581all \u2581logger s \u2581added \u2581// \u2581to \u2581the \u2581 Base \u2581associated \u2581with \u2581 this \u2581 Log Adapter"], "bleu": 0.12897954619115953, "rouge_l": 0.2934707903780069}
{"id": 5530, "predictions": ["\u2581// \u2581 V n v Suffix \u2581returns \u2581the \u2581number \u2581of \u2581 v Suffix \u2581mode \u2581of \u2581the \u2581word \u2581at \u2581the \u2581given \u2581 length ."], "references": ["\u2581// \u2581Finds \u2581the \u2581region \u2581after \u2581the \u2581first \u2581non - vowel \u2581following \u2581a \u2581 vowel , \u2581// \u2581or \u2581a \u2581the \u2581null \u2581region \u2581at \u2581the \u2581end \u2581of \u2581the \u2581word \u2581if \u2581there \u2581is"], "bleu": 0.09561175266325601, "rouge_l": 0.22114803625377644}
{"id": 4735, "predictions": ["\u2581// \u2581 Handle \u2581handles \u2581a \u2581 Message ."], "references": ["\u2581// \u2581 Handle \u2581 arrange s \u2581for \u2581 f \u2581to \u2581be \u2581called \u2581for \u2581incoming \u2581 XMPP \u2581messages . \u2581// \u2581 Only \u2581messages \u2581of \u2581 type \u2581\" chat \" \u2581or \u2581\""], "bleu": 0.02111642300649355, "rouge_l": 0.23828125}
{"id": 4556, "predictions": ["\u2581// \u2581fetch WithDefault \u2581returns \u2581a \u2581peer \u2581with \u2581the \u2581given \u2581 Peer ."], "references": ["\u2581// \u2581fetch WithDefault \u2581will \u2581use \u2581reference \u2581fields \u2581of \u2581the \u2581passed \u2581peer \u2581object \u2581to \u2581// \u2581look \u2581up \u2581and \u2581return \u2581an \u2581existing , \u2581matching \u2581peer . \u2581If \u2581no \u2581matching \u2581peer \u2581is \u2581//"], "bleu": 0.04962965758858181, "rouge_l": 0.22101449275362317}
{"id": 5692, "predictions": ["\u2581// \u2581 Marshal \u2581marshal s \u2581the \u2581given \u2581object \u2581to \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Marshal \u2581writes \u2581the \u2581JSON \u2581representation \u2581of \u2581 v \u2581to \u2581a \u2581 byte \u2581 slice \u2581returned \u2581in \u2581 b ."], "bleu": 0.2222644629248129, "rouge_l": 0.5393457117595047}
{"id": 4478, "predictions": ["\u2581// \u2581 ssl \u2581returns \u2581the \u2581user ' s \u2581 home \u2581directory"], "references": ["\u2581// \u2581find \u2581unix \u2581 home \u2581directory"], "bleu": 0.22416933501922287, "rouge_l": 0.4969450101832994}
{"id": 4642, "predictions": ["\u2581// \u2581Set Num Instances \u2581sets \u2581the \u2581 container ' s \u2581 Num Instances ."], "references": ["\u2581// \u2581Set Num Instances \u2581sets \u2581the \u2581number \u2581of \u2581instances \u2581of \u2581the \u2581given \u2581module . version \u2581to \u2581the \u2581// \u2581specified \u2581value . \u2581If \u2581either \u2581module \u2581or \u2581version \u2581are \u2581the \u2581 empty"], "bleu": 0.14122777346144497, "rouge_l": 0.2986013986013986}
{"id": 5881, "predictions": ["\u2581// \u2581 Unique \u2581 decrement s \u2581all \u2581 items \u2581in \u2581a \u2581 slice ."], "references": ["\u2581// \u2581 Unique \u2581is \u2581a \u2581 helper \u2581to \u2581 get \u2581a \u2581unique \u2581list \u2581of \u2581object \u2581 ids ."], "bleu": 0.16270953845403316, "rouge_l": 0.48897795591182364}
{"id": 5580, "predictions": ["\u2581// \u2581Generate RSA KeyPair \u2581generates \u2581a \u2581new \u2581 RSA \u2581private \u2581 key \u2581from \u2581a \u2581given \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581Generate RSA KeyPair \u2581generates \u2581a \u2581new \u2581 rsa \u2581private \u2581and \u2581public \u2581 key"], "bleu": 0.42155030936737276, "rouge_l": 0.6683266932270916}
{"id": 5697, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581the \u2581stream \u2581and \u2581writes \u2581it \u2581to \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Open \u2581explicitly \u2581tells \u2581the \u2581encoder \u2581to \u2581start \u2581the \u2581stream , \u2581setting \u2581the \u2581number \u2581// \u2581of \u2581values \u2581to \u2581 n . \u2581// \u2581// \u2581 Depending \u2581on \u2581the \u2581actual \u2581"], "bleu": 0.06904950985252116, "rouge_l": 0.3412587412587413}
{"id": 5425, "predictions": ["\u2581// \u2581detect Multipart Message \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581valid \u2581 Multipart Message ."], "references": ["\u2581// \u2581detect Multipart Message \u2581returns \u2581true \u2581if \u2581the \u2581message \u2581has \u2581a \u2581recognized \u2581multipart \u2581 Content - Type \u2581header"], "bleu": 0.4464617303464354, "rouge_l": 0.5555555555555556}
{"id": 5957, "predictions": ["\u2581// \u2581 Model Validator \u2581returns \u2581the \u2581 model \u2581 validator \u2581for \u2581the \u2581 model ."], "references": ["\u2581// \u2581 Model Validator \u2581performs \u2581a \u2581validation \u2581of \u2581the \u2581 model \u2581using \u2581the \u2581Validate \u2581method ."], "bleu": 0.302891221374327, "rouge_l": 0.5772870662460569}
{"id": 6019, "predictions": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581the \u2581 slice \u2581is \u2581a \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581value \u2581is \u2581a \u2581valid \u2581// \u2581value \u2581within \u2581the \u2581value \u2581range ."], "bleu": 0.35788354361456914, "rouge_l": 0.555004135649297}
{"id": 5429, "predictions": ["\u2581// \u2581 Depth Match First \u2581returns \u2581the \u2581first \u2581part \u2581of \u2581the \u2581 children \u2581of \u2581the \u2581 Part \u2581of \u2581the \u2581// \u2581 children \u2581of \u2581the \u2581 Part ."], "references": ["\u2581// \u2581 Depth Match First \u2581performs \u2581a \u2581depth \u2581first \u2581 search \u2581of \u2581the \u2581 Part \u2581tree \u2581and \u2581returns \u2581the \u2581first \u2581part \u2581that \u2581// \u2581causes \u2581the \u2581given \u2581matcher \u2581to \u2581return \u2581true"], "bleu": 0.3143125116024278, "rouge_l": 0.4866096866096866}
{"id": 5662, "predictions": ["\u2581// \u2581 HTTPClient \u2581is \u2581a \u2581 functional \u2581option \u2581that \u2581sets \u2581the \u2581 Client ' s \u2581 Client ."], "references": ["\u2581// \u2581 HTTPClient \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581http . Client \u2581to \u2581be \u2581used \u2581when \u2581creating \u2581// \u2581the \u2581 Stack driver \u2581service ."], "bleu": 0.2527417819802665, "rouge_l": 0.510654490106545}
{"id": 5815, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 token \u2581in \u2581the \u2581 Lexer ."], "references": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581word , \u2581or \u2581an \u2581error . \u2581If \u2581there \u2581are \u2581no \u2581more \u2581words , \u2581// \u2581the \u2581error \u2581will \u2581be \u2581io . EOF ."], "bleu": 0.14523978304117627, "rouge_l": 0.36609152288072017}
{"id": 4770, "predictions": ["\u2581// \u2581 StringVar Go path \u2581is \u2581the \u2581 path \u2581to \u2581 compile \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 findIn Go path \u2581 searches \u2581the \u2581go path \u2581for \u2581the \u2581named \u2581import \u2581directory ."], "bleu": 0.11433361115787453, "rouge_l": 0.49863760217983655}
{"id": 6068, "predictions": ["\u2581// \u2581Set Level ByName \u2581sets \u2581the \u2581logger \u2581level \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Set Level ByName \u2581sets \u2581log \u2581level \u2581by \u2581 name"], "bleu": 0.375022891676693, "rouge_l": 0.6873239436619719}
{"id": 4471, "predictions": ["\u2581// \u2581 Put Writer \u2581writes \u2581a \u2581 config \u2581to \u2581the \u2581 Writer ."], "references": ["\u2581// \u2581 Put Writer \u2581provides \u2581a \u2581writer \u2581to \u2581upload \u2581 data \u2581as \u2581multipart \u2581upload \u2581requests . \u2581// \u2581// \u2581Each \u2581header \u2581in \u2581 h \u2581is \u2581added \u2581to \u2581the \u2581HTTP \u2581request \u2581header"], "bleu": 0.09258563337609502, "rouge_l": 0.3473309608540925}
{"id": 4776, "predictions": ["\u2581// \u2581 init Field \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581reflect . Value ."], "references": ["\u2581// \u2581 init Field \u2581is \u2581similar \u2581to \u2581reflect ' s \u2581 Value . Field ByIndex , \u2581in \u2581that \u2581it \u2581// \u2581returns \u2581the \u2581nested \u2581struct \u2581field \u2581corresponding \u2581to \u2581index , \u2581but"], "bleu": 0.10325310040189022, "rouge_l": 0.2986013986013986}
{"id": 4832, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581command \u2581line \u2581into \u2581a \u2581 Parser ."], "references": ["\u2581// \u2581Parse \u2581processes \u2581the \u2581given \u2581command \u2581line \u2581option , \u2581storing \u2581the \u2581results \u2581in \u2581the \u2581field \u2581// \u2581of \u2581the \u2581structs \u2581from \u2581which \u2581 New Parser \u2581was \u2581constructed"], "bleu": 0.05421618470716711, "rouge_l": 0.3526011560693642}
{"id": 5752, "predictions": ["\u2581// \u2581find Heap Info \u2581returns \u2581the \u2581heap Info \u2581for \u2581the \u2581given \u2581 slice \u2581of \u2581 type ."], "references": ["\u2581// \u2581find Heap Info \u2581finds \u2581the \u2581heap Info \u2581structure \u2581for \u2581a . \u2581// \u2581Returns \u2581nil \u2581if \u2581a \u2581is \u2581not \u2581a \u2581heap \u2581address ."], "bleu": 0.1997775748971733, "rouge_l": 0.4381484437350359}
{"id": 4792, "predictions": ["\u2581// \u2581marshal \u2581marshal s \u2581a \u2581 key \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581marshal \u2581marshal s \u2581the \u2581 key ' s \u2581string \u2581representation \u2581to \u2581the \u2581buffer ."], "bleu": 0.27239291214123534, "rouge_l": 0.4797752808988765}
{"id": 4436, "predictions": ["\u2581// \u2581 getPort \u2581returns \u2581the \u2581 URL \u2581of \u2581the \u2581 URL \u2581in \u2581the \u2581 URL ."], "references": ["\u2581// \u2581Get \u2581a \u2581port \u2581given \u2581a \u2581 URL"], "bleu": 0.10878661088699644, "rouge_l": 0.2659883720930233}
{"id": 4100, "predictions": ["\u2581// \u2581Get For Provisioner \u2581returns \u2581the \u2581 provisioner"], "references": ["\u2581// \u2581Get For Provisioner \u2581gets \u2581the \u2581builder \u2581required \u2581by \u2581the \u2581 provisioner ."], "bleu": 0.31952387041288227, "rouge_l": 0.6392215568862274}
{"id": 5480, "predictions": ["\u2581// \u2581next Block In File \u2581returns \u2581the \u2581next \u2581block \u2581in \u2581the \u2581 pack file ."], "references": ["\u2581// \u2581next Block In File \u2581reads \u2581the \u2581next \u2581file \u2581block \u2581in \u2581the \u2581current \u2581file \u2581at \u2581the \u2581current \u2581// \u2581archive \u2581file \u2581position , \u2581or \u2581returns \u2581an \u2581error \u2581if \u2581there \u2581is \u2581a"], "bleu": 0.15675647312598798, "rouge_l": 0.41924398625429554}
{"id": 5956, "predictions": ["\u2581// \u2581Basic Authorizer \u2581returns \u2581a \u2581 Callback \u2581that \u2581will \u2581 fire \u2581a \u2581 authorizer \u2581on \u2581the \u2581client ."], "references": ["\u2581// \u2581Basic Authorizer \u2581 authorize s \u2581requests \u2581based \u2581on \u2581a \u2581simple \u2581credentials \u2581list ."], "bleu": 0.15071676257541072, "rouge_l": 0.38364779874213834}
{"id": 4722, "predictions": ["\u2581// \u2581proto To App Logs \u2581converts \u2581a \u2581 Log Line \u2581to \u2581a \u2581 slice \u2581of \u2581 App Log Log ."], "references": ["\u2581// \u2581proto To App Logs \u2581takes \u2581as \u2581input \u2581an \u2581array \u2581of \u2581pointers \u2581to \u2581 Log Lines , \u2581the \u2581internal \u2581// \u2581 Protocol \u2581 Buffer \u2581representation \u2581of \u2581a \u2581single \u2581application -"], "bleu": 0.17232681928681598, "rouge_l": 0.34746835443037977}
{"id": 4210, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581addresses \u2581and \u2581configuration ."], "references": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581client \u2581instance"], "bleu": 0.37239098949398236, "rouge_l": 0.5520361990950226}
{"id": 5601, "predictions": ["\u2581// \u2581 Sign \u2581sign s \u2581the \u2581 ECDSA PrivateKey \u2581with \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 Sign \u2581returns \u2581the \u2581signature \u2581of \u2581the \u2581input \u2581 data"], "bleu": 0.195647514979229, "rouge_l": 0.5538261997405965}
{"id": 4215, "predictions": ["\u2581// \u2581 Mark Offsets \u2581 marks \u2581the \u2581current \u2581 oldest \u2581offset \u2581of \u2581the \u2581consumer ."], "references": ["\u2581// \u2581 Mark Offsets \u2581 marks \u2581 stashed \u2581offsets \u2581as \u2581processed . \u2581// \u2581See \u2581 Mark Offset \u2581for \u2581additional \u2581 explanation ."], "bleu": 0.24866492058636291, "rouge_l": 0.41816623821765214}
{"id": 4567, "predictions": ["\u2581// \u2581 New Peer \u2581returns \u2581a \u2581new \u2581 Peer \u2581instance"], "references": ["\u2581// \u2581 New Peer \u2581returns \u2581a \u2581 Peer , \u2581which \u2581can \u2581be \u2581used \u2581as \u2581a \u2581 net . Packet Conn . \u2581// \u2581 Clients \u2581must \u2581Register \u2581a \u2581mesh . Gossip"], "bleu": 0.08547170690324071, "rouge_l": 0.3669172932330827}
{"id": 4533, "predictions": ["\u2581// \u2581new Local Peer \u2581returns \u2581a \u2581new \u2581 Local Peer ."], "references": ["\u2581// \u2581new Local Peer \u2581returns \u2581a \u2581 usable \u2581 Local Peer ."], "bleu": 0.6710275993197631, "rouge_l": 0.8628005657708628}
{"id": 4182, "predictions": ["\u2581// \u2581 WriteHeader \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581Set \u2581the \u2581right \u2581 headers \u2581for \u2581gzip \u2581encoded \u2581responses ."], "bleu": 0.13065113298388567, "rouge_l": 0.3505747126436781}
{"id": 4490, "predictions": ["\u2581// \u2581 Scan \u2581scan s \u2581the \u2581value \u2581into \u2581the \u2581value \u2581pointed \u2581to \u2581by \u2581 Time ."], "references": ["\u2581// \u2581 Scan \u2581implements \u2581the \u2581 Scanner \u2581interface ."], "bleu": 0.16467029855845897, "rouge_l": 0.505524861878453}
{"id": 5610, "predictions": ["\u2581// \u2581Verify \u2581verifies \u2581the \u2581signature \u2581of \u2581the \u2581 Sec p 256 k 1 \u2581public \u2581 key \u2581and \u2581// \u2581returns \u2581true \u2581if \u2581the \u2581signature \u2581is \u2581valid ."], "references": ["\u2581// \u2581Verify \u2581compares \u2581a \u2581signature \u2581against \u2581the \u2581input \u2581 data"], "bleu": 0.07305891545072536, "rouge_l": 0.30198019801980197}
{"id": 4907, "predictions": ["\u2581// \u2581 Path Transform \u2581 - \u2581 Modifies \u2581the \u2581 path \u2581of \u2581a \u2581 dot \u2581 path ."], "references": ["\u2581// \u2581 Path Transform \u2581 scales \u2581a \u2581 path \u2581differently \u2581in \u2581 horizontal \u2581and \u2581 vertical \u2581direction ."], "bleu": 0.32263864160302524, "rouge_l": 0.5555555555555556}
{"id": 5835, "predictions": ["\u2581// \u2581 Human ize \u2581formats \u2581a \u2581string \u2581with \u2581 camel \u2581case \u2581 format ."], "references": ["\u2581// \u2581 Human ize \u2581transforms \u2581 s \u2581into \u2581a \u2581human \u2581 friendly \u2581 form ."], "bleu": 0.2653117169252599, "rouge_l": 0.548314606741573}
{"id": 4654, "predictions": ["\u2581// \u2581 Offset \u2581specifies \u2581the \u2581offset \u2581for \u2581the \u2581query ."], "references": ["\u2581// \u2581 Offset \u2581returns \u2581a \u2581derivative \u2581query \u2581that \u2581has \u2581an \u2581offset \u2581of \u2581how \u2581many \u2581 keys \u2581to \u2581// \u2581skip \u2581over \u2581before \u2581returning \u2581results . \u2581 A \u2581negative \u2581value \u2581is \u2581invalid"], "bleu": 0.036520949774262054, "rouge_l": 0.22932330827067668}
{"id": 5906, "predictions": ["\u2581// \u2581Set Token Data \u2581sets \u2581the \u2581 token \u2581 data \u2581for \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581Set Token Data \u2581implements \u2581the \u2581 fla me . Generic Token \u2581interface ."], "bleu": 0.2545984531673679, "rouge_l": 0.4723451327433628}
{"id": 5414, "predictions": ["\u2581// \u2581Add Inline \u2581adds \u2581a \u2581new \u2581 inline \u2581 text \u2581to \u2581the \u2581 Mail Builder ."], "references": ["\u2581// \u2581Add Inline \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581that \u2581includes \u2581the \u2581specified \u2581 inline . \u2581 fileName \u2581and \u2581// \u2581 content ID \u2581may \u2581be \u2581 left \u2581 empty"], "bleu": 0.10546278676099005, "rouge_l": 0.32972972972972975}
{"id": 5485, "predictions": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581new \u2581 Reader \u2581reading \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581 NewReader \u2581creates \u2581a \u2581 Reader \u2581reading \u2581from \u2581 r . \u2581// \u2581 NewReader \u2581only \u2581supports \u2581single \u2581volume \u2581 archives . \u2581// \u2581 Multi - volume \u2581 archives \u2581must"], "bleu": 0.1292569069512762, "rouge_l": 0.41216216216216217}
{"id": 4214, "predictions": ["\u2581// \u2581 New Consumer \u2581creates \u2581a \u2581new \u2581consumer \u2581with \u2581the \u2581given \u2581 group \u2581and \u2581 config ."], "references": ["\u2581// \u2581 New Consumer \u2581initializes \u2581a \u2581new \u2581consumer"], "bleu": 0.2689054715066593, "rouge_l": 0.5988779803646563}
{"id": 4201, "predictions": ["\u2581// \u2581 s anity Check \u2581checks \u2581if \u2581the \u2581 token \u2581is \u2581valid \u2581and \u2581returns \u2581true \u2581if \u2581the \u2581// \u2581 token \u2581is \u2581valid ."], "references": ["\u2581// s anity Check \u2581returns \u2581true \u2581if \u2581a \u2581check \u2581was \u2581performed"], "bleu": 0.1472821272412462, "rouge_l": 0.43975283213182287}
{"id": 6111, "predictions": ["\u2581// \u2581Create JSON Response \u2581creates \u2581a \u2581new \u2581JSON \u2581response ."], "references": ["\u2581// \u2581Constructs \u2581an \u2581http \u2581response \u2581from \u2581JSON \u2581input \u2581from \u2581 Stdin"], "bleu": 0.13564514503163538, "rouge_l": 0.18885448916408668}
{"id": 4457, "predictions": ["\u2581// \u2581 remove Service Monitor \u2581removes \u2581the \u2581service \u2581monitor"], "references": ["\u2581// \u2581 remove Service Monitor \u2581 watches \u2581a \u2581channel \u2581to \u2581 remove \u2581services \u2581from \u2581operation ."], "bleu": 0.23751081726122505, "rouge_l": 0.38077403245942576}
{"id": 4896, "predictions": ["\u2581// \u2581 Load From Png File \u2581 loads \u2581a \u2581 Image \u2581from \u2581a \u2581file ."], "references": ["\u2581// \u2581 Load From Png File \u2581 Open \u2581a \u2581 png \u2581file"], "bleu": 0.4958271734659374, "rouge_l": 0.7558859975216852}
{"id": 4414, "predictions": ["\u2581// \u2581chain Handlers \u2581returns \u2581a \u2581middleware \u2581that \u2581applies \u2581the \u2581given \u2581chain \u2581 handlers \u2581to \u2581the \u2581// \u2581given \u2581chain ."], "references": ["\u2581// \u2581chain Handlers \u2581takes \u2581a \u2581 set \u2581of \u2581middleware \u2581and \u2581 joins \u2581them \u2581together \u2581// \u2581into \u2581a \u2581single \u2581 Middleware , \u2581making \u2581it \u2581much \u2581simple r \u2581to \u2581compose \u2581middleware \u2581//"], "bleu": 0.08227891133988584, "rouge_l": 0.3138263665594856}
{"id": 4435, "predictions": ["\u2581// \u2581 Publish \u2581a \u2581 publish \u2581request"], "references": ["\u2581// \u2581 Publish Pact s \u2581 publishes \u2581a \u2581 set \u2581of \u2581 pact s \u2581to \u2581a \u2581 pact \u2581broker"], "bleu": 0.07404200366936504, "rouge_l": 0.3550640279394645}
{"id": 5808, "predictions": ["\u2581// \u2581 Readable N \u2581returns \u2581true \u2581if \u2581the \u2581 length \u2581of \u2581the \u2581 type \u2581of \u2581 Address \u2581is \u2581a \u2581valid \u2581 N ."], "references": ["\u2581// \u2581 Readable N \u2581reports \u2581whether \u2581the \u2581 n \u2581bytes \u2581starting \u2581at \u2581address \u2581a \u2581are \u2581readable ."], "bleu": 0.18038302998635977, "rouge_l": 0.41112047177759053}
{"id": 4808, "predictions": ["\u2581// \u2581 translate Str \u2581returns \u2581a \u2581 name \u2581of \u2581the \u2581 type \u2581of \u2581 type \u2581 type ."], "references": ["\u2581// \u2581 A \u2581 heuristic \u2581to \u2581guess \u2581the \u2581 size \u2581of \u2581a \u2581registered \u2581 type \u2581and \u2581return \u2581it \u2581as \u2581a \u2581string . \u2581// \u2581If \u2581the \u2581 size \u2581is \u2581not \u2581fixed"], "bleu": 0.07738056603138656, "rouge_l": 0.3588235294117647}
{"id": 4134, "predictions": ["\u2581// \u2581 Instance Env s \u2581returns \u2581the \u2581 env \u2581environment \u2581variables \u2581for \u2581the \u2581given \u2581service ."], "references": ["\u2581// \u2581 Instance Env s \u2581returns \u2581a \u2581 map \u2581of \u2581environment \u2581variables \u2581that \u2581belongs \u2581to \u2581the \u2581// \u2581given \u2581service \u2581and \u2581service \u2581instance ."], "bleu": 0.2873168649922831, "rouge_l": 0.6457654723127035}
{"id": 4427, "predictions": ["\u2581// \u2581is JSON Formatted Object \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581object \u2581is \u2581a \u2581JSON \u2581string"], "references": ["\u2581// \u2581Checks \u2581to \u2581see \u2581if \u2581someone \u2581has \u2581tried \u2581to \u2581 submit \u2581a \u2581JSON \u2581string \u2581// \u2581for \u2581an \u2581object , \u2581which \u2581is \u2581no \u2581longer \u2581supported"], "bleu": 0.09992242441705818, "rouge_l": 0.24616626311541562}
{"id": 4368, "predictions": ["\u2581// \u2581 Size \u2581 increments \u2581the \u2581window \u2581 size"], "references": ["\u2581// \u2581 Size \u2581sets \u2581the \u2581current \u2581 page \u2581 size \u2581in \u2581pixels ."], "bleu": 0.2152373268412755, "rouge_l": 0.5281385281385281}
{"id": 4680, "predictions": ["\u2581// \u2581 Logout URL \u2581 logout s \u2581the \u2581user ' s \u2581 URL"], "references": ["\u2581// \u2581 Logout URL \u2581returns \u2581a \u2581 URL \u2581that , \u2581when \u2581visited , \u2581sign s \u2581the \u2581user \u2581out , \u2581// \u2581then \u2581 redirects \u2581the \u2581user \u2581to \u2581the \u2581 URL \u2581specified"], "bleu": 0.10822068909767886, "rouge_l": 0.43416370106761565}
{"id": 4818, "predictions": ["\u2581// \u2581MarshalJSON Indent \u2581 - \u2581encodes \u2581a \u2581JSON \u2581string \u2581to \u2581a \u2581JSON \u2581 byte \u2581array ."], "references": ["\u2581// \u2581MarshalJSON Indent \u2581calls \u2581 json . Indent \u2581on \u2581the \u2581output \u2581of \u2581 c dc . Marshal JSON \u2581// \u2581using \u2581the \u2581given \u2581prefix \u2581and \u2581indent \u2581string ."], "bleu": 0.08561222877418397, "rouge_l": 0.26676384839650147}
{"id": 6011, "predictions": ["\u2581// \u2581 z fill String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581a \u2581string ."], "references": ["\u2581// \u2581 Left \u2581pad s \u2581a \u2581string \u2581to \u2581a \u2581given \u2581with , \u2581using \u2581\"0\" . \u2581// \u2581If \u2581the \u2581string \u2581begins \u2581with \u2581a \u2581negative \u2581\"-\" \u2581character , \u2581then \u2581// \u2581padding \u2581is"], "bleu": 0.04808038397966747, "rouge_l": 0.26049822064056943}
{"id": 4122, "predictions": ["\u2581// \u2581Get ByName \u2581returns \u2581a \u2581 app \u2581by \u2581 name ."], "references": ["\u2581// \u2581Get ByName \u2581queries \u2581the \u2581database \u2581to \u2581find \u2581an \u2581 app \u2581identified \u2581by \u2581the \u2581given \u2581// \u2581 name ."], "bleu": 0.169536605677461, "rouge_l": 0.5724713242961418}
{"id": 6108, "predictions": ["\u2581// \u2581 loadFile \u2581reads \u2581the \u2581 contents \u2581of \u2581a \u2581file"], "references": ["\u2581// \u2581 Helper \u2581function \u2581that \u2581reads \u2581 content \u2581from \u2581given \u2581file"], "bleu": 0.17851905035930718, "rouge_l": 0.47213622291021673}
{"id": 5910, "predictions": ["\u2581// \u2581 Hash Password \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581user ' s \u2581password ."], "references": ["\u2581// \u2581 Hash Password \u2581will \u2581hash \u2581 Password \u2581and \u2581 set \u2581 PasswordHash ."], "bleu": 0.2676032275663791, "rouge_l": 0.42857142857142855}
{"id": 4937, "predictions": ["\u2581// \u2581Set Level Writer \u2581sets \u2581the \u2581log \u2581level \u2581of \u2581 LEVEL g ."], "references": ["\u2581// \u2581Set Level Writer \u2581sets \u2581writer \u2581to \u2581gl g \u2581 std \u2581writer \u2581per \u2581logging \u2581level"], "bleu": 0.33198814405786686, "rouge_l": 0.423121387283237}
{"id": 4501, "predictions": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581the \u2581 Text Unmarshaler \u2581interface \u2581for \u2581 Bool ."], "references": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581encoding . Text Unmarshaler . \u2581// \u2581It \u2581will \u2581unmarshal \u2581to \u2581a \u2581null \u2581 Bool \u2581if \u2581the \u2581input \u2581is \u2581a \u2581 blank \u2581or \u2581not \u2581an \u2581integer"], "bleu": 0.13626462819908836, "rouge_l": 0.3839160839160839}
{"id": 5908, "predictions": ["\u2581// \u2581 Hash Secret \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 secret \u2581 key \u2581of \u2581the \u2581application ."], "references": ["\u2581// \u2581 Hash Secret \u2581will \u2581hash \u2581 Secret \u2581and \u2581 set \u2581 Secret Hash ."], "bleu": 0.2383041256525615, "rouge_l": 0.4929292929292929}
{"id": 5676, "predictions": ["\u2581// \u2581 Type \u2581returns \u2581the \u2581 type \u2581of \u2581an \u2581error ."], "references": ["\u2581// \u2581 Type \u2581returns \u2581the \u2581 RESP \u2581error \u2581 type , \u2581which \u2581is \u2581represented \u2581by \u2581the \u2581leading \u2581// \u2581 uppercase \u2581word \u2581in \u2581the \u2581error \u2581string ."], "bleu": 0.14983323306098756, "rouge_l": 0.4533443435177539}
{"id": 5847, "predictions": ["\u2581// \u2581 Pad \u2581returns \u2581the \u2581 left \u2581 n \u2581of \u2581the \u2581 left \u2581 n \u2581and \u2581 n ."], "references": ["\u2581// \u2581 Pad \u2581pad s \u2581string \u2581 s \u2581on \u2581both \u2581 sides \u2581with \u2581 c \u2581until \u2581it \u2581has \u2581 length \u2581of \u2581 n ."], "bleu": 0.15245927455733263, "rouge_l": 0.45556385362210605}
{"id": 5345, "predictions": ["\u2581// \u2581 Values \u2581returns \u2581the \u2581 slice \u2581of \u2581the \u2581 Float 64 ring"], "references": ["\u2581// \u2581 Values \u2581returns \u2581all \u2581readable \u2581float 64 \u2581in \u2581a \u2581single \u2581buffer . \u2581 Calling \u2581 this \u2581function \u2581// \u2581might \u2581 allocate \u2581a \u2581new \u2581buffer \u2581to \u2581store \u2581the \u2581elements \u2581"], "bleu": 0.08327766790020474, "rouge_l": 0.30391459074733096}
{"id": 4921, "predictions": ["\u2581// \u2581 Checksum String 32 S \u2581returns \u2581the \u2581checksum \u2581of \u2581a \u2581string ."], "references": ["\u2581// \u2581 Checksum String 32 S \u2581returns \u2581the \u2581checksum \u2581of \u2581the \u2581input \u2581 data , \u2581without \u2581creating \u2581a \u2581copy , \u2581with \u2581the \u2581specific \u2581seed ."], "bleu": 0.3138848961261452, "rouge_l": 0.5975510204081633}
{"id": 4418, "predictions": ["\u2581// \u2581Get Version For Binary \u2581returns \u2581the \u2581version \u2581of \u2581a \u2581binary"], "references": ["\u2581// \u2581Get Version For Binary \u2581gets \u2581the \u2581version \u2581of \u2581a \u2581given \u2581 Ruby \u2581binary"], "bleu": 0.4943396191985215, "rouge_l": 0.7830551989730423}
{"id": 5927, "predictions": ["\u2581// \u2581Ensure \u2581stores \u2581all \u2581the \u2581 Indexer \u2581objects \u2581in \u2581the \u2581store ."], "references": ["\u2581// \u2581Ensure \u2581will \u2581ensure \u2581that \u2581the \u2581required \u2581indexes \u2581exist . \u2581It \u2581may \u2581fail \u2581early \u2581if \u2581some \u2581// \u2581of \u2581the \u2581indexes \u2581are \u2581already \u2581existing \u2581and \u2581do \u2581not \u2581match \u2581the \u2581supplied \u2581index"], "bleu": 0.03628476107997434, "rouge_l": 0.17681159420289855}
{"id": 4935, "predictions": ["\u2581// \u2581Set Writer \u2581sets \u2581the \u2581 g g . Writer ."], "references": ["\u2581// \u2581Set Writer \u2581sets \u2581writer \u2581to \u2581gl g \u2581 std \u2581 writers"], "bleu": 0.3148776921996636, "rouge_l": 0.4314002828854314}
{"id": 4922, "predictions": ["\u2581// \u2581 Checksum String 64 s \u2581returns \u2581the \u2581checksum \u2581of \u2581a \u2581string ."], "references": ["\u2581// \u2581 Checksum String 64 S \u2581returns \u2581the \u2581checksum \u2581of \u2581the \u2581input \u2581 data , \u2581without \u2581creating \u2581a \u2581copy , \u2581with \u2581the \u2581specific \u2581seed ."], "bleu": 0.22109151458361243, "rouge_l": 0.5477551020408163}
{"id": 4845, "predictions": ["\u2581// \u2581recursive Walk \u2581walk s \u2581the \u2581tree \u2581and \u2581walk s \u2581the \u2581tree ."], "references": ["\u2581// \u2581recursive Walk \u2581is \u2581used \u2581to \u2581do \u2581a \u2581 pre - order \u2581walk \u2581of \u2581a \u2581node \u2581// \u2581recursively . \u2581Returns \u2581true \u2581if \u2581the \u2581walk \u2581should \u2581be \u2581 aborted"], "bleu": 0.06668681288122744, "rouge_l": 0.27456864216054017}
{"id": 4553, "predictions": ["\u2581// \u2581 On GC \u2581is \u2581called \u2581when \u2581a \u2581peer \u2581is \u2581 GC ed ."], "references": ["\u2581// \u2581 On GC \u2581adds \u2581a \u2581new \u2581function \u2581to \u2581be \u2581 set \u2581of \u2581function s \u2581that \u2581will \u2581be \u2581executed \u2581on \u2581// \u2581all \u2581subsequent \u2581 GC \u2581runs , \u2581receiving \u2581the \u2581"], "bleu": 0.09329970840207649, "rouge_l": 0.2986013986013986}
{"id": 4433, "predictions": ["\u2581// \u2581 List Servers \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 active \u2581 active \u2581servers"], "references": ["\u2581// \u2581 List Servers \u2581lists \u2581all \u2581known \u2581 Mock \u2581 Servers"], "bleu": 0.27668736912821895, "rouge_l": 0.5723860589812332}
{"id": 4768, "predictions": ["\u2581// \u2581build Context \u2581builds \u2581the \u2581build \u2581context \u2581for \u2581the \u2581build ."], "references": ["\u2581// \u2581build Context \u2581returns \u2581the \u2581context \u2581for \u2581building \u2581the \u2581source ."], "bleu": 0.27901593935858265, "rouge_l": 0.7272727272727273}
{"id": 4157, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581the \u2581 HandlerFunc \u2581as \u2581a \u2581middleware ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Recorder Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.3014896054317117, "rouge_l": 0.5886610373944512}
{"id": 5463, "predictions": ["\u2581// \u2581 To Option \u2581converts \u2581 Options \u2581to \u2581 Option ."], "references": ["\u2581// \u2581 To Option \u2581converts \u2581 this \u2581 Options \u2581to \u2581a \u2581single \u2581 Option ."], "bleu": 0.5069386956263613, "rouge_l": 0.8233128834355827}
{"id": 5961, "predictions": ["\u2581// \u2581 New Rule \u2581returns \u2581a \u2581rule \u2581that \u2581matches \u2581the \u2581given \u2581 name \u2581and \u2581// \u2581string ."], "references": ["\u2581// \u2581 New Rule \u2581creates \u2581a \u2581new \u2581rule ."], "bleu": 0.22612164703205964, "rouge_l": 0.5700934579439252}
{"id": 4753, "predictions": ["\u2581// \u2581 Performs \u2581a \u2581 helper \u2581to \u2581 set \u2581the \u2581 type \u2581of \u2581 ast . Node ."], "references": ["\u2581// \u2581refers To \u2581returns \u2581true \u2581if \u2581 n \u2581is \u2581a \u2581reference \u2581to \u2581the \u2581same \u2581object \u2581as \u2581 x ."], "bleu": 0.09109536346879507, "rouge_l": 0.37654320987654327}
{"id": 5508, "predictions": ["\u2581// \u2581 fill \u2581reads \u2581the \u2581 contents \u2581of \u2581the \u2581reader \u2581into \u2581the \u2581 decode \u2581 slice ."], "references": ["\u2581// \u2581 fill \u2581fills \u2581the \u2581 decode Reader ' s \u2581window"], "bleu": 0.19445278057635548, "rouge_l": 0.4457978075517661}
{"id": 5932, "predictions": ["\u2581// \u2581 New Tracker \u2581returns \u2581a \u2581new \u2581 Found \u2581error ."], "references": ["\u2581// \u2581 New ErrorReporter \u2581returns \u2581a \u2581very \u2581basic \u2581reporter \u2581that \u2581writes \u2581errors \u2581and \u2581stack \u2581// \u2581 traces \u2581to \u2581the \u2581specified \u2581writer ."], "bleu": 0.09966585606803818, "rouge_l": 0.40018744142455487}
{"id": 4443, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface \u2581for \u2581 Map Matcher ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581is \u2581a \u2581custom \u2581JSON \u2581parser \u2581for \u2581 Map Matcher \u2581// \u2581It \u2581treat s \u2581the \u2581 matchers \u2581as \u2581strings"], "bleu": 0.20543482798274126, "rouge_l": 0.34205607476635513}
{"id": 5738, "predictions": ["\u2581// \u2581Register \u2581adds \u2581a \u2581 role \u2581to \u2581the \u2581 Role ."], "references": ["\u2581// \u2581Register \u2581register \u2581 role \u2581with \u2581conditions"], "bleu": 0.18850319022747347, "rouge_l": 0.4629981024667932}
{"id": 5452, "predictions": ["\u2581// \u2581new Boundary Reader \u2581returns \u2581a \u2581new \u2581 wal \u2581reader \u2581for \u2581the \u2581given \u2581reader ."], "references": ["\u2581// \u2581new Boundary Reader \u2581returns \u2581an \u2581initialized \u2581boundary Reader"], "bleu": 0.30130404892785684, "rouge_l": 0.4363376251788269}
{"id": 4193, "predictions": ["\u2581// \u2581Make Handler \u2581creates \u2581a \u2581new \u2581 Handler \u2581for \u2581the \u2581current \u2581environment"], "references": ["\u2581// \u2581Make Handler \u2581 wraps \u2581all \u2581the \u2581 Middlewares \u2581of \u2581the \u2581stack \u2581and \u2581the \u2581 App \u2581together , \u2581and \u2581returns \u2581an \u2581// \u2581http . Handler \u2581ready \u2581to \u2581be \u2581used ."], "bleu": 0.04962965758858181, "rouge_l": 0.22101449275362317}
{"id": 4175, "predictions": ["\u2581// \u2581 Middleware Func \u2581 wraps \u2581the \u2581wrapped \u2581 HandlerFunc \u2581as \u2581a \u2581handler ."], "references": ["\u2581// \u2581 Middleware Func \u2581makes \u2581 Json Indent Middleware \u2581implement \u2581the \u2581 Middleware \u2581interface ."], "bleu": 0.2653117169252599, "rouge_l": 0.548314606741573}
{"id": 4439, "predictions": ["\u2581// \u2581 Publish \u2581sends \u2581a \u2581 Publish \u2581request \u2581to \u2581the \u2581publisher"], "references": ["\u2581// \u2581 Publish \u2581sends \u2581the \u2581 Pact s \u2581to \u2581a \u2581broker , \u2581optionally \u2581 tagging \u2581them"], "bleu": 0.23307878468994683, "rouge_l": 0.43008225616921264}
{"id": 4640, "predictions": ["\u2581// \u2581 Run \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Run InBackground \u2581runs \u2581 f \u2581in \u2581a \u2581background \u2581goroutine \u2581in \u2581 this \u2581process . \u2581// \u2581 f \u2581is \u2581provided \u2581a \u2581context \u2581that \u2581may \u2581out last \u2581the \u2581context \u2581provided"], "bleu": 0.01487707042140218, "rouge_l": 0.24302788844621512}
{"id": 5782, "predictions": ["\u2581// \u2581 Field \u2581returns \u2581the \u2581 Field \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Field \u2581returns \u2581the \u2581part \u2581of \u2581 r \u2581which \u2581 contains \u2581the \u2581field \u2581 f . \u2581// \u2581 r \u2581must \u2581contain \u2581a \u2581struct , \u2581and \u2581 f \u2581must \u2581be"], "bleu": 0.10751100696282835, "rouge_l": 0.3907473309608541}
{"id": 4332, "predictions": ["\u2581// \u2581 Reload Data \u2581reads \u2581the \u2581configuration \u2581file \u2581from \u2581the \u2581file ."], "references": ["\u2581// \u2581 Reload Data \u2581reload s \u2581configuration \u2581file \u2581from \u2581memory"], "bleu": 0.38677062763523445, "rouge_l": 0.646969696969697}
{"id": 4416, "predictions": ["\u2581// \u2581Check Installation \u2581validates \u2581the \u2581 Installer ."], "references": ["\u2581// \u2581Check Installation \u2581checks \u2581installation \u2581of \u2581all \u2581of \u2581the \u2581 tools"], "bleu": 0.24395202750673672, "rouge_l": 0.511744966442953}
{"id": 4951, "predictions": ["\u2581// \u2581Save ToFile \u2581saves \u2581the \u2581 C ed ar \u2581file \u2581to \u2581the \u2581file"], "references": ["\u2581// \u2581Save ToFile \u2581saves \u2581the \u2581 c ed ar \u2581to \u2581a \u2581file , \u2581// \u2581where \u2581 dataType \u2581is \u2581either \u2581\" json \" \u2581or \u2581\" go b \" ."], "bleu": 0.15871202500216358, "rouge_l": 0.4576144036009002}
{"id": 4809, "predictions": ["\u2581// \u2581 collect \u2581all \u2581 data \u2581from \u2581the \u2581 data , \u2581and \u2581returns \u2581the \u2581 ers"], "references": ["\u2581// \u2581Find \u2581all \u2581 conflicting \u2581prefixes \u2581for \u2581concrete \u2581types \u2581// \u2581that \u2581\" implement \" \u2581the \u2581interface . \u2581\" Implement \" \u2581in \u2581quotes \u2581because \u2581// \u2581we \u2581only \u2581consider \u2581the \u2581pointer ,"], "bleu": 0.05215876353651557, "rouge_l": 0.20608108108108109}
{"id": 6021, "predictions": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581 slice \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Index \u2581returns \u2581the \u25810 - based \u2581index \u2581of \u2581the \u2581first \u2581occurrence \u2581// \u2581given \u2581value , \u2581within \u2581the \u2581range . \u2581// \u2581If \u2581the \u2581value \u2581does \u2581not \u2581exist \u2581in \u2581the"], "bleu": 0.15675647312598798, "rouge_l": 0.41924398625429554}
{"id": 5592, "predictions": ["\u2581// \u2581 Unmarshal PrivateKey \u2581decodes \u2581a \u2581private \u2581 key \u2581from \u2581the \u2581 data"], "references": ["\u2581// \u2581 Unmarshal PrivateKey \u2581converts \u2581a \u2581 protobuf \u2581serialized \u2581private \u2581 key \u2581into \u2581its \u2581// \u2581 representative \u2581object"], "bleu": 0.2559249578032457, "rouge_l": 0.5642343268242548}
{"id": 4712, "predictions": ["\u2581// \u2581 seek \u2581moves \u2581the \u2581 seek \u2581to \u2581the \u2581given \u2581offset ."], "references": ["\u2581// \u2581 seek \u2581 seek s \u2581to \u2581the \u2581given \u2581offset \u2581with \u2581an \u2581effective \u2581 whence \u2581equal \u2581to \u2581 SEEK _ SET . \u2581// \u2581It \u2581discard s \u2581the \u2581read \u2581buffer \u2581if"], "bleu": 0.09925931517716362, "rouge_l": 0.44202898550724634}
{"id": 5464, "predictions": ["\u2581// \u2581wait Then Close \u2581closes \u2581the \u2581event \u2581channel \u2581and \u2581waits \u2581for \u2581the \u2581event \u2581to \u2581 close ."], "references": ["\u2581// \u2581wait Then Close \u2581is \u2581 spawned \u2581in \u2581a \u2581goroutine \u2581when \u2581the \u2581channel \u2581is \u2581registered . \u2581This \u2581// \u2581safely \u2581clean s \u2581up \u2581the \u2581channel \u2581when \u2581the \u2581context \u2581has \u2581been \u2581"], "bleu": 0.11129152625886096, "rouge_l": 0.3242524916943521}
{"id": 4583, "predictions": ["\u2581// \u2581 On Gossip Broadcast \u2581is \u2581used \u2581to \u2581update \u2581a \u2581 gossip \u2581 status \u2581of \u2581the \u2581 gossip \u2581 data \u2581// \u2581to \u2581the \u2581 gossip \u2581 router ."], "references": ["\u2581// \u2581 On Gossip Broadcast \u2581receives \u2581broadcast s \u2581of \u2581 Topology Gossip Data . \u2581// \u2581It \u2581returns \u2581the \u2581received \u2581update \u2581unchanged ."], "bleu": 0.18852104513558068, "rouge_l": 0.40884718498659517}
{"id": 6104, "predictions": ["\u2581// \u2581build Aliases \u2581generates \u2581a \u2581 aliases \u2581for \u2581the \u2581SSH \u2581 config ."], "references": ["\u2581// \u2581Builds \u2581the \u2581 aliases \u2581string \u2581based \u2581on \u2581the \u2581SSH \u2581configuration \u2581of \u2581all \u2581servers \u2581and \u2581server \u2581arrays \u2581in \u2581all \u2581 environments ."], "bleu": 0.08896641080808891, "rouge_l": 0.38227394807520143}
{"id": 5590, "predictions": ["\u2581// \u2581 Unmarshal PublicKey \u2581unmarshal s \u2581a \u2581public \u2581 key \u2581from \u2581the \u2581 data \u2581 byte \u2581array ."], "references": ["\u2581// \u2581 Unmarshal PublicKey \u2581converts \u2581a \u2581 protobuf \u2581serialized \u2581public \u2581 key \u2581into \u2581its \u2581// \u2581 representative \u2581object"], "bleu": 0.27447938256311044, "rouge_l": 0.5}
{"id": 5641, "predictions": ["\u2581// \u2581Set Attr \u2581sets \u2581the \u2581attribute \u2581value \u2581for \u2581a \u2581given \u2581 key ."], "references": ["\u2581// \u2581Set Attr \u2581will \u2581 set \u2581 key \u2581to \u2581the \u2581provided \u2581value . \u2581If \u2581the \u2581attribute \u2581already \u2581 exists \u2581the \u2581value \u2581will \u2581// \u2581be \u2581replaced \u2581with \u2581the \u2581new \u2581value ."], "bleu": 0.06869341652947215, "rouge_l": 0.30391459074733096}
{"id": 4843, "predictions": ["\u2581// \u2581 Minimum \u2581returns \u2581the \u2581minimum \u2581value \u2581of \u2581the \u2581tree ."], "references": ["\u2581// \u2581 Minimum \u2581is \u2581used \u2581to \u2581return \u2581the \u2581minimum \u2581value \u2581in \u2581the \u2581tree"], "bleu": 0.28491283253799404, "rouge_l": 0.6567967698519516}
{"id": 5391, "predictions": ["\u2581// \u2581Get Header Values \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581envelope ."], "references": ["\u2581// \u2581Get Header Values \u2581processes \u2581the \u2581specified \u2581header \u2581for \u2581RFC \u2581 2047 \u2581encoded \u2581words \u2581and \u2581returns \u2581all \u2581existing \u2581// \u2581values \u2581as \u2581a \u2581list \u2581of \u2581 UTF -8 \u2581strings"], "bleu": 0.08829270201516615, "rouge_l": 0.3264525993883792}
{"id": 4153, "predictions": ["\u2581// \u2581 Decode Json Payload \u2581decodes \u2581the \u2581 json \u2581payload \u2581from \u2581the \u2581given \u2581struct"], "references": ["\u2581// \u2581 Decode Json Payload \u2581reads \u2581the \u2581request \u2581 body \u2581and \u2581decodes \u2581the \u2581JSON \u2581using \u2581 json . Unmarshal ."], "bleu": 0.266965913065641, "rouge_l": 0.5130841121495328}
{"id": 4477, "predictions": ["\u2581// \u2581 get AWS Keys \u2581returns \u2581the \u2581AWS \u2581 keys \u2581for \u2581AWS \u2581 keys"], "references": ["\u2581// \u2581 get AWS Keys \u2581gets \u2581the \u2581AWS \u2581 Keys \u2581from \u2581environment \u2581variables \u2581or \u2581the \u2581instance - based \u2581metadata \u2581on \u2581 EC 2 \u2581// \u2581 Environment \u2581variables \u2581are \u2581 attempted"], "bleu": 0.13493505821280877, "rouge_l": 0.3839160839160839}
{"id": 4245, "predictions": ["\u2581// \u2581 Time Ordered UUID \u2581returns \u2581random \u2581time \u2581of \u2581the \u2581 uuid"], "references": ["\u2581// \u2581 Time Ordered UUID \u2581generates \u2581a \u2581time \u2581ordered \u2581 UUID . \u2581 Top \u2581 32 b \u2581are \u2581timestamp \u2581 bottom \u2581 96 b \u2581are \u2581random ."], "bleu": 0.12067047345277734, "rouge_l": 0.3356918238993711}
{"id": 4677, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581user ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581 displayable \u2581 name \u2581for \u2581the \u2581user ."], "bleu": 0.27781592256306226, "rouge_l": 0.5366568914956013}
{"id": 4716, "predictions": ["\u2581// \u2581 Put \u2581puts \u2581a \u2581 key \u2581into \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Put \u2581saves \u2581the \u2581 entity \u2581 src \u2581into \u2581the \u2581datastore \u2581with \u2581 key \u2581 k . \u2581 src \u2581must \u2581be \u2581a \u2581struct \u2581// \u2581pointer \u2581or \u2581implement \u2581 Property"], "bleu": 0.06608036589624969, "rouge_l": 0.3978260869565217}
{"id": 6043, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 File Sequence"], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581formatted \u2581sequence"], "bleu": 0.22416933501922287, "rouge_l": 0.4969450101832994}
{"id": 5431, "predictions": ["\u2581// \u2581 To ASCII \u2581converts \u2581 s \u2581to \u2581a \u2581string ."], "references": ["\u2581// \u2581 To ASCII \u2581converts \u2581unicode \u2581to \u2581ASCII \u2581by \u2581stripping \u2581 accent s \u2581and \u2581converting \u2581some \u2581special \u2581characters \u2581// \u2581into \u2581their \u2581ASCII \u2581 approximation s . \u2581 Anything \u2581else \u2581will"], "bleu": 0.08427304536215269, "rouge_l": 0.36014760147601477}
{"id": 5953, "predictions": ["\u2581// \u2581 Limit Body \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 body \u2581 body \u2581of \u2581the \u2581response ."], "references": ["\u2581// \u2581 Limit Body \u2581will \u2581limit \u2581reading \u2581from \u2581the \u2581 body \u2581of \u2581the \u2581supplied \u2581request \u2581to \u2581the \u2581// \u2581specified \u2581amount \u2581of \u2581bytes . \u2581 E ar lier \u2581calls \u2581to \u2581"], "bleu": 0.20493227960166974, "rouge_l": 0.3860759493670886}
{"id": 5636, "predictions": ["\u2581// \u2581 Log \u2581a \u2581message \u2581at \u2581the \u2581given \u2581level \u2581and \u2581 format ."], "references": ["\u2581// \u2581 Log \u2581will \u2581log \u2581a \u2581message \u2581at \u2581the \u2581provided \u2581level \u2581to \u2581all \u2581logger s \u2581added \u2581// \u2581to \u2581the \u2581 Base \u2581associated \u2581with \u2581 this \u2581 Log Adapter"], "bleu": 0.11858778626780515, "rouge_l": 0.41185296324081017}
{"id": 5817, "predictions": ["\u2581// \u2581 Split \u2581splits \u2581a \u2581string \u2581into \u2581a \u2581list \u2581of \u2581strings ."], "references": ["\u2581// \u2581 Split \u2581partitions \u2581a \u2581string \u2581into \u2581a \u2581 slice \u2581of \u2581strings ."], "bleu": 0.4378245806066047, "rouge_l": 0.7942708333333333}
{"id": 4623, "predictions": ["\u2581// \u2581Create \u2581creates \u2581a \u2581new \u2581 token \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581Create \u2581creates \u2581a \u2581channel \u2581and \u2581returns \u2581a \u2581 token \u2581for \u2581use \u2581by \u2581the \u2581client . \u2581// \u2581The \u2581 clientID \u2581is \u2581an \u2581application - provided \u2581string \u2581used \u2581to \u2581identify \u2581the"], "bleu": 0.0904056203553595, "rouge_l": 0.3473309608540925}
{"id": 5864, "predictions": ["\u2581// \u2581Strip Tags \u2581removes \u2581all \u2581tags \u2581from \u2581the \u2581tags \u2581in \u2581the \u2581tags ."], "references": ["\u2581// \u2581Strip Tags \u2581 strip s \u2581all \u2581of \u2581the \u2581 html \u2581tags \u2581or \u2581tags \u2581specified \u2581by \u2581the \u2581parameters"], "bleu": 0.1482179393218648, "rouge_l": 0.43884892086330934}
{"id": 4594, "predictions": ["\u2581// \u2581 Form Session Key \u2581returns \u2581the \u2581 HMAC - key - key - key - key - key - key - value \u2581pair \u2581of \u2581the \u2581// \u2581 key"], "references": ["\u2581// \u2581 Form Session Key \u2581is \u2581used \u2581during \u2581encrypted \u2581protocol \u2581 introduction ."], "bleu": 0.15896519992112562, "rouge_l": 0.30678960603520533}
{"id": 5890, "predictions": ["\u2581// \u2581 Enqueue \u2581adds \u2581a \u2581new \u2581job \u2581to \u2581the \u2581queue ."], "references": ["\u2581// \u2581 Enqueue \u2581will \u2581 enqueue \u2581a \u2581job \u2581using \u2581the \u2581specified \u2581 name \u2581and \u2581 data . \u2581If \u2581a \u2581delay \u2581// \u2581is \u2581specified \u2581the \u2581job \u2581will \u2581not \u2581 dequeue d"], "bleu": 0.04481889913725955, "rouge_l": 0.3151291512915129}
{"id": 4487, "predictions": ["\u2581// \u2581 Usage \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581 get \u2581the \u2581usage \u2581string \u2581for \u2581a \u2581 table"], "references": ["\u2581// \u2581 Usage \u2581writes \u2581usage \u2581information \u2581to \u2581stderr \u2581using \u2581the \u2581default \u2581header \u2581and \u2581 table \u2581 format"], "bleu": 0.1712473044894657, "rouge_l": 0.4020715630885123}
{"id": 4755, "predictions": ["\u2581// \u2581count Uses \u2581returns \u2581the \u2581number \u2581of \u2581 runes \u2581in \u2581the \u2581 scope ."], "references": ["\u2581// \u2581count Uses \u2581returns \u2581the \u2581number \u2581of \u2581uses \u2581of \u2581the \u2581 identifier \u2581 x \u2581in \u2581 scope ."], "bleu": 0.46733564704767544, "rouge_l": 0.7334669338677354}
{"id": 4968, "predictions": ["\u2581// \u2581Create Stream \u2581creates \u2581a \u2581new \u2581stream \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581Create Stream \u2581will \u2581create \u2581a \u2581new \u2581stream \u2581and \u2581register \u2581it"], "bleu": 0.25712008025141314, "rouge_l": 0.507628294036061}
{"id": 4549, "predictions": ["\u2581// \u2581 Compact \u2581is \u2581part \u2581of \u2581the \u2581 Store \u2581interface ."], "references": ["\u2581// \u2581 Compact \u2581implements \u2581gRPC \u2581 KV Server . \u2581// \u2581 Compact \u2581compact s \u2581the \u2581event \u2581 history \u2581in \u2581 s . \u2581 User \u2581should \u2581compact \u2581the \u2581// \u2581event \u2581"], "bleu": 0.04334741445875218, "rouge_l": 0.2701107011070111}
{"id": 5448, "predictions": ["\u2581// \u2581 Join Address \u2581returns \u2581a \u2581 slice \u2581of \u2581 Address Address \u2581with \u2581the \u2581given \u2581address ."], "references": ["\u2581// \u2581 Join Address \u2581formats \u2581a \u2581 slice \u2581of \u2581 Address \u2581structs \u2581such \u2581that \u2581they \u2581can \u2581be \u2581used \u2581in \u2581a \u2581 To \u2581or \u2581 Cc \u2581header ."], "bleu": 0.2644980293225705, "rouge_l": 0.4803149606299213}
{"id": 4964, "predictions": ["\u2581// \u2581new Stream \u2581creates \u2581a \u2581new \u2581stream ."], "references": ["\u2581// \u2581new Stream \u2581returns \u2581a \u2581new \u2581stream"], "bleu": 0.43167001068522526, "rouge_l": 0.8097345132743362}
{"id": 5604, "predictions": ["\u2581// \u2581Generate Sec p 256 k 1 Key \u2581generates \u2581a \u2581new \u2581 Sec p 256 k 1 \u2581 pubkey \u2581from \u2581the \u2581given \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581Generate Sec p 256 k 1 Key \u2581generates \u2581a \u2581new \u2581 Sec p 256 k 1 \u2581private \u2581and \u2581public \u2581 key \u2581pair"], "bleu": 0.6302235866423641, "rouge_l": 0.7305389221556886}
{"id": 5562, "predictions": ["\u2581// \u2581is Short Word \u2581returns \u2581true \u2581if \u2581the \u2581 size \u2581of \u2581the \u2581word \u2581is \u2581a \u2581valid \u2581 date ."], "references": ["\u2581// \u2581 A \u2581word \u2581is \u2581called \u2581short \u2581if \u2581it \u2581ends \u2581in \u2581a \u2581short \u2581 syllable , \u2581and \u2581if \u2581 R 1 \u2581is \u2581null . \u2581//"], "bleu": 0.08350944882354987, "rouge_l": 0.31054545454545457}
{"id": 4213, "predictions": ["\u2581// \u2581 Mark Offset \u2581 marks \u2581the \u2581offset \u2581of \u2581the \u2581partition \u2581for \u2581the \u2581partition ."], "references": ["\u2581// \u2581 Mark Offset \u2581implements \u2581 Partition Consumer"], "bleu": 0.23961829057131984, "rouge_l": 0.46003016591251883}
{"id": 4688, "predictions": ["\u2581// \u2581 New POST Task \u2581creates \u2581a \u2581new \u2581 Task ."], "references": ["\u2581// \u2581 New POST Task \u2581creates \u2581a \u2581 Task \u2581that \u2581will \u2581 POST \u2581to \u2581a \u2581 path \u2581with \u2581the \u2581given \u2581 form \u2581 data ."], "bleu": 0.19229077068030845, "rouge_l": 0.5191489361702128}
{"id": 4141, "predictions": ["\u2581// \u2581Add C Name \u2581adds \u2581a \u2581 C Name \u2581to \u2581the \u2581 app ."], "references": ["\u2581// \u2581Add C Name \u2581adds \u2581a \u2581 C Name \u2581to \u2581 app . \u2581It \u2581updates \u2581the \u2581attribute , \u2581// \u2581calls \u2581the \u2581Set C Name \u2581function \u2581on \u2581the \u2581 provisioner \u2581and"], "bleu": 0.26491626633016047, "rouge_l": 0.5545454545454546}
{"id": 5904, "predictions": ["\u2581// \u2581Add Token Indexes \u2581adds \u2581a \u2581 token Indexes \u2581to \u2581the \u2581 indexer \u2581for \u2581the \u2581given \u2581 org ."], "references": ["\u2581// \u2581Add Token Indexes \u2581will \u2581 add \u2581access \u2581 token \u2581indexes \u2581to \u2581the \u2581specified \u2581 indexer ."], "bleu": 0.2617712247282344, "rouge_l": 0.6172953081876725}
{"id": 5545, "predictions": ["\u2581// \u2581 slice \u2581returns \u2581a \u2581 slice \u2581of \u2581 runes \u2581in \u2581the \u2581 set \u2581of \u2581 data ."], "references": ["\u2581// \u2581Return \u2581a \u2581 slice \u2581of \u2581 w . RS , \u2581allowing \u2581the \u2581start \u2581// \u2581and \u2581stop \u2581to \u2581be \u2581out \u2581of \u2581bounds . \u2581//"], "bleu": 0.20305993029765934, "rouge_l": 0.4178082191780822}
{"id": 5006, "predictions": ["\u2581// \u2581 Error \u2581implements \u2581the \u2581error \u2581interface \u2581for \u2581 Exception Details ."], "references": ["\u2581// \u2581 Error \u2581 satisfies \u2581the \u2581error \u2581interface ."], "bleu": 0.2978201796359045, "rouge_l": 0.6842948717948718}
{"id": 6065, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 Level ."], "references": ["\u2581// \u2581String \u2581returns \u2581level \u2581String"], "bleu": 0.21200626759025185, "rouge_l": 0.40219780219780216}
{"id": 4333, "predictions": ["\u2581// \u2581 Append Files \u2581adds \u2581a \u2581list \u2581of \u2581files \u2581to \u2581the \u2581file ."], "references": ["\u2581// \u2581 Append Files \u2581appends \u2581more \u2581files \u2581to \u2581 ConfigFile \u2581and \u2581reload \u2581automatically ."], "bleu": 0.29274144538476715, "rouge_l": 0.5150784077201447}
{"id": 4637, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get \u2581gets \u2581the \u2581item \u2581for \u2581the \u2581given \u2581 key \u2581and \u2581decodes \u2581the \u2581obtained \u2581value \u2581into \u2581 v . \u2581// \u2581 Err Cache Miss \u2581is \u2581returned \u2581for \u2581a \u2581 memcache"], "bleu": 0.0509241011835078, "rouge_l": 0.3151291512915129}
{"id": 5552, "predictions": ["\u2581// \u2581Remove First Suffix If In \u2581returns \u2581the \u2581first \u2581suffix \u2581of \u2581the \u2581 set \u2581of \u2581strings , \u2581// \u2581and \u2581removes \u2581the \u2581first \u2581suffix \u2581if \u2581the \u2581given \u2581index \u2581is \u2581not \u2581"], "references": ["\u2581// \u2581Find \u2581the \u2581first \u2581suffix \u2581in \u2581the \u2581word \u2581among \u2581those \u2581provided ; \u2581then , \u2581// \u2581check \u2581to \u2581see \u2581if \u2581it \u2581begins \u2581after \u2581 startPos . \u2581If \u2581it \u2581does , \u2581//"], "bleu": 0.1014524997386625, "rouge_l": 0.3}
{"id": 5501, "predictions": ["\u2581// \u2581new Archive 15 \u2581creates \u2581a \u2581new \u2581 Archive Reader \u2581from \u2581a \u2581 Reader ."], "references": ["\u2581// \u2581new Archive 15 \u2581creates \u2581a \u2581new \u2581file Block Reader \u2581for \u2581a \u2581 Version \u25811.5 \u2581archive"], "bleu": 0.4638497841458681, "rouge_l": 0.6414300736067298}
{"id": 5411, "predictions": ["\u2581// \u2581 Header \u2581adds \u2581a \u2581new \u2581header \u2581to \u2581the \u2581 Mail Builder ."], "references": ["\u2581// \u2581 Header \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581the \u2581specified \u2581value \u2581added \u2581to \u2581the \u2581named \u2581header ."], "bleu": 0.1797219959497527, "rouge_l": 0.4669856459330144}
{"id": 4150, "predictions": ["\u2581// \u2581 GetApp From Unit ID \u2581returns \u2581the \u2581 app \u2581 ID \u2581for \u2581the \u2581specified \u2581unit ."], "references": ["\u2581// \u2581 GetApp From Unit ID \u2581returns \u2581 app \u2581from \u2581unit \u2581 id"], "bleu": 0.4450050658086207, "rouge_l": 0.6830907054871221}
{"id": 4336, "predictions": ["\u2581// \u2581Save ConfigFile \u2581saves \u2581the \u2581given \u2581file \u2581to \u2581the \u2581file ."], "references": ["\u2581// \u2581Save ConfigFile \u2581writes \u2581configuration \u2581file \u2581to \u2581local \u2581file \u2581system"], "bleu": 0.2620251007173263, "rouge_l": 0.5763779527559055}
{"id": 5396, "predictions": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581deep \u2581copy \u2581of \u2581the \u2581envelope ."], "references": ["\u2581// \u2581 Clone \u2581returns \u2581a \u2581clone \u2581of \u2581the \u2581current \u2581 Envelope"], "bleu": 0.46924700641055994, "rouge_l": 0.6363636363636364}
{"id": 4136, "predictions": ["\u2581// \u2581Get Units \u2581returns \u2581all \u2581 active \u2581 Units \u2581for \u2581the \u2581 app ."], "references": ["\u2581// \u2581Get Units \u2581returns \u2581the \u2581internal \u2581list \u2581of \u2581units \u2581converted \u2581to \u2581 bind . Unit ."], "bleu": 0.2398541654372737, "rouge_l": 0.46112311015118784}
{"id": 4777, "predictions": ["\u2581// \u2581load Entity \u2581 loads \u2581the \u2581 entity \u2581from \u2581the \u2581 data \u2581in \u2581the \u2581 entity ."], "references": ["\u2581// \u2581load Entity \u2581 loads \u2581an \u2581 Entity Proto \u2581into \u2581 Property Load Saver \u2581or \u2581struct \u2581pointer ."], "bleu": 0.27610135543351616, "rouge_l": 0.4547996272134204}
{"id": 4585, "predictions": ["\u2581// \u2581 On Gossip \u2581is \u2581used \u2581to \u2581 add \u2581a \u2581 gossip \u2581 data \u2581to \u2581a \u2581 gossip \u2581 call ."], "references": ["\u2581// \u2581 On Gossip \u2581receives \u2581broadcast s \u2581of \u2581 Topology Gossip Data . \u2581// \u2581It \u2581returns \u2581an \u2581\" improved \" \u2581version \u2581of \u2581the \u2581received \u2581update . \u2581// \u2581See \u2581peers ."], "bleu": 0.11457628083143609, "rouge_l": 0.22803738317757008}
{"id": 5599, "predictions": ["\u2581// \u2581 Unmarshal ECDSA PublicKey \u2581unmarshal s \u2581a \u2581 PubKey \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Unmarshal ECDSA PublicKey \u2581returns \u2581the \u2581public \u2581 key \u2581from \u2581 x 509 \u2581bytes"], "bleu": 0.2928298013714697, "rouge_l": 0.505699481865285}
{"id": 4666, "predictions": ["\u2581// \u2581 GraphNode \u2581 searches \u2581for \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581 type \u2581 name ."], "references": ["\u2581// \u2581 typeof \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581given \u2581 name , \u2581which \u2581may \u2581be \u2581of \u2581// \u2581the \u2581 form \u2581\" x \" \u2581or \u2581\" p . X \""], "bleu": 0.18040299493486509, "rouge_l": 0.4315112540192926}
{"id": 4860, "predictions": ["\u2581// \u2581 render Glyph \u2581 render \u2581a \u2581 Glyph"], "references": ["\u2581// \u2581 render Glyph \u2581renders \u2581a \u2581glyph \u2581then \u2581caches \u2581and \u2581returns \u2581it"], "bleu": 0.2945901093386716, "rouge_l": 0.4642313546423136}
{"id": 4252, "predictions": ["\u2581// \u2581Remove Key Using File \u2581removes \u2581the \u2581 key \u2581from \u2581the \u2581 keyring"], "references": ["\u2581// \u2581Remove Key Using File \u2581removes \u2581an \u2581existing \u2581 key \u2581from \u2581 keyring \u2581given \u2581a \u2581file"], "bleu": 0.4550148974963433, "rouge_l": 0.7447280799112097}
{"id": 6036, "predictions": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581 Index \u2581 set ."], "references": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581file \u2581at \u2581the \u2581given \u2581index \u2581// \u2581in \u2581the \u2581sequence . \u2581If \u2581a \u2581frame \u2581range \u2581was \u2581not \u2581parsed \u2581from \u2581// \u2581the \u2581sequence"], "bleu": 0.11252479775872545, "rouge_l": 0.3473309608540925}
{"id": 5355, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581a \u2581file \u2581and \u2581returns \u2581a \u2581 Reader ."], "references": ["\u2581// \u2581 Open \u2581open s \u2581a \u2581file \u2581for \u2581reading ."], "bleu": 0.5296074933406222, "rouge_l": 0.7124087591240876}
{"id": 5359, "predictions": ["\u2581// \u2581 Kind \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581value ."], "references": ["\u2581// \u2581 Kind \u2581reports \u2581the \u2581 kind \u2581of \u2581value \u2581underlying \u2581 v ."], "bleu": 0.20670009173746332, "rouge_l": 0.5947075208913649}
{"id": 4602, "predictions": ["\u2581// \u2581new Peer \u2581creates \u2581a \u2581new \u2581 Peer \u2581instance ."], "references": ["\u2581// \u2581Construct \u2581a \u2581peer \u2581with \u2581 empty \u2581state . \u2581// \u2581 Be \u2581sure \u2581to \u2581register \u2581a \u2581channel , \u2581later , \u2581// \u2581so \u2581we \u2581can \u2581make \u2581outbound \u2581communication ."], "bleu": 0.02620180066005771, "rouge_l": 0.19395866454689983}
{"id": 4737, "predictions": ["\u2581// \u2581 Invite \u2581 invite s \u2581a \u2581 Slack \u2581 mail \u2581request \u2581to \u2581the \u2581given \u2581 Context ."], "references": ["\u2581// \u2581 Invite \u2581sends \u2581an \u2581 invitation . \u2581If \u2581the \u2581from \u2581address \u2581is \u2581an \u2581 empty \u2581string \u2581// \u2581the \u2581default \u2581 ( your app @ app spot . com /"], "bleu": 0.07969297374419262, "rouge_l": 0.3189542483660131}
{"id": 4413, "predictions": ["\u2581// \u2581 Log \u2581middleware \u2581 wraps \u2581the \u2581http . Handler \u2581and \u2581 wraps \u2581the \u2581http . Handler ."], "references": ["\u2581// \u2581logging Middleware \u2581logs \u2581requests \u2581to \u2581the \u2581proxy"], "bleu": 0.07535838128770536, "rouge_l": 0.16531165311653115}
{"id": 4936, "predictions": ["\u2581// \u2581Set Level Color \u2581sets \u2581the \u2581 color \u2581of \u2581the \u2581given \u2581level ."], "references": ["\u2581// \u2581Set Level Color \u2581sets \u2581the \u2581 color \u2581for \u2581each \u2581level"], "bleu": 0.6115380576901023, "rouge_l": 0.7614424410540915}
{"id": 4235, "predictions": ["\u2581// \u2581 ProviderConfig \u2581returns \u2581the \u2581configuration \u2581configuration \u2581for \u2581the \u2581// \u2581cluster ."], "references": ["\u2581// \u2581 ProviderConfig \u2581is \u2581a \u2581convenience \u2581method \u2581that \u2581will \u2581attempt \u2581// \u2581to \u2581return \u2581a \u2581 ControlPlane ProviderConfig \u2581for \u2581a \u2581cluster . \u2581// \u2581This \u2581is \u2581useful \u2581for \u2581 managing \u2581the \u2581legacy"], "bleu": 0.056788720057911184, "rouge_l": 0.26521739130434785}
{"id": 4696, "predictions": ["\u2581// \u2581 Purge \u2581removes \u2581the \u2581task \u2581from \u2581the \u2581 map"], "references": ["\u2581// \u2581 Purge \u2581removes \u2581all \u2581tasks \u2581from \u2581a \u2581queue ."], "bleu": 0.3672056269893592, "rouge_l": 0.5}
{"id": 4323, "predictions": ["\u2581// \u2581 New UN \u2581creates \u2581a \u2581new \u2581 namespaced \u2581 name"], "references": ["\u2581// \u2581 New Commander \u2581returns \u2581a \u2581new \u2581 commander \u2581with \u2581the \u2581specified \u2581 top - level \u2581// \u2581flags \u2581and \u2581command \u2581 name . \u2581The \u2581 Usage \u2581function \u2581for \u2581the \u2581"], "bleu": 0.06074767059002291, "rouge_l": 0.36014760147601477}
{"id": 4668, "predictions": ["\u2581// \u2581 join Func \u2581 joins \u2581a \u2581function \u2581to \u2581a \u2581function ."], "references": ["\u2581// \u2581 join Func \u2581is \u2581the \u2581inverse \u2581of \u2581 split Func ."], "bleu": 0.31455601883230705, "rouge_l": 0.5}
{"id": 4224, "predictions": ["\u2581// \u2581 Offsets \u2581returns \u2581the \u2581 map \u2581of \u2581the \u2581offset \u2581in \u2581the \u2581 set \u2581of \u2581 data ."], "references": ["\u2581// \u2581 Offsets \u2581returns \u2581the \u2581latest \u2581 stashed \u2581offsets \u2581by \u2581topic - partition"], "bleu": 0.2592170537135687, "rouge_l": 0.3986928104575163}
{"id": 5896, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 Operation ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581operation ."], "bleu": 0.4063798282013442, "rouge_l": 0.6724409448818898}
{"id": 5865, "predictions": ["\u2581// \u2581 Sub str \u2581returns \u2581the \u2581string \u2581of \u2581the \u2581given \u2581index \u2581in \u2581the \u2581string \u2581 s ."], "references": ["\u2581// \u2581 Sub str \u2581returns \u2581a \u2581 substring \u2581of \u2581 s \u2581starting \u2581at \u2581index \u2581of \u2581 length \u2581 n ."], "bleu": 0.2701207367992834, "rouge_l": 0.4794759825327511}
{"id": 4646, "predictions": ["\u2581// \u2581 Stop \u2581 wraps \u2581the \u2581given \u2581 Context ."], "references": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581specified \u2581version \u2581of \u2581the \u2581specified \u2581module . \u2581// \u2581If \u2581either \u2581module \u2581or \u2581version \u2581are \u2581the \u2581 empty \u2581string , \u2581it \u2581means \u2581the \u2581default ."], "bleu": 0.04036189159101581, "rouge_l": 0.2828438948995363}
{"id": 4931, "predictions": ["\u2581// \u2581Set Mode \u2581sets \u2581the \u2581 g g . g . g . g . g ."], "references": ["\u2581// \u2581Set Mode \u2581sets \u2581gl g \u2581logging \u2581mode"], "bleu": 0.21042990347620458, "rouge_l": 0.4277699859747546}
{"id": 4645, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 modules \u2581for \u2581the \u2581given \u2581module ."], "references": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581specified \u2581version \u2581of \u2581the \u2581specified \u2581module . \u2581// \u2581If \u2581either \u2581module \u2581or \u2581version \u2581are \u2581the \u2581 empty \u2581string , \u2581it \u2581means \u2581the \u2581default ."], "bleu": 0.11407487054786107, "rouge_l": 0.363095238095238}
{"id": 5894, "predictions": ["\u2581// \u2581 Action \u2581returns \u2581a \u2581 fire ."], "references": ["\u2581// \u2581 Action \u2581returns \u2581an \u2581action \u2581that \u2581should \u2581be \u2581registered \u2581in \u2581the \u2581 group \u2581under \u2581// \u2581the \u2581\" watch \" \u2581 name ."], "bleu": 0.07445257455366217, "rouge_l": 0.3560311284046693}
{"id": 4617, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581 gossip \u2581 data \u2581to \u2581the \u2581sender"], "references": ["\u2581// \u2581 Send \u2581 accumulate s \u2581the \u2581 Gossip Data \u2581and \u2581will \u2581send \u2581it \u2581 eventually . \u2581// \u2581 Send \u2581and \u2581 Broadcast \u2581 accumulate \u2581into \u2581different \u2581buckets ."], "bleu": 0.053942675809381564, "rouge_l": 0.22693452380952384}
{"id": 5586, "predictions": ["\u2581// \u2581 Unmarshal Rsa PrivateKey \u2581parses \u2581a \u2581 Rsa PrivateKey \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Unmarshal Rsa PrivateKey \u2581returns \u2581a \u2581private \u2581 key \u2581from \u2581the \u2581input \u2581 x 509 \u2581bytes"], "bleu": 0.30064545690526145, "rouge_l": 0.5294117647058824}
{"id": 4382, "predictions": ["\u2581// \u2581 Move Mouse By \u2581moves \u2581the \u2581 page \u2581to \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Move Mouse By \u2581moves \u2581the \u2581mouse \u2581by \u2581the \u2581provided \u2581offset ."], "bleu": 0.5031747626530138, "rouge_l": 0.6711491442542787}
{"id": 4676, "predictions": ["\u2581// \u2581OAuth Consumer Key \u2581returns \u2581a \u2581new \u2581 empty \u2581 token \u2581 key ."], "references": ["\u2581// \u2581OAuth Consumer Key \u2581returns \u2581the \u2581OAuth \u2581consumer \u2581 key \u2581provided \u2581with \u2581the \u2581current \u2581// \u2581request . \u2581This \u2581method \u2581will \u2581return \u2581an \u2581error \u2581if \u2581the \u2581OAuth \u2581request \u2581was \u2581invalid ."], "bleu": 0.11959725930229445, "rouge_l": 0.3412587412587413}
{"id": 4916, "predictions": ["\u2581// \u2581 Clear Rect \u2581 clear s \u2581the \u2581 contents \u2581of \u2581the \u2581 WebGL \u2581geometry ."], "references": ["\u2581// \u2581 Clear Rect \u2581fills \u2581the \u2581current \u2581canvas \u2581with \u2581a \u2581default \u2581 transparent \u2581 color \u2581at \u2581the \u2581specified \u2581rectangle"], "bleu": 0.2055825140665624, "rouge_l": 0.39391143911439114}
{"id": 4941, "predictions": ["\u2581// \u2581 Disable Level Color \u2581 disable s \u2581a \u2581 g g . Gl g \u2581from \u2581a \u2581 LEVEL _ g ."], "references": ["\u2581// \u2581 Disable Level Color \u2581 disable s \u2581 color \u2581output"], "bleu": 0.35459684529390034, "rouge_l": 0.580338266384778}
{"id": 4940, "predictions": ["\u2581// \u2581 Enable Level Color \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Gl g ."], "references": ["\u2581// \u2581 Enable Level Color \u2581enables \u2581 color \u2581output"], "bleu": 0.2749977595322415, "rouge_l": 0.4886515353805074}
{"id": 5937, "predictions": ["\u2581// \u2581 Intersect \u2581returns \u2581a \u2581list \u2581of \u2581strings \u2581with \u2581the \u2581given \u2581list ."], "references": ["\u2581// \u2581 Intersect \u2581will \u2581return \u2581the \u2581intersection \u2581of \u2581both \u2581lists ."], "bleu": 0.2044800736021839, "rouge_l": 0.42302357836338417}
{"id": 4757, "predictions": ["\u2581// \u2581new Pkg Dot \u2581returns \u2581a \u2581 Expr Expr ."], "references": ["\u2581// \u2581new Pkg Dot \u2581returns \u2581an \u2581 ast . Expr \u2581 referring \u2581to \u2581\" pkg . name \" \u2581at \u2581position \u2581 pos ."], "bleu": 0.13926254195759222, "rouge_l": 0.4526901669758812}
{"id": 4939, "predictions": ["\u2581// \u2581 Enable Color \u2581returns \u2581the \u2581 color \u2581of \u2581the \u2581 g g ."], "references": ["\u2581// \u2581 Enable Color \u2581enables \u2581 color \u2581output"], "bleu": 0.28295596283263513, "rouge_l": 0.5736677115987461}
{"id": 4516, "predictions": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581the \u2581 Text Unmarshaler \u2581interface \u2581for \u2581 Int ."], "references": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581encoding . Text Unmarshaler . \u2581// \u2581It \u2581will \u2581unmarshal \u2581to \u2581a \u2581null \u2581 Int \u2581if \u2581the \u2581input \u2581is \u2581a \u2581 blank \u2581or \u2581not \u2581an \u2581integer"], "bleu": 0.13626462819908836, "rouge_l": 0.3839160839160839}
{"id": 4643, "predictions": ["\u2581// \u2581 Versions \u2581returns \u2581all \u2581versions \u2581of \u2581the \u2581given \u2581module ."], "references": ["\u2581// \u2581 Versions \u2581returns \u2581the \u2581names \u2581of \u2581the \u2581versions \u2581that \u2581belong \u2581to \u2581the \u2581specified \u2581module . \u2581// \u2581If \u2581module \u2581is \u2581the \u2581 empty \u2581string , \u2581it \u2581means \u2581the \u2581default \u2581module"], "bleu": 0.07416969631855261, "rouge_l": 0.36014760147601477}
{"id": 6066, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Logger \u2581that \u2581will \u2581 set \u2581the \u2581given \u2581handler \u2581to \u2581the \u2581given \u2581handler ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581logger \u2581with \u2581specified \u2581handler \u2581and \u2581flag"], "bleu": 0.1258220555845937, "rouge_l": 0.34040178571428575}
{"id": 4644, "predictions": ["\u2581// \u2581Default Version \u2581returns \u2581the \u2581default \u2581version \u2581of \u2581the \u2581given \u2581module ."], "references": ["\u2581// \u2581Default Version \u2581returns \u2581the \u2581default \u2581version \u2581of \u2581the \u2581specified \u2581module . \u2581// \u2581If \u2581module \u2581is \u2581the \u2581 empty \u2581string , \u2581it \u2581means \u2581the \u2581default \u2581module ."], "bleu": 0.22664434894119834, "rouge_l": 0.5275157232704402}
{"id": 4744, "predictions": ["\u2581// \u2581 Kind s \u2581returns \u2581all \u2581 kind \u2581of \u2581all \u2581 kind \u2581of \u2581 this \u2581query ."], "references": ["\u2581// \u2581 Kind s \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581the \u2581kinds \u2581in \u2581the \u2581current \u2581namespace ."], "bleu": 0.3064859599765908, "rouge_l": 0.48751248751248744}
{"id": 4444, "predictions": ["\u2581// \u2581object ToString \u2581converts \u2581a \u2581struct \u2581to \u2581a \u2581string"], "references": ["\u2581// \u2581Takes \u2581an \u2581object \u2581and \u2581converts \u2581it \u2581to \u2581a \u2581JSON \u2581representation"], "bleu": 0.1768796183625973, "rouge_l": 0.4911433172302737}
{"id": 5024, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581 this \u2581 Modifier"], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581 Modifier \u2581as \u2581string \u2581value ."], "bleu": 0.2620251007173263, "rouge_l": 0.4803149606299213}
{"id": 5387, "predictions": ["\u2581// \u2581 To list \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581 To list \u2581returns \u2581all \u2581the \u2581 recipients \u2581of \u2581the \u2581 email"], "bleu": 0.4327621739875601, "rouge_l": 0.71484375}
{"id": 5644, "predictions": ["\u2581// \u2581 Attrs \u2581returns \u2581the \u2581attributes \u2581of \u2581a \u2581 set \u2581of \u2581attributes ."], "references": ["\u2581// \u2581 Attrs \u2581will \u2581return \u2581a \u2581 map \u2581of \u2581the \u2581attributes \u2581added \u2581to \u2581the \u2581struct ."], "bleu": 0.20165865520030393, "rouge_l": 0.541620421753607}
{"id": 4308, "predictions": ["\u2581// \u2581 Log \u2581implements \u2581 Formatter . Log ."], "references": ["\u2581// \u2581 Log \u2581implements \u2581the \u2581 Log \u2581function \u2581required \u2581by \u2581the \u2581 Backend \u2581interface ."], "bleu": 0.22682348481414455, "rouge_l": 0.558169934640523}
{"id": 5483, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 data \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581from \u2581the \u2581current \u2581file \u2581in \u2581the \u2581 R AR \u2581archive ."], "bleu": 0.2900322213694998, "rouge_l": 0.5239263803680982}
{"id": 5591, "predictions": ["\u2581// \u2581 Marshal PublicKey \u2581encodes \u2581the \u2581 key \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Marshal PublicKey \u2581converts \u2581a \u2581public \u2581 key \u2581object \u2581into \u2581a \u2581 protobuf \u2581serialized \u2581// \u2581public \u2581 key"], "bleu": 0.2639445255554813, "rouge_l": 0.5760151085930123}
{"id": 4953, "predictions": ["\u2581// \u2581 Load FromFile \u2581 loads \u2581the \u2581 C ed ar \u2581file \u2581from \u2581the \u2581given \u2581file ."], "references": ["\u2581// \u2581 Load FromFile \u2581 loads \u2581the \u2581 c ed ar \u2581from \u2581a \u2581file , \u2581// \u2581where \u2581 dataType \u2581is \u2581either \u2581\" json \" \u2581or \u2581\" go b \" ."], "bleu": 0.2411649819330765, "rouge_l": 0.5269102990033222}
{"id": 6056, "predictions": ["\u2581// \u2581 Reset Definitions \u2581returns \u2581the \u2581 meta \u2581 description \u2581of \u2581the \u2581document ."], "references": ["\u2581// \u2581 Reset Definitions \u2581gives \u2581a \u2581 shallow \u2581copy \u2581with \u2581the \u2581 models \u2581reset"], "bleu": 0.29256127307315066, "rouge_l": 0.42857142857142855}
{"id": 4653, "predictions": ["\u2581// \u2581 Limit \u2581specifies \u2581the \u2581limit \u2581limit \u2581to \u2581the \u2581query ."], "references": ["\u2581// \u2581 Limit \u2581returns \u2581a \u2581derivative \u2581query \u2581that \u2581has \u2581a \u2581limit \u2581on \u2581the \u2581number \u2581of \u2581results \u2581// \u2581returned . \u2581 A \u2581negative \u2581value \u2581means \u2581 unlimited ."], "bleu": 0.05887150449472326, "rouge_l": 0.293504410585405}
{"id": 4805, "predictions": ["\u2581// \u2581check Typ 3 \u2581checks \u2581if \u2581the \u2581given \u2581 type \u2581is \u2581a \u2581valid \u2581 type \u2581of \u2581 type ."], "references": ["\u2581// \u2581 Error \u2581if \u2581typ \u2581doesn ' t \u2581match \u2581 rt ."], "bleu": 0.08475426399505566, "rouge_l": 0.269018743109151}
{"id": 5434, "predictions": ["\u2581// \u2581 Text Content \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581 content ."], "references": ["\u2581// \u2581 Text Content \u2581indicates \u2581whether \u2581the \u2581 content \u2581is \u2581 text \u2581based \u2581on \u2581its \u2581 content \u2581 type . \u2581This \u2581value \u2581// \u2581determines \u2581what \u2581 content \u2581transfer \u2581encoding \u2581"], "bleu": 0.1488268624502582, "rouge_l": 0.4611683848797251}
{"id": 4709, "predictions": ["\u2581// \u2581 ServiceAccount \u2581returns \u2581the \u2581 ServiceAccount \u2581 ID \u2581of \u2581the \u2581service ."], "references": ["\u2581// \u2581 ServiceAccount \u2581returns \u2581a \u2581string \u2581representing \u2581the \u2581service \u2581account \u2581 name , \u2581in \u2581// \u2581the \u2581 form \u2581of \u2581an \u2581 email \u2581address \u2581 ( typically \u2581 app _ id"], "bleu": 0.09690337729429557, "rouge_l": 0.3473309608540925}
{"id": 4630, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581item \u2581with \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get \u2581gets \u2581the \u2581item \u2581for \u2581the \u2581given \u2581 key . \u2581 Err Cache Miss \u2581is \u2581returned \u2581for \u2581a \u2581 memcache \u2581// \u2581cache \u2581 miss . \u2581The \u2581 key \u2581must"], "bleu": 0.09166862078626514, "rouge_l": 0.40516605166051656}
{"id": 5793, "predictions": ["\u2581// \u2581 Read \u2581a \u2581 token \u2581from \u2581the \u2581process"], "references": ["\u2581// \u2581 Read CString \u2581reads \u2581a \u2581null - terminated \u2581string \u2581starting \u2581at \u2581address \u2581a ."], "bleu": 0.14260771622124252, "rouge_l": 0.3189542483660131}
{"id": 5380, "predictions": ["\u2581// \u2581next Start \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581XML \u2581from \u2581 p ."], "references": ["\u2581// \u2581 Scan \u2581XML \u2581 token \u2581stream \u2581to \u2581find \u2581next \u2581 StartElement ."], "bleu": 0.11251329738544609, "rouge_l": 0.36180308422301305}
{"id": 4674, "predictions": ["\u2581// \u2581 Delete Serving URL \u2581deletes \u2581the \u2581 serving \u2581 controller \u2581 URL"], "references": ["\u2581// \u2581 Delete Serving URL \u2581deletes \u2581the \u2581 serving \u2581 URL \u2581for \u2581an \u2581image ."], "bleu": 0.6799872058868005, "rouge_l": 0.7757225433526012}
{"id": 4521, "predictions": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581the \u2581 Text Unmarshaler \u2581interface \u2581for \u2581 Float ."], "references": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581encoding . Text Unmarshaler . \u2581// \u2581It \u2581will \u2581unmarshal \u2581to \u2581a \u2581null \u2581 Float \u2581if \u2581the \u2581input \u2581is \u2581a \u2581 blank \u2581or \u2581not \u2581an \u2581integer"], "bleu": 0.13626462819908836, "rouge_l": 0.3839160839160839}
{"id": 5770, "predictions": ["\u2581// \u2581 Int \u2581returns \u2581the \u2581 data \u2581as \u2581a \u2581int 64 \u2581value ."], "references": ["\u2581// \u2581 Int \u2581returns \u2581the \u2581int \u2581value \u2581stored \u2581in \u2581 r ."], "bleu": 0.3975360176263951, "rouge_l": 0.6446499339498017}
{"id": 5771, "predictions": ["\u2581// \u2581 Uintptr \u2581returns \u2581the \u2581 nth \u2581value \u2581of \u2581the \u2581 Region ."], "references": ["\u2581// \u2581 Uintptr \u2581returns \u2581the \u2581uintptr \u2581value \u2581stored \u2581in \u2581 r ."], "bleu": 0.3872015705071016, "rouge_l": 0.6446499339498017}
{"id": 5596, "predictions": ["\u2581// \u2581Generate ECDSA KeyPair With Curve \u2581generates \u2581a \u2581 key \u2581with \u2581the \u2581given \u2581 ECDSA \u2581private \u2581 key ."], "references": ["\u2581// \u2581Generate ECDSA KeyPair With Curve \u2581generates \u2581a \u2581new \u2581 ecdsa \u2581private \u2581and \u2581public \u2581 key \u2581with \u2581a \u2581sp e i c ified \u2581curve"], "bleu": 0.3768582620244423, "rouge_l": 0.5466766243465272}
{"id": 5593, "predictions": ["\u2581// \u2581 Marshal PrivateKey \u2581converts \u2581a \u2581 key \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Marshal PrivateKey \u2581converts \u2581a \u2581 key \u2581object \u2581into \u2581its \u2581 protobuf \u2581serialized \u2581 form ."], "bleu": 0.49214612400184726, "rouge_l": 0.7416413373860183}
{"id": 4934, "predictions": ["\u2581// \u2581 Init Writer \u2581returns \u2581a \u2581new \u2581 g g . Writer \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 collect \u2581the \u2581// \u2581 data ."], "references": ["\u2581// \u2581 Init Writer \u2581is \u2581initialize \u2581gl g \u2581writer"], "bleu": 0.1475758119043186, "rouge_l": 0.33008658008658004}
{"id": 4113, "predictions": ["\u2581// \u2581 List Images OrDefault \u2581returns \u2581the \u2581list \u2581of \u2581images \u2581that \u2581are \u2581present \u2581in \u2581the \u2581image ."], "references": ["\u2581// \u2581 Platform List Images OrDefault \u2581returns \u2581basic ImageName \u2581when \u2581platform \u2581is \u2581 empty \u2581// \u2581for \u2581backwards \u2581compatibility"], "bleu": 0.21803435147007014, "rouge_l": 0.34109972041006525}
{"id": 4448, "predictions": ["\u2581// \u2581 Teardown \u2581 - \u2581 Teardown s \u2581the \u2581 m ."], "references": ["\u2581// \u2581 Teardown \u2581stops \u2581the \u2581 Pact \u2581 Mock \u2581 Server . \u2581This \u2581usually \u2581is \u2581called \u2581on \u2581completion \u2581// \u2581of \u2581each \u2581 test \u2581suite ."], "bleu": 0.08614262752683255, "rouge_l": 0.35583333333333333}
{"id": 4456, "predictions": ["\u2581// \u2581 addService Monitor \u2581 schedules \u2581a \u2581new \u2581 container \u2581to \u2581the \u2581monitor"], "references": ["\u2581// \u2581 addService Monitor \u2581 watches \u2581a \u2581channel \u2581to \u2581 add \u2581services \u2581into \u2581operation ."], "bleu": 0.33198814405786686, "rouge_l": 0.49364161849710986}
{"id": 4655, "predictions": ["\u2581// \u2581 BatchSize \u2581sets \u2581the \u2581 size \u2581of \u2581the \u2581query ."], "references": ["\u2581// \u2581 BatchSize \u2581returns \u2581a \u2581derivative \u2581query \u2581to \u2581fetch \u2581the \u2581supplied \u2581number \u2581of \u2581results \u2581// \u2581at \u2581once . \u2581This \u2581value \u2581should \u2581be \u2581greater \u2581than \u2581zero , \u2581and \u2581equal \u2581to \u2581or"], "bleu": 0.04481889913725955, "rouge_l": 0.2701107011070111}
{"id": 4852, "predictions": ["\u2581// \u2581 Main \u2581is \u2581the \u2581main \u2581point \u2581for \u2581the \u2581 dot 2 \u2581command ."], "references": ["\u2581// \u2581 Main \u2581draw s \u2581a \u2581 left \u2581hand \u2581and \u2581 ear \u2581of \u2581a \u2581go p her . \u2581 After wards \u2581it \u2581returns \u2581// \u2581the \u2581 filename . \u2581This \u2581should"], "bleu": 0.0648446996081349, "rouge_l": 0.2559440559440559}
{"id": 4205, "predictions": ["\u2581// \u2581 Init \u2581initializes \u2581the \u2581file ."], "references": ["\u2581// \u2581 Init \u2581sets \u2581the \u2581 Path \u2581and \u2581 Interval \u2581options"], "bleu": 0.20643565894052812, "rouge_l": 0.4273204903677758}
{"id": 4319, "predictions": ["\u2581// \u2581Convert Colors \u2581converts \u2581a \u2581 slice \u2581of \u2581strings \u2581to \u2581a \u2581 slice \u2581of \u2581strings ."], "references": ["\u2581// \u2581Convert Colors \u2581takes \u2581a \u2581list \u2581of \u2581int s \u2581representing \u2581colors \u2581for \u2581log \u2581levels \u2581and \u2581// \u2581converts \u2581them \u2581into \u2581strings \u2581for \u2581 ANSI \u2581 color \u2581formatting"], "bleu": 0.0963622011320652, "rouge_l": 0.3196107784431137}
{"id": 5680, "predictions": ["\u2581// \u2581fmt Int \u2581converts \u2581a \u2581string \u2581to \u2581a \u2581string ."], "references": ["\u2581// \u2581fmt Int \u2581formats \u2581 v \u2581into \u2581the \u2581tail \u2581of \u2581buf . \u2581// \u2581It \u2581returns \u2581the \u2581index \u2581where \u2581the \u2581output \u2581begins ."], "bleu": 0.07472151005228429, "rouge_l": 0.2341650671785029}
{"id": 5412, "predictions": ["\u2581// \u2581Add Attachment \u2581adds \u2581a \u2581new \u2581attachment \u2581to \u2581the \u2581 Mail Builder ."], "references": ["\u2581// \u2581Add Attachment \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581that \u2581includes \u2581the \u2581specified \u2581attachment ."], "bleu": 0.22855348758407878, "rouge_l": 0.541620421753607}
{"id": 4541, "predictions": ["\u2581// \u2581make Uni cast Route Status Slice \u2581returns \u2581a \u2581 slice \u2581of \u2581 type \u2581 type \u2581 type \u2581 status \u2581 slice ."], "references": ["\u2581// \u2581make Uni cast Route Status Slice \u2581takes \u2581a \u2581snapshot \u2581of \u2581the \u2581 unicast \u2581 routes \u2581in \u2581 routes ."], "bleu": 0.3276736880640152, "rouge_l": 0.6123552123552123}
{"id": 5202, "predictions": ["\u2581// \u2581 AttributeValue \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581element \u2581in \u2581the \u2581 name ."], "references": ["\u2581// \u2581 AttributeValue \u2581returns \u2581the \u2581named \u2581attribute \u2581for \u2581the \u2581node ."], "bleu": 0.34791594751284466, "rouge_l": 0.5723860589812332}
{"id": 5560, "predictions": ["\u2581// \u2581un capitalize Y s \u2581 translate s \u2581the \u2581 Y A \u2581word \u2581word \u2581word \u2581into \u2581a \u2581word \u2581word ."], "references": ["\u2581// \u2581 Un capitalize \u2581all \u2581' Y ' s \u2581//"], "bleu": 0.08039313477786734, "rouge_l": 0.2837209302325582}
{"id": 4236, "predictions": ["\u2581// \u2581Set ProviderConfig \u2581sets \u2581the \u2581configuration \u2581for \u2581the \u2581cluster ."], "references": ["\u2581// \u2581Set ProviderConfig \u2581is \u2581a \u2581convenience \u2581method \u2581that \u2581will \u2581attempt \u2581// \u2581to \u2581 set \u2581a \u2581provider \u2581 config \u2581on \u2581a \u2581particular \u2581cluster . \u2581Just \u2581like \u2581// \u2581it ' s \u2581counterpart"], "bleu": 0.037760701180623336, "rouge_l": 0.22932330827067668}
{"id": 5615, "predictions": ["\u2581// \u2581 Unmarshal Ed 25519 PublicKey \u2581converts \u2581a \u2581 hex \u2581encoded \u2581 key \u2581into \u2581a \u2581 PubKey ."], "references": ["\u2581// \u2581 Unmarshal Ed 25519 PublicKey \u2581returns \u2581a \u2581public \u2581 key \u2581from \u2581input \u2581bytes ."], "bleu": 0.35870004213153, "rouge_l": 0.6161616161616161}
{"id": 5760, "predictions": ["\u2581// \u2581 Read \u2581a \u2581 core . Process \u2581into \u2581a \u2581 core . Process . Process ."], "references": ["\u2581// \u2581 readVarint \u2581reads \u2581a \u2581var int \u2581from \u2581the \u2581 core \u2581file . \u2581// \u2581val \u2581is \u2581the \u2581value , \u2581 n \u2581is \u2581the \u2581number \u2581of \u2581bytes \u2581consumed ."], "bleu": 0.0725009500295194, "rouge_l": 0.3405443126308444}
{"id": 5477, "predictions": ["\u2581// \u2581new A es Decrypt Reader \u2581creates \u2581a \u2581new \u2581 \u2581cipher Block Reader \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581new A es Decrypt Reader \u2581returns \u2581a \u2581cipher Block Reader \u2581that \u2581decrypt s \u2581input \u2581from \u2581a \u2581given \u2581io . Reader \u2581using \u2581 AES . \u2581// \u2581It \u2581will \u2581panic \u2581if"], "bleu": 0.29391057020787575, "rouge_l": 0.6177215189873417}
{"id": 4683, "predictions": ["\u2581// \u2581 NewContext \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581given \u2581parent ."], "references": ["\u2581// \u2581 NewContext \u2581returns \u2581a \u2581copy \u2581of \u2581parent \u2581that \u2581will \u2581cause \u2581 App \u2581 Engine \u2581API \u2581// \u2581calls \u2581to \u2581be \u2581sent \u2581to \u2581the \u2581client ' s \u2581remote \u2581host ."], "bleu": 0.10214535051167403, "rouge_l": 0.31770833333333337}
{"id": 4660, "predictions": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581next \u2581 key \u2581in \u2581the \u2581input \u2581 iterator ."], "references": ["\u2581// \u2581 Next \u2581returns \u2581the \u2581 key \u2581of \u2581the \u2581next \u2581result . \u2581When \u2581there \u2581are \u2581no \u2581more \u2581results , \u2581// \u2581 Done \u2581is \u2581returned \u2581as \u2581the \u2581error . \u2581// \u2581//"], "bleu": 0.133564981709363, "rouge_l": 0.42657342657342656}
{"id": 5830, "predictions": ["\u2581// \u2581 Dash e ML \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 s - value \u2581 name ."], "references": ["\u2581// \u2581 Dash e rize \u2581converts \u2581a \u2581 camel \u2581case d \u2581string \u2581into \u2581a \u2581string \u2581 delimited \u2581by \u2581 dashes ."], "bleu": 0.2017200873309299, "rouge_l": 0.45522388059701485}
{"id": 5783, "predictions": ["\u2581// \u2581 Read Uint 8 \u2581returns \u2581the \u2581 8 s \u2581value \u2581of \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Read Uint 8 \u2581returns \u2581a \u2581uint 8 \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.33366787790633645, "rouge_l": 0.48412698412698413}
{"id": 5575, "predictions": ["\u2581// \u2581Get Tags As Unique Strings \u2581returns \u2581a \u2581list \u2581of \u2581tags \u2581that \u2581are \u2581in \u2581the \u2581given \u2581 slice \u2581of \u2581// \u2581 runes \u2581in \u2581the \u2581given \u2581string ."], "references": ["\u2581// \u2581Get Tags As Unique Strings \u2581gets \u2581all \u2581tags \u2581as \u2581a \u2581 slice \u2581of \u2581unique \u2581strings . \u2581This \u2581is \u2581// \u2581here \u2581to \u2581have \u2581a \u2581means \u2581of \u2581being \u2581somewhat \u2581backwards \u2581compatible"], "bleu": 0.24759073636186077, "rouge_l": 0.3823361823361824}
{"id": 4311, "predictions": ["\u2581// \u2581Get Level \u2581returns \u2581the \u2581log \u2581level \u2581of \u2581the \u2581given \u2581module ."], "references": ["\u2581// \u2581Get Level \u2581returns \u2581the \u2581log \u2581level \u2581for \u2581the \u2581given \u2581module ."], "bleu": 0.7611606003349892, "rouge_l": 0.9166666666666665}
{"id": 5879, "predictions": ["\u2581// \u2581 New Authenticator \u2581creates \u2581a \u2581new \u2581 Authenticator ."], "references": ["\u2581// \u2581 New Authenticator \u2581constructs \u2581a \u2581new \u2581 Authenticator \u2581from \u2581a \u2581store \u2581and \u2581policy ."], "bleu": 0.36598963691767067, "rouge_l": 0.6949367088607595}
{"id": 4748, "predictions": ["\u2581// \u2581Returns \u2581true \u2581if \u2581the \u2581 path \u2581is \u2581a \u2581valid \u2581import \u2581 path"], "references": ["\u2581// \u2581decl Imports \u2581reports \u2581whether \u2581 gen \u2581 contains \u2581an \u2581import \u2581of \u2581 path ."], "bleu": 0.12817975762352776, "rouge_l": 0.35260115606936415}
{"id": 5812, "predictions": ["\u2581// \u2581 Resolve \u2581 resolves \u2581a \u2581 net . IPAddr \u2581and \u2581returns \u2581the \u2581 IP \u2581address ."], "references": ["\u2581// \u2581 Resolve \u2581 resolves \u2581the \u2581 URL \u2581host \u2581to \u2581its \u2581 IP \u2581address ."], "bleu": 0.43343660127583233, "rouge_l": 0.6321243523316062}
{"id": 4292, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 Channel Memory Backend ."], "references": ["\u2581// \u2581 Start \u2581launch es \u2581the \u2581internal \u2581goroutine \u2581which \u2581starts \u2581processing \u2581 data \u2581from \u2581the \u2581// \u2581input \u2581channel ."], "bleu": 0.11343941552722257, "rouge_l": 0.3918629550321199}
{"id": 4624, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 slack \u2581server ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581on \u2581the \u2581channel \u2581associated \u2581with \u2581 clientID ."], "bleu": 0.43529489807045857, "rouge_l": 0.6828358208955225}
{"id": 5608, "predictions": ["\u2581// \u2581 Sign \u2581sign s \u2581the \u2581 Sec p 256 k 1 \u2581private \u2581 key"], "references": ["\u2581// \u2581 Sign \u2581returns \u2581a \u2581signature \u2581from \u2581input \u2581 data"], "bleu": 0.16188613565728213, "rouge_l": 0.3319727891156462}
{"id": 5581, "predictions": ["\u2581// \u2581Verify \u2581verifies \u2581the \u2581signature \u2581of \u2581 key \u2581and \u2581 PKCS 1 \u2581checksum"], "references": ["\u2581// \u2581Verify \u2581compares \u2581a \u2581signature \u2581against \u2581input \u2581 data"], "bleu": 0.14283632578659286, "rouge_l": 0.37596302003081655}
{"id": 4598, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 TCP \u2581server ."], "references": ["\u2581// \u2581 Send \u2581implements \u2581 TCP Sender \u2581by \u2581 s ealing \u2581and \u2581sending \u2581the \u2581msg \u2581as - is ."], "bleu": 0.13790411478074494, "rouge_l": 0.3719512195121951}
{"id": 4927, "predictions": ["\u2581// \u2581 Checksum 64 S \u2581returns \u2581the \u2581checksum \u2581of \u2581the \u2581 S 3 \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Checksum 64 S \u2581returns \u2581the \u2581 64 bit \u2581 xx hash \u2581checksum \u2581for \u2581a \u2581single \u2581input"], "bleu": 0.4104424101861004, "rouge_l": 0.5}
{"id": 4239, "predictions": ["\u2581// \u2581 New Cluster \u2581creates \u2581a \u2581new \u2581cluster ."], "references": ["\u2581// \u2581 New Cluster \u2581will \u2581initialize \u2581a \u2581new \u2581 Cluster"], "bleu": 0.40428929979116457, "rouge_l": 0.6256410256410255}
{"id": 4121, "predictions": ["\u2581// \u2581 Release Application Lock \u2581 releases \u2581the \u2581application ' s \u2581 status \u2581of \u2581the \u2581application ."], "references": ["\u2581// \u2581 Release Application Lock \u2581 releases \u2581a \u2581lock \u2581hold \u2581on \u2581an \u2581 app , \u2581currently \u2581it ' s \u2581called \u2581// \u2581by \u2581a \u2581middleware , \u2581however , \u2581 ideal ly"], "bleu": 0.2026797078842118, "rouge_l": 0.40531561461794013}
{"id": 4893, "predictions": ["\u2581// \u2581 Main \u2581 - \u2581 Main ."], "references": ["\u2581// \u2581 Main \u2581draw s \u2581\" Hello \u2581 World \" \u2581and \u2581returns \u2581the \u2581 filename . \u2581This \u2581should \u2581only \u2581be \u2581// \u2581used \u2581during \u2581testing ."], "bleu": 0.04100068398918175, "rouge_l": 0.3327272727272727}
{"id": 5352, "predictions": ["\u2581// \u2581 Width \u2581returns \u2581the \u2581 font \u2581 width"], "references": ["\u2581// \u2581 Width \u2581returns \u2581the \u2581 width \u2581of \u2581the \u2581given \u2581 code \u2581point ."], "bleu": 0.4057049345324171, "rouge_l": 0.5857338820301784}
{"id": 4581, "predictions": ["\u2581// \u2581broadcast Topology Update \u2581updates \u2581the \u2581 gossip \u2581 Gossip \u2581 Gossip \u2581 Gossip \u2581 data \u2581from \u2581// \u2581the \u2581 router ."], "references": ["\u2581// \u2581 Broadcast Topology Update \u2581is \u2581invoked \u2581whenever \u2581there \u2581is \u2581a \u2581change \u2581to \u2581the \u2581mesh \u2581// \u2581topology , \u2581and \u2581broadcast s \u2581the \u2581new \u2581 set \u2581of \u2581peers \u2581to \u2581the \u2581mesh"], "bleu": 0.06846715481976715, "rouge_l": 0.2619631901840491}
{"id": 4523, "predictions": ["\u2581// \u2581new Gossip Channel \u2581creates \u2581a \u2581new \u2581 gossip Channel \u2581with \u2581the \u2581given \u2581 set \u2581of \u2581// \u2581 active \u2581 gossip er \u2581and \u2581the \u2581given \u2581channel ."], "references": ["\u2581// \u2581new Gossip Channel \u2581returns \u2581a \u2581named , \u2581 usable \u2581channel . \u2581// \u2581It \u2581delegate s \u2581receiving \u2581du ties \u2581to \u2581the \u2581passed \u2581 Gossip er ."], "bleu": 0.16784459625186196, "rouge_l": 0.3786468032278088}
{"id": 5476, "predictions": ["\u2581// \u2581new Cipher Block Reader \u2581returns \u2581a \u2581new \u2581cipher Block Reader ."], "references": ["\u2581// \u2581new Cipher Block Reader \u2581returns \u2581a \u2581cipher Block Reader \u2581that \u2581decrypt s \u2581the \u2581given \u2581io . Reader \u2581using \u2581// \u2581the \u2581provided \u2581block \u2581mode \u2581cipher ."], "bleu": 0.213337270121184, "rouge_l": 0.5428802588996763}
{"id": 5683, "predictions": ["\u2581// \u2581 Unmarshal \u2581unmarshal s \u2581a \u2581 byte \u2581 slice \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Unmarshal \u2581decodes \u2581a \u2581JSON \u2581representation \u2581of \u2581 v \u2581from \u2581 b ."], "bleu": 0.1598921499894403, "rouge_l": 0.45963401506996776}
{"id": 5542, "predictions": ["\u2581// \u2581 New \u2581word \u2581 - \u2581returns \u2581a \u2581word \u2581for \u2581the \u2581given \u2581word ."], "references": ["\u2581// \u2581Create \u2581a \u2581new \u2581 S now ball Word \u2581struct"], "bleu": 0.10511846841633776, "rouge_l": 0.17183098591549298}
{"id": 5685, "predictions": ["\u2581// \u2581zero ValueOf \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581zero ValueOf \u2581and \u2581the \u2581related \u2581cache \u2581is \u2581used \u2581to \u2581keep \u2581the \u2581zero \u2581values \u2581so \u2581they \u2581// \u2581don ' t \u2581need \u2581to \u2581be \u2581re allocated \u2581every \u2581time \u2581they ' re"], "bleu": 0.053209691642546984, "rouge_l": 0.21708185053380782}
{"id": 4780, "predictions": ["\u2581// \u2581 Put \u2581implements \u2581 Index . Put ."], "references": ["\u2581// \u2581 Put \u2581saves \u2581 src \u2581to \u2581the \u2581index . \u2581If \u2581 id \u2581is \u2581 empty , \u2581a \u2581new \u2581 ID \u2581is \u2581allocated \u2581by \u2581the \u2581// \u2581service \u2581and \u2581returned ."], "bleu": 0.02929887179387845, "rouge_l": 0.28045977011494255}
{"id": 5698, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581stream \u2581and \u2581closes \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Close \u2581terminate s \u2581the \u2581stream \u2581encoder ."], "bleu": 0.2620251007173263, "rouge_l": 0.6110183639398998}
{"id": 4835, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581check \u2581whether \u2581the \u2581given \u2581 type \u2581is \u2581a \u2581 type ."], "references": ["\u2581// \u2581 isBoolean \u2581returns \u2581true \u2581if \u2581the \u2581 type \u2581can \u2581be \u2581parsed \u2581from \u2581a \u2581single \u2581string"], "bleu": 0.13847066375656705, "rouge_l": 0.375}
{"id": 5571, "predictions": ["\u2581// \u2581 Curl App WithTimeout \u2581takes \u2581a \u2581 set \u2581of \u2581 Curl Config \u2581and \u2581returns \u2581the \u2581// \u2581 app Info er \u2581for \u2581the \u2581 app \u2581 config ."], "references": ["\u2581// \u2581 Curl s \u2581an \u2581 app ' s \u2581endpoint \u2581and \u2581 exit \u2581successfully \u2581before \u2581the \u2581specified \u2581timeout"], "bleu": 0.10601317434781207, "rouge_l": 0.3167655786350148}
{"id": 6007, "predictions": ["\u2581// \u2581load \u2581 loads \u2581all \u2581files \u2581from \u2581the \u2581given \u2581paths"], "references": ["\u2581// \u2581load Standard \u2581takes \u2581paths \u2581and \u2581 loads \u2581them \u2581into \u2581the \u2581// \u2581 dir \u2581input \u2581channel \u2581for \u2581processing"], "bleu": 0.1019619054159977, "rouge_l": 0.33964365256124723}
{"id": 4613, "predictions": ["\u2581// \u2581 filter V 1 Features \u2581returns \u2581a \u2581 map \u2581of \u2581 v 1 Features \u2581 map \u2581of \u2581strings ."], "references": ["\u2581// \u2581 In \u2581the \u2581 V 1 \u2581protocol , \u2581the \u2581 intro \u2581fields \u2581are \u2581sent \u2581un encrypted . \u2581So \u2581we \u2581// \u2581restrict \u2581them \u2581to \u2581an \u2581 established \u2581subset \u2581of \u2581fields"], "bleu": 0.07291455399103798, "rouge_l": 0.270253164556962}
{"id": 4310, "predictions": ["\u2581// \u2581Add Module Level \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Level ed Backend . Backend ed \u2581// \u2581with \u2581the \u2581given \u2581 Backend ."], "references": ["\u2581// \u2581Add Module Level \u2581 wraps \u2581a \u2581log \u2581backend \u2581with \u2581 knob s \u2581to \u2581have \u2581different \u2581log \u2581levels \u2581// \u2581for \u2581different \u2581 modules ."], "bleu": 0.16170596160446446, "rouge_l": 0.4029062087186261}
{"id": 4665, "predictions": ["\u2581// \u2581 Namespace \u2581returns \u2581a \u2581 Context \u2581from \u2581a \u2581namespace"], "references": ["\u2581// \u2581 Namespace \u2581returns \u2581a \u2581replacement \u2581context \u2581that \u2581operate s \u2581within \u2581the \u2581given \u2581namespace ."], "bleu": 0.29106084527270426, "rouge_l": 0.46329113924050636}
{"id": 5903, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581stream \u2581and \u2581 close \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Close \u2581will \u2581 close \u2581the \u2581stream ."], "bleu": 0.48442732379638637, "rouge_l": 0.7820512820512819}
{"id": 4978, "predictions": ["\u2581// \u2581 Read Event \u2581reads \u2581the \u2581next \u2581event \u2581from \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Read Event \u2581scan s \u2581the \u2581 EventStream \u2581for \u2581events ."], "bleu": 0.31455601883230705, "rouge_l": 0.5}
{"id": 5713, "predictions": ["\u2581// \u2581 Encoder \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Stream Encoder \u2581that \u2581will \u2581// \u2581 encode \u2581the \u2581stream \u2581to \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Encoder \u2581returns \u2581a \u2581new \u2581 Stream Encoder \u2581which \u2581can \u2581be \u2581used \u2581to \u2581re - encode \u2581the \u2581stream \u2581// \u2581decoded \u2581by \u2581 d \u2581into \u2581 e . \u2581// \u2581//"], "bleu": 0.16155772164996599, "rouge_l": 0.429325513196481}
{"id": 4779, "predictions": ["\u2581// \u2581 Open \u2581returns \u2581a \u2581new \u2581index \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Open \u2581open s \u2581the \u2581index \u2581with \u2581the \u2581given \u2581 name . \u2581The \u2581index \u2581is \u2581created \u2581if \u2581it \u2581does \u2581// \u2581not \u2581already \u2581exist . \u2581// \u2581// \u2581The \u2581 name"], "bleu": 0.1236552163711529, "rouge_l": 0.3907473309608541}
{"id": 4794, "predictions": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581 key \u2581into \u2581a \u2581string ."], "references": ["\u2581// \u2581 Encode \u2581returns \u2581an \u2581 opaque \u2581representation \u2581of \u2581the \u2581 key \u2581// \u2581suitable \u2581for \u2581use \u2581in \u2581HTML \u2581and \u2581URLs . \u2581// \u2581This \u2581is \u2581compatible \u2581with \u2581the \u2581Python \u2581and \u2581Java"], "bleu": 0.05635678205677782, "rouge_l": 0.3151291512915129}
{"id": 4424, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Run \u2581the \u2581web \u2581application ."], "bleu": 0.3303164318013807, "rouge_l": 0.6747787610619468}
{"id": 5982, "predictions": ["\u2581// \u2581 Load Objects \u2581 loads \u2581the \u2581 contents \u2581of \u2581the \u2581 Seek ' s \u2581 data \u2581from \u2581the \u2581 pack file \u2581 config ."], "references": ["\u2581// \u2581 Load Objects \u2581 loads \u2581objects \u2581 form \u2581an \u2581specific \u2581source . \u2581It \u2581can \u2581load \u2581objects \u2581from \u2581// \u2581different \u2581source \u2581types , \u2581that \u2581are \u2581implemented \u2581following \u2581the \u2581 SourceType"], "bleu": 0.21416836216416588, "rouge_l": 0.3577712609970674}
{"id": 5577, "predictions": ["\u2581// \u2581 predicates u ify \u2581returns \u2581a \u2581list \u2581of \u2581strings \u2581that \u2581are \u2581 left \u2581to \u2581be \u2581 satisfied ."], "references": ["\u2581// \u2581Ensures \u2581the \u2581given \u2581 slice \u2581of \u2581strings \u2581are \u2581unique \u2581and \u2581that \u2581 none \u2581are \u2581 empty \u2581// \u2581strings"], "bleu": 0.12344249336012937, "rouge_l": 0.368421052631579}
{"id": 5898, "predictions": ["\u2581// \u2581 Respond \u2581sends \u2581a \u2581response \u2581to \u2581the \u2581response ."], "references": ["\u2581// \u2581 Respond \u2581will \u2581 encode \u2581the \u2581provided \u2581value \u2581as \u2581JSON \u2581and \u2581 write \u2581it \u2581to \u2581the \u2581client ."], "bleu": 0.1178964362811854, "rouge_l": 0.3918629550321199}
{"id": 5775, "predictions": ["\u2581// \u2581 Uint 32 \u2581returns \u2581the \u2581 32 - bit \u2581value \u2581of \u2581the \u2581 set \u2581of \u2581 this \u2581region ."], "references": ["\u2581// \u2581 Uint 32 \u2581returns \u2581the \u2581uint 32 \u2581value \u2581stored \u2581in \u2581 r . \u2581// \u2581 r \u2581must \u2581have \u2581 type \u2581uint 32 ."], "bleu": 0.26430379811020943, "rouge_l": 0.49193548387096775}
{"id": 5774, "predictions": ["\u2581// \u2581 Uint 64 \u2581returns \u2581the \u2581uint 64 \u2581value \u2581of \u2581the \u2581 set \u2581of \u2581 this \u2581region ."], "references": ["\u2581// \u2581 Uint 64 \u2581returns \u2581the \u2581uint 64 \u2581value \u2581stored \u2581in \u2581 r . \u2581// \u2581 r \u2581must \u2581have \u2581 type \u2581uint 64."], "bleu": 0.3902180583115453, "rouge_l": 0.525039123630673}
{"id": 5769, "predictions": ["\u2581// \u2581 Address \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Address \u2581returns \u2581the \u2581address \u2581that \u2581a \u2581region \u2581of \u2581pointer \u2581 type \u2581points \u2581to ."], "bleu": 0.35783648460675277, "rouge_l": 0.6451233842538191}
{"id": 5778, "predictions": ["\u2581// \u2581 Uint 8 \u2581returns \u2581the \u2581uint 8 \u2581value \u2581from \u2581the \u2581 set \u2581of \u2581 data ."], "references": ["\u2581// \u2581 Uint 8 \u2581returns \u2581the \u2581uint 8 \u2581value \u2581stored \u2581in \u2581 r . \u2581// \u2581 r \u2581must \u2581have \u2581 type \u2581uint 8 ."], "bleu": 0.3620621829429398, "rouge_l": 0.5678820791311093}
{"id": 5342, "predictions": ["\u2581// \u2581 New Float 64 Ring Buffer \u2581creates \u2581a \u2581new \u2581 Float 64 ring \u2581buffer"], "references": ["\u2581// \u2581 constructor . \u2581 New Float 64 Ring Buf \u2581will \u2581 allocate \u2581internally \u2581// \u2581a \u2581 slice \u2581of \u2581max View Items \u2581float 64."], "bleu": 0.19153423212254603, "rouge_l": 0.393866020984665}
{"id": 5777, "predictions": ["\u2581// \u2581 Uint 16 \u2581returns \u2581the \u2581uint 16 \u2581value \u2581of \u2581the \u2581 set \u2581of \u2581 data ."], "references": ["\u2581// \u2581 Uint 16 \u2581returns \u2581the \u2581uint 16 \u2581value \u2581stored \u2581in \u2581 r . \u2581// \u2581 r \u2581must \u2581have \u2581 type \u2581uint 16 ."], "bleu": 0.3620621829429398, "rouge_l": 0.5678820791311093}
{"id": 5776, "predictions": ["\u2581// \u2581 Int 32 \u2581returns \u2581the \u2581 32 - bit \u2581integer \u2581value \u2581of \u2581the \u2581 set \u2581of \u2581 this \u2581region ."], "references": ["\u2581// \u2581 Int 32 \u2581returns \u2581the \u2581int 32 \u2581value \u2581stored \u2581in \u2581 r . \u2581// \u2581 r \u2581must \u2581have \u2581 type \u2581int 32 ."], "bleu": 0.2661538101286251, "rouge_l": 0.4830813534917206}
{"id": 4529, "predictions": ["\u2581// \u2581new Token Bucket \u2581creates \u2581a \u2581new \u2581 token Bucket ."], "references": ["\u2581// \u2581new Token Bucket \u2581returns \u2581a \u2581bucket \u2581containing \u2581capacity \u2581tokens , \u2581re filled \u2581at \u2581a \u2581// \u2581 rate \u2581of \u2581one \u2581 token \u2581per \u2581 token Interval ."], "bleu": 0.09066418590912248, "rouge_l": 0.3913392141138733}
{"id": 5486, "predictions": ["\u2581// \u2581 Open Reader \u2581open s \u2581a \u2581new \u2581 ReadCloser \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581password ."], "references": ["\u2581// \u2581 Open Reader \u2581open s \u2581a \u2581 R AR \u2581archive \u2581specified \u2581by \u2581the \u2581 name \u2581and \u2581returns \u2581a \u2581 ReadCloser ."], "bleu": 0.3902843963638467, "rouge_l": 0.6384863123993559}
{"id": 5368, "predictions": ["\u2581// \u2581Find \u2581returns \u2581a \u2581 slice \u2581of \u2581 placeholders \u2581that \u2581match \u2581the \u2581given \u2581query ."], "references": ["\u2581// \u2581This \u2581doesn ' t \u2581actually \u2581do \u2581any \u2581 DB \u2581interaction , \u2581it \u2581just \u2581creates \u2581the \u2581result \u2581 set \u2581so \u2581we \u2581can \u2581// \u2581start \u2581loop ing \u2581through \u2581on \u2581the \u2581"], "bleu": 0.03805198893226367, "rouge_l": 0.1676975945017182}
{"id": 4385, "predictions": ["\u2581// \u2581 Click \u2581performs \u2581the \u2581 left \u2581 click \u2581on \u2581the \u2581 Selection ."], "references": ["\u2581// \u2581 Click \u2581clicks \u2581on \u2581all \u2581of \u2581the \u2581elements \u2581that \u2581the \u2581selection \u2581refers \u2581to ."], "bleu": 0.18216011913874539, "rouge_l": 0.41123595505617977}
{"id": 6088, "predictions": ["\u2581// \u2581parse Param \u2581parses \u2581a \u2581parameter \u2581 param \u2581and \u2581returns \u2581a \u2581 Action Param"], "references": ["\u2581// \u2581Build \u2581action \u2581 param \u2581struct \u2581from \u2581 json \u2581 data"], "bleu": 0.13217947626377288, "rouge_l": 0.3270777479892761}
{"id": 4096, "predictions": ["\u2581// \u2581 Manager \u2581returns \u2581the \u2581 manager \u2581 manager \u2581for \u2581the \u2581 manager ."], "references": ["\u2581// \u2581 Manager \u2581returns \u2581the \u2581current \u2581configured \u2581 manager , \u2581as \u2581defined \u2581in \u2581the \u2581// \u2581configuration \u2581file ."], "bleu": 0.2893430220497435, "rouge_l": 0.5501002004008017}
{"id": 5572, "predictions": ["\u2581// \u2581 Curl App \u2581creates \u2581a \u2581new \u2581 app \u2581log \u2581with \u2581the \u2581given \u2581 path \u2581and \u2581 path ."], "references": ["\u2581// \u2581 Curl s \u2581an \u2581 app ' s \u2581endpoint \u2581and \u2581 exit \u2581successfully \u2581before \u2581the \u2581default \u2581timeout"], "bleu": 0.16679551613797314, "rouge_l": 0.3802315227070347}
{"id": 5675, "predictions": ["\u2581// \u2581 Codec s \u2581returns \u2581a \u2581 map \u2581of \u2581 keys \u2581from \u2581the \u2581registry ."], "references": ["\u2581// \u2581 Codec s \u2581returns \u2581a \u2581 map \u2581of \u2581all \u2581codecs \u2581registered \u2581in \u2581reg ."], "bleu": 0.5968774175634496, "rouge_l": 0.6666666666666666}
{"id": 5594, "predictions": ["\u2581// \u2581 Key Equal \u2581returns \u2581true \u2581if \u2581two \u2581 keys \u2581are \u2581equal ."], "references": ["\u2581// \u2581 Key Equal \u2581checks \u2581whether \u2581two"], "bleu": 0.27824623288353134, "rouge_l": 0.5285961871750434}
{"id": 4765, "predictions": ["\u2581// \u2581 KeepAlive \u2581returns \u2581a \u2581 ha - protocol \u2581 alive \u2581 data ."], "references": ["\u2581// \u2581 KeepAlive \u2581signals \u2581that \u2581the \u2581connection \u2581is \u2581still \u2581in \u2581use . \u2581// \u2581It \u2581may \u2581be \u2581called \u2581to \u2581prevent \u2581the \u2581socket \u2581being \u2581closed \u2581due \u2581to \u2581in activity ."], "bleu": 0.06399556217282909, "rouge_l": 0.17967599410898377}
{"id": 5858, "predictions": ["\u2581// \u2581 Slice \u2581returns \u2581a \u2581 slice \u2581of \u2581 s \u2581with \u2581the \u2581given \u2581 length ."], "references": ["\u2581// \u2581 Slice \u2581slices \u2581a \u2581string . \u2581If \u2581end \u2581is \u2581negative \u2581then \u2581it \u2581is \u2581the \u2581from \u2581the \u2581end \u2581// \u2581of \u2581the \u2581string ."], "bleu": 0.10992827772533784, "rouge_l": 0.3477198697068404}
{"id": 4945, "predictions": ["\u2581// \u2581 Fatal \u2581prints \u2581a \u2581 fatal \u2581error \u2581message ."], "references": ["\u2581// \u2581 Fatal \u2581outputs \u2581 Failed \u2581log \u2581and \u2581 exit \u2581program"], "bleu": 0.22447582175704436, "rouge_l": 0.37770897832817335}
{"id": 5606, "predictions": ["\u2581// \u2581 Unmarshal Sec p 256 k 1 PublicKey \u2581decodes \u2581a \u2581 Sec p 256 k \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Unmarshal Sec p 256 k 1 PublicKey \u2581returns \u2581a \u2581public \u2581 key \u2581from \u2581bytes"], "bleu": 0.4003577214275417, "rouge_l": 0.635968722849696}
{"id": 4544, "predictions": ["\u2581// \u2581make Trusted Subnets Slice \u2581returns \u2581a \u2581list \u2581of \u2581 trusted \u2581 subnets \u2581that \u2581are \u2581 trusted \u2581// \u2581in \u2581the \u2581 subnets \u2581contained \u2581in \u2581the \u2581 slice \u2581of \u2581 subnets"], "references": ["\u2581// \u2581make Trusted Subnets Slice \u2581makes \u2581a \u2581human - readable \u2581copy \u2581of \u2581the \u2581 trusted Subnets ."], "bleu": 0.18702869706385972, "rouge_l": 0.4030837004405286}
{"id": 4131, "predictions": ["\u2581// \u2581 getEnv \u2581returns \u2581the \u2581environment \u2581variable \u2581 name \u2581from \u2581the \u2581 app ."], "references": ["\u2581// \u2581 getEnv \u2581returns \u2581the \u2581environment \u2581variable \u2581if \u2581it ' s \u2581declared \u2581in \u2581the \u2581 app . \u2581It \u2581will \u2581// \u2581return \u2581an \u2581error \u2581if \u2581the \u2581variable \u2581is \u2581not \u2581defined \u2581in"], "bleu": 0.20650620080378043, "rouge_l": 0.4692307692307692}
{"id": 5340, "predictions": ["\u2581// \u2581 Last \u2581returns \u2581the \u2581last \u2581 size \u2581of \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Last \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581last \u2581element , \u2581// \u2581or \u2581-1 \u2581if \u2581the \u2581 ring \u2581is \u2581 empty ."], "bleu": 0.20935175390680777, "rouge_l": 0.4468864468864468}
{"id": 5703, "predictions": ["\u2581// \u2581Check Uint 64 Bounds \u2581returns \u2581the \u2581 numeric \u2581value \u2581of \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581Check Uint 64 Bounds \u2581verifies \u2581that \u2581 v \u2581is \u2581smaller \u2581than \u2581max , \u2581 t \u2581represents \u2581the \u2581// \u2581original \u2581 type \u2581of \u2581 v ."], "bleu": 0.1644313169452057, "rouge_l": 0.41876430205949655}
{"id": 5930, "predictions": ["\u2581// \u2581 All \u2581returns \u2581all \u2581 models \u2581in \u2581the \u2581 Catalog"], "references": ["\u2581// \u2581 All \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581registered \u2581 models ."], "bleu": 0.3442447960363952, "rouge_l": 0.603960396039604}
{"id": 5397, "predictions": ["\u2581// \u2581 Read Envelope \u2581reads \u2581the \u2581envelope \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581 Read Envelope \u2581is \u2581a \u2581wrapper \u2581around \u2581 Read Parts \u2581and \u2581 Envelope From Part . \u2581It \u2581parses \u2581the \u2581 content \u2581of \u2581the \u2581// \u2581provided \u2581reader \u2581into \u2581an \u2581"], "bleu": 0.08823741634370692, "rouge_l": 0.2559440559440559}
{"id": 4528, "predictions": ["\u2581// \u2581go b Encode \u2581returns \u2581a \u2581 byte \u2581 slice \u2581containing \u2581the \u2581 contents \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581Go b Encode \u2581go b - encode s \u2581each \u2581item \u2581and \u2581returns \u2581the \u2581resulting \u2581 byte \u2581 slice ."], "bleu": 0.2615823627153701, "rouge_l": 0.4594142259414226}
{"id": 4327, "predictions": ["\u2581// \u2581 explain \u2581prints \u2581the \u2581 description \u2581of \u2581the \u2581command \u2581line \u2581flags ."], "references": ["\u2581// \u2581 explain Cmd \u2581prints \u2581a \u2581 brief \u2581 description \u2581of \u2581a \u2581single \u2581command ."], "bleu": 0.2410165964950514, "rouge_l": 0.6346820809248555}
{"id": 5962, "predictions": ["\u2581// \u2581Add Un match \u2581adds \u2581a \u2581match \u2581to \u2581the \u2581rule ."], "references": ["\u2581// \u2581Add Un match \u2581adds \u2581a \u2581 ref ular \u2581expression \u2581into \u2581the \u2581un match \u2581list ."], "bleu": 0.3485340766146352, "rouge_l": 0.5734430082256169}
{"id": 4280, "predictions": ["\u2581// \u2581 End \u2581total \u2581time \u2581time . Time"], "references": ["\u2581// \u2581 End OfDay \u2581end \u2581of \u2581day"], "bleu": 0.2984745896009823, "rouge_l": 0.4048672566371681}
{"id": 4110, "predictions": ["\u2581// \u2581 add Known Types \u2581adds \u2581the \u2581types \u2581of \u2581the \u2581 scheme \u2581to \u2581the \u2581 scheme ."], "references": ["\u2581// \u2581Adds \u2581the \u2581list \u2581of \u2581known \u2581types \u2581to \u2581the \u2581given \u2581 scheme ."], "bleu": 0.1816725573641283, "rouge_l": 0.5464725643896976}
{"id": 5609, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581 Sec p 256 k 1 PublicKey \u2581matches \u2581the \u2581same \u2581 key ."], "references": ["\u2581// \u2581 Equals \u2581compares \u2581two \u2581public \u2581 keys"], "bleu": 0.12021577610863723, "rouge_l": 0.3096446700507614}
{"id": 4657, "predictions": ["\u2581// \u2581 End \u2581specifies \u2581the \u2581cursor \u2581to \u2581be \u2581used ."], "references": ["\u2581// \u2581 End \u2581returns \u2581a \u2581derivative \u2581query \u2581with \u2581the \u2581given \u2581end \u2581point ."], "bleu": 0.19235610974773318, "rouge_l": 0.42479108635097496}
{"id": 4946, "predictions": ["\u2581// \u2581 Fatalf \u2581calls \u2581 Fatalf \u2581function s ."], "references": ["\u2581// \u2581 Fatalf \u2581outputs \u2581formatted \u2581 Failed \u2581log \u2581and \u2581 exit \u2581program"], "bleu": 0.19902510067151713, "rouge_l": 0.3713850837138508}
{"id": 5966, "predictions": ["\u2581// \u2581Set Metadata \u2581sets \u2581the \u2581metadata \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Set Metadata \u2581sets \u2581a \u2581metadata \u2581value \u2581for \u2581the \u2581object ."], "bleu": 0.3541698766144061, "rouge_l": 0.7011494252873562}
{"id": 4229, "predictions": ["\u2581// \u2581Get Version \u2581returns \u2581the \u2581version \u2581of \u2581the \u2581version"], "references": ["\u2581// \u2581Get Version \u2581returns \u2581 Ku bic or n \u2581version ."], "bleu": 0.3292100646487161, "rouge_l": 0.4911433172302737}
{"id": 4656, "predictions": ["\u2581// \u2581 Start \u2581sets \u2581the \u2581cursor \u2581to \u2581 select \u2581the \u2581query ."], "references": ["\u2581// \u2581 Start \u2581returns \u2581a \u2581derivative \u2581query \u2581with \u2581the \u2581given \u2581start \u2581point ."], "bleu": 0.20464059737135373, "rouge_l": 0.39713541666666663}
{"id": 4981, "predictions": ["\u2581// \u2581 Replay \u2581 replay s \u2581the \u2581subscriber ."], "references": ["\u2581// \u2581 Replay \u2581events \u2581to \u2581a \u2581subscriber"], "bleu": 0.2777619034011791, "rouge_l": 0.5115303983228512}
{"id": 5348, "predictions": ["\u2581// \u2581 New Pointer Ring Buf \u2581creates \u2581a \u2581new \u2581 Pointer Ring Buf"], "references": ["\u2581// \u2581 constructor . \u2581 New Pointer Ring Buf \u2581will \u2581 allocate \u2581internally \u2581// \u2581a \u2581 slice \u2581of \u2581 size \u2581 slice N"], "bleu": 0.18778450050080986, "rouge_l": 0.42324371205550737}
{"id": 4932, "predictions": ["\u2581// \u2581Set Prefix \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581 top \u2581of \u2581the \u2581 g g ."], "references": ["\u2581// \u2581Set Prefix \u2581 set \u2581 Print \u2581logger \u2581prefix"], "bleu": 0.1487964117124549, "rouge_l": 0.40720961281708945}
{"id": 4862, "predictions": ["\u2581// \u2581 Fill \u2581 fill s \u2581the \u2581 contents \u2581of \u2581a \u2581 Glyph d \u2581with \u2581the \u2581given \u2581 color ."], "references": ["\u2581// \u2581 Fill \u2581copies \u2581a \u2581glyph \u2581from \u2581the \u2581cache , \u2581and \u2581fills \u2581it"], "bleu": 0.1258220555845937, "rouge_l": 0.31508264462809915}
{"id": 4410, "predictions": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581 Selection ."], "references": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581elements \u2581that \u2581the \u2581selection \u2581refers \u2581to ."], "bleu": 0.5031747626530138, "rouge_l": 0.642857142857143}
{"id": 5781, "predictions": ["\u2581// \u2581 Slice Len \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 set \u2581of \u2581 this \u2581 Region ."], "references": ["\u2581// \u2581 Slice Len \u2581returns \u2581the \u2581 length \u2581of \u2581a \u2581 slice . \u2581 r \u2581must \u2581contain \u2581a \u2581 slice ."], "bleu": 0.4442306061843441, "rouge_l": 0.6575456053067993}
{"id": 4314, "predictions": ["\u2581// \u2581 Multi Logger \u2581returns \u2581a \u2581new \u2581 Level ed \u2581backend \u2581that \u2581will \u2581 set \u2581the \u2581 backends \u2581for \u2581the \u2581given \u2581backend ."], "references": ["\u2581// \u2581 Multi Logger \u2581creates \u2581a \u2581logger \u2581which \u2581contain \u2581multiple \u2581logger s ."], "bleu": 0.16020720994064927, "rouge_l": 0.3509108341323106}
{"id": 5748, "predictions": ["\u2581// \u2581 Type \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581 this \u2581process ."], "references": ["\u2581// \u2581 Type \u2581returns \u2581the \u2581 type \u2581and \u2581 repeat \u2581count \u2581for \u2581the \u2581object \u2581 x . \u2581// \u2581 x \u2581 contains \u2581at \u2581least \u2581 repeat \u2581copies \u2581of \u2581the \u2581returned"], "bleu": 0.20152731891314812, "rouge_l": 0.41216216216216217}
{"id": 6013, "predictions": ["\u2581// \u2581 New Inclusive Range \u2581creates \u2581a \u2581new \u2581 Inclusive Range ."], "references": ["\u2581// \u2581 New Inclusive Range \u2581creates \u2581a \u2581new \u2581 Inclusive Range \u2581instance"], "bleu": 0.912167909070388, "rouge_l": 0.9166666666666665}
{"id": 4846, "predictions": ["\u2581// \u2581 ToMap \u2581converts \u2581a \u2581 Tree \u2581into \u2581a \u2581 map ."], "references": ["\u2581// \u2581 ToMap \u2581is \u2581used \u2581to \u2581walk \u2581the \u2581tree \u2581and \u2581convert \u2581it \u2581into \u2581a \u2581 map"], "bleu": 0.2771332647109216, "rouge_l": 0.48744292237442927}
{"id": 5443, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Error \u2581formats \u2581the \u2581 en mime . Error \u2581as \u2581a \u2581string ."], "bleu": 0.20625141357032833, "rouge_l": 0.4698331193838254}
{"id": 5201, "predictions": ["\u2581// \u2581Execute \u2581executes \u2581a \u2581 json \u2581command ."], "references": ["\u2581// \u2581Execute \u2581uses \u2581the \u2581context ' s \u2581message \u2581executor \u2581to \u2581send \u2581a \u2581command \u2581or \u2581event \u2581// \u2581method \u2581marshal ing \u2581the \u2581provided \u2581parameters , \u2581and \u2581unmarshal ing \u2581to \u2581res ."], "bleu": 0.018181380248085383, "rouge_l": 0.24517684887459806}
{"id": 4099, "predictions": ["\u2581// \u2581 Shutdown \u2581shut s \u2581down \u2581the \u2581 bind Syncer ."], "references": ["\u2581// \u2581 Shutdown \u2581shutdown s \u2581 bind Syncer \u2581waiting \u2581for \u2581the \u2581current \u2581 sync \u2581// \u2581to \u2581complete"], "bleu": 0.18923062890545153, "rouge_l": 0.48139797068771134}
{"id": 4971, "predictions": ["\u2581// \u2581 Publish \u2581 publishes \u2581event \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 Publish \u2581sends \u2581a \u2581me sage \u2581to \u2581every \u2581client \u2581in \u2581a \u2581stream ID"], "bleu": 0.16629577886012006, "rouge_l": 0.32360742705570295}
{"id": 4766, "predictions": ["\u2581// \u2581 apply Transaction \u2581 apply s \u2581the \u2581given \u2581transaction \u2581into \u2581the \u2581 Transaction ."], "references": ["\u2581// \u2581 apply Transaction \u2581applies \u2581the \u2581transaction \u2581 t \u2581to \u2581message \u2581 pb \u2581// \u2581by \u2581using \u2581the \u2581relevant \u2581setter \u2581passed \u2581to \u2581Register Transaction Setter ."], "bleu": 0.1463011735821502, "rouge_l": 0.4305882352941176}
{"id": 5172, "predictions": ["\u2581// \u2581 With Max Virtual Time Task Star v ation Count \u2581sets \u2581the \u2581 Max Virtual Time Task Params \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Max Virtual Time Task Star v ation Count \u2581if \u2581 set \u2581 this \u2581specifies \u2581the \u2581maximum \u2581// \u2581number \u2581of \u2581tasks \u2581that \u2581can \u2581be \u2581run \u2581before \u2581virtual \u2581is"], "bleu": 0.35999108456353635, "rouge_l": 0.43571428571428567}
{"id": 5672, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581 Registry ."], "references": ["\u2581// \u2581Register \u2581adds \u2581a \u2581codec \u2581for \u2581a \u2581 mimetype \u2581to \u2581 r ."], "bleu": 0.13434323860909256, "rouge_l": 0.45658682634730546}
{"id": 5393, "predictions": ["\u2581// \u2581Add Header \u2581adds \u2581a \u2581new \u2581header \u2581value \u2581to \u2581the \u2581envelope ."], "references": ["\u2581// \u2581Add Header \u2581appends \u2581given \u2581header \u2581value \u2581to \u2581header \u2581 name \u2581without \u2581changing \u2581existing \u2581values . \u2581// \u2581If \u2581the \u2581header \u2581does \u2581not \u2581exist \u2581already , \u2581it \u2581will \u2581be \u2581created ."], "bleu": 0.0664526643775935, "rouge_l": 0.3536231884057971}
{"id": 5519, "predictions": ["\u2581// \u2581step 5 \u2581calculates \u2581the \u2581 C time \u2581word \u2581word \u2581word \u2581word ."], "references": ["\u2581// \u2581 Step \u2581 5 \u2581 Un double \u2581non - vowel \u2581 endings \u2581//"], "bleu": 0.10518320506876351, "rouge_l": 0.2207478890229192}
{"id": 5382, "predictions": ["\u2581// \u2581 Leave Widget C \u2581is \u2581used \u2581to \u2581 close \u2581a \u2581 status \u2581 C ."], "references": ["\u2581// \u2581 x ep - 004 5 \u2581 7.1 4"], "bleu": 0.10878661088699644, "rouge_l": 0.24078947368421053}
{"id": 4536, "predictions": ["\u2581// \u2581 Digest Connection \u2581connects \u2581to \u2581the \u2581peer \u2581peer \u2581and \u2581 attaches \u2581to \u2581the \u2581// \u2581connection \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581 ACT OR \u2581client \u2581API \u2581// \u2581 Synchronous ."], "bleu": 0.09560408787521255, "rouge_l": 0.2837209302325582}
{"id": 5466, "predictions": ["\u2581// \u2581 New Moving Average \u2581returns \u2581a \u2581new \u2581 Moving Average"], "references": ["\u2581// \u2581 New Moving Average \u2581constructs \u2581a \u2581 Moving Average \u2581that \u2581computes \u2581an \u2581average \u2581with \u2581the \u2581// \u2581desired \u2581 characteristics \u2581in \u2581the \u2581moving \u2581window \u2581or \u2581 exponential \u2581 decay ."], "bleu": 0.09692776537862714, "rouge_l": 0.40516605166051656}
{"id": 4372, "predictions": ["\u2581// \u2581 Popup Text \u2581returns \u2581the \u2581 page \u2581of \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Popup Text \u2581returns \u2581the \u2581current \u2581alert , \u2581 confirm , \u2581or \u2581prompt \u2581popup \u2581 text ."], "bleu": 0.32180859743199586, "rouge_l": 0.5642343268242548}
{"id": 4295, "predictions": ["\u2581// \u2581 Formatted \u2581returns \u2581the \u2581 text ual \u2581representation \u2581of \u2581the \u2581record ."], "references": ["\u2581// \u2581 Formatted \u2581returns \u2581the \u2581formatted \u2581log \u2581record \u2581string ."], "bleu": 0.3759663529467017, "rouge_l": 0.6233576642335765}
{"id": 4176, "predictions": ["\u2581// \u2581 Encode Json \u2581encodes \u2581the \u2581 json \u2581into \u2581a \u2581 json \u2581string ."], "references": ["\u2581// \u2581 Replace \u2581the \u2581parent \u2581 Encode Json \u2581to \u2581provide \u2581indentation ."], "bleu": 0.2102369368326755, "rouge_l": 0.3900255754475704}
{"id": 4454, "predictions": ["\u2581// \u2581 New Service \u2581returns \u2581a \u2581new \u2581 Service"], "references": ["\u2581// \u2581 New Service \u2581creates \u2581a \u2581new \u2581 Mock Service \u2581with \u2581default \u2581settings ."], "bleu": 0.31044780277006995, "rouge_l": 0.6694101508916324}
{"id": 4524, "predictions": ["\u2581// \u2581 Gossip Uni cast \u2581 gossip s \u2581the \u2581 gossip Channel \u2581to \u2581the \u2581 gossip \u2581 data"], "references": ["\u2581// \u2581 Gossip Uni cast \u2581implements \u2581 Gossip , \u2581 relay ing \u2581msg \u2581to \u2581dst , \u2581which \u2581must \u2581be \u2581a \u2581// \u2581member \u2581of \u2581the \u2581channel ."], "bleu": 0.18170600929993103, "rouge_l": 0.3961038961038961}
{"id": 4774, "predictions": ["\u2581// \u2581 _ \u2581reports \u2581whether \u2581the \u2581given \u2581function \u2581is \u2581a \u2581 type ."], "references": ["\u2581// \u2581 isMain \u2581returns \u2581whether \u2581the \u2581given \u2581function \u2581declaration \u2581is \u2581a \u2581main \u2581function . \u2581// \u2581Such \u2581a \u2581function \u2581must \u2581be \u2581called \u2581\" main \", \u2581not \u2581have \u2581a \u2581receiver , \u2581and"], "bleu": 0.09462169906246147, "rouge_l": 0.3907473309608541}
{"id": 4370, "predictions": ["\u2581// \u2581 Title \u2581returns \u2581the \u2581 title \u2581of \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Title \u2581returns \u2581the \u2581 page \u2581 title ."], "bleu": 0.5923033072023248, "rouge_l": 0.7393939393939394}
{"id": 4713, "predictions": ["\u2581// \u2581multi Key To Proto \u2581converts \u2581a \u2581 Key \u2581to \u2581a \u2581 protobuf \u2581 Reference ."], "references": ["\u2581// \u2581multi Key To Proto \u2581is \u2581a \u2581batch \u2581version \u2581of \u2581 key To Proto ."], "bleu": 0.31181814978096556, "rouge_l": 0.5191489361702127}
{"id": 5856, "predictions": ["\u2581// \u2581 Reverse \u2581reverse s \u2581the \u2581 contents \u2581of \u2581a \u2581string"], "references": ["\u2581// \u2581 Reverse \u2581a \u2581string"], "bleu": 0.2521193618434983, "rouge_l": 0.6703296703296704}
{"id": 4724, "predictions": ["\u2581// \u2581 Run \u2581executes \u2581the \u2581 Query ."], "references": ["\u2581// \u2581 Run \u2581starts \u2581a \u2581query \u2581for \u2581log \u2581records , \u2581which \u2581contain \u2581request \u2581and \u2581application \u2581// \u2581level \u2581log \u2581information ."], "bleu": 0.07041953356382398, "rouge_l": 0.26521739130434785}
{"id": 5529, "predictions": ["\u2581// \u2581step 0 \u2581determines \u2581whether \u2581the \u2581 s now y \u2581mode \u2581of \u2581the \u2581 data \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Step \u25810 \u2581is \u2581to \u2581 strip \u2581off \u2581 apostrophe s \u2581and \u2581\" s \" . \u2581//"], "bleu": 0.0931377532902409, "rouge_l": 0.2222222222222222}
{"id": 4381, "predictions": ["\u2581// \u2581 Log Types \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581current \u2581log ."], "references": ["\u2581// \u2581 Log Types \u2581returns \u2581all \u2581of \u2581the \u2581valid \u2581log \u2581types \u2581that \u2581may \u2581be \u2581used \u2581with \u2581a \u2581 Log Reader ."], "bleu": 0.23028297047634766, "rouge_l": 0.5078630897317299}
{"id": 4778, "predictions": ["\u2581// \u2581valid IndexName Or Doc ID \u2581returns \u2581true \u2581if \u2581the \u2581string \u2581 s \u2581is \u2581a \u2581valid \u2581 IndexName \u2581or \u2581 type ."], "references": ["\u2581// \u2581valid IndexName Or Doc ID \u2581is \u2581the \u2581Go \u2581equivalent \u2581of \u2581Python ' s \u2581// \u2581 _ Validate Visible Printable Ascii Not Reserved ."], "bleu": 0.2619747017975199, "rouge_l": 0.4314002828854314}
{"id": 5952, "predictions": ["\u2581// \u2581 New Body Limiter \u2581creates \u2581a \u2581new \u2581 Body Limiter ."], "references": ["\u2581// \u2581 New Body Limiter \u2581returns \u2581a \u2581new \u2581 body \u2581 limiter \u2581for \u2581the \u2581specified \u2581request ."], "bleu": 0.32787776781958994, "rouge_l": 0.6019736842105263}
{"id": 4686, "predictions": ["\u2581// \u2581 guest book Key \u2581returns \u2581the \u2581 key \u2581used \u2581to \u2581 get \u2581 guest \u2581 keys ."], "references": ["\u2581// \u2581 guest book Key \u2581returns \u2581the \u2581 key \u2581used \u2581for \u2581all \u2581 guest book \u2581entries ."], "bleu": 0.5875766810867468, "rouge_l": 0.7467043314500941}
{"id": 4380, "predictions": ["\u2581// \u2581 Window Count \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581 pages ."], "references": ["\u2581// \u2581 Window Count \u2581returns \u2581the \u2581number \u2581of \u2581available \u2581windows ."], "bleu": 0.6115380576901023, "rouge_l": 0.7614424410540915}
{"id": 4641, "predictions": ["\u2581// \u2581 List \u2581all \u2581 modules \u2581in \u2581the \u2581context"], "references": ["\u2581// \u2581 List \u2581returns \u2581the \u2581names \u2581of \u2581 modules \u2581belonging \u2581to \u2581 this \u2581application ."], "bleu": 0.16669006580554238, "rouge_l": 0.3986928104575163}
{"id": 4174, "predictions": ["\u2581// \u2581 Response Time \u2581returns \u2581the \u2581time \u2581 status \u2581of \u2581the \u2581log ."], "references": ["\u2581// \u2581 As \u2581me sure d \u2581by \u2581the \u2581timer \u2581middleware ."], "bleu": 0.14283632578659286, "rouge_l": 0.33841886269070737}
{"id": 5967, "predictions": ["\u2581// \u2581Get Metadata \u2581returns \u2581the \u2581metadata \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Set Metadata \u2581gets \u2581a \u2581metadata \u2581value \u2581from \u2581the \u2581object ."], "bleu": 0.1367440667823257, "rouge_l": 0.43821839080459773}
{"id": 4459, "predictions": ["\u2581// \u2581 Command \u2581returns \u2581the \u2581command \u2581to \u2581 get \u2581the \u2581 config"], "references": ["\u2581// \u2581 Command \u2581creates \u2581an \u2581os \u2581command \u2581to \u2581be \u2581run"], "bleu": 0.22997519112894443, "rouge_l": 0.46212121212121204}
{"id": 5947, "predictions": ["\u2581// \u2581 Pop \u2581removes \u2581the \u2581last \u2581 trace \u2581from \u2581the \u2581 Tracer ."], "references": ["\u2581// \u2581 Pop \u2581finishes \u2581and \u2581removes \u2581the \u2581last \u2581pushed \u2581 span ."], "bleu": 0.2737928561916526, "rouge_l": 0.6446499339498017}
{"id": 4628, "predictions": ["\u2581// \u2581proto To Item \u2581converts \u2581a \u2581 memcache \u2581 memcache \u2581 memcache \u2581 Item \u2581to \u2581a \u2581 Item ."], "references": ["\u2581// \u2581proto To Item \u2581converts \u2581a \u2581protocol \u2581buffer \u2581item \u2581to \u2581a \u2581Go \u2581struct ."], "bleu": 0.33124989794664067, "rouge_l": 0.5607763023493361}
{"id": 6022, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581 this \u2581 slice ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581formatted \u2581representation \u2581of \u2581// \u2581the \u2581combination \u2581of \u2581all \u2581internal \u2581 Inclusive Range \u2581instances"], "bleu": 0.15756568859158712, "rouge_l": 0.4013157894736842}
{"id": 5968, "predictions": ["\u2581// \u2581Get Metadata All \u2581returns \u2581all \u2581metadata \u2581metadata \u2581for \u2581the \u2581given \u2581attribute"], "references": ["\u2581// \u2581Get Metadata All \u2581gets \u2581a \u2581 map \u2581that \u2581 contains \u2581all \u2581metadata \u2581of \u2581the \u2581object ."], "bleu": 0.22670831831447363, "rouge_l": 0.4682017543859649}
{"id": 4969, "predictions": ["\u2581// \u2581Remove Stream \u2581removes \u2581the \u2581stream \u2581from \u2581the \u2581server ."], "references": ["\u2581// \u2581Remove Stream \u2581will \u2581 remove \u2581a \u2581stream"], "bleu": 0.24808415001701817, "rouge_l": 0.4535315985130111}
{"id": 4367, "predictions": ["\u2581// \u2581 URL \u2581returns \u2581the \u2581 URL \u2581of \u2581the \u2581 Page ."], "references": ["\u2581// \u2581 URL \u2581returns \u2581the \u2581current \u2581 page \u2581 URL ."], "bleu": 0.45258880078905583, "rouge_l": 0.7011494252873562}
{"id": 4647, "predictions": ["\u2581// \u2581 Ancestor \u2581returns \u2581the \u2581ancestor \u2581 set \u2581of \u2581 items \u2581that \u2581match \u2581the \u2581given \u2581ancestor ."], "references": ["\u2581// \u2581 Ancestor \u2581returns \u2581a \u2581derivative \u2581query \u2581with \u2581an \u2581ancestor \u2581 filter . \u2581// \u2581The \u2581ancestor \u2581should \u2581not \u2581be \u2581nil ."], "bleu": 0.19461254724127272, "rouge_l": 0.4132091447925486}
{"id": 4877, "predictions": ["\u2581// \u2581Get Font Name \u2581returns \u2581the \u2581 font \u2581 name \u2581for \u2581the \u2581stack"], "references": ["\u2581// \u2581Get Font Name \u2581gets \u2581the \u2581current \u2581 Font Data \u2581with \u2581 fontSize \u2581as \u2581a \u2581string"], "bleu": 0.23737893325838474, "rouge_l": 0.4739178690344062}
{"id": 5736, "predictions": ["\u2581// \u2581 Concat Permission er \u2581creates \u2581a \u2581list \u2581of \u2581permission er"], "references": ["\u2581// \u2581 Concat Permission er \u2581 concat \u2581permission er"], "bleu": 0.46924700641055994, "rouge_l": 0.7128547579298832}
{"id": 4423, "predictions": ["\u2581// \u2581 view Handler \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 view \u2581of \u2581the \u2581// \u2581 view ."], "references": ["\u2581// \u2581 Show \u2581the \u2581current \u2581user \u2581if \u2581logged \u2581in , \u2581otherwise \u2581 display \u2581a \u2581 login \u2581 form ."], "bleu": 0.11709061630923734, "rouge_l": 0.3091216216216216}
{"id": 4316, "predictions": ["\u2581// \u2581Get Level \u2581returns \u2581the \u2581log \u2581level \u2581for \u2581the \u2581given \u2581module ."], "references": ["\u2581// \u2581Get Level \u2581returns \u2581the \u2581highest \u2581level \u2581enabled \u2581by \u2581all \u2581 backends ."], "bleu": 0.3762614992413644, "rouge_l": 0.5559895833333334}
{"id": 4371, "predictions": ["\u2581// \u2581HTML \u2581returns \u2581the \u2581HTML \u2581HTML \u2581HTML \u2581 page ."], "references": ["\u2581// \u2581HTML \u2581returns \u2581the \u2581current \u2581 contents \u2581of \u2581the \u2581DOM \u2581for \u2581the \u2581entire \u2581 page ."], "bleu": 0.2575282173204035, "rouge_l": 0.5169491525423728}
{"id": 4294, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581 Channel Memory Backend ."], "references": ["\u2581// \u2581 Stop \u2581signals \u2581the \u2581internal \u2581goroutine \u2581to \u2581 exit \u2581and \u2581waits \u2581until \u2581it \u2581have ."], "bleu": 0.14809975431372346, "rouge_l": 0.44309927360774815}
{"id": 5583, "predictions": ["\u2581// \u2581 Sign \u2581sign s \u2581the \u2581given \u2581message \u2581with \u2581the \u2581given \u2581 key \u2581and \u2581 SHA 256 \u2581hash ."], "references": ["\u2581// \u2581 Sign \u2581returns \u2581a \u2581signature \u2581of \u2581the \u2581input \u2581 data"], "bleu": 0.1326475916741222, "rouge_l": 0.35017221584385766}
{"id": 4462, "predictions": ["\u2581// \u2581Add ASM \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581Add Interaction \u2581adds \u2581a \u2581new \u2581 Pact \u2581 Mock \u2581 Service \u2581interaction ."], "bleu": 0.09663861439684919, "rouge_l": 0.2695139911634757}
{"id": 5495, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 get \u2581a \u2581 set \u2581of \u2581 items \u2581from \u2581the \u2581 allocator ."], "references": ["\u2581// \u2581 succ Context \u2581returns \u2581a \u2581context \u2581given \u2581a \u2581state . succ \u2581index"], "bleu": 0.101824256461955, "rouge_l": 0.2657952069716775}
{"id": 4897, "predictions": ["\u2581// \u2581 Resource \u2581returns \u2581a \u2581string \u2581containing \u2581the \u2581 filename \u2581for \u2581the \u2581given \u2581file ."], "references": ["\u2581// \u2581 Resource \u2581returns \u2581a \u2581resource \u2581 filename \u2581for \u2581testing ."], "bleu": 0.393755531055134, "rouge_l": 0.7120622568093385}
{"id": 4573, "predictions": ["\u2581// \u2581 On Gossip Broadcast \u2581is \u2581called \u2581when \u2581a \u2581peer \u2581is \u2581closed ."], "references": ["\u2581// \u2581 On Gossip Broadcast \u2581implements \u2581mesh . Gossip er . \u2581// \u2581The \u2581buf \u2581is \u2581a \u2581single \u2581pkt"], "bleu": 0.2635729096944705, "rouge_l": 0.43884892086330934}
{"id": 4898, "predictions": ["\u2581// \u2581 Output \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581output \u2581file ."], "references": ["\u2581// \u2581 Output \u2581returns \u2581the \u2581output \u2581 filename \u2581for \u2581testing ."], "bleu": 0.4408231875586727, "rouge_l": 0.6135057471264368}
{"id": 4447, "predictions": ["\u2581// \u2581Add Css \u2581adds \u2581a \u2581 fonts \u2581that \u2581 manipulate s \u2581 login s ."], "references": ["\u2581// \u2581Add Interaction \u2581creates \u2581a \u2581new \u2581 Pact \u2581interaction , \u2581initial ising \u2581all \u2581// \u2581required \u2581things . \u2581Will \u2581automatically \u2581start \u2581a \u2581 Mock \u2581 Service \u2581if \u2581 none \u2581running ."], "bleu": 0.0563232453709982, "rouge_l": 0.2934707903780069}
{"id": 4169, "predictions": ["\u2581// \u2581execute Text Template \u2581is \u2581a \u2581convenience \u2581method \u2581for \u2581generating \u2581a \u2581 text \u2581template ."], "references": ["\u2581// \u2581Execute \u2581the \u2581 text \u2581template \u2581with \u2581the \u2581 data \u2581derived \u2581from \u2581the \u2581request , \u2581and \u2581return \u2581a \u2581string ."], "bleu": 0.12617602396331445, "rouge_l": 0.2785388127853881}
{"id": 4684, "predictions": ["\u2581// \u2581 New Remote Context \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581 New Remote Context \u2581returns \u2581a \u2581context \u2581that \u2581gives \u2581access \u2581to \u2581the \u2581 production \u2581// \u2581API s \u2581for \u2581the \u2581application \u2581at \u2581the \u2581given \u2581host . \u2581 All \u2581communication \u2581will"], "bleu": 0.19018379497840193, "rouge_l": 0.4611683848797251}
{"id": 4901, "predictions": ["\u2581// \u2581 Main \u2581is \u2581the \u2581main \u2581point \u2581for \u2581 resolving \u2581the \u2581 content \u2581of \u2581the \u2581 path ."], "references": ["\u2581// \u2581 Main \u2581draw s \u2581geometry \u2581and \u2581returns \u2581the \u2581 filename . \u2581This \u2581should \u2581only \u2581be \u2581// \u2581used \u2581during \u2581testing ."], "bleu": 0.1325915478690677, "rouge_l": 0.3034825870646766}
{"id": 5905, "predictions": ["\u2581// \u2581Get Token Data \u2581returns \u2581the \u2581 token \u2581 data \u2581for \u2581the \u2581given \u2581 token ."], "references": ["\u2581// \u2581Get Token Data \u2581implements \u2581the \u2581 fla me . Generic Token \u2581interface ."], "bleu": 0.2545984531673679, "rouge_l": 0.4723451327433628}
{"id": 4489, "predictions": ["\u2581// \u2581 Usage t \u2581 - \u2581 get \u2581the \u2581usage \u2581of \u2581the \u2581template \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 format ."], "references": ["\u2581// \u2581 Usage t \u2581writes \u2581usage \u2581information \u2581to \u2581the \u2581specified \u2581io . Writer \u2581using \u2581the \u2581specified \u2581template"], "bleu": 0.18331704949485053, "rouge_l": 0.36746987951807225}
{"id": 5756, "predictions": ["\u2581// \u2581 add \u2581a \u2581new \u2581 set \u2581of \u2581 Address \u2581to \u2581the \u2581 map ."], "references": ["\u2581// \u2581 add \u2581records \u2581that \u2581 PC s \u2581in \u2581the \u2581range \u2581 [ min , max ) \u2581 map \u2581to \u2581function \u2581 f ."], "bleu": 0.11627151237052247, "rouge_l": 0.393866020984665}
{"id": 5640, "predictions": ["\u2581// \u2581 Merge Attrs \u2581merges \u2581attributes \u2581of \u2581attributes \u2581in \u2581a \u2581 Attrs \u2581object , \u2581// \u2581and \u2581returns \u2581a \u2581new \u2581 Attrs \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 merge \u2581the"], "references": ["\u2581// \u2581 Merge Attrs \u2581accepts \u2581another \u2581existing \u2581 Attrs \u2581and \u2581merges \u2581the \u2581attributes \u2581into \u2581its \u2581own ."], "bleu": 0.14458350226851174, "rouge_l": 0.3582966226138032}
{"id": 4803, "predictions": ["\u2581// \u2581 Failures \u2581returns \u2581the \u2581number \u2581of \u2581errors \u2581that \u2581were \u2581 accumulated ."], "references": ["\u2581// \u2581 Failures \u2581counts \u2581the \u2581number \u2581of \u2581failed \u2581tests \u2581in \u2581 this \u2581report"], "bleu": 0.2658483576665877, "rouge_l": 0.5384615384615383}
{"id": 4595, "predictions": ["\u2581// \u2581new TCP Crypto State \u2581returns \u2581a \u2581new \u2581 TCP Crypto State \u2581instance"], "references": ["\u2581// \u2581 New TCP Crypto State \u2581returns \u2581a \u2581valid \u2581 TCP Crypto State ."], "bleu": 0.5042023677771564, "rouge_l": 0.7358262967430639}
{"id": 4272, "predictions": ["\u2581// \u2581 Beginning Of Hour \u2581returns \u2581the \u2581time \u2581 date \u2581for \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 Beginning Of Hour \u2581beginning \u2581of \u2581hour"], "bleu": 0.30130404892785684, "rouge_l": 0.46003016591251883}
{"id": 5600, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581two \u2581 ECDSA \u2581 keys \u2581are \u2581equal ."], "references": ["\u2581// \u2581 Equals \u2581compares \u2581to \u2581private \u2581 keys"], "bleu": 0.18207052811092128, "rouge_l": 0.46003016591251883}
{"id": 5565, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get \u2581gets \u2581the \u2581value \u2581by \u2581 key \u2581as \u2581it \u2581 exists \u2581for \u2581the \u2581current \u2581goroutine ."], "bleu": 0.13598268615017842, "rouge_l": 0.48139797068771134}
{"id": 4576, "predictions": ["\u2581// \u2581 Peer Name From User Input \u2581returns \u2581the \u2581peer \u2581 name \u2581for \u2581the \u2581user \u2581in \u2581the \u2581input \u2581input ."], "references": ["\u2581// \u2581 Peer Name From User Input \u2581parses \u2581 Peer Name \u2581from \u2581a \u2581user - provided \u2581string ."], "bleu": 0.3561099807298962, "rouge_l": 0.5313588850174217}
{"id": 4580, "predictions": ["\u2581// \u2581send All Gossip Down \u2581sends \u2581a \u2581 gossip \u2581 call \u2581to \u2581the \u2581 router"], "references": ["\u2581// \u2581 Relay \u2581all \u2581pending \u2581 gossip \u2581 data \u2581for \u2581each \u2581channel \u2581via \u2581conn ."], "bleu": 0.16943571815930883, "rouge_l": 0.2666666666666666}
{"id": 4358, "predictions": ["\u2581// \u2581 Chrome Options \u2581 set \u2581the \u2581options \u2581for \u2581the \u2581 Chrome \u2581options ."], "references": ["\u2581// \u2581 Chrome Options \u2581is \u2581used \u2581to \u2581pass \u2581additional \u2581options \u2581to \u2581 Chrome \u2581via \u2581 Chrome Driver ."], "bleu": 0.232466406738093, "rouge_l": 0.48897795591182364}
{"id": 5731, "predictions": ["\u2581// \u2581 Critical f \u2581logs \u2581a \u2581formatted \u2581message \u2581with \u2581the \u2581 critical \u2581level ."], "references": ["\u2581// \u2581 Critical f \u2581formats \u2581message \u2581according \u2581to \u2581 format \u2581 specifier , \u2581 prepend s \u2581the \u2581prefix \u2581// \u2581as \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level Critical"], "bleu": 0.09087426552401023, "rouge_l": 0.2986013986013986}
{"id": 5710, "predictions": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581number \u2581of \u2581bytes \u2581in \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581number \u2581of \u2581values \u2581remaining \u2581to \u2581be \u2581read \u2581from \u2581the \u2581stream , \u2581which \u2581// \u2581may \u2581be \u2581-1 \u2581if \u2581the \u2581underlying \u2581 format \u2581doesn ' t \u2581provide"], "bleu": 0.13645258474925223, "rouge_l": 0.3978260869565217}
{"id": 5607, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581 Sec p 256 k 1 \u2581 contains \u2581the \u2581same \u2581 key ."], "references": ["\u2581// \u2581 Equals \u2581compares \u2581two \u2581private \u2581 keys"], "bleu": 0.12021577610863723, "rouge_l": 0.3096446700507614}
{"id": 4173, "predictions": ["\u2581// \u2581 Temp RemoteAddr \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581remote \u2581address \u2581of \u2581the \u2581 Vault \u2581log ."], "references": ["\u2581// \u2581If \u2581 remoteAddr \u2581is \u2581 set \u2581then \u2581return \u2581is \u2581without \u2581the \u2581port \u2581number , \u2581 apache \u2581log \u2581 style ."], "bleu": 0.08151571281137328, "rouge_l": 0.3540630182421227}
{"id": 4615, "predictions": ["\u2581// \u2581connection Aborted \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581connection \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581connection Aborted \u2581 marks \u2581the \u2581target \u2581identified \u2581by \u2581address \u2581as \u2581broken , \u2581and \u2581// \u2581puts \u2581it \u2581in \u2581the \u2581 Target Waiting \u2581state ."], "bleu": 0.09577760917112561, "rouge_l": 0.3517298187808896}
{"id": 5564, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 key \u2581to \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581by \u2581 key \u2581and \u2581associate s \u2581it \u2581with \u2581the \u2581current \u2581goroutine ."], "bleu": 0.3107663933700832, "rouge_l": 0.5706860706860708}
{"id": 5721, "predictions": ["\u2581// \u2581 Trace f \u2581logs \u2581a \u2581formatted \u2581log \u2581message \u2581with \u2581the \u2581given \u2581 format ."], "references": ["\u2581// \u2581 Trace f \u2581formats \u2581message \u2581according \u2581to \u2581 format \u2581 specifier , \u2581 prepend s \u2581the \u2581prefix \u2581as \u2581// \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level Trace"], "bleu": 0.10845843803319692, "rouge_l": 0.2934707903780069}
{"id": 5737, "predictions": ["\u2581// \u2581 Has Permission \u2581returns \u2581true \u2581if \u2581the \u2581 Permission \u2581in \u2581the \u2581 Permission \u2581is \u2581valid"], "references": ["\u2581// \u2581 Has Permission \u2581check \u2581has \u2581permission \u2581for \u2581permission ers \u2581or \u2581not"], "bleu": 0.2140909265975804, "rouge_l": 0.2932692307692307}
{"id": 4461, "predictions": ["\u2581// \u2581 Delete basepath s \u2581 mocks \u2581base \u2581method"], "references": ["\u2581// \u2581 Delete Interaction s \u2581removes \u2581any \u2581previous \u2581 Mock \u2581 Service \u2581 Interaction s ."], "bleu": 0.13356214772572012, "rouge_l": 0.38077403245942576}
{"id": 5723, "predictions": ["\u2581// \u2581 Debugf \u2581logs \u2581a \u2581formatted \u2581log \u2581level \u2581and \u2581calls \u2581the \u2581 debug \u2581level ."], "references": ["\u2581// \u2581 Debugf \u2581formats \u2581message \u2581according \u2581to \u2581 format \u2581 specifier , \u2581 prepend s \u2581the \u2581prefix \u2581as \u2581// \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level Debug ."], "bleu": 0.0689816059082601, "rouge_l": 0.2515463917525773}
{"id": 5445, "predictions": ["\u2581// \u2581 CreatedAt \u2581returns \u2581a \u2581 structured \u2581 code \u2581for \u2581a \u2581 doc \u2581 doc ."], "references": ["\u2581// \u2581 addWarning \u2581builds \u2581a \u2581non - severe \u2581 Error \u2581and \u2581appends \u2581to \u2581the \u2581 Part \u2581error \u2581 slice ."], "bleu": 0.1007533106451815, "rouge_l": 0.3812499999999999}
{"id": 4948, "predictions": ["\u2581// \u2581 Capture Metrics \u2581 wraps \u2581the \u2581 Handler \u2581interface ."], "references": ["\u2581// \u2581 Capture Metrics \u2581 wraps \u2581the \u2581given \u2581 h nd , \u2581executes \u2581it \u2581with \u2581the \u2581given \u2581 w \u2581and \u2581 r , \u2581and \u2581// \u2581returns \u2581the \u2581metrics \u2581it \u2581"], "bleu": 0.11227067317551866, "rouge_l": 0.36014760147601477}
{"id": 5727, "predictions": ["\u2581// \u2581 Warnf \u2581logs \u2581a \u2581formatted \u2581formatted \u2581log \u2581message ."], "references": ["\u2581// \u2581 Warnf \u2581formats \u2581message \u2581according \u2581to \u2581 format \u2581 specifier , \u2581 prepend s \u2581the \u2581prefix \u2581as \u2581// \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level Warn ."], "bleu": 0.036520949774262054, "rouge_l": 0.22932330827067668}
{"id": 5444, "predictions": ["\u2581// \u2581 WriteByte \u2581adds \u2581a \u2581 status \u2581 code \u2581to \u2581a \u2581 Part able \u2581string ."], "references": ["\u2581// \u2581 addWarning \u2581builds \u2581a \u2581 severe \u2581 Error \u2581and \u2581appends \u2581to \u2581the \u2581 Part \u2581error \u2581 slice ."], "bleu": 0.13486142142525825, "rouge_l": 0.5064575645756457}
{"id": 4967, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581server \u2581and \u2581 releases \u2581all \u2581streams ."], "references": ["\u2581// \u2581 Close \u2581shut s \u2581down \u2581the \u2581server , \u2581closes \u2581all \u2581of \u2581the \u2581streams \u2581and \u2581connections"], "bleu": 0.18723125508978802, "rouge_l": 0.48744292237442927}
{"id": 4216, "predictions": ["\u2581// \u2581 Reset Offset \u2581resets \u2581the \u2581given \u2581message \u2581and \u2581metadata \u2581for \u2581the \u2581given \u2581message ."], "references": ["\u2581// \u2581 Reset Offset \u2581 marks \u2581the \u2581provided \u2581message \u2581as \u2581processed , \u2581along side \u2581a \u2581metadata \u2581string \u2581// \u2581that \u2581represents \u2581the \u2581state \u2581of \u2581the \u2581partition \u2581consumer \u2581at \u2581that \u2581point \u2581in"], "bleu": 0.09755472262973743, "rouge_l": 0.3353951890034364}
{"id": 4692, "predictions": ["\u2581// \u2581 Delete \u2581a \u2581task \u2581by \u2581 name"], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581a \u2581task \u2581from \u2581a \u2581named \u2581queue ."], "bleu": 0.24395202750673672, "rouge_l": 0.511744966442953}
{"id": 5714, "predictions": ["\u2581// \u2581 init \u2581initializes \u2581the \u2581 cli \u2581 vars"], "references": ["\u2581// \u2581 Read \u2581logger \u2581flags \u2581from \u2581the \u2581LOG FLAGS \u2581environment \u2581variable . \u2581 Multiple \u2581flags \u2581can \u2581// \u2581be \u2581 set \u2581at \u2581once , \u2581separated \u2581by \u2581commas ."], "bleu": 0.029895010727222254, "rouge_l": 0.2548036758563075}
{"id": 5964, "predictions": ["\u2581// \u2581 New Secret \u2581creates \u2581a \u2581new \u2581 Secret"], "references": ["\u2581// \u2581 New Secret \u2581creates \u2581a \u2581new \u2581 secret ."], "bleu": 0.7875585852725084, "rouge_l": 0.8341880341880341}
{"id": 4373, "predictions": ["\u2581// \u2581 Enter Popup Text \u2581 enter s \u2581the \u2581 page \u2581of \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Enter Popup Text \u2581 enter s \u2581 text \u2581into \u2581an \u2581open \u2581prompt \u2581popup ."], "bleu": 0.5043545474510804, "rouge_l": 0.625}
{"id": 4321, "predictions": ["\u2581// \u2581 New Syslog Backend Priority \u2581creates \u2581a \u2581new \u2581 syslog \u2581backend ."], "references": ["\u2581// \u2581 New Syslog Backend Priority \u2581is \u2581the \u2581same \u2581as \u2581 New Syslog Backend , \u2581but \u2581with \u2581custom \u2581// \u2581 syslog \u2581priority , \u2581like \u2581 syslog . LOG _ LOCAL"], "bleu": 0.13287617742557511, "rouge_l": 0.3907473309608541}
{"id": 4365, "predictions": ["\u2581// \u2581 Delete Cookie \u2581deletes \u2581a \u2581cookie \u2581from \u2581the \u2581 Page ."], "references": ["\u2581// \u2581 Delete Cookie \u2581deletes \u2581a \u2581cookie \u2581on \u2581the \u2581 page \u2581by \u2581 name ."], "bleu": 0.487750856125655, "rouge_l": 0.726190476190476}
{"id": 4785, "predictions": ["\u2581// \u2581fetch More \u2581fetches \u2581the \u2581current \u2581 iterator \u2581from \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581fetch More \u2581retrieves \u2581more \u2581results , \u2581if \u2581there \u2581are \u2581no \u2581errors \u2581or \u2581pending \u2581results ."], "bleu": 0.14924410309078368, "rouge_l": 0.2708102108768035}
{"id": 5916, "predictions": ["\u2581// \u2581Default Token Data \u2581returns \u2581the \u2581 token \u2581 data \u2581for \u2581a \u2581 Client ."], "references": ["\u2581// \u2581Default Token Data \u2581adds \u2581the \u2581user ' s \u2581 id \u2581to \u2581the \u2581 token \u2581 data \u2581claim ."], "bleu": 0.3670608782781371, "rouge_l": 0.5760151085930123}
{"id": 5383, "predictions": ["\u2581// \u2581 Attach Buffer \u2581 attaches \u2581a \u2581 data \u2581to \u2581a \u2581 filename ."], "references": ["\u2581// \u2581 Attach Buffer \u2581 attaches \u2581a \u2581binary \u2581attachment ."], "bleu": 0.49009410393069486, "rouge_l": 0.6873239436619719}
{"id": 4322, "predictions": ["\u2581// \u2581Set Backend \u2581sets \u2581the \u2581backend \u2581backend \u2581for \u2581the \u2581backend"], "references": ["\u2581// \u2581Set Backend \u2581replaces \u2581the \u2581backend \u2581currently \u2581 set \u2581with \u2581the \u2581given \u2581new \u2581logging \u2581// \u2581backend ."], "bleu": 0.14888726794604665, "rouge_l": 0.4953596287703016}
{"id": 5573, "predictions": ["\u2581// \u2581 Curl App Root \u2581returns \u2581the \u2581 app ' s \u2581 app Root \u2581for \u2581the \u2581given \u2581 app ."], "references": ["\u2581// \u2581 Curl s \u2581an \u2581 app ' s \u2581root \u2581endpoint \u2581and \u2581 exit \u2581successfully \u2581before \u2581the \u2581default \u2581timeout"], "bleu": 0.2404315522172745, "rouge_l": 0.4636824324324324}
{"id": 5579, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 URL \u2581for \u2581the \u2581 GET \u2581request ."], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 Location \u2581information \u2581for \u2581the \u2581incoming \u2581http . Request \u2581from \u2581the \u2581// \u2581context . \u2581If \u2581the \u2581location \u2581is \u2581not \u2581 set \u2581a \u2581nil \u2581value \u2581is \u2581returned"], "bleu": 0.10098621160144783, "rouge_l": 0.3536231884057971}
{"id": 4864, "predictions": ["\u2581// \u2581 Draw \u2581draw s \u2581the \u2581 width \u2581of \u2581the \u2581matrix ."], "references": ["\u2581// \u2581 Draw \u2581 vertical ly \u2581 spaced \u2581lines"], "bleu": 0.2044800736021839, "rouge_l": 0.39102564102564097}
{"id": 5725, "predictions": ["\u2581// \u2581 Infof \u2581logs \u2581a \u2581message \u2581with \u2581the \u2581 format \u2581level ."], "references": ["\u2581// \u2581 Infof \u2581formats \u2581message \u2581according \u2581to \u2581 format \u2581 specifier , \u2581 prepend s \u2581the \u2581prefix \u2581as \u2581// \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level Info ."], "bleu": 0.05830441645253641, "rouge_l": 0.30942028985507253}
{"id": 5729, "predictions": ["\u2581// \u2581 Errorf \u2581logs \u2581a \u2581formatted \u2581error \u2581message ."], "references": ["\u2581// \u2581 Errorf \u2581formats \u2581message \u2581according \u2581to \u2581 format \u2581 specifier , \u2581 prepend s \u2581the \u2581prefix \u2581as \u2581// \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level Error ."], "bleu": 0.028191241370329752, "rouge_l": 0.23371647509578544}
{"id": 4265, "predictions": ["\u2581// \u2581 Int Env Def \u2581 cast s \u2581the \u2581environment \u2581variable \u2581to \u2581the \u2581environment \u2581variable \u2581// \u2581and \u2581returns \u2581the \u2581default \u2581value \u2581if \u2581it \u2581is \u2581not \u2581present ."], "references": ["\u2581// \u2581 Int Env Def \u2581 get \u2581environment \u2581variable , \u2581or \u2581some \u2581default \u2581def"], "bleu": 0.2310325762059593, "rouge_l": 0.46564885496183206}
{"id": 5597, "predictions": ["\u2581// \u2581 ECDSA KeyPair FromKey \u2581creates \u2581a \u2581 PubKey \u2581from \u2581a \u2581 ECDSA \u2581private \u2581 key"], "references": ["\u2581// \u2581 ECDSA KeyPair FromKey \u2581generates \u2581a \u2581new \u2581 ecdsa \u2581private \u2581and \u2581public \u2581 key \u2581from \u2581an \u2581input \u2581private \u2581 key"], "bleu": 0.28765311909912633, "rouge_l": 0.5804498269896193}
{"id": 4749, "predictions": ["\u2581// \u2581is Pkg Dot \u2581reports \u2581whether \u2581the \u2581 name \u2581is \u2581a \u2581valid \u2581 dot ."], "references": ["\u2581// \u2581is Pkg Dot \u2581returns \u2581true \u2581if \u2581 t \u2581is \u2581the \u2581expression \u2581\" pkg . name \" \u2581// \u2581where \u2581pkg \u2581is \u2581an \u2581imported \u2581 identifier ."], "bleu": 0.13392069800484763, "rouge_l": 0.41876430205949655}
{"id": 4759, "predictions": ["\u2581// \u2581match Len \u2581returns \u2581the \u2581number \u2581of \u2581 x \u2581and \u2581 y ."], "references": ["\u2581// \u2581match Len \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581longest \u2581prefix \u2581shared \u2581by \u2581 x \u2581and \u2581 y ."], "bleu": 0.4499779269633462, "rouge_l": 0.7254707631318138}
{"id": 4965, "predictions": ["\u2581// \u2581 add Subscriber \u2581adds \u2581a \u2581subscriber \u2581to \u2581the \u2581 Stream ."], "references": ["\u2581// \u2581 add Subscriber \u2581will \u2581create \u2581a \u2581new \u2581subscriber \u2581on \u2581a \u2581stream"], "bleu": 0.31455601883230705, "rouge_l": 0.5}
{"id": 4564, "predictions": ["\u2581// \u2581 Uni cast All \u2581 searches \u2581the \u2581 route \u2581for \u2581a \u2581given \u2581 Peer Name"], "references": ["\u2581// \u2581 Uni cast All \u2581returns \u2581the \u2581next \u2581 hop \u2581on \u2581the \u2581 unicast \u2581 route \u2581to \u2581the \u2581named \u2581peer , \u2581// \u2581based \u2581on \u2581all \u2581connections ."], "bleu": 0.17932609310158834, "rouge_l": 0.4001457725947522}
{"id": 4942, "predictions": ["\u2581// \u2581 RawString \u2581 - \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581a \u2581 data ."], "references": ["\u2581// \u2581 RawString \u2581returns \u2581raw \u2581log \u2581string \u2581exclude \u2581time \u2581& \u2581tags"], "bleu": 0.18207052811092136, "rouge_l": 0.40884718498659517}
{"id": 5915, "predictions": ["\u2581// \u2581Default Grant Strategy \u2581returns \u2581a \u2581 scope \u2581for \u2581the \u2581 authorizer \u2581on \u2581the \u2581 scope ."], "references": ["\u2581// \u2581Default Grant Strategy \u2581 grants \u2581only \u2581 empty \u2581scopes ."], "bleu": 0.22612164703205964, "rouge_l": 0.5200974421437271}
{"id": 4269, "predictions": ["\u2581// \u2581 New Signal Handler \u2581creates \u2581a \u2581new \u2581handler \u2581for \u2581 watching \u2581the \u2581 status \u2581of \u2581the \u2581// \u2581 active \u2581 Signal \u2581signal ."], "references": ["\u2581// \u2581 New Signal Handler \u2581creates \u2581a \u2581new \u2581 Handler \u2581using \u2581given \u2581properties ."], "bleu": 0.3321678143250398, "rouge_l": 0.552536231884058}
{"id": 4972, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581 url ."], "references": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581client"], "bleu": 0.195647514979229, "rouge_l": 0.5066445182724253}
{"id": 4320, "predictions": ["\u2581// \u2581 New Syslog Backend \u2581returns \u2581a \u2581new \u2581 syslog \u2581backend"], "references": ["\u2581// \u2581 New Syslog Backend \u2581connects \u2581to \u2581the \u2581 syslog \u2581daemon \u2581using \u2581 UNIX \u2581 sockets \u2581with \u2581the \u2581// \u2581given \u2581prefix . \u2581If \u2581prefix \u2581is \u2581not \u2581given , \u2581the \u2581prefix"], "bleu": 0.08341737063348127, "rouge_l": 0.3151291512915129}
{"id": 5951, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581all \u2581the \u2581tasks \u2581in \u2581the \u2581pool \u2581and \u2581waits \u2581for \u2581all \u2581tasks \u2581to \u2581the \u2581pool ."], "references": ["\u2581// \u2581 Run \u2581will \u2581launch \u2581the \u2581queue \u2581 watchers \u2581and \u2581task \u2581workers \u2581in \u2581the \u2581background ."], "bleu": 0.15774545980684188, "rouge_l": 0.40627973358706}
{"id": 4554, "predictions": ["\u2581// \u2581 On Invalidate Short IDs \u2581allows \u2581to \u2581 set \u2581the \u2581 set \u2581of \u2581peers \u2581to \u2581 set \u2581the \u2581peer \u2581 ids ."], "references": ["\u2581// \u2581 On Invalidate Short IDs \u2581adds \u2581a \u2581new \u2581function \u2581to \u2581a \u2581 set \u2581of \u2581function s \u2581that \u2581will \u2581be \u2581// \u2581executed \u2581on \u2581all \u2581subsequent \u2581 GC \u2581runs , \u2581when"], "bleu": 0.2274043530900489, "rouge_l": 0.4054380664652568}
{"id": 5386, "predictions": ["\u2581// \u2581Add Header \u2581adds \u2581a \u2581header \u2581to \u2581the \u2581message ."], "references": ["\u2581// \u2581 Ads \u2581a \u2581 Header \u2581to \u2581message"], "bleu": 0.16590387014219712, "rouge_l": 0.4535315985130111}
{"id": 5406, "predictions": ["\u2581// \u2581 To \u2581adds \u2581a \u2581 Mail Builder \u2581to \u2581the \u2581given \u2581address ."], "references": ["\u2581// \u2581 To \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581 this \u2581 name \u2581& \u2581address \u2581appended \u2581to \u2581the \u2581 To \u2581header . \u2581 name \u2581may \u2581be \u2581// \u2581"], "bleu": 0.08327766790020474, "rouge_l": 0.43416370106761565}
{"id": 4147, "predictions": ["\u2581// \u2581Get Db Driver \u2581returns \u2581a \u2581driver \u2581from \u2581the \u2581 DB \u2581driver ."], "references": ["\u2581// \u2581Get Db Driver \u2581returns \u2581the \u2581 DB \u2581driver \u2581that \u2581was \u2581registered \u2581with \u2581a \u2581specific \u2581 name"], "bleu": 0.40029768390374415, "rouge_l": 0.5859124866595516}
{"id": 5822, "predictions": ["\u2581// \u2581 Char At \u2581returns \u2581the \u2581index \u2581of \u2581a \u2581string \u2581at \u2581index \u2581index ."], "references": ["\u2581// \u2581 Char At \u2581returns \u2581a \u2581string \u2581from \u2581the \u2581character \u2581at \u2581the \u2581specified \u2581position ."], "bleu": 0.367133730885769, "rouge_l": 0.6168539325842697}
{"id": 5638, "predictions": ["\u2581// \u2581 New Attrs FromMap \u2581creates \u2581a \u2581new \u2581 Attrs \u2581object \u2581with \u2581the \u2581given \u2581attributes ."], "references": ["\u2581// \u2581 New Attrs FromMap \u2581will \u2581create \u2581a \u2581new \u2581 Attrs \u2581struct \u2581with \u2581the \u2581given \u2581attributes \u2581 pre - populated"], "bleu": 0.4462975552759087, "rouge_l": 0.7080357142857143}
{"id": 4446, "predictions": ["\u2581// \u2581Add Message \u2581adds \u2581a \u2581new \u2581message \u2581to \u2581the \u2581 display ."], "references": ["\u2581// \u2581Add Message \u2581creates \u2581a \u2581new \u2581asynchronous \u2581consumer \u2581 expectation"], "bleu": 0.23901088824528133, "rouge_l": 0.5545454545454546}
{"id": 6026, "predictions": ["\u2581// \u2581 Min \u2581returns \u2581the \u2581minimum \u2581value \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Min \u2581returns \u2581the \u2581smallest \u2581value \u2581in \u2581the \u2581total \u2581range"], "bleu": 0.48442732379638637, "rouge_l": 0.7011494252873562}
{"id": 6027, "predictions": ["\u2581// \u2581 Max \u2581returns \u2581the \u2581maximum \u2581value \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Max \u2581returns \u2581the \u2581highest \u2581value \u2581in \u2581the \u2581total \u2581range"], "bleu": 0.48442732379638637, "rouge_l": 0.7011494252873562}
{"id": 4377, "predictions": ["\u2581// \u2581 Switch To Root Frame \u2581 switches \u2581the \u2581 page \u2581to \u2581the \u2581root \u2581frame ."], "references": ["\u2581// \u2581 Switch To Root Frame \u2581 focus es \u2581on \u2581the \u2581original , \u2581default \u2581 page \u2581frame \u2581before \u2581any \u2581calls \u2581// \u2581to \u2581 Selection . Frame \u2581were \u2581made . \u2581"], "bleu": 0.2052958158116772, "rouge_l": 0.49459459459459465}
{"id": 4695, "predictions": ["\u2581// \u2581 Lease ByTag \u2581returns \u2581a \u2581 Task \u2581for \u2581a \u2581given \u2581 name \u2581and \u2581lease ID ."], "references": ["\u2581// \u2581 Lease ByTag \u2581 leases \u2581tasks \u2581from \u2581a \u2581queue , \u2581grouped \u2581by \u2581tag . \u2581// \u2581If \u2581tag \u2581is \u2581 empty , \u2581then \u2581the \u2581returned \u2581tasks \u2581are \u2581grouped \u2581by \u2581the"], "bleu": 0.10839836352151985, "rouge_l": 0.2837209302325582}
{"id": 5408, "predictions": ["\u2581// \u2581 CC \u2581adds \u2581a \u2581 mail \u2581to \u2581the \u2581 mail ."], "references": ["\u2581// \u2581 CC \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581 this \u2581 name \u2581& \u2581address \u2581appended \u2581to \u2581the \u2581 CC \u2581header . \u2581 name \u2581may \u2581be \u2581// \u2581"], "bleu": 0.06822629237462612, "rouge_l": 0.3978260869565217}
{"id": 5576, "predictions": ["\u2581// \u2581is \u2581responsible \u2581for \u2581 test \u2581if \u2581 r \u2581is \u2581a \u2581 truth \u2581character"], "references": ["\u2581// \u2581 Is \u2581given \u2581rune \u2581listed \u2581as \u2581a \u2581 terminator"], "bleu": 0.13217947626377288, "rouge_l": 0.34366197183098596}
{"id": 4397, "predictions": ["\u2581// \u2581 Have Logged Error \u2581returns \u2581a \u2581 G chain Matcher \u2581that \u2581matches \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581 Have Logged Error \u2581passes \u2581when \u2581all \u2581of \u2581the \u2581expected \u2581log \u2581messages \u2581are \u2581logged \u2581as \u2581// \u2581errors \u2581in \u2581the \u2581browser \u2581console . \u2581If \u2581no \u2581message \u2581is \u2581provided , \u2581"], "bleu": 0.1363037260148823, "rouge_l": 0.2837209302325582}
{"id": 4180, "predictions": ["\u2581// \u2581 Wrap Middlewares \u2581 wraps \u2581the \u2581middleware \u2581function \u2581in \u2581the \u2581 Middleware \u2581interface"], "references": ["\u2581// \u2581 Wrap Middlewares \u2581calls \u2581the \u2581 Middleware Func \u2581methods \u2581in \u2581the \u2581reverse \u2581order \u2581and \u2581returns \u2581an \u2581 HandlerFunc \u2581// \u2581ready \u2581to \u2581be \u2581executed . \u2581This \u2581can \u2581be \u2581used \u2581to"], "bleu": 0.11809259173826657, "rouge_l": 0.3412587412587413}
{"id": 4976, "predictions": ["\u2581// \u2581 Unsubscribe \u2581removes \u2581the \u2581 unsubscribe \u2581from \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Unsubscribe \u2581 unsubscribe s \u2581a \u2581channel"], "bleu": 0.22997519112894443, "rouge_l": 0.5187074829931972}
{"id": 5716, "predictions": ["\u2581// \u2581 New Backend \u2581creates \u2581a \u2581new \u2581backend ."], "references": ["\u2581// \u2581 New Backend \u2581creates \u2581a \u2581logger \u2581backend \u2581from \u2581a \u2581 Writer ."], "bleu": 0.4362430640222756, "rouge_l": 0.7041847041847041}
{"id": 5613, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581two \u2581 Ed 25519 PublicKey \u2581matches \u2581the \u2581same \u2581// \u2581 key ."], "references": ["\u2581// \u2581 Equals \u2581compares \u2581two \u2581 ed 25519 \u2581public \u2581 keys ."], "bleu": 0.15774545980684188, "rouge_l": 0.538037486218302}
{"id": 4276, "predictions": ["\u2581// \u2581 Beginning Of Quarter \u2581returns \u2581the \u2581 month \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 Beginning Of Quarter \u2581beginning \u2581of \u2581 quarter"], "bleu": 0.34791594751284466, "rouge_l": 0.543026706231454}
{"id": 4266, "predictions": ["\u2581// \u2581 Bool Env Def \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581environment \u2581variable \u2581// \u2581or \u2581an \u2581error \u2581if \u2581the \u2581 env \u2581 exists \u2581or \u2581not ."], "references": ["\u2581// \u2581 Bool Env Def \u2581 get \u2581 environ e mnt \u2581variable \u2581and \u2581return \u2581bool ."], "bleu": 0.20222027842300222, "rouge_l": 0.4063280599500417}
{"id": 5972, "predictions": ["\u2581// \u2581Set Content \u2581sets \u2581the \u2581 content \u2581of \u2581the \u2581 Exception"], "references": ["\u2581// \u2581Set Content \u2581sets \u2581the \u2581regular \u2581 expr e sion \u2581that \u2581should \u2581match \u2581the \u2581 content \u2581of \u2581the \u2581// \u2581object ."], "bleu": 0.29607963330223647, "rouge_l": 0.5324927255092143}
{"id": 4161, "predictions": ["\u2581// \u2581 A \u2581 helper \u2581function \u2581to \u2581 encode \u2581the \u2581 URL \u2581 URL \u2581and \u2581 url"], "references": ["\u2581// \u2581This \u2581is \u2581run \u2581for \u2581each \u2581new \u2581request , \u2581 perf \u2581is \u2581important ."], "bleu": 0.07994607499472013, "rouge_l": 0.13132400430570507}
{"id": 4442, "predictions": ["\u2581// \u2581 Term \u2581returns \u2581a \u2581new \u2581matcher \u2581for \u2581the \u2581given \u2581request ."], "references": ["\u2581// \u2581 Term \u2581specifies \u2581that \u2581the \u2581matching \u2581should \u2581generate \u2581a \u2581value \u2581// \u2581and \u2581also \u2581match \u2581using \u2581a \u2581regular \u2581expression ."], "bleu": 0.11419664558459289, "rouge_l": 0.29901960784313725}
{"id": 4606, "predictions": ["\u2581// \u2581make Raft Peer \u2581returns \u2581a \u2581 raft . Peer \u2581that \u2581will \u2581 connect \u2581to \u2581the \u2581// \u2581given \u2581address ."], "references": ["\u2581// \u2581make Raft Peer \u2581converts \u2581a \u2581 net . Addr \u2581into \u2581a \u2581 raft . Peer . \u2581// \u2581 All \u2581peers \u2581must \u2581perform \u2581the \u2581 Addr - to - Peer"], "bleu": 0.22433199885261834, "rouge_l": 0.42468354430379746}
{"id": 4836, "predictions": ["\u2581// \u2581 New FromMap \u2581creates \u2581a \u2581new \u2581 Tree \u2581with \u2581the \u2581given \u2581 map ."], "references": ["\u2581// \u2581 New FromMap \u2581returns \u2581a \u2581new \u2581tree \u2581containing \u2581the \u2581 keys \u2581// \u2581from \u2581an \u2581existing \u2581 map"], "bleu": 0.2526354218721382, "rouge_l": 0.5366568914956013}
{"id": 4621, "predictions": ["\u2581// \u2581 Flush \u2581 flush es \u2581all \u2581messages \u2581in \u2581the \u2581sender"], "references": ["\u2581// \u2581 Flush \u2581 flush es \u2581all \u2581managed \u2581sender s . \u2581 Used \u2581for \u2581testing ."], "bleu": 0.40087110961023503, "rouge_l": 0.5734430082256169}
{"id": 4563, "predictions": ["\u2581// \u2581 Uni cast \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 route \u2581from \u2581the \u2581 route ."], "references": ["\u2581// \u2581 Uni cast \u2581returns \u2581the \u2581next \u2581 hop \u2581on \u2581the \u2581 unicast \u2581 route \u2581to \u2581the \u2581named \u2581peer , \u2581// \u2581based \u2581on \u2581 established \u2581and \u2581symmetric \u2581connections ."], "bleu": 0.20630893006462822, "rouge_l": 0.5398230088495575}
{"id": 5844, "predictions": ["\u2581// \u2581 Map \u2581returns \u2581a \u2581 slice \u2581of \u2581strings \u2581that \u2581match \u2581the \u2581given \u2581 iterator ."], "references": ["\u2581// \u2581 Map \u2581maps \u2581an \u2581array ' s \u2581 i item \u2581through \u2581an \u2581 iterator ."], "bleu": 0.2140909265975804, "rouge_l": 0.4375}
{"id": 4422, "predictions": ["\u2581// \u2581 logout Handler \u2581 - \u2581 logout \u2581 token"], "references": ["\u2581// \u2581 Deal \u2581with \u2581the \u2581 logout \u2581request ."], "bleu": 0.2086130724305753, "rouge_l": 0.42508710801393734}
{"id": 4172, "predictions": ["\u2581// \u2581 StartTime \u2581returns \u2581the \u2581time . Env \u2581 set ."], "references": ["\u2581// \u2581When \u2581the \u2581request \u2581entered \u2581the \u2581timer \u2581middleware ."], "bleu": 0.1354599427337814, "rouge_l": 0.3055091819699499}
{"id": 5628, "predictions": ["\u2581// \u2581 Log \u2581logs \u2581a \u2581message \u2581with \u2581 Log Time \u2581with \u2581the \u2581given \u2581attributes ."], "references": ["\u2581// \u2581 Log \u2581will \u2581log \u2581a \u2581message \u2581at \u2581the \u2581provided \u2581level \u2581to \u2581all \u2581added \u2581logger s \u2581with \u2581the \u2581timestamp \u2581 set \u2581to \u2581the \u2581time \u2581// \u2581 Log \u2581was \u2581called ."], "bleu": 0.08625382105559652, "rouge_l": 0.37731958762886597}
{"id": 4625, "predictions": ["\u2581// \u2581 Send JSON \u2581sends \u2581a \u2581 json \u2581 data \u2581to \u2581a \u2581 slack \u2581 Client ."], "references": ["\u2581// \u2581 Send JSON \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sends \u2581a \u2581JSON - encoded \u2581value \u2581// \u2581on \u2581the \u2581channel \u2581associated \u2581with \u2581 clientID ."], "bleu": 0.169264840217347, "rouge_l": 0.4143396226415094}
{"id": 5112, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Show Scroll Bottle \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . setShow Scroll Bottle n eck Rect s \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10542313565278208, "rouge_l": 0.40757238307349664}
{"id": 5757, "predictions": ["\u2581// \u2581 sort \u2581the \u2581 sort \u2581order \u2581by \u2581 sort ."], "references": ["\u2581// \u2581 sort \u2581must \u2581be \u2581called \u2581after \u2581all \u2581the \u2581adds , \u2581but \u2581before \u2581any \u2581find ."], "bleu": 0.14892408222374315, "rouge_l": 0.3584018801410106}
{"id": 4891, "predictions": ["\u2581// \u2581Set Line Dash \u2581sets \u2581the \u2581 dash \u2581 dash ."], "references": ["\u2581// \u2581Set Line Dash \u2581sets \u2581the \u2581line \u2581 dash \u2581pattern"], "bleu": 0.5706745777055999, "rouge_l": 0.768503937007874}
{"id": 5849, "predictions": ["\u2581// \u2581 Pad Left \u2581 trim s \u2581the \u2581 left \u2581 left \u2581to \u2581 n , \u2581 n \u2581and \u2581 n ."], "references": ["\u2581// \u2581 Pad Left \u2581pad s \u2581 s \u2581on \u2581 left \u2581side \u2581with \u2581 c \u2581until \u2581it \u2581has \u2581 length \u2581of \u2581 n ."], "bleu": 0.2250337965963669, "rouge_l": 0.5608203677510608}
{"id": 4702, "predictions": ["\u2581// \u2581 RequestHeaders \u2581returns \u2581the \u2581 headers \u2581of \u2581the \u2581task queue \u2581for \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581 Request \u2581returns \u2581the \u2581special \u2581task - queue \u2581HTTP \u2581request \u2581 headers \u2581for \u2581the \u2581current \u2581// \u2581task \u2581queue \u2581handler . \u2581Returns \u2581an \u2581error \u2581if \u2581called \u2581from \u2581outside \u2581a \u2581delay"], "bleu": 0.07869499290624131, "rouge_l": 0.36478405315614615}
{"id": 4534, "predictions": ["\u2581// \u2581 getConnection s \u2581returns \u2581a \u2581new \u2581 set \u2581of \u2581 active \u2581connections"], "references": ["\u2581// \u2581 Connections \u2581returns \u2581all \u2581the \u2581connections \u2581that \u2581the \u2581local \u2581peer \u2581is \u2581 aware \u2581of ."], "bleu": 0.12335276124847874, "rouge_l": 0.33851276359600446}
{"id": 5570, "predictions": ["\u2581// \u2581 App Uri \u2581creates \u2581a \u2581new \u2581 app ."], "references": ["\u2581// \u2581Gets \u2581an \u2581 app ' s \u2581endpoint \u2581with \u2581the \u2581specified \u2581 path"], "bleu": 0.13964659797714432, "rouge_l": 0.25487465181058494}
{"id": 4273, "predictions": ["\u2581// \u2581 Beginning ToValue \u2581returns \u2581the \u2581time . Time \u2581value \u2581of \u2581the \u2581 date ."], "references": ["\u2581// \u2581 Beginning OfDay \u2581beginning \u2581of \u2581day"], "bleu": 0.16188613565728213, "rouge_l": 0.3891547049441786}
{"id": 5336, "predictions": ["\u2581// \u2581Get No Dial \u2581returns \u2581true \u2581if \u2581the \u2581 dial \u2581is \u2581 dial ed ."], "references": ["\u2581// \u2581Get No Dial \u2581returns \u2581true \u2581if \u2581the \u2581no \u2581 dial \u2581option \u2581is \u2581 set \u2581in \u2581the \u2581context ."], "bleu": 0.4639399936968266, "rouge_l": 0.7488196411709158}
{"id": 6037, "predictions": ["\u2581// \u2581Set Dir name \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581file \u2581in \u2581the \u2581 File Sequence ."], "references": ["\u2581// \u2581Set \u2581a \u2581new \u2581 dirname \u2581for \u2581the \u2581sequence"], "bleu": 0.10802314890908067, "rouge_l": 0.3257676902536716}
{"id": 4429, "predictions": ["\u2581// \u2581 ByID \u2581returns \u2581the \u2581user \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 ByID \u2581finds \u2581a \u2581user \u2581by \u2581their \u2581 ID"], "bleu": 0.31702331385234306, "rouge_l": 0.7000000000000001}
{"id": 5360, "predictions": ["\u2581// \u2581new Buffer \u2581creates \u2581a \u2581new \u2581buffer ."], "references": ["\u2581// \u2581new Buffer \u2581returns \u2581a \u2581new \u2581buffer \u2581reading \u2581from \u2581 r \u2581at \u2581the \u2581given \u2581offset ."], "bleu": 0.1641932816209669, "rouge_l": 0.5502577319587628}
{"id": 5813, "predictions": ["\u2581// \u2581 Equal \u2581returns \u2581true \u2581if \u2581the \u2581 Token \u2581is \u2581equal \u2581to \u2581the \u2581 Token ."], "references": ["\u2581// \u2581 Equal \u2581reports \u2581whether \u2581tokens \u2581a , \u2581and \u2581 b , \u2581are \u2581equal . \u2581// \u2581 Two \u2581tokens \u2581are \u2581equal \u2581if \u2581both \u2581their \u2581types \u2581and \u2581values \u2581are \u2581equal ."], "bleu": 0.07309601795775379, "rouge_l": 0.2885135135135135}
{"id": 4291, "predictions": ["\u2581// \u2581 New Channel Memory Backend \u2581returns \u2581a \u2581new \u2581 Channel Memory Backend ."], "references": ["\u2581// \u2581 New Channel Memory Backend \u2581creates \u2581a \u2581simple \u2581in - memory \u2581logging \u2581backend \u2581which \u2581// \u2581utilize s \u2581a \u2581go \u2581channel \u2581for \u2581communication . \u2581// \u2581// \u2581 Start \u2581will \u2581automatically"], "bleu": 0.13951560524734033, "rouge_l": 0.3412587412587413}
{"id": 5955, "predictions": ["\u2581// \u2581 Only \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581operation \u2581is \u2581enabled ."], "references": ["\u2581// \u2581 Only \u2581will \u2581match \u2581if \u2581the \u2581operation \u2581is \u2581present \u2581in \u2581the \u2581provided \u2581list ."], "bleu": 0.20958378824668658, "rouge_l": 0.5809523809523809}
{"id": 6006, "predictions": ["\u2581// \u2581 close Inputs \u2581closes \u2581the \u2581 manager \u2581and \u2581 releases \u2581all \u2581the \u2581 manager \u2581// \u2581and \u2581 releases \u2581them ."], "references": ["\u2581// \u2581 Close Inputs \u2581closes \u2581the \u2581input \u2581channels \u2581indicating \u2581// \u2581that \u2581no \u2581more \u2581paths \u2581will \u2581be \u2581loaded ."], "bleu": 0.13817790393734294, "rouge_l": 0.36402387041773226}
{"id": 5473, "predictions": ["\u2581// \u2581new Archive \u2581creates \u2581a \u2581new \u2581 Archive S \u2581 data ."], "references": ["\u2581// \u2581new Archive 50 \u2581creates \u2581a \u2581new \u2581file Block Reader \u2581for \u2581a \u2581 Version \u2581 5 \u2581archive ."], "bleu": 0.1854582907850801, "rouge_l": 0.5791139240506329}
{"id": 4890, "predictions": ["\u2581// \u2581Set FillColor \u2581sets \u2581the \u2581 color \u2581of \u2581the \u2581 color ."], "references": ["\u2581// \u2581Set FillColor \u2581sets \u2581the \u2581 fill \u2581and \u2581 text \u2581 color"], "bleu": 0.5205510363053438, "rouge_l": 0.6666666666666666}
{"id": 5389, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581 Send \u2581 Send \u2581 auth \u2581to \u2581the \u2581given \u2581address ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581message ."], "bleu": 0.23287896954139942, "rouge_l": 0.5613496932515337}
{"id": 4880, "predictions": ["\u2581// \u2581 New Sync Folder Font Cache \u2581returns \u2581a \u2581new \u2581 Sync Folder Font Cache \u2581instance"], "references": ["\u2581// \u2581 New Sync Folder Font Cache \u2581creates \u2581 Sync Folder Font Cache"], "bleu": 0.630190855592386, "rouge_l": 0.8433179723502303}
{"id": 6049, "predictions": ["\u2581// \u2581JSON Doc \u2581parses \u2581a \u2581JSON \u2581document \u2581into \u2581a \u2581JSON \u2581 json \u2581file ."], "references": ["\u2581// \u2581JSON Doc \u2581 loads \u2581a \u2581 json \u2581document \u2581from \u2581either \u2581a \u2581file \u2581or \u2581a \u2581remote \u2581 url"], "bleu": 0.16705227166855924, "rouge_l": 0.42785571142284573}
{"id": 4286, "predictions": ["\u2581// \u2581 Between \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 major \u2581and \u2581end \u2581of \u2581the \u2581 min \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Between \u2581check \u2581time \u2581between \u2581the \u2581begin , \u2581end \u2581time \u2581or \u2581not"], "bleu": 0.1258220555845937, "rouge_l": 0.31508264462809915}
{"id": 4718, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581a \u2581 key \u2581from \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581 entity \u2581for \u2581the \u2581given \u2581 key ."], "bleu": 0.2867861844514351, "rouge_l": 0.6354166666666667}
{"id": 4309, "predictions": ["\u2581// \u2581 LogLevel \u2581returns \u2581the \u2581log \u2581level \u2581of \u2581the \u2581given \u2581level ."], "references": ["\u2581// \u2581 LogLevel \u2581returns \u2581the \u2581log \u2581level \u2581from \u2581a \u2581string \u2581representation ."], "bleu": 0.5760844201603896, "rouge_l": 0.6666666666666666}
{"id": 4558, "predictions": ["\u2581// \u2581fetch \u2581the \u2581 head \u2581of \u2581the \u2581peer \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Like \u2581fetch , \u2581but \u2581 increments \u2581local \u2581 ref count ."], "bleu": 0.11633270842295028, "rouge_l": 0.3728606356968216}
{"id": 4502, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581a \u2581JSON \u2581representation \u2581of \u2581the \u2581 Bool"], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581 json . Marshaler . \u2581// \u2581It \u2581will \u2581 encode \u2581null \u2581if \u2581 this \u2581 Bool \u2581is \u2581null ."], "bleu": 0.06283304994531025, "rouge_l": 0.2341650671785029}
{"id": 4514, "predictions": ["\u2581// \u2581 Marshal Text \u2581encodes \u2581 Int \u2581to \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Marshal Text \u2581implements \u2581encoding . Text Marshaler . \u2581// \u2581It \u2581will \u2581 encode \u2581a \u2581zero \u2581if \u2581 this \u2581 Int \u2581is \u2581null ."], "bleu": 0.1328103037024611, "rouge_l": 0.3983673469387755}
{"id": 6090, "predictions": ["\u2581// \u2581to Go ReturnType Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 name \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Produce \u2581action \u2581return \u2581 type \u2581 name"], "bleu": 0.10657284485555579, "rouge_l": 0.3152454780361757}
{"id": 4699, "predictions": ["\u2581// \u2581 Is TimeoutError \u2581checks \u2581if \u2581the \u2581error \u2581is \u2581a \u2581timeout \u2581error"], "references": ["\u2581// \u2581 Is TimeoutError \u2581reports \u2581whether \u2581err \u2581is \u2581a \u2581timeout \u2581error ."], "bleu": 0.48442732379638637, "rouge_l": 0.6666666666666666}
{"id": 5730, "predictions": ["\u2581// \u2581 Critical \u2581logs \u2581a \u2581log \u2581level \u2581and \u2581logs \u2581the \u2581 critical \u2581log \u2581level ."], "references": ["\u2581// \u2581 Critical \u2581formats \u2581message \u2581using \u2581the \u2581default \u2581formats \u2581for \u2581its \u2581 operands , \u2581 prepend s \u2581// \u2581the \u2581prefix \u2581as \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level"], "bleu": 0.06698000413523514, "rouge_l": 0.2515463917525773}
{"id": 5258, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Script To Evaluate On New Document \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . remove Script To Evaluate On New Document \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.3500496529700815, "rouge_l": 0.6269270298047277}
{"id": 6012, "predictions": ["\u2581// \u2581 z fill Int \u2581returns \u2581the \u2581 z - like \u2581 x \u2581 th \u2581integer \u2581value ."], "references": ["\u2581// \u2581 Left \u2581pad s \u2581an \u2581int \u2581to \u2581a \u2581given \u2581with , \u2581using \u2581\"0\" . \u2581// \u2581If \u2581the \u2581string \u2581begins \u2581with \u2581a \u2581negative \u2581\"-\" \u2581character , \u2581then \u2581// \u2581padding \u2581is"], "bleu": 0.05227831640033273, "rouge_l": 0.11960784313725491}
{"id": 4359, "predictions": ["\u2581// \u2581 Join Page \u2581creates \u2581a \u2581new \u2581 Page \u2581with \u2581the \u2581given \u2581 url ."], "references": ["\u2581// \u2581 Join Page \u2581creates \u2581a \u2581 Page \u2581using \u2581existing \u2581session \u2581 URL . \u2581This \u2581method \u2581takes \u2581 Options \u2581// \u2581but \u2581respect s \u2581only \u2581the \u2581 HTTPClient \u2581 Option \u2581if"], "bleu": 0.1629154157720992, "rouge_l": 0.41924398625429554}
{"id": 4362, "predictions": ["\u2581// \u2581 Navigate \u2581 navigate s \u2581to \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Navigate \u2581 navigate s \u2581to \u2581the \u2581provided \u2581 URL ."], "bleu": 0.6819421962598898, "rouge_l": 0.8628005657708628}
{"id": 5722, "predictions": ["\u2581// \u2581 Debug \u2581logs \u2581a \u2581 debug \u2581level ."], "references": ["\u2581// \u2581 Debug \u2581formats \u2581message \u2581using \u2581the \u2581default \u2581formats \u2581for \u2581its \u2581 operands , \u2581 prepend s \u2581// \u2581the \u2581prefix \u2581as \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level"], "bleu": 0.026935118370575124, "rouge_l": 0.18697318007662836}
{"id": 4604, "predictions": ["\u2581// \u2581 Gossip \u2581returns \u2581the \u2581 gossip \u2581 status \u2581of \u2581the \u2581peer ."], "references": ["\u2581// \u2581Return \u2581a \u2581copy \u2581of \u2581our \u2581complete \u2581state ."], "bleu": 0.1135935489027116, "rouge_l": 0.2819722650231125}
{"id": 4101, "predictions": ["\u2581// \u2581 get \u2581returns \u2581a \u2581builder \u2581from \u2581the \u2581 name \u2581of \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 get \u2581gets \u2581the \u2581named \u2581builder \u2581from \u2581the \u2581registry ."], "bleu": 0.2204887282071633, "rouge_l": 0.53643216080402}
{"id": 4577, "predictions": ["\u2581// \u2581 Read \u2581the \u2581 Peer Name \u2581from \u2581the \u2581 hex a decimal \u2581string ."], "references": ["\u2581// \u2581bytes \u2581encodes \u2581 Peer Name \u2581as \u2581a \u2581 byte \u2581 slice ."], "bleu": 0.18207052811092136, "rouge_l": 0.43416370106761565}
{"id": 6050, "predictions": ["\u2581// \u2581Add Loader \u2581 add \u2581a \u2581 Doc Matcher \u2581to \u2581the \u2581 loader \u2581that \u2581matches \u2581the \u2581// \u2581 loader \u2581that \u2581matches \u2581the \u2581 Doc ."], "references": ["\u2581// \u2581Add Loader \u2581for \u2581a \u2581document"], "bleu": 0.09562406574442013, "rouge_l": 0.2901307966706302}
{"id": 4318, "predictions": ["\u2581// \u2581 IsEnabled For \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581level \u2581is \u2581enabled \u2581for \u2581the \u2581given \u2581level ."], "references": ["\u2581// \u2581 IsEnabled For \u2581returns \u2581true \u2581if \u2581any \u2581of \u2581the \u2581 backends \u2581are \u2581enabled \u2581for \u2581it ."], "bleu": 0.4450050658086207, "rouge_l": 0.6470588235294118}
{"id": 5820, "predictions": ["\u2581// \u2581 Camel ize \u2581 turn s \u2581a \u2581string \u2581to \u2581a \u2581 camel - case d \u2581 form"], "references": ["\u2581// \u2581 Camel ize \u2581return \u2581new \u2581string \u2581which \u2581removes \u2581any \u2581underscores \u2581or \u2581 dashes \u2581and \u2581convert \u2581a \u2581string \u2581into \u2581 camel \u2581 casing ."], "bleu": 0.1830249161910537, "rouge_l": 0.4642313546423136}
{"id": 5341, "predictions": ["\u2581// \u2581 Delete MostRecent Bytes \u2581removes \u2581the \u2581 data \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Delete MostRecent Bytes \u2581 trim s \u2581back \u2581the \u2581last \u2581 n \u2581bytes \u2581written ."], "bleu": 0.30740809996828294, "rouge_l": 0.541620421753607}
{"id": 5726, "predictions": ["\u2581// \u2581 Warn \u2581logs \u2581a \u2581 warning \u2581level ."], "references": ["\u2581// \u2581 Warn \u2581formats \u2581message \u2581using \u2581the \u2581default \u2581formats \u2581for \u2581its \u2581 operands , \u2581 prepend s \u2581// \u2581the \u2581prefix \u2581as \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level"], "bleu": 0.026935118370575124, "rouge_l": 0.18697318007662836}
{"id": 4884, "predictions": ["\u2581// \u2581 New Graphic Context \u2581creates \u2581a \u2581new \u2581 Graphic \u2581context"], "references": ["\u2581// \u2581 New Graphic Context \u2581creates \u2581a \u2581new \u2581 pdf \u2581 Graphic Context"], "bleu": 0.707503242868558, "rouge_l": 0.8209959623149395}
{"id": 4747, "predictions": ["\u2581// \u2581import Spec \u2581 translate s \u2581the \u2581 path \u2581to \u2581a \u2581 path ."], "references": ["\u2581// \u2581import Spec \u2581returns \u2581the \u2581import \u2581spec \u2581if \u2581 f \u2581imports \u2581 path , \u2581// \u2581or \u2581nil \u2581otherwise ."], "bleu": 0.15149279515737066, "rouge_l": 0.471953578336557}
{"id": 4958, "predictions": ["\u2581// \u2581 Compare \u2581compares \u2581two \u2581version \u2581and \u2581compares \u2581two \u2581version ."], "references": ["\u2581// \u2581 Compare \u2581tests \u2581if \u2581 v \u2581is \u2581less \u2581than , \u2581equal \u2581to , \u2581or \u2581greater \u2581than \u2581version B , \u2581// \u2581returning \u2581-1, \u25810, \u2581or \u2581 +1 \u2581respectively ."], "bleu": 0.045678077536243464, "rouge_l": 0.23123578468536773}
{"id": 5801, "predictions": ["\u2581// \u2581 eval \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 left - value \u2581pair ."], "references": ["\u2581// \u2581 eval \u2581is \u2581 EVAL \u2581from \u2581the \u2581paper s ."], "bleu": 0.17609282679116184, "rouge_l": 0.4747081712062256}
{"id": 5461, "predictions": ["\u2581// \u2581find Fake Function For \u2581returns \u2581the \u2581first \u2581function \u2581that \u2581matches \u2581the \u2581given \u2581function \u2581// \u2581and \u2581returns \u2581the \u2581first \u2581matching \u2581function ."], "references": ["\u2581// find Fake Function For \u2581returns \u2581a \u2581 faker \u2581function \u2581for \u2581a \u2581 fa ko \u2581 identifier"], "bleu": 0.1676784955078518, "rouge_l": 0.314974182444062}
{"id": 6039, "predictions": ["\u2581// \u2581Set Padding Style \u2581sets \u2581the \u2581 style \u2581 style \u2581of \u2581the \u2581sequence \u2581of \u2581 text \u2581to \u2581the \u2581 style ."], "references": ["\u2581// \u2581Set \u2581a \u2581new \u2581padding \u2581 style \u2581for \u2581mapping \u2581between \u2581characters \u2581and \u2581// \u2581their \u2581 numeric \u2581 width"], "bleu": 0.10457995018881573, "rouge_l": 0.31202046035805625}
{"id": 5720, "predictions": ["\u2581// \u2581 Trace \u2581logs \u2581a \u2581 debug \u2581log ."], "references": ["\u2581// \u2581 Trace \u2581formats \u2581message \u2581using \u2581the \u2581default \u2581formats \u2581for \u2581its \u2581 operands , \u2581 prepend s \u2581// \u2581the \u2581prefix \u2581as \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level"], "bleu": 0.028191241370329752, "rouge_l": 0.23371647509578544}
{"id": 4159, "predictions": ["\u2581// \u2581Make Router \u2581creates \u2581a \u2581 router \u2581with \u2581the \u2581given \u2581 route ."], "references": ["\u2581// \u2581Make Router \u2581returns \u2581the \u2581 router \u2581 app . \u2581Given \u2581a \u2581 set \u2581of \u2581 Routes , \u2581it \u2581dispatches \u2581the \u2581request \u2581to \u2581the \u2581// \u2581 HandlerFunc \u2581of \u2581the \u2581first"], "bleu": 0.06869341652947215, "rouge_l": 0.30391459074733096}
{"id": 5970, "predictions": ["\u2581// \u2581Set Object \u2581 - \u2581 set \u2581the \u2581object \u2581of \u2581a \u2581object ."], "references": ["\u2581// \u2581Set Object \u2581sets \u2581the \u2581regular \u2581 expr e sion \u2581that \u2581should \u2581match \u2581the \u2581 name \u2581of \u2581the \u2581// \u2581object ."], "bleu": 0.1298234135637484, "rouge_l": 0.45143385753931536}
{"id": 4943, "predictions": ["\u2581// \u2581 Tag String To Level \u2581returns \u2581a \u2581tag \u2581from \u2581the \u2581 g g ."], "references": ["\u2581// \u2581 Tag String To Level \u2581converts \u2581level \u2581string \u2581to \u2581 Gl g . LEVEL"], "bleu": 0.42311785416105785, "rouge_l": 0.6}
{"id": 5728, "predictions": ["\u2581// \u2581 Error \u2581logs \u2581a \u2581 warning \u2581level \u2581and \u2581exits \u2581with \u2581the \u2581 Error"], "references": ["\u2581// \u2581 Error \u2581formats \u2581message \u2581using \u2581the \u2581default \u2581formats \u2581for \u2581its \u2581 operands , \u2581 prepend s \u2581// \u2581the \u2581prefix \u2581as \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level"], "bleu": 0.0642578093873745, "rouge_l": 0.2986013986013986}
{"id": 5724, "predictions": ["\u2581// \u2581 Info \u2581logs \u2581a \u2581log \u2581level \u2581and \u2581logs \u2581the \u2581 debug \u2581level ."], "references": ["\u2581// \u2581 Info \u2581formats \u2581message \u2581using \u2581the \u2581default \u2581formats \u2581for \u2581its \u2581 operands , \u2581 prepend s \u2581// \u2581the \u2581prefix \u2581as \u2581necessary , \u2581and \u2581writes \u2581to \u2581log \u2581with \u2581 Level"], "bleu": 0.062393275451015855, "rouge_l": 0.21328671328671328}
{"id": 5013, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 bill y . Interface \u2581interface \u2581for \u2581 ci b ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Memory . for ci b ly Purge JavaScript Memory \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1290955842133684, "rouge_l": 0.41739980449657876}
{"id": 4126, "predictions": ["\u2581// \u2581available \u2581returns \u2581true \u2581if \u2581the \u2581 app \u2581has \u2581unit \u2581 this \u2581 app \u2581has \u2581been \u2581 set ."], "references": ["\u2581// \u2581available \u2581returns \u2581true \u2581if \u2581at \u2581least \u2581one \u2581of \u2581 N \u2581units \u2581is \u2581started \u2581or \u2581 unreachable ."], "bleu": 0.2610490903329069, "rouge_l": 0.43455031166518254}
{"id": 6041, "predictions": ["\u2581// \u2581Set Frame Range \u2581sets \u2581the \u2581 Frame ' s \u2581 Frame Range \u2581field ."], "references": ["\u2581// \u2581Set \u2581a \u2581new \u2581 Frame Set , \u2581by \u2581way \u2581of \u2581providing \u2581a \u2581string \u2581frame \u2581range . \u2581// \u2581If \u2581the \u2581frame \u2581range \u2581cannot \u2581be \u2581parsed , \u2581an \u2581error \u2581will \u2581be"], "bleu": 0.054474052414397116, "rouge_l": 0.20962199312714777}
{"id": 4376, "predictions": ["\u2581// \u2581 Switch ToParent Frame \u2581 switches \u2581the \u2581current \u2581frame \u2581to \u2581the \u2581current \u2581frame ."], "references": ["\u2581// \u2581 Switch ToParent Frame \u2581 focus es \u2581on \u2581the \u2581immediate \u2581parent \u2581frame \u2581of \u2581a \u2581frame \u2581selected \u2581// \u2581by \u2581 Selection . Frame . \u2581 After \u2581switching , \u2581all \u2581new"], "bleu": 0.153383394020349, "rouge_l": 0.41924398625429554}
{"id": 4764, "predictions": ["\u2581// \u2581with Deadline \u2581returns \u2581a \u2581context \u2581that \u2581invokes \u2581the \u2581given \u2581function ."], "references": ["\u2581// \u2581with Deadline \u2581is \u2581like \u2581context . With Deadline , \u2581except \u2581it \u2581ignores \u2581the \u2581zero \u2581deadline ."], "bleu": 0.14663139543109924, "rouge_l": 0.4013157894736842}
{"id": 5943, "predictions": ["\u2581// \u2581 Last \u2581returns \u2581the \u2581last \u2581 span \u2581in \u2581the \u2581 trace ."], "references": ["\u2581// \u2581 Last \u2581returns \u2581the \u2581last \u2581pushed \u2581 span \u2581or \u2581the \u2581root \u2581 span ."], "bleu": 0.44091152900481767, "rouge_l": 0.7757225433526012}
{"id": 4198, "predictions": ["\u2581// \u2581 Flush \u2581 flush es \u2581the \u2581 flush er \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581Make \u2581sure \u2581the \u2581local \u2581 WriteHeader \u2581is \u2581called , \u2581and \u2581 call \u2581the \u2581parent \u2581 Flush . \u2581// \u2581 Provided \u2581in \u2581order \u2581to \u2581implement \u2581the \u2581http . Flusher \u2581interface"], "bleu": 0.06099066177166333, "rouge_l": 0.3353951890034364}
{"id": 5739, "predictions": ["\u2581// \u2581 New Permission \u2581returns \u2581a \u2581new \u2581 Permission"], "references": ["\u2581// \u2581 New Permission \u2581initialize \u2581permission"], "bleu": 0.392814650900513, "rouge_l": 0.5532879818594103}
{"id": 4437, "predictions": ["\u2581// \u2581 Digest \u2581returns \u2581a \u2581 URL \u2581from \u2581the \u2581 URL"], "references": ["\u2581// \u2581Get \u2581the \u2581address \u2581given \u2581a \u2581 URL"], "bleu": 0.23462350320527994, "rouge_l": 0.433392539964476}
{"id": 4379, "predictions": ["\u2581// \u2581 Close Window \u2581closes \u2581the \u2581window ."], "references": ["\u2581// \u2581 Close Window \u2581closes \u2581the \u2581 active \u2581window ."], "bleu": 0.6257106818159155, "rouge_l": 0.8714285714285713}
{"id": 6086, "predictions": ["\u2581// \u2581 append Sorted \u2581adds \u2581a \u2581 slice \u2581of \u2581 Action Param \u2581to \u2581a \u2581 slice \u2581of \u2581 Action Param ."], "references": ["\u2581// \u2581 Sort \u2581action \u2581params \u2581by \u2581 name"], "bleu": 0.0821610732492254, "rouge_l": 0.2250922509225092}
{"id": 4800, "predictions": ["\u2581// \u2581 Classic Context FromContext \u2581returns \u2581the \u2581context \u2581from \u2581the \u2581context ."], "references": ["\u2581// \u2581This \u2581is \u2581only \u2581for \u2581 classic \u2581 App \u2581 Engine \u2581 adapters ."], "bleu": 0.10459315495983224, "rouge_l": 0.22761194029850743}
{"id": 5467, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 Variable \u2581counter \u2581value ."], "references": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 EW MA ' s \u2581value ."], "bleu": 0.4655733382959378, "rouge_l": 0.6876006441223833}
{"id": 5969, "predictions": ["\u2581// \u2581Set Rule \u2581sets \u2581the \u2581rule \u2581for \u2581a \u2581given \u2581rule ."], "references": ["\u2581// \u2581Set Rule \u2581sets \u2581the \u2581regular \u2581 expr e sion \u2581that \u2581should \u2581match \u2581the \u2581 name \u2581of \u2581the \u2581rule ."], "bleu": 0.2151822078735031, "rouge_l": 0.42914572864321615}
{"id": 4277, "predictions": ["\u2581// \u2581 Beginning OfYear \u2581returns \u2581the \u2581 date \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 Beginning OfYear \u2581 Beginning OfYear \u2581beginning \u2581of \u2581 year"], "bleu": 0.2891784933232572, "rouge_l": 0.507628294036061}
{"id": 4241, "predictions": ["\u2581// \u2581 New Re trie r \u2581creates \u2581a \u2581new \u2581 Re trie r ."], "references": ["\u2581// \u2581 New Re trie r \u2581creates \u2581a \u2581new \u2581 Re trie r \u2581using \u2581given \u2581properties ."], "bleu": 0.7598940764631166, "rouge_l": 0.8877338877338876}
{"id": 6096, "predictions": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581the \u2581 FileUpload \u2581 FileUpload \u2581 style \u2581to \u2581a \u2581JSON \u2581 byte \u2581array ."], "references": ["\u2581// \u2581MarshalJSON \u2581just \u2581inserts \u2581the \u2581 contents \u2581of \u2581the \u2581file \u2581from \u2581disk \u2581 inline \u2581into \u2581the \u2581 json"], "bleu": 0.12257617673006654, "rouge_l": 0.3333333333333333}
{"id": 5617, "predictions": ["\u2581// \u2581 Edit Script For Strings \u2581 edit \u2581the \u2581 script \u2581to \u2581a \u2581 set \u2581of \u2581 script s ."], "references": ["\u2581// \u2581 Edit Script For Strings \u2581returns \u2581an \u2581 optimal \u2581 edit \u2581 script \u2581to \u2581 turn \u2581source \u2581into \u2581// \u2581target ."], "bleu": 0.3506613942450762, "rouge_l": 0.6137770897832818}
{"id": 4793, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Key ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 key ."], "bleu": 0.8265168183793802, "rouge_l": 0.9090909090909091}
{"id": 4275, "predictions": ["\u2581// \u2581 Beginning OfMonth \u2581returns \u2581the \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 Beginning OfMonth \u2581beginning \u2581of \u2581 month"], "bleu": 0.3026643726685863, "rouge_l": 0.5187074829931972}
{"id": 4230, "predictions": ["\u2581// \u2581Get Version JSON \u2581returns \u2581the \u2581JSON \u2581version \u2581of \u2581the \u2581 Version ."], "references": ["\u2581// \u2581Get Version JSON \u2581returns \u2581 Ku bic or n \u2581version \u2581in \u2581JSON \u2581 format ."], "bleu": 0.3156128516923115, "rouge_l": 0.541620421753607}
{"id": 4285, "predictions": ["\u2581// \u2581Must Parse \u2581is \u2581like \u2581Parse \u2581but \u2581panic s \u2581if \u2581the \u2581 type \u2581is \u2581invalid ."], "references": ["\u2581// \u2581Must Parse \u2581must \u2581parse \u2581string \u2581to \u2581time \u2581or \u2581it \u2581will \u2581panic"], "bleu": 0.1513851459876605, "rouge_l": 0.2932692307692307}
{"id": 4879, "predictions": ["\u2581// \u2581 New Folder Font Cache \u2581returns \u2581a \u2581new \u2581 Folder Font Cache"], "references": ["\u2581// \u2581 New Folder Font Cache \u2581creates \u2581 Folder Font Cache"], "bleu": 0.6162607099729586, "rouge_l": 0.8460471567267683}
{"id": 4102, "predictions": ["\u2581// \u2581 Registry \u2581returns \u2581a \u2581list \u2581of \u2581all \u2581 plugins \u2581in \u2581the \u2581 Registry ."], "references": ["\u2581// \u2581 Registry \u2581returns \u2581the \u2581list \u2581of \u2581registered \u2581 builders ."], "bleu": 0.28787878181011267, "rouge_l": 0.6329442282749675}
{"id": 4211, "predictions": ["\u2581// \u2581 Async Close \u2581 close \u2581the \u2581partition \u2581consumer"], "references": ["\u2581// \u2581 Async Close \u2581implements \u2581 Partition Consumer"], "bleu": 0.4111336169005197, "rouge_l": 0.594541910331384}
{"id": 4754, "predictions": ["\u2581// \u2581 isEmpty String \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581expression \u2581is \u2581a \u2581string ."], "references": ["\u2581// \u2581 isEmpty String \u2581returns \u2581true \u2581if \u2581 n \u2581is \u2581an \u2581 empty \u2581string \u2581literal ."], "bleu": 0.4467092575755771, "rouge_l": 0.6587473002159828}
{"id": 5791, "predictions": ["\u2581// \u2581 Read Uintptr \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Read Uintptr \u2581returns \u2581a \u2581uint \u2581of \u2581pointer \u2581 size \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.2285087158214416, "rouge_l": 0.4412296564195298}
{"id": 5040, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Prim c is e \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Profiler . start Pre c is e Coverage \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16171157788697413, "rouge_l": 0.48139797068771134}
{"id": 4466, "predictions": ["\u2581// \u2581 As Type \u2581returns \u2581a \u2581 Message \u2581representing \u2581 this \u2581message ."], "references": ["\u2581// \u2581 As Type \u2581specifies \u2581that \u2581the \u2581 content \u2581sent \u2581through \u2581to \u2581the \u2581// \u2581consumer \u2581handler \u2581should \u2581be \u2581sent \u2581as \u2581the \u2581given \u2581 type"], "bleu": 0.1240755029749901, "rouge_l": 0.3078216989066443}
{"id": 5928, "predictions": ["\u2581// \u2581 New Catalog \u2581creates \u2581a \u2581new \u2581 Catalog \u2581instance ."], "references": ["\u2581// \u2581 New Catalog \u2581will \u2581create \u2581a \u2581new \u2581catalog ."], "bleu": 0.37700638045494705, "rouge_l": 0.6724409448818898}
{"id": 5892, "predictions": ["\u2581// \u2581 New Watcher \u2581creates \u2581a \u2581new \u2581watcher \u2581for \u2581the \u2581watcher"], "references": ["\u2581// \u2581 New Watcher \u2581creates \u2581and \u2581returns \u2581a \u2581new \u2581watcher ."], "bleu": 0.53107253497887, "rouge_l": 0.7272727272727273}
{"id": 4579, "predictions": ["\u2581// \u2581send All Gossip \u2581 marks \u2581all \u2581 gossip \u2581 gossip \u2581messages \u2581to \u2581the \u2581 router"], "references": ["\u2581// \u2581 Relay \u2581all \u2581pending \u2581 gossip \u2581 data \u2581for \u2581each \u2581channel \u2581via \u2581random \u2581 neighbours ."], "bleu": 0.1599447003141318, "rouge_l": 0.4219367588932806}
{"id": 5093, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 track \u2581interface \u2581for \u2581origin ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Storage . un track Cache Storage For Origin \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10182269233047068, "rouge_l": 0.3538283062645011}
{"id": 4356, "predictions": ["\u2581// \u2581Find For App ium \u2581returns \u2581the \u2581 set \u2581of \u2581matched \u2581elements \u2581that \u2581match \u2581the \u2581given \u2581 text \u2581// \u2581 set \u2581in \u2581the \u2581 set \u2581of \u2581matched \u2581elements ."], "references": ["\u2581// \u2581 First ByClass \u2581finds \u2581the \u2581first \u2581element \u2581with \u2581a \u2581given \u2581 CSS \u2581 class ."], "bleu": 0.07772174600740504, "rouge_l": 0.32820906994619525}
{"id": 4933, "predictions": ["\u2581// \u2581 GetCurrent Mode \u2581returns \u2581the \u2581current \u2581 product \u2581of \u2581the \u2581current \u2581 VM ."], "references": ["\u2581// \u2581 GetCurrent Mode \u2581returns \u2581current \u2581logging \u2581mode"], "bleu": 0.31314224813827346, "rouge_l": 0.5520361990950226}
{"id": 5114, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Show Viewport Size \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . setShow Viewport Size On Resize \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12876410866020174, "rouge_l": 0.44309927360774815}
{"id": 5633, "predictions": ["\u2581// \u2581 New Log Adapter For \u2581returns \u2581a \u2581new \u2581 Log Adapter For \u2581instance ."], "references": ["\u2581// \u2581 New Log Adapter For \u2581creates \u2581a \u2581 Log Adapter \u2581that \u2581 wraps \u2581the \u2581given \u2581log er \u2581with \u2581the \u2581// \u2581given \u2581attributes ."], "bleu": 0.2630106121729997, "rouge_l": 0.5415657788539144}
{"id": 5598, "predictions": ["\u2581// \u2581 Unmarshal ECDSA PrivateKey \u2581decodes \u2581a \u2581 ECDSA \u2581private \u2581 key \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Unmarshal ECDSA PrivateKey \u2581returns \u2581a \u2581private \u2581 key \u2581from \u2581 x 509 \u2581bytes"], "bleu": 0.3751840463233443, "rouge_l": 0.6610837438423645}
{"id": 4639, "predictions": ["\u2581// \u2581 Flush \u2581 flush es \u2581all \u2581 data \u2581from \u2581the \u2581 memcache ."], "references": ["\u2581// \u2581 Flush \u2581 flush es \u2581all \u2581 items \u2581from \u2581 memcache ."], "bleu": 0.6606328636027614, "rouge_l": 0.8948655256723717}
{"id": 5887, "predictions": ["\u2581// \u2581 Run \u2581is \u2581a \u2581 functional \u2581option \u2581to \u2581 get \u2581all \u2581 authorizer \u2581on \u2581the \u2581policy"], "references": ["\u2581// \u2581 Run \u2581will \u2581 authorize \u2581immediately \u2581and \u2581return \u2581the \u2581provided \u2581list \u2581of \u2581enforce rs ."], "bleu": 0.1487964117124549, "rouge_l": 0.3046953046953047}
{"id": 6092, "predictions": ["\u2581// \u2581 Guess \u2581the \u2581 json \u2581 format \u2581of \u2581the \u2581interface"], "references": ["\u2581// \u2581Return \u2581 dump able \u2581representation \u2581of \u2581given \u2581object"], "bleu": 0.1354599427337814, "rouge_l": 0.3055091819699499}
{"id": 5347, "predictions": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581buffer \u2581to \u2581the \u2581buffer ."], "references": ["\u2581// \u2581 Reset \u2581quickly \u2581for get s \u2581any \u2581 data \u2581stored \u2581in \u2581the \u2581 ring \u2581buffer . \u2581The \u2581// \u2581 data \u2581is \u2581still \u2581there , \u2581but \u2581the \u2581 ring \u2581buffer"], "bleu": 0.04178908527180245, "rouge_l": 0.32105263157894737}
{"id": 5674, "predictions": ["\u2581// \u2581 Lookup \u2581returns \u2581the \u2581 Codec \u2581for \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Lookup \u2581returns \u2581the \u2581codec \u2581associated \u2581with \u2581 mimetype , \u2581ok \u2581is \u2581 set \u2581to \u2581true \u2581or \u2581false \u2581// \u2581based \u2581on \u2581whether \u2581a \u2581codec \u2581was \u2581found ."], "bleu": 0.12213161291155236, "rouge_l": 0.36609152288072017}
{"id": 5042, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Stop \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Profiler . stop Pre c is e Coverage \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.08148329314150464, "rouge_l": 0.3004926108374384}
{"id": 4366, "predictions": ["\u2581// \u2581 Clear Cookies \u2581 clear s \u2581all \u2581cookies \u2581in \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Clear Cookies \u2581deletes \u2581all \u2581cookies \u2581on \u2581the \u2581 page ."], "bleu": 0.4480304273880272, "rouge_l": 0.7800511508951408}
{"id": 4960, "predictions": ["\u2581// \u2581 Bump Major \u2581sets \u2581the \u2581version \u2581 1 \u2581 major ."], "references": ["\u2581// \u2581 Bump Major \u2581 increments \u2581the \u2581 Major \u2581field \u2581by \u2581 1 \u2581and \u2581resets \u2581all \u2581other \u2581fields \u2581to \u2581their \u2581default \u2581values"], "bleu": 0.15392159388379378, "rouge_l": 0.391025641025641}
{"id": 4183, "predictions": ["\u2581// \u2581 Hijack \u2581 hijack s \u2581the \u2581connection \u2581to \u2581the \u2581underlying \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 Provided \u2581in \u2581order \u2581to \u2581implement \u2581the \u2581http . Hijack er \u2581interface ."], "bleu": 0.1437791910008819, "rouge_l": 0.35714285714285715}
{"id": 5394, "predictions": ["\u2581// \u2581 Delete Header \u2581deletes \u2581the \u2581header \u2581from \u2581the \u2581envelope ."], "references": ["\u2581// \u2581 Delete Header \u2581deletes \u2581given \u2581header ."], "bleu": 0.44833867003844585, "rouge_l": 0.7584369449378331}
{"id": 5554, "predictions": ["\u2581// \u2581 First Suffix \u2581returns \u2581the \u2581first \u2581suffix \u2581of \u2581the \u2581 set \u2581of \u2581strings ."], "references": ["\u2581// \u2581Return \u2581the \u2581first \u2581suffix \u2581found \u2581or \u2581the \u2581 empty \u2581string ."], "bleu": 0.195647514979229, "rouge_l": 0.5291201982651798}
{"id": 4374, "predictions": ["\u2581// \u2581 Confirm Popup \u2581 confirm s \u2581the \u2581 page \u2581of \u2581the \u2581 page \u2581of \u2581 confirmation \u2581 page ."], "references": ["\u2581// \u2581 Confirm Popup \u2581 confirm s \u2581an \u2581alert , \u2581 confirm , \u2581or \u2581prompt \u2581popup ."], "bleu": 0.34772504705825924, "rouge_l": 0.493705035971223}
{"id": 6083, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581API \u2581API ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581 Self - Service \u2581API \u2581client ."], "bleu": 0.39805020134303426, "rouge_l": 0.6499238964992391}
{"id": 4158, "predictions": ["\u2581// \u2581 WriteHeader \u2581implements \u2581the \u2581 Recorder \u2581interface ."], "references": ["\u2581// \u2581 Record \u2581the \u2581 status \u2581 code ."], "bleu": 0.24446151121745052, "rouge_l": 0.5555555555555556}
{"id": 5543, "predictions": ["\u2581// \u2581Remove Last N Runes \u2581removes \u2581the \u2581last \u2581 length \u2581of \u2581the \u2581 S now st \u2581mode ."], "references": ["\u2581// \u2581Remove \u2581the \u2581last \u2581` n ` \u2581 runes \u2581from \u2581the \u2581 S now ball Word . \u2581//"], "bleu": 0.25543184713657474, "rouge_l": 0.5555555555555556}
{"id": 4170, "predictions": ["\u2581// \u2581 Remote User \u2581returns \u2581the \u2581user ' s \u2581 username \u2581and \u2581 username ."], "references": ["\u2581// \u2581 As \u2581stored \u2581by \u2581the \u2581 auth \u2581 middlewares ."], "bleu": 0.13380161378318955, "rouge_l": 0.4747081712062256}
{"id": 5239, "predictions": ["\u2581// \u2581 With Grant Uni v eral Access \u2581sets \u2581the \u2581 Grant Uni v eral Access \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Grant Uni v eral Access \u2581whether \u2581or \u2581not \u2581 universal \u2581access \u2581should \u2581be \u2581 granted \u2581// \u2581to \u2581the \u2581 isolated \u2581world . \u2581This \u2581is \u2581a \u2581power ful"], "bleu": 0.261177440714891, "rouge_l": 0.41806853582554515}
{"id": 5330, "predictions": ["\u2581// \u2581 Listen Close \u2581 listen s \u2581for \u2581the \u2581given \u2581network \u2581and \u2581 net . Listen \u2581to \u2581the \u2581// \u2581 raft \u2581server ."], "references": ["\u2581// \u2581 Listen Close \u2581calls \u2581 Listen Close F \u2581if \u2581it \u2581is \u2581not \u2581null ."], "bleu": 0.16564565321939206, "rouge_l": 0.3829596412556054}
{"id": 5323, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Visitor \u2581 set \u2581of \u2581params . Set Skip s Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . set Skip All Pause s \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12846189726767718, "rouge_l": 0.4265734265734266}
{"id": 5344, "predictions": ["\u2581// \u2581 E ar lies t \u2581returns \u2581the \u2581 left \u2581 t \u2581for \u2581the \u2581 Float 64 \u2581 t ."], "references": ["\u2581// \u2581 E ar lies t \u2581returns \u2581the \u2581 earliest \u2581written \u2581value \u2581 v . \u2581ok \u2581will \u2581be \u2581// \u2581true \u2581unless \u2581the \u2581 ring \u2581is \u2581 empty , \u2581in \u2581which"], "bleu": 0.29826598726283704, "rouge_l": 0.5018987341772152}
{"id": 5940, "predictions": ["\u2581// \u2581 New Tracer FromRequest \u2581returns \u2581a \u2581new \u2581 Tracer \u2581with \u2581the \u2581 data \u2581from \u2581the \u2581request \u2581context ."], "references": ["\u2581// \u2581 New Tracer FromRequest \u2581returns \u2581a \u2581new \u2581tracer \u2581that \u2581has \u2581a \u2581root \u2581 span \u2581derived \u2581from \u2581// \u2581the \u2581specified \u2581request . \u2581 A \u2581 span \u2581previously \u2581added \u2581to \u2581the"], "bleu": 0.25989918152321684, "rouge_l": 0.509967845659164}
{"id": 5045, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx \u2581interface . Add Inspect \u2581interface"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Heap Profiler . add Inspect ed Heap Object \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10738410443280691, "rouge_l": 0.3438556933483653}
{"id": 5091, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Track \u2581method \u2581of \u2581the \u2581 Track Cache For Origin Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Storage . track Cache Storage For Origin \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13847066375656705, "rouge_l": 0.4265734265734266}
{"id": 6030, "predictions": ["\u2581// \u2581 Append \u2581appends \u2581a \u2581new \u2581 slice \u2581of \u2581 runes \u2581to \u2581the \u2581end \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Append \u2581creates \u2581and \u2581adds \u2581another \u2581range \u2581of \u2581values \u2581// \u2581to \u2581the \u2581total \u2581range \u2581list ."], "bleu": 0.1531682455208201, "rouge_l": 0.3928242870285189}
{"id": 4997, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Load Params \u2581interface \u2581for \u2581 Set Force Update ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . set Force Update OnPage Load \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13675457510298145, "rouge_l": 0.3804573804573805}
{"id": 4626, "predictions": ["\u2581// \u2581 remap Error \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581checks \u2581the \u2581 APIError \u2581 type \u2581of \u2581the \u2581// \u2581error ."], "references": ["\u2581// \u2581 remap Error \u2581 fixes \u2581any \u2581 APIError \u2581 referencing \u2581\" xmpp \" \u2581into \u2581one \u2581 referencing \u2581\" channel \" ."], "bleu": 0.21803350014829634, "rouge_l": 0.4168564920273349}
{"id": 5926, "predictions": ["\u2581// \u2581Add Raw \u2581adds \u2581a \u2581new \u2581 route \u2581to \u2581the \u2581 indexer ."], "references": ["\u2581// \u2581Add Raw \u2581will \u2581 add \u2581a \u2581raw \u2581 mgo . Index \u2581to \u2581the \u2581internal \u2581index \u2581list ."], "bleu": 0.16352148699290212, "rouge_l": 0.5015416238437821}
{"id": 5226, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Failures \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . setMax CallStack Size To Capture \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.09233266757408672, "rouge_l": 0.31443298969072164}
{"id": 5225, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Custom Formatter \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . setCustom Object Formatter Enabled \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.11786767588753087, "rouge_l": 0.3986928104575163}
{"id": 4980, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581event \u2581to \u2581the \u2581event ."], "references": ["\u2581// \u2581Add \u2581event \u2581to \u2581event log"], "bleu": 0.24446151121745052, "rouge_l": 0.6916099773242631}
{"id": 4694, "predictions": ["\u2581// \u2581 Lease \u2581returns \u2581a \u2581 Task \u2581for \u2581a \u2581given \u2581lease ."], "references": ["\u2581// \u2581 Lease \u2581 leases \u2581tasks \u2581from \u2581a \u2581queue . \u2581// \u2581lease Time \u2581is \u2581in \u2581seconds . \u2581// \u2581The \u2581number \u2581of \u2581tasks \u2581fetched \u2581will \u2581be \u2581at \u2581most \u2581max Tasks ."], "bleu": 0.05131440122676713, "rouge_l": 0.30942028985507253}
{"id": 4750, "predictions": ["\u2581// \u2581is Top Name \u2581returns \u2581true \u2581if \u2581the \u2581 name \u2581is \u2581a \u2581 top - level \u2581 name ."], "references": ["\u2581// \u2581is Top Name \u2581returns \u2581true \u2581if \u2581 n \u2581is \u2581a \u2581 top - level \u2581 unresolved \u2581 identifier \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.5230524879916651, "rouge_l": 0.7541818181818182}
{"id": 4752, "predictions": ["\u2581// \u2581is Call \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581expression \u2581is \u2581a \u2581 call ."], "references": ["\u2581// \u2581is Call \u2581returns \u2581true \u2581if \u2581 t \u2581is \u2581a \u2581 call \u2581to \u2581pkg . name ."], "bleu": 0.4704071058096001, "rouge_l": 0.6975051975051975}
{"id": 5320, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Pause \u2581interface \u2581for \u2581 Set Pause On Exception s Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . set Pause On Exception s \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.26920508809559307, "rouge_l": 0.5}
{"id": 5094, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 track \u2581interface \u2581for \u2581 Un track IndexedDB For Origin Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Storage . un track IndexedDB For Origin \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.26920508809559307, "rouge_l": 0.5}
{"id": 4375, "predictions": ["\u2581// \u2581 Cancel \u2581cancel s \u2581the \u2581 Page ."], "references": ["\u2581// \u2581 Cancel Popup \u2581cancel s \u2581an \u2581alert , \u2581 confirm , \u2581or \u2581prompt \u2581popup ."], "bleu": 0.15422428388597817, "rouge_l": 0.5330836454431961}
{"id": 4915, "predictions": ["\u2581// \u2581 Clear \u2581 clear s \u2581the \u2581 contents \u2581of \u2581the \u2581context ."], "references": ["\u2581// \u2581 Clear \u2581fills \u2581the \u2581current \u2581canvas \u2581with \u2581a \u2581default \u2581 transparent \u2581 color"], "bleu": 0.18934058951353838, "rouge_l": 0.36791314837153194}
{"id": 5161, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ZooKeeper \u2581 set \u2581 set \u2581for \u2581 Emit s ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set Emit TouchEvent sFor Mouse \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12942148324473518, "rouge_l": 0.38485804416403785}
{"id": 5106, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Show Show Highlight s Params \u2581interface \u2581for \u2581// \u2581 Show Show Ad Highlight s Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . setShow Ad Highlight s \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1423071532720465, "rouge_l": 0.40093896713615024}
{"id": 4925, "predictions": ["\u2581// \u2581 round 64 \u2581 rounds \u2581the \u2581 v \u2581to \u2581the \u2581 2 \u2581hash ."], "references": ["\u2581// \u2581 borrow ed \u2581from \u2581 ce spare"], "bleu": 0.11633270842295028, "rouge_l": 0.2760180995475113}
{"id": 5108, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Set Debugger Message Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . set Paused In Debugger Message \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14536431554230655, "rouge_l": 0.4739178690344062}
{"id": 6051, "predictions": ["\u2581// \u2581JSON Spec \u2581 - \u2581parses \u2581a \u2581JSON \u2581document \u2581into \u2581a \u2581 Document ."], "references": ["\u2581// \u2581JSON Spec \u2581 loads \u2581a \u2581spec \u2581from \u2581a \u2581 json \u2581document"], "bleu": 0.30130404892785684, "rouge_l": 0.5460358056265985}
{"id": 5113, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Show Hit Test \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . setShow Hit Test Borders \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1423063481831876, "rouge_l": 0.46329113924050636}
{"id": 5111, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Show Paint s Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . setShow Paint Rect s \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13316822754073648, "rouge_l": 0.44907975460122695}
{"id": 6029, "predictions": ["\u2581// \u2581sorted At \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581range At \u2581returns \u2581the \u2581underlying \u2581 Inclusive Range \u2581instance \u2581// \u2581that \u2581was \u2581appended , \u2581at \u2581a \u2581given \u2581index"], "bleu": 0.1194284666865302, "rouge_l": 0.30995934959349586}
{"id": 4152, "predictions": ["\u2581// \u2581 Result \u2581returns \u2581the \u2581result \u2581of \u2581the \u2581pipeline \u2581 page"], "references": ["\u2581// \u2581 Result \u2581returns \u2581the \u2581result \u2581of \u2581the \u2581last \u2581action ."], "bleu": 0.7102992180127422, "rouge_l": 0.7272727272727273}
{"id": 5404, "predictions": ["\u2581// \u2581 From \u2581creates \u2581a \u2581new \u2581 Mail Builder ."], "references": ["\u2581// \u2581 From \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581the \u2581specified \u2581 From \u2581header ."], "bleu": 0.1794303934303215, "rouge_l": 0.5661252900232019}
{"id": 5584, "predictions": ["\u2581// \u2581Get Public \u2581returns \u2581the \u2581public \u2581 key \u2581for \u2581the \u2581 Rsa PrivateKey"], "references": ["\u2581// \u2581Get Public \u2581returns \u2581a \u2581public \u2581 key"], "bleu": 0.35556702356686953, "rouge_l": 0.696574225122349}
{"id": 5585, "predictions": ["\u2581// \u2581 Decrypt \u2581decrypt s \u2581the \u2581 Rsa PrivateKey"], "references": ["\u2581// \u2581 Decrypt \u2581returns \u2581 decrypted \u2581bytes \u2581of \u2581the \u2581input \u2581encrypted \u2581bytes"], "bleu": 0.20830666398386113, "rouge_l": 0.3713850837138508}
{"id": 5334, "predictions": ["\u2581// \u2581 Closed Stream \u2581is \u2581used \u2581to \u2581 notify \u2581the \u2581 write \u2581lock \u2581on \u2581the \u2581given \u2581// \u2581stream ."], "references": ["\u2581// \u2581 Closed Stream \u2581calls \u2581 Closed Stream F \u2581if \u2581it \u2581is \u2581not \u2581null ."], "bleu": 0.20158074753947833, "rouge_l": 0.3605911330049261}
{"id": 4360, "predictions": ["\u2581// \u2581 Destroy \u2581 destroy s \u2581the \u2581 Page ."], "references": ["\u2581// \u2581 Destroy \u2581closes \u2581any \u2581open \u2581browsers \u2581by \u2581ending \u2581the \u2581session ."], "bleu": 0.21258637840736228, "rouge_l": 0.44721407624633425}
{"id": 5156, "predictions": ["\u2581// \u2581 With Dont Set Visible Size \u2581sets \u2581the \u2581 Dont Set \u2581for \u2581the \u2581 Device Metrics Override Size"], "references": ["\u2581// \u2581 With Dont Set Visible Size \u2581do \u2581not \u2581 set \u2581 visible \u2581 view \u2581 size , \u2581rely \u2581upon \u2581explicit \u2581// \u2581 setVisible Size \u2581 call ."], "bleu": 0.23378050928723482, "rouge_l": 0.4113283884018881}
{"id": 5861, "predictions": ["\u2581// \u2581 Slice IndexOf \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581 Slice IndexOf \u2581gets \u2581the \u2581 indx \u2581of \u2581val \u2581in \u2581 slice . \u2581Returns \u2581-1 \u2581if \u2581not \u2581found ."], "bleu": 0.21943106183147348, "rouge_l": 0.525358851674641}
{"id": 5869, "predictions": ["\u2581// \u2581 To Bool \u2581converts \u2581a \u2581string \u2581to \u2581a \u2581boolean \u2581value ."], "references": ["\u2581// \u2581 To Bool \u2581 fuzz ily \u2581converts \u2581 truthy \u2581values ."], "bleu": 0.31455601883230705, "rouge_l": 0.5}
{"id": 5410, "predictions": ["\u2581// \u2581 ReplyTo \u2581is \u2581a \u2581 helper \u2581to \u2581 set \u2581the \u2581 Mail Builder ."], "references": ["\u2581// \u2581 ReplyTo \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581 this \u2581 name \u2581& \u2581address \u2581appended \u2581to \u2581the \u2581 To \u2581header . \u2581 name \u2581// \u2581may \u2581be \u2581"], "bleu": 0.09952652138366966, "rouge_l": 0.37731958762886597}
{"id": 5333, "predictions": ["\u2581// \u2581 Opened Stream \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 active \u2581stream \u2581of \u2581 active \u2581 Stream Stream \u2581// \u2581to \u2581the \u2581given \u2581 Stream Stream ."], "references": ["\u2581// \u2581 Opened Stream \u2581calls \u2581 Opened Stream F \u2581if \u2581it \u2581is \u2581not \u2581null ."], "bleu": 0.1447953615777742, "rouge_l": 0.35144032921810703}
{"id": 5974, "predictions": ["\u2581// \u2581Add Rule \u2581adds \u2581a \u2581rule \u2581to \u2581the \u2581 Seek er ."], "references": ["\u2581// \u2581Add Rule \u2581adds \u2581a \u2581new \u2581rule \u2581into \u2581the \u2581context ."], "bleu": 0.4211813371894875, "rouge_l": 0.7011494252873562}
{"id": 4963, "predictions": ["\u2581// \u2581validate Identifier \u2581validates \u2581a \u2581 name \u2581of \u2581a \u2581 name ."], "references": ["\u2581// \u2581validate Identifier \u2581makes \u2581sure \u2581the \u2581provided \u2581 identifier \u2581 satisfies \u2581 semver \u2581spec"], "bleu": 0.18116065851435417, "rouge_l": 0.3793532338308458}
{"id": 4383, "predictions": ["\u2581// \u2581 Issues \u2581 clear s \u2581the \u2581 Page ."], "references": ["\u2581// \u2581 DoubleClick \u2581double \u2581clicks \u2581the \u2581 left \u2581mouse \u2581 button \u2581at \u2581the \u2581current \u2581mouse \u2581// \u2581position ."], "bleu": 0.1019619054159977, "rouge_l": 0.33964365256124723}
{"id": 5696, "predictions": ["\u2581// \u2581 New Stream Encoder \u2581creates \u2581a \u2581new \u2581 Stream Encoder ."], "references": ["\u2581// \u2581 New Stream Encoder \u2581returns \u2581a \u2581new \u2581stream \u2581encoder \u2581that \u2581outputs \u2581to \u2581 e . \u2581// \u2581// \u2581The \u2581function \u2581panic s \u2581if \u2581 e \u2581is \u2581nil ."], "bleu": 0.11930111263122388, "rouge_l": 0.41972477064220187}
{"id": 4816, "predictions": ["\u2581// \u2581Must Marshal JSON \u2581implements \u2581the \u2581encoding . json \u2581interface \u2581for \u2581 Codec ."], "references": ["\u2581// \u2581Must Marshal JSON \u2581panic s \u2581if \u2581an \u2581error \u2581occurs . \u2581 Be sides \u2581 th a \u2581be have s \u2581exactly \u2581like \u2581MarshalJSON ."], "bleu": 0.1354499938614756, "rouge_l": 0.3517298187808896}
{"id": 4817, "predictions": ["\u2581// \u2581Must Unmarshal JSON \u2581implements \u2581the \u2581encoding . Unmarshaler \u2581interface \u2581for \u2581 Codec ."], "references": ["\u2581// \u2581Must Unmarshal JSON \u2581panic s \u2581if \u2581an \u2581error \u2581occurs . \u2581 Be sides \u2581 th a \u2581be have s \u2581exactly \u2581like \u2581UnmarshalJSON ."], "bleu": 0.1354499938614756, "rouge_l": 0.3517298187808896}
{"id": 4306, "predictions": ["\u2581// \u2581Must String Formatter \u2581returns \u2581a \u2581formatter \u2581with \u2581the \u2581given \u2581string ."], "references": ["\u2581// \u2581Must String Formatter \u2581is \u2581equivalent \u2581to \u2581 NewString Formatter \u2581with \u2581a \u2581 call \u2581to \u2581panic \u2581// \u2581on \u2581error ."], "bleu": 0.16698072090365443, "rouge_l": 0.3588235294117647}
{"id": 4538, "predictions": ["\u2581// \u2581 Send Protocol Msg \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 Local Connection ."], "references": ["\u2581// \u2581 Send Protocol Msg \u2581implements \u2581 Protocol Sender ."], "bleu": 0.34791594751284466, "rouge_l": 0.6014084507042253}
{"id": 4331, "predictions": ["\u2581// \u2581 Load From Reader \u2581 loads \u2581a \u2581 config \u2581file \u2581from \u2581the \u2581given \u2581reader ."], "references": ["\u2581// \u2581 Load From Reader \u2581accepts \u2581raw \u2581 data \u2581directly \u2581from \u2581a \u2581reader \u2581// \u2581and \u2581returns \u2581a \u2581new \u2581configuration \u2581representation . \u2581// \u2581You \u2581must \u2581use \u2581 Reload Data \u2581to \u2581reload"], "bleu": 0.13967812699315366, "rouge_l": 0.370945945945946}
{"id": 5182, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Emulate Touch \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . emulate Touch From MouseEvent \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.11786767588753087, "rouge_l": 0.3986928104575163}
{"id": 5170, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Emulation Emulation Emulation Params \u2581interface \u2581for \u2581// \u2581 Set Touch Enabled Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set Touch Emulation Enabled \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13400825781778894, "rouge_l": 0.43131313131313137}
{"id": 5168, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Script \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set Script Execution Disabled \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10873738650284012, "rouge_l": 0.41216216216216217}
{"id": 5183, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581input \u2581to \u2581the \u2581 set Ignore Input Params \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . set Ignore Input Events \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1947911080410563, "rouge_l": 0.423121387283237}
{"id": 4888, "predictions": ["\u2581// \u2581 Fill String At \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581given \u2581string \u2581at \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 Fill String At \u2581draw s \u2581a \u2581string \u2581at \u2581 x , \u2581 y"], "bleu": 0.2966090320349725, "rouge_l": 0.5545454545454546}
{"id": 5503, "predictions": ["\u2581// \u2581 WriteByte \u2581sets \u2581the \u2581 size \u2581of \u2581the \u2581window ."], "references": ["\u2581// \u2581 writeByte \u2581writes \u2581 c \u2581to \u2581the \u2581end \u2581of \u2581the \u2581window"], "bleu": 0.24737714147554007, "rouge_l": 0.5176803394625177}
{"id": 4610, "predictions": ["\u2581// \u2581 Swap \u2581 s impl ifies \u2581the \u2581 i - th \u2581 identifier ."], "references": ["\u2581// \u2581 Swap \u2581implements \u2581 sort . Interface ."], "bleu": 0.16943571815930883, "rouge_l": 0.4363376251788269}
{"id": 5582, "predictions": ["\u2581// \u2581 Encrypt \u2581encrypt s \u2581the \u2581 key \u2581using \u2581the \u2581 RSA \u2581public \u2581 key"], "references": ["\u2581// \u2581 Encrypt \u2581returns \u2581encrypted \u2581bytes \u2581from \u2581the \u2581in pu \u2581 data"], "bleu": 0.16943571815930883, "rouge_l": 0.3779429987608426}
{"id": 4298, "predictions": ["\u2581// \u2581Must Get Logger \u2581returns \u2581a \u2581logger \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 name ."], "references": ["\u2581// \u2581Must Get Logger \u2581is \u2581like \u2581Get Logger \u2581but \u2581panic s \u2581if \u2581the \u2581logger \u2581can ' t \u2581be \u2581created . \u2581// \u2581It \u2581 s impl ifies \u2581safe \u2581initialization \u2581of \u2581a"], "bleu": 0.10613242539437312, "rouge_l": 0.24729729729729732}
{"id": 5110, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Show FPS Counter Params \u2581interface"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . setShow FPS Counter \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15210928871814855, "rouge_l": 0.40450928381962864}
{"id": 5123, "predictions": ["\u2581// \u2581 With Auth Challenge Response \u2581sets \u2581the \u2581 Auth Challenge Response \u2581to \u2581the \u2581 Continue \u2581// \u2581 Challenge \u2581to \u2581 set \u2581the \u2581challenge \u2581response \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581 With Auth Challenge Response \u2581response \u2581to \u2581a \u2581request Intercept ed \u2581with \u2581an \u2581// \u2581 auth Challenge . \u2581Must \u2581not \u2581be \u2581 set \u2581otherwise ."], "bleu": 0.25723962032456954, "rouge_l": 0.4774232390126431}
{"id": 5109, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Show Debug \u2581interface"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . setShow Debug Borders \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1185574919557074, "rouge_l": 0.346590909090909}
{"id": 5313, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 boxed \u2581ranges \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . set Black boxed Ranges \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13609026329485258, "rouge_l": 0.43571428571428567}
{"id": 5134, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Node URL \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . set Blocked URLs \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12673978475914355, "rouge_l": 0.3347050754458162}
{"id": 5135, "predictions": ["\u2581// \u2581Do \u2581 satisfies \u2581the \u2581 RedisClient \u2581 set \u2581of \u2581service - specific \u2581 handlers"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . set Bypass Service Worker \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12874330508144843, "rouge_l": 0.2666666666666666}
{"id": 5312, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 set \u2581of \u2581params \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . set Black box Patterns \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1812735516528891, "rouge_l": 0.49364161849710986}
{"id": 5014, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 distributor \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Memory . set Pressure Notifications Suppressed \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10462661942910988, "rouge_l": 0.32972972972972975}
{"id": 5311, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Call \u2581interface \u2581for \u2581 Set Async Call ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . set Async Call StackDepth \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1524322797652235, "rouge_l": 0.423121387283237}
{"id": 5308, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Call \u2581interface \u2581for \u2581 Pause On Async Params Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . pause On Async Call \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15767770262450662, "rouge_l": 0.4}
{"id": 5145, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 With Tlf sFor Test Params \u2581interface \u2581for \u2581// \u2581 Data RequestBody sFor Test Params \u2581instance ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . setData SizeLimit sFor Test \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10813005337959174, "rouge_l": 0.34366197183098596}
{"id": 5146, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581HTTP \u2581header \u2581params \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . set Extra HTTP Headers \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13162217636752485, "rouge_l": 0.363095238095238}
{"id": 5151, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Emulation Emulation Emulation Params \u2581interface \u2581for \u2581 Focus Emulation Emulation ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . setFocus Emulation Enabled \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15384750052099497, "rouge_l": 0.4048672566371681}
{"id": 5152, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 CPU \u2581 rate \u2581params \u2581to \u2581the \u2581 set \u2581of \u2581 CPU \u2581 rate \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set CPU Throttling Rate \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10475041522097171, "rouge_l": 0.30049261083743845}
{"id": 4143, "predictions": ["\u2581// \u2581 Last Logs \u2581returns \u2581the \u2581last \u2581log \u2581log \u2581log \u2581of \u2581the \u2581given \u2581log ."], "references": ["\u2581// \u2581 Last Logs \u2581returns \u2581a \u2581list \u2581of \u2581the \u2581last \u2581` lines ` \u2581log \u2581of \u2581the \u2581 app , \u2581matching \u2581the \u2581// \u2581fields \u2581in \u2581the \u2581log \u2581instance \u2581received \u2581as \u2581an"], "bleu": 0.15675647312598798, "rouge_l": 0.4611683848797251}
{"id": 5158, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Metrics \u2581method \u2581of \u2581 Device Metrics Override Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set Device Metrics Override \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.201593310341306, "rouge_l": 0.4797752808988765}
{"id": 5159, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 Hidden \u2581flag \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set Scrollbar s Hidden \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13609026329485258, "rouge_l": 0.43571428571428567}
{"id": 5160, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Document Set \u2581interface \u2581for \u2581 Document Set Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set Document Cookie Disabled \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13386745323687674, "rouge_l": 0.34269662921348315}
{"id": 5860, "predictions": ["\u2581// \u2581 Slice Contains \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 slice \u2581is \u2581a \u2581 slice \u2581of \u2581 slice \u2581 slice ."], "references": ["\u2581// \u2581 Slice Contains \u2581determines \u2581whether \u2581val \u2581is \u2581an \u2581element \u2581in \u2581 slice ."], "bleu": 0.2227227312202058, "rouge_l": 0.47424684159378033}
{"id": 5246, "predictions": ["\u2581// \u2581Do \u2581the \u2581 Navigate \u2581to \u2581the \u2581 history \u2581entry"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . navigate To History Entry \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.11433296432660552, "rouge_l": 0.30886075949367087}
{"id": 4993, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 DOM Storage \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Storage . set DOM Storage Item \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13044202582182796, "rouge_l": 0.3986928104575163}
{"id": 6032, "predictions": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581the \u2581 slice \u2581is \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581a \u2581given \u2581value \u2581is \u2581a \u2581valid \u2581// \u2581value \u2581within \u2581the \u2581total \u2581range ."], "bleu": 0.31182633637349955, "rouge_l": 0.518413597733711}
{"id": 5253, "predictions": ["\u2581// \u2581 With Ignore Invalid Page Ranges \u2581sets \u2581the \u2581 color \u2581 page \u2581to \u2581 stdout \u2581in \u2581 Elasticsearch \u2581 clauses \u2581to \u2581 PDF"], "references": ["\u2581// \u2581 With Ignore Invalid Page Ranges \u2581whether \u2581to \u2581 silently \u2581ignore \u2581invalid \u2581but \u2581// \u2581successfully \u2581parsed \u2581 page \u2581ranges , \u2581such \u2581as \u2581' 3- 2 ' . \u2581Defaults \u2581to"], "bleu": 0.25537461025550856, "rouge_l": 0.3994047619047618}
{"id": 5259, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx \u2581interface \u2581for \u2581 Screen cast s"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . screen cast Frame Ack \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12664626029867396, "rouge_l": 0.29047619047619044}
{"id": 5260, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Node \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . set Ad Blocking Enabled \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10462661942910988, "rouge_l": 0.32972972972972975}
{"id": 5741, "predictions": ["\u2581// \u2581is Ptr From Heap \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 slice \u2581is \u2581in \u2581the \u2581heap ."], "references": ["\u2581// \u2581is Ptr From Heap \u2581reports \u2581whether \u2581the \u2581infer i or \u2581at \u2581address \u2581a \u2581 contains \u2581a \u2581pointer . \u2581// \u2581a \u2581must \u2581be \u2581somewhere \u2581in \u2581the \u2581heap ."], "bleu": 0.2203552363042869, "rouge_l": 0.468248429867411}
{"id": 5050, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Heap \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Heap Profiler . stop Tracking Heap Objects \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10619764719483066, "rouge_l": 0.3930412371134021}
{"id": 4428, "predictions": ["\u2581// \u2581 ByUsername \u2581returns \u2581the \u2581user ' s \u2581user \u2581 name \u2581for \u2581the \u2581user ."], "references": ["\u2581// \u2581 ByUsername \u2581finds \u2581a \u2581user \u2581by \u2581their \u2581 username ."], "bleu": 0.17609282679116184, "rouge_l": 0.4747081712062256}
{"id": 5048, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Heap \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Heap Profiler . start Tracking Heap Objects \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10619764719483066, "rouge_l": 0.3930412371134021}
{"id": 5044, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Config \u2581interface \u2581for \u2581 Ignore Certificate Errors"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Security . set Ignore Certificate Errors \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1924606960585059, "rouge_l": 0.43571428571428567}
{"id": 5267, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Prim er Enabled \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . set LifecycleEvent s Enabled \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12436651725573127, "rouge_l": 0.3860759493670886}
{"id": 5749, "predictions": ["\u2581// \u2581 ForEach Root Ptr \u2581calls \u2581fn \u2581for \u2581each \u2581element \u2581in \u2581the \u2581process ."], "references": ["\u2581// \u2581 ForEach Root Ptr \u2581be have s \u2581like \u2581 ForEach Ptr \u2581but \u2581it \u2581starts \u2581with \u2581a \u2581 Root \u2581instead \u2581of \u2581an \u2581Object ."], "bleu": 0.1647274612115334, "rouge_l": 0.30148270181219106}
{"id": 5274, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 set \u2581of \u2581 Web Lifecycle State Params \u2581to \u2581the \u2581context"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . set Web Lifecycle State \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.20687206010259407, "rouge_l": 0.6}
{"id": 5276, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Writer \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . set Produce Compilation Cache \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10462661942910988, "rouge_l": 0.32972972972972975}
{"id": 5948, "predictions": ["\u2581// \u2581 Finish \u2581is \u2581called \u2581when \u2581the \u2581 Tracer \u2581is \u2581 flushed ."], "references": ["\u2581// \u2581 Finish \u2581will \u2581finish \u2581all \u2581 leftover \u2581spans \u2581and \u2581the \u2581root \u2581 span \u2581if \u2581requested ."], "bleu": 0.1554246536273198, "rouge_l": 0.3906083244397012}
{"id": 4103, "predictions": ["\u2581// \u2581Register Queue Task \u2581registers \u2581the \u2581given \u2581task \u2581 id"], "references": ["\u2581// \u2581Register Queue Task \u2581registers \u2581the \u2581internal \u2581bs \u2581queue \u2581task \u2581for \u2581later \u2581execution ."], "bleu": 0.3955202468307477, "rouge_l": 0.5663129973474801}
{"id": 5021, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Config \u2581interface \u2581for \u2581 Device Orientation Override Params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Device Orientation . set Device Orientation Override \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.21106303469519463, "rouge_l": 0.4062153163152054}
{"id": 5092, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 IndexedDB \u2581method \u2581of \u2581the \u2581 IndexedDB \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Storage . track IndexedDB For Origin \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13321592461461113, "rouge_l": 0.423121387283237}
{"id": 4574, "predictions": ["\u2581// \u2581 On Gossip Uni cast \u2581will \u2581 set \u2581the \u2581 gossip \u2581 button \u2581for \u2581the \u2581peer ."], "references": ["\u2581// \u2581 On Gossip Uni cast \u2581implements \u2581mesh . Gossip er . \u2581// \u2581The \u2581buf \u2581is \u2581a \u2581single \u2581pkt ."], "bleu": 0.28520958276881997, "rouge_l": 0.36495726495726494}
{"id": 5090, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Prim y r \u2581interface \u2581for \u2581 Clear Data For Origin Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Storage . clear Data For Origin \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.17694975149532557, "rouge_l": 0.44248704663212435}
{"id": 5087, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Set Effective \u2581method \u2581for \u2581 Set Effective Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 CSS . set Effective PropertyValue ForNode \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13386745323687674, "rouge_l": 0.34269662921348315}
{"id": 4222, "predictions": ["\u2581// \u2581 Mark Offset \u2581 marks \u2581the \u2581message \u2581in \u2581the \u2581 set \u2581of \u2581 active \u2581 items \u2581in \u2581the \u2581// \u2581 oldest \u2581topic ."], "references": ["\u2581// \u2581 Mark Offset \u2581 stash es \u2581the \u2581provided \u2581message \u2581offset"], "bleu": 0.19940445989088912, "rouge_l": 0.428714859437751}
{"id": 5206, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 post ing \u2581to \u2581the \u2581 post ing \u2581 Mirror ing Params \u2581instance ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Cast . start Tab Mirror ing \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12673718536830808, "rouge_l": 0.3696969696969697}
{"id": 4223, "predictions": ["\u2581// \u2581 Reset Offset \u2581resets \u2581the \u2581 oldest \u2581offset \u2581of \u2581the \u2581 data \u2581frame ."], "references": ["\u2581// \u2581 Reset Offset \u2581 stash es \u2581the \u2581provided \u2581message \u2581offset \u2581// \u2581See \u2581 Reset Partition Offset \u2581for \u2581 explanation"], "bleu": 0.19001065413158652, "rouge_l": 0.3899543378995435}
{"id": 5082, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 set \u2581of \u2581the \u2581node \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . set Inspect ed Node \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.17405100568758053, "rouge_l": 0.40450928381962864}
{"id": 5081, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581input \u2581parameters \u2581to \u2581the \u2581 set \u2581file ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . setFile Input Files \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14294845713017917, "rouge_l": 0.31770833333333337}
{"id": 4517, "predictions": ["\u2581// \u2581 Marshal Text \u2581implements \u2581the \u2581 Text Marshaler \u2581interface \u2581for \u2581 Bool ."], "references": ["\u2581// \u2581 Marshal Text \u2581implements \u2581encoding . Text Marshaler . \u2581// \u2581It \u2581will \u2581 encode \u2581a \u2581zero \u2581if \u2581 this \u2581 Bool \u2581is \u2581null ."], "bleu": 0.19089641878819658, "rouge_l": 0.4880000000000001}
{"id": 5231, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Record Sync Marker \u2581function \u2581to \u2581the \u2581 Record Sync Sync Marker Params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Tracing . record Clock Sync Marker \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.17181529671327242, "rouge_l": 0.44248704663212435}
{"id": 4992, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 DOM Storage Item \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Storage . remove DOM Storage Item \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1818513197242336, "rouge_l": 0.46329113924050636}
{"id": 5977, "predictions": ["\u2581// \u2581Default Rules Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the \u2581 path"], "references": ["\u2581// \u2581Default Rules Path \u2581return \u2581the \u2581default \u2581 PATH \u2581that \u2581 contains \u2581rules ."], "bleu": 0.24078435074822624, "rouge_l": 0.4723451327433628}
{"id": 5069, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . FSM \u2581interface"], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . mark Undo able State \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12109261383365659, "rouge_l": 0.3347050754458162}
{"id": 5020, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 bill y Override \u2581interface \u2581for \u2581 Clear Device ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Device Orientation . clear Device Orientation Override \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12887003710076186, "rouge_l": 0.3293736501079914}
{"id": 4346, "predictions": ["\u2581// \u2581 First By Link \u2581returns \u2581the \u2581first \u2581 set \u2581of \u2581matched \u2581elements \u2581from \u2581the \u2581 set \u2581of \u2581matched \u2581// \u2581elements ."], "references": ["\u2581// \u2581 First By Link \u2581finds \u2581the \u2581first \u2581anchor \u2581element \u2581by \u2581its \u2581 text \u2581 content ."], "bleu": 0.24707644478326132, "rouge_l": 0.5249569707401034}
{"id": 4187, "predictions": ["\u2581// \u2581Add Route \u2581adds \u2581a \u2581new \u2581 route \u2581to \u2581the \u2581 trie ."], "references": ["\u2581// \u2581 Insert \u2581the \u2581 route \u2581in \u2581the \u2581 Trie \u2581following \u2581or \u2581creating \u2581the \u2581nodes \u2581corresponding \u2581to \u2581the \u2581 path ."], "bleu": 0.12277940403006411, "rouge_l": 0.395004625346901}
{"id": 5088, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Rule \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 CSS . start Rule Usage Tracking \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12858830134472854, "rouge_l": 0.46329113924050636}
{"id": 5058, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Log \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Browser . crash G pu Process \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10462661942910988, "rouge_l": 0.32972972972972975}
{"id": 5462, "predictions": ["\u2581// \u2581Apply \u2581applies \u2581the \u2581options \u2581to \u2581the \u2581options ."], "references": ["\u2581// \u2581Apply \u2581applies \u2581the \u2581given \u2581options \u2581to \u2581 this \u2581 Options"], "bleu": 0.36177396082048574, "rouge_l": 0.5893719806763285}
{"id": 5772, "predictions": ["\u2581// \u2581 Cast \u2581 cast s \u2581the \u2581 data \u2581to \u2581a \u2581 type \u2581of \u2581 this \u2581region ."], "references": ["\u2581// \u2581 Cast \u2581the \u2581region \u2581to \u2581the \u2581given \u2581 type ."], "bleu": 0.1712473044894657, "rouge_l": 0.5768321513002365}
{"id": 5012, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Prepare er \u2581interface \u2581for \u2581 Prepare ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Memory . prepareFor Leak Detection \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13765233317534833, "rouge_l": 0.3034825870646766}
{"id": 5124, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Continue Marshaler \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . continue Intercept ed Request \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12879607627726938, "rouge_l": 0.37423312883435583}
{"id": 5614, "predictions": ["\u2581// \u2581Verify \u2581verifies \u2581the \u2581signature \u2581of \u2581the \u2581 key \u2581and \u2581 key \u2581matches \u2581the \u2581 key"], "references": ["\u2581// \u2581Verify \u2581checks \u2581a \u2581signature \u2581again s \u2581the \u2581input \u2581 data ."], "bleu": 0.1203921753741131, "rouge_l": 0.36658653846153844}
{"id": 4671, "predictions": ["\u2581// \u2581 Load Struct \u2581 loads \u2581a \u2581 slice \u2581of \u2581 Property \u2581into \u2581a \u2581 slice \u2581of \u2581 Property \u2581objects ."], "references": ["\u2581// \u2581 Load Struct \u2581 loads \u2581the \u2581properties \u2581from \u2581 p \u2581to \u2581dst . \u2581// \u2581dst \u2581must \u2581be \u2581a \u2581struct \u2581pointer ."], "bleu": 0.27416261187724705, "rouge_l": 0.4168564920273349}
{"id": 4649, "predictions": ["\u2581// \u2581 Project \u2581sets \u2581the \u2581 Query \u2581field \u2581to \u2581be \u2581used \u2581for \u2581 Query ."], "references": ["\u2581// \u2581 Project \u2581returns \u2581a \u2581derivative \u2581query \u2581that \u2581yields \u2581only \u2581the \u2581given \u2581fields . \u2581It \u2581// \u2581cannot \u2581be \u2581used \u2581with \u2581 Keys Only ."], "bleu": 0.11058234047498021, "rouge_l": 0.393866020984665}
{"id": 5224, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Run \u2581method \u2581to \u2581execute \u2581the \u2581 debugger \u2581event ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . run If WaitingFor Debugger \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.17617947638518647, "rouge_l": 0.41123595505617977}
{"id": 5639, "predictions": ["\u2581// \u2581 New Attrs From Attrs \u2581creates \u2581a \u2581new \u2581 Attrs \u2581object \u2581with \u2581the \u2581attributes \u2581// \u2581in \u2581the \u2581attributes \u2581of \u2581the \u2581attributes ."], "references": ["\u2581// \u2581 New Attrs From Attrs \u2581is \u2581a \u2581convenience \u2581function \u2581that \u2581will \u2581accept \u2581zero \u2581or \u2581more \u2581existing \u2581 Attrs , \u2581create \u2581// \u2581a \u2581new \u2581 Attrs \u2581and \u2581then \u2581 merge"], "bleu": 0.2573659599547837, "rouge_l": 0.3685800604229607}
{"id": 5854, "predictions": ["\u2581// \u2581 Replace F \u2581replaces \u2581the \u2581given \u2581 name \u2581and \u2581 n \u2581and \u2581 n \u2581elements ."], "references": ["\u2581// \u2581 Replace F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581strings . Replace ."], "bleu": 0.23287896954139942, "rouge_l": 0.505699481865285}
{"id": 4287, "predictions": ["\u2581// \u2581Parse In Location \u2581returns \u2581the \u2581time . Time \u2581from \u2581the \u2581location ."], "references": ["\u2581// \u2581Parse In Location \u2581parse \u2581string \u2581to \u2581time \u2581in \u2581location"], "bleu": 0.2891784933232572, "rouge_l": 0.5343065693430658}
{"id": 4104, "predictions": ["\u2581// \u2581 Apps \u2581returns \u2581a \u2581 App Informer ."], "references": ["\u2581// \u2581 Apps \u2581returns \u2581a \u2581 App Informer ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 6035, "predictions": ["\u2581// \u2581 Frame Range Padded \u2581returns \u2581the \u2581 hex - encoded \u2581 text \u2581 text ."], "references": ["\u2581// \u2581 Frame Range Padded \u2581returns \u2581the \u2581string \u2581frame \u2581range \u2581component , \u2581// \u2581parsed \u2581from \u2581the \u2581sequence , \u2581and \u2581padded \u2581out \u2581by \u2581the \u2581pad \u2581characters . \u2581// \u2581If \u2581no \u2581frame"], "bleu": 0.17779139178356348, "rouge_l": 0.32972972972972975}
{"id": 5298, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581request ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Fetch . fulfill Request \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14168664218430702, "rouge_l": 0.4935275080906149}
{"id": 5876, "predictions": ["\u2581// \u2581 Wrap HTML F \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581 text \u2581 name ."], "references": ["\u2581// \u2581 Wrap HTML F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Wrap HTML ."], "bleu": 0.30789512797772584, "rouge_l": 0.5484515484515484}
{"id": 4519, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581 Time \u2581representation \u2581of \u2581the \u2581 Time ."], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581 json . Marshaler . \u2581// \u2581It \u2581will \u2581 encode \u2581the \u2581zero \u2581value \u2581of \u2581time . Time \u2581// \u2581if \u2581 this \u2581time \u2581is \u2581invalid ."], "bleu": 0.047438341392476706, "rouge_l": 0.2798165137614679}
{"id": 5329, "predictions": ["\u2581// \u2581 Listen \u2581 listen s \u2581for \u2581the \u2581given \u2581network \u2581to \u2581the \u2581given \u2581 addr ."], "references": ["\u2581// \u2581 Listen \u2581calls \u2581 Listen F \u2581if \u2581it \u2581is \u2581not \u2581null ."], "bleu": 0.15844501337268932, "rouge_l": 0.35138248847926273}
{"id": 6038, "predictions": ["\u2581// \u2581Set Padding \u2581sets \u2581the \u2581 text \u2581 text \u2581for \u2581the \u2581sequence \u2581of \u2581 this \u2581sequence ."], "references": ["\u2581// \u2581Set \u2581a \u2581new \u2581padding \u2581characters \u2581for \u2581the \u2581sequence"], "bleu": 0.1598921499894403, "rouge_l": 0.40720961281708945}
{"id": 5148, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Device Metrics Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . clear Device Metrics Override \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15510935778172508, "rouge_l": 0.5083333333333334}
{"id": 5983, "predictions": ["\u2581// \u2581 Group Object sBy Metadata \u2581returns \u2581a \u2581 map \u2581of \u2581Object \u2581objects \u2581for \u2581a \u2581given \u2581 group"], "references": ["\u2581// \u2581 Group Object sBy Metadata \u2581returns \u2581a \u2581 map \u2581with \u2581all \u2581objects \u2581grouped \u2581by \u2581specific \u2581// \u2581metadata \u2581 key ."], "bleu": 0.4767468102495767, "rouge_l": 0.6069651741293532}
{"id": 4559, "predictions": ["\u2581// \u2581 Fetch By Short ID \u2581returns \u2581the \u2581peer \u2581peer \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Fetch By Short ID \u2581returns \u2581a \u2581peer \u2581matching \u2581the \u2581passed \u2581short \u2581 ID . \u2581// \u2581If \u2581no \u2581matching \u2581peer \u2581is \u2581found , \u2581 Fetch By Short ID \u2581returns"], "bleu": 0.21973787788575674, "rouge_l": 0.49459459459459465}
{"id": 5832, "predictions": ["\u2581// \u2581 Decode HTML Entities \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 text \u2581// \u2581 text \u2581for \u2581the \u2581given \u2581string ."], "references": ["\u2581// \u2581 Decode HTML Entities \u2581decodes \u2581HTML \u2581entities \u2581into \u2581their \u2581proper \u2581string \u2581representation . \u2581// \u2581 Decode HTML Entities \u2581is \u2581an \u2581 alias \u2581for \u2581 html . Unescape String"], "bleu": 0.19186853062399462, "rouge_l": 0.42766093052899934}
{"id": 5840, "predictions": ["\u2581// \u2581 Left \u2581returns \u2581the \u2581 left \u2581 left \u2581in \u2581 s ."], "references": ["\u2581// \u2581 Left \u2581returns \u2581the \u2581 left \u2581 substring \u2581of \u2581 length \u2581 n ."], "bleu": 0.5369787816169341, "rouge_l": 0.7052023121387283}
{"id": 4995, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 KBFS \u2581interface \u2581for \u2581 Dispatch Sync Event Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . dispatch Sync Event \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15317779118596056, "rouge_l": 0.41123595505617977}
{"id": 4994, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Send Message Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . deliver Push Message \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12436651725573127, "rouge_l": 0.3860759493670886}
{"id": 4511, "predictions": ["\u2581// \u2581 NewInt \u2581returns \u2581a \u2581new \u2581 Int ."], "references": ["\u2581// \u2581 NewInt \u2581creates \u2581a \u2581new \u2581 Int"], "bleu": 0.5253819788848316, "rouge_l": 0.8323586744639376}
{"id": 4634, "predictions": ["\u2581// \u2581 Increment \u2581 increments \u2581the \u2581value \u2581for \u2581a \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Increment \u2581atomically \u2581 increments \u2581the \u2581decimal \u2581value \u2581in \u2581the \u2581given \u2581 key \u2581// \u2581by \u2581delta \u2581and \u2581returns \u2581the \u2581new \u2581value . \u2581The \u2581value \u2581must \u2581fit \u2581in \u2581a \u2581uint"], "bleu": 0.09488344900133383, "rouge_l": 0.47758007117437723}
{"id": 4347, "predictions": ["\u2581// \u2581 First ByLabel \u2581returns \u2581the \u2581first \u2581element \u2581in \u2581the \u2581 set \u2581of \u2581matched \u2581elements . \u2581// \u2581If \u2581the \u2581 filter \u2581is \u2581not \u2581found , \u2581the \u2581value \u2581will \u2581be \u2581returned"], "references": ["\u2581// \u2581 First ByLabel \u2581finds \u2581the \u2581first \u2581element \u2581by \u2581associated \u2581 label \u2581 text ."], "bleu": 0.16261055653267345, "rouge_l": 0.42558139534883715}
{"id": 5319, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Active Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . set Breakpoints Active \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13171937539260137, "rouge_l": 0.41838134430727025}
{"id": 4672, "predictions": ["\u2581// \u2581Save Struct \u2581 persist s \u2581the \u2581 data \u2581into \u2581a \u2581 slice \u2581of \u2581 Property \u2581objects ."], "references": ["\u2581// \u2581Save Struct \u2581returns \u2581the \u2581properties \u2581from \u2581 src \u2581as \u2581a \u2581 slice \u2581of \u2581 Properties . \u2581// \u2581 src \u2581must \u2581be \u2581a \u2581struct \u2581pointer ."], "bleu": 0.22315912022143622, "rouge_l": 0.48412698412698424}
{"id": 4117, "predictions": ["\u2581// \u2581 Run \u2581runs \u2581the \u2581command \u2581with \u2581the \u2581specified \u2581arguments ."], "references": ["\u2581// \u2581 Run \u2581runs \u2581all \u2581registered \u2581non \u2581optional \u2581migrations \u2581if \u2581no \u2581\" . Name \" \u2581is \u2581in formed . \u2581// \u2581 Migrations \u2581are \u2581executed \u2581in \u2581the \u2581order \u2581that \u2581they \u2581were"], "bleu": 0.06130250142137494, "rouge_l": 0.22509225092250923}
{"id": 4339, "predictions": ["\u2581// \u2581 FindBy Link \u2581returns \u2581the \u2581 set \u2581of \u2581matched \u2581elements \u2581from \u2581the \u2581 set \u2581of \u2581matched \u2581// \u2581elements ."], "references": ["\u2581// \u2581 FindBy Link \u2581finds \u2581exactly \u2581one \u2581anchor \u2581element \u2581by \u2581its \u2581 text \u2581 content ."], "bleu": 0.19120817575042512, "rouge_l": 0.39684014869888473}
{"id": 4498, "predictions": ["\u2581// \u2581 New Bool \u2581returns \u2581a \u2581new \u2581bool \u2581value"], "references": ["\u2581// \u2581 New Bool \u2581creates \u2581a \u2581new \u2581 Bool"], "bleu": 0.4518010018049224, "rouge_l": 0.6666666666666666}
{"id": 4340, "predictions": ["\u2581// \u2581 FindBy Label \u2581finds \u2581a \u2581 Selection \u2581from \u2581the \u2581 set \u2581of \u2581matched \u2581elements ."], "references": ["\u2581// \u2581 FindBy Label \u2581finds \u2581exactly \u2581one \u2581element \u2581by \u2581associated \u2581 label \u2581 text ."], "bleu": 0.31181814978096556, "rouge_l": 0.5191489361702127}
{"id": 4342, "predictions": ["\u2581// \u2581 FindBy Class \u2581returns \u2581the \u2581 set \u2581of \u2581matched \u2581elements \u2581from \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 FindBy Class \u2581finds \u2581exactly \u2581one \u2581element \u2581with \u2581a \u2581given \u2581 CSS \u2581 class ."], "bleu": 0.24623953025272619, "rouge_l": 0.4265734265734266}
{"id": 4493, "predictions": ["\u2581// \u2581 Time From Ptr \u2581returns \u2581a \u2581time . Time \u2581from \u2581a \u2581 Time ."], "references": ["\u2581// \u2581 Time From Ptr \u2581creates \u2581a \u2581new \u2581 Time \u2581that \u2581will \u2581be \u2581null \u2581if \u2581 t \u2581is \u2581nil ."], "bleu": 0.25674242527758556, "rouge_l": 0.5013698630136987}
{"id": 4482, "predictions": ["\u2581// \u2581 grow Part Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 key \u2581part \u2581of \u2581the \u2581index ."], "references": ["\u2581// \u2581returns \u2581true \u2581unless \u2581part Size \u2581is \u2581large \u2581enough \u2581// \u2581to \u2581 achieve \u2581max Obj Size \u2581with \u2581remaining \u2581parts"], "bleu": 0.08477378788573257, "rouge_l": 0.16137566137566137}
{"id": 4343, "predictions": ["\u2581// \u2581 FindBy ID \u2581returns \u2581the \u2581 set \u2581of \u2581matched \u2581elements \u2581from \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 FindBy ID \u2581finds \u2581exactly \u2581one \u2581element \u2581that \u2581has \u2581the \u2581given \u2581 ID ."], "bleu": 0.27694132751313416, "rouge_l": 0.505699481865285}
{"id": 4345, "predictions": ["\u2581// \u2581 First By \u2581waits \u2581for \u2581the \u2581given \u2581selector \u2581by \u2581the \u2581given \u2581selector \u2581and \u2581returns \u2581the \u2581// \u2581 Selection \u2581object ."], "references": ["\u2581// \u2581 First By XPath \u2581finds \u2581the \u2581first \u2581element \u2581by \u2581XPath \u2581selector ."], "bleu": 0.18728674627858763, "rouge_l": 0.4914400805639476}
{"id": 4453, "predictions": ["\u2581// \u2581Verify Provider \u2581verifies \u2581that \u2581the \u2581request \u2581is \u2581valid"], "references": ["\u2581// \u2581Verify Provider \u2581runs \u2581the \u2581verification \u2581process \u2581against \u2581a \u2581running \u2581 Provider ."], "bleu": 0.17809548511381157, "rouge_l": 0.35209235209235207}
{"id": 5510, "predictions": ["\u2581// \u2581read Full \u2581reads \u2581the \u2581 contents \u2581of \u2581the \u2581 contents \u2581of \u2581the \u2581 contents \u2581of \u2581the \u2581 contents \u2581// \u2581of \u2581the \u2581 contents \u2581of \u2581the \u2581 contents \u2581of \u2581the"], "references": ["\u2581// \u2581read Full \u2581 wraps \u2581io . ReadFull \u2581to \u2581return \u2581io . ErrUnexpectedEOF \u2581instead \u2581// \u2581of \u2581io . EOF \u2581when \u25810 \u2581bytes \u2581are \u2581read ."], "bleu": 0.09279771067975602, "rouge_l": 0.22181818181818178}
{"id": 4826, "predictions": ["\u2581// \u2581 Fail \u2581logs \u2581a \u2581message \u2581and \u2581exits \u2581with \u2581the \u2581error ."], "references": ["\u2581// \u2581 Fail \u2581prints \u2581usage \u2581information \u2581to \u2581stderr \u2581and \u2581exits \u2581with \u2581non - zero \u2581 status"], "bleu": 0.20040251918751809, "rouge_l": 0.4178082191780822}
{"id": 4396, "predictions": ["\u2581// \u2581 Have Popup Text \u2581returns \u2581a \u2581 G ual \u2581matcher \u2581for \u2581the \u2581given \u2581string ."], "references": ["\u2581// \u2581 Have Popup Text \u2581passes \u2581when \u2581the \u2581expected \u2581 text \u2581is \u2581equivalent \u2581to \u2581the \u2581// \u2581 text \u2581 contents \u2581of \u2581an \u2581open \u2581alert , \u2581 confirm , \u2581or \u2581prompt"], "bleu": 0.12621343541148397, "rouge_l": 0.2885135135135135}
{"id": 4351, "predictions": ["\u2581// \u2581 All By Link \u2581returns \u2581a \u2581 Multi Selection \u2581object \u2581from \u2581the \u2581 set \u2581of \u2581matched \u2581elements ."], "references": ["\u2581// \u2581 All By Link \u2581finds \u2581zero \u2581or \u2581more \u2581anchor \u2581elements \u2581by \u2581their \u2581 text \u2581 content ."], "bleu": 0.2680165156355778, "rouge_l": 0.43455031166518254}
{"id": 4348, "predictions": ["\u2581// \u2581 First ByName \u2581returns \u2581the \u2581first \u2581element \u2581in \u2581the \u2581 set \u2581of \u2581matched \u2581elements . \u2581// \u2581If \u2581the \u2581 name \u2581is \u2581not \u2581found , \u2581it \u2581returns \u2581the \u2581first \u2581found"], "references": ["\u2581// \u2581 First ByName \u2581finds \u2581the \u2581first \u2581element \u2581with \u2581the \u2581provided \u2581 name \u2581attribute ."], "bleu": 0.17271600094426348, "rouge_l": 0.4728682170542636}
{"id": 5207, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Stop \u2581interface \u2581for \u2581 Stop Cast ing Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Cast . stop Cast ing \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16451929399933107, "rouge_l": 0.42857142857142855}
{"id": 5262, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Font Families \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . setFont Families \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1471989137239998, "rouge_l": 0.4401154401154401}
{"id": 5261, "predictions": ["\u2581// \u2581Do \u2581 satisfies \u2581the \u2581 Visitor \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . set Bypass CSP \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12673978475914355, "rouge_l": 0.41838134430727025}
{"id": 5242, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Handle base \u2581method \u2581for \u2581the \u2581 Handle Dialog Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . handle JavaScript Dialog \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13380161378318955, "rouge_l": 0.3469852104664391}
{"id": 5620, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Lock file \u2581with \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 New \u2581describes \u2581a \u2581new \u2581 filename \u2581located \u2581at \u2581the \u2581given \u2581absolute \u2581 path ."], "bleu": 0.2864568310554931, "rouge_l": 0.7055730809674028}
{"id": 5223, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Interface \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . release Object Group \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1374462580533874, "rouge_l": 0.40450928381962864}
{"id": 5642, "predictions": ["\u2581// \u2581Get Attr \u2581returns \u2581the \u2581attribute \u2581value \u2581for \u2581a \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get Attr \u2581gets \u2581the \u2581value \u2581of \u2581the \u2581attribute \u2581with \u2581the \u2581provided \u2581 name . \u2581If \u2581the \u2581attribute \u2581does \u2581not \u2581// \u2581exist , \u2581nil \u2581will \u2581be \u2581returned"], "bleu": 0.07970215141904582, "rouge_l": 0.3292212798766383}
{"id": 5209, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Stop \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Background Service . stop Ob serving \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10462661942910988, "rouge_l": 0.32972972972972975}
{"id": 5208, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 S 3 serving \u2581method \u2581of \u2581the \u2581 Start Ob serving Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Background Service . start Ob serving \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12673718536830808, "rouge_l": 0.3696969696969697}
{"id": 5263, "predictions": ["\u2581// \u2581Do \u2581 set \u2581the \u2581 font \u2581 set \u2581to \u2581the \u2581 font \u2581 set"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . set FontSize s \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12874330508144843, "rouge_l": 0.3469852104664391}
{"id": 5205, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 set \u2581of \u2581 set \u2581to \u2581the \u2581sink , \u2581the \u2581 set \u2581of \u2581the \u2581 set \u2581to \u2581be \u2581used"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Cast . set Sink ToUse \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.08282282660969602, "rouge_l": 0.2826691380908248}
{"id": 5199, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 XHR Breakpoint Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Debugger . set XHR Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15210928871814855, "rouge_l": 0.40450928381962864}
{"id": 5198, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Instrumentation \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Debugger . set Instrumentation Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1185574919557074, "rouge_l": 0.346590909090909}
{"id": 5197, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 EventListener \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Debugger . set EventListener Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1185574919557074, "rouge_l": 0.346590909090909}
{"id": 5196, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 DOM Breakpoint Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Debugger . set DOM Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15210928871814855, "rouge_l": 0.40450928381962864}
{"id": 5195, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 XHR Breakpoint Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Debugger . remove XHR Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15210928871814855, "rouge_l": 0.40450928381962864}
{"id": 5194, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Instrumentation Breakpoint \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Debugger . remove Instrumentation Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14577145122121135, "rouge_l": 0.41838134430727025}
{"id": 5290, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 Auto Attach Params \u2581to \u2581the \u2581 set \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Target . setAuto Attach \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13380161378318955, "rouge_l": 0.43416370106761565}
{"id": 6023, "predictions": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581total \u2581number \u2581of \u2581values \u2581across \u2581all \u2581ranges"], "bleu": 0.3641410562218426, "rouge_l": 0.5460358056265985}
{"id": 5325, "predictions": ["\u2581// \u2581 With Break On Async Call \u2581returns \u2581a \u2581new \u2581 Step Into Async Call \u2581object \u2581for \u2581the \u2581 Step Into Params ."], "references": ["\u2581// \u2581 With Break On Async Call \u2581 debugger \u2581will \u2581issue \u2581additional \u2581 Debugger . paused \u2581// \u2581notification \u2581if \u2581any \u2581async \u2581task \u2581is \u2581scheduled \u2581before \u2581next \u2581 pause ."], "bleu": 0.23766406388815844, "rouge_l": 0.37677578752316243}
{"id": 5305, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Continue To Location Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . continue To Location \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16954006424958426, "rouge_l": 0.5150784077201447}
{"id": 5331, "predictions": ["\u2581// \u2581 Connected \u2581is \u2581used \u2581to \u2581 connect \u2581to \u2581the \u2581 active \u2581 Bundle"], "references": ["\u2581// \u2581 Connected \u2581calls \u2581 Connected F \u2581if \u2581it \u2581is \u2581not \u2581null ."], "bleu": 0.18207052811092136, "rouge_l": 0.2982885085574572}
{"id": 5332, "predictions": ["\u2581// \u2581 Disconnected \u2581is \u2581called \u2581when \u2581the \u2581 Bundle \u2581is \u2581 disconnected"], "references": ["\u2581// \u2581 Disconnected \u2581calls \u2581 Disconnected F \u2581if \u2581it \u2581is \u2581not \u2581null ."], "bleu": 0.19690425335318407, "rouge_l": 0.39713541666666663}
{"id": 5304, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Continue With Auth Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Fetch . continue With Auth \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16954006424958426, "rouge_l": 0.5150784077201447}
{"id": 5292, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the Locations \u2581to \u2581the \u2581 set \u2581of \u2581 Remote Locations \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Target . set Remote Locations \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16451929399933107, "rouge_l": 0.42857142857142855}
{"id": 5291, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 set \u2581of \u2581targets \u2581params \u2581to \u2581the \u2581 set Discover Targets \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Target . set Discover Targets \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.18295654224495206, "rouge_l": 0.4048672566371681}
{"id": 5015, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Notification \u2581method \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Memory . simulate Pressure Notification \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13171937539260137, "rouge_l": 0.41838134430727025}
{"id": 5287, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Browser \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Target . dispose Browser Context \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12321560130622289, "rouge_l": 0.43323863636363635}
{"id": 5286, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Target Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Target . detach From Target \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14577145122121135, "rouge_l": 0.41838134430727025}
{"id": 5283, "predictions": ["\u2581// \u2581Do \u2581the \u2581request \u2581to \u2581the \u2581 DevTools DevTools Protocol Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Target . expose DevTools Protocol \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16369713400884936, "rouge_l": 0.45522388059701485}
{"id": 5277, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Compilation \u2581interface \u2581for \u2581 add Compilation Cache Params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . add Compilation Cache \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.21036641013752694, "rouge_l": 0.4414957780458384}
{"id": 5272, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Pre Screen cast \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . start Screen cast \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1572728374696062, "rouge_l": 0.48541114058355433}
{"id": 5266, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581action \u2581to \u2581the \u2581 set \u2581download \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . set Download Behavior \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13572106276731308, "rouge_l": 0.31322207958921694}
{"id": 5264, "predictions": ["\u2581// \u2581Do \u2581returns \u2581the \u2581 set \u2581of \u2581the \u2581 Document Content \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . set Document Content \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16369713400884936, "rouge_l": 0.45522388059701485}
{"id": 5055, "predictions": ["\u2581// \u2581 With Browser Context ID \u2581sets \u2581the \u2581 Browser Context ID \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Browser Context ID \u2581browser Context \u2581to \u2581reset \u2581permissions . \u2581When \u2581omitted , \u2581// \u2581default \u2581browser \u2581context \u2581is \u2581used ."], "bleu": 0.2595010387866368, "rouge_l": 0.40098603122432214}
{"id": 5702, "predictions": ["\u2581// \u2581 clear \u2581removes \u2581all \u2581entries \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581 clear \u2581 emptie s \u2581the \u2581cache ."], "bleu": 0.33932513407933634, "rouge_l": 0.6376306620209059}
{"id": 5105, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Set \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . set Inspect Mode \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1374462580533874, "rouge_l": 0.40450928381962864}
{"id": 5086, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Pseudo State Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 CSS . force Pseudo State \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16858898909159412, "rouge_l": 0.5310945273631842}
{"id": 5084, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 set \u2581of \u2581elements \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . set Outer HTML \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14949751774990683, "rouge_l": 0.38461538461538464}
{"id": 5083, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 set \u2581of \u2581the \u2581 set \u2581nodes \u2581in \u2581the \u2581 set Node Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . set Node Value \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1619557012853241, "rouge_l": 0.3986928104575163}
{"id": 5080, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 set \u2581to \u2581the \u2581 set \u2581attributes ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . setAttributes AsText \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15537125692760353, "rouge_l": 0.3333333333333333}
{"id": 5063, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 dock \u2581 Tile \u2581method"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Browser . set Dock Tile \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12673978475914355, "rouge_l": 0.3347050754458162}
{"id": 5061, "predictions": ["\u2581// \u2581Do \u2581 satisfies \u2581the \u2581 Window Window \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Browser . set Window Bounds \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1374462580533874, "rouge_l": 0.40450928381962864}
{"id": 5191, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 DOM Breakpoint Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Debugger . remove DOM Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15210928871814855, "rouge_l": 0.40450928381962864}
{"id": 5053, "predictions": ["\u2581// \u2581 With Browser Context ID \u2581adds \u2581the \u2581 Browser Context \u2581to \u2581the \u2581 Grant Permissions \u2581params"], "references": ["\u2581// \u2581 With Browser Context ID \u2581browser Context \u2581to \u2581override \u2581permissions . \u2581When \u2581omitted , \u2581// \u2581default \u2581browser \u2581context \u2581is \u2581used ."], "bleu": 0.2696968028442309, "rouge_l": 0.40098603122432214}
{"id": 5052, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Heap Snapshot \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Heap Profiler . take Heap Snapshot \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14492730150310676, "rouge_l": 0.47843137254901963}
{"id": 5036, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581interval \u2581interval \u2581to \u2581the \u2581 set \u2581interval \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Profiler . set Sampling Interval \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13765233317534833, "rouge_l": 0.3034825870646766}
{"id": 5034, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ObjectStore er \u2581interface \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 IndexedDB . delete ObjectStore Entries \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1374462580533874, "rouge_l": 0.40450928381962864}
{"id": 5029, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Context \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Performance . setTime Domain \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13434323860909256, "rouge_l": 0.3652694610778443}
{"id": 5022, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Start Report Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Log . start Violations Report \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1374462580533874, "rouge_l": 0.40450928381962864}
{"id": 5010, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 rate Rate \u2581params \u2581to \u2581the \u2581 set \u2581 rate \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Animation . set Playback Rate \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13380161378318955, "rouge_l": 0.3469852104664391}
{"id": 5136, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Cache Disabled Params \u2581interface \u2581for \u2581 Set Cache Disabled Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . setCache Disabled \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12512236921161915, "rouge_l": 0.35138248847926273}
{"id": 5193, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 EventListener . EventListener \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Debugger . remove EventListener Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1374462580533874, "rouge_l": 0.40450928381962864}
{"id": 5188, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Tap Tap Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . synthesize Tap Gesture \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1374462580533874, "rouge_l": 0.40450928381962864}
{"id": 5187, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Scroll Scroll \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . synthesize Scroll Gesture \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13171937539260137, "rouge_l": 0.41838134430727025}
{"id": 5184, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 distributor \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . synthesize Pinch Gesture \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1185574919557074, "rouge_l": 0.346590909090909}
{"id": 5176, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Agent \u2581interface \u2581for \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set UserAgent Override \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14105352671463167, "rouge_l": 0.39152759948652116}
{"id": 5167, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 Page ScaleFactor \u2581params \u2581to \u2581the \u2581 Page ScaleFactor \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . setPage ScaleFactor \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13834368456410945, "rouge_l": 0.3728606356968216}
{"id": 5166, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 mocked \u2581 set \u2581of \u2581 this \u2581 set \u2581command"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set Geolocation Override \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13834368456410945, "rouge_l": 0.2857142857142857}
{"id": 5162, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 RedisClient \u2581 Media Set \u2581for \u2581the \u2581 Media Set Params \u2581instance ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . set Emulated Media \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1598921499894403, "rouge_l": 0.45963401506996776}
{"id": 5154, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 BackgroundColor . Override Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . setDefault BackgroundColor Override \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15020004628709785, "rouge_l": 0.4698331193838254}
{"id": 5912, "predictions": ["\u2581// \u2581Create Store \u2581creates \u2581a \u2581new \u2581store \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Create Store \u2581will \u2581 dial \u2581the \u2581passed \u2581database \u2581and \u2581return \u2581a \u2581new \u2581store . \u2581It \u2581will \u2581// \u2581return \u2581an \u2581error \u2581if \u2581the \u2581initial \u2581connection \u2581failed"], "bleu": 0.10341106315266457, "rouge_l": 0.33862014274385405}
{"id": 5130, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Prim Network Conditions \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . emulate Network Conditions \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1572728374696062, "rouge_l": 0.48541114058355433}
{"id": 5643, "predictions": ["\u2581// \u2581Remove Attr \u2581removes \u2581a \u2581attribute \u2581from \u2581the \u2581 Attrs ."], "references": ["\u2581// \u2581Remove Attr \u2581will \u2581 remove \u2581the \u2581attribute \u2581with \u2581the \u2581provided \u2581 name ."], "bleu": 0.1919385676652243, "rouge_l": 0.5481386392811297}
{"id": 5872, "predictions": ["\u2581// \u2581 ToFloat 32 Or \u2581returns \u2581the \u2581float 32 \u2581value \u2581from \u2581a \u2581string ."], "references": ["\u2581// \u2581 ToFloat 32 Or \u2581parses \u2581as \u2581a \u2581float 32 \u2581or \u2581returns \u2581defaultValue \u2581on \u2581error ."], "bleu": 0.3418245520016127, "rouge_l": 0.5269978401727862}
{"id": 5863, "predictions": ["\u2581// \u2581Strip Punctuation \u2581removes \u2581the \u2581first \u2581element \u2581from \u2581the \u2581string \u2581 s ."], "references": ["\u2581// \u2581Strip Punctuation \u2581 strip s \u2581 punc ation \u2581from \u2581string ."], "bleu": 0.21773944427474795, "rouge_l": 0.4834874504623514}
{"id": 5826, "predictions": ["\u2581// \u2581 Cho mp Right \u2581returns \u2581the \u2581string \u2581if \u2581the \u2581 left \u2581 left \u2581string \u2581is \u2581 left ."], "references": ["\u2581// \u2581 Cho mp Right \u2581removes \u2581suffix \u2581from \u2581end \u2581of \u2581 s ."], "bleu": 0.2534743707366162, "rouge_l": 0.4528101802757158}
{"id": 5553, "predictions": ["\u2581// \u2581Remove First Suffix \u2581removes \u2581the \u2581first \u2581suffix \u2581from \u2581the \u2581 S now ball \u2581mode ."], "references": ["\u2581// \u2581Removes \u2581the \u2581first \u2581suffix \u2581found"], "bleu": 0.1513851459876605, "rouge_l": 0.39610389610389607}
{"id": 5709, "predictions": ["\u2581// \u2581 New Stream Decoder \u2581creates \u2581a \u2581new \u2581stream \u2581decoder ."], "references": ["\u2581// \u2581 New Stream Decoder \u2581returns \u2581a \u2581new \u2581stream \u2581decoder \u2581that \u2581takes \u2581input \u2581from \u2581 p . \u2581// \u2581// \u2581The \u2581function \u2581panic s \u2581if \u2581 p \u2581is \u2581nil ."], "bleu": 0.12641705552939994, "rouge_l": 0.46247156937073547}
{"id": 5949, "predictions": ["\u2581// \u2581 New Pool \u2581creates \u2581a \u2581new \u2581pool"], "references": ["\u2581// \u2581 New Pool \u2581creates \u2581and \u2581returns \u2581a \u2581new \u2581pool ."], "bleu": 0.513868592693246, "rouge_l": 0.818791946308725}
{"id": 5851, "predictions": ["\u2581// \u2581 Pad Right F \u2581 Pad \u2581down \u2581the \u2581 n \u2581of \u2581the \u2581 n \u2581of \u2581the \u2581 n \u2581 n \u2581and \u2581 n ."], "references": ["\u2581// \u2581 Pad Right F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Pad right"], "bleu": 0.23022475762865002, "rouge_l": 0.5236051502145923}
{"id": 5794, "predictions": ["\u2581// \u2581 Source \u2581returns \u2581the \u2581source \u2581 name \u2581of \u2581the \u2581mapping"], "references": ["\u2581// \u2581 Source \u2581returns \u2581the \u2581backing \u2581file \u2581and \u2581offset \u2581for \u2581the \u2581mapping , \u2581or \u2581\"\", \u25810 \u2581if \u2581 none ."], "bleu": 0.21323465727575552, "rouge_l": 0.42914572864321615}
{"id": 5850, "predictions": ["\u2581// \u2581 Pad Left F \u2581 Pad \u2581down \u2581the \u2581 left \u2581 left \u2581in \u2581the \u2581 left - first \u2581 n ."], "references": ["\u2581// \u2581 Pad Left F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Pad Left ."], "bleu": 0.2624310277292268, "rouge_l": 0.5417406749555951}
{"id": 5762, "predictions": ["\u2581// \u2581command Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the \u2581parent \u2581command"], "references": ["\u2581// \u2581command Path \u2581is \u2581like \u2581 cobra . Command . Command Path \u2581but \u2581 tweak ed \u2581to \u2581// \u2581use \u2581 c . Use \u2581instead \u2581of \u2581 c . Name \u2581for"], "bleu": 0.0647809307142322, "rouge_l": 0.2515463917525773}
{"id": 5023, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Stop Marshaler \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Log . stop Violations Report \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12673978475914355, "rouge_l": 0.3347050754458162}
{"id": 4479, "predictions": ["\u2581// \u2581 ACL \u2581returns \u2581a \u2581 Header . Header \u2581with \u2581the \u2581given \u2581 ACL ."], "references": ["\u2581// \u2581 add \u2581can ned \u2581 acl \u2581to \u2581http . Header"], "bleu": 0.14247788801610148, "rouge_l": 0.39559014267185466}
{"id": 4352, "predictions": ["\u2581// \u2581 All ByLabel \u2581returns \u2581the \u2581 set \u2581of \u2581matched \u2581elements \u2581in \u2581the \u2581 set \u2581of \u2581matched \u2581// \u2581elements ."], "references": ["\u2581// \u2581 All ByLabel \u2581finds \u2581zero \u2581or \u2581more \u2581elements \u2581by \u2581associated \u2581 label \u2581 text ."], "bleu": 0.1969221590285716, "rouge_l": 0.39684014869888473}
{"id": 4353, "predictions": ["\u2581// \u2581 All ByName \u2581returns \u2581a \u2581 set \u2581of \u2581matched \u2581elements \u2581from \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 All ByName \u2581finds \u2581zero \u2581or \u2581more \u2581elements \u2581with \u2581the \u2581provided \u2581 name \u2581attribute ."], "bleu": 0.25281168697394946, "rouge_l": 0.5484515484515484}
{"id": 4354, "predictions": ["\u2581// \u2581 All \u2581retrieves \u2581all \u2581 siblings \u2581of \u2581the \u2581 shapes \u2581that \u2581match \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 All ByClass \u2581finds \u2581zero \u2581or \u2581more \u2581elements \u2581with \u2581a \u2581given \u2581 CSS \u2581 class ."], "bleu": 0.1619557012853241, "rouge_l": 0.3446327683615819}
{"id": 4355, "predictions": ["\u2581// \u2581 All ByID \u2581returns \u2581a \u2581 set \u2581of \u2581 Selection \u2581from \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 All ByID \u2581finds \u2581zero \u2581or \u2581more \u2581elements \u2581with \u2581a \u2581given \u2581 ID ."], "bleu": 0.24623953025272619, "rouge_l": 0.505699481865285}
{"id": 5028, "predictions": ["\u2581// \u2581 With Fetch Relative s \u2581returns \u2581the \u2581 search \u2581for \u2581the \u2581 accessibility \u2581tree ."], "references": ["\u2581// \u2581 With Fetch Relative s \u2581whether \u2581to \u2581fetch \u2581 this \u2581nodes \u2581 ancestors , \u2581 siblings \u2581and \u2581// \u2581 children . \u2581Defaults \u2581to \u2581true ."], "bleu": 0.20378124471785106, "rouge_l": 0.41092814371257486}
{"id": 5026, "predictions": ["\u2581// \u2581 With Backend NodeID \u2581sets \u2581the \u2581 Backend NodeID \u2581to \u2581 get \u2581the \u2581 accessibility \u2581 accessibility \u2581tree \u2581for \u2581// \u2581the \u2581given \u2581 NodeID ."], "references": ["\u2581// \u2581 With Backend NodeID \u2581 identifier \u2581of \u2581the \u2581backend \u2581node \u2581to \u2581 get \u2581the \u2581partial \u2581// \u2581 accessibility \u2581tree \u2581for ."], "bleu": 0.37030468338190614, "rouge_l": 0.6345353675450762}
{"id": 5149, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 mocked \u2581 Clear \u2581 Override \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . clear Geolocation Override \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13572106276731308, "rouge_l": 0.31322207958921694}
{"id": 5150, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Page \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Emulation . reset Page ScaleFactor \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12321560130622289, "rouge_l": 0.43323863636363635}
{"id": 5169, "predictions": ["\u2581// \u2581 With Max Touch Points \u2581specifies \u2581the \u2581maximum \u2581 size \u2581of \u2581the \u2581 color \u2581of \u2581the \u2581 Emulation Emulation Emulation \u2581// \u2581 set \u2581of \u2581the \u2581 Emulation Emulation Emulation"], "references": ["\u2581// \u2581 With Max Touch Points \u2581maximum \u2581touch \u2581points \u2581supported . \u2581Defaults \u2581to \u2581one ."], "bleu": 0.18882437844970767, "rouge_l": 0.33100775193798454}
{"id": 5000, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Stop \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . stop All Workers \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.10462661942910988, "rouge_l": 0.32972972972972975}
{"id": 5278, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 distributor \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . clear Compilation Cache \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1185574919557074, "rouge_l": 0.346590909090909}
{"id": 5275, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Screen Screen Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . stop Screen cast \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1479170582755855, "rouge_l": 0.45522388059701485}
{"id": 4970, "predictions": ["\u2581// \u2581 Stream Exists \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 id \u2581is \u2581not \u2581 set ."], "references": ["\u2581// \u2581 Stream Exists \u2581checks \u2581whether \u2581a \u2581stream \u2581by \u2581a \u2581given \u2581 id \u2581 exists"], "bleu": 0.2948993986902436, "rouge_l": 0.5191489361702127}
{"id": 5070, "predictions": ["\u2581// \u2581 With Include UserAgent Shadow DOM \u2581sets \u2581the \u2581 fluent \u2581 edit DOM DOM UserAgent \u2581algorithm \u2581// \u2581 DOM Include \u2581to \u2581 search \u2581to \u2581a \u2581 search \u2581 text"], "references": ["\u2581// \u2581 With Include UserAgent Shadow DOM \u2581true \u2581to \u2581 search \u2581in \u2581user \u2581agent \u2581 shadow \u2581DOM ."], "bleu": 0.26598871140611724, "rouge_l": 0.47997138769670955}
{"id": 5256, "predictions": ["\u2581// \u2581 With Script To Evaluate OnLoad \u2581sets \u2581the \u2581 Script To Evaluate On Document \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Script To Evaluate OnLoad \u2581if \u2581 set , \u2581the \u2581 script \u2581will \u2581be \u2581injected \u2581into \u2581all \u2581// \u2581frames \u2581of \u2581the \u2581 inspected \u2581 page \u2581after \u2581reload ."], "bleu": 0.22332373963415184, "rouge_l": 0.3860759493670886}
{"id": 4966, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Server ."], "references": ["\u2581// \u2581 New \u2581will \u2581create \u2581a \u2581server \u2581and \u2581setup \u2581defaults"], "bleu": 0.24855227187657006, "rouge_l": 0.41709401709401706}
{"id": 4961, "predictions": ["\u2581// \u2581 Bump Minor \u2581sets \u2581the \u2581version \u2581of \u2581the \u2581version ."], "references": ["\u2581// \u2581 Bump Minor \u2581 increments \u2581the \u2581 Minor \u2581field \u2581by \u2581 1 \u2581and \u2581resets \u2581all \u2581other \u2581fields \u2581to \u2581their \u2581default \u2581values"], "bleu": 0.12206524607218203, "rouge_l": 0.2858481724461106}
{"id": 4889, "predictions": ["\u2581// \u2581Set StrokeColor \u2581sets \u2581the \u2581 color \u2581of \u2581the \u2581 color ."], "references": ["\u2581// \u2581overwrite \u2581 Stack Graphic Context \u2581methods \u2581// \u2581Set StrokeColor \u2581sets \u2581the \u2581 stroke \u2581 color"], "bleu": 0.37299111626441217, "rouge_l": 0.5570776255707762}
{"id": 4869, "predictions": ["\u2581// \u2581 recalc \u2581 increments \u2581the \u2581current \u2581 width \u2581and \u2581 height ."], "references": ["\u2581// \u2581 recalc \u2581 recalculate s \u2581scale \u2581and \u2581bounds \u2581values \u2581from \u2581the \u2581 font \u2581 size , \u2581screen \u2581// \u2581resolution \u2581and \u2581 font \u2581metrics , \u2581and \u2581invalidate s \u2581the \u2581glyph"], "bleu": 0.0880554129240232, "rouge_l": 0.3473309608540925}
{"id": 5248, "predictions": ["\u2581// \u2581 With Display Header Footer \u2581sets \u2581the \u2581 Display Header Footer \u2581optional \u2581argument . \u2581// \u2581 Display \u2581header \u2581to \u2581 display \u2581the \u2581 text \u2581 footer \u2581to \u2581the \u2581"], "references": ["\u2581// \u2581 With Display Header Footer \u2581 display \u2581header \u2581and \u2581 footer . \u2581Defaults \u2581to \u2581false ."], "bleu": 0.23337388721354071, "rouge_l": 0.4926578560939794}
{"id": 5185, "predictions": ["\u2581// \u2581 With X Over scroll \u2581adds \u2581the \u2581 X Over scroll \u2581params \u2581to \u2581the \u2581 Synthesize Scroll Gesture \u2581params"], "references": ["\u2581// \u2581 With X Over scroll \u2581the \u2581number \u2581of \u2581additional \u2581pixels \u2581to \u2581 scroll \u2581back \u2581along \u2581the \u2581 X \u2581// \u2581axis , \u2581in \u2581addition \u2581to \u2581the \u2581given \u2581distance ."], "bleu": 0.24288130111522097, "rouge_l": 0.4345854922279793}
{"id": 5186, "predictions": ["\u2581// \u2581 With Y Over scroll \u2581adds \u2581the \u2581 Y it \u2581clause \u2581to \u2581the \u2581 scroll \u2581 scroll \u2581params"], "references": ["\u2581// \u2581 With Y Over scroll \u2581the \u2581number \u2581of \u2581additional \u2581pixels \u2581to \u2581 scroll \u2581back \u2581along \u2581the \u2581 Y \u2581// \u2581axis , \u2581in \u2581addition \u2581to \u2581the \u2581given \u2581distance ."], "bleu": 0.24357489301412738, "rouge_l": 0.4417379855167873}
{"id": 5240, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Reset \u2581method \u2581for \u2581 Reset Reset History Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . reset Navigation History \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1437791910008819, "rouge_l": 0.35714285714285715}
{"id": 5235, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Ring Ring Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . b ring ToFront \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13225016524497193, "rouge_l": 0.32360742705570295}
{"id": 4582, "predictions": ["\u2581// \u2581 On Gossip Uni cast \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sends \u2581a \u2581 gossip \u2581message \u2581to \u2581the \u2581// \u2581 router ' s \u2581 gossip \u2581 type ."], "references": ["\u2581// \u2581 On Gossip Uni cast \u2581implements \u2581 Gossip er , \u2581but \u2581always \u2581returns \u2581an \u2581error , \u2581as \u2581a \u2581// \u2581 router \u2581should \u2581only \u2581receive \u2581 gossip \u2581broadcast s \u2581of"], "bleu": 0.2559471622206333, "rouge_l": 0.4393351800554017}
{"id": 5216, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Console Entries \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . discard Console Entries \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15071985378948696, "rouge_l": 0.5020576131687242}
{"id": 5220, "predictions": ["\u2581// \u2581 With ExecutionContext ID \u2581sets \u2581the \u2581 fluent \u2581 scope \u2581of \u2581the \u2581global \u2581global \u2581 scope ."], "references": ["\u2581// \u2581 With ExecutionContext ID \u2581specifies \u2581in \u2581which \u2581execution \u2581context \u2581to \u2581lookup \u2581// \u2581global \u2581 scope \u2581variables ."], "bleu": 0.32594818888335836, "rouge_l": 0.5}
{"id": 4350, "predictions": ["\u2581// \u2581 All By \u2581implements \u2581the \u2581 Searcher \u2581interface ."], "references": ["\u2581// \u2581 All By XPath \u2581finds \u2581zero \u2581or \u2581more \u2581elements \u2581by \u2581XPath \u2581selector ."], "bleu": 0.24614529278805308, "rouge_l": 0.40450928381962864}
{"id": 4317, "predictions": ["\u2581// \u2581Set Level \u2581 set \u2581the \u2581level \u2581of \u2581 backends \u2581for \u2581the \u2581given \u2581log \u2581level ."], "references": ["\u2581// \u2581Set Level \u2581propagate s \u2581the \u2581same \u2581level \u2581to \u2581all \u2581 backends ."], "bleu": 0.18842393723950338, "rouge_l": 0.5622119815668203}
{"id": 4338, "predictions": ["\u2581// \u2581 FindBy \u2581finds \u2581a \u2581 Selection \u2581by \u2581 name \u2581from \u2581the \u2581 week \u2581in \u2581the \u2581 week , \u2581// \u2581and \u2581returns \u2581the \u2581 Selection \u2581object \u2581that \u2581matches \u2581the \u2581given"], "references": ["\u2581// \u2581 FindBy XPath \u2581finds \u2581exactly \u2581one \u2581element \u2581by \u2581XPath \u2581selector ."], "bleu": 0.08309327583315261, "rouge_l": 0.25803722504230114}
{"id": 4341, "predictions": ["\u2581// \u2581Find ByName \u2581returns \u2581the \u2581 set \u2581of \u2581matched \u2581elements \u2581by \u2581 name ."], "references": ["\u2581// \u2581Find ByName \u2581finds \u2581exactly \u2581element \u2581with \u2581the \u2581provided \u2581 name \u2581attribute ."], "bleu": 0.2102369368326755, "rouge_l": 0.5220048899755501}
{"id": 5043, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Profiler . stop Type Profile \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1185574919557074, "rouge_l": 0.346590909090909}
{"id": 5041, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Profile \u2581interface \u2581for \u2581 Start Type Profile Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Profiler . start Type Profile \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16451929399933107, "rouge_l": 0.42857142857142855}
{"id": 6005, "predictions": ["\u2581// \u2581is Input Done \u2581returns \u2581true \u2581if \u2581the \u2581 manager \u2581is \u2581closed ."], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581the \u2581input \u2581channels \u2581are \u2581nil"], "bleu": 0.18798317647335086, "rouge_l": 0.37596302003081655}
{"id": 5115, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Browser \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . clear Browser Cache \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12321560130622289, "rouge_l": 0.43323863636363635}
{"id": 5116, "predictions": ["\u2581// \u2581Do \u2581 clear s \u2581the \u2581 Browser \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . clear Browser Cookies \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14211205105094168, "rouge_l": 0.48541114058355433}
{"id": 4171, "predictions": ["\u2581// \u2581 Sprintf QueryString \u2581returns \u2581the \u2581 URL \u2581used \u2581to \u2581 encode \u2581the \u2581request ."], "references": ["\u2581// \u2581If \u2581qs \u2581 exists \u2581then \u2581return \u2581it \u2581with \u2581a \u2581lead in \u2581\"?\" , \u2581 apache \u2581log \u2581 style ."], "bleu": 0.07757152471914057, "rouge_l": 0.2785388127853881}
{"id": 5654, "predictions": ["\u2581// \u2581 Call Err \u2581returns \u2581a \u2581 functional \u2581error \u2581which \u2581will \u2581be \u2581used \u2581to \u2581 call \u2581the \u2581// \u2581 call \u2581to \u2581 call \u2581the \u2581function \u2581to \u2581 call \u2581the \u2581function"], "references": ["\u2581// \u2581 Call Err \u2581queues \u2581function \u2581 f \u2581on \u2581the \u2581main \u2581thread \u2581and \u2581returns \u2581an \u2581error \u2581returned \u2581by \u2581 f ."], "bleu": 0.13673863407073664, "rouge_l": 0.2835325365205843}
{"id": 5056, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Permissions Params \u2581interface \u2581for \u2581 Reset Permissions Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Browser . reset Permissions \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1437791910008819, "rouge_l": 0.3728606356968216}
{"id": 5222, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Object \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . release Object \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15705810592958255, "rouge_l": 0.5097493036211699}
{"id": 5064, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Delete \u2581method \u2581of \u2581the \u2581cache . Cache Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Cache Storage . delete Cache \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13834368456410945, "rouge_l": 0.416382252559727}
{"id": 5180, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Debugger \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . dispatch MouseEvent \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13434323860909256, "rouge_l": 0.3652694610778443}
{"id": 5078, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 AttributeValue \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . setAttribute Value \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14544785215055717, "rouge_l": 0.3860759493670886}
{"id": 4867, "predictions": ["\u2581// \u2581 New Painter \u2581returns \u2581a \u2581new \u2581 Painter ."], "references": ["\u2581// \u2581 New RGBA Painter \u2581creates \u2581a \u2581new \u2581 RGBA Painter \u2581for \u2581the \u2581given \u2581image ."], "bleu": 0.2035939321238249, "rouge_l": 0.6646489104116223}
{"id": 5065, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Delete \u2581method \u2581of \u2581the \u2581 Delete Entry Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Cache Storage . delete Entry \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13380161378318955, "rouge_l": 0.3469852104664391}
{"id": 5798, "predictions": ["\u2581// \u2581 Align \u2581returns \u2581the \u2581 left \u2581 x \u2581and \u2581 x ."], "references": ["\u2581// \u2581 Align \u2581 rounds \u2581a \u2581up \u2581to \u2581a \u2581multiple \u2581of \u2581 x . \u2581// \u2581 x \u2581must \u2581be \u2581a \u2581power \u2581of \u2581 2."], "bleu": 0.1262341471490542, "rouge_l": 0.41042893187552554}
{"id": 5031, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Snapshot \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Layer Tree . release Snapshot \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12321560130622289, "rouge_l": 0.43323863636363635}
{"id": 4097, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581 manager \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581repository \u2581 manager , \u2581that \u2581can \u2581be \u2581later \u2581configured \u2581// \u2581and \u2581used ."], "bleu": 0.275864669078055, "rouge_l": 0.5015416238437821}
{"id": 5181, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 TouchEvent \u2581interface \u2581for \u2581 Dispatch TouchEvent Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . dispatch TouchEvent \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1553712569276035, "rouge_l": 0.38461538461538464}
{"id": 5067, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 SearchResults . Interface \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . discard SearchResults \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16787723868520182, "rouge_l": 0.3577712609970674}
{"id": 5074, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581request \u2581to \u2581the \u2581request \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . request ChildNodes \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15553014371537452, "rouge_l": 0.34512022630834516}
{"id": 5073, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Node Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . removeNode \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1689983564524028, "rouge_l": 0.3929146537842191}
{"id": 4819, "predictions": ["\u2581// \u2581 Compare \u2581a \u2581 helper \u2581function \u2581to \u2581 apply \u2581the \u2581 data \u2581from \u2581a \u2581reader \u2581to \u2581 get \u2581the \u2581// \u2581 data Reader ."], "references": ["\u2581// \u2581newData Reader \u2581creates \u2581a \u2581new \u2581 Data Reader \u2581reading \u2581from \u2581' r ' ."], "bleu": 0.06646016289550873, "rouge_l": 0.26180257510729615}
{"id": 5831, "predictions": ["\u2581// \u2581 Escape HTML \u2581returns \u2581a \u2581 escape \u2581HTML \u2581string \u2581with \u2581HTML \u2581 escape \u2581HTML ."], "references": ["\u2581// \u2581 Escape HTML \u2581is \u2581 alias \u2581for \u2581 html . Escape String ."], "bleu": 0.24078435074822624, "rouge_l": 0.4723451327433628}
{"id": 5210, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Recording \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Background Service . set Recording \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12321560130622289, "rouge_l": 0.43323863636363635}
{"id": 4727, "predictions": ["\u2581// \u2581 Is Admin \u2581returns \u2581true \u2581if \u2581the \u2581 admin \u2581 admin \u2581 admin \u2581 admin \u2581 admin ."], "references": ["\u2581// \u2581 Is Admin \u2581returns \u2581true \u2581if \u2581the \u2581current \u2581user \u2581is \u2581signed \u2581in \u2581and \u2581// \u2581is \u2581currently \u2581registered \u2581as \u2581an \u2581 administrator \u2581of \u2581the \u2581application ."], "bleu": 0.2921147620785401, "rouge_l": 0.4323175053153792}
{"id": 5211, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Events Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Background Service . clear Events \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14584177316489025, "rouge_l": 0.4698331193838254}
{"id": 5816, "predictions": ["\u2581// \u2581 New Tokenizer \u2581returns \u2581a \u2581new \u2581 Tokenizer ."], "references": ["\u2581// \u2581 New Tokenizer \u2581creates \u2581a \u2581new \u2581tokenizer \u2581from \u2581an \u2581input \u2581stream ."], "bleu": 0.30908873025793027, "rouge_l": 0.5947075208913649}
{"id": 4670, "predictions": ["\u2581// \u2581 get Struct Codec \u2581returns \u2581a \u2581 protobuf Codec \u2581for \u2581the \u2581given \u2581struct ."], "references": ["\u2581// \u2581 get Struct Codec \u2581returns \u2581the \u2581struct Codec \u2581for \u2581the \u2581given \u2581struct \u2581 type ."], "bleu": 0.5858935208837177, "rouge_l": 0.7697160883280757}
{"id": 5072, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Node \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . removeAttribute \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16481400866629634, "rouge_l": 0.4093959731543625}
{"id": 5678, "predictions": ["\u2581// \u2581 Adapter Of \u2581returns \u2581a Adapter \u2581that \u2581is \u2581a \u2581 Adapter \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 name \u2581of \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 Adapter Of \u2581returns \u2581the \u2581adapter \u2581for \u2581typ , \u2581setting \u2581ok \u2581to \u2581true \u2581if \u2581one \u2581was \u2581found , \u2581// \u2581false \u2581otherwise ."], "bleu": 0.17379110740253056, "rouge_l": 0.31423052157115255}
{"id": 5032, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ObjectStore er \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 IndexedDB . clear ObjectStore \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1471989137239998, "rouge_l": 0.4401154401154401}
{"id": 5033, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Database \u2581method"], "references": ["\u2581// \u2581Do \u2581executes \u2581 IndexedDB . delete Database \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12337170820562471, "rouge_l": 0.3794712286158632}
{"id": 5128, "predictions": ["\u2581// \u2581Do \u2581 - \u2581 get \u2581the \u2581request \u2581to \u2581the \u2581request"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . delete Cookies \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1420146856299917, "rouge_l": 0.3283983849259758}
{"id": 5133, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 XHR \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . replay XHR \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1396215680138453, "rouge_l": 0.45658682634730546}
{"id": 5018, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Sampling Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Memory . start Sampling \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1597214530273207, "rouge_l": 0.4925975773889637}
{"id": 5011, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Set Set Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Animation . set Timing \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15549322861581405, "rouge_l": 0.39713541666666663}
{"id": 5009, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 Paused \u2581 set \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Animation . set Paused \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16064553745630614, "rouge_l": 0.4615384615384617}
{"id": 5008, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 Seek \u2581to \u2581the \u2581 Seek Animations \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Animation . seek Animations \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14961487835433152, "rouge_l": 0.31770833333333337}
{"id": 5007, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 Release \u2581to \u2581the \u2581 Release Animations \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Animation . release Animations \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14961487835433152, "rouge_l": 0.31770833333333337}
{"id": 5144, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581request \u2581to \u2581the \u2581request"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . setCookie s \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12139281957861149, "rouge_l": 0.2739520958083832}
{"id": 5147, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581request \u2581to \u2581the \u2581request \u2581context"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . setRequest Interception \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.135323305042906, "rouge_l": 0.35209235209235207}
{"id": 5003, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Registration \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . update Registration \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12321560130622289, "rouge_l": 0.43323863636363635}
{"id": 5096, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Prim Frame Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . highlight Frame \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15190160719892454, "rouge_l": 0.42479108635097496}
{"id": 5103, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Rect \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . highlight Rect \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1396215680138453, "rouge_l": 0.45658682634730546}
{"id": 5001, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Worker \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . stop Worker \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12321560130622289, "rouge_l": 0.43323863636363635}
{"id": 5102, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Quad Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . highlight Quad \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1471989137239998, "rouge_l": 0.4401154401154401}
{"id": 6040, "predictions": ["\u2581// \u2581Set Ext \u2581sets \u2581the \u2581 ext \u2581extension \u2581for \u2581the \u2581 File Sequence ."], "references": ["\u2581// \u2581Set \u2581a \u2581new \u2581 ext \u2581for \u2581the \u2581sequence"], "bleu": 0.17098323692758396, "rouge_l": 0.543026706231454}
{"id": 4999, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Start Worker Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . start Worker \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1870299773155223, "rouge_l": 0.48541114058355433}
{"id": 5177, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Re Debugger \u2581method \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . dispatch KeyEvent \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14615903653944176, "rouge_l": 0.33983286908078}
{"id": 4998, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . skip Waiting \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1185574919557074, "rouge_l": 0.346590909090909}
{"id": 4996, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Worker Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . inspect Worker \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1792371224986277, "rouge_l": 0.5020576131687242}
{"id": 5101, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Node \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . highlight Node \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1396215680138453, "rouge_l": 0.45658682634730546}
{"id": 5178, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 Text Params \u2581to \u2581the \u2581 insert \u2581 text ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Input . insert Text \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1486599636902727, "rouge_l": 0.4474327628361858}
{"id": 5054, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581grant \u2581to \u2581the \u2581 Grant Permissions Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Browser . grant Permissions \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15549322861581405, "rouge_l": 0.39713541666666663}
{"id": 5321, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 ReturnValue . Set , \u2581the \u2581 set \u2581of \u2581the \u2581 items \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . set ReturnValue \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13596634387289888, "rouge_l": 0.4914400805639476}
{"id": 5271, "predictions": ["\u2581// \u2581 With Every Nth Frame \u2581returns \u2581the \u2581 Start Screen Option \u2581for \u2581the \u2581 Start Screen"], "references": ["\u2581// \u2581 With Every Nth Frame \u2581send \u2581every \u2581 n - th \u2581frame ."], "bleu": 0.3381307292971254, "rouge_l": 0.45963401506996776}
{"id": 5281, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Target With Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Target . activate Target \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16810676226047, "rouge_l": 0.42479108635097496}
{"id": 5874, "predictions": ["\u2581// \u2581 Unescape HTML \u2581returns \u2581a \u2581 text \u2581 text \u2581for \u2581HTML \u2581 html ."], "references": ["\u2581// \u2581 Unescape HTML \u2581is \u2581an \u2581 alias \u2581for \u2581 html . Unescape String ."], "bleu": 0.3237722713145643, "rouge_l": 0.6}
{"id": 5255, "predictions": ["\u2581// \u2581 With Prefer CSS PageSize \u2581adds \u2581the \u2581 Prefer CSS PageSize \u2581to \u2581the \u2581 Print To PDF"], "references": ["\u2581// \u2581 With Prefer CSS PageSize \u2581whether \u2581or \u2581not \u2581to \u2581prefer \u2581 page \u2581 size \u2581as \u2581defined \u2581by \u2581// \u2581 css . \u2581Defaults \u2581to \u2581false , \u2581in \u2581which \u2581case \u2581the"], "bleu": 0.1772005541406964, "rouge_l": 0.3588235294117647}
{"id": 5284, "predictions": ["\u2581// \u2581 With Browser Context ID \u2581adds \u2581the \u2581 Browser Context \u2581to \u2581the \u2581 Target \u2581 Target \u2581params"], "references": ["\u2581// \u2581 With Browser Context ID \u2581the \u2581browser \u2581context \u2581to \u2581create \u2581the \u2581 page \u2581in ."], "bleu": 0.35870004213153, "rouge_l": 0.594541910331384}
{"id": 5862, "predictions": ["\u2581// \u2581 Slug ify \u2581returns \u2581a \u2581 Slug \u2581for \u2581the \u2581given \u2581string \u2581 s ."], "references": ["\u2581// \u2581 Slug ify \u2581converts \u2581 s \u2581into \u2581a \u2581 dasherize d \u2581string \u2581suitable \u2581for \u2581 URL \u2581segment ."], "bleu": 0.2415396415366871, "rouge_l": 0.518413597733711}
{"id": 4344, "predictions": ["\u2581// \u2581 First \u2581returns \u2581the \u2581first \u2581element \u2581in \u2581the \u2581 set \u2581of \u2581matched \u2581elements ."], "references": ["\u2581// \u2581 First \u2581finds \u2581the \u2581first \u2581element \u2581by \u2581 CSS \u2581selector ."], "bleu": 0.23578316044531808, "rouge_l": 0.6047087980173481}
{"id": 5289, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 SendMessage ToTarget \u2581params \u2581to \u2581the \u2581 SendMessage ToTarget"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Target . sendMessage ToTarget \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14949751774990683, "rouge_l": 0.38461538461538464}
{"id": 4289, "predictions": ["\u2581// \u2581Must Parse In Location \u2581returns \u2581a \u2581time . Time \u2581from \u2581a \u2581 Location ."], "references": ["\u2581// \u2581Must Parse In Location \u2581must \u2581parse \u2581string \u2581to \u2581time \u2581in \u2581location \u2581or \u2581will \u2581panic"], "bleu": 0.31314224813827346, "rouge_l": 0.4}
{"id": 5842, "predictions": ["\u2581// \u2581 Letters \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 slice \u2581of \u2581strings \u2581// \u2581that \u2581are \u2581 unescaped ."], "references": ["\u2581// \u2581 Letters \u2581returns \u2581an \u2581array \u2581of \u2581 runes \u2581as \u2581strings \u2581so \u2581it \u2581can \u2581be \u2581indexed \u2581into ."], "bleu": 0.1324317283199537, "rouge_l": 0.36402387041773226}
{"id": 5306, "predictions": ["\u2581// \u2581 With Include CommandLine API \u2581sets \u2581the \u2581 With Include CommandLine API \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Include CommandLine API \u2581specifies \u2581whether \u2581command \u2581line \u2581API \u2581should \u2581be \u2581// \u2581available \u2581to \u2581the \u2581evaluated \u2581expression , \u2581defaults \u2581to \u2581false ."], "bleu": 0.2352027304089594, "rouge_l": 0.3713850837138508}
{"id": 5228, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Add Binding Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . addBinding \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.22093887119981698, "rouge_l": 0.44721407624633425}
{"id": 5229, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Remove Binding Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . remove Binding \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.20670009173746332, "rouge_l": 0.5097493036211699}
{"id": 5324, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Value \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . set VariableValue \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13434323860909256, "rouge_l": 0.3652694610778443}
{"id": 5478, "predictions": ["\u2581// \u2581limit Byte Reader \u2581returns \u2581a \u2581 Reader \u2581that \u2581 contains \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581limit Byte Reader \u2581returns \u2581a \u2581limited Byte Reader \u2581that \u2581reads \u2581from \u2581 r \u2581and \u2581stops \u2581with \u2581// \u2581io . EOF \u2581after \u2581 n \u2581bytes . \u2581// \u2581If \u2581 r"], "bleu": 0.18468309114144724, "rouge_l": 0.4458471760797342}
{"id": 5309, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Breakpoint Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . remove Breakpoint \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1471989137239998, "rouge_l": 0.4401154401154401}
{"id": 5326, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 bill y . Params \u2581interface \u2581for \u2581 Step Into Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . step Into \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.12936981168384865, "rouge_l": 0.42165898617511516}
{"id": 5232, "predictions": ["\u2581// \u2581 With Buffer Usage Reporting Interval \u2581sets \u2581the \u2581 Buffer Usage Reporting Interval \u2581for \u2581// \u2581 Start Params ."], "references": ["\u2581// \u2581 With Buffer Usage Reporting Interval \u2581if \u2581 set , \u2581the \u2581agent \u2581will \u2581issue \u2581buffer Usage \u2581// \u2581events \u2581at \u2581 this \u2581interval , \u2581specified \u2581in \u2581milliseconds ."], "bleu": 0.25354216282452113, "rouge_l": 0.48541114058355433}
{"id": 4588, "predictions": ["\u2581// \u2581 Merge \u2581merges \u2581the \u2581given \u2581 Gossip Data \u2581into \u2581the \u2581current \u2581state ."], "references": ["\u2581// \u2581 Merge \u2581merges \u2581the \u2581other \u2581 Gossip Data \u2581into \u2581 this \u2581one , \u2581// \u2581and \u2581returns \u2581our \u2581resulting , \u2581complete \u2581state ."], "bleu": 0.27885822986770553, "rouge_l": 0.5696095076400678}
{"id": 4470, "predictions": ["\u2581// \u2581 Bucket \u2581returns \u2581a \u2581 Bucket \u2581object \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Bucket \u2581returns \u2581a \u2581bucket \u2581on \u2581 s 3 \u2581// \u2581 Bucket \u2581 Config \u2581is \u2581initialized \u2581to \u2581 DefaultConfig"], "bleu": 0.24430455910643603, "rouge_l": 0.45607476635514016}
{"id": 5273, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Etc \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . stop Loading \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.13434323860909256, "rouge_l": 0.3652694610778443}
{"id": 5280, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Debugger \u2581method ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . waitFor Debugger \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1396215680138453, "rouge_l": 0.45658682634730546}
{"id": 5046, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Collect \u2581to \u2581execute \u2581the \u2581 collect Garbage Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Heap Profiler . collect Garbage \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.21651956746181053, "rouge_l": 0.5}
{"id": 4337, "predictions": ["\u2581// \u2581Find \u2581returns \u2581the \u2581 Selection \u2581object \u2581for \u2581the \u2581given \u2581selector ."], "references": ["\u2581// \u2581Find \u2581finds \u2581exactly \u2581one \u2581element \u2581by \u2581 CSS \u2581selector ."], "bleu": 0.17996531271765898, "rouge_l": 0.43821839080459773}
{"id": 5157, "predictions": ["\u2581// \u2581 With Screen Orientation \u2581sets \u2581the \u2581 Screen Orientation \u2581optional \u2581argument \u2581to \u2581the \u2581 Device Metrics Override \u2581params"], "references": ["\u2581// \u2581 With Screen Orientation \u2581screen \u2581orientation \u2581override ."], "bleu": 0.23588448106534202, "rouge_l": 0.3817271589486859}
{"id": 5882, "predictions": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581 this \u2581 slice \u2581is \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581a \u2581list \u2581of \u2581object \u2581 ids \u2581 contains \u2581the \u2581specified \u2581 id ."], "bleu": 0.3303416684783297, "rouge_l": 0.6190036900369004}
{"id": 4349, "predictions": ["\u2581// \u2581 All \u2581returns \u2581all \u2581 siblings \u2581of \u2581the \u2581 shapes \u2581that \u2581match \u2581the \u2581selector ."], "references": ["\u2581// \u2581 All \u2581finds \u2581zero \u2581or \u2581more \u2581elements \u2581by \u2581 CSS \u2581selector ."], "bleu": 0.17694975149532557, "rouge_l": 0.42165898617511516}
{"id": 5295, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581request \u2581to \u2581execute \u2581the \u2581request ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Fetch . fail Request \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.19235610974773318, "rouge_l": 0.42479108635097496}
{"id": 5568, "predictions": ["\u2581// \u2581 link case s \u2581returns \u2581the \u2581 set \u2581of \u2581 link - related s \u2581in \u2581the \u2581 set \u2581of \u2581// \u2581 link - specific \u2581 data ."], "references": ["\u2581// \u2581 link GR s \u2581links \u2581two \u2581goroutines \u2581together , \u2581allowing \u2581the \u2581child \u2581to \u2581access \u2581the \u2581// \u2581 data \u2581present \u2581in \u2581the \u2581parent ."], "bleu": 0.12607162121844206, "rouge_l": 0.3900255754475704}
{"id": 5328, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Step Over Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . step Over \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1607716496330015, "rouge_l": 0.4765625000000001}
{"id": 4401, "predictions": ["\u2581// \u2581 CSS \u2581method \u2581 CSS \u2581method"], "references": ["\u2581// \u2581 CSS \u2581returns \u2581a \u2581 CSS \u2581 style \u2581property \u2581value \u2581for \u2581exactly \u2581one \u2581element ."], "bleu": 0.11365914096398085, "rouge_l": 0.40612516644474045}
{"id": 5984, "predictions": ["\u2581// \u2581 Group Object sBy PrimaryKey Hash \u2581returns \u2581the \u2581 group \u2581of \u2581 group \u2581 name"], "references": ["\u2581// \u2581 Group Object sBy PrimaryKey Hash \u2581returns \u2581a \u2581 map \u2581with \u2581all \u2581objects \u2581grouped \u2581by \u2581// \u2581the \u2581primary \u2581 key \u2581hash , \u2581that \u2581is \u2581calculated \u2581from \u2581all \u2581metadata \u2581"], "bleu": 0.21921281349372848, "rouge_l": 0.45337837837837835}
{"id": 5327, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581step \u2581in \u2581the \u2581 Step Out Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . step Out \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.21158739010149644, "rouge_l": 0.4765625000000001}
{"id": 6025, "predictions": ["\u2581// \u2581 End \u2581returns \u2581the \u2581end \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 End \u2581returns \u2581the \u2581last \u2581value \u2581of \u2581the \u2581last \u2581range"], "bleu": 0.46924700641055994, "rouge_l": 0.6363636363636364}
{"id": 5038, "predictions": ["\u2581// \u2581 With CallCount \u2581sets \u2581the \u2581 fluent e - on \u2581function \u2581for \u2581the \u2581 Start Pre c e e Params"], "references": ["\u2581// \u2581 With CallCount \u2581 collect \u2581accurate \u2581 call \u2581counts \u2581beyond \u2581simple \u2581' covered ' \u2581or \u2581' not \u2581// \u2581 covered ' ."], "bleu": 0.15990408114850535, "rouge_l": 0.270509977827051}
{"id": 5017, "predictions": ["\u2581// \u2581 With Suppress Random ness \u2581returns \u2581a \u2581 Start Sampling Params \u2581instance \u2581with \u2581the \u2581 rate \u2581of \u2581the \u2581// \u2581 min er Params ."], "references": ["\u2581// \u2581 With Suppress Random ness \u2581do \u2581not \u2581 randomize \u2581intervals \u2581between \u2581samples ."], "bleu": 0.23423016820418144, "rouge_l": 0.43224092116917623}
{"id": 5303, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581http . Request \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Fetch . continue Request \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1471989137239998, "rouge_l": 0.4401154401154401}
{"id": 5019, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Collector \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Memory . stop Sampling \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15190160719892454, "rouge_l": 0.42479108635097496}
{"id": 4512, "predictions": ["\u2581// \u2581 Int From Ptr \u2581returns \u2581a \u2581int \u2581from \u2581a \u2581int 64 \u2581value ."], "references": ["\u2581// \u2581 Int From Ptr \u2581creates \u2581a \u2581new \u2581 Int \u2581that \u2581be \u2581null \u2581if \u2581 i \u2581is \u2581nil ."], "bleu": 0.24342723378958467, "rouge_l": 0.41295938104448743}
{"id": 5227, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 After Execution Params , \u2581returning \u2581the \u2581result \u2581of \u2581the \u2581 Execution Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Runtime . terminate Execution \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15071676257541072, "rouge_l": 0.4651416122004358}
{"id": 6137, "predictions": ["\u2581// \u2581 Multi Cloud Image Setting Locator \u2581returns \u2581a \u2581new \u2581 Multi Cloud Image Setting Locator \u2581instance"], "references": ["\u2581// \u2581 Multi Cloud Image Setting Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.4112175645551036, "rouge_l": 0.5484515484515484}
{"id": 4635, "predictions": ["\u2581// \u2581 Increment Existing \u2581 increments \u2581the \u2581value \u2581of \u2581a \u2581 key \u2581to \u2581the \u2581value ."], "references": ["\u2581// \u2581 Increment Existing \u2581works \u2581like \u2581 Increment \u2581but \u2581assumes \u2581that \u2581the \u2581 key \u2581// \u2581already \u2581 exists \u2581in \u2581 memcache \u2581and \u2581doesn ' t \u2581take \u2581an \u2581initial \u2581value ."], "bleu": 0.12028710568136561, "rouge_l": 0.41216216216216217}
{"id": 5214, "predictions": ["\u2581// \u2581 With ExecutionContext ID \u2581adds \u2581the \u2581 fluent ID \u2581to \u2581the \u2581 call \u2581function On Params"], "references": ["\u2581// \u2581 With ExecutionContext ID \u2581specifies \u2581execution \u2581context \u2581which \u2581global \u2581object \u2581// \u2581will \u2581be \u2581used \u2581to \u2581 call \u2581function \u2581on . \u2581Either \u2581 executionContext Id \u2581or \u2581 objectId \u2581// \u2581should"], "bleu": 0.1648370311881064, "rouge_l": 0.36478405315614615}
{"id": 6136, "predictions": ["\u2581// \u2581 Multi Cloud Image Matcher Locator \u2581returns \u2581a \u2581new \u2581 Multi Cloud Image Matcher \u2581that \u2581matches \u2581// \u2581the \u2581provided \u2581 cloud \u2581image \u2581 name \u2581of \u2581the \u2581given \u2581"], "references": ["\u2581// \u2581 Multi Cloud Image Matcher Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2753358028987337, "rouge_l": 0.5157571099154497}
{"id": 4562, "predictions": ["\u2581// \u2581 OnChange \u2581adds \u2581a \u2581callback \u2581to \u2581the \u2581 route ."], "references": ["\u2581// \u2581 OnChange \u2581appends \u2581callback \u2581to \u2581the \u2581function s \u2581that \u2581will \u2581be \u2581called \u2581whenever \u2581the \u2581// \u2581 routes \u2581are \u2581 recalculate d ."], "bleu": 0.10967396219438863, "rouge_l": 0.442429737080689}
{"id": 4751, "predictions": ["\u2581// \u2581is Name \u2581returns \u2581true \u2581if \u2581the \u2581 name \u2581is \u2581a \u2581 name ."], "references": ["\u2581// \u2581is Name \u2581returns \u2581true \u2581if \u2581 n \u2581is \u2581an \u2581 identifier \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.39481262732291034, "rouge_l": 0.6723446893787575}
{"id": 5848, "predictions": ["\u2581// \u2581 Pad F \u2581 Pad \u2581 append \u2581a \u2581 n \u2581to \u2581the \u2581 n \u2581 n \u2581 n \u2581 n ."], "references": ["\u2581// \u2581 Pad F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Pad ."], "bleu": 0.20776569671187678, "rouge_l": 0.5208728652751423}
{"id": 5421, "predictions": ["\u2581// \u2581 New Base 64 Cleaner \u2581creates \u2581a \u2581new \u2581 Base 64 Cleaner"], "references": ["\u2581// \u2581 New Base 64 Cleaner \u2581returns \u2581a \u2581 Base 64 Cleaner \u2581object \u2581for \u2581the \u2581specified \u2581reader . \u2581 Base 64 Cleaner \u2581// \u2581implements \u2581the \u2581io . Reader \u2581interface ."], "bleu": 0.17032879222064654, "rouge_l": 0.47758007117437723}
{"id": 5852, "predictions": ["\u2581// \u2581 Pipe \u2581returns \u2581a \u2581new \u2581 concat e nation \u2581of \u2581the \u2581 s ."], "references": ["\u2581// \u2581 Pipe \u2581 pipes \u2581 s \u2581through \u2581one \u2581or \u2581more \u2581string \u2581filters ."], "bleu": 0.195647514979229, "rouge_l": 0.48577929465301484}
{"id": 5873, "predictions": ["\u2581// \u2581 ToFloat 64 Or \u2581returns \u2581the \u2581float 64 \u2581value \u2581of \u2581a \u2581string ."], "references": ["\u2581// \u2581 ToFloat 64 Or \u2581parses \u2581 s \u2581as \u2581a \u2581float 64 \u2581or \u2581returns \u2581defaultValue ."], "bleu": 0.3418245520016127, "rouge_l": 0.5269978401727862}
{"id": 4510, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581encoding \u2581of \u2581 s ."], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581 json . Marshaler . \u2581// \u2581It \u2581will \u2581 encode \u2581null \u2581if \u2581 this \u2581String \u2581is \u2581null ."], "bleu": 0.06274726121156433, "rouge_l": 0.24254473161033796}
{"id": 4507, "predictions": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581the \u2581String Unmarshaler \u2581interface \u2581for \u2581 String ."], "references": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581encoding . Text Unmarshaler . \u2581// \u2581It \u2581will \u2581unmarshal \u2581to \u2581a \u2581null \u2581String \u2581if \u2581the \u2581input \u2581is \u2581a \u2581 blank \u2581string ."], "bleu": 0.13868289672006387, "rouge_l": 0.3762528912875867}
{"id": 5060, "predictions": ["\u2581// \u2581 With Target ID \u2581adds \u2581the \u2581target \u2581 ID \u2581to \u2581the \u2581 get \u2581window \u2581 ID"], "references": ["\u2581// \u2581 With Target ID \u2581 devtools \u2581agent \u2581host \u2581 id . \u2581If \u2581called \u2581as \u2581a \u2581part \u2581of \u2581the \u2581session , \u2581// \u2581associated \u2581 targetId \u2581is \u2581used ."], "bleu": 0.15741299027792555, "rouge_l": 0.3405443126308444}
{"id": 4858, "predictions": ["\u2581// \u2581 New Glyph Cache \u2581creates \u2581a \u2581new \u2581 Glyph Cache"], "references": ["\u2581// \u2581 New Glyph Cache \u2581initializes \u2581a \u2581 Glyph Cache"], "bleu": 0.5452469119630863, "rouge_l": 0.8645669291338582}
{"id": 5390, "predictions": ["\u2581// \u2581Get Header \u2581returns \u2581the \u2581header \u2581from \u2581the \u2581envelope ."], "references": ["\u2581// \u2581Get Header \u2581processes \u2581the \u2581specified \u2581header \u2581for \u2581RFC \u2581 2047 \u2581encoded \u2581words \u2581and \u2581returns \u2581the \u2581result \u2581as \u2581a \u2581// \u2581 UTF -8 \u2581string"], "bleu": 0.07393522918366056, "rouge_l": 0.3285457809694794}
{"id": 5095, "predictions": ["\u2581// \u2581Do \u2581 highlight s \u2581the \u2581 Hide \u2581 Highlight"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Overlay . hide Highlight \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.14615903653944176, "rouge_l": 0.33983286908078}
{"id": 6122, "predictions": ["\u2581// \u2581 Co e book Attachment Locator \u2581returns \u2581a \u2581 Co e book Attachment Locator \u2581instance"], "references": ["\u2581// \u2581 Co ok book Attachment Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2204887282071633, "rouge_l": 0.5}
{"id": 4495, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581 Time \u2581representation \u2581of \u2581 t ."], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581 json . Marshaler . \u2581// \u2581It \u2581will \u2581 encode \u2581null \u2581if \u2581 this \u2581time \u2581is \u2581null ."], "bleu": 0.07182539713902784, "rouge_l": 0.29582929194956353}
{"id": 5866, "predictions": ["\u2581// \u2581 Sub str F \u2581returns \u2581a \u2581string \u2581that \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581// \u2581string \u2581 slice \u2581of \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581 Sub str F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Sub str ."], "bleu": 0.20333448190047887, "rouge_l": 0.4975530179445351}
{"id": 4473, "predictions": ["\u2581// \u2581Set Logger \u2581sets \u2581the \u2581logger \u2581at \u2581the \u2581given \u2581 name \u2581and \u2581 debug \u2581level ."], "references": ["\u2581// \u2581Set Logger \u2581 wraps \u2581the \u2581standard \u2581library \u2581log \u2581package . \u2581// \u2581// \u2581It \u2581allows \u2581the \u2581internal \u2581logging \u2581of \u2581 s 3 g of 3 r \u2581to \u2581be \u2581 set"], "bleu": 0.07309601795775379, "rouge_l": 0.2885135135135135}
{"id": 5919, "predictions": ["\u2581// \u2581 E \u2581 wraps \u2581a \u2581 Wrap \u2581 Handler \u2581with \u2581the \u2581given \u2581handler ."], "references": ["\u2581// \u2581 E \u2581is \u2581a \u2581short - hand \u2581function \u2581to \u2581create \u2581an \u2581enforce r ."], "bleu": 0.16943571815930883, "rouge_l": 0.3333333333333333}
{"id": 4243, "predictions": ["\u2581// \u2581Must Generate Random Bytes \u2581returns \u2581a \u2581random \u2581random \u2581bytes"], "references": ["\u2581// \u2581Must Generate Random Bytes \u2581generates \u2581random \u2581bytes \u2581or \u2581panic s \u2581if \u2581it \u2581can ' t"], "bleu": 0.28500182192114576, "rouge_l": 0.5169491525423728}
{"id": 5068, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Focus , \u2581 this \u2581function \u2581returns \u2581the \u2581 set \u2581of \u2581errors ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . focus \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1487964117124549, "rouge_l": 0.3714981729598051}
{"id": 5039, "predictions": ["\u2581// \u2581 With Detailed \u2581sets \u2581the \u2581 Detailed \u2581optional \u2581argument \u2581for \u2581 Start Pre c is e ."], "references": ["\u2581// \u2581 With Detailed \u2581 collect \u2581block - based \u2581 coverage ."], "bleu": 0.21314568971111159, "rouge_l": 0.48412698412698413}
{"id": 6057, "predictions": ["\u2581// \u2581 P Endpoints in e \u2581retrieves \u2581the \u2581 Document \u2581objects \u2581for \u2581the \u2581 Document ."], "references": ["\u2581// \u2581 P rist in e \u2581creates \u2581a \u2581new \u2581 pristine \u2581document \u2581instance \u2581based \u2581on \u2581the \u2581input \u2581 data"], "bleu": 0.15620893053374457, "rouge_l": 0.4501845018450184}
{"id": 4293, "predictions": ["\u2581// \u2581 Flush \u2581 flush es \u2581the \u2581 flush \u2581 flush \u2581events \u2581to \u2581the \u2581 flush ."], "references": ["\u2581// \u2581 Flush \u2581waits \u2581until \u2581all \u2581records \u2581in \u2581the \u2581buffered \u2581channel \u2581have \u2581been \u2581processed ."], "bleu": 0.1487964117124549, "rouge_l": 0.3160621761658031}
{"id": 5049, "predictions": ["\u2581// \u2581 With Report Progress \u2581returns \u2581a \u2581 Stop Tracking Progress \u2581method \u2581for \u2581 Stop Tracking Objects ."], "references": ["\u2581// \u2581 With Report Progress \u2581if \u2581true \u2581' report Heap Snapshot Progress ' \u2581events \u2581will \u2581be \u2581// \u2581generated \u2581while \u2581snapshot \u2581is \u2581being \u2581taken \u2581when \u2581the \u2581tracking \u2581is \u2581stopped ."], "bleu": 0.14546528877162115, "rouge_l": 0.285809906291834}
{"id": 4885, "predictions": ["\u2581// \u2581 Clear \u2581 clear s \u2581the \u2581 contents \u2581of \u2581the \u2581context ."], "references": ["\u2581// \u2581 Clear \u2581draw s \u2581a \u2581 white \u2581rectangle \u2581over \u2581the \u2581whole \u2581 page"], "bleu": 0.19576800346584783, "rouge_l": 0.4414957780458384}
{"id": 4599, "predictions": ["\u2581// \u2581 Receive \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 pipe ."], "references": ["\u2581// \u2581 Receive \u2581implements \u2581 TCP Rec i ever \u2581by \u2581Go b \u2581decoding \u2581into \u2581a \u2581 byte \u2581 slice \u2581directly ."], "bleu": 0.10506598593950904, "rouge_l": 0.346590909090909}
{"id": 4609, "predictions": ["\u2581// \u2581parse Peer UID \u2581returns \u2581the \u2581 Peer UID \u2581of \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Parse Peer UID \u2581parses \u2581a \u2581decimal \u2581peer \u2581 UID \u2581from \u2581a \u2581string ."], "bleu": 0.13380161378318955, "rouge_l": 0.416382252559727}
{"id": 5829, "predictions": ["\u2581// \u2581 Clean \u2581removes \u2581all \u2581characters \u2581in \u2581the \u2581string \u2581 s ."], "references": ["\u2581// \u2581 Clean \u2581compress es \u2581all \u2581 adjacent \u2581whitespace \u2581to \u2581a \u2581single \u2581space \u2581and \u2581 trim s \u2581 s ."], "bleu": 0.14846918892821234, "rouge_l": 0.41862745098039217}
{"id": 4566, "predictions": ["\u2581// \u2581 Broadcast All \u2581 Broadcast s \u2581all \u2581the \u2581 routes \u2581in \u2581the \u2581 routes ."], "references": ["\u2581// \u2581 Broadcast All \u2581returns \u2581the \u2581 set \u2581of \u2581peer \u2581names \u2581that \u2581should \u2581be \u2581 notified \u2581// \u2581when \u2581we \u2581receive \u2581a \u2581broadcast \u2581message \u2581 originating \u2581from \u2581the \u2581named \u2581peer \u2581//"], "bleu": 0.1122213767312597, "rouge_l": 0.2885135135135135}
{"id": 4704, "predictions": ["\u2581// \u2581 With APICall Func \u2581returns \u2581a \u2581context \u2581that \u2581uses \u2581the \u2581 status \u2581of \u2581the \u2581 Status \u2581API \u2581// \u2581 call \u2581to \u2581 call \u2581the \u2581 grpc \u2581 call \u2581to"], "references": ["\u2581// \u2581 With APICall Func \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581parent \u2581context \u2581// \u2581that \u2581will \u2581cause \u2581API \u2581calls \u2581to \u2581invoke \u2581 f \u2581instead \u2581of \u2581their \u2581normal \u2581operation . \u2581// \u2581//"], "bleu": 0.26703799691024654, "rouge_l": 0.4}
{"id": 4705, "predictions": ["\u2581// \u2581 APICall \u2581is \u2581part \u2581of \u2581the \u2581 Service \u2581interface ."], "references": ["\u2581// \u2581 APICall \u2581performs \u2581an \u2581API \u2581 call . \u2581// \u2581// \u2581This \u2581is \u2581not \u2581intended \u2581for \u2581general \u2581use ; \u2581it \u2581is \u2581exported \u2581for \u2581use \u2581in \u2581 conjunction \u2581// \u2581with \u2581"], "bleu": 0.04334741445875218, "rouge_l": 0.22509225092250923}
{"id": 5843, "predictions": ["\u2581// \u2581 Lines \u2581returns \u2581a \u2581string \u2581containing \u2581the \u2581lines \u2581of \u2581the \u2581string ."], "references": ["\u2581// \u2581 Lines \u2581convert \u2581windows \u2581 newlines \u2581to \u2581unix \u2581 newlines \u2581then \u2581convert \u2581to \u2581an \u2581 Array \u2581of \u2581lines ."], "bleu": 0.11934387032837986, "rouge_l": 0.29186602870813394}
{"id": 4822, "predictions": ["\u2581// \u2581 Produce \u2581implements \u2581the \u2581 Func \u2581interface ."], "references": ["\u2581// \u2581 Produce \u2581makes \u2581 Producer Func \u2581fit \u2581the \u2581 Producer \u2581interface ."], "bleu": 0.23438683978245484, "rouge_l": 0.6161616161616162}
{"id": 4830, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581given \u2581 config \u2581into \u2581a \u2581 Parser . \u2581// \u2581// \u2581This \u2581function \u2581is \u2581safe \u2581for \u2581 concurrent \u2581use ."], "references": ["\u2581// \u2581Parse \u2581processes \u2581command \u2581line \u2581arguments \u2581and \u2581stores \u2581them \u2581in \u2581dest"], "bleu": 0.06964541799727335, "rouge_l": 0.12564366632337798}
{"id": 4506, "predictions": ["\u2581// \u2581 Marshal Text \u2581implements \u2581the \u2581 Text Marshaler \u2581interface \u2581for \u2581 \u2581String ."], "references": ["\u2581// \u2581 Marshal Text \u2581implements \u2581encoding . Text Marshaler . \u2581// \u2581It \u2581will \u2581 encode \u2581a \u2581 blank \u2581string \u2581when \u2581 this \u2581String \u2581is \u2581null ."], "bleu": 0.17101730146605215, "rouge_l": 0.474339035769829}
{"id": 4504, "predictions": ["\u2581// \u2581 NewString \u2581returns \u2581a \u2581new \u2581String er ."], "references": ["\u2581// \u2581 NewString \u2581creates \u2581a \u2581new \u2581String"], "bleu": 0.37991784282579627, "rouge_l": 0.7672955974842767}
{"id": 4499, "predictions": ["\u2581// \u2581 Bool From Ptr \u2581returns \u2581a \u2581bool \u2581from \u2581a \u2581boolean \u2581value ."], "references": ["\u2581// \u2581 Bool From Ptr \u2581creates \u2581a \u2581new \u2581 Bool \u2581that \u2581will \u2581be \u2581null \u2581if \u2581 f \u2581is \u2581nil ."], "bleu": 0.21943106183147348, "rouge_l": 0.40861244019138754}
{"id": 5897, "predictions": ["\u2581// \u2581 Query \u2581returns \u2581a \u2581query \u2581query \u2581for \u2581the \u2581query"], "references": ["\u2581// \u2581 Query \u2581returns \u2581the \u2581composite \u2581query \u2581of \u2581 Selector \u2581and \u2581 Filter ."], "bleu": 0.2558163112197668, "rouge_l": 0.48541114058355433}
{"id": 4990, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Set Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Storage . clear \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16278331364721524, "rouge_l": 0.34512022630834516}
{"id": 4469, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 S 3 \u2581 S 3 \u2581 S 3 \u2581 key"], "references": ["\u2581// \u2581 New \u2581Returns \u2581a \u2581new \u2581 S 3 \u2581// \u2581 domain \u2581defaults \u2581to \u2581Default Domain \u2581if \u2581 empty"], "bleu": 0.3148247452065883, "rouge_l": 0.5500450856627592}
{"id": 4405, "predictions": ["\u2581// \u2581 Have Count \u2581returns \u2581the \u2581number \u2581of \u2581 runes \u2581in \u2581the \u2581given \u2581count ."], "references": ["\u2581// \u2581 Have Count \u2581passes \u2581when \u2581the \u2581expected \u2581element \u2581count \u2581is \u2581equal \u2581to \u2581the \u2581actual \u2581// \u2581number \u2581of \u2581elements \u2581in \u2581the \u2581selection ."], "bleu": 0.18500205629138766, "rouge_l": 0.5070656691604322}
{"id": 5002, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 Unregister . Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Service Worker . unregister \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15190160719892454, "rouge_l": 0.42479108635097496}
{"id": 5004, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581context"], "references": ["\u2581// \u2581Do \u2581executes \u2581 T ether ing . bind \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.11327490115090784, "rouge_l": 0.346590909090909}
{"id": 5883, "predictions": ["\u2581// \u2581 Includes \u2581checks \u2581if \u2581a \u2581given \u2581 slice \u2581is \u2581in \u2581the \u2581list \u2581of \u2581 items \u2581in \u2581the \u2581given \u2581// \u2581 slice ."], "references": ["\u2581// \u2581 Includes \u2581returns \u2581true \u2581if \u2581a \u2581list \u2581of \u2581object \u2581 ids \u2581includes \u2581another \u2581list \u2581of \u2581object \u2581// \u2581 ids ."], "bleu": 0.15415064977510756, "rouge_l": 0.5041322314049587}
{"id": 5884, "predictions": ["\u2581// \u2581 Require \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 set \u2581all \u2581flags \u2581in \u2581the \u2581 model ."], "references": ["\u2581// \u2581 Require \u2581will \u2581check \u2581if \u2581the \u2581specified \u2581flags \u2581are \u2581 set \u2581on \u2581the \u2581specified \u2581 model \u2581and \u2581// \u2581panic \u2581if \u2581one \u2581is \u2581missing ."], "bleu": 0.12558514478820726, "rouge_l": 0.4143396226415094}
{"id": 5005, "predictions": ["\u2581// \u2581Do \u2581the \u2581 Unbind Params \u2581 set \u2581of \u2581 Unbind Params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 T ether ing . unbind \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1315189295625006, "rouge_l": 0.22761194029850743}
{"id": 4400, "predictions": ["\u2581// \u2581 Attribute \u2581returns \u2581the \u2581attribute \u2581for \u2581the \u2581attribute \u2581attribute ."], "references": ["\u2581// \u2581 Attribute \u2581returns \u2581an \u2581attribute \u2581value \u2581for \u2581exactly \u2581one \u2581element ."], "bleu": 0.3255666272944305, "rouge_l": 0.603960396039604}
{"id": 4395, "predictions": ["\u2581// \u2581 Have URL \u2581returns \u2581a \u2581 G ual \u2581matcher \u2581for \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581 Have URL \u2581passes \u2581when \u2581the \u2581expected \u2581 URL \u2581is \u2581equivalent \u2581to \u2581the \u2581// \u2581current \u2581 URL \u2581of \u2581the \u2581provided \u2581 page ."], "bleu": 0.16328113968061767, "rouge_l": 0.4343354430379746}
{"id": 4394, "predictions": ["\u2581// \u2581 Have Title \u2581returns \u2581a \u2581 G ual \u2581matcher \u2581for \u2581the \u2581given \u2581 title ."], "references": ["\u2581// \u2581 Have Title \u2581passes \u2581when \u2581the \u2581expected \u2581 title \u2581is \u2581equivalent \u2581to \u2581the \u2581// \u2581 title \u2581of \u2581the \u2581provided \u2581 page ."], "bleu": 0.17381186843581053, "rouge_l": 0.4470684039087948}
{"id": 4392, "predictions": ["\u2581// \u2581 New Capabilities \u2581returns \u2581a \u2581new \u2581 Capabilities ."], "references": ["\u2581// \u2581 New Capabilities \u2581returns \u2581a \u2581 Capabilities \u2581instance \u2581with \u2581any \u2581provided \u2581features \u2581enabled ."], "bleu": 0.39328145919074425, "rouge_l": 0.6949367088607595}
{"id": 6018, "predictions": ["\u2581// \u2581 Max \u2581returns \u2581the \u2581maximum \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Max \u2581returns \u2581the \u2581highest \u2581value \u2581in \u2581the \u2581range"], "bleu": 0.3388714363186176, "rouge_l": 0.580952380952381}
{"id": 5131, "predictions": ["\u2581// \u2581Do \u2581adds \u2581the \u2581 set \u2581of \u2581the \u2581params \u2581to \u2581the \u2581 set \u2581of \u2581the \u2581params"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Network . enable \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.11502783619900048, "rouge_l": 0.2932692307692307}
{"id": 5129, "predictions": ["\u2581// \u2581 With Connection Type \u2581returns \u2581the \u2581 Accept Network Conditions Params \u2581interface \u2581for \u2581// \u2581 Emulate Network Conditions Params ."], "references": ["\u2581// \u2581 With Connection Type \u2581connection \u2581 type \u2581if \u2581known ."], "bleu": 0.22866722231574904, "rouge_l": 0.46362649294245384}
{"id": 5618, "predictions": ["\u2581// \u2581 Edit Script For Matrix \u2581 edit \u2581the \u2581matrix \u2581of \u2581the \u2581matrix ."], "references": ["\u2581// \u2581 Edit Script For Matrix \u2581returns \u2581an \u2581 optimal \u2581 edit \u2581 script \u2581based \u2581on \u2581the \u2581given \u2581// \u2581 Levenshtein \u2581matrix ."], "bleu": 0.2587021417077057, "rouge_l": 0.5696095076400678}
{"id": 6045, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581client \u2581for \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581 NewClient \u2581return \u2581 SOAP \u2581client"], "bleu": 0.19674979811155635, "rouge_l": 0.42287694974003465}
{"id": 5257, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Reload Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Page . reload \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.20821865410806517, "rouge_l": 0.4825949367088607}
{"id": 5578, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Authentication \u2581 \u2581middleware"], "references": ["\u2581// \u2581 New \u2581returns \u2581the \u2581location \u2581middleware \u2581with \u2581user - defined \u2581custom \u2581configuration ."], "bleu": 0.16629577886012006, "rouge_l": 0.32360742705570295}
{"id": 5315, "predictions": ["\u2581// \u2581 With URL Regex \u2581sets \u2581the \u2581 URL Regex \u2581optional \u2581argument \u2581to \u2581 set \u2581the \u2581 URL \u2581to \u2581the \u2581 URL ."], "references": ["\u2581// \u2581 With URL Regex \u2581regex \u2581pattern \u2581for \u2581the \u2581URLs \u2581of \u2581the \u2581resources \u2581to \u2581 set \u2581// \u2581 breakpoints \u2581on . \u2581Either \u2581 url \u2581or \u2581 url Regex \u2581must \u2581be"], "bleu": 0.21013842635026292, "rouge_l": 0.4054380664652568}
{"id": 5316, "predictions": ["\u2581// \u2581 With Script Hash \u2581sets \u2581the \u2581 script Hash \u2581optional \u2581argument . \u2581// \u2581 script \u2581to \u2581 set \u2581the \u2581 script \u2581as \u2581the \u2581 script \u2581as \u2581the \u2581 script"], "references": ["\u2581// \u2581 With Script Hash \u2581 script \u2581hash \u2581of \u2581the \u2581resources \u2581to \u2581 set \u2581breakpoint \u2581on ."], "bleu": 0.2131922460941227, "rouge_l": 0.44787077826725397}
{"id": 5371, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581connection \u2581and \u2581closes \u2581the \u2581connection ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 XMPP \u2581connection"], "bleu": 0.43361890903486755, "rouge_l": 0.6500888099467139}
{"id": 5104, "predictions": ["\u2581// \u2581 With Highlight Config \u2581sets \u2581the \u2581 Highlight Config \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Highlight Config \u2581a \u2581descriptor \u2581for \u2581the \u2581 highlight \u2581 appearance \u2581of \u2581// \u2581 hovered - over \u2581nodes . \u2581May \u2581be \u2581omitted \u2581if \u2581enabled \u2581== \u2581false ."], "bleu": 0.13724027436251232, "rouge_l": 0.3439041578576463}
{"id": 5098, "predictions": ["\u2581// \u2581 With Backend NodeID \u2581sets \u2581the \u2581 Backend NodeID \u2581to \u2581 highlight ."], "references": ["\u2581// \u2581 With Backend NodeID \u2581 identifier \u2581of \u2581the \u2581backend \u2581node \u2581to \u2581 highlight ."], "bleu": 0.4794723979896655, "rouge_l": 0.6853932584269663}
{"id": 6017, "predictions": ["\u2581// \u2581 Min \u2581returns \u2581the \u2581minimum \u2581of \u2581the \u2581 items \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Min \u2581returns \u2581the \u2581smallest \u2581value \u2581in \u2581the \u2581range"], "bleu": 0.3388714363186176, "rouge_l": 0.580952380952381}
{"id": 5637, "predictions": ["\u2581// \u2581 Db \u2581a \u2581message \u2581at \u2581the \u2581given \u2581 format ."], "references": ["\u2581// \u2581 Db gm \u2581is \u2581a \u2581short - hand \u2581version \u2581of \u2581 Debug m"], "bleu": 0.1786189637183548, "rouge_l": 0.39152759948652116}
{"id": 5076, "predictions": ["\u2581// \u2581 With Backend NodeID \u2581sets \u2581the \u2581 Backend \u2581to \u2581use \u2581for \u2581the \u2581 Resolve Node Params ."], "references": ["\u2581// \u2581 With Backend NodeID \u2581backend \u2581 identifier \u2581of \u2581the \u2581node \u2581to \u2581 resolve ."], "bleu": 0.2902266115291421, "rouge_l": 0.5545454545454546}
{"id": 5990, "predictions": ["\u2581// \u2581 xor 64 \u2581 x x"], "references": ["\u2581// \u2581 xor 64 \u2581generates \u2581the \u2581next \u2581value \u2581of \u2581a \u2581pseudo - random \u2581sequence \u2581given \u2581a \u2581current \u2581// \u2581state \u2581 x ."], "bleu": 0.06975839352273451, "rouge_l": 0.3784901758014478}
{"id": 5089, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 IO . close \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16787723868520182, "rouge_l": 0.44721407624633425}
{"id": 5550, "predictions": ["\u2581// \u2581 HasSuffix Runes \u2581returns \u2581true \u2581if \u2581the \u2581 length \u2581of \u2581 text \u2581is \u2581valid ."], "references": ["\u2581// \u2581Return \u2581true \u2581if \u2581` w ` \u2581ends \u2581with \u2581` suffix Runes ` \u2581//"], "bleu": 0.11502783619900048, "rouge_l": 0.20243362831858405}
{"id": 5661, "predictions": ["\u2581// \u2581 Error Service \u2581is \u2581a \u2581 functional \u2581option \u2581to \u2581 Option \u2581to \u2581 set \u2581the \u2581service \u2581 status ."], "references": ["\u2581// \u2581 Error Service \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581Google \u2581API \u2581error \u2581 reporting \u2581service \u2581to \u2581use ."], "bleu": 0.26608125176434144, "rouge_l": 0.4636824324324324}
{"id": 5077, "predictions": ["\u2581// \u2581 With ExecutionContext ID \u2581sets \u2581the \u2581 ExecutionContext ID \u2581optional \u2581argument ."], "references": ["\u2581// \u2581 With ExecutionContext ID \u2581execution \u2581context \u2581in \u2581which \u2581to \u2581 resolve \u2581the \u2581node ."], "bleu": 0.33198814405786686, "rouge_l": 0.49364161849710986}
{"id": 4991, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Disable Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM Storage . disable \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.20830666398386113, "rouge_l": 0.4642313546423136}
{"id": 5991, "predictions": ["\u2581// \u2581next \u2581returns \u2581the \u2581next \u2581 64- bit \u2581value ."], "references": ["\u2581// \u2581next \u2581advance s \u2581the \u2581 generators \u2581internal \u2581state \u2581to \u2581the \u2581next \u2581value \u2581and \u2581returns \u2581// \u2581 this \u2581value \u2581as \u2581an \u2581uint 64."], "bleu": 0.06394236401645632, "rouge_l": 0.3395176252319109}
{"id": 4560, "predictions": ["\u2581// \u2581 Garbage Collect \u2581removes \u2581all \u2581pending \u2581 collect s \u2581peers \u2581and \u2581 collect s \u2581peers \u2581// \u2581for \u2581the \u2581peer ."], "references": ["\u2581// \u2581 Garbage Collect \u2581takes \u2581a \u2581lock , \u2581triggers \u2581a \u2581 GC , \u2581and \u2581invokes \u2581the \u2581 accumulated \u2581 GC \u2581// \u2581callbacks ."], "bleu": 0.17903304962601863, "rouge_l": 0.40576496674057644}
{"id": 5233, "predictions": ["\u2581// \u2581 WithNo Display Updates \u2581sets \u2581the \u2581 display \u2581 Display Updates \u2581field ."], "references": ["\u2581// \u2581 WithNo Display Updates \u2581whether \u2581updates \u2581should \u2581not \u2581be \u2581committed \u2581and \u2581drawn \u2581// \u2581onto \u2581the \u2581 display . \u2581False \u2581by \u2581default . \u2581If \u2581true , \u2581only \u2581side \u2581 effects"], "bleu": 0.13818884025314393, "rouge_l": 0.3839160839160839}
{"id": 5664, "predictions": ["\u2581// \u2581 Error Reporting Log Name \u2581returns \u2581a \u2581 Option \u2581that \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581 Reporting Log Name ."], "references": ["\u2581// \u2581 Error Reporting Log Name \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581log \u2581 name \u2581to \u2581send \u2581// \u2581with \u2581each \u2581error \u2581message \u2581for \u2581error \u2581 reporting . \u2581// \u2581 Only"], "bleu": 0.24426488296697976, "rouge_l": 0.48650306748466265}
{"id": 5071, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 redo \u2581request ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . redo \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.23594264580221064, "rouge_l": 0.511744966442953}
{"id": 4572, "predictions": ["\u2581// \u2581 On Gossip \u2581 collect s \u2581the \u2581 gossip \u2581 data \u2581from \u2581the \u2581peer ."], "references": ["\u2581// \u2581 On Gossip \u2581implements \u2581mesh . Gossip er . \u2581// \u2581The \u2581buf \u2581is \u2581a \u2581single \u2581pkt ."], "bleu": 0.19774557004917784, "rouge_l": 0.29103053435114506}
{"id": 5629, "predictions": ["\u2581// \u2581 Warn m \u2581logs \u2581a \u2581message \u2581with \u2581the \u2581 Warning \u2581severity ."], "references": ["\u2581// \u2581 Warn m \u2581is \u2581a \u2581short - hand \u2581version \u2581of \u2581 Warning m"], "bleu": 0.29274144538476715, "rouge_l": 0.5150784077201447}
{"id": 5230, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581 ctx . End Params \u2581interface ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Tracing . end \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.1691790501198734, "rouge_l": 0.4314002828854314}
{"id": 5999, "predictions": ["\u2581// \u2581Normalize \u2581returns \u2581a \u2581 Frame Set \u2581that \u2581represents \u2581the \u2581 set \u2581of \u2581 Frame s ."], "references": ["\u2581// \u2581Normalize \u2581returns \u2581a \u2581new \u2581sorted \u2581and \u2581 compacted \u2581 Frame Set"], "bleu": 0.27694132751313416, "rouge_l": 0.4982497082847141}
{"id": 5307, "predictions": ["\u2581// \u2581Do \u2581 pause s \u2581the \u2581 Pause \u2581 pause \u2581on \u2581the \u2581specified \u2581context ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . pause \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.15310245441182443, "rouge_l": 0.5291201982651798}
{"id": 4591, "predictions": ["\u2581// \u2581 On Gossip Broadcast \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581 wraps \u2581 Gossip Broadcast \u2581for \u2581each \u2581// \u2581 gossip \u2581 call \u2581to \u2581 this \u2581 call ."], "references": ["\u2581// \u2581 On Gossip Broadcast \u2581implements \u2581 Gossip er ."], "bleu": 0.1771672685027266, "rouge_l": 0.44976958525345617}
{"id": 4651, "predictions": ["\u2581// \u2581 Distinct On \u2581sets \u2581the \u2581 set \u2581of \u2581 shards \u2581that \u2581match \u2581the \u2581query ."], "references": ["\u2581// \u2581 Distinct On \u2581returns \u2581a \u2581derivative \u2581query \u2581that \u2581yields \u2581de - duplicated \u2581entities \u2581with \u2581// \u2581respect \u2581to \u2581the \u2581 set \u2581of \u2581the \u2581specified \u2581fields . \u2581It \u2581is \u2581only \u2581used"], "bleu": 0.1638998067429608, "rouge_l": 0.41216216216216217}
{"id": 5907, "predictions": ["\u2581// \u2581 Valid Secret \u2581returns \u2581true \u2581if \u2581the \u2581 secret \u2581 secret \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Secret \u2581implements \u2581the \u2581 fla me . Client \u2581interface ."], "bleu": 0.2722589423069702, "rouge_l": 0.5065243179122182}
{"id": 5547, "predictions": ["\u2581// \u2581 Fit sIn R 2 \u2581returns \u2581true \u2581if \u2581the \u2581 s now ball \u2581is \u2581equal \u2581to \u2581the \u2581given \u2581 x 2 \u2581 x 2"], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581` x ` \u2581 runes \u2581would \u2581fit \u2581into \u2581 R 2. \u2581//"], "bleu": 0.0817178415827399, "rouge_l": 0.253955037468776}
{"id": 4106, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 App List ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 App List ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 4107, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 App Spec ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 App Spec ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 4129, "predictions": ["\u2581// \u2581Get Teams \u2581returns \u2581the \u2581 teams \u2581that \u2581are \u2581currently \u2581in \u2581the \u2581 app ."], "references": ["\u2581// \u2581Get Teams \u2581returns \u2581a \u2581 slice \u2581of \u2581 teams \u2581that \u2581have \u2581access \u2581to \u2581the \u2581 app ."], "bleu": 0.3760490633960412, "rouge_l": 0.6559139784946237}
{"id": 4167, "predictions": ["\u2581// \u2581 Close Notify \u2581closes \u2581the \u2581response \u2581 pipe ."], "references": ["\u2581// \u2581 Provided \u2581in \u2581order \u2581to \u2581implement \u2581the \u2581http . Close Notifier \u2581interface ."], "bleu": 0.13225016524497193, "rouge_l": 0.32360742705570295}
{"id": 5933, "predictions": ["\u2581// \u2581Ensure Indexes \u2581is \u2581used \u2581to \u2581create \u2581a \u2581 set \u2581of \u2581indexes \u2581on \u2581the \u2581store ."], "references": ["\u2581// \u2581Ensure Indexes \u2581will \u2581ensure \u2581that \u2581the \u2581required \u2581indexes \u2581exist ."], "bleu": 0.16467029855845897, "rouge_l": 0.3831658291457286}
{"id": 5546, "predictions": ["\u2581// \u2581 Fit sIn R 1 \u2581returns \u2581true \u2581if \u2581the \u2581 S 3 st \u2581mode \u2581is \u2581in \u2581 1 \u2581or \u2581 1"], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581` x ` \u2581 runes \u2581would \u2581fit \u2581into \u2581 R 1. \u2581//"], "bleu": 0.0900911347430732, "rouge_l": 0.27087033747779754}
{"id": 4283, "predictions": ["\u2581// \u2581 EndOf Quarter \u2581returns \u2581the \u2581last \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 EndOf Quarter \u2581end \u2581of \u2581 quarter"], "bleu": 0.27824623288353134, "rouge_l": 0.4975530179445351}
{"id": 4531, "predictions": ["\u2581// \u2581capacity Token \u2581returns \u2581the \u2581 token \u2581 token ."], "references": ["\u2581// \u2581Determine \u2581the \u2581 historic \u2581 token \u2581timestamp \u2581representing \u2581a \u2581full \u2581bucket"], "bleu": 0.17876312353452062, "rouge_l": 0.44721407624633425}
{"id": 5367, "predictions": ["\u2581// \u2581 lower Initial \u2581returns \u2581a \u2581string \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 lower \u2581the \u2581 lower - level \u2581// \u2581string ."], "references": ["\u2581// Lower \u2581cases \u2581first \u2581char \u2581of \u2581string"], "bleu": 0.0612957497932821, "rouge_l": 0.1521197007481297}
{"id": 5337, "predictions": ["\u2581// \u2581 With Dial Peer Timeout \u2581returns \u2581a \u2581context \u2581with \u2581the \u2581given \u2581timeout ."], "references": ["\u2581// \u2581 With Dial Peer Timeout \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581 Dial Peer \u2581timeout \u2581applied . \u2581// \u2581// \u2581This \u2581timeout \u2581overrides \u2581the \u2581default \u2581 Dial Peer Timeout \u2581and"], "bleu": 0.21461980416224966, "rouge_l": 0.5545454545454546}
{"id": 5310, "predictions": ["\u2581// \u2581Do \u2581 resume s \u2581the \u2581 Resume Params ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Debugger . resume \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.16787723868520182, "rouge_l": 0.5366568914956013}
{"id": 4571, "predictions": ["\u2581// \u2581 LocalAddr \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581peer ."], "references": ["\u2581// \u2581 LocalAddr \u2581implements \u2581 net . Packet Conn ."], "bleu": 0.24808415001701817, "rouge_l": 0.4}
{"id": 5254, "predictions": ["\u2581// \u2581 With Footer Template \u2581adds \u2581the \u2581 footer \u2581to \u2581the \u2581 stdout \u2581in \u2581the \u2581PDF"], "references": ["\u2581// \u2581 With Footer Template \u2581HTML \u2581template \u2581for \u2581the \u2581print \u2581 footer . \u2581Should \u2581use \u2581the \u2581same \u2581// \u2581 format \u2581as \u2581the \u2581header Template ."], "bleu": 0.1998208213867581, "rouge_l": 0.5161538461538462}
{"id": 4491, "predictions": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581time ."], "references": ["\u2581// \u2581 Value \u2581implements \u2581the \u2581driver \u2581 Value r \u2581interface ."], "bleu": 0.23494428299484157, "rouge_l": 0.47213622291021673}
{"id": 5612, "predictions": ["\u2581// \u2581 Sign \u2581sign s \u2581the \u2581message \u2581using \u2581the \u2581 Ed 25519 PrivateKey"], "references": ["\u2581// \u2581 Sign \u2581returns \u2581a \u2581signature \u2581from \u2581an \u2581input \u2581message ."], "bleu": 0.18798317647335086, "rouge_l": 0.33841886269070737}
{"id": 5855, "predictions": ["\u2581// \u2581 Replace Pattern F \u2581replaces \u2581the \u2581pattern \u2581with \u2581the \u2581pattern \u2581pattern ."], "references": ["\u2581// \u2581 Replace Pattern F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Replace Regexp ."], "bleu": 0.29848820618156735, "rouge_l": 0.4739178690344062}
{"id": 5027, "predictions": ["\u2581// \u2581 With ObjectID \u2581sets \u2581the \u2581 ObjectID \u2581optional \u2581argument . \u2581 Input \u2581 ID ."], "references": ["\u2581// \u2581 With ObjectID \u2581JavaScript \u2581object \u2581 id \u2581of \u2581the \u2581node \u2581wrapper \u2581to \u2581 get \u2581the \u2581partial \u2581// \u2581 accessibility \u2581tree \u2581for ."], "bleu": 0.16438111611833178, "rouge_l": 0.39739413680781754}
{"id": 5693, "predictions": ["\u2581// \u2581 NewEncoder \u2581returns \u2581a \u2581new \u2581 Encoder ."], "references": ["\u2581// \u2581 NewEncoder \u2581returns \u2581a \u2581new \u2581encoder \u2581that \u2581outputs \u2581values \u2581to \u2581 e . \u2581// \u2581// \u2581 Encoder s \u2581created \u2581by \u2581 this \u2581function \u2581use \u2581the \u2581default \u2581encoder \u2581configuration ,"], "bleu": 0.07039966356760197, "rouge_l": 0.3739463601532567}
{"id": 5980, "predictions": ["\u2581// \u2581 Enable Rule By Regexp \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 name \u2581is \u2581a \u2581regular \u2581expression"], "references": ["\u2581// \u2581 Enable Rule \u2581enables \u2581rules \u2581that \u2581match \u2581with \u2581a \u2581regular \u2581expression ."], "bleu": 0.2689054715066593, "rouge_l": 0.4781634938409854}
{"id": 5173, "predictions": ["\u2581// \u2581 With WaitFor Navigation \u2581sets \u2581the \u2581 With Navigation Policy \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With WaitFor Navigation \u2581if \u2581 set \u2581the \u2581virtual \u2581time \u2581policy \u2581change \u2581should \u2581be \u2581// \u2581deferred \u2581until \u2581any \u2581frame \u2581starts \u2581 n avigating . \u2581Note \u2581any \u2581previous \u2581deferred \u2581policy"], "bleu": 0.12998514369010894, "rouge_l": 0.32972972972972975}
{"id": 5057, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581given \u2581request \u2581and \u2581returns \u2581the \u2581result ."], "references": ["\u2581// \u2581Do \u2581executes \u2581 Browser . crash \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.21423488883339475, "rouge_l": 0.4314002828854314}
{"id": 5025, "predictions": ["\u2581// \u2581 With NodeID \u2581sets \u2581the \u2581 NodeID \u2581to \u2581the \u2581 add - Tree \u2581 table ."], "references": ["\u2581// \u2581 With NodeID \u2581 identifier \u2581of \u2581the \u2581node \u2581to \u2581 get \u2581the \u2581partial \u2581 accessibility \u2581tree \u2581// \u2581for ."], "bleu": 0.20976100358692257, "rouge_l": 0.4794759825327511}
{"id": 5117, "predictions": ["\u2581// \u2581 WithError Reason \u2581sets \u2581the \u2581error \u2581reason \u2581for \u2581the \u2581 Continue ."], "references": ["\u2581// \u2581 WithError Reason \u2581if \u2581 set \u2581 this \u2581causes \u2581the \u2581request \u2581to \u2581fail \u2581with \u2581the \u2581given \u2581// \u2581reason . \u2581 Passing \u2581 Aborted \u2581for \u2581requests \u2581marked \u2581with \u2581is Navigation"], "bleu": 0.08756208587968624, "rouge_l": 0.30391459074733096}
{"id": 5037, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Start Params \u2581as \u2581a \u2581context"], "references": ["\u2581// \u2581Do \u2581executes \u2581 Profiler . start \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.22093887119981698, "rouge_l": 0.44721407624633425}
{"id": 5705, "predictions": ["\u2581// \u2581 NewDecoder \u2581returns \u2581a \u2581new \u2581 Decoder \u2581that \u2581will \u2581panic \u2581if \u2581the \u2581 Parser \u2581is \u2581not \u2581nil ."], "references": ["\u2581// \u2581 NewDecoder \u2581returns \u2581a \u2581decoder \u2581object \u2581that \u2581uses \u2581 p , \u2581will \u2581panic \u2581if \u2581 p \u2581is \u2581nil ."], "bleu": 0.33464494273746426, "rouge_l": 0.6635983263598326}
{"id": 5673, "predictions": ["\u2581// \u2581 Unregister \u2581removes \u2581the \u2581given \u2581 \u2581unregister \u2581from \u2581the \u2581registry ."], "references": ["\u2581// \u2581 Unregister \u2581removes \u2581the \u2581codec \u2581for \u2581a \u2581 mimetype \u2581from \u2581 r ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 5085, "predictions": ["\u2581// \u2581Do \u2581executes \u2581the \u2581 Undo Params \u2581with \u2581the \u2581current \u2581context ."], "references": ["\u2581// \u2581Do \u2581executes \u2581DOM . undo \u2581against \u2581the \u2581provided \u2581context ."], "bleu": 0.23901088824528133, "rouge_l": 0.5258620689655172}
{"id": 5981, "predictions": ["\u2581// \u2581 Disable Rule By Regexp \u2581returns \u2581a \u2581 set \u2581of \u2581rule \u2581 Disable Rule \u2581that \u2581matches \u2581// \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Disable Rule \u2581 disable s \u2581rules \u2581that \u2581match \u2581with \u2581a \u2581regular \u2581expression ."], "bleu": 0.17059573701616804, "rouge_l": 0.3829596412556054}
{"id": 5245, "predictions": ["\u2581// \u2581 With Frame ID \u2581sets \u2581the \u2581 Frame ID \u2581field \u2581of \u2581the \u2581 Navigate \u2581params"], "references": ["\u2581// \u2581 With Frame ID \u2581frame \u2581 id \u2581to \u2581 navigate , \u2581if \u2581not \u2581specified \u2581 navigate s \u2581the \u2581 top \u2581// \u2581frame ."], "bleu": 0.1979472446075745, "rouge_l": 0.3860759493670886}
{"id": 5030, "predictions": ["\u2581// \u2581 With Clip Rect \u2581sets \u2581the \u2581 Profile Snapshot Params \u2581for \u2581 this \u2581 Profile Snapshot Params ."], "references": ["\u2581// \u2581 With Clip Rect \u2581the \u2581 clip \u2581rectangle \u2581to \u2581 apply \u2581when \u2581 replay ing \u2581the \u2581snapshot ."], "bleu": 0.2872797668292002, "rouge_l": 0.5263157894736842}
{"id": 5241, "predictions": ["\u2581// \u2581 With Prompt Text \u2581sets \u2581the \u2581 Prompt Text \u2581field ' s \u2581 text ."], "references": ["\u2581// \u2581 With Prompt Text \u2581the \u2581 text \u2581to \u2581 enter \u2581into \u2581the \u2581dialog \u2581prompt \u2581before \u2581accept ing . \u2581// \u2581 Used \u2581only \u2581if \u2581 this \u2581is \u2581a \u2581prompt \u2581dialog"], "bleu": 0.14866655283074615, "rouge_l": 0.370945945945946}
{"id": 6135, "predictions": ["\u2581// \u2581 Multi Cloud Image Locator \u2581returns \u2581a \u2581 Multi Cloud Image Locator \u2581instance \u2581for \u2581 this \u2581API ."], "references": ["\u2581// \u2581 Multi Cloud Image Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3187271473320672, "rouge_l": 0.5408866995073891}
{"id": 4527, "predictions": ["\u2581// \u2581 Send Down \u2581sends \u2581a \u2581 gossip \u2581 data \u2581to \u2581the \u2581channel"], "references": ["\u2581// \u2581 Send Down \u2581 relay s \u2581 data \u2581into \u2581the \u2581channel \u2581topology \u2581via \u2581conn ."], "bleu": 0.27777457505723596, "rouge_l": 0.6093229744728079}
{"id": 5455, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581 byte \u2581array \u2581and \u2581returns \u2581the \u2581result ."], "references": ["\u2581// \u2581Parse \u2581converts \u2581a \u2581 byte \u2581array \u2581containing \u2581 R \u2581 S EXP \u2581to \u2581a \u2581 golang \u2581object . \u2581// \u2581This \u2581can \u2581be \u2581converted \u2581to \u2581native \u2581 golang \u2581types ."], "bleu": 0.07673292733354292, "rouge_l": 0.30942028985507253}
{"id": 6034, "predictions": ["\u2581// \u2581 Frame Range \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581sequence ."], "references": ["\u2581// \u2581 Frame Range \u2581returns \u2581the \u2581string \u2581frame \u2581range \u2581component , \u2581// \u2581parsed \u2581from \u2581the \u2581sequence . \u2581If \u2581no \u2581frame \u2581range \u2581was \u2581parsed , \u2581// \u2581then \u2581 this \u2581method \u2581will"], "bleu": 0.13216073179249938, "rouge_l": 0.3978260869565217}
{"id": 4204, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581 remove \u2581a \u2581 text \u2581loop ."], "references": ["\u2581// not \u2581a \u2581real \u2581for k"], "bleu": 0.11498759556447223, "rouge_l": 0.2364341085271318}
{"id": 4584, "predictions": ["\u2581// \u2581 Gossip \u2581returns \u2581a \u2581 Gossip Data \u2581that \u2581will \u2581 set \u2581the \u2581 gossip \u2581 gossip \u2581 data ."], "references": ["\u2581// \u2581 Gossip \u2581yields \u2581the \u2581current \u2581topology \u2581as \u2581 Gossip Data ."], "bleu": 0.17509131039045966, "rouge_l": 0.4581545064377682}
{"id": 5153, "predictions": ["\u2581// \u2581 With Color \u2581adds \u2581the \u2581 color \u2581to \u2581the \u2581 SetDefault BackgroundColor"], "references": ["\u2581// \u2581 With Color \u2581 r GB A \u2581of \u2581the \u2581default \u2581background \u2581 color . \u2581If \u2581not \u2581specified , \u2581any \u2581// \u2581existing \u2581override \u2581will \u2581be \u2581cleared ."], "bleu": 0.11091182756521671, "rouge_l": 0.3292212798766383}
{"id": 4611, "predictions": ["\u2581// \u2581Less \u2581returns \u2581true \u2581if \u2581the \u2581 i - th \u2581 items \u2581is \u2581in \u2581the \u2581 slice ."], "references": ["\u2581// \u2581Less \u2581implements \u2581 sort . Interface ."], "bleu": 0.101824256461955, "rouge_l": 0.3306233062330623}
{"id": 5824, "predictions": ["\u2581// \u2581 Cho mp Left \u2581returns \u2581the \u2581 left \u2581 left \u2581string \u2581of \u2581the \u2581 left \u2581prefix ."], "references": ["\u2581// \u2581 Cho mp Left \u2581removes \u2581prefix \u2581at \u2581the \u2581start \u2581of \u2581a \u2581string ."], "bleu": 0.2902266115291421, "rouge_l": 0.5115303983228512}
{"id": 5936, "predictions": ["\u2581// \u2581 Includes \u2581checks \u2581if \u2581a \u2581given \u2581 slice \u2581is \u2581contained \u2581in \u2581the \u2581list \u2581of \u2581strings ."], "references": ["\u2581// \u2581 Includes \u2581returns \u2581true \u2581if \u2581a \u2581list \u2581of \u2581strings \u2581includes \u2581another \u2581list \u2581of \u2581strings ."], "bleu": 0.29550432371218754, "rouge_l": 0.5484515484515484}
{"id": 4458, "predictions": ["\u2581// \u2581 List \u2581returns \u2581a \u2581 map \u2581of \u2581all \u2581 active \u2581services"], "references": ["\u2581// \u2581 List \u2581all \u2581 Service \u2581 PID s ."], "bleu": 0.23901088824528133, "rouge_l": 0.46212121212121204}
{"id": 5909, "predictions": ["\u2581// \u2581 Valid Password \u2581checks \u2581if \u2581the \u2581password \u2581is \u2581a \u2581valid \u2581password ."], "references": ["\u2581// \u2581 Valid Password \u2581implements \u2581the \u2581 fla me . Resource Owner \u2581interface ."], "bleu": 0.267768029597763, "rouge_l": 0.4414957780458384}
{"id": 6121, "predictions": ["\u2581// \u2581 Co e book Locator \u2581returns \u2581a \u2581 Co e book Locator \u2581instance \u2581with \u2581the \u2581 name \u2581of \u2581 this \u2581 api ."], "references": ["\u2581// \u2581 Co ok book Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.127408104603236, "rouge_l": 0.48157894736842105}
{"id": 5317, "predictions": ["\u2581// \u2581 With Column Number \u2581sets \u2581the \u2581number \u2581of \u2581 Breakpoint \u2581to \u2581be \u2581used \u2581to \u2581 set \u2581the \u2581 data \u2581to \u2581the \u2581 URL ."], "references": ["\u2581// \u2581 With Column Number \u2581offset \u2581in \u2581the \u2581line \u2581to \u2581 set \u2581breakpoint \u2581at ."], "bleu": 0.23819486101149287, "rouge_l": 0.5236051502145923}
{"id": 5420, "predictions": ["\u2581// \u2581 set ParamValue \u2581sets \u2581the \u2581 ParamValue \u2581 set"], "references": ["\u2581// \u2581 set ParamValue \u2581will \u2581ignore \u2581 empty \u2581values"], "bleu": 0.3672056269893592, "rouge_l": 0.5313588850174217}
{"id": 5297, "predictions": ["\u2581// \u2581 With Response Phrase \u2581sets \u2581the \u2581 Response Phrase \u2581field ' s \u2581 Response ."], "references": ["\u2581// \u2581 With Response Phrase \u2581a \u2581 text ual \u2581representation \u2581of \u2581 responseCode . \u2581If \u2581 absent , \u2581a \u2581// \u2581standard \u2581phrase \u2581math c ing \u2581 responseCode \u2581is \u2581used ."], "bleu": 0.12998514369010894, "rouge_l": 0.32972972972972975}
{"id": 5294, "predictions": ["\u2581// \u2581 With Handle AuthRequest s \u2581sets \u2581the \u2581 Handle AuthRequest s \u2581for \u2581the \u2581 Enable Params"], "references": ["\u2581// \u2581 With Handle AuthRequest s \u2581if \u2581true , \u2581 auth Required \u2581events \u2581will \u2581be \u2581 issued \u2581and \u2581// \u2581requests \u2581will \u2581be \u2581 paused \u2581expecting \u2581a \u2581 call \u2581to \u2581continue"], "bleu": 0.16209336077827952, "rouge_l": 0.3242524916943521}
{"id": 4406, "predictions": ["\u2581// \u2581 Have Attribute \u2581returns \u2581a \u2581 G and Matcher \u2581that \u2581matches \u2581the \u2581attribute \u2581// \u2581attribute , \u2581or \u2581an \u2581error \u2581if \u2581the \u2581attribute \u2581is \u2581not \u2581present ."], "references": ["\u2581// \u2581 Have Attribute \u2581passes \u2581when \u2581the \u2581expected \u2581attribute \u2581and \u2581value \u2581are \u2581present \u2581on \u2581the \u2581element . \u2581// \u2581This \u2581matcher \u2581will \u2581fail \u2581if \u2581the \u2581provided \u2581selection \u2581refers \u2581to \u2581more \u2581than"], "bleu": 0.14721833264514383, "rouge_l": 0.31282051282051276}
{"id": 5740, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 Checker \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get \u2581 role \u2581def ination"], "bleu": 0.14694106251955755, "rouge_l": 0.3546511627906977}
{"id": 5249, "predictions": ["\u2581// \u2581 With Print Background \u2581sets \u2581the \u2581 With Print Background \u2581field \u2581of \u2581 Print To PDF"], "references": ["\u2581// \u2581 With Print Background \u2581print \u2581background \u2581 graphics . \u2581Defaults \u2581to \u2581false ."], "bleu": 0.2749977595322415, "rouge_l": 0.39397201291711514}
{"id": 5282, "predictions": ["\u2581// \u2581 With Binding Name \u2581sets \u2581the \u2581 Binding Name \u2581field \u2581to \u2581the \u2581 DevTools DevTools Protocol Params ."], "references": ["\u2581// \u2581 With Binding Name \u2581binding \u2581 name , \u2581' cdp ' \u2581if \u2581not \u2581specified ."], "bleu": 0.2534743707366162, "rouge_l": 0.40627973358706}
{"id": 4282, "predictions": ["\u2581// \u2581 End OfMonth \u2581returns \u2581the \u2581last \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 End OfMonth \u2581end \u2581of \u2581 month"], "bleu": 0.27824623288353134, "rouge_l": 0.4975530179445351}
{"id": 5870, "predictions": ["\u2581// \u2581 To Bool Or \u2581returns \u2581true \u2581if \u2581the \u2581string \u2581is \u2581a \u2581 Bool Or \u2581or \u2581 empty \u2581string ."], "references": ["\u2581// \u2581 To Bool Or \u2581parses \u2581 s \u2581as \u2581a \u2581bool \u2581or \u2581returns \u2581defaultValue ."], "bleu": 0.26035572673286655, "rouge_l": 0.46923076923076923}
{"id": 5268, "predictions": ["\u2581// \u2581 With Format \u2581sets \u2581the \u2581 format \u2581to \u2581 set \u2581the \u2581 format \u2581of \u2581 Start Screen"], "references": ["\u2581// \u2581 With Format \u2581image \u2581compression \u2581 format ."], "bleu": 0.21797469124036953, "rouge_l": 0.4728682170542636}
{"id": 4281, "predictions": ["\u2581// \u2581 EndOf Week \u2581returns \u2581the \u2581current \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 EndOf Week \u2581end \u2581of \u2581 week"], "bleu": 0.27824623288353134, "rouge_l": 0.4975530179445351}
{"id": 4565, "predictions": ["\u2581// \u2581 Broadcast \u2581 deliver s \u2581all \u2581the \u2581 routes \u2581in \u2581the \u2581 route ."], "references": ["\u2581// \u2581 Broadcast \u2581returns \u2581the \u2581 set \u2581of \u2581peer \u2581names \u2581that \u2581should \u2581be \u2581 notified \u2581// \u2581when \u2581we \u2581receive \u2581a \u2581broadcast \u2581message \u2581 originating \u2581from \u2581the \u2581named \u2581peer \u2581// \u2581based"], "bleu": 0.07412555955791748, "rouge_l": 0.2515463917525773}
{"id": 5252, "predictions": ["\u2581// \u2581 With Paper Height \u2581sets \u2581the \u2581 Paper Height \u2581optional \u2581argument . \u2581 Format \u2581to \u2581// \u2581 stdout ."], "references": ["\u2581// \u2581 With Paper Height \u2581paper \u2581 height \u2581in \u2581 inches . \u2581Defaults \u2581to \u2581 11 \u2581 inches ."], "bleu": 0.26608125176434144, "rouge_l": 0.5152027027027026}
{"id": 5251, "predictions": ["\u2581// \u2581 With Paper Width \u2581sets \u2581the \u2581 Paper Width \u2581optional \u2581argument . \u2581 Paper \u2581 text \u2581// \u2581to \u2581 PDF ."], "references": ["\u2581// \u2581 With Paper Width \u2581paper \u2581 width \u2581in \u2581 inches . \u2581Defaults \u2581to \u2581 8.5 \u2581 inches ."], "bleu": 0.257613732694911, "rouge_l": 0.4943273905996758}
{"id": 5819, "predictions": ["\u2581// \u2581 Between F \u2581returns \u2581a \u2581string \u2581that \u2581will \u2581 Between \u2581 left \u2581and \u2581 left ."], "references": ["\u2581// \u2581 Between F \u2581is \u2581the \u2581 filter \u2581 form \u2581for \u2581 Between ."], "bleu": 0.25281168697394946, "rouge_l": 0.5252960172228203}
{"id": 5660, "predictions": ["\u2581// \u2581 Logging Service \u2581is \u2581a \u2581 Option \u2581to \u2581 set \u2581the \u2581service \u2581service ."], "references": ["\u2581// \u2581 Logging Service \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581Google \u2581API \u2581logging \u2581service \u2581to \u2581use ."], "bleu": 0.2996133939788298, "rouge_l": 0.4944275582573455}
{"id": 4861, "predictions": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581 g ."], "references": ["\u2581// \u2581 Copy \u2581Returns \u2581a \u2581copy \u2581of \u2581a \u2581 Glyph"], "bleu": 0.3508439695638686, "rouge_l": 0.7000000000000001}
{"id": 5652, "predictions": ["\u2581// \u2581 Die m \u2581is \u2581a \u2581convenience \u2581function \u2581that \u2581returns \u2581a \u2581new \u2581tree \u2581that \u2581// \u2581can \u2581be \u2581used \u2581to \u2581determine \u2581if \u2581the \u2581 status \u2581of \u2581the \u2581 status \u2581is \u2581not"], "references": ["\u2581// \u2581 Die m \u2581executes \u2581the \u2581same \u2581function \u2581on \u2581the \u2581default \u2581 Base \u2581instance"], "bleu": 0.13004800471424346, "rouge_l": 0.3405103668261563}
{"id": 5992, "predictions": ["\u2581// \u2581 Seed \u2581sets \u2581the \u2581seed \u2581value \u2581for \u2581the \u2581 Xor 64 Source ."], "references": ["\u2581// \u2581 Seed \u2581uses \u2581the \u2581given \u2581value \u2581to \u2581initialize \u2581the \u2581generator . \u2581If \u2581 this \u2581value \u2581is \u25810, \u2581a \u2581// \u2581 pre - defined \u2581seed \u2581is \u2581used \u2581instead , \u2581since"], "bleu": 0.06597285649383577, "rouge_l": 0.2986013986013986}
{"id": 4796, "predictions": ["\u2581// \u2581 New Incomplete Key \u2581returns \u2581a \u2581new \u2581 Key \u2581with \u2581the \u2581given \u2581 kind ."], "references": ["\u2581// \u2581 New Incomplete Key \u2581creates \u2581a \u2581new \u2581incomplete \u2581 key . \u2581// \u2581 kind \u2581cannot \u2581be \u2581 empty ."], "bleu": 0.28385363678609854, "rouge_l": 0.5991071428571428}
{"id": 4782, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581a \u2581 Index \u2581from \u2581the \u2581index ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581a \u2581document \u2581from \u2581the \u2581index ."], "bleu": 0.4366835442847812, "rouge_l": 0.768503937007874}
{"id": 6141, "predictions": ["\u2581// \u2581 Network OptionGroup Attachment Locator \u2581returns \u2581a \u2581 Network OptionGroup Attachment Locator \u2581object ."], "references": ["\u2581// \u2581 Network OptionGroup Attachment Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.4071220775553065, "rouge_l": 0.6}
{"id": 4732, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581a \u2581blob \u2581blob \u2581from \u2581the \u2581store ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581a \u2581blob ."], "bleu": 0.5331675363405771, "rouge_l": 0.8102466793168881}
{"id": 5215, "predictions": ["\u2581// \u2581 With Object Group \u2581sets \u2581the \u2581 With Object Group \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Object Group \u2581symbolic \u2581 group \u2581 name \u2581that \u2581can \u2581be \u2581used \u2581to \u2581release \u2581multiple \u2581// \u2581objects . \u2581If \u2581object Group \u2581is \u2581not \u2581specified \u2581and \u2581 objectId \u2581is"], "bleu": 0.12998514369010894, "rouge_l": 0.2885135135135135}
{"id": 5051, "predictions": ["\u2581// \u2581 With Report Progress \u2581returns \u2581a \u2581 mocked \u2581progress \u2581for \u2581the \u2581 Heap Snapshot Params ."], "references": ["\u2581// \u2581 With Report Progress \u2581if \u2581true \u2581' report Heap Snapshot Progress ' \u2581events \u2581will \u2581be \u2581// \u2581generated \u2581while \u2581snapshot \u2581is \u2581being \u2581taken ."], "bleu": 0.20304086026162935, "rouge_l": 0.37858805275407287}
{"id": 5350, "predictions": ["\u2581// \u2581 Num Page \u2581returns \u2581the \u2581number \u2581of \u2581 pages \u2581in \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Num Page \u2581returns \u2581the \u2581number \u2581of \u2581 pages \u2581in \u2581the \u2581PDF \u2581file ."], "bleu": 0.8068977120433548, "rouge_l": 0.8910112359550562}
{"id": 6024, "predictions": ["\u2581// \u2581 Start \u2581returns \u2581the \u2581start \u2581of \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Start \u2581returns \u2581the \u2581first \u2581value \u2581of \u2581the \u2581first \u2581range"], "bleu": 0.46924700641055994, "rouge_l": 0.6363636363636364}
{"id": 4924, "predictions": ["\u2581// \u2581 New S 64 \u2581creates \u2581a \u2581new \u2581 S 64 \u2581hash \u2581value ."], "references": ["\u2581// \u2581 New S 64 \u2581creates \u2581a \u2581new \u2581hash . Hash 64 \u2581 computing \u2581the \u2581 64 bit \u2581 xx Hash \u2581checksum \u2581starting \u2581with \u2581the \u2581specific \u2581seed ."], "bleu": 0.22230037854975046, "rouge_l": 0.49410898379970547}
{"id": 4923, "predictions": ["\u2581// \u2581 New S 32 \u2581creates \u2581a \u2581new \u2581 memcache \u2581hash ."], "references": ["\u2581// \u2581 New S 32 \u2581creates \u2581a \u2581new \u2581hash . Hash 32 \u2581 computing \u2581the \u2581 32 bit \u2581 xx Hash \u2581checksum \u2581starting \u2581with \u2581the \u2581specific \u2581seed ."], "bleu": 0.18900775835986183, "rouge_l": 0.4663608562691131}
{"id": 5827, "predictions": ["\u2581// \u2581 Cho mp Right F \u2581returns \u2581a \u2581string \u2581that \u2581matches \u2581the \u2581given \u2581 name \u2581and \u2581 lower \u2581// \u2581characters ."], "references": ["\u2581// \u2581 Cho mp Right F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Cho mp Right ."], "bleu": 0.294467310498826, "rouge_l": 0.5200341005967604}
{"id": 4892, "predictions": ["\u2581// \u2581Set Ui \u2581sets \u2581the \u2581current \u2581 set \u2581of \u2581the \u2581current \u2581 Context ."], "references": ["\u2581// \u2581Set LineWidth \u2581sets \u2581the \u2581line \u2581 width"], "bleu": 0.15310245441182443, "rouge_l": 0.47805642633228845}
{"id": 5859, "predictions": ["\u2581// \u2581 Slice F \u2581returns \u2581a \u2581 slice \u2581of \u2581the \u2581string \u2581 slice \u2581with \u2581the \u2581given \u2581start \u2581and \u2581end ."], "references": ["\u2581// \u2581 Slice F \u2581is \u2581the \u2581 filter \u2581for \u2581 Slice ."], "bleu": 0.1969221590285716, "rouge_l": 0.4581545064377682}
{"id": 4799, "predictions": ["\u2581// \u2581 Is Over Quota \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581error \u2581is \u2581a \u2581 call ."], "references": ["\u2581// \u2581 Is Over Quota \u2581reports \u2581whether \u2581err \u2581represents \u2581an \u2581API \u2581 call \u2581failure \u2581// \u2581due \u2581to \u2581 insufficient \u2581available \u2581quota ."], "bleu": 0.22430361401591375, "rouge_l": 0.4093959731543625}
{"id": 6067, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581logger ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581logger"], "bleu": 0.8408964152537145, "rouge_l": 0.9360613810741688}
{"id": 5825, "predictions": ["\u2581// \u2581 Cho mp Left F \u2581returns \u2581a \u2581string \u2581that \u2581will \u2581 prepend \u2581a \u2581 left \u2581 left \u2581 left \u2581// \u2581to \u2581the \u2581 left - left \u2581 left"], "references": ["\u2581// \u2581 Cho mp Left F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Cho mp Left ."], "bleu": 0.21997327371895098, "rouge_l": 0.3998543335761107}
{"id": 4284, "predictions": ["\u2581// \u2581 End OfYear \u2581returns \u2581the \u2581last \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 End OfYear \u2581end \u2581of \u2581 year"], "bleu": 0.27824623288353134, "rouge_l": 0.4975530179445351}
{"id": 5663, "predictions": ["\u2581// \u2581 Kick Resource \u2581 modifies \u2581the \u2581 2 \u2581resource \u2581 Resource \u2581to \u2581the \u2581 email"], "references": ["\u2581// \u2581 Monitored Resource \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581 monitored \u2581resource \u2581to \u2581send \u2581with \u2581// \u2581each \u2581log \u2581entry ."], "bleu": 0.10474631061426336, "rouge_l": 0.3693771626297577}
{"id": 5265, "predictions": ["\u2581// \u2581 With Download Path \u2581adds \u2581the \u2581 path \u2581to \u2581the \u2581 get Behavior \u2581params"], "references": ["\u2581// \u2581 With Download Path \u2581the \u2581default \u2581 path \u2581to \u2581save \u2581downloaded \u2581files \u2581to . \u2581This \u2581is \u2581// \u2581required \u2581if \u2581behavior \u2581is \u2581 set \u2581to \u2581' allow ' ."], "bleu": 0.15857448958962067, "rouge_l": 0.42988019732205773}
{"id": 4432, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 empty \u2581client"], "references": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 Pact \u2581client \u2581 manager \u2581with \u2581defaults"], "bleu": 0.25186505044536794, "rouge_l": 0.6161616161616162}
{"id": 5659, "predictions": ["\u2581// \u2581 Entries Service \u2581is \u2581a \u2581 Option \u2581option \u2581to \u2581 set \u2581the \u2581service \u2581 info"], "references": ["\u2581// \u2581 Entries Service \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581Google \u2581API \u2581entry \u2581service \u2581to \u2581use \u2581// \u2581with \u2581 Stack driver ."], "bleu": 0.22533492218883724, "rouge_l": 0.4605704697986578}
{"id": 5871, "predictions": ["\u2581// \u2581 ToInt Or \u2581returns \u2581the \u2581int \u2581value \u2581from \u2581the \u2581string ."], "references": ["\u2581// \u2581 ToInt Or \u2581parses \u2581 s \u2581as \u2581an \u2581int \u2581or \u2581returns \u2581defaultValue ."], "bleu": 0.2753046663506966, "rouge_l": 0.45522388059701485}
{"id": 6081, "predictions": ["\u2581// \u2581 New StreamHandler \u2581creates \u2581a \u2581new \u2581stream ."], "references": ["\u2581// \u2581 New StreamHandler \u2581creates \u2581a \u2581 StreamHandler"], "bleu": 0.6389431042462724, "rouge_l": 0.7134502923976607}
{"id": 5922, "predictions": ["\u2581// \u2581 New Group \u2581creates \u2581a \u2581new \u2581 Group"], "references": ["\u2581// \u2581 New Group \u2581creates \u2581and \u2581returns \u2581a \u2581new \u2581 group ."], "bleu": 0.47150411865647773, "rouge_l": 0.7427701674277016}
{"id": 4328, "predictions": ["\u2581// \u2581de alias \u2581is \u2581a \u2581 Command \u2581command \u2581for \u2581 alias ."], "references": ["\u2581// \u2581de alias \u2581 recurs iv ly \u2581de aliases \u2581a \u2581command \u2581until \u2581a \u2581non - aliased \u2581command \u2581// \u2581is \u2581reached ."], "bleu": 0.11187891801699178, "rouge_l": 0.346590909090909}
{"id": 5567, "predictions": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581 Values \u2581that \u2581represents \u2581the \u2581 data \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581 getValues \u2581unlink s \u2581two \u2581goroutines"], "bleu": 0.09507244120026236, "rouge_l": 0.18020679468242246}
{"id": 5377, "predictions": ["\u2581// \u2581 Send Org \u2581sends \u2581a \u2581 org \u2581to \u2581the \u2581 org ."], "references": ["\u2581// \u2581 Send Org \u2581sends \u2581the \u2581original \u2581 text \u2581without \u2581being \u2581wrapped \u2581in \u2581an \u2581 XMPP \u2581message \u2581 stanza ."], "bleu": 0.2320200990868497, "rouge_l": 0.4669856459330144}
{"id": 5212, "predictions": ["\u2581// \u2581 With ObjectID \u2581sets \u2581the \u2581 ObjectID \u2581optional \u2581argument . \u2581 Caller \u2581to \u2581 call \u2581the \u2581// \u2581 call \u2581to \u2581the \u2581 call \u2581to \u2581the \u2581 call \u2581to \u2581the"], "references": ["\u2581// \u2581 With ObjectID \u2581 identifier \u2581of \u2581the \u2581object \u2581to \u2581 call \u2581function \u2581on . \u2581Either \u2581 objectId \u2581// \u2581or \u2581 executionContext Id \u2581should \u2581be \u2581specified ."], "bleu": 0.17271600094426348, "rouge_l": 0.35423925667828104}
{"id": 4962, "predictions": ["\u2581// \u2581 Bump Patch \u2581 modifies \u2581the \u2581version \u2581of \u2581 Version ."], "references": ["\u2581// \u2581 Bump Patch \u2581 increments \u2581the \u2581 Patch \u2581field \u2581by \u2581 1 \u2581and \u2581resets \u2581all \u2581other \u2581fields \u2581to \u2581their \u2581default \u2581values"], "bleu": 0.1777333473258092, "rouge_l": 0.391025641025641}
{"id": 5548, "predictions": ["\u2581// \u2581 Fit sIn \u2581reports \u2581whether \u2581 this \u2581 S now ball \u2581is \u2581 interesting ."], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581` x ` \u2581 runes \u2581would \u2581fit \u2581into \u2581 RV . \u2581//"], "bleu": 0.09672649511413092, "rouge_l": 0.25}
{"id": 6042, "predictions": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581sequence ."], "references": ["\u2581// \u2581 Len \u2581returns \u2581the \u2581number \u2581of \u2581frames \u2581in \u2581the \u2581 Frame Set . \u2581// \u2581If \u2581a \u2581frame \u2581range \u2581was \u2581not \u2581parsed , \u2581 this \u2581will \u2581always \u2581return \u2581 1"], "bleu": 0.1591340950936792, "rouge_l": 0.43416370106761565}
{"id": 6093, "predictions": ["\u2581// \u2581is BuiltIn Type \u2581returns \u2581true \u2581if \u2581the \u2581 name \u2581is \u2581a \u2581 GraphQL \u2581endpoint"], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581given \u2581 name \u2581is \u2581the \u2581 name \u2581of \u2581a \u2581built - in \u2581 type"], "bleu": 0.1981952587174239, "rouge_l": 0.4770283479960899}
{"id": 5665, "predictions": ["\u2581// \u2581 Labels \u2581is \u2581a \u2581 Option \u2581option \u2581to \u2581 set \u2581the \u2581 set \u2581of \u2581labels \u2581to \u2581the \u2581 Stack ."], "references": ["\u2581// \u2581 Labels \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581labels \u2581to \u2581send \u2581with \u2581each \u2581log \u2581entry ."], "bleu": 0.20331710659744467, "rouge_l": 0.4828496042216358}
{"id": 4393, "predictions": ["\u2581// \u2581JSON \u2581 json ified \u2581 Capabilities"], "references": ["\u2581// \u2581JSON \u2581returns \u2581a \u2581JSON \u2581string \u2581representing \u2581the \u2581desired \u2581capabilities ."], "bleu": 0.1380518455178974, "rouge_l": 0.2136602451838879}
{"id": 4557, "predictions": ["\u2581// \u2581 Fetch \u2581returns \u2581the \u2581peer \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Fetch \u2581returns \u2581a \u2581peer \u2581matching \u2581the \u2581passed \u2581 name , \u2581without \u2581increment ing \u2581its \u2581// \u2581 ref count . \u2581If \u2581no \u2581matching \u2581peer \u2581is \u2581found , \u2581 Fetch"], "bleu": 0.08113519232216128, "rouge_l": 0.3978260869565217}
{"id": 5238, "predictions": ["\u2581// \u2581 With World Name \u2581specifies \u2581the \u2581 Context Name \u2581field \u2581of \u2581the \u2581 Create World Params \u2581instance ."], "references": ["\u2581// \u2581 With World Name \u2581an \u2581optional \u2581 name \u2581which \u2581is \u2581reported \u2581in \u2581the \u2581 Execution \u2581 Context ."], "bleu": 0.2985669537121763, "rouge_l": 0.47368421052631576}
{"id": 5314, "predictions": ["\u2581// \u2581 With URL \u2581sets \u2581the \u2581 URL \u2581optional \u2581argument \u2581to \u2581 set \u2581the \u2581 URL \u2581to \u2581the \u2581 URL ."], "references": ["\u2581// \u2581 With URL \u2581 URL \u2581of \u2581the \u2581resources \u2581to \u2581 set \u2581breakpoint \u2581on ."], "bleu": 0.2487344417023396, "rouge_l": 0.5727699530516431}
{"id": 4105, "predictions": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 App ."], "references": ["\u2581// \u2581DeepCopy \u2581is \u2581an \u2581autogenerated \u2581deepcopy \u2581function , \u2581copying \u2581the \u2581receiver , \u2581creating \u2581a \u2581new \u2581 App ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 5285, "predictions": ["\u2581// \u2581 With SessionID \u2581sets \u2581the \u2581 SessionID \u2581to \u2581the \u2581 Detach From Target Params ."], "references": ["\u2581// \u2581 With SessionID \u2581session \u2581to \u2581 detach ."], "bleu": 0.24078435074822624, "rouge_l": 0.5897790055248618}
{"id": 4357, "predictions": ["\u2581// \u2581 Timeout \u2581sets \u2581the \u2581number \u2581of \u2581seconds \u2581to \u2581wait \u2581for \u2581the \u2581given \u2581timeout"], "references": ["\u2581// \u2581 Timeout \u2581provides \u2581an \u2581 Option \u2581for \u2581specifying \u2581a \u2581timeout \u2581in \u2581seconds ."], "bleu": 0.1892240568795935, "rouge_l": 0.35714285714285715}
{"id": 4403, "predictions": ["\u2581// \u2581 Visible \u2581returns \u2581the \u2581 visible \u2581 area \u2581of \u2581the \u2581 Selection ."], "references": ["\u2581// \u2581 Visible \u2581returns \u2581true \u2581if \u2581all \u2581of \u2581the \u2581elements \u2581that \u2581the \u2581selection \u2581refers \u2581to \u2581are \u2581 visible ."], "bleu": 0.23199715070829935, "rouge_l": 0.471953578336557}
{"id": 4930, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 Gl g ."], "references": ["\u2581// \u2581Get \u2581returns \u2581 singleton \u2581gl g \u2581instance"], "bleu": 0.3303164318013807, "rouge_l": 0.625}
{"id": 5047, "predictions": ["\u2581// \u2581 With Sampling Interval \u2581sets \u2581the \u2581 Sampling Interval \u2581for \u2581the \u2581 Start Sampling Params ."], "references": ["\u2581// \u2581 With Sampling Interval \u2581average \u2581sample \u2581interval \u2581in \u2581bytes . \u2581 Poisson \u2581// \u2581distribution \u2581is \u2581used \u2581for \u2581the \u2581intervals . \u2581The \u2581default \u2581value \u2581is \u2581 32768 \u2581bytes ."], "bleu": 0.15908796172872247, "rouge_l": 0.4152484683458136}
{"id": 4402, "predictions": ["\u2581// \u2581 Selected \u2581returns \u2581the \u2581boolean \u2581value \u2581of \u2581the \u2581 Selection ."], "references": ["\u2581// \u2581 Selected \u2581returns \u2581true \u2581if \u2581all \u2581of \u2581the \u2581elements \u2581that \u2581the \u2581selection \u2581refers \u2581to \u2581are \u2581selected ."], "bleu": 0.21481488891327769, "rouge_l": 0.45042194092827004}
{"id": 5099, "predictions": ["\u2581// \u2581 With ObjectID \u2581sets \u2581the \u2581 ObjectID \u2581optional \u2581argument . \u2581 Once \u2581the \u2581 article \u2581// \u2581 set \u2581to \u2581the \u2581 ObjectID \u2581 set \u2581of \u2581the \u2581 highlight \u2581of"], "references": ["\u2581// \u2581 With ObjectID \u2581JavaScript \u2581object \u2581 id \u2581of \u2581the \u2581node \u2581to \u2581be \u2581 highlighted ."], "bleu": 0.14458350226851174, "rouge_l": 0.36802413273001505}
{"id": 5107, "predictions": ["\u2581// \u2581 WithMessage \u2581 - \u2581 set \u2581the \u2581message \u2581to \u2581 display"], "references": ["\u2581// \u2581 WithMessage \u2581the \u2581message \u2581to \u2581 display , \u2581also \u2581triggers \u2581 resume \u2581and \u2581step \u2581over \u2581// \u2581controls ."], "bleu": 0.27754253845721066, "rouge_l": 0.4959349593495934}
{"id": 5671, "predictions": ["\u2581// \u2581 New Stream Decoder \u2581returns \u2581a \u2581new \u2581 Stream Decoder \u2581that \u2581reads \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581 New Stream Decoder \u2581returns \u2581a \u2581new \u2581stream \u2581decoder \u2581that \u2581takes \u2581input \u2581from \u2581 r ."], "bleu": 0.41759165212784805, "rouge_l": 0.6034172661870504}
{"id": 5075, "predictions": ["\u2581// \u2581 With NodeID \u2581sets \u2581the \u2581 NodeID \u2581to \u2581the \u2581 resolve \u2581node \u2581params"], "references": ["\u2581// \u2581 With NodeID \u2581 ID \u2581of \u2581the \u2581node \u2581to \u2581 resolve ."], "bleu": 0.31680535338398114, "rouge_l": 0.5965770171149144}
{"id": 5066, "predictions": ["\u2581// \u2581 WithPath Filter \u2581adds \u2581the \u2581 path \u2581to \u2581the \u2581 filter \u2581to \u2581the \u2581request \u2581 path"], "references": ["\u2581// \u2581 WithPath Filter \u2581if \u2581present , \u2581only \u2581return \u2581the \u2581entries \u2581containing \u2581 this \u2581// \u2581 substring \u2581in \u2581the \u2581 path ."], "bleu": 0.21699096061620252, "rouge_l": 0.5012325390304027}
{"id": 5946, "predictions": ["\u2581// \u2581 Context \u2581returns \u2581the \u2581context \u2581with \u2581the \u2581context \u2581 set \u2581in \u2581the \u2581context ."], "references": ["\u2581// \u2581 Context \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581latest \u2581 span \u2581stored \u2581as \u2581a \u2581reference \u2581for \u2581// \u2581 handlers \u2581that \u2581will \u2581 call \u2581 New Tracer FromRequest \u2581or \u2581similar"], "bleu": 0.11601277025340072, "rouge_l": 0.3353951890034364}
{"id": 4133, "predictions": ["\u2581// \u2581validate \u2581checks \u2581if \u2581the \u2581 app \u2581is \u2581valid"], "references": ["\u2581// \u2581validate \u2581checks \u2581 app \u2581pool \u2581and \u2581plan"], "bleu": 0.31239399369202553, "rouge_l": 0.594541910331384}
{"id": 4188, "predictions": ["\u2581// \u2581 dereference \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581 trie \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Private \u2581function \u2581for \u2581now ."], "bleu": 0.1350862565735141, "rouge_l": 0.31715771230502604}
{"id": 5213, "predictions": ["\u2581// \u2581 With Arguments \u2581sets \u2581the \u2581 Arguments \u2581optional \u2581argument . \u2581 Call \u2581to \u2581the \u2581 call \u2581function \u2581// \u2581for \u2581the \u2581same \u2581 variadic \u2581arguments \u2581as \u2581the \u2581params ."], "references": ["\u2581// \u2581 With Arguments \u2581 call \u2581arguments . \u2581 All \u2581 call \u2581arguments \u2581must \u2581belong \u2581to \u2581the \u2581same \u2581// \u2581JavaScript \u2581world \u2581as \u2581the \u2581target \u2581object ."], "bleu": 0.19606781281465982, "rouge_l": 0.5141481035520771}
{"id": 5221, "predictions": ["\u2581// \u2581 With Object Group \u2581sets \u2581the \u2581 Object Group \u2581field ' s \u2581 With Object Group ."], "references": ["\u2581// \u2581 With Object Group \u2581symbolic \u2581 group \u2581 name \u2581that \u2581can \u2581be \u2581used \u2581to \u2581release \u2581the \u2581// \u2581results ."], "bleu": 0.25359116429179224, "rouge_l": 0.41709401709401706}
{"id": 5143, "predictions": ["\u2581// \u2581 With Expires \u2581adds \u2581the \u2581 Expires \u2581to \u2581the \u2581 SetCookie \u2581params"], "references": ["\u2581// \u2581 With Expires \u2581cookie \u2581expiration \u2581 date , \u2581session \u2581cookie \u2581if \u2581not \u2581 set ."], "bleu": 0.229585358002991, "rouge_l": 0.4062153163152054}
{"id": 5985, "predictions": ["\u2581// \u2581Add Exception \u2581adds \u2581a \u2581new \u2581 Exception \u2581to \u2581the \u2581 Seek ."], "references": ["\u2581// \u2581Add Exception \u2581adds \u2581a \u2581new \u2581exception \u2581into \u2581the \u2581context ."], "bleu": 0.460462862587273, "rouge_l": 0.6768377253814147}
{"id": 4587, "predictions": ["\u2581// \u2581newState \u2581creates \u2581a \u2581new \u2581state \u2581of \u2581the \u2581current \u2581state ."], "references": ["\u2581// \u2581Construct \u2581an \u2581 empty \u2581state \u2581object , \u2581ready \u2581to \u2581receive \u2581updates . \u2581// \u2581This \u2581is \u2581suitable \u2581to \u2581use \u2581at \u2581program \u2581start . \u2581// \u2581 Other \u2581peers \u2581will \u2581populate \u2581"], "bleu": 0.024080520695165593, "rouge_l": 0.13505535055350554}
{"id": 5142, "predictions": ["\u2581// \u2581 SetMax Site \u2581sets \u2581the \u2581 HTTPClient Site \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 WithSame Site \u2581cookie \u2581 Same Site \u2581 type ."], "bleu": 0.1437791910008819, "rouge_l": 0.49061662198391426}
{"id": 5097, "predictions": ["\u2581// \u2581 With NodeID \u2581sets \u2581the \u2581 NodeID \u2581to \u2581the \u2581 highlight \u2581 identifier ."], "references": ["\u2581// \u2581 With NodeID \u2581 identifier \u2581of \u2581the \u2581node \u2581to \u2581 highlight ."], "bleu": 0.31535540524901323, "rouge_l": 0.6512455516014234}
{"id": 5016, "predictions": ["\u2581// \u2581 With Sampling Interval \u2581sets \u2581the \u2581 Sampling Interval \u2581for \u2581the \u2581 Start Sampling Params ."], "references": ["\u2581// \u2581 With Sampling Interval \u2581average \u2581number \u2581of \u2581bytes \u2581between \u2581samples ."], "bleu": 0.2749977595322415, "rouge_l": 0.42707117852975496}
{"id": 5457, "predictions": ["\u2581// \u2581 New R Client \u2581returns \u2581a \u2581new \u2581 R Client \u2581client"], "references": ["\u2581// \u2581 New R Client \u2581creates \u2581a \u2581 R Client \u2581which \u2581will \u2581run \u2581commands \u2581on \u2581the \u2581 R Serve \u2581server \u2581located \u2581at \u2581the \u2581provided \u2581host \u2581and \u2581port"], "bleu": 0.1424950905036935, "rouge_l": 0.43160377358490565}
{"id": 5941, "predictions": ["\u2581// \u2581 New Tracer \u2581returns \u2581a \u2581new \u2581 Tracer ."], "references": ["\u2581// \u2581 New Tracer \u2581returns \u2581a \u2581new \u2581tracer \u2581with \u2581the \u2581specified \u2581root \u2581 span ."], "bleu": 0.4352374802397565, "rouge_l": 0.6949367088607595}
{"id": 5237, "predictions": ["\u2581// \u2581 With From Surface \u2581adds \u2581the \u2581 Capture Screenshot Params \u2581to \u2581the \u2581 Capture \u2581 Screenshot Params"], "references": ["\u2581// \u2581 With From Surface \u2581capture \u2581the \u2581 screenshot \u2581from \u2581the \u2581surface , \u2581rather \u2581than \u2581the \u2581// \u2581 view . \u2581Defaults \u2581to \u2581true ."], "bleu": 0.21765453255717773, "rouge_l": 0.4178082191780822}
{"id": 4742, "predictions": ["\u2581// \u2581Save Struct \u2581 persist s \u2581the \u2581struct \u2581to \u2581the \u2581struct ."], "references": ["\u2581// \u2581Save Struct \u2581returns \u2581the \u2581fields \u2581from \u2581 src \u2581as \u2581a \u2581 slice \u2581of \u2581 Field . \u2581// \u2581 src \u2581must \u2581be \u2581a \u2581struct \u2581pointer ."], "bleu": 0.0716150159379291, "rouge_l": 0.29611650485436897}
{"id": 5171, "predictions": ["\u2581// \u2581 With Budget \u2581sets \u2581the \u2581 Budget Policy Params \u2581interface \u2581for \u2581// \u2581 Virtual Time Policy Params ."], "references": ["\u2581// \u2581 With Budget \u2581if \u2581 set , \u2581after \u2581 this \u2581many \u2581virtual \u2581milliseconds \u2581have \u2581elapsed \u2581// \u2581virtual \u2581time \u2581will \u2581be \u2581 paused \u2581and \u2581a \u2581virtual Time Budget Expired \u2581event"], "bleu": 0.11946561062132881, "rouge_l": 0.3138263665594856}
{"id": 5658, "predictions": ["\u2581// \u2581 Project ID \u2581specifies \u2581the \u2581 name \u2581of \u2581the \u2581 app ."], "references": ["\u2581// \u2581 Project ID \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581project \u2581 ID \u2581which \u2581is \u2581needed \u2581for \u2581the \u2581log \u2581// \u2581 name ."], "bleu": 0.1586333430879753, "rouge_l": 0.4761491760624458}
{"id": 4279, "predictions": ["\u2581// \u2581 EndOf Hour \u2581returns \u2581the \u2581current \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 EndOf Hour \u2581end \u2581of \u2581hour"], "bleu": 0.27824623288353134, "rouge_l": 0.5285961871750434}
{"id": 5670, "predictions": ["\u2581// \u2581 New Stream Encoder \u2581creates \u2581a \u2581new \u2581 Stream Encoder ."], "references": ["\u2581// \u2581 New Stream Encoder \u2581returns \u2581a \u2581new \u2581stream \u2581encoder \u2581that \u2581outputs \u2581to \u2581 w ."], "bleu": 0.3242940465804018, "rouge_l": 0.6267123287671232}
{"id": 4278, "predictions": ["\u2581// \u2581 EndOf Minute \u2581returns \u2581the \u2581current \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 EndOf Minute \u2581end \u2581of \u2581minute"], "bleu": 0.27824623288353134, "rouge_l": 0.5285961871750434}
{"id": 5192, "predictions": ["\u2581// \u2581 With Target Name \u2581sets \u2581the \u2581 Target Name \u2581field \u2581of \u2581the \u2581 EventListener ."], "references": ["\u2581// \u2581 With Target Name \u2581 eventTarget \u2581interface \u2581 name ."], "bleu": 0.31181814978096556, "rouge_l": 0.6130653266331658}
{"id": 5244, "predictions": ["\u2581// \u2581 With Transition Type \u2581sets \u2581the \u2581 Transition Type \u2581field \u2581of \u2581the \u2581 Navigate Params ."], "references": ["\u2581// \u2581 With Transition Type \u2581intended \u2581transition \u2581 type ."], "bleu": 0.28433291815307693, "rouge_l": 0.5439490445859871}
{"id": 5853, "predictions": ["\u2581// \u2581 Quote Items \u2581 - \u2581 quote \u2581 quote \u2581strings"], "references": ["\u2581// \u2581 Quote Items \u2581quotes \u2581all \u2581 items \u2581in \u2581array , \u2581mostly \u2581for \u2581debugging ."], "bleu": 0.23065413605444868, "rouge_l": 0.37423312883435583}
{"id": 6133, "predictions": ["\u2581// \u2581 IpAddress Binding Locator \u2581returns \u2581a \u2581 IP Binding Locator \u2581instance ."], "references": ["\u2581// \u2581 IpAddress Binding Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35853358387875456, "rouge_l": 0.5886610373944512}
{"id": 6134, "predictions": ["\u2581// \u2581 Monitoring Metric Locator \u2581returns \u2581a \u2581 Monitoring Metric Locator \u2581that \u2581represents \u2581a \u2581 SoftLayer _ Metric Locator \u2581object ."], "references": ["\u2581// \u2581 Monitoring Metric Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.23550061570724218, "rouge_l": 0.47424684159378033}
{"id": 5432, "predictions": ["\u2581// \u2581 New Part \u2581creates \u2581a \u2581new \u2581 Part \u2581instance"], "references": ["\u2581// \u2581 New Part \u2581creates \u2581a \u2581new \u2581 Part \u2581object ."], "bleu": 0.8081591428066641, "rouge_l": 0.8498452012383902}
{"id": 5733, "predictions": ["\u2581// \u2581Set Level \u2581sets \u2581the \u2581level \u2581of \u2581the \u2581log \u2581level ."], "references": ["\u2581// \u2581Set Level \u2581changes \u2581the \u2581logging \u2581level \u2581to \u2581the \u2581passed \u2581level . \u2581// \u2581// \u2581This \u2581is \u2581part \u2581of \u2581the \u2581 Logger \u2581interface \u2581implementation ."], "bleu": 0.09290493308492849, "rouge_l": 0.42844600526777876}
{"id": 6120, "predictions": ["\u2581// \u2581 Cloud Account Locator \u2581returns \u2581a \u2581 Cloud Account Locator \u2581instance ."], "references": ["\u2581// \u2581 Cloud Account Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35853358387875456, "rouge_l": 0.5886610373944512}
{"id": 6142, "predictions": ["\u2581// \u2581 Oauth 2 Locator \u2581returns \u2581a \u2581new \u2581 Oauth 2 Locator \u2581instance"], "references": ["\u2581// \u2581 Oauth 2 Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3481302097077456, "rouge_l": 0.5150784077201447}
{"id": 4494, "predictions": ["\u2581// \u2581 Value Or Zero \u2581returns \u2581the \u2581time . Time \u2581value \u2581if \u2581 t \u2581is \u2581nil ."], "references": ["\u2581// \u2581 Value Or Zero \u2581returns \u2581the \u2581inner \u2581value \u2581if \u2581valid , \u2581otherwise \u2581zero ."], "bleu": 0.4354294657746997, "rouge_l": 0.6321243523316062}
{"id": 6118, "predictions": ["\u2581// \u2581 Child Account Locator \u2581returns \u2581a \u2581 Child Account Locator \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581// \u2581the \u2581 Child Locator \u2581for \u2581the \u2581given \u2581 subject ."], "references": ["\u2581// \u2581 Child Account Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2047081973954519, "rouge_l": 0.4963384865744508}
{"id": 6140, "predictions": ["\u2581// \u2581 Network OptionGroup Locator \u2581returns \u2581a \u2581 Network OptionGroup Locator \u2581from \u2581a \u2581 Policy Binding Locator"], "references": ["\u2581// \u2581 Network OptionGroup Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2928298013714697, "rouge_l": 0.5252960172228203}
{"id": 6116, "predictions": ["\u2581// \u2581 Audit Entry Locator \u2581creates \u2581a \u2581new \u2581 Audit Entry Locator ."], "references": ["\u2581// \u2581 Audit Entry Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35853358387875456, "rouge_l": 0.5886610373944512}
{"id": 6139, "predictions": ["\u2581// \u2581 Network Gateway Locator \u2581creates \u2581a \u2581 Network Gateway Locator \u2581that \u2581will \u2581 connect \u2581to \u2581the \u2581// \u2581 Network Gateway Locator ."], "references": ["\u2581// \u2581 Network Gateway Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.22023814946586626, "rouge_l": 0.5088044485634847}
{"id": 5155, "predictions": ["\u2581// \u2581 With Scale \u2581sets \u2581the \u2581 Scale \u2581scale Params \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Scale \u2581scale \u2581to \u2581 apply \u2581to \u2581resulting \u2581 view \u2581image ."], "bleu": 0.2722589423069702, "rouge_l": 0.416382252559727}
{"id": 4525, "predictions": ["\u2581// \u2581 Gossip Broadcast \u2581 gossip s \u2581the \u2581 gossip \u2581message \u2581to \u2581the \u2581channel"], "references": ["\u2581// \u2581 Gossip Broadcast \u2581implements \u2581 Gossip , \u2581 relay ing \u2581update \u2581to \u2581all \u2581members \u2581of \u2581the \u2581// \u2581channel ."], "bleu": 0.190585840000859, "rouge_l": 0.5130841121495328}
{"id": 5234, "predictions": ["\u2581// \u2581 With Screenshot \u2581specifies \u2581the \u2581 Screenshot \u2581optional \u2581argument \u2581to \u2581the \u2581 Begin Frame Params \u2581// \u2581object ."], "references": ["\u2581// \u2581 With Screenshot \u2581if \u2581 set , \u2581a \u2581 screenshot \u2581of \u2581the \u2581frame \u2581will \u2581be \u2581 captured \u2581and \u2581// \u2581returned \u2581in \u2581the \u2581response . \u2581Otherwise , \u2581no \u2581 screenshot"], "bleu": 0.12234636721213495, "rouge_l": 0.35305466237942124}
{"id": 5691, "predictions": ["\u2581// \u2581 New Pretty Stream Encoder \u2581creates \u2581a \u2581new \u2581 Pretty Stream Encoder ."], "references": ["\u2581// \u2581 New Pretty Stream Encoder \u2581returns \u2581a \u2581new \u2581JSON \u2581stream \u2581encoder \u2581that \u2581writes \u2581to \u2581 w ."], "bleu": 0.3499129931669441, "rouge_l": 0.6112224448897796}
{"id": 5219, "predictions": ["\u2581// \u2581 With Generate Preview \u2581adds \u2581the \u2581 Generate Preview \u2581to \u2581the \u2581 Properties \u2581params"], "references": ["\u2581// \u2581 With Generate Preview \u2581whether \u2581 preview \u2581should \u2581be \u2581generated \u2581for \u2581the \u2581results ."], "bleu": 0.3237722713145643, "rouge_l": 0.4666666666666668}
{"id": 5218, "predictions": ["\u2581// \u2581 With Own Properties \u2581sets \u2581the \u2581 Own Properties \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With Own Properties \u2581if \u2581true , \u2581returns \u2581properties \u2581belonging \u2581only \u2581to \u2581the \u2581// \u2581element \u2581itself , \u2581not \u2581to \u2581its \u2581 prototype \u2581chain ."], "bleu": 0.17119777970322994, "rouge_l": 0.38274509803921564}
{"id": 5217, "predictions": ["\u2581// \u2581 WithContext ID \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 eval \u2581params"], "references": ["\u2581// \u2581 WithContext ID \u2581specifies \u2581in \u2581which \u2581execution \u2581context \u2581to \u2581perform \u2581evaluation . \u2581// \u2581If \u2581the \u2581parameter \u2581is \u2581omitted \u2581the \u2581evaluation \u2581will \u2581be \u2581performed \u2581in \u2581the \u2581context \u2581// \u2581of \u2581the"], "bleu": 0.08271136894171953, "rouge_l": 0.30942028985507253}
{"id": 5823, "predictions": ["\u2581// \u2581 Char At F \u2581returns \u2581the \u2581index \u2581at \u2581index \u2581 i ."], "references": ["\u2581// \u2581 Char At F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Char At ."], "bleu": 0.30740809996828294, "rouge_l": 0.541620421753607}
{"id": 4648, "predictions": ["\u2581// \u2581 Event Event Consistency \u2581sets \u2581the \u2581 text ual \u2581field \u2581of \u2581the \u2581query ."], "references": ["\u2581// \u2581 Event ual Consistency \u2581returns \u2581a \u2581derivative \u2581query \u2581that \u2581returns \u2581 eventually \u2581// \u2581consistent \u2581results . \u2581// \u2581It \u2581only \u2581has \u2581an \u2581effect \u2581on \u2581ancestor \u2581queries ."], "bleu": 0.08425432371866676, "rouge_l": 0.2717149220489978}
{"id": 6113, "predictions": ["\u2581// \u2581 Account Group Locator \u2581returns \u2581a \u2581 Account Group Locator \u2581instance"], "references": ["\u2581// \u2581 Account Group Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.34617729081707266, "rouge_l": 0.5310945273631842}
{"id": 6080, "predictions": ["\u2581// \u2581 Warn ln \u2581is \u2581a \u2581 warning - level \u2581 Warn ."], "references": ["\u2581// \u2581 Warn ln \u2581records \u2581the \u2581log \u2581with \u2581 warn \u2581level"], "bleu": 0.27824623288353134, "rouge_l": 0.42302357836338417}
{"id": 6078, "predictions": ["\u2581// \u2581 Info ln \u2581is \u2581a \u2581 debug - level \u2581 info \u2581for \u2581the \u2581 Logger ."], "references": ["\u2581// \u2581 Info ln \u2581records \u2581the \u2581log \u2581with \u2581 info \u2581level"], "bleu": 0.23909453161355018, "rouge_l": 0.4457978075517661}
{"id": 6076, "predictions": ["\u2581// \u2581 Error ln \u2581is \u2581a \u2581 structured \u2581 call \u2581to \u2581 emit \u2581the \u2581output \u2581of \u2581the \u2581logger ."], "references": ["\u2581// \u2581 Error ln \u2581records \u2581the \u2581log \u2581with \u2581error \u2581level"], "bleu": 0.18759202316167212, "rouge_l": 0.3652694610778443}
{"id": 5657, "predictions": ["\u2581// \u2581 Levels \u2581is \u2581a \u2581 functional \u2581option \u2581on \u2581the \u2581 Stack ."], "references": ["\u2581// \u2581 Levels \u2581is \u2581an \u2581option \u2581that \u2581sets \u2581the \u2581logrus \u2581levels \u2581that \u2581the \u2581 Stack driver Hook \u2581// \u2581will \u2581create \u2581log \u2581entries \u2581for ."], "bleu": 0.16131287568259486, "rouge_l": 0.4617325483599663}
{"id": 4839, "predictions": ["\u2581// \u2581 Delete Prefix \u2581removes \u2581the \u2581prefix \u2581of \u2581the \u2581given \u2581prefix ."], "references": ["\u2581// \u2581 Delete Prefix \u2581is \u2581used \u2581to \u2581delete \u2581the \u2581subtree \u2581under \u2581a \u2581prefix \u2581// \u2581Returns \u2581how \u2581many \u2581nodes \u2581were \u2581deleted \u2581// \u2581Use \u2581 this \u2581to \u2581delete \u2581large \u2581subtree s \u2581efficiently"], "bleu": 0.07018693485770518, "rouge_l": 0.26521739130434785}
{"id": 6064, "predictions": ["\u2581// \u2581 Close \u2581the \u2581 rot ator \u2581file ."], "references": ["\u2581// \u2581 Close \u2581implements \u2581 Handler \u2581interface"], "bleu": 0.2777619034011791, "rouge_l": 0.5115303983228512}
{"id": 4959, "predictions": ["\u2581// \u2581 Slice \u2581returns \u2581the \u2581 slice \u2581of \u2581the \u2581version ."], "references": ["\u2581// \u2581 Slice \u2581converts \u2581the \u2581 comparable \u2581parts \u2581of \u2581the \u2581 semver \u2581into \u2581a \u2581 slice \u2581of \u2581integers ."], "bleu": 0.17619767816755613, "rouge_l": 0.5088633993743482}
{"id": 5122, "predictions": ["\u2581// \u2581 WithHeaders \u2581adds \u2581the \u2581 headers \u2581to \u2581the \u2581 Continue \u2581window ."], "references": ["\u2581// \u2581 WithHeaders \u2581if \u2581 set \u2581 this \u2581allows \u2581the \u2581request \u2581 headers \u2581to \u2581be \u2581changed . \u2581Must \u2581not \u2581// \u2581be \u2581 set \u2581in \u2581response \u2581to \u2581an \u2581 auth Challenge"], "bleu": 0.07602176207561004, "rouge_l": 0.3473309608540925}
{"id": 6115, "predictions": ["\u2581// \u2581 Alert Spec Locator \u2581creates \u2581a \u2581new \u2581 Alert Spec Locator"], "references": ["\u2581// \u2581 Alert Spec Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.34617729081707266, "rouge_l": 0.5310945273631842}
{"id": 4313, "predictions": ["\u2581// \u2581 IsEnabled For \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581given \u2581level \u2581and \u2581the \u2581given \u2581level ."], "references": ["\u2581// \u2581 IsEnabled For \u2581will \u2581return \u2581true \u2581if \u2581logging \u2581is \u2581enabled \u2581for \u2581the \u2581given \u2581module ."], "bleu": 0.23909453161355018, "rouge_l": 0.4265734265734266}
{"id": 5979, "predictions": ["\u2581// \u2581 Disable Rule \u2581 disable s \u2581the \u2581 key \u2581for \u2581a \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Disable Rule \u2581 disable s \u2581specific \u2581rule ."], "bleu": 0.42649937722961534, "rouge_l": 0.6421052631578947}
{"id": 5978, "predictions": ["\u2581// \u2581 Enable Rule \u2581 marks \u2581the \u2581given \u2581rule \u2581to \u2581the \u2581 Seek er ' s \u2581rule"], "references": ["\u2581// \u2581 Enable Rule \u2581enables \u2581specific \u2581rule ."], "bleu": 0.21042990347620458, "rouge_l": 0.4277699859747546}
{"id": 5318, "predictions": ["\u2581// \u2581 With Condition \u2581sets \u2581the \u2581condition \u2581to \u2581be \u2581used \u2581when \u2581the \u2581 set \u2581of \u2581parameters \u2581should \u2581be \u2581// \u2581returned ."], "references": ["\u2581// \u2581 With Condition \u2581expression \u2581to \u2581use \u2581as \u2581a \u2581breakpoint \u2581condition . \u2581When \u2581specified , \u2581// \u2581 debugger \u2581will \u2581stop \u2581on \u2581the \u2581breakpoint \u2581if \u2581 this \u2581expression \u2581evaluates \u2581to \u2581true"], "bleu": 0.1282827856845534, "rouge_l": 0.26604361370716506}
{"id": 5118, "predictions": ["\u2581// \u2581 With RawResponse \u2581sets \u2581the \u2581 body \u2581of \u2581the \u2581response \u2581to \u2581the \u2581response ."], "references": ["\u2581// \u2581 With RawResponse \u2581if \u2581 set \u2581the \u2581requests \u2581completes \u2581using \u2581with \u2581the \u2581provided \u2581// \u2581base 64 \u2581encoded \u2581raw \u2581response , \u2581including \u2581HTTP \u2581 status \u2581line \u2581and \u2581 headers \u2581etc"], "bleu": 0.09755472262973743, "rouge_l": 0.3353951890034364}
{"id": 5587, "predictions": ["\u2581// \u2581Generate KeyPair \u2581generates \u2581a \u2581new \u2581 key \u2581with \u2581the \u2581given \u2581 key \u2581and \u2581values ."], "references": ["\u2581// \u2581Generate KeyPair \u2581generates \u2581a \u2581private \u2581and \u2581public \u2581 key"], "bleu": 0.32635983266098934, "rouge_l": 0.5618421052631578}
{"id": 5296, "predictions": ["\u2581// \u2581 With Body \u2581sets \u2581the \u2581 body \u2581to \u2581the \u2581 set \u2581of \u2581request \u2581request"], "references": ["\u2581// \u2581 With Body \u2581a \u2581response \u2581 body ."], "bleu": 0.26332019392396333, "rouge_l": 0.5236051502145923}
{"id": 4404, "predictions": ["\u2581// \u2581 Enabled \u2581returns \u2581true \u2581if \u2581the \u2581 Selection \u2581is \u2581enabled ."], "references": ["\u2581// \u2581 Enabled \u2581returns \u2581true \u2581if \u2581all \u2581of \u2581the \u2581elements \u2581that \u2581the \u2581selection \u2581refers \u2581to \u2581are \u2581enabled ."], "bleu": 0.3241570318627011, "rouge_l": 0.5791139240506329}
{"id": 5595, "predictions": ["\u2581// \u2581Generate ECDSA KeyPair \u2581generates \u2581a \u2581 key \u2581from \u2581the \u2581given \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581Generate ECDSA KeyPair \u2581generates \u2581a \u2581new \u2581 ecdsa \u2581private \u2581and \u2581public \u2581 key"], "bleu": 0.39567167294524297, "rouge_l": 0.5398230088495575}
{"id": 4441, "predictions": ["\u2581// \u2581Each Like \u2581 reduce s \u2581the \u2581 data \u2581to \u2581the \u2581 content \u2581of \u2581the \u2581given \u2581 content ."], "references": ["\u2581// \u2581Each Like \u2581specifies \u2581that \u2581a \u2581given \u2581element \u2581in \u2581a \u2581JSON \u2581 body \u2581can \u2581be \u2581repeated \u2581// \u2581\" min Required \" \u2581times . \u2581 Number \u2581needs \u2581to \u2581be \u2581 1"], "bleu": 0.08447494338893323, "rouge_l": 0.2745980707395499}
{"id": 5270, "predictions": ["\u2581// \u2581 With Polling \u2581sets \u2581the \u2581 width \u2581of \u2581the \u2581 Start Screen"], "references": ["\u2581// \u2581 With MaxHeight \u2581maximum \u2581 screenshot \u2581 height ."], "bleu": 0.19674979811155635, "rouge_l": 0.44525547445255476}
{"id": 5269, "predictions": ["\u2581// \u2581 With MaxWidth \u2581sets \u2581the \u2581 width \u2581of \u2581the \u2581 Start Screen"], "references": ["\u2581// \u2581 With MaxWidth \u2581maximum \u2581 screenshot \u2581 width ."], "bleu": 0.3161487584488943, "rouge_l": 0.5343065693430658}
{"id": 5119, "predictions": ["\u2581// \u2581 With URL \u2581sets \u2581the \u2581 URL \u2581optional \u2581argument \u2581to \u2581 set \u2581the \u2581 headers \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581 With URL \u2581if \u2581 set \u2581the \u2581request \u2581 url \u2581will \u2581be \u2581modified \u2581in \u2581a \u2581way \u2581that ' s \u2581not \u2581// \u2581observable \u2581by \u2581 page . \u2581Must \u2581not \u2581be"], "bleu": 0.15862667762581925, "rouge_l": 0.34746835443037977}
{"id": 5121, "predictions": ["\u2581// \u2581 With PostData \u2581sets \u2581the \u2581 PostData \u2581optional \u2581argument ."], "references": ["\u2581// \u2581 With PostData \u2581if \u2581 set \u2581 this \u2581allows \u2581 postData \u2581to \u2581be \u2581 set . \u2581Must \u2581not \u2581be \u2581 set \u2581in \u2581// \u2581response \u2581to \u2581an \u2581 auth Challenge"], "bleu": 0.06130250142137494, "rouge_l": 0.2701107011070111}
{"id": 5247, "predictions": ["\u2581// \u2581 With Landscape \u2581sets \u2581the \u2581 With \u2581optional \u2581optional \u2581argument \u2581to \u2581 Print To PDF"], "references": ["\u2581// \u2581 With Landscape \u2581paper \u2581orientation . \u2581Defaults \u2581to \u2581false ."], "bleu": 0.2240750868020436, "rouge_l": 0.3831658291457286}
{"id": 5996, "predictions": ["\u2581// \u2581 Frame \u2581returns \u2581the \u2581 set \u2581of \u2581the \u2581frame \u2581at \u2581index ."], "references": ["\u2581// \u2581 Frame \u2581returns \u2581the \u2581frame \u2581number \u2581value \u2581for \u2581a \u2581given \u2581index \u2581into \u2581// \u2581the \u2581frame \u2581 set . \u2581// \u2581If \u2581the \u2581index \u2581is \u2581outside \u2581the \u2581bounds \u2581of \u2581the \u2581frame"], "bleu": 0.13651999589026034, "rouge_l": 0.43416370106761565}
{"id": 6074, "predictions": ["\u2581// \u2581 Debugln \u2581writes \u2581a \u2581 debug \u2581 debug \u2581message ."], "references": ["\u2581// \u2581 Debugln \u2581records \u2581the \u2581log \u2581with \u2581 debug \u2581level"], "bleu": 0.2521193618434983, "rouge_l": 0.4803149606299213}
{"id": 6072, "predictions": ["\u2581// \u2581 Println \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581 emit \u2581the \u2581 debug \u2581level \u2581// \u2581to \u2581the \u2581 Logger ."], "references": ["\u2581// \u2581 Println \u2581records \u2581the \u2581log \u2581with \u2581 trace \u2581level"], "bleu": 0.12436722085116984, "rouge_l": 0.4135593220338983}
{"id": 6044, "predictions": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581deep \u2581copy \u2581of \u2581 s ."], "references": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 File Sequence"], "bleu": 0.4832697830906221, "rouge_l": 0.7272727272727273}
{"id": 5120, "predictions": ["\u2581// \u2581 With Method \u2581sets \u2581the \u2581 fluent \u2581builder \u2581for \u2581the \u2581request ."], "references": ["\u2581// \u2581 With Method \u2581if \u2581 set \u2581 this \u2581allows \u2581the \u2581request \u2581method \u2581to \u2581be \u2581overridden . \u2581Must \u2581// \u2581not \u2581be \u2581 set \u2581in \u2581response \u2581to \u2581an \u2581 auth Challenge"], "bleu": 0.0880554129240232, "rouge_l": 0.3473309608540925}
{"id": 5989, "predictions": ["\u2581// \u2581 New Xor 64 Source \u2581returns \u2581a \u2581new \u2581 Xor 64 Source ."], "references": ["\u2581// \u2581 New Xor 64 Source \u2581returns \u2581a \u2581pointer \u2581to \u2581a \u2581new \u2581 Xor 64 Source \u2581seed ed \u2581with \u2581the \u2581given \u2581// \u2581value ."], "bleu": 0.42891490061214743, "rouge_l": 0.7034596375617792}
{"id": 5378, "predictions": ["\u2581// \u2581 Send KeepAlive \u2581sends \u2581a \u2581 keepalive \u2581 alive \u2581client \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 Send KeepAlive \u2581sends \u2581a \u2581\" whitespace \u2581 keepalive \" \u2581as \u2581described \u2581in \u2581 chapter \u2581 4. 6.1 \u2581of \u2581RFC 6 120 ."], "bleu": 0.2378114898158713, "rouge_l": 0.49233252623083124}
{"id": 4678, "predictions": ["\u2581// \u2581 Login URL \u2581returns \u2581a \u2581 URL \u2581to \u2581the \u2581 login URL ."], "references": ["\u2581// \u2581 Login URL \u2581returns \u2581a \u2581 URL \u2581that , \u2581when \u2581visited , \u2581 prompts \u2581the \u2581user \u2581to \u2581sign \u2581in , \u2581// \u2581then \u2581 redirects \u2581the \u2581user \u2581to \u2581the \u2581"], "bleu": 0.20650620080378043, "rouge_l": 0.4692307692307692}
{"id": 5035, "predictions": ["\u2581// \u2581 With KeyRange \u2581sets \u2581the \u2581 KeyRange s \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581 With KeyRange \u2581 key \u2581range ."], "bleu": 0.2676032275663791, "rouge_l": 0.5736677115987461}
{"id": 5747, "predictions": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 Process ."], "references": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581 x \u2581in \u2581bytes ."], "bleu": 0.6267761507744347, "rouge_l": 0.7942708333333333}
{"id": 4652, "predictions": ["\u2581// \u2581 Keys Only \u2581specifies \u2581the \u2581query \u2581to \u2581be \u2581used \u2581when \u2581the \u2581query \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Keys Only \u2581returns \u2581a \u2581derivative \u2581query \u2581that \u2581yields \u2581only \u2581 keys , \u2581not \u2581 keys \u2581and \u2581// \u2581entities . \u2581It \u2581cannot \u2581be \u2581used \u2581with \u2581projection \u2581queries ."], "bleu": 0.1248062504457896, "rouge_l": 0.3321987746766508}
{"id": 5569, "predictions": ["\u2581// \u2581unlink \u2581the \u2581 data \u2581of \u2581the \u2581 top - level \u2581 ID"], "references": ["\u2581// \u2581unlink GR s \u2581unlink s \u2581two \u2581goroutines"], "bleu": 0.12571192676522522, "rouge_l": 0.19902120717781402}
{"id": 5514, "predictions": ["\u2581// \u2581limit Bit Reader \u2581returns \u2581a \u2581 Reader \u2581that \u2581reads \u2581from \u2581the \u2581given \u2581bit \u2581in \u2581 br ."], "references": ["\u2581// \u2581limit Bit Reader \u2581returns \u2581a \u2581bit Reader \u2581that \u2581reads \u2581from \u2581 br \u2581and \u2581stops \u2581with \u2581io . EOF \u2581after \u2581 n \u2581bits . \u2581// \u2581If \u2581 br \u2581returns \u2581an"], "bleu": 0.2543130225859507, "rouge_l": 0.5183006535947713}
{"id": 4492, "predictions": ["\u2581// \u2581 New Time \u2581returns \u2581a \u2581 Time ."], "references": ["\u2581// \u2581 New Time \u2581creates \u2581a \u2581new \u2581 Time ."], "bleu": 0.4841816879805963, "rouge_l": 0.8341880341880341}
{"id": 5409, "predictions": ["\u2581// \u2581 CC Addrs \u2581adds \u2581the \u2581 mail \u2581to \u2581the \u2581 app ' s \u2581 app ."], "references": ["\u2581// \u2581 CC Addrs \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581the \u2581specified \u2581 CC \u2581addresses ."], "bleu": 0.2195753261491829, "rouge_l": 0.4547996272134204}
{"id": 5174, "predictions": ["\u2581// \u2581 With AcceptLanguage \u2581adds \u2581the \u2581 \u2581optional \u2581optional \u2581argument \u2581to \u2581the \u2581 set \u2581 UserAgent Override \u2581params"], "references": ["\u2581// \u2581 With AcceptLanguage \u2581browser \u2581 lang ug age \u2581to \u2581 emulate ."], "bleu": 0.21314568971111159, "rouge_l": 0.4651416122004358}
{"id": 5666, "predictions": ["\u2581// \u2581 Partial Success \u2581is \u2581a \u2581 functional \u2581option \u2581that \u2581sets \u2581the \u2581 set \u2581of \u2581 checkers ."], "references": ["\u2581// \u2581 Partial Success \u2581is \u2581an \u2581option \u2581that \u2581 toggle s \u2581whether \u2581or \u2581not \u2581to \u2581 write \u2581partial \u2581log \u2581// \u2581entries ."], "bleu": 0.24323309053074293, "rouge_l": 0.4911433172302737}
{"id": 4509, "predictions": ["\u2581// \u2581String From Ptr \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581a \u2581string ."], "references": ["\u2581// \u2581String From Ptr \u2581creates \u2581a \u2581new \u2581String \u2581that \u2581be \u2581null \u2581if \u2581 s \u2581is \u2581nil ."], "bleu": 0.2073681080883528, "rouge_l": 0.4013157894736842}
{"id": 5356, "predictions": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581new \u2581 Reader \u2581with \u2581the \u2581given \u2581 size \u2581and \u2581 size ."], "references": ["\u2581// \u2581 NewReader \u2581open s \u2581a \u2581file \u2581for \u2581reading , \u2581using \u2581the \u2581 data \u2581in \u2581 f \u2581with \u2581the \u2581given \u2581total \u2581 size ."], "bleu": 0.17577821066518887, "rouge_l": 0.5205585725368502}
{"id": 5351, "predictions": ["\u2581// \u2581 Font \u2581returns \u2581the \u2581 font \u2581 font \u2581 name ."], "references": ["\u2581// \u2581 Font \u2581returns \u2581the \u2581 font \u2581with \u2581the \u2581given \u2581 name \u2581associated \u2581with \u2581the \u2581 page ."], "bleu": 0.3882143280545279, "rouge_l": 0.6434599156118143}
{"id": 4526, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581 gossip \u2581 data \u2581to \u2581the \u2581channel"], "references": ["\u2581// \u2581 Send \u2581 relay s \u2581 data \u2581into \u2581the \u2581channel \u2581topology \u2581via \u2581random \u2581 neighbours ."], "bleu": 0.1774088465841645, "rouge_l": 0.5350877192982455}
{"id": 5322, "predictions": ["\u2581// \u2581 With DryRun \u2581sets \u2581the \u2581 DryRun \u2581optional \u2581argument \u2581to \u2581the \u2581 Script Source Params ."], "references": ["\u2581// \u2581 With DryRun \u2581if \u2581true \u2581the \u2581change \u2581will \u2581not \u2581actually \u2581be \u2581applied . \u2581 Dry \u2581run \u2581may \u2581be \u2581// \u2581used \u2581to \u2581 get \u2581result \u2581 description \u2581without \u2581actually \u2581modifying"], "bleu": 0.11129152625886096, "rouge_l": 0.3242524916943521}
{"id": 4586, "predictions": ["\u2581// \u2581 Encode \u2581returns \u2581the \u2581 cumulative - byte \u2581 byte \u2581 slice \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Encode \u2581implements \u2581 Gossip Data ."], "bleu": 0.14025775160081475, "rouge_l": 0.413279132791328}
{"id": 5236, "predictions": ["\u2581// \u2581 With Clip \u2581adds \u2581the \u2581 clipped \u2581to \u2581the \u2581 Capture \u2581 Screenshot \u2581params"], "references": ["\u2581// \u2581 With Clip \u2581capture \u2581the \u2581 screenshot \u2581of \u2581a \u2581given \u2581region \u2581only ."], "bleu": 0.26332019392396333, "rouge_l": 0.416382252559727}
{"id": 5288, "predictions": ["\u2581// \u2581 With SessionID \u2581adds \u2581the \u2581 SessionID \u2581to \u2581the \u2581 SendMessage \u2581 put \u2581 PDU ."], "references": ["\u2581// \u2581 With SessionID \u2581 identifier \u2581of \u2581the \u2581session ."], "bleu": 0.22612164703205964, "rouge_l": 0.5439490445859871}
{"id": 5250, "predictions": ["\u2581// \u2581 With Scale \u2581sets \u2581the \u2581 Scale \u2581optional \u2581argument \u2581to \u2581the \u2581 stdout ."], "references": ["\u2581// \u2581 With Scale \u2581scale \u2581of \u2581the \u2581 webpage \u2581rendering . \u2581Defaults \u2581to \u2581 1."], "bleu": 0.28787878181011267, "rouge_l": 0.5333333333333332}
{"id": 4177, "predictions": ["\u2581// \u2581 WriteHeader \u2581writes \u2581the \u2581response \u2581 code \u2581to \u2581the \u2581response ."], "references": ["\u2581// \u2581 Call \u2581the \u2581parent \u2581 WriteHeader ."], "bleu": 0.1870361278311548, "rouge_l": 0.5187074829931972}
{"id": 4264, "predictions": ["\u2581// \u2581 Str Env Def \u2581 - \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581environment \u2581variable \u2581// \u2581in \u2581the \u2581environment \u2581variable \u2581 env ."], "references": ["\u2581// \u2581 Str Env Def \u2581 get \u2581environment \u2581variable , \u2581or \u2581some \u2581default \u2581def"], "bleu": 0.27748702735605824, "rouge_l": 0.4629981024667932}
{"id": 5841, "predictions": ["\u2581// \u2581 Left F \u2581returns \u2581a \u2581 left - random \u2581 text \u2581for \u2581the \u2581given \u2581 n ."], "references": ["\u2581// \u2581 Left F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Left ."], "bleu": 0.22537412722674857, "rouge_l": 0.5115303983228512}
{"id": 5913, "predictions": ["\u2581// \u2581 C \u2581returns \u2581a \u2581 model \u2581collection \u2581that \u2581 contains \u2581the \u2581 model ."], "references": ["\u2581// \u2581 C \u2581will \u2581return \u2581the \u2581collection \u2581associated \u2581to \u2581the \u2581passed \u2581 model ."], "bleu": 0.23578316044531808, "rouge_l": 0.5551763367463025}
{"id": 4807, "predictions": ["\u2581// \u2581 New Prefix Bytes \u2581returns \u2581a \u2581new \u2581 Prefix Bytes \u2581from \u2581a \u2581 slice \u2581of \u2581bytes ."], "references": ["\u2581// \u2581 Copy \u2581into \u2581 Prefix Bytes"], "bleu": 0.15071676257541072, "rouge_l": 0.4344729344729345}
{"id": 4824, "predictions": ["\u2581// \u2581 Serve \u2581starts \u2581a \u2581new \u2581server \u2581with \u2581the \u2581given \u2581listener \u2581and \u2581handler ."], "references": ["\u2581// \u2581 Serve \u2581accepts \u2581an \u2581incoming \u2581 T EL NET \u2581or \u2581 T EL NET S \u2581client \u2581connection \u2581on \u2581the \u2581 net . Listener \u2581` listener `."], "bleu": 0.07193929947079135, "rouge_l": 0.23071104387291985}
{"id": 5911, "predictions": ["\u2581// \u2581Must Create Store \u2581creates \u2581a \u2581new \u2581store \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Must Create Store \u2581will \u2581 dial \u2581the \u2581passed \u2581database \u2581and \u2581return \u2581a \u2581new \u2581store . \u2581It \u2581will \u2581// \u2581panic \u2581if \u2581the \u2581initial \u2581connection \u2581failed ."], "bleu": 0.15120637238701326, "rouge_l": 0.426905132192846}
{"id": 5857, "predictions": ["\u2581// \u2581 Right F \u2581returns \u2581a \u2581string \u2581that \u2581is \u2581a \u2581 lower - random \u2581 length \u2581of \u2581the \u2581 left - th \u2581 n ."], "references": ["\u2581// \u2581 Right F \u2581is \u2581the \u2581 Filter \u2581version \u2581of \u2581 Right ."], "bleu": 0.17414675099971177, "rouge_l": 0.5022872827081427}
{"id": 5141, "predictions": ["\u2581// \u2581 With HTTP Only \u2581adds \u2581the \u2581 Cookie \u2581to \u2581the \u2581 SetCookie \u2581params"], "references": ["\u2581// \u2581 With HTTP Only \u2581true \u2581if \u2581cookie \u2581is \u2581http - only ."], "bleu": 0.3237722713145643, "rouge_l": 0.3728606356968216}
{"id": 5164, "predictions": ["\u2581// \u2581 With Longitude \u2581adds \u2581the \u2581 width \u2581to \u2581the \u2581 Mock \u2581 Override \u2581params"], "references": ["\u2581// \u2581 With Longitude \u2581mock \u2581longitude ."], "bleu": 0.22894156860669912, "rouge_l": 0.3891547049441786}
{"id": 5163, "predictions": ["\u2581// \u2581 With Latitude \u2581adds \u2581the \u2581 Port \u2581to \u2581the \u2581 get \u2581 Override \u2581params"], "references": ["\u2581// \u2581 With Latitude \u2581mock \u2581latitude ."], "bleu": 0.22894156860669912, "rouge_l": 0.3891547049441786}
{"id": 5407, "predictions": ["\u2581// \u2581 To Addrs \u2581sets \u2581the \u2581 mail \u2581address \u2581to \u2581the \u2581 set \u2581of \u2581addresses ."], "references": ["\u2581// \u2581 To Addrs \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581the \u2581specified \u2581 To \u2581addresses ."], "bleu": 0.24330140957587487, "rouge_l": 0.523854961832061}
{"id": 4802, "predictions": ["\u2581// \u2581 Send To Admin s \u2581sends \u2581a \u2581 description \u2581of \u2581 admin ."], "references": ["\u2581// \u2581 Send To Admin s \u2581sends \u2581an \u2581 email \u2581message \u2581to \u2581the \u2581application ' s \u2581 administrator s ."], "bleu": 0.3356918636745653, "rouge_l": 0.5700934579439253}
{"id": 5834, "predictions": ["\u2581// \u2581Ensure Suffix F \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581suffix \u2581that \u2581the \u2581 name \u2581is \u2581valid ."], "references": ["\u2581// \u2581Ensure Suffix F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581Ensure Suffix ."], "bleu": 0.24405051724608798, "rouge_l": 0.5115303983228512}
{"id": 5828, "predictions": ["\u2581// \u2581 Class ify F \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 class \u2581 code ."], "references": ["\u2581// \u2581 Class ify F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581 Class ify ."], "bleu": 0.34315019159021515, "rouge_l": 0.5625}
{"id": 5459, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581 identifier ."], "references": ["\u2581// \u2581Register \u2581allows \u2581user \u2581to \u2581 add \u2581 his \u2581own \u2581 data \u2581 generators \u2581for \u2581special \u2581cases \u2581// \u2581that \u2581we \u2581could \u2581not \u2581cover \u2581with \u2581the \u2581 generators \u2581that \u2581 fa"], "bleu": 0.014498304768539924, "rouge_l": 0.14296875}
{"id": 5833, "predictions": ["\u2581// \u2581Ensure Prefix F \u2581returns \u2581a \u2581function \u2581that \u2581will \u2581be \u2581used \u2581to \u2581create \u2581a \u2581prefix F \u2581// \u2581function \u2581that \u2581will \u2581be \u2581used \u2581to \u2581create \u2581a \u2581prefix F ."], "references": ["\u2581// \u2581Ensure Prefix F \u2581is \u2581the \u2581 filter \u2581 form \u2581of \u2581Ensure Prefix ."], "bleu": 0.12607162121844206, "rouge_l": 0.25332225913621265}
{"id": 5566, "predictions": ["\u2581// \u2581 Cleanup \u2581removes \u2581the \u2581 set \u2581of \u2581 active \u2581 data \u2581and \u2581 marks \u2581it \u2581to \u2581the \u2581// \u2581 left - in \u2581loop ."], "references": ["\u2581// \u2581 Cleanup \u2581removes \u2581all \u2581 data \u2581associated \u2581with \u2581 this \u2581goroutine . \u2581If \u2581 this \u2581is \u2581not \u2581// \u2581called , \u2581the \u2581 data \u2581may \u2581 persist \u2581for \u2581the \u2581"], "bleu": 0.1612599181320514, "rouge_l": 0.3935483870967741}
{"id": 5645, "predictions": ["\u2581// \u2581 Debug m \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 debug \u2581log \u2581message \u2581// \u2581for \u2581the \u2581message , \u2581and \u2581the \u2581message \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581 Debug m \u2581executes \u2581the \u2581same \u2581function \u2581on \u2581the \u2581default \u2581 Base \u2581instance"], "bleu": 0.13952118378975725, "rouge_l": 0.3546511627906977}
{"id": 5165, "predictions": ["\u2581// \u2581 With Accuracy \u2581adds \u2581the \u2581 Accuracy \u2581to \u2581the \u2581 Mock Override Params"], "references": ["\u2581// \u2581 With Accuracy \u2581mock \u2581accuracy ."], "bleu": 0.24601372576927535, "rouge_l": 0.4053156146179402}
{"id": 6077, "predictions": ["\u2581// \u2581 Info \u2581is \u2581a \u2581 structured \u2581 info \u2581for \u2581 Info ."], "references": ["\u2581// \u2581 Info \u2581records \u2581the \u2581log \u2581with \u2581 info \u2581level"], "bleu": 0.21142141714303078, "rouge_l": 0.44525547445255476}
{"id": 5175, "predictions": ["\u2581// \u2581 With Platform \u2581adds \u2581the \u2581platform \u2581to \u2581the \u2581 UserAgent Override \u2581params"], "references": ["\u2581// \u2581 With Platform \u2581the \u2581platform \u2581 navigator . platform \u2581should \u2581return ."], "bleu": 0.3161487584488943, "rouge_l": 0.5384615384615383}
{"id": 5179, "predictions": ["\u2581// \u2581 With Buttons \u2581adds \u2581the \u2581 LIMIT \u2581clause \u2581to \u2581the \u2581 Dispatch \u2581event \u2581params"], "references": ["\u2581// \u2581 With Buttons \u2581a \u2581number \u2581indicating \u2581which \u2581 buttons \u2581are \u2581 pressed \u2581on \u2581the \u2581mouse \u2581// \u2581when \u2581a \u2581mouse \u2581event \u2581is \u2581triggered . \u2581 Left =1, \u2581 Right =2,"], "bleu": 0.09755472262973743, "rouge_l": 0.2934707903780069}
{"id": 4791, "predictions": ["\u2581// \u2581root \u2581returns \u2581the \u2581root \u2581root \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581root \u2581returns \u2581the \u2581 f ur the st \u2581ancestor \u2581of \u2581a \u2581 key , \u2581which \u2581may \u2581be \u2581itself ."], "bleu": 0.1793082589110372, "rouge_l": 0.49045226130653274}
{"id": 6071, "predictions": ["\u2581// \u2581 Print \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 Print \u2581the \u2581 debug \u2581level ."], "references": ["\u2581// \u2581 Print \u2581records \u2581the \u2581log \u2581with \u2581 trace \u2581level"], "bleu": 0.17609282679116184, "rouge_l": 0.4979591836734694}
{"id": 4619, "predictions": ["\u2581// \u2581 Flush \u2581returns \u2581true \u2581if \u2581the \u2581sender \u2581is \u2581closed ."], "references": ["\u2581// \u2581 Flush \u2581sends \u2581all \u2581pending \u2581 data , \u2581and \u2581returns \u2581true \u2581if \u2581anything \u2581was \u2581sent \u2581since \u2581// \u2581the \u2581previous \u2581 flush . \u2581 For \u2581testing ."], "bleu": 0.07623918892287741, "rouge_l": 0.3913392141138733}
{"id": 4568, "predictions": ["\u2581// \u2581Register \u2581adds \u2581a \u2581new \u2581 gossip \u2581 Gossip \u2581instance \u2581to \u2581the \u2581peer ."], "references": ["\u2581// \u2581Register \u2581inject s \u2581the \u2581mesh . Gossip \u2581and \u2581enables \u2581full - duplex \u2581communication . \u2581// \u2581 Clients \u2581should \u2581 consume \u2581from \u2581 ReadFrom \u2581without \u2581blocking ."], "bleu": 0.058738192052236904, "rouge_l": 0.23071104387291985}
{"id": 6028, "predictions": ["\u2581// \u2581num Ranges \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581 l ."], "references": ["\u2581// \u2581 Num Ranges \u2581returns \u2581the \u2581number \u2581of \u2581 discr e e t \u2581sets \u2581// \u2581of \u2581ranges \u2581that \u2581were \u2581appended ."], "bleu": 0.2554911369818773, "rouge_l": 0.45143385753931536}
{"id": 6075, "predictions": ["\u2581// \u2581 Error \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581 wraps \u2581the \u2581 Logger \u2581interface ."], "references": ["\u2581// \u2581 Error \u2581records \u2581the \u2581log \u2581with \u2581error \u2581level"], "bleu": 0.1513851459876605, "rouge_l": 0.33701657458563533}
{"id": 4607, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581peer ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581peer \u2581 name \u2581and \u2581 nickname ."], "bleu": 0.26238334426718246, "rouge_l": 0.56656346749226}
{"id": 6073, "predictions": ["\u2581// \u2581 Debug \u2581is \u2581a \u2581 debug - level \u2581 debug \u2581log ."], "references": ["\u2581// \u2581 Debug \u2581records \u2581the \u2581log \u2581with \u2581 debug \u2581level"], "bleu": 0.21972813874997157, "rouge_l": 0.44525547445255476}
{"id": 4303, "predictions": ["\u2581// \u2581 Notice f \u2581logs \u2581a \u2581 warning \u2581message ."], "references": ["\u2581// \u2581 Notice f \u2581logs \u2581a \u2581message \u2581using \u2581 NOTICE \u2581as \u2581log \u2581level ."], "bleu": 0.41821174310775155, "rouge_l": 0.6472148541114059}
{"id": 5719, "predictions": ["\u2581// \u2581 Logger \u2581returns \u2581a \u2581new \u2581 Logger ."], "references": ["\u2581// \u2581 Logger \u2581returns \u2581a \u2581new \u2581logger \u2581for \u2581a \u2581particular \u2581subsystem \u2581that \u2581writes \u2581to \u2581the \u2581// \u2581 Backend \u2581 b . \u2581 A \u2581tag \u2581describes \u2581the \u2581subsystem \u2581and \u2581is \u2581included"], "bleu": 0.0659772961693745, "rouge_l": 0.3739463601532567}
{"id": 4300, "predictions": ["\u2581// \u2581 IsEnabled For \u2581returns \u2581true \u2581if \u2581the \u2581logger \u2581is \u2581 tracked ."], "references": ["\u2581// \u2581 IsEnabled For \u2581returns \u2581true \u2581if \u2581the \u2581logger \u2581is \u2581enabled \u2581for \u2581the \u2581given \u2581level ."], "bleu": 0.6148161999365659, "rouge_l": 0.7447280799112097}
{"id": 5689, "predictions": ["\u2581// \u2581 New Stream Encoder \u2581creates \u2581a \u2581new \u2581 Stream Encoder ."], "references": ["\u2581// \u2581 New Stream Encoder \u2581returns \u2581a \u2581new \u2581JSON \u2581stream \u2581encoder \u2581that \u2581writes \u2581to \u2581 w ."], "bleu": 0.2983649262538403, "rouge_l": 0.6019736842105263}
{"id": 5125, "predictions": ["\u2581// \u2581 With URL \u2581adds \u2581the \u2581 URL \u2581to \u2581the \u2581delete \u2581request \u2581params"], "references": ["\u2581// \u2581 With URL \u2581if \u2581specified , \u2581deletes \u2581all \u2581the \u2581cookies \u2581with \u2581the \u2581given \u2581 name \u2581where \u2581// \u2581 domain \u2581and \u2581 path \u2581match \u2581provided \u2581 URL ."], "bleu": 0.10270003548647866, "rouge_l": 0.3203300825206301}
{"id": 5686, "predictions": ["\u2581// \u2581 NewValue Parser \u2581creates \u2581a \u2581new \u2581 Value Parser \u2581from \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 NewValue Parser \u2581creates \u2581a \u2581new \u2581parser \u2581that \u2581expose s \u2581the \u2581value \u2581 v ."], "bleu": 0.4584864575499767, "rouge_l": 0.6414300736067298}
{"id": 5682, "predictions": ["\u2581// \u2581 New Stream Decoder \u2581returns \u2581a \u2581new \u2581 Standard \u2581object ."], "references": ["\u2581// \u2581 New Stream Decoder \u2581returns \u2581a \u2581new \u2581JSON \u2581stream \u2581decoder \u2581that \u2581parses \u2581values \u2581from \u2581 r ."], "bleu": 0.41319630463114665, "rouge_l": 0.6434599156118143}
{"id": 4301, "predictions": ["\u2581// \u2581 Critical f \u2581logs \u2581a \u2581message \u2581at \u2581 critical \u2581level ."], "references": ["\u2581// \u2581 Critical f \u2581logs \u2581a \u2581message \u2581using \u2581 CRITICAL \u2581as \u2581log \u2581level ."], "bleu": 0.5301383806804206, "rouge_l": 0.7587064676616916}
{"id": 5126, "predictions": ["\u2581// \u2581 With Domain \u2581adds \u2581the \u2581 Domain \u2581to \u2581the \u2581delete Cookies \u2581params"], "references": ["\u2581// \u2581 With Domain \u2581if \u2581specified , \u2581deletes \u2581only \u2581cookies \u2581with \u2581the \u2581exact \u2581 domain ."], "bleu": 0.229585358002991, "rouge_l": 0.4062153163152054}
{"id": 5079, "predictions": ["\u2581// \u2581 WithName \u2581adds \u2581the \u2581 name \u2581to \u2581the \u2581 Attributes \u2581 set \u2581params"], "references": ["\u2581// \u2581 WithName \u2581attribute \u2581 name \u2581to \u2581 replace \u2581with \u2581new \u2581attributes \u2581derived \u2581from \u2581 text \u2581// \u2581in \u2581case \u2581 text \u2581parsed \u2581successfully ."], "bleu": 0.12403296472291536, "rouge_l": 0.40197693574958815}
{"id": 4988, "predictions": ["\u2581// \u2581print Usage \u2581prints \u2581the \u2581usage \u2581of \u2581the \u2581 Usage \u2581 format ."], "references": ["\u2581// \u2581print Usage \u2581prints \u2581usage Template \u2581to \u2581 w ."], "bleu": 0.29899503549981366, "rouge_l": 0.6233576642335765}
{"id": 5650, "predictions": ["\u2581// \u2581 Fatal m \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 call \u2581the \u2581 printf - level \u2581message \u2581to \u2581the \u2581message \u2581// \u2581if \u2581the \u2581message \u2581is \u2581not \u2581 fatal ."], "references": ["\u2581// \u2581 Fatal m \u2581executes \u2581the \u2581same \u2581function \u2581on \u2581the \u2581default \u2581 Base \u2581instance"], "bleu": 0.13461801293778908, "rouge_l": 0.34743694060211555}
{"id": 5649, "predictions": ["\u2581// \u2581 Error m \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581error \u2581if \u2581the \u2581message \u2581is \u2581not \u2581// \u2581nil ."], "references": ["\u2581// \u2581 Error m \u2581executes \u2581the \u2581same \u2581function \u2581on \u2581the \u2581default \u2581 Base \u2581instance"], "bleu": 0.18728674627858763, "rouge_l": 0.3556851311953353}
{"id": 6059, "predictions": ["\u2581// \u2581Get Org \u2581returns \u2581 name \u2581of \u2581a \u2581 ip \u2581address"], "references": ["\u2581// \u2581Takes \u2581an \u2581IPv 4 \u2581address \u2581string \u2581and \u2581returns \u2581the \u2581organization \u2581 name \u2581for \u2581that \u2581 IP . \u2581// \u2581 Requires \u2581the \u2581 GeoIP \u2581organization \u2581database ."], "bleu": 0.04326401636205157, "rouge_l": 0.24458700882117085}
{"id": 5062, "predictions": ["\u2581// \u2581 With Image \u2581sets \u2581the \u2581image \u2581to \u2581the \u2581 dock \u2581 Tile \u2581params"], "references": ["\u2581// \u2581 With Image \u2581 png \u2581encoded \u2581image ."], "bleu": 0.2676032275663791, "rouge_l": 0.45252225519287836}
{"id": 6079, "predictions": ["\u2581// \u2581 Warn \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581 append \u2581a \u2581 warning \u2581message ."], "references": ["\u2581// \u2581 Warn \u2581records \u2581the \u2581log \u2581with \u2581 warn \u2581level"], "bleu": 0.1513851459876605, "rouge_l": 0.32105263157894737}
{"id": 5998, "predictions": ["\u2581// \u2581 Frame Range Padded \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 set \u2581of \u2581 text \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Frame Range Padded \u2581returns \u2581the \u2581range \u2581string \u2581that \u2581was \u2581used \u2581// \u2581to \u2581initialize \u2581the \u2581 Frame Set , \u2581with \u2581each \u2581number \u2581padded \u2581out \u2581// \u2581with \u2581 zeros \u2581to"], "bleu": 0.22812263644527714, "rouge_l": 0.38006230529595014}
{"id": 5647, "predictions": ["\u2581// \u2581 Warning m \u2581is \u2581a \u2581 warning \u2581message \u2581that \u2581will \u2581be \u2581called \u2581when \u2581a \u2581message \u2581is \u2581// \u2581 warning ."], "references": ["\u2581// \u2581 Warning m \u2581executes \u2581the \u2581same \u2581function \u2581on \u2581the \u2581default \u2581 Base \u2581instance"], "bleu": 0.16923267918690046, "rouge_l": 0.29640427599611274}
{"id": 5646, "predictions": ["\u2581// \u2581 Info m \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 Info Info \u2581for \u2581the \u2581message \u2581// \u2581and \u2581the \u2581message \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581 Info m \u2581executes \u2581the \u2581same \u2581function \u2581on \u2581the \u2581default \u2581 Base \u2581instance"], "bleu": 0.1504843536148922, "rouge_l": 0.37001733102253026}
{"id": 5059, "predictions": ["\u2581// \u2581 With Query \u2581adds \u2581the \u2581query \u2581to \u2581the \u2581 get \u2581histogram \u2581params"], "references": ["\u2581// \u2581 With Query \u2581requested \u2581 substring \u2581in \u2581 name . \u2581 Only \u2581 histograms \u2581which \u2581have \u2581query \u2581as \u2581// \u2581a \u2581 substring \u2581in \u2581their \u2581 name \u2581are \u2581extracted ."], "bleu": 0.07820642565875682, "rouge_l": 0.26049822064056943}
{"id": 5200, "predictions": ["\u2581// \u2581 With Executor \u2581returns \u2581a \u2581context \u2581with \u2581the \u2581given \u2581executor"], "references": ["\u2581// \u2581 With Executor \u2581sets \u2581the \u2581message \u2581executor \u2581for \u2581the \u2581context ."], "bleu": 0.3255666272944305, "rouge_l": 0.5176803394625177}
{"id": 4853, "predictions": ["\u2581// \u2581Save To \u2581save File \u2581 path \u2581to \u2581the \u2581file"], "references": ["\u2581// \u2581Save To Pdf File \u2581creates \u2581and \u2581saves \u2581a \u2581 pdf \u2581document \u2581to \u2581a \u2581file"], "bleu": 0.16923172176950127, "rouge_l": 0.540506329113924}
{"id": 4947, "predictions": ["\u2581// \u2581is Mode Enable \u2581returns \u2581true \u2581if \u2581the \u2581 overlay \u2581 g \u2581is \u2581 mounted ."], "references": ["\u2581// \u2581is Mode Enable \u2581returns \u2581the \u2581level \u2581has \u2581already \u2581turned \u2581on \u2581the \u2581logging"], "bleu": 0.2928298013714697, "rouge_l": 0.42165898617511516}
{"id": 6082, "predictions": ["\u2581// \u2581 Right \u2581 - \u2581 length \u2581of \u2581string"], "references": ["\u2581// \u2581 Right \u2581right - pad s \u2581the \u2581string \u2581with \u2581pad \u2581up \u2581to \u2581len \u2581 runes"], "bleu": 0.13880978816525083, "rouge_l": 0.38077403245942576}
{"id": 4685, "predictions": ["\u2581// \u2581 Debugf \u2581logs \u2581a \u2581message \u2581with \u2581 format \u2581 format ."], "references": ["\u2581// \u2581 Debugf \u2581formats \u2581its \u2581arguments \u2581according \u2581to \u2581the \u2581 format , \u2581 analog ous \u2581to \u2581fmt . Printf , \u2581// \u2581and \u2581records \u2581the \u2581 text \u2581as \u2581a \u2581log \u2581message"], "bleu": 0.05830441645253641, "rouge_l": 0.30942028985507253}
{"id": 5100, "predictions": ["\u2581// \u2581 With Selector \u2581adds \u2581the \u2581selector \u2581to \u2581the \u2581 Highlight Node Params \u2581instance"], "references": ["\u2581// \u2581 With Selector \u2581selectors \u2581to \u2581 highlight \u2581relevant \u2581nodes ."], "bleu": 0.2676032275663791, "rouge_l": 0.49061662198391426}
{"id": 5127, "predictions": ["\u2581// \u2581 WithPath \u2581adds \u2581the \u2581 path \u2581to \u2581the \u2581 Delete Cookies \u2581params"], "references": ["\u2581// \u2581 WithPath \u2581if \u2581specified , \u2581deletes \u2581only \u2581cookies \u2581with \u2581the \u2581exact \u2581 path ."], "bleu": 0.18839576731405486, "rouge_l": 0.423121387283237}
{"id": 6143, "predictions": ["\u2581// \u2581 Permission Locator \u2581returns \u2581a \u2581 Permission Locator \u2581instance"], "references": ["\u2581// \u2581 Permission Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 5132, "predictions": ["\u2581// \u2581 With ServerName \u2581adds \u2581the \u2581 \u2581cookies \u2581to \u2581the \u2581 Cookies \u2581params"], "references": ["\u2581// \u2581 With Urls \u2581the \u2581list \u2581of \u2581URLs \u2581for \u2581which \u2581applicable \u2581cookies \u2581will \u2581be \u2581fetched ."], "bleu": 0.15620412264187214, "rouge_l": 0.33851276359600446}
{"id": 4629, "predictions": ["\u2581// \u2581 helper \u2581function \u2581to \u2581create \u2581a \u2581 Multi Error \u2581error ."], "references": ["\u2581// \u2581If \u2581err \u2581is \u2581an \u2581 appengine . Multi Error , \u2581return \u2581its \u2581first \u2581element . \u2581Otherwise , \u2581return \u2581err ."], "bleu": 0.0768148398090926, "rouge_l": 0.28882575757575757}
{"id": 4650, "predictions": ["\u2581// \u2581 Distinct \u2581sets \u2581the \u2581query \u2581to \u2581be \u2581used ."], "references": ["\u2581// \u2581 Distinct \u2581returns \u2581a \u2581derivative \u2581query \u2581that \u2581yields \u2581de - duplicated \u2581entities \u2581with \u2581// \u2581respect \u2581to \u2581the \u2581 set \u2581of \u2581 projected \u2581fields . \u2581It \u2581is \u2581only \u2581used \u2581for"], "bleu": 0.038889125811371335, "rouge_l": 0.27518796992481204}
{"id": 4632, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581a \u2581 key \u2581from \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581item \u2581for \u2581the \u2581given \u2581 key . \u2581// \u2581 Err Cache Miss \u2581is \u2581returned \u2581if \u2581the \u2581specified \u2581item \u2581can \u2581not \u2581be \u2581found . \u2581// \u2581The"], "bleu": 0.0664526643775935, "rouge_l": 0.30942028985507253}
{"id": 6128, "predictions": ["\u2581// \u2581 Image Locator \u2581returns \u2581a \u2581 Image Locator \u2581instance ."], "references": ["\u2581// \u2581 Image Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 5711, "predictions": ["\u2581// \u2581 Err \u2581returns \u2581the \u2581error \u2581if \u2581the \u2581stream \u2581is \u2581not \u2581nil ."], "references": ["\u2581// \u2581 Err \u2581returns \u2581the \u2581last \u2581error \u2581returned \u2581by \u2581the \u2581 Decode \u2581method . \u2581// \u2581// \u2581The \u2581method \u2581returns \u2581nil \u2581if \u2581the \u2581stream \u2581reached \u2581its \u2581 natural \u2581end ."], "bleu": 0.13977033982135245, "rouge_l": 0.44558071585098613}
{"id": 5732, "predictions": ["\u2581// \u2581 Level \u2581returns \u2581the \u2581current \u2581level \u2581of \u2581the \u2581log ."], "references": ["\u2581// \u2581 Level \u2581returns \u2581the \u2581current \u2581logging \u2581level \u2581// \u2581// \u2581This \u2581is \u2581part \u2581of \u2581the \u2581 Logger \u2581interface \u2581implementation ."], "bleu": 0.26475503081182616, "rouge_l": 0.6130653266331658}
{"id": 4297, "predictions": ["\u2581// \u2581Set Backend \u2581sets \u2581the \u2581backend \u2581for \u2581the \u2581backend ."], "references": ["\u2581// \u2581Set Backend \u2581overrides \u2581any \u2581previously \u2581defined \u2581backend \u2581for \u2581 this \u2581logger ."], "bleu": 0.2148213130469897, "rouge_l": 0.5097493036211699}
{"id": 5767, "predictions": ["\u2581// \u2581Find Func \u2581returns \u2581a \u2581function \u2581that \u2581will \u2581be \u2581called \u2581by \u2581the \u2581process ."], "references": ["\u2581// \u2581Find Func \u2581returns \u2581the \u2581function \u2581which \u2581 contains \u2581the \u2581 code \u2581at \u2581address \u2581pc , \u2581if \u2581any ."], "bleu": 0.19359055361759023, "rouge_l": 0.41295938104448743}
{"id": 6123, "predictions": ["\u2581// \u2581 Credential Locator \u2581returns \u2581a \u2581 Credential Locator ."], "references": ["\u2581// \u2581 Credential Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2923180730788836, "rouge_l": 0.5947075208913649}
{"id": 6124, "predictions": ["\u2581// \u2581 Datacenter Locator \u2581returns \u2581a \u2581 Datacenter Locator \u2581that \u2581 contains \u2581the \u2581given \u2581 datacenter ."], "references": ["\u2581// \u2581 Datacenter Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.28433291815307693, "rouge_l": 0.6147816349384099}
{"id": 6125, "predictions": ["\u2581// \u2581 Deployment Locator \u2581returns \u2581a \u2581 Deployment Locator ."], "references": ["\u2581// \u2581 Deployment Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2923180730788836, "rouge_l": 0.5947075208913649}
{"id": 6126, "predictions": ["\u2581// \u2581 HealthCheck Locator \u2581returns \u2581a \u2581 HealthCheck Locator \u2581for \u2581a \u2581 HealthCheck Locator ."], "references": ["\u2581// \u2581 HealthCheck Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.25748661016289676, "rouge_l": 0.5065243179122182}
{"id": 6127, "predictions": ["\u2581// \u2581 IdentityProvider Locator \u2581returns \u2581a \u2581 IdentityProvider \u2581that \u2581provides \u2581a \u2581 functional \u2581 IdentityProvider \u2581strategy ."], "references": ["\u2581// \u2581 IdentityProvider Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.22612164703205964, "rouge_l": 0.4781634938409854}
{"id": 5293, "predictions": ["\u2581// \u2581 With Patterns \u2581adds \u2581the \u2581 set \u2581of \u2581 Request \u2581patterns \u2581to \u2581the \u2581 Enable Params \u2581instance ."], "references": ["\u2581// \u2581 With Patterns \u2581if \u2581specified , \u2581only \u2581requests \u2581matching \u2581any \u2581of \u2581these \u2581patterns \u2581// \u2581will \u2581produce \u2581fetch Requested \u2581event \u2581and \u2581will \u2581be \u2581 paused \u2581until \u2581clients \u2581response . \u2581//"], "bleu": 0.11635995231416, "rouge_l": 0.3138263665594856}
{"id": 5796, "predictions": ["\u2581// \u2581 Max \u2581returns \u2581the \u2581maximum \u2581of \u2581the \u2581address \u2581in \u2581the \u2581 Address ."], "references": ["\u2581// \u2581 Max \u2581returns \u2581the \u2581larger \u2581of \u2581a \u2581and \u2581 b ."], "bleu": 0.35831291876413535, "rouge_l": 0.6240409207161125}
{"id": 5797, "predictions": ["\u2581// \u2581 Min \u2581returns \u2581the \u2581minimum \u2581of \u2581the \u2581address \u2581in \u2581the \u2581 Address ."], "references": ["\u2581// \u2581 Min \u2581returns \u2581the \u2581smaller \u2581of \u2581a \u2581and \u2581 b ."], "bleu": 0.35831291876413535, "rouge_l": 0.6240409207161125}
{"id": 5803, "predictions": ["\u2581// \u2581 link \u2581implements \u2581the \u2581 dom \u2581interface ."], "references": ["\u2581// \u2581 link \u2581is \u2581 LINK \u2581from \u2581the \u2581paper s ."], "bleu": 0.24193282889161974, "rouge_l": 0.4911433172302737}
{"id": 6129, "predictions": ["\u2581// \u2581 Input Locator \u2581returns \u2581a \u2581 Input Locator \u2581that \u2581represents \u2581the \u2581 Input Locator ."], "references": ["\u2581// \u2581 Input Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.24797984721910182, "rouge_l": 0.5622119815668203}
{"id": 6130, "predictions": ["\u2581// \u2581 Instance Locator \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581instance Locator \u2581instance ."], "references": ["\u2581// \u2581 Instance Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2891784933232572, "rouge_l": 0.4615384615384617}
{"id": 6131, "predictions": ["\u2581// \u2581 InstanceType Locator \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 InstanceType Locator ."], "references": ["\u2581// \u2581 InstanceType Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.29899503549981366, "rouge_l": 0.5384615384615383}
{"id": 6132, "predictions": ["\u2581// \u2581 IpAddress Locator \u2581returns \u2581a \u2581 IpAddress Locator \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581// \u2581the \u2581 IP Locator \u2581for \u2581the \u2581given \u2581 IP \u2581address ."], "references": ["\u2581// \u2581 IpAddress Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.16436148154531297, "rouge_l": 0.46018440905280805}
{"id": 6138, "predictions": ["\u2581// \u2581 Network Locator \u2581returns \u2581a \u2581 Network Locator \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581network \u2581bindings \u2581associated \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Network Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.17034799410713272, "rouge_l": 0.4700342465753425}
{"id": 6117, "predictions": ["\u2581// \u2581 Backup Locator \u2581returns \u2581a \u2581new \u2581backup Locator \u2581instance"], "references": ["\u2581// \u2581 Backup Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.27203261921057176, "rouge_l": 0.42479108635097496}
{"id": 5279, "predictions": ["\u2581// \u2581 With Group \u2581sets \u2581the \u2581 group \u2581of \u2581the \u2581 router"], "references": ["\u2581// \u2581 With Group \u2581specifies \u2581the \u2581endpoint \u2581 group \u2581to \u2581 deliver \u2581the \u2581report \u2581to ."], "bleu": 0.2605470531172555, "rouge_l": 0.5570776255707762}
{"id": 5302, "predictions": ["\u2581// \u2581 WithHeaders \u2581adds \u2581the \u2581 headers \u2581to \u2581the \u2581 Continue \u2581request \u2581 headers ."], "references": ["\u2581// \u2581 WithHeaders \u2581if \u2581 set , \u2581overrides \u2581the \u2581request \u2581 head rts ."], "bleu": 0.20149416157064579, "rouge_l": 0.5551763367463025}
{"id": 5358, "predictions": ["\u2581// \u2581 Trailer \u2581returns \u2581the \u2581 trailer \u2581value \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Trailer \u2581returns \u2581the \u2581file ' s \u2581 Trailer \u2581value ."], "bleu": 0.4211813371894875, "rouge_l": 0.6666666666666666}
{"id": 6101, "predictions": ["\u2581// \u2581 Schedule Locator \u2581creates \u2581a \u2581new \u2581 Schedule Locator \u2581instance"], "references": ["\u2581// \u2581 Schedule Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2875150462888186, "rouge_l": 0.4925975773889637}
{"id": 5401, "predictions": ["\u2581// \u2581match HTML \u2581matches \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581 Used \u2581by \u2581 Part \u2581 matchers \u2581to \u2581locate \u2581the \u2581HTML \u2581 body . \u2581 Not \u2581 inline d \u2581because \u2581it ' s \u2581used \u2581in \u2581multiple \u2581places ."], "bleu": 0.04257215539541976, "rouge_l": 0.21494009866102887}
{"id": 6102, "predictions": ["\u2581// \u2581 Template Locator \u2581returns \u2581a \u2581 Template Locator \u2581instance"], "references": ["\u2581// \u2581 Template Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 4485, "predictions": ["\u2581// \u2581Must Process \u2581is \u2581like \u2581 Process , \u2581but \u2581panic s \u2581if \u2581the \u2581 Process \u2581fails ."], "references": ["\u2581// \u2581Must Process \u2581is \u2581the \u2581same \u2581as \u2581 Process \u2581but \u2581panic s \u2581if \u2581an \u2581error \u2581occurs"], "bleu": 0.37420316460821246, "rouge_l": 0.6093906093906094}
{"id": 5634, "predictions": ["\u2581// \u2581Set Attr \u2581sets \u2581the \u2581value \u2581for \u2581a \u2581 key \u2581in \u2581the \u2581 Log Adapter ."], "references": ["\u2581// \u2581Set Attr \u2581sets \u2581the \u2581attribute \u2581 key \u2581to \u2581value \u2581for \u2581 this \u2581 Log Adapter \u2581only"], "bleu": 0.3933044184616361, "rouge_l": 0.6630434782608695}
{"id": 6112, "predictions": ["\u2581// \u2581 Account Locator \u2581returns \u2581a \u2581 Account Locator \u2581instance ."], "references": ["\u2581// \u2581 Account Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 4304, "predictions": ["\u2581// \u2581 Infof \u2581logs \u2581a \u2581message \u2581at \u2581 debug \u2581level ."], "references": ["\u2581// \u2581 Infof \u2581logs \u2581a \u2581message \u2581using \u2581 INFO \u2581as \u2581log \u2581level ."], "bleu": 0.4885007847039713, "rouge_l": 0.7388963660834454}
{"id": 6114, "predictions": ["\u2581// \u2581 Alert Locator \u2581returns \u2581a \u2581 Alert Locator \u2581instance"], "references": ["\u2581// \u2581 Alert Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 4302, "predictions": ["\u2581// \u2581 Warningf \u2581logs \u2581a \u2581 warning \u2581message ."], "references": ["\u2581// \u2581 Warningf \u2581logs \u2581a \u2581message \u2581using \u2581 WARNING \u2581as \u2581log \u2581level ."], "bleu": 0.36683522871562824, "rouge_l": 0.6161616161616162}
{"id": 6119, "predictions": ["\u2581// \u2581 Cloud Locator \u2581returns \u2581a \u2581 Cloud Locator \u2581instance ."], "references": ["\u2581// \u2581 Cloud Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 4312, "predictions": ["\u2581// \u2581Set Level \u2581sets \u2581the \u2581 Level \u2581level \u2581for \u2581the \u2581given \u2581module ."], "references": ["\u2581// \u2581Set Level \u2581sets \u2581the \u2581log \u2581level \u2581for \u2581the \u2581given \u2581module ."], "bleu": 0.6997522298221912, "rouge_l": 0.8863936591809777}
{"id": 4496, "predictions": ["\u2581// \u2581Set Valid \u2581sets \u2581the \u2581time . Time \u2581value ."], "references": ["\u2581// \u2581Set Valid \u2581changes \u2581 this \u2581 Time ' s \u2581value \u2581and \u2581sets \u2581it \u2581to \u2581be \u2581non - null ."], "bleu": 0.10264422784916043, "rouge_l": 0.37731958762886597}
{"id": 4497, "predictions": ["\u2581// \u2581 Ptr \u2581returns \u2581a \u2581time . Time \u2581object ."], "references": ["\u2581// \u2581 Ptr \u2581returns \u2581a \u2581pointer \u2581to \u2581 this \u2581 Time ' s \u2581value , \u2581or \u2581a \u2581nil \u2581pointer \u2581if \u2581 this \u2581 Time \u2581is \u2581null ."], "bleu": 0.09064177357347232, "rouge_l": 0.3494271685761047}
{"id": 4627, "predictions": ["\u2581// \u2581 Namespaced Context \u2581returns \u2581the \u2581context \u2581for \u2581the \u2581given \u2581context"], "references": ["\u2581// \u2581 Namespaced Context \u2581 wraps \u2581a \u2581 Context \u2581to \u2581support \u2581namespaces ."], "bleu": 0.26431911302225475, "rouge_l": 0.3283983849259758}
{"id": 4593, "predictions": ["\u2581// \u2581generate KeyPair \u2581generates \u2581a \u2581new \u2581 keypair \u2581using \u2581the \u2581 RSA \u2581private \u2581 key ."], "references": ["\u2581// \u2581Generate KeyPair \u2581is \u2581used \u2581during \u2581encrypted \u2581protocol \u2581 introduction ."], "bleu": 0.09672649511413092, "rouge_l": 0.3065326633165829}
{"id": 4212, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581partition \u2581consumer ."], "references": ["\u2581// \u2581 Close \u2581implements \u2581 Partition Consumer"], "bleu": 0.2984745896009823, "rouge_l": 0.4048672566371681}
{"id": 4192, "predictions": ["\u2581// \u2581Use \u2581adds \u2581a \u2581middleware \u2581to \u2581the \u2581current \u2581environment"], "references": ["\u2581// \u2581Use \u2581pushes \u2581one \u2581or \u2581multiple \u2581 middlewares \u2581to \u2581the \u2581stack \u2581for \u2581 middlewares \u2581// \u2581maintain ed \u2581in \u2581the \u2581 Api \u2581object ."], "bleu": 0.049299894122799504, "rouge_l": 0.23171889838556506}
{"id": 5138, "predictions": ["\u2581// \u2581 With Domain \u2581adds \u2581the \u2581 domain \u2581to \u2581the \u2581 SetCookie \u2581params"], "references": ["\u2581// \u2581 With Domain \u2581cookie \u2581 domain ."], "bleu": 0.30576902884505114, "rouge_l": 0.5970636215334422}
{"id": 4734, "predictions": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581new \u2581 Reader \u2581that \u2581 wraps \u2581the \u2581given \u2581blob Key ."], "references": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581reader \u2581for \u2581a \u2581blob . \u2581It \u2581always \u2581succeeds ; \u2581if \u2581the \u2581blob \u2581does \u2581// \u2581not \u2581exist \u2581then \u2581an \u2581error \u2581will \u2581be \u2581reported \u2581upon \u2581first \u2581read"], "bleu": 0.12998514369010894, "rouge_l": 0.2885135135135135}
{"id": 5792, "predictions": ["\u2581// \u2581 Read Ptr \u2581returns \u2581a \u2581 Address \u2581from \u2581the \u2581 slice \u2581of \u2581 Address ."], "references": ["\u2581// \u2581 Read Ptr \u2581returns \u2581a \u2581pointer \u2581loaded \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.36627141646955347, "rouge_l": 0.5424901185770752}
{"id": 5690, "predictions": ["\u2581// \u2581 New Pretty Encoder \u2581returns \u2581a \u2581new \u2581 Pretty Encoder ."], "references": ["\u2581// \u2581 New Pretty Encoder \u2581returns \u2581a \u2581new \u2581JSON \u2581encoder \u2581that \u2581writes \u2581to \u2581 w ."], "bleu": 0.48813375703361067, "rouge_l": 0.6963470319634703}
{"id": 5669, "predictions": ["\u2581// \u2581 NewDecoder \u2581returns \u2581a \u2581new \u2581 Decoder \u2581that \u2581reads \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581 NewDecoder \u2581returns \u2581a \u2581new \u2581decoder \u2581that \u2581takes \u2581input \u2581from \u2581 r ."], "bleu": 0.36615107686578496, "rouge_l": 0.5909580193756728}
{"id": 5668, "predictions": ["\u2581// \u2581 NewEncoder \u2581returns \u2581a \u2581new \u2581 Encoder ."], "references": ["\u2581// \u2581 NewEncoder \u2581returns \u2581a \u2581new \u2581encoder \u2581that \u2581outputs \u2581to \u2581 w ."], "bleu": 0.4362430640222756, "rouge_l": 0.7041847041847041}
{"id": 5648, "predictions": ["\u2581// \u2581 Err m \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Error \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581message \u2581 m ."], "references": ["\u2581// \u2581 Err m \u2581executes \u2581the \u2581same \u2581function \u2581on \u2581the \u2581default \u2581 Base \u2581instance"], "bleu": 0.13547277341758465, "rouge_l": 0.3546511627906977}
{"id": 5449, "predictions": ["\u2581// \u2581 Printf \u2581implements \u2581the \u2581 bill y . Filesystem \u2581interface \u2581for \u2581 fileName ."], "references": ["\u2581// \u2581 Printf \u2581implements \u2581fmt . Printf \u2581for \u2581markdown"], "bleu": 0.2490328638846773, "rouge_l": 0.5236051502145923}
{"id": 5442, "predictions": ["\u2581// \u2581 New XMLElement Cleaner \u2581returns \u2581a \u2581new \u2581 Graphic Cleaner"], "references": ["\u2581// \u2581 New QP Cleaner \u2581returns \u2581a \u2581 QP Cleaner \u2581for \u2581the \u2581specified \u2581reader ."], "bleu": 0.22696247869490316, "rouge_l": 0.5987730061349694}
{"id": 5403, "predictions": ["\u2581// \u2581Date \u2581sets \u2581the \u2581 Mail \u2581field ' s \u2581value ."], "references": ["\u2581// \u2581Date \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581the \u2581specified \u2581Date \u2581header ."], "bleu": 0.14253628894439752, "rouge_l": 0.37423312883435583}
{"id": 5895, "predictions": ["\u2581// \u2581 Write \u2581returns \u2581true \u2581if \u2581the \u2581operation \u2581is \u2581 write \u2581to \u2581the \u2581 Operation"], "references": ["\u2581// \u2581 Write \u2581will \u2581return \u2581true \u2581when \u2581 this \u2581operation \u2581does \u2581 write \u2581 data ."], "bleu": 0.1884991955924285, "rouge_l": 0.5131440588853837}
{"id": 5374, "predictions": ["\u2581// \u2581 Is Encrypted \u2581returns \u2581true \u2581if \u2581the \u2581client \u2581is \u2581a \u2581 Encrypted Encrypted \u2581object ."], "references": ["\u2581// \u2581 Is Encrypted \u2581will \u2581return \u2581true \u2581if \u2581the \u2581client \u2581is \u2581connected \u2581using \u2581a \u2581 TLS \u2581transport , \u2581either \u2581because \u2581it \u2581used . \u2581// \u2581 TLS \u2581to \u2581 connect \u2581from"], "bleu": 0.19628836362845184, "rouge_l": 0.49459459459459465}
{"id": 5335, "predictions": ["\u2581// \u2581 WithNo Dial \u2581returns \u2581a \u2581context \u2581with \u2581the \u2581given \u2581 Context"], "references": ["\u2581// \u2581 WithNo Dial \u2581constructs \u2581a \u2581new \u2581context \u2581with \u2581an \u2581option \u2581that \u2581in structs \u2581the \u2581network \u2581// \u2581to \u2581not \u2581attempt \u2581a \u2581new \u2581 dial \u2581when \u2581opening \u2581a \u2581stream ."], "bleu": 0.08818616909364083, "rouge_l": 0.40848214285714285}
{"id": 5301, "predictions": ["\u2581// \u2581 With PostData \u2581sets \u2581the \u2581 PostData \u2581optional \u2581argument \u2581to \u2581 set \u2581the \u2581 data \u2581to \u2581the \u2581 Continue \u2581request ."], "references": ["\u2581// \u2581 With PostData \u2581if \u2581 set , \u2581overrides \u2581the \u2581 post \u2581 data \u2581in \u2581the \u2581request ."], "bleu": 0.2371332024655201, "rouge_l": 0.6110183639398998}
{"id": 5299, "predictions": ["\u2581// \u2581 With URL \u2581adds \u2581the \u2581 URL \u2581to \u2581the \u2581 Continue \u2581request ."], "references": ["\u2581// \u2581 With URL \u2581if \u2581 set , \u2581the \u2581request \u2581 url \u2581will \u2581be \u2581modified \u2581in \u2581a \u2581way \u2581that ' s \u2581not \u2581// \u2581observable \u2581by \u2581 page ."], "bleu": 0.10762727764655639, "rouge_l": 0.35935198821796754}
{"id": 5243, "predictions": ["\u2581// \u2581 With Referrer \u2581sets \u2581the \u2581 Referrer \u2581field \u2581to \u2581the \u2581 Navigate \u2581params"], "references": ["\u2581// \u2581 With Referrer \u2581 referrer \u2581 URL ."], "bleu": 0.2676032275663791, "rouge_l": 0.543026706231454}
{"id": 5190, "predictions": ["\u2581// \u2581 With Depth \u2581sets \u2581the \u2581depth \u2581of \u2581the \u2581maximum \u2581depth \u2581to \u2581be \u2581written \u2581to \u2581the \u2581// \u2581specified \u2581depth ."], "references": ["\u2581// \u2581 With Depth \u2581the \u2581maximum \u2581depth \u2581at \u2581which \u2581 Node \u2581 children \u2581should \u2581be \u2581retrieved , \u2581// \u2581defaults \u2581to \u2581 1. \u2581Use \u2581-1 \u2581for \u2581the \u2581entire \u2581subtree \u2581or \u2581provide"], "bleu": 0.1526298687602465, "rouge_l": 0.3860759493670886}
{"id": 5140, "predictions": ["\u2581// \u2581 With Secure \u2581adds \u2581the \u2581 Secure \u2581field \u2581to \u2581the \u2581 SetCookie \u2581params"], "references": ["\u2581// \u2581 With Secure \u2581true \u2581if \u2581cookie \u2581is \u2581 secure ."], "bleu": 0.25748661016289676, "rouge_l": 0.40884718498659517}
{"id": 5945, "predictions": ["\u2581// \u2581 Log \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581will \u2581 set \u2581the \u2581value \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581 Log \u2581adds \u2581a \u2581log \u2581to \u2581the \u2581last \u2581pushed \u2581 span ."], "bleu": 0.14253911354181859, "rouge_l": 0.4528101802757158}
{"id": 5944, "predictions": ["\u2581// \u2581 Tag \u2581adds \u2581a \u2581value \u2581to \u2581the \u2581 trace ."], "references": ["\u2581// \u2581 Tag \u2581adds \u2581a \u2581tag \u2581to \u2581the \u2581last \u2581pushed \u2581 span ."], "bleu": 0.4136817680097794, "rouge_l": 0.7388963660834454}
{"id": 5137, "predictions": ["\u2581// \u2581 With URL \u2581adds \u2581the \u2581 URL \u2581to \u2581the \u2581 SetCookie \u2581params"], "references": ["\u2581// \u2581 With URL \u2581the \u2581request - URI \u2581to \u2581associate \u2581with \u2581the \u2581setting \u2581of \u2581the \u2581cookie . \u2581This \u2581// \u2581value \u2581can \u2581affect \u2581the \u2581default \u2581 domain \u2581and \u2581 path \u2581values"], "bleu": 0.08550035685780794, "rouge_l": 0.3473309608540925}
{"id": 5845, "predictions": ["\u2581// \u2581 Match \u2581returns \u2581true \u2581if \u2581the \u2581pattern \u2581matches \u2581the \u2581pattern \u2581pattern ."], "references": ["\u2581// \u2581 Match \u2581returns \u2581true \u2581if \u2581patterns \u2581matches \u2581the \u2581string"], "bleu": 0.4785543921093738, "rouge_l": 0.7124087591240876}
{"id": 4944, "predictions": ["\u2581// \u2581 Println \u2581writes \u2581a \u2581formatted \u2581error \u2581message \u2581to \u2581the \u2581given \u2581 format ."], "references": ["\u2581// \u2581 Println \u2581outputs \u2581fixed \u2581line \u2581 Print \u2581log"], "bleu": 0.17395797375642236, "rouge_l": 0.3620178041543027}
{"id": 4251, "predictions": ["\u2581// \u2581Remove Key \u2581removes \u2581the \u2581 key \u2581from \u2581the \u2581 keyring ."], "references": ["\u2581// \u2581Remove Key \u2581removes \u2581an \u2581existing \u2581 key \u2581from \u2581 keyring"], "bleu": 0.4250281413416978, "rouge_l": 0.7887931034482759}
{"id": 5997, "predictions": ["\u2581// \u2581 Has Frame \u2581returns \u2581true \u2581if \u2581the \u2581frame \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Has Frame \u2581returns \u2581true \u2581if \u2581the \u2581frame set \u2581 contains \u2581the \u2581given \u2581// \u2581frame \u2581value ."], "bleu": 0.4919214987295227, "rouge_l": 0.6896197327852005}
{"id": 5651, "predictions": ["\u2581// \u2581 Die f \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 get \u2581a \u2581boolean \u2581function \u2581that \u2581will \u2581// \u2581be \u2581called \u2581when \u2581the \u2581 exit \u2581is \u2581 exit ."], "references": ["\u2581// \u2581 Die f \u2581executes \u2581the \u2581same \u2581function \u2581on \u2581the \u2581default \u2581 Base \u2581instance"], "bleu": 0.14059391325479217, "rouge_l": 0.3621713316369805}
{"id": 4703, "predictions": ["\u2581// \u2581 WithContext \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581given \u2581context ."], "references": ["\u2581// \u2581 WithContext \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581parent \u2581context \u2581// \u2581and \u2581associate s \u2581it \u2581with \u2581an \u2581in - flight \u2581HTTP \u2581request . \u2581// \u2581This \u2581function \u2581is \u2581 c heap"], "bleu": 0.09648654798662835, "rouge_l": 0.3536231884057971}
{"id": 4111, "predictions": ["\u2581// \u2581Register \u2581a \u2581new \u2581 Shutdown able ."], "references": ["\u2581// \u2581Register \u2581registers \u2581an \u2581item \u2581as \u2581shutdown able"], "bleu": 0.22679164443904004, "rouge_l": 0.375}
{"id": 4288, "predictions": ["\u2581// \u2581Must Parse \u2581is \u2581like \u2581Parse \u2581but \u2581panic s \u2581if \u2581the \u2581string \u2581is \u2581not \u2581 set ."], "references": ["\u2581// \u2581Must Parse \u2581must \u2581parse \u2581string \u2581to \u2581time \u2581or \u2581will \u2581panic"], "bleu": 0.1487964117124549, "rouge_l": 0.2971985383678441}
{"id": 5787, "predictions": ["\u2581// \u2581 Read Int 8 \u2581returns \u2581the \u2581 8 - th \u2581value \u2581of \u2581 this \u2581process ."], "references": ["\u2581// \u2581 Read Int 8 \u2581returns \u2581an \u2581int 8 \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.3255118829464252, "rouge_l": 0.49504057709648325}
{"id": 5788, "predictions": ["\u2581// \u2581 Read Int 16 \u2581returns \u2581the \u2581 16 - bit \u2581integer \u2581value \u2581of \u2581the \u2581process ."], "references": ["\u2581// \u2581 Read Int 16 \u2581returns \u2581an \u2581int 16 \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.33830120499300753, "rouge_l": 0.5500450856627592}
{"id": 5789, "predictions": ["\u2581// \u2581 Read Int 32 \u2581returns \u2581the \u2581 32 - bit \u2581integer \u2581value \u2581of \u2581 this \u2581process ."], "references": ["\u2581// \u2581 Read Int 32 \u2581returns \u2581an \u2581int 32 \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.32648802673499633, "rouge_l": 0.48412698412698413}
{"id": 5790, "predictions": ["\u2581// \u2581 Read Int 64 \u2581returns \u2581the \u2581 64 - th \u2581value \u2581of \u2581 this \u2581process ."], "references": ["\u2581// \u2581 Read Int 64 \u2581returns \u2581an \u2581int 64 \u2581read \u2581from \u2581address \u2581a \u2581of \u2581the \u2581infer i or ."], "bleu": 0.3255118829464252, "rouge_l": 0.49504057709648325}
{"id": 5971, "predictions": ["\u2581// \u2581Set N line \u2581sets \u2581the \u2581 N line \u2581 length \u2581of \u2581the \u2581 Exception ."], "references": ["\u2581// \u2581Set N line \u2581sets \u2581the \u2581number \u2581of \u2581line \u2581where \u2581 secret \u2581should \u2581be \u2581found ."], "bleu": 0.3807134866446316, "rouge_l": 0.5625}
{"id": 5836, "predictions": ["\u2581// \u2581 I if \u2581returns \u2581true \u2581if \u2581the \u2581 length \u2581 contains \u2581the \u2581 length \u2581of \u2581the \u2581 key \u2581// \u2581 exists ."], "references": ["\u2581// \u2581 I if \u2581is \u2581short \u2581for \u2581immediate \u2581if . \u2581If \u2581condition \u2581is \u2581true \u2581return \u2581 truthy \u2581else \u2581false y ."], "bleu": 0.17059573701616804, "rouge_l": 0.3208114199849737}
{"id": 4464, "predictions": ["\u2581// \u2581 Expect sTo Receive \u2581sets \u2581the \u2581 description \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581 Expect sTo Receive \u2581specifies \u2581the \u2581 content \u2581it \u2581is \u2581expecting \u2581to \u2581be \u2581// \u2581given \u2581from \u2581the \u2581 Provider . \u2581The \u2581function \u2581must \u2581be \u2581 able \u2581to \u2581handle \u2581"], "bleu": 0.11252479775872545, "rouge_l": 0.3907473309608541}
{"id": 4596, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 tcp \u2581server ."], "references": ["\u2581// \u2581 Send \u2581implements \u2581 TCP Sender \u2581by \u2581encoding \u2581the \u2581msg ."], "bleu": 0.2224246939793677, "rouge_l": 0.4166666666666667}
{"id": 5300, "predictions": ["\u2581// \u2581 With Method \u2581sets \u2581the \u2581 fluent \u2581builder \u2581for \u2581 this \u2581method"], "references": ["\u2581// \u2581 With Method \u2581if \u2581 set , \u2581the \u2581request \u2581method \u2581is \u2581overridden ."], "bleu": 0.276857765580105, "rouge_l": 0.4414957780458384}
{"id": 5139, "predictions": ["\u2581// \u2581 WithPath \u2581adds \u2581the \u2581 path \u2581to \u2581the \u2581 SetCookie \u2581params"], "references": ["\u2581// \u2581 WithPath \u2581cookie \u2581 path ."], "bleu": 0.22997519112894443, "rouge_l": 0.552536231884058}
{"id": 4518, "predictions": ["\u2581// \u2581Set Valid \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581float 64 \u2581value ."], "references": ["\u2581// \u2581Set Valid \u2581changes \u2581 this \u2581 Float ' s \u2581value \u2581and \u2581also \u2581sets \u2581it \u2581to \u2581be \u2581non - null ."], "bleu": 0.10506598593950904, "rouge_l": 0.28882575757575757}
{"id": 4515, "predictions": ["\u2581// \u2581Set Valid \u2581sets \u2581the \u2581 n ' s \u2581value ."], "references": ["\u2581// \u2581Set Valid \u2581changes \u2581 this \u2581 Int ' s \u2581value \u2581and \u2581also \u2581sets \u2581it \u2581to \u2581be \u2581non - null ."], "bleu": 0.13505340532159335, "rouge_l": 0.47332686711930166}
{"id": 5938, "predictions": ["\u2581// \u2581 E \u2581returns \u2581a \u2581 Error \u2581that \u2581indicates \u2581whether \u2581the \u2581given \u2581reason \u2581is \u2581// \u2581 canceled ."], "references": ["\u2581// \u2581 E \u2581is \u2581a \u2581short - hand \u2581to \u2581construct \u2581an \u2581error ."], "bleu": 0.1457684614972261, "rouge_l": 0.3322440087145969}
{"id": 5405, "predictions": ["\u2581// \u2581 Subject \u2581sets \u2581the \u2581 subject \u2581to \u2581use \u2581for \u2581 this \u2581 Mail Builder ."], "references": ["\u2581// \u2581 Subject \u2581returns \u2581a \u2581copy \u2581of \u2581 Mail Builder \u2581with \u2581the \u2581specified \u2581 Subject \u2581header ."], "bleu": 0.21265831085468576, "rouge_l": 0.4219367588932806}
{"id": 5415, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581 Mail Builder \u2581is \u2581equal ."], "references": ["\u2581// \u2581 Equals \u2581uses \u2581the \u2581reflect \u2581package \u2581to \u2581 test \u2581two \u2581 Mail Builder \u2581structs \u2581for \u2581equality , \u2581primarily \u2581for \u2581unit \u2581// \u2581tests ."], "bleu": 0.11747411072151927, "rouge_l": 0.41042893187552554}
{"id": 4975, "predictions": ["\u2581// \u2581 Subscribe Raw \u2581adds \u2581a \u2581callback \u2581to \u2581the \u2581 Client ."], "references": ["\u2581// \u2581 Subscribe Raw \u2581to \u2581an \u2581 sse \u2581endpoint"], "bleu": 0.31455601883230705, "rouge_l": 0.5865384615384615}
{"id": 5995, "predictions": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581index \u2581of \u2581the \u2581 set \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Index \u2581returns \u2581the \u2581index \u2581position \u2581of \u2581the \u2581frame \u2581value \u2581// \u2581within \u2581the \u2581frame \u2581 set . \u2581// \u2581If \u2581the \u2581given \u2581frame \u2581does \u2581not \u2581exist , \u2581then \u2581return \u2581-1"], "bleu": 0.22507929362188892, "rouge_l": 0.4707395498392284}
{"id": 5839, "predictions": ["\u2581// \u2581 Is Upper \u2581returns \u2581true \u2581if \u2581the \u2581string \u2581is \u2581a \u2581 Upper \u2581 type ."], "references": ["\u2581// \u2581 Is Upper \u2581returns \u2581true \u2581if \u2581 s \u2581 contains \u2581all \u2581upper \u2581case \u2581chr act ers ."], "bleu": 0.3957483702441513, "rouge_l": 0.5820610687022901}
{"id": 4503, "predictions": ["\u2581// \u2581Set Valid \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581bool \u2581value ."], "references": ["\u2581// \u2581Set Valid \u2581changes \u2581 this \u2581 Bool ' s \u2581value \u2581and \u2581also \u2581sets \u2581it \u2581to \u2581be \u2581non - null ."], "bleu": 0.09824151407024719, "rouge_l": 0.29582929194956353}
{"id": 4508, "predictions": ["\u2581// \u2581Set Valid \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581string ."], "references": ["\u2581// \u2581Set Valid \u2581changes \u2581 this \u2581String ' s \u2581value \u2581and \u2581also \u2581sets \u2581it \u2581to \u2581be \u2581non - null ."], "bleu": 0.10759110393675154, "rouge_l": 0.3065326633165829}
{"id": 5838, "predictions": ["\u2581// \u2581 Is Lower \u2581returns \u2581true \u2581if \u2581the \u2581string \u2581is \u2581a \u2581valid \u2581 lower \u2581character ."], "references": ["\u2581// \u2581 Is Lower \u2581returns \u2581true \u2581if \u2581 s \u2581comp r ised \u2581of \u2581all \u2581 lower \u2581case \u2581characters ."], "bleu": 0.384391447836209, "rouge_l": 0.5627306273062731}
{"id": 4290, "predictions": ["\u2581// \u2581 Between \u2581returns \u2581a \u2581 truth - time \u2581value \u2581for \u2581the \u2581given \u2581time ."], "references": ["\u2581// \u2581 Between \u2581check \u2581now \u2581between \u2581the \u2581begin , \u2581end \u2581time \u2581or \u2581not"], "bleu": 0.16943571815930883, "rouge_l": 0.36180308422301305}
{"id": 4870, "predictions": ["\u2581// \u2581Set Font \u2581sets \u2581the \u2581 font \u2581 font ."], "references": ["\u2581// \u2581Set Font \u2581sets \u2581the \u2581 font \u2581used \u2581to \u2581draw \u2581 text ."], "bleu": 0.5316002588195211, "rouge_l": 0.7646239554317549}
{"id": 4465, "predictions": ["\u2581// \u2581 WithMetadata \u2581 wraps \u2581the \u2581 Map \u2581to \u2581 decode \u2581the \u2581message \u2581into \u2581the \u2581 map ."], "references": ["\u2581// \u2581 WithMetadata \u2581specifies \u2581message - implementation \u2581specific \u2581metadata \u2581// \u2581to \u2581go \u2581with \u2581the \u2581 content"], "bleu": 0.1619557012853241, "rouge_l": 0.35672514619883033}
{"id": 5189, "predictions": ["\u2581// \u2581 Domain \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 set \u2581of \u2581 this \u2581 set ."], "references": ["\u2581// \u2581 Domain \u2581returns \u2581the \u2581 Chrome \u2581 DevTools \u2581 Protocol \u2581 domain \u2581of \u2581the \u2581event \u2581or \u2581command ."], "bleu": 0.3527290360272302, "rouge_l": 0.5500450856627592}
{"id": 5807, "predictions": ["\u2581// \u2581 Readable \u2581returns \u2581true \u2581if \u2581the \u2581 Address \u2581is \u2581a \u2581 slice \u2581of \u2581 Address ."], "references": ["\u2581// \u2581 Readable \u2581reports \u2581whether \u2581the \u2581address \u2581a \u2581is \u2581readable ."], "bleu": 0.1598921499894403, "rouge_l": 0.4457978075517661}
{"id": 4426, "predictions": ["\u2581// \u2581Will Respond With \u2581 redirects \u2581the \u2581response \u2581to \u2581 year"], "references": ["\u2581// \u2581Will Respond With \u2581specifies \u2581the \u2581details \u2581of \u2581the \u2581HTTP \u2581response \u2581that \u2581will \u2581be \u2581used \u2581to \u2581// \u2581 confirm \u2581that \u2581the \u2581 Provider \u2581must \u2581satisfy . \u2581 Mandatory ."], "bleu": 0.0733981312307506, "rouge_l": 0.3699772554965883}
{"id": 5934, "predictions": ["\u2581// \u2581 E \u2581writes \u2581a \u2581formatted \u2581error \u2581message \u2581to \u2581the \u2581given \u2581 format ."], "references": ["\u2581// \u2581 E \u2581is \u2581a \u2581short - hand \u2581function \u2581to \u2581construct \u2581a \u2581safe \u2581error ."], "bleu": 0.18216011913874539, "rouge_l": 0.41123595505617977}
{"id": 4746, "predictions": ["\u2581// \u2581imports \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581file \u2581is \u2581a \u2581 path ."], "references": ["\u2581// \u2581imports \u2581returns \u2581true \u2581if \u2581 f \u2581imports \u2581 path ."], "bleu": 0.44534504264163466, "rouge_l": 0.6768377253814147}
{"id": 5746, "predictions": ["\u2581// \u2581 Addr \u2581returns \u2581the \u2581 Address \u2581of \u2581the \u2581 Process ."], "references": ["\u2581// \u2581 Addr \u2581returns \u2581the \u2581starting \u2581address \u2581of \u2581 x ."], "bleu": 0.4211813371894875, "rouge_l": 0.7011494252873562}
{"id": 5688, "predictions": ["\u2581// \u2581 NewEncoder \u2581returns \u2581a \u2581new \u2581 \u2581obj \u2581object ."], "references": ["\u2581// \u2581 NewEncoder \u2581returns \u2581a \u2581new \u2581JSON \u2581encoder \u2581that \u2581writes \u2581to \u2581 w ."], "bleu": 0.4073398045860038, "rouge_l": 0.6472148541114059}
{"id": 5681, "predictions": ["\u2581// \u2581 NewDecoder \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581object ."], "references": ["\u2581// \u2581 NewDecoder \u2581returns \u2581a \u2581new \u2581JSON \u2581decoder \u2581that \u2581parses \u2581values \u2581from \u2581 r ."], "bleu": 0.37062817570654066, "rouge_l": 0.5239263803680982}
{"id": 4985, "predictions": ["\u2581// \u2581Convert Dir \u2581returns \u2581a \u2581 path \u2581to \u2581the \u2581directory \u2581that \u2581is \u2581 empty ."], "references": ["\u2581// \u2581same Dir \u2581returns \u2581 filename \u2581 path \u2581 p lac ing \u2581it \u2581in \u2581the \u2581same \u2581 dir \u2581as \u2581existing \u2581file ."], "bleu": 0.09887796630675881, "rouge_l": 0.41816623821765214}
{"id": 4728, "predictions": ["\u2581// \u2581is Err Field Mismatch \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 Err Field Mismatch ."], "references": ["\u2581// \u2581is Err Field Mismatch \u2581returns \u2581whether \u2581err \u2581is \u2581a \u2581datastore . Err Field Mismatch . \u2581// \u2581// \u2581The \u2581 blobstore \u2581stores \u2581blob \u2581metadata \u2581in \u2581the \u2581datastore . \u2581When \u2581loading"], "bleu": 0.24068504924255002, "rouge_l": 0.48637873754152827}
{"id": 4329, "predictions": ["\u2581// \u2581Execute \u2581executes \u2581the \u2581 ExitStatus \u2581with \u2581the \u2581specified \u2581arguments ."], "references": ["\u2581// \u2581Execute \u2581should \u2581be \u2581called \u2581once \u2581the \u2581default \u2581flags \u2581have \u2581been \u2581// \u2581initialized \u2581by \u2581flag . Parse . \u2581It \u2581finds \u2581the \u2581correct \u2581 subcommand \u2581and \u2581// \u2581executes \u2581it , \u2581and"], "bleu": 0.034054998956109174, "rouge_l": 0.18007380073800738}
{"id": 5385, "predictions": ["\u2581// \u2581 Inline \u2581 inline s \u2581the \u2581message"], "references": ["\u2581// \u2581 Inline \u2581includes \u2581a \u2581file \u2581as \u2581an \u2581 inline \u2581attachment ."], "bleu": 0.21528690865392716, "rouge_l": 0.4825949367088607}
{"id": 5384, "predictions": ["\u2581// \u2581 Attach \u2581 attaches \u2581a \u2581message \u2581to \u2581the \u2581 Message ."], "references": ["\u2581// \u2581 Attach \u2581 attaches \u2581a \u2581file ."], "bleu": 0.48633831680799433, "rouge_l": 0.7261904761904763}
{"id": 4801, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 Context ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581an \u2581 email \u2581message ."], "bleu": 0.3565506208559251, "rouge_l": 0.6110183639398998}
{"id": 5821, "predictions": ["\u2581// \u2581 Capitalize \u2581 capitalize s \u2581the \u2581first \u2581character \u2581in \u2581the \u2581string ."], "references": ["\u2581// \u2581 Capitalize \u2581 uppercase s \u2581the \u2581first \u2581char \u2581of \u2581 s \u2581and \u2581lowercase s \u2581the \u2581rest ."], "bleu": 0.2559249578032457, "rouge_l": 0.5642343268242548}
{"id": 4305, "predictions": ["\u2581// \u2581Set Formatter \u2581sets \u2581the \u2581 Formatter \u2581for \u2581the \u2581current \u2581logger ."], "references": ["\u2581// \u2581Set Formatter \u2581sets \u2581the \u2581default \u2581formatter \u2581for \u2581all \u2581new \u2581 backends . \u2581 A \u2581backend \u2581will \u2581// \u2581fetch \u2581 this \u2581value \u2581once \u2581it \u2581is \u2581needed \u2581to \u2581 format \u2581a"], "bleu": 0.09397825921862017, "rouge_l": 0.30942028985507253}
{"id": 4116, "predictions": ["\u2581// \u2581Register Optional \u2581registers \u2581a \u2581function \u2581that \u2581will \u2581register \u2581a \u2581function ."], "references": ["\u2581// \u2581Register Optional \u2581register \u2581a \u2581new \u2581migration \u2581that \u2581will \u2581not \u2581run \u2581automatically \u2581// \u2581when \u2581calling \u2581the \u2581 Run \u2581func ition ."], "bleu": 0.1271189933503357, "rouge_l": 0.4043560606060606}
{"id": 4115, "predictions": ["\u2581// \u2581Register \u2581registers \u2581a \u2581function \u2581to \u2581register \u2581a \u2581 Migrate Func ."], "references": ["\u2581// \u2581Register \u2581register \u2581a \u2581new \u2581migration \u2581for \u2581later \u2581execution \u2581with \u2581the \u2581 Run \u2581// \u2581function s ."], "bleu": 0.1274874561526366, "rouge_l": 0.4013157894736842}
{"id": 7062, "predictions": ["\u2581// \u2581 g g . g _ format _ format _ format"], "references": ["\u2581// \u2581 Receive s \u2581 format \u2581string \u2581in \u2581 g string \u2581 format \u2581and \u2581 map \u2581of \u2581arguments \u2581and \u2581 translate s \u2581// \u2581them \u2581to \u2581 format \u2581and \u2581arguments \u2581compatible"], "bleu": 0.04173340115650776, "rouge_l": 0.22101449275362317}
{"id": 7308, "predictions": ["\u2581// \u2581 router \u2581returns \u2581a \u2581 router \u2581that \u2581matches \u2581the \u2581 routes \u2581and \u2581 routes ."], "references": ["\u2581// Router \u2581sets \u2581up \u2581the \u2581 Router \u2581 - \u2581extracted \u2581for \u2581 test ability"], "bleu": 0.1203921753741131, "rouge_l": 0.26991150442477874}
{"id": 7604, "predictions": ["\u2581// \u2581 New Stellar Message \u2581returns \u2581a \u2581new \u2581 Stellar Message ."], "references": ["\u2581// \u2581 New Stellar Message \u2581creates \u2581a \u2581new \u2581 Stellar Message ."], "bleu": 0.7611606003349892, "rouge_l": 0.9166666666666665}
{"id": 7180, "predictions": ["\u2581// \u2581Generate Code \u2581generates \u2581a \u2581 code \u2581for \u2581the \u2581given \u2581package \u2581 code ."], "references": ["\u2581// \u2581Generate Code \u2581takes \u2581the \u2581objects \u2581loaded \u2581into \u2581memory \u2581in \u2581 Load API s \u2581// \u2581and \u2581writes \u2581them \u2581out \u2581as \u2581go \u2581 code ."], "bleu": 0.12403296472291536, "rouge_l": 0.3517298187808896}
{"id": 7734, "predictions": ["\u2581// \u2581 Store Plugin Results \u2581stores \u2581the \u2581 data \u2581from \u2581the \u2581database \u2581to \u2581 remove \u2581the \u2581 data \u2581// \u2581from \u2581the \u2581database ."], "references": ["\u2581// \u2581 Store Plugin Results \u2581stores \u2581a \u2581plugin ' s \u2581results \u2581in \u2581the \u2581database \u2581by \u2581updating \u2581// \u2581the \u2581 placeholder \u2581created \u2581by \u2581the \u2581 call \u2581to \u2581 Store FileInfo"], "bleu": 0.2578386499828967, "rouge_l": 0.4144533662754787}
{"id": 7450, "predictions": ["\u2581// \u2581 New Operation Body \u2581creates \u2581a \u2581new \u2581 Operation Body \u2581object ."], "references": ["\u2581// \u2581 New Operation Body \u2581creates \u2581a \u2581new \u2581 Operation Body ."], "bleu": 0.855526185871245, "rouge_l": 0.9669749009247028}
{"id": 8067, "predictions": ["\u2581// \u2581 PutUint 64 \u2581adds \u2581a \u2581 64- bit \u2581value \u2581to \u2581the \u2581 Tuple Builder ."], "references": ["\u2581// \u2581 PutUint 64 \u2581sets \u2581a \u2581 64- bit \u2581unsigned \u2581integer \u2581for \u2581the \u2581given \u2581field \u2581 name . \u2581The \u2581field \u2581 name \u2581must \u2581be \u2581a \u2581 Uint 64 Field ."], "bleu": 0.16065265784021088, "rouge_l": 0.45337837837837835}
{"id": 8068, "predictions": ["\u2581// \u2581 Put Int 64 \u2581adds \u2581a \u2581 64 - bit \u2581value \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 Put Int 64 \u2581sets \u2581a \u2581 64- bit \u2581signed \u2581integer \u2581for \u2581the \u2581given \u2581field \u2581 name . \u2581The \u2581field \u2581 name \u2581must \u2581be \u2581a \u2581 Int 64 Field"], "bleu": 0.14619203591550758, "rouge_l": 0.41216216216216217}
{"id": 6745, "predictions": ["\u2581// \u2581convert String \u2581converts \u2581a \u2581string \u2581to \u2581a \u2581string \u2581 slice \u2581of \u2581 src ."], "references": ["\u2581// \u2581dst \u2581must \u2581be \u2581a \u2581pointer \u2581 type"], "bleu": 0.09782375748961449, "rouge_l": 0.2760180995475113}
{"id": 7872, "predictions": ["\u2581// \u2581 NewValue Store \u2581creates \u2581a \u2581new \u2581 Value Store \u2581that \u2581 wraps \u2581the \u2581given \u2581 path \u2581and \u2581// \u2581returns \u2581a \u2581 Value Store \u2581that \u2581 wraps \u2581the \u2581 data"], "references": ["\u2581// \u2581 NewValue Store \u2581creates \u2581a \u2581 Value Store \u2581connection \u2581via \u2581 grpc \u2581to \u2581the \u2581given \u2581// \u2581address ."], "bleu": 0.28381756881487175, "rouge_l": 0.5529986052998604}
{"id": 6299, "predictions": ["\u2581// \u2581 Analyze Endpoint \u2581 examine s \u2581the \u2581 path \u2581of \u2581the \u2581named \u2581endpoint \u2581and \u2581returns \u2581the \u2581// \u2581 empty \u2581 path \u2581if \u2581the \u2581endpoint \u2581is \u2581not \u2581found"], "references": ["\u2581// \u2581 Analyze Endpoint \u2581creates \u2581an \u2581API \u2581descriptor \u2581from \u2581go a \u2581 v 2 \u2581generated \u2581swagger \u2581definition"], "bleu": 0.12607162121844206, "rouge_l": 0.23246951219512196}
{"id": 8078, "predictions": ["\u2581// \u2581 Put String \u2581adds \u2581a \u2581string \u2581to \u2581the \u2581 Tuple Builder ."], "references": ["\u2581// \u2581 Put String \u2581writes \u2581a \u2581string \u2581value \u2581for \u2581the \u2581given \u2581field . \u2581The \u2581field \u2581 type \u2581must \u2581be \u2581a \u2581` StringField ` \u2581otherwise \u2581an \u2581error \u2581will \u2581be \u2581returned ."], "bleu": 0.0904056203553595, "rouge_l": 0.3907473309608541}
{"id": 6269, "predictions": ["\u2581// \u2581Create Config \u2581creates \u2581a \u2581new \u2581 email \u2581and \u2581 refresh \u2581 token"], "references": ["\u2581// \u2581Create Config \u2581creates \u2581a \u2581configuration \u2581file \u2581and \u2581saves \u2581it \u2581to \u2581the \u2581file \u2581at \u2581the \u2581given \u2581 path ."], "bleu": 0.23697654997898265, "rouge_l": 0.4231912784935579}
{"id": 6288, "predictions": ["\u2581// \u2581 Finalize \u2581evaluates \u2581 data \u2581from \u2581the \u2581given \u2581 map \u2581and \u2581returns \u2581a \u2581 Multi Handler ."], "references": ["\u2581// \u2581 Finalize TypeNames \u2581goes \u2581through \u2581all \u2581the \u2581types \u2581generated \u2581by \u2581the \u2581analyzer \u2581and \u2581generate \u2581unique \u2581names ."], "bleu": 0.1457684614972261, "rouge_l": 0.3333333333333333}
{"id": 8096, "predictions": ["\u2581// \u2581 Put Float 32 Array \u2581adds \u2581a \u2581float 32 \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 Put Float 32 Array \u2581writes \u2581a \u2581float \u2581array \u2581for \u2581the \u2581given \u2581field . \u2581The \u2581field \u2581 type \u2581must \u2581be \u2581a \u2581' Float 32 Array Field ', \u2581otherwise \u2581as"], "bleu": 0.15175911890005556, "rouge_l": 0.42657342657342656}
{"id": 8097, "predictions": ["\u2581// \u2581 Put Float 64 Array \u2581adds \u2581an \u2581int 64 \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 Put Float 64 Array \u2581writes \u2581a \u2581float \u2581array \u2581for \u2581the \u2581given \u2581field . \u2581The \u2581field \u2581 type \u2581must \u2581be \u2581a \u2581' Float 64 Array Field ', \u2581otherwise \u2581as"], "bleu": 0.13951560524734033, "rouge_l": 0.3412587412587413}
{"id": 6682, "predictions": ["\u2581// \u2581 List \u2581returns \u2581a \u2581 slice \u2581of \u2581 items \u2581that \u2581are \u2581stored \u2581in \u2581the \u2581 data ."], "references": ["\u2581// \u2581 List \u2581implements \u2581storage \u2581interface ."], "bleu": 0.13400825781778894, "rouge_l": 0.34757834757834755}
{"id": 6223, "predictions": ["\u2581// \u2581 From CommandLine \u2581parses \u2581a \u2581command \u2581from \u2581the \u2581command \u2581line \u2581and \u2581returns \u2581// \u2581a \u2581new \u2581 api ."], "references": ["\u2581// \u2581 From CommandLine \u2581builds \u2581an \u2581API \u2581client \u2581from \u2581the \u2581command \u2581line ."], "bleu": 0.30826276460621843, "rouge_l": 0.5821845174973489}
{"id": 6274, "predictions": ["\u2581// \u2581 Analyze Type \u2581 - \u2581 Analyze \u2581a \u2581 data ."], "references": ["\u2581// \u2581 Analyze Type \u2581analyze s \u2581a \u2581 type \u2581given \u2581its \u2581JSON \u2581definition ."], "bleu": 0.291099242890319, "rouge_l": 0.5310945273631842}
{"id": 8108, "predictions": ["\u2581// \u2581 Put Tuple \u2581adds \u2581a \u2581tuple \u2581to \u2581the \u2581 Tuple Tuple \u2581to \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Put Tuple \u2581writes \u2581a \u2581tuple \u2581into \u2581the \u2581given \u2581field . \u2581The \u2581field \u2581 type \u2581must \u2581be \u2581a \u2581 Tuple Field , \u2581otherwise \u2581an \u2581error \u2581will \u2581be \u2581returned ."], "bleu": 0.13837608319337638, "rouge_l": 0.392282958199357}
{"id": 7024, "predictions": ["\u2581// \u2581 Copy \u2581 data \u2581from \u2581a \u2581 bunch \u2581of \u2581 shards ."], "references": ["\u2581// \u2581large Data Paged Query \u2581builds \u2581a \u2581job \u2581and \u2581inserts \u2581it \u2581into \u2581the \u2581job \u2581queue \u2581allowing \u2581the \u2581 flex ibility \u2581to \u2581 set \u2581the \u2581custom \u2581 Allow Large Results \u2581flag"], "bleu": 0.03399796555407591, "rouge_l": 0.17366548042704624}
{"id": 7523, "predictions": ["\u2581// \u2581 New OperationResult Splitter \u2581returns \u2581a \u2581new \u2581 OperationResult"], "references": ["\u2581// \u2581 New OperationResult Tr \u2581creates \u2581a \u2581new \u2581 OperationResult Tr ."], "bleu": 0.48119129303084457, "rouge_l": 0.7155425219941348}
{"id": 6247, "predictions": ["\u2581// \u2581Parse Route \u2581parses \u2581the \u2581 route \u2581 name \u2581and \u2581 routes \u2581into \u2581a \u2581 path ."], "references": ["\u2581// \u2581Parse Route \u2581parses \u2581a \u2581API \u25811.5 \u2581 route \u2581and \u2581returns \u2581corresponding \u2581 path \u2581patterns ."], "bleu": 0.27694132751313416, "rouge_l": 0.6093906093906094}
{"id": 7194, "predictions": ["\u2581// \u2581uint il Row 1 \u2581converts \u2581the \u2581given \u2581row \u2581to \u2581the \u2581 slice \u2581of \u2581// \u2581uint 64 \u2581values ."], "references": ["\u2581/** \u2581* \u2581reduced Duplex Row 1 \u2581 Performs \u2581a \u2581reduced \u2581 duplex \u2581operation \u2581for \u2581a \u2581single \u2581row , \u2581from \u2581the \u2581highest \u2581to \u2581* \u2581the \u2581lowest \u2581index , \u2581using \u2581the \u2581reduced"], "bleu": 0.060704389034984936, "rouge_l": 0.1961414790996785}
{"id": 7261, "predictions": ["\u2581// \u2581 MarshalBinary \u2581encodes \u2581a \u2581 Transaction \u2581to \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 MarshalBinary \u2581is \u2581used \u2581to \u2581serialize \u2581an \u2581 Op \u2581into \u2581a \u2581binary \u2581 form . \u2581This \u2581// \u2581is \u2581used \u2581to \u2581cache \u2581the \u2581 ByteCode"], "bleu": 0.09429104755395644, "rouge_l": 0.3416}
{"id": 7262, "predictions": ["\u2581// \u2581 UnmarshalBinary \u2581unmarshal s \u2581a \u2581raw \u2581 byte \u2581 slice \u2581into \u2581a \u2581 op ."], "references": ["\u2581// \u2581 UnmarshalBinary \u2581is \u2581used \u2581to \u2581deserialize \u2581an \u2581 Op \u2581from \u2581binary \u2581 form ."], "bleu": 0.16467029855845897, "rouge_l": 0.3893617021276596}
{"id": 7968, "predictions": ["\u2581// \u2581 Insert 3 \u2581inserts \u2581a \u2581 set \u2581of \u2581 s \u2581into \u2581the \u2581 set \u2581of \u2581 active \u2581 data . \u2581// \u2581// \u2581If \u2581the \u2581 write \u2581is \u2581not"], "references": ["\u2581// \u2581 Insert 3 \u2581is \u2581more \u2581verbose \u2581version \u2581of \u2581 Insert 2"], "bleu": 0.13821098063724324, "rouge_l": 0.31633535004321517}
{"id": 6227, "predictions": ["\u2581// \u2581guess Type \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581a \u2581 view ."], "references": ["\u2581// \u2581guess Type \u2581tries \u2581to \u2581guess \u2581the \u2581resource \u2581 name \u2581based \u2581on \u2581the \u2581definition \u2581and \u2581service . \u2581// \u2581This \u2581 info \u2581is \u2581not \u2581stored \u2581in \u2581the \u2581swagger . \u2581 T"], "bleu": 0.07504695770013659, "rouge_l": 0.32972972972972975}
{"id": 6940, "predictions": ["\u2581// \u2581 Network \u2581 Network \u2581 get \u2581 Network"], "references": ["\u2581// \u2581 Network Adapters \u2581lists \u2581current \u2581network \u2581 adapters \u2581attached \u2581to \u2581the \u2581virtual \u2581// \u2581machine ."], "bleu": 0.12761099135587417, "rouge_l": 0.3046192259675406}
{"id": 7031, "predictions": ["\u2581// \u2581 supervisor \u2581 collect s \u2581all \u2581 subscriptions \u2581and \u2581 releases \u2581them ."], "references": ["\u2581// \u2581the \u2581 supervisor \u2581 feeds \u2581jobs \u2581to \u2581workers \u2581and \u2581keeps \u2581track \u2581of \u2581them ."], "bleu": 0.1957437868038899, "rouge_l": 0.4797752808988765}
{"id": 7115, "predictions": ["\u2581// \u2581 Domain Redirect Handler \u2581returns \u2581a \u2581redirect \u2581handler \u2581for \u2581a \u2581 domain ."], "references": ["\u2581// \u2581 Domain Redirect Handler \u2581respond s \u2581with \u2581redirect \u2581 url \u2581based \u2581on \u2581// \u2581 domain \u2581and \u2581https Port , \u2581other vis e \u2581it \u2581executes \u2581the \u2581handler ."], "bleu": 0.14506105785517293, "rouge_l": 0.40427098674521367}
{"id": 7751, "predictions": ["\u2581// \u2581 Receive \u2581waits \u2581for \u2581the \u2581response \u2581 CC \u2581and \u2581 ack s \u2581it \u2581into \u2581the \u2581 data \u2581// \u2581 CC \u2581 table ."], "references": ["\u2581// \u2581 Receive \u2581waits \u2581to \u2581receive \u2581the \u2581next \u2581incoming \u2581messages \u2581from \u2581the \u2581 CC S \u2581connection ."], "bleu": 0.18556675930109115, "rouge_l": 0.45297029702970304}
{"id": 6388, "predictions": ["\u2581// \u2581Parse XML \u2581parses \u2581the \u2581 contents \u2581of \u2581a \u2581 xml \u2581XML \u2581file \u2581into \u2581a \u2581 Node ."], "references": ["\u2581// Parse XML \u2581creates \u2581an \u2581XML Tree \u2581structure \u2581from \u2581an \u2581io . Reader ."], "bleu": 0.08562365224473284, "rouge_l": 0.2557651991614256}
{"id": 6846, "predictions": ["\u2581// \u2581 Run Bot On Webhook \u2581runs \u2581the \u2581given \u2581bot \u2581and \u2581 description ."], "references": ["\u2581// \u2581 Run Bot On Webhook \u2581runs \u2581the \u2581given \u2581 Bot Func \u2581with \u2581a \u2581webhook ."], "bleu": 0.5682309743796633, "rouge_l": 0.724622030237581}
{"id": 7946, "predictions": ["\u2581// \u2581Remove \u2581removes \u2581the \u2581 key \u2581from \u2581the \u2581 table ."], "references": ["\u2581// \u2581Remove \u2581an \u2581item \u2581from \u2581the \u2581node table"], "bleu": 0.1972940627795883, "rouge_l": 0.5417406749555951}
{"id": 7389, "predictions": ["\u2581// \u2581 Helper \u2581function \u2581to \u2581find \u2581the \u2581 price \u2581of \u2581a \u2581 price ."], "references": ["\u2581// \u2581continue d Fraction \u2581calculates \u2581and \u2581returns \u2581the \u2581best \u2581 rational \u2581 approximation \u2581of \u2581the \u2581given \u2581real \u2581number ."], "bleu": 0.08459279306372158, "rouge_l": 0.2949709864603482}
{"id": 7292, "predictions": ["\u2581// \u2581Generate \u2581returns \u2581a \u2581random \u2581 token \u2581string ."], "references": ["\u2581// \u2581Generate \u2581a \u2581new \u2581password \u2581based \u2581on \u2581given \u2581policy"], "bleu": 0.19960198807747329, "rouge_l": 0.3333333333333333}
{"id": 6902, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581object ."], "references": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581one \u2581record . \u2581// \u2581The \u2581obj \u2581must \u2581be \u2581struct , \u2581and \u2581must \u2581have \u2581field \u2581that \u2581specified \u2581\" pk \" \u2581struct \u2581tag . \u2581// \u2581 Update"], "bleu": 0.09125134314003602, "rouge_l": 0.26521739130434785}
{"id": 6824, "predictions": ["\u2581// \u2581go push \u2581is \u2581called \u2581when \u2581the \u2581 push \u2581state \u2581is \u2581 canceled ."], "references": ["\u2581// non - blocking \u2581 push"], "bleu": 0.1250076305588977, "rouge_l": 0.323321554770318}
{"id": 8037, "predictions": ["\u2581// \u2581 Token Generator \u2581is \u2581a \u2581wrapper \u2581around \u2581the \u2581 authenticator . Token Generator"], "references": ["\u2581// \u2581 Token Generator \u2581returns \u2581a \u2581handler \u2581that \u2581will \u2581read \u2581a \u2581 username \u2581and \u2581password \u2581from \u2581// \u2581a \u2581request \u2581 form , \u2581create \u2581a \u2581jwt \u2581 token \u2581if \u2581they \u2581are"], "bleu": 0.08534042403197699, "rouge_l": 0.2559440559440559}
{"id": 8066, "predictions": ["\u2581// \u2581 Put Int 32 \u2581adds \u2581a \u2581 32 - bit \u2581value \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 Put Int 32 \u2581sets \u2581a \u2581 32 - bit \u2581signed \u2581value \u2581for \u2581the \u2581given \u2581field \u2581 name . \u2581The \u2581field \u2581 name \u2581must \u2581be \u2581a \u2581 Int 32"], "bleu": 0.21973787788575674, "rouge_l": 0.5358108108108108}
{"id": 7733, "predictions": ["\u2581// \u2581 Store FileInfo \u2581returns \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581 data \u2581 set ."], "references": ["\u2581// \u2581 Store FileInfo \u2581inserts \u2581initial \u2581sample \u2581 info \u2581into \u2581database \u2581creating \u2581a \u2581 placeholder \u2581for \u2581it"], "bleu": 0.22619596441394543, "rouge_l": 0.3616600790513834}
{"id": 6502, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581stream \u2581and \u2581 flush es \u2581the \u2581stream \u2581to \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Run \u2581the \u2581stream . \u2581// \u2581// \u2581This \u2581calls \u2581the \u2581underlying \u2581 grpc . ClientStream s \u2581methods \u2581to \u2581send \u2581and \u2581receive \u2581messages \u2581over \u2581the \u2581stream . \u2581// \u2581 Run"], "bleu": 0.10546278676099005, "rouge_l": 0.41216216216216217}
{"id": 6903, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581item \u2581with \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581records \u2581from \u2581database \u2581 table . \u2581// \u2581The \u2581obj \u2581must \u2581be \u2581pointer \u2581to \u2581struct \u2581or \u2581 slice \u2581of \u2581struct , \u2581and \u2581must \u2581have \u2581field \u2581that"], "bleu": 0.09125134314003602, "rouge_l": 0.30942028985507253}
{"id": 7701, "predictions": ["\u2581// \u2581 Token \u2581is \u2581a \u2581 helper \u2581to \u2581 get \u2581the \u2581JWT \u2581 token \u2581from \u2581the \u2581 auth 2 \u2581 controller ."], "references": ["\u2581// Token \u2581returns \u2581a \u2581new \u2581access \u2581 token"], "bleu": 0.0866852806734874, "rouge_l": 0.3639618138424821}
{"id": 6685, "predictions": ["\u2581// \u2581 SetValue \u2581implements \u2581 Database ."], "references": ["\u2581// \u2581 SetValue \u2581implements \u2581storage \u2581interface ."], "bleu": 0.5410822690539396, "rouge_l": 0.7142857142857143}
{"id": 8049, "predictions": ["\u2581// \u2581lex Text \u2581scan s \u2581the \u2581 text \u2581and \u2581 consume s \u2581the \u2581 token \u2581and \u2581returns \u2581the \u2581// \u2581 comment ."], "references": ["\u2581// \u2581 Main \u2581 lexer \u2581loop"], "bleu": 0.07832899330004497, "rouge_l": 0.23890339425587467}
{"id": 8065, "predictions": ["\u2581// \u2581 PutUint 32 \u2581adds \u2581a \u2581 32 - bit \u2581value \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 PutUint 32 \u2581sets \u2581a \u2581 32 - bit \u2581unsigned \u2581value \u2581for \u2581the \u2581given \u2581field \u2581 name . \u2581The \u2581field \u2581 name \u2581must \u2581be \u2581a \u2581 Uint 32 Field"], "bleu": 0.17986472826920394, "rouge_l": 0.5030927835051546}
{"id": 6908, "predictions": ["\u2581// \u2581 select To Slice \u2581converts \u2581a \u2581 slice \u2581of \u2581rows \u2581into \u2581a \u2581 slice \u2581of \u2581 SQL \u2581 type ."], "references": ["\u2581// \u2581 select To Slice \u2581returns \u2581a \u2581 slice \u2581value \u2581fetched \u2581from \u2581rows ."], "bleu": 0.28479942163807365, "rouge_l": 0.5928085519922255}
{"id": 6328, "predictions": ["\u2581// \u2581do \u2581a \u2581 helper \u2581function \u2581to \u2581 dump \u2581the \u2581request \u2581and \u2581returns \u2581the \u2581response ."], "references": ["\u2581// \u2581do Imp \u2581actually \u2581performs \u2581the \u2581HTTP \u2581request \u2581logging \u2581according \u2581to \u2581the \u2581various \u2581settings ."], "bleu": 0.12936981168384865, "rouge_l": 0.3893617021276596}
{"id": 8018, "predictions": ["\u2581// \u2581 Static \u2581returns \u2581a \u2581handler \u2581that \u2581will \u2581 add \u2581a \u2581static \u2581 path \u2581to \u2581the \u2581given \u2581directory . \u2581// \u2581If \u2581the \u2581directory \u2581is \u2581not \u2581found , \u2581it \u2581will \u2581be"], "references": ["\u2581// \u2581 Static \u2581returns \u2581a \u2581middleware \u2581handler \u2581that \u2581serves \u2581static \u2581files \u2581in \u2581the \u2581given \u2581directory ."], "bleu": 0.24693891261487588, "rouge_l": 0.5520361990950226}
{"id": 6770, "predictions": ["\u2581// \u2581parse Sequence Of \u2581parses \u2581a \u2581sequence \u2581of \u2581sequence \u2581and \u2581returns \u2581a \u2581 type \u2581that \u2581represents \u2581// \u2581the \u2581sequence \u2581of \u2581the \u2581sequence ."], "references": ["\u2581// \u2581parse Sequence Of \u2581is \u2581used \u2581for \u2581 SEQUENCE \u2581 OF \u2581and \u2581 SET \u2581 OF \u2581values . \u2581It \u2581tries \u2581to \u2581parse \u2581// \u2581a \u2581number \u2581of \u2581 ASN . 1"], "bleu": 0.1323058773227008, "rouge_l": 0.33172205438066465}
{"id": 6315, "predictions": ["\u2581// \u2581 Sign \u2581performs \u2581the \u2581 authenticator . Sign \u2581and \u2581 refresh \u2581the \u2581 Request ."], "references": ["\u2581// \u2581 Self - Service \u2581 authenticator \u2581first \u2581creates \u2581a \u2581global \u2581session \u2581with \u2581the \u2581 core \u2581then \u2581creates \u2581a \u2581local \u2581// \u2581session \u2581with \u2581self - service ."], "bleu": 0.07735938145385705, "rouge_l": 0.3112244897959183}
{"id": 7945, "predictions": ["\u2581// \u2581 Update \u2581updates \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Update \u2581inserts \u2581or \u2581replaces \u2581an \u2581existing \u2581entry"], "bleu": 0.1777835117834348, "rouge_l": 0.2819722650231125}
{"id": 6229, "predictions": ["\u2581// \u2581extract CmdLine Params \u2581extracts \u2581the \u2581 set \u2581of \u2581parameters \u2581for \u2581a \u2581given \u2581 type ."], "references": ["\u2581// \u2581extract CmdLine Params \u2581generates \u2581flags \u2581for \u2581the \u2581command \u2581line"], "bleu": 0.23287896954139942, "rouge_l": 0.4013157894736842}
{"id": 6258, "predictions": ["\u2581// \u2581params Initializer \u2581for \u2581 validating \u2581the \u2581 name \u2581of \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Produces \u2581 code \u2581that \u2581initializes \u2581a \u2581API Params \u2581struct \u2581with \u2581the \u2581values \u2581of \u2581parameters \u2581for \u2581the \u2581given \u2581// \u2581action \u2581and \u2581location ."], "bleu": 0.0802805154665135, "rouge_l": 0.34463276836158196}
{"id": 6722, "predictions": ["\u2581// \u2581Parse AuthHeader s \u2581parses \u2581a \u2581request \u2581 token \u2581into \u2581a \u2581 Auth Creds ."], "references": ["\u2581// \u2581Parse AuthHeader s \u2581parses \u2581authentication \u2581 headers \u2581from \u2581HTTP \u2581request \u2581// \u2581it \u2581currently \u2581detect s \u2581 Bearer \u2581and \u2581Basic \u2581 auth \u2581types"], "bleu": 0.19561585799992692, "rouge_l": 0.4056525353283458}
{"id": 7235, "predictions": ["\u2581// \u2581 Load \u2581returns \u2581the \u2581 GCE \u2581 type \u2581from \u2581the \u2581 key , \u2581if \u2581any ."], "references": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581 ByteCode \u2581for \u2581template \u2581specified \u2581by \u2581` key `, \u2581which , \u2581for \u2581 this \u2581// \u2581 ByteCode Loader , \u2581is \u2581the \u2581 path \u2581to"], "bleu": 0.09157089506761593, "rouge_l": 0.3242524916943521}
{"id": 6228, "predictions": ["\u2581// \u2581 Cart \u2581 patches \u2581the \u2581 model ' s \u2581 type \u2581of \u2581 type \u2581 entity \u2581and \u2581 r ."], "references": ["\u2581// \u2581 addType \u2581 conditionally \u2581adds \u2581a \u2581new \u2581 type , \u2581trying \u2581its \u2581best \u2581to \u2581avoid \u2581 type \u2581// \u2581collision s . \u2581This \u2581is \u2581the \u2581down side \u2581of \u2581swagger \u2581"], "bleu": 0.08546105235148822, "rouge_l": 0.3040498442367601}
{"id": 6933, "predictions": ["\u2581// \u2581 SQL Type \u2581is \u2581a \u2581convenience \u2581method \u2581to \u2581 set \u2581the \u2581 type \u2581of \u2581a \u2581 table \u2581 type"], "references": ["\u2581// \u2581 SQL Type \u2581returns \u2581the \u2581 SQL \u2581 type \u2581of \u2581the \u2581 v \u2581for \u2581 PostgreSQL ."], "bleu": 0.2615311775021803, "rouge_l": 0.5313588850174217}
{"id": 8017, "predictions": ["\u2581// \u2581 WriteTo \u2581implements \u2581io . Writer To \u2581interface . \u2581It \u2581serialize s \u2581the \u2581tuple \u2581// \u2581header \u2581into \u2581the \u2581wire \u2581 format ."], "references": ["\u2581// \u2581 WriteTo \u2581writes \u2581the \u2581 Tuple Header \u2581into \u2581the \u2581given \u2581writer ."], "bleu": 0.12962472880491877, "rouge_l": 0.40939597315436244}
{"id": 6178, "predictions": ["\u2581// \u2581 Show Help \u2581prints \u2581the \u2581help \u2581for \u2581the \u2581given \u2581command ."], "references": ["\u2581// \u2581 Show Help \u2581displays \u2581help \u2581for \u2581the \u2581given \u2581command \u2581and \u2581flags ."], "bleu": 0.5449453495579752, "rouge_l": 0.7942708333333333}
{"id": 7767, "predictions": ["\u2581// \u2581Generate \u2581generates \u2581a \u2581new \u2581 set \u2581of \u2581 code \u2581and \u2581 description \u2581of \u2581the \u2581 type ."], "references": ["\u2581// Generate \u2581 - \u2581used \u2581to \u2581generate \u2581a \u2581struct \u2581for \u2581a \u2581given \u2581job"], "bleu": 0.08097785064266204, "rouge_l": 0.13289760348583876}
{"id": 7129, "predictions": ["\u2581// \u2581 New Handler \u2581returns \u2581a \u2581new \u2581http . Handler \u2581that \u2581will \u2581 add \u2581the \u2581 headers \u2581// \u2581to \u2581the \u2581given \u2581handler ."], "references": ["\u2581// \u2581 New Handler \u2581returns \u2581a \u2581handler \u2581that \u2581logs \u2581HTTP \u2581requests . \u2581// \u2581It \u2581logs \u2581information \u2581about \u2581remote \u2581address , \u2581 X - Forwarded - For \u2581or \u2581 X -"], "bleu": 0.20628103644276874, "rouge_l": 0.33172205438066465}
{"id": 6329, "predictions": ["\u2581// \u2581 getClient Without Timeout \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 dump ."], "references": ["\u2581// \u2581 getClient Without Timeout \u2581returns \u2581a \u2581modified \u2581client \u2581that \u2581doesn ' t \u2581have \u2581the \u2581 ResponseHeader Timeout \u2581field \u2581 set \u2581// \u2581in \u2581its \u2581 Transport ."], "bleu": 0.2105191272845111, "rouge_l": 0.4614220877458397}
{"id": 7133, "predictions": ["\u2581// \u2581 ServeHTTP \u2581implements \u2581the \u2581http . Handler \u2581interface ."], "references": ["\u2581// \u2581 ServeHTTP \u2581implements \u2581http . Handler \u2581interface ."], "bleu": 0.7016879391277371, "rouge_l": 0.9564459930313588}
{"id": 7987, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 N \u2581iterators ."], "references": ["\u2581// \u2581 Close \u2581shut s \u2581down \u2581the \u2581 nitro \u2581instance"], "bleu": 0.2795424278922846, "rouge_l": 0.5213675213675214}
{"id": 6820, "predictions": ["\u2581// \u2581 connect \u2581is \u2581the \u2581 constructor \u2581for \u2581 Client ."], "references": ["\u2581// connect \u2581using \u2581the \u2581provided \u2581transport \u2581// and \u2581block \u2581until \u2581connection \u2581is \u2581ready"], "bleu": 0.11941964005964323, "rouge_l": 0.24629878869448185}
{"id": 7700, "predictions": ["\u2581// \u2581 Refresh \u2581 refresh es \u2581the \u2581 token \u2581from \u2581the \u2581 auth 2 \u2581 controller ."], "references": ["\u2581// Refresh \u2581returns \u2581a \u2581new \u2581access \u2581 token"], "bleu": 0.10802314890908067, "rouge_l": 0.34221598877980364}
{"id": 7026, "predictions": ["\u2581// \u2581 page Over Job \u2581 searches \u2581the \u2581 page \u2581of \u2581the \u2581job \u2581to \u2581the \u2581 page ."], "references": ["\u2581// \u2581 page Over Job \u2581 loads \u2581results \u2581for \u2581the \u2581given \u2581job \u2581reference \u2581and \u2581if \u2581the \u2581total \u2581results \u2581has \u2581not \u2581been \u2581hit \u2581continue s \u2581to \u2581load \u2581recursively"], "bleu": 0.20933771979967436, "rouge_l": 0.3860759493670886}
{"id": 6744, "predictions": ["\u2581// \u2581 Events \u2581takes \u2581a \u2581reflect . Value \u2581and \u2581returns \u2581the \u2581 map \u2581of \u2581the \u2581 keys \u2581// \u2581that \u2581are \u2581 empty ."], "references": ["\u2581// \u2581recursively \u2581 set \u2581the \u2581 Source \u2581attribute \u2581of \u2581the \u2581 Options"], "bleu": 0.12586347848916266, "rouge_l": 0.4240317775571003}
{"id": 6869, "predictions": ["\u2581// \u2581 Type \u2581returns \u2581a \u2581 type \u2581of \u2581 type \u2581 type \u2581of \u2581a \u2581message ."], "references": ["\u2581// \u2581 Type \u2581determines \u2581the \u2581 type \u2581of \u2581the \u2581message . \u2581// \u2581Note \u2581that , \u2581for \u2581all \u2581these \u2581types , \u2581messages \u2581can \u2581still \u2581be \u2581 replies \u2581or \u2581// \u2581 forwarded"], "bleu": 0.10114899596870505, "rouge_l": 0.32972972972972975}
{"id": 6845, "predictions": ["\u2581// \u2581 Run Bot \u2581runs \u2581the \u2581 Bot Bot \u2581with \u2581the \u2581specified \u2581 name \u2581and \u2581 description ."], "references": ["\u2581// \u2581 Run Bot \u2581runs \u2581a \u2581bot . \u2581// \u2581It \u2581will \u2581block \u2581until \u2581either \u2581something \u2581very \u2581bad \u2581happens \u2581or \u2581closing \u2581is \u2581closed ."], "bleu": 0.19634787887383165, "rouge_l": 0.28638497652582157}
{"id": 6512, "predictions": ["\u2581// \u2581 Handle Log \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581writes \u2581the \u2581log \u2581log \u2581to \u2581the \u2581// \u2581log ."], "references": ["\u2581// \u2581 Handle Log \u2581implements \u2581log . Handler ."], "bleu": 0.2061477352156375, "rouge_l": 0.458072590738423}
{"id": 8093, "predictions": ["\u2581// \u2581 Nonce \u2581sets \u2581the \u2581 key \u2581of \u2581the \u2581request \u2581and \u2581returns \u2581the \u2581 Handler ."], "references": ["\u2581// \u2581 Nonce \u2581returns \u2581a \u2581handler \u2581that \u2581will \u2581check \u2581each \u2581request \u2581for \u2581the \u2581// \u2581existence \u2581of \u2581a \u2581nonce . \u2581If \u2581a \u2581nonce \u2581 exists , \u2581it \u2581will \u2581be \u2581 checked"], "bleu": 0.07685661670485117, "rouge_l": 0.24729729729729732}
{"id": 7105, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Templates \u2581from \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Templates \u2581and \u2581parses \u2581// \u2581provided \u2581files \u2581and \u2581strings ."], "bleu": 0.33445241784390434, "rouge_l": 0.5642343268242548}
{"id": 7185, "predictions": ["\u2581// \u2581 APICall \u2581method \u2581returns \u2581a \u2581 call Summary \u2581for \u2581 observing \u2581the \u2581 status \u2581of \u2581the \u2581// \u2581given \u2581 type ."], "references": ["\u2581// \u2581 APICall \u2581is \u2581the \u2581generic \u2581REST \u2581API \u2581calling \u2581method \u2581which \u2581performs \u2581all \u2581REST \u2581API \u2581// \u2581calls \u2581for \u2581 this \u2581library . \u2581Each \u2581 auto - generated \u2581REST \u2581API \u2581method"], "bleu": 0.09916203941069143, "rouge_l": 0.2619631901840491}
{"id": 7007, "predictions": ["\u2581// \u2581 Fail \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sets \u2581the \u2581error \u2581 body \u2581and \u2581 write \u2581it \u2581to \u2581the \u2581// \u2581context ."], "references": ["\u2581// \u2581 Fail \u2581 Response \u2581fail"], "bleu": 0.10414419091986513, "rouge_l": 0.3084702907711757}
{"id": 7725, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581server ."], "references": ["\u2581// Start \u2581the \u2581server ."], "bleu": 0.38260294162784475, "rouge_l": 0.8591549295774649}
{"id": 6826, "predictions": ["\u2581// \u2581 Run \u2581runs \u2581the \u2581 test \u2581process ."], "references": ["\u2581// \u2581 In Tail \u2581follow \u2581the \u2581tail \u2581of \u2581file \u2581and \u2581 post \u2581 Bulk Message \u2581to \u2581channel ."], "bleu": 0.08126306442139648, "rouge_l": 0.34936998854524626}
{"id": 6679, "predictions": ["\u2581// \u2581 Load \u2581 loads \u2581a \u2581dictionary \u2581from \u2581the \u2581file ."], "references": ["\u2581// \u2581 Load \u2581 loads \u2581a \u2581dictionary \u2581from \u2581a \u2581file ."], "bleu": 0.7691605673134586, "rouge_l": 0.9090909090909091}
{"id": 7731, "predictions": ["\u2581// \u2581 Init \u2581initializes \u2581the \u2581database \u2581and \u2581 remove \u2581the \u2581 set \u2581of \u2581 backends ."], "references": ["\u2581// \u2581 Init \u2581 init alize s \u2581 ElasticSearch \u2581for \u2581use \u2581with \u2581 m alice"], "bleu": 0.16467029855845897, "rouge_l": 0.3893617021276596}
{"id": 7671, "predictions": ["\u2581// \u2581 Render \u2581returns \u2581a \u2581 json \u2581representation \u2581of \u2581the \u2581 Map ."], "references": ["\u2581// \u2581 Render \u2581returns \u2581the \u2581 map \u2581as \u2581an \u2581encoded \u2581image ."], "bleu": 0.3161487584488943, "rouge_l": 0.5640686922060767}
{"id": 7189, "predictions": ["\u2581// \u2581 New DataStore Hash \u2581creates \u2581a \u2581new \u2581 inf Hash ."], "references": ["\u2581// New Cube Hash \u2581initializes \u2581an rd \u2581ret un s \u2581 C ub u hash \u2581struct ."], "bleu": 0.09014724476175198, "rouge_l": 0.3344298245614035}
{"id": 6273, "predictions": ["\u2581// \u2581 Analyze Attribute \u2581adds \u2581a \u2581single \u2581attribute \u2581to \u2581the \u2581 map \u2581of \u2581 type \u2581 type ."], "references": ["\u2581// \u2581 Analyze Attribute \u2581analyze s \u2581an \u2581attribute \u2581creating \u2581a \u2581corresponding \u2581 Action Param ."], "bleu": 0.21951524426618454, "rouge_l": 0.43131313131313137}
{"id": 6496, "predictions": ["\u2581// \u2581 Write \u2581is \u2581used \u2581to \u2581 write \u2581a \u2581 write \u2581to \u2581the \u2581 Batch ."], "references": ["\u2581// \u2581 Write \u2581delegate s \u2581 p \u2581to \u2581a \u2581running \u2581instance \u2581of \u2581 Batch ing Writer \u2581and \u2581spawn s \u2581new \u2581instances \u2581as \u2581required ."], "bleu": 0.11733516978652929, "rouge_l": 0.3860759493670886}
{"id": 8115, "predictions": ["\u2581// \u2581 Gzip \u2581 wraps \u2581the \u2581http . Handler \u2581and \u2581 wraps \u2581the \u2581http . Handler ."], "references": ["\u2581// \u2581 Gzip \u2581returns \u2581a \u2581handler \u2581that \u2581will \u2581use \u2581gzip \u2581compression \u2581on \u2581the \u2581response \u2581 body \u2581// \u2581of \u2581handler \u2581 h . \u2581 Compression \u2581will \u2581only \u2581be \u2581applied \u2581if \u2581the"], "bleu": 0.07664921791559116, "rouge_l": 0.2837209302325582}
{"id": 7807, "predictions": ["\u2581// \u2581compute \u2581the \u2581 S api n n ' s \u2581 data \u2581from \u2581the \u2581output ."], "references": ["\u2581// \u2581compute \u2581iterates \u2581over \u2581 floor s \u2581and \u2581lines \u2581to \u2581generate \u2581the \u2581output \u2581of \u2581the \u2581 sap in ."], "bleu": 0.13486142142525825, "rouge_l": 0.39391143911439114}
{"id": 7706, "predictions": ["\u2581// \u2581 New Mongo \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Mongo \u2581 type"], "references": ["\u2581// New Mongo \u2581creates \u2581a \u2581new instance \u2581of \u2581Mongo"], "bleu": 0.3759663529467017, "rouge_l": 0.657935285053929}
{"id": 7315, "predictions": ["\u2581// \u2581 Pre flight Header \u2581 modifies \u2581the \u2581origin \u2581header \u2581and \u2581 headers \u2581for \u2581the \u2581request ."], "references": ["\u2581// \u2581Converts \u2581options \u2581into \u2581 CORS \u2581 headers \u2581for \u2581a \u2581 preflight \u2581response ."], "bleu": 0.1598921499894403, "rouge_l": 0.39397201291711514}
{"id": 6287, "predictions": ["\u2581// \u2581 Merge \u2581merges \u2581two \u2581 API Descriptor \u2581objects \u2581into \u2581a \u2581 API Descriptor ."], "references": ["\u2581// \u2581 Merge \u2581two \u2581descriptors \u2581together , \u2581make \u2581sure \u2581there \u2581are \u2581no \u2581duplicate \u2581resource \u2581names \u2581and \u2581that \u2581// \u2581common \u2581types \u2581are \u2581compatible ."], "bleu": 0.09939882350812577, "rouge_l": 0.2535328345802161}
{"id": 6842, "predictions": ["\u2581// \u2581 New With Webhook \u2581creates \u2581a \u2581new \u2581 New \u2581bot \u2581instance"], "references": ["\u2581// \u2581 New With Webhook \u2581creates \u2581a \u2581new \u2581API \u2581client \u2581for \u2581a \u2581 Telegram \u2581bot \u2581using \u2581the \u2581 apiKey \u2581// \u2581provided . \u2581It \u2581will \u2581 call \u2581the \u2581Get Me \u2581method"], "bleu": 0.15200642564181127, "rouge_l": 0.44202898550724634}
{"id": 6765, "predictions": ["\u2581// \u2581parse \u2581attribute \u2581 - \u2581 slice \u2581of \u2581 numeric \u2581 data"], "references": ["\u2581// \u2581 OBJECT \u2581 IDENTIFIER \u2581// \u2581parse ObjectIdentifier \u2581parses \u2581an \u2581 OBJECT \u2581 IDENTIFIER \u2581from \u2581the \u2581given \u2581bytes \u2581and \u2581// \u2581returns \u2581it . \u2581An \u2581object \u2581 identifier \u2581is \u2581a \u2581sequence"], "bleu": 0.03771038490247382, "rouge_l": 0.22101449275362317}
{"id": 7714, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 table ."], "references": ["\u2581// \u2581String \u2581 - \u2581 Ou put \u2581 table \u2581as \u2581a \u2581string ."], "bleu": 0.18994188835866274, "rouge_l": 0.41049798115746977}
{"id": 7314, "predictions": ["\u2581// \u2581 Header \u2581adds \u2581the \u2581header \u2581header \u2581to \u2581the \u2581 headers ."], "references": ["\u2581// \u2581Converts \u2581options \u2581into \u2581 CORS \u2581 headers ."], "bleu": 0.21401603033752975, "rouge_l": 0.48878205128205127}
{"id": 6750, "predictions": ["\u2581// \u2581 Tab ulate \u2581returns \u2581the \u2581 Tabular Results \u2581for \u2581the \u2581given \u2581 slice \u2581of \u2581 Tabular Results ."], "references": ["\u2581// \u2581 Tab ulate \u2581transforms \u2581the \u2581 Results Sets \u2581and \u2581returns \u2581a \u2581 slice \u2581of \u2581 Row"], "bleu": 0.3403336518440549, "rouge_l": 0.6172953081876725}
{"id": 8064, "predictions": ["\u2581// \u2581 Put Int 16 \u2581adds \u2581a \u2581 16 - bit \u2581integer \u2581value \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 Put Int 16 \u2581sets \u2581a \u2581 16 - bit \u2581signed \u2581value \u2581for \u2581the \u2581given \u2581field \u2581 name . The \u2581field \u2581 name \u2581must \u2581be \u2581an \u2581 Int 16"], "bleu": 0.23041934372005432, "rouge_l": 0.5269102990033222}
{"id": 7691, "predictions": ["\u2581// \u2581 Send Mail SSL \u2581sends \u2581a \u2581 mail \u2581request \u2581to \u2581the \u2581 SMTP \u2581server ."], "references": ["\u2581// \u2581 Send Mail SSL \u2581 env o i e \u2581un \u2581 email \u2581 par \u2581 SSL"], "bleu": 0.2844263673134666, "rouge_l": 0.4219367588932806}
{"id": 8063, "predictions": ["\u2581// \u2581 PutUint 16 \u2581adds \u2581a \u2581 16 - bit \u2581value \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 PutUint 16 \u2581sets \u2581a \u2581 16 - bit \u2581unsigned \u2581value \u2581for \u2581the \u2581given \u2581field \u2581 name . The \u2581field \u2581 name \u2581must \u2581be \u2581a \u2581 Uint 16 Field"], "bleu": 0.17986472826920394, "rouge_l": 0.5030927835051546}
{"id": 6527, "predictions": ["\u2581// \u2581Parse Range \u2581returns \u2581a \u2581 Range \u2581from \u2581a \u2581string ."], "references": ["\u2581// \u2581Parse Range \u2581returns \u2581a \u2581new \u2581range \u2581object \u2581and \u2581nil \u2581if \u2581the \u2581given \u2581range \u2581definition \u2581was \u2581// \u2581valid , \u2581or \u2581nil \u2581and \u2581an \u2581error \u2581if \u2581it \u2581was \u2581invalid ."], "bleu": 0.08441983807029887, "rouge_l": 0.27748294162244125}
{"id": 6774, "predictions": ["\u2581// \u2581parse Field Parameters \u2581parses \u2581a \u2581string \u2581 name \u2581and \u2581returns \u2581a \u2581 descriptive \u2581field ."], "references": ["\u2581// \u2581Given \u2581a \u2581tag \u2581string \u2581with \u2581the \u2581 format \u2581specified \u2581in \u2581the \u2581package \u2581 comment , \u2581// \u2581parse Field Parameters \u2581will \u2581parse \u2581it \u2581into \u2581a \u2581field Parameters \u2581structure , \u2581//"], "bleu": 0.10869166970211108, "rouge_l": 0.24729729729729732}
{"id": 8079, "predictions": ["\u2581// \u2581 Load Directory \u2581 loads \u2581files \u2581from \u2581the \u2581directory ."], "references": ["\u2581// \u2581 Load Directory \u2581reads \u2581all \u2581the \u2581schema \u2581files \u2581from \u2581a \u2581directory ."], "bleu": 0.34786351577524227, "rouge_l": 0.6567967698519516}
{"id": 7898, "predictions": ["\u2581// \u2581 Re tic ence \u2581 - \u2581 s \u2581for \u2581 N tic s \u2581 length"], "references": ["\u2581// \u2581 Re tic ence \u2581 tr u cat e \u2581the \u2581string \u2581in \u2581the \u2581space \u2581or \u2581on \u2581 p on t u ation \u2581 mark \u2581and \u2581 put \u2581// \u2581ret"], "bleu": 0.15870499296152796, "rouge_l": 0.370945945945946}
{"id": 6335, "predictions": ["\u2581// \u2581Register Client Commands \u2581registers \u2581the \u2581CLI \u2581CLI \u2581commands \u2581for \u2581the \u2581 app"], "references": ["\u2581// \u2581Register Client Commands \u2581registers \u2581all \u2581API \u2581client \u2581commands ."], "bleu": 0.3636227046500071, "rouge_l": 0.5343065693430658}
{"id": 7856, "predictions": ["\u2581// \u2581Get Ranges \u2581returns \u2581the \u2581 IP \u2581address \u2581of \u2581the \u2581given \u2581 IP \u2581address ."], "references": ["\u2581// \u2581Get Ranges \u2581compose s \u2581the \u2581 CIDR \u2581 IP \u2581ranges \u2581following \u2581RFC \u2581 46 32 \u2581and \u2581RFC \u2581 429 1 \u2581// \u2581of \u2581the \u2581given \u2581 IPs , \u2581with \u2581a"], "bleu": 0.13107746252369792, "rouge_l": 0.41924398625429554}
{"id": 7696, "predictions": ["\u2581// \u2581 Write Plugin Results To Database \u2581 write \u2581 data \u2581to \u2581the \u2581database ."], "references": ["\u2581// \u2581 Write Plugin Results To Database \u2581 upsert s \u2581plugin \u2581results \u2581into \u2581 Database"], "bleu": 0.5266403878479265, "rouge_l": 0.6}
{"id": 7633, "predictions": ["\u2581// \u2581 New S cp Statement Satisfy \u2581creates \u2581a \u2581new \u2581 S cp Statement \u2581instance ."], "references": ["\u2581// \u2581 New S cp Statement Pl edges \u2581creates \u2581a \u2581new \u2581 S cp Statement Pl edges ."], "bleu": 0.6253263985637765, "rouge_l": 0.8148854961832059}
{"id": 6681, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 data \u2581from \u2581the \u2581 Storage ."], "references": ["\u2581// \u2581Get \u2581implements \u2581storage \u2581interface ."], "bleu": 0.16108992769687397, "rouge_l": 0.3727087576374745}
{"id": 7000, "predictions": ["\u2581// \u2581 ServeHTTP \u2581implements \u2581the \u2581http . Handler \u2581interface ."], "references": ["\u2581// \u2581 ServeHTTP \u2581makes \u2581a \u2581context \u2581for \u2581the \u2581request , \u2581sets \u2581some \u2581good \u2581 practice \u2581default \u2581 headers \u2581and \u2581 enter s \u2581the \u2581 handlers \u2581stack ."], "bleu": 0.047434432659409435, "rouge_l": 0.24959083469721768}
{"id": 7796, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581diff \u2581of \u2581the \u2581 v 2 \u2581 path"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581 Differ \u2581instance \u2581for \u2581 comparing \u2581two \u2581 releases"], "bleu": 0.18934058951353838, "rouge_l": 0.4414957780458384}
{"id": 7320, "predictions": ["\u2581// \u2581 Languages \u2581returns \u2581a \u2581 mar t ini \u2581 Handler \u2581that \u2581is \u2581used \u2581to \u2581 get \u2581the \u2581 languages ."], "references": ["\u2581// \u2581Creates \u2581a \u2581new \u2581handler \u2581that \u2581parses \u2581the \u2581 Accept - Language \u2581HTTP \u2581header . \u2581// \u2581// \u2581The \u2581parsed \u2581structure \u2581is \u2581a \u2581 slice \u2581of \u2581 Accept - Language \u2581values"], "bleu": 0.07448137989680796, "rouge_l": 0.22803738317757008}
{"id": 6963, "predictions": ["\u2581// \u2581update VM X \u2581updates \u2581 VM \u2581 X X ."], "references": ["\u2581// \u2581update VM X \u2581updates \u2581 VM X \u2581file \u2581for \u2581the \u2581 VM ."], "bleu": 0.5055393144882451, "rouge_l": 0.7047496790757382}
{"id": 6310, "predictions": ["\u2581// \u2581 Sign \u2581sign s \u2581the \u2581request \u2581with \u2581the \u2581given \u2581request ."], "references": ["\u2581// \u2581 Sign \u2581adds \u2581the \u2581 username \u2581and \u2581password \u2581authorization \u2581cookies \u2581to \u2581the \u2581request . \u2581// \u2581Checks \u2581the \u2581fresh ness \u2581of \u2581the \u2581session \u2581and \u2581creates \u2581a \u2581new \u2581one \u2581if \u2581needed"], "bleu": 0.05830441645253642, "rouge_l": 0.30942028985507253}
{"id": 7251, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 VM ."], "references": ["\u2581// \u2581 Run \u2581executes \u2581the \u2581given \u2581vm . ByteCode \u2581using \u2581the \u2581given \u2581variables . \u2581 For \u2581 historical \u2581// \u2581reasons , \u2581it \u2581also \u2581allows \u2581re - executing \u2581the \u2581previous \u2581"], "bleu": 0.021946084682305116, "rouge_l": 0.23828125}
{"id": 6398, "predictions": ["\u2581// \u2581Create Node \u2581creates \u2581a \u2581new \u2581node \u2581from \u2581the \u2581 xml . xml ."], "references": ["\u2581// Create Node \u2581is \u2581an \u2581implementation \u2581of \u2581 xml builder . XML Builder . \u2581It \u2581appends \u2581the \u2581node \u2581// specified \u2581in \u2581opts \u2581and \u2581returns \u2581the \u2581child \u2581if \u2581it \u2581is \u2581an"], "bleu": 0.04882537665432506, "rouge_l": 0.2559440559440559}
{"id": 7386, "predictions": ["\u2581// \u2581 To ml r Object \u2581converts \u2581a \u2581 Asset \u2581to \u2581a \u2581 map ."], "references": ["\u2581// \u2581 To Xd r Object \u2581creates \u2581 xdr . Asset \u2581object \u2581from \u2581build . Asset \u2581object"], "bleu": 0.176342314149558, "rouge_l": 0.4944275582573455}
{"id": 7939, "predictions": ["\u2581// \u2581 Assemble \u2581returns \u2581the \u2581Skip list \u2581of \u2581the \u2581given \u2581 set \u2581of \u2581 items ."], "references": ["\u2581// \u2581 Assemble \u2581multiple \u2581skip list \u2581segments \u2581and \u2581 form \u2581a \u2581parent \u2581skip list"], "bleu": 0.15844501337268932, "rouge_l": 0.3373893805309734}
{"id": 7693, "predictions": ["\u2581// \u2581 WaitFor It \u2581waits \u2581for \u2581a \u2581connection \u2581to \u2581the \u2581given \u2581host ."], "references": ["\u2581// \u2581 WaitFor It \u2581waits \u2581for \u2581a \u2581service \u2581or \u2581 URL \u2581to \u2581become \u2581 online"], "bleu": 0.4540875404069868, "rouge_l": 0.5641618497109826}
{"id": 7003, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 serving \u2581command ."], "references": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581server \u2581for \u2581listening \u2581and \u2581 serving ."], "bleu": 0.4290632223308574, "rouge_l": 0.7427701674277016}
{"id": 6179, "predictions": ["\u2581// \u2581Parse Command And Flags \u2581parses \u2581the \u2581given \u2581command \u2581and \u2581returns \u2581a \u2581 Command Target ."], "references": ["\u2581// \u2581Parse Command And Flags \u2581parses \u2581a \u2581command \u2581flag \u2581and \u2581infer s \u2581the \u2581resource , \u2581action , \u2581 href \u2581and \u2581params ."], "bleu": 0.27939824201145597, "rouge_l": 0.511744966442953}
{"id": 7648, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581 ledger \u2581 key \u2581 contains \u2581the \u2581same \u2581 name \u2581as \u2581the \u2581 Ledger Key"], "references": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581` other ` \u2581is \u2581equivalent \u2581to \u2581` key `"], "bleu": 0.2592494576098376, "rouge_l": 0.39174311926605504}
{"id": 8077, "predictions": ["\u2581// \u2581 GetRequest ID From Task Response \u2581returns \u2581a \u2581 Response ID \u2581from \u2581a \u2581task \u2581response"], "references": ["\u2581// GetRequest ID From Task Response \u2581 - \u2581a \u2581function \u2581to \u2581 get \u2581a \u2581request \u2581 id \u2581from \u2581a \u2581task response \u2581object"], "bleu": 0.2702250976407598, "rouge_l": 0.5629194630872483}
{"id": 7690, "predictions": ["\u2581// \u2581 Log \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 \u2581monitor able Writer ."], "references": ["\u2581// replace \u2581 ResponseWriter \u2581with \u2581a \u2581monitor able \u2581one , \u2581return \u2581logger"], "bleu": 0.13217947626377288, "rouge_l": 0.31202046035805625}
{"id": 7070, "predictions": ["\u2581// \u2581password \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581password \u2581// \u2581 set \u2581of \u2581 this \u2581 G 509 ler ler ' s \u2581password ."], "references": ["\u2581// Generate \u2581a \u2581password \u2581given \u2581requirements"], "bleu": 0.05551277111446364, "rouge_l": 0.21131639722863746}
{"id": 6412, "predictions": ["\u2581// \u2581Find Node By Pos \u2581returns \u2581the \u2581first \u2581node \u2581in \u2581the \u2581given \u2581position ."], "references": ["\u2581// Find Node By Pos \u2581finds \u2581a \u2581node \u2581from \u2581the \u2581given \u2581position . \u2581Returns \u2581nil \u2581if \u2581the \u2581node \u2581// is \u2581not \u2581found ."], "bleu": 0.18734115678663626, "rouge_l": 0.4660441426146011}
{"id": 7373, "predictions": ["\u2581// \u2581 State After \u2581 marks \u2581the \u2581given \u2581 ledger \u2581 key \u2581to \u2581the \u2581 ledger \u2581 map ."], "references": ["\u2581// \u2581 State After \u2581returns \u2581the \u2581state \u2581of \u2581entry \u2581` key ` \u2581after \u2581the \u2581application \u2581of \u2581the \u2581// \u2581operation \u2581at \u2581` op idx `"], "bleu": 0.1549391003249527, "rouge_l": 0.3188946975354743}
{"id": 7567, "predictions": ["\u2581// \u2581 New Ledger Key \u2581returns \u2581a \u2581new \u2581 Ledger Key"], "references": ["\u2581// \u2581 New Ledger Key \u2581creates \u2581a \u2581new \u2581 Ledger Key ."], "bleu": 0.6710275993197631, "rouge_l": 0.8628005657708628}
{"id": 7023, "predictions": ["\u2581// \u2581 Monitor Paged Query \u2581sends \u2581a \u2581 bunch \u2581of \u2581 repositories \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581 std Paged Query \u2581executes \u2581a \u2581query \u2581using \u2581default \u2581job \u2581parameters \u2581and \u2581 paging \u2581over \u2581the \u2581results , \u2581returning \u2581them \u2581over \u2581the \u2581 data \u2581 chan \u2581provided"], "bleu": 0.07998669534515797, "rouge_l": 0.3405443126308444}
{"id": 8029, "predictions": ["\u2581// \u2581 Logger \u2581returns \u2581a \u2581middleware \u2581that \u2581writes \u2581the \u2581 status \u2581 code \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581 Logger \u2581returns \u2581a \u2581new \u2581logger \u2581to \u2581be \u2581wrapped \u2581around \u2581your \u2581main \u2581http . Handler"], "bleu": 0.28433291815307693, "rouge_l": 0.4265734265734266}
{"id": 6372, "predictions": ["\u2581// \u2581Register View Path \u2581registers \u2581the \u2581 view \u2581paths \u2581for \u2581the \u2581 view"], "references": ["\u2581// \u2581Register View Path \u2581register \u2581 view \u2581 path"], "bleu": 0.3161487584488943, "rouge_l": 0.657935285053929}
{"id": 7193, "predictions": ["\u2581// \u2581 Section \u2581 12 . 2.5 . 4.1 _ ze _ range ."], "references": ["\u2581/** \u2581* \u2581reduced S que e ze Row 0 \u2581 er forms \u2581a \u2581reduced \u2581 squeeze \u2581operation \u2581for \u2581a \u2581single \u2581row , \u2581from \u2581the \u2581highest \u2581to \u2581* \u2581the \u2581lowest \u2581index"], "bleu": 0.03352296887382279, "rouge_l": 0.08531468531468532}
{"id": 7582, "predictions": ["\u2581// \u2581 New Ledger Entry Change \u2581returns \u2581a \u2581new \u2581 Ledger Entry Change \u2581instance"], "references": ["\u2581// \u2581 New Ledger Entry Change \u2581creates \u2581a \u2581new \u2581 Ledger Entry Change ."], "bleu": 0.7241577342575828, "rouge_l": 0.8571428571428571}
{"id": 7698, "predictions": ["\u2581// \u2581 Authenticate \u2581authenticate s \u2581the \u2581 Auth Controller"], "references": ["\u2581// Authenticate \u2581controls \u2581authorization s"], "bleu": 0.16784459625186196, "rouge_l": 0.4518518518518518}
{"id": 6687, "predictions": ["\u2581// \u2581 Setup \u2581initializes \u2581the \u2581storage ."], "references": ["\u2581// \u2581 Setup \u2581implements \u2581storage \u2581interface ."], "bleu": 0.38260294162784475, "rouge_l": 0.7142857142857143}
{"id": 7961, "predictions": ["\u2581// \u2581 New With Config \u2581creates \u2581a \u2581new \u2581Skip list \u2581with \u2581the \u2581given \u2581configuration ."], "references": ["\u2581// \u2581 New With Config \u2581creates \u2581a \u2581 config \u2581from \u2581given \u2581 config"], "bleu": 0.45608395453519407, "rouge_l": 0.5788849347568209}
{"id": 7658, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 key ."], "references": ["\u2581// \u2581Get \u2581an \u2581entry \u2581from \u2581the \u2581hash \u2581 table ."], "bleu": 0.1972940627795883, "rouge_l": 0.5}
{"id": 7440, "predictions": ["\u2581// \u2581 New Ledger Entry Data \u2581returns \u2581a \u2581new \u2581 Ledger Entry \u2581 type"], "references": ["\u2581// \u2581 New Ledger Entry Data \u2581creates \u2581a \u2581new \u2581 Ledger Entry Data ."], "bleu": 0.6475445426291286, "rouge_l": 0.7857142857142857}
{"id": 6180, "predictions": ["\u2581// \u2581validate Flag Value \u2581validates \u2581the \u2581value \u2581of \u2581a \u2581flag \u2581value ."], "references": ["\u2581// \u2581Validate \u2581flag \u2581value \u2581using \u2581validation \u2581 criteria \u2581provided \u2581in \u2581metadata"], "bleu": 0.14694106251955755, "rouge_l": 0.2629310344827586}
{"id": 6508, "predictions": ["\u2581// \u2581 Stream Client Interceptor \u2581returns \u2581a \u2581new \u2581 Stream Client Interceptor \u2581which \u2581will \u2581 call \u2581 rpc . Client Client ."], "references": ["\u2581// \u2581 Stream Client Interceptor \u2581logs \u2581streaming \u2581RPC s \u2581on \u2581the \u2581client \u2581side"], "bleu": 0.20287366424876008, "rouge_l": 0.29960707269155207}
{"id": 6930, "predictions": ["\u2581// \u2581 Print \u2581prints \u2581a \u2581 text ual \u2581output \u2581of \u2581the \u2581 Template Logger ."], "references": ["\u2581// \u2581 Print \u2581outputs \u2581query \u2581log \u2581using \u2581 format \u2581template . \u2581// \u2581 All \u2581arguments \u2581will \u2581be \u2581used \u2581to \u2581formatting ."], "bleu": 0.11803855176119747, "rouge_l": 0.32360742705570295}
{"id": 6749, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Row ."], "references": ["\u2581// \u2581String \u2581implements \u2581String \u2581from \u2581the \u2581String er \u2581interface \u2581and \u2581// \u2581allows \u2581results \u2581to \u2581be \u2581serialized \u2581to \u2581a \u2581 s ting"], "bleu": 0.07182539713902784, "rouge_l": 0.23666343355965083}
{"id": 7724, "predictions": ["\u2581// \u2581 NewServer \u2581creates \u2581a \u2581new \u2581 shim \u2581server"], "references": ["\u2581// NewServer \u2581create \u2581a \u2581new \u2581instance \u2581of \u2581 Server"], "bleu": 0.2208959113415788, "rouge_l": 0.5555555555555556}
{"id": 7654, "predictions": ["\u2581// \u2581try Hash \u2581takes \u2581a \u2581 map \u2581of \u2581 m \u2581and \u2581returns \u2581a \u2581new \u2581 slice \u2581of \u2581 key ."], "references": ["\u2581// \u2581Try \u2581to \u2581find \u2581a \u2581hash \u2581function \u2581that \u2581does \u2581not \u2581cause \u2581collision s \u2581with \u2581 table , \u2581when \u2581// \u2581applied \u2581to \u2581the \u2581 keys \u2581in \u2581the \u2581bucket ."], "bleu": 0.053889129805249396, "rouge_l": 0.20225464190981432}
{"id": 7660, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581Serialize \u2581the \u2581 CH D . \u2581The \u2581serialized \u2581 form \u2581is \u2581 cond uc ive \u2581to \u2581 m mapped \u2581access . \u2581See \u2581// \u2581the \u2581 M map \u2581function \u2581for"], "bleu": 0.034054998956109174, "rouge_l": 0.22509225092250923}
{"id": 6775, "predictions": ["\u2581// \u2581 get Universal Type \u2581returns \u2581the \u2581 type \u2581of \u2581a \u2581 type \u2581of \u2581a \u2581 type ."], "references": ["\u2581// \u2581Given \u2581a \u2581 reflected \u2581Go \u2581 type , \u2581 get Universal Type \u2581returns \u2581the \u2581default \u2581tag \u2581number \u2581// \u2581and \u2581expected \u2581compound \u2581flag ."], "bleu": 0.2770781338249902, "rouge_l": 0.3713850837138508}
{"id": 6686, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581 span \u2581from \u2581the \u2581 data \u2581store"], "references": ["\u2581// \u2581 Delete \u2581implements \u2581storage \u2581interface ."], "bleu": 0.19338531381761725, "rouge_l": 0.3315217391304348}
{"id": 7473, "predictions": ["\u2581// \u2581 New Memo \u2581returns \u2581a \u2581new \u2581 Memo \u2581implementation ."], "references": ["\u2581// \u2581 New Memo \u2581creates \u2581a \u2581new \u2581 Memo ."], "bleu": 0.5452469119630863, "rouge_l": 0.8645669291338582}
{"id": 7759, "predictions": ["\u2581// \u2581 Pull \u2581 releases \u2581the \u2581 content \u2581of \u2581the \u2581release \u2581and \u2581returns \u2581the \u2581 filename ."], "references": ["\u2581// \u2581 Pull \u2581 downloads \u2581the \u2581specified \u2581 Release \u2581to \u2581the \u2581local \u2581cache \u2581 dir"], "bleu": 0.23287896954139942, "rouge_l": 0.505699481865285}
{"id": 6748, "predictions": ["\u2581// \u2581 Run \u2581the \u2581 call \u2581to \u2581 test \u2581if \u2581the \u2581 show \u2581flag \u2581is \u2581not \u2581 set , \u2581then \u2581the \u2581 semaphore \u2581// \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581 Run Benchmark s \u2581executes \u2581the \u2581 benchmarks \u2581based \u2581upon \u2581the \u2581given \u2581 criteria \u2581// \u2581// \u2581Returns \u2581a \u2581result set"], "bleu": 0.10884267615693713, "rouge_l": 0.33516483516483514}
{"id": 7191, "predictions": ["\u2581// \u2581 Sum \u2581computes \u2581the \u2581 data \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 data ."], "references": ["\u2581// Sum \u2581returns \u2581the \u2581result \u2581of \u2581 Ly ra 2 re 2 \u2581hash ."], "bleu": 0.10521495173810227, "rouge_l": 0.4048672566371681}
{"id": 6926, "predictions": ["\u2581// \u2581 OrderBy \u2581applies \u2581the \u2581 ORDER \u2581BY \u2581clause \u2581to \u2581the \u2581 table ."], "references": ["\u2581// \u2581 OrderBy \u2581adds \u2581\" ORDER \u2581BY \" \u2581clause \u2581to \u2581the \u2581 Condition \u2581and \u2581returns \u2581it \u2581for \u2581method \u2581chain ."], "bleu": 0.24123093394164488, "rouge_l": 0.5700934579439253}
{"id": 7190, "predictions": ["\u2581// \u2581 getMetric Hash 256 \u2581returns \u2581a \u2581 byte \u2581 slice \u2581containing \u2581the \u2581 data \u2581from \u2581the \u2581 data \u2581// \u2581 slice \u2581of \u2581the \u2581 data ."], "references": ["\u2581// cube hash 56 \u2581calculates \u2581 cub u hash 256 . \u2581// length \u2581of \u2581 data \u2581must \u2581be \u2581 32 \u2581bytes ."], "bleu": 0.07987276352377326, "rouge_l": 0.332651670074983}
{"id": 8012, "predictions": ["\u2581// \u2581 Next \u2581moves \u2581the \u2581 iterator \u2581to \u2581the \u2581next \u2581element ."], "references": ["\u2581// \u2581 Next \u2581moves \u2581 iterator \u2581to \u2581the \u2581next \u2581item"], "bleu": 0.5783569866465142, "rouge_l": 0.8318181818181818}
{"id": 7299, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 Sentinel \u2581process ."], "references": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581server \u2581 group , \u2581returning \u2581the \u2581first \u2581encountered \u2581error \u2581upon \u2581// \u2581shutdown ."], "bleu": 0.20436578760388385, "rouge_l": 0.4891179839633449}
{"id": 7188, "predictions": ["\u2581// \u2581 b Yaml 256 \u2581returns \u2581a \u2581 byte \u2581 slice \u2581of \u2581the \u2581input \u2581bytes ."], "references": ["\u2581// b mw 256 \u2581calculates \u2581and \u2581returns \u2581 b mw 256 \u2581of \u2581input . \u2581// length \u2581of \u2581input \u2581must \u2581be \u2581 32 \u2581bytes ."], "bleu": 0.09403384494710529, "rouge_l": 0.4343354430379746}
{"id": 7672, "predictions": ["\u2581// \u2581 Render Image \u2581returns \u2581a \u2581 slice \u2581of \u2581 Image RGBA \u2581objects ."], "references": ["\u2581// \u2581 Render Image \u2581returns \u2581the \u2581 map \u2581as \u2581an \u2581un encoded \u2581image . Image ."], "bleu": 0.3106135504716111, "rouge_l": 0.5269978401727862}
{"id": 7145, "predictions": ["\u2581// \u2581JSON Context \u2581sends \u2581a \u2581JSON - encoded \u2581 body \u2581to \u2581the \u2581 body ."], "references": ["\u2581// \u2581JSON Context \u2581provides \u2581the \u2581same \u2581functionality \u2581as \u2581JSON \u2581with \u2581 Context \u2581instance \u2581passing \u2581to \u2581http . Request ."], "bleu": 0.14362033013531755, "rouge_l": 0.4032105760151086}
{"id": 6673, "predictions": ["\u2581// \u2581 New Daemon \u2581creates \u2581a \u2581new \u2581 Daemon"], "references": ["\u2581// \u2581 New Daemon \u2581 allocate s \u2581new \u2581daemon \u2581instance \u2581using \u2581given \u2581options ."], "bleu": 0.2451573815564967, "rouge_l": 0.41838134430727025}
{"id": 7214, "predictions": ["\u2581// \u2581 LastModified \u2581returns \u2581the \u2581time \u2581of \u2581the \u2581source \u2581file ."], "references": ["\u2581// \u2581 LastModified \u2581returns \u2581time \u2581when \u2581the \u2581target \u2581template \u2581file \u2581was \u2581last \u2581modified"], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 7750, "predictions": ["\u2581// \u2581 Token Handler \u2581returns \u2581a \u2581 token \u2581handler \u2581that \u2581uses \u2581the \u2581 token \u2581header \u2581to \u2581the \u2581// \u2581 token ."], "references": ["\u2581// Token Handler \u2581manage \u2581authorization s"], "bleu": 0.0821610732492254, "rouge_l": 0.2469635627530364}
{"id": 7253, "predictions": ["\u2581// \u2581Default Loader \u2581is \u2581the \u2581default \u2581 loader \u2581for \u2581the \u2581 loader"], "references": ["\u2581// \u2581Default Loader \u2581sets \u2581up \u2581and \u2581assigns \u2581the \u2581default \u2581 loader \u2581to \u2581be \u2581used \u2581by \u2581 X s late ."], "bleu": 0.20450878154802107, "rouge_l": 0.47843137254901963}
{"id": 7722, "predictions": ["\u2581// \u2581 Encode OAuth 2 Code \u2581encodes \u2581a \u2581 token \u2581using \u2581the \u2581provided \u2581 username \u2581and \u2581 username \u2581and \u2581 ID ."], "references": ["\u2581// Encode OAuth 2 Code \u2581generate \u2581an \u2581OAuth 2 \u2581 code"], "bleu": 0.1676784955078518, "rouge_l": 0.38689217758985195}
{"id": 7069, "predictions": ["\u2581// \u2581 s anity Check \u2581checks \u2581if \u2581the \u2581password \u2581is \u2581a \u2581valid \u2581 length \u2581of \u2581the \u2581requirements"], "references": ["\u2581// Make \u2581sure \u2581password \u2581 strength \u2581requirements \u2581make \u2581sense"], "bleu": 0.09083627868206415, "rouge_l": 0.3257676902536716}
{"id": 6678, "predictions": ["\u2581// \u2581 Init \u2581returns \u2581a \u2581new \u2581logger \u2581with \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 Init \u2581 allocate s \u2581new \u2581logger \u2581based \u2581on \u2581given \u2581options ."], "bleu": 0.2867861844514351, "rouge_l": 0.6354166666666667}
{"id": 6236, "predictions": ["\u2581// \u2581Build Request \u2581builds \u2581a \u2581request \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581parameters ."], "references": ["\u2581// \u2581Build Request \u2581builds \u2581a \u2581HTTP \u2581request \u2581from \u2581a \u2581resource \u2581 name \u2581and \u2581 href \u2581and \u2581an \u2581action \u2581 name \u2581and \u2581// \u2581parameters . \u2581// \u2581It \u2581is \u2581intended \u2581for \u2581generic"], "bleu": 0.146021934945424, "rouge_l": 0.4692307692307692}
{"id": 7346, "predictions": ["\u2581// \u2581 Mutate Manage Offer \u2581sets \u2581the \u2581 set \u2581of \u2581 Manage Offer ."], "references": ["\u2581// \u2581 Mutate Manage Offer \u2581for \u2581 Rate \u2581sets \u2581the \u2581 Manage Offer Op ' s \u2581 s elling , \u2581 buy ing \u2581and \u2581 price \u2581fields"], "bleu": 0.19501348542028712, "rouge_l": 0.4614220877458397}
{"id": 7046, "predictions": ["\u2581// \u2581 Init Watcher \u2581creates \u2581a \u2581new \u2581watcher \u2581for \u2581the \u2581given \u2581pattern ."], "references": ["\u2581// \u2581 Init Watcher \u2581initial ze s \u2581a \u2581watcher \u2581to \u2581 watch \u2581 templates \u2581changes \u2581in \u2581the \u2581` pattern `. \u2581// \u2581 f \u2581would \u2581be \u2581 Init Html Templates \u2581or"], "bleu": 0.08086124506504899, "rouge_l": 0.30391459074733096}
{"id": 6275, "predictions": ["\u2581// \u2581Create Type \u2581creates \u2581a \u2581new \u2581 type \u2581with \u2581the \u2581given \u2581attributes ."], "references": ["\u2581// \u2581Create Type \u2581is \u2581a \u2581 helper \u2581method \u2581that \u2581creates \u2581or \u2581retrieve \u2581a \u2581object \u2581 data \u2581 type \u2581given \u2581its \u2581attributes ."], "bleu": 0.13017315499825335, "rouge_l": 0.5461056401074306}
{"id": 6316, "predictions": ["\u2581// \u2581Set Host \u2581sets \u2581the \u2581host \u2581 name \u2581for \u2581the \u2581host"], "references": ["\u2581// \u2581Set Host \u2581sets \u2581the \u2581host \u2581used \u2581to \u2581create \u2581 Self - Service \u2581session . \u2581// \u2581 Pass \u2581in \u2581the \u2581CM \u25811.5 \u2581host , \u2581 this \u2581method \u2581computes \u2581the \u2581"], "bleu": 0.10021810514761904, "rouge_l": 0.40516605166051656}
{"id": 8103, "predictions": ["\u2581// \u2581 Pro int ant \u2581returns \u2581the \u2581 pro log \u2581 status \u2581of \u2581the \u2581lease"], "references": ["\u2581// Pro cur ement \u2581 - \u2581method \u2581to \u2581issue \u2581a \u2581proc ur ement \u2581request \u2581for \u2581the \u2581given \u2581lease \u2581item ."], "bleu": 0.07757152471914057, "rouge_l": 0.2785388127853881}
{"id": 6245, "predictions": ["\u2581// \u2581 Analyze Aliases \u2581prints \u2581all \u2581the \u2581fields \u2581in \u2581the \u2581 domain ."], "references": ["\u2581// \u2581 Analyze Aliases \u2581goes \u2581through \u2581the \u2581 aliases \u2581and \u2581copies \u2581the \u2581details \u2581from \u2581original \u2581actions \u2581to \u2581the \u2581// \u2581 aliased \u2581actions . \u2581It \u2581skip s \u2581the \u2581 route \u2581field"], "bleu": 0.0880554129240232, "rouge_l": 0.3473309608540925}
{"id": 6830, "predictions": ["\u2581// \u2581 connect \u2581returns \u2581a \u2581new \u2581 dial \u2581error \u2581if \u2581the \u2581connection \u2581is \u2581not \u2581 established"], "references": ["\u2581// \u2581 connect \u2581 establish es \u2581a \u2581new \u2581connection \u2581using \u2581the \u2581specified \u2581transport ."], "bleu": 0.18842393723950338, "rouge_l": 0.4048672566371681}
{"id": 6939, "predictions": ["\u2581// \u2581Remove Network Adapter \u2581removes \u2581a \u2581network \u2581adapter \u2581from \u2581the \u2581 VM ."], "references": ["\u2581// \u2581Remove Network Adapter \u2581deletes \u2581network \u2581adapter \u2581from \u2581 VM X \u2581file \u2581that \u2581matches \u2581the \u2581 ID \u2581in \u2581\" adapter . Id \" ."], "bleu": 0.18142579256323285, "rouge_l": 0.5130361648444071}
{"id": 6705, "predictions": ["\u2581// \u2581 Render \u2581renders \u2581the \u2581 content \u2581of \u2581the \u2581 set \u2581of \u2581 data ."], "references": ["\u2581// \u2581 Render \u2581will \u2581return \u2581the \u2581HTML \u2581of \u2581the \u2581 bar , \u2581used \u2581 this \u2581function \u2581to \u2581 render \u2581the \u2581 bar \u2581in \u2581 frontend \u2581 page ' s \u2581template"], "bleu": 0.09320795658207887, "rouge_l": 0.3353951890034364}
{"id": 8004, "predictions": ["\u2581// \u2581 Merge \u2581merges \u2581the \u2581 Stats \u2581into \u2581the \u2581 Stats \u2581structure ."], "references": ["\u2581// \u2581 Merge \u2581updates \u2581global \u2581stats \u2581with \u2581partial \u2581stats \u2581and \u2581resets \u2581partial \u2581stats"], "bleu": 0.1777835117834348, "rouge_l": 0.23076923076923084}
{"id": 6323, "predictions": ["\u2581// \u2581 New PB \u2581returns \u2581a \u2581new \u2581 HTTPClient"], "references": ["\u2581// \u2581 New PB \u2581returns \u2581an \u2581HTTP \u2581client \u2581using \u2581only \u2581the \u2581parameter \u2581block \u2581and \u2581ignoring \u2581// \u2581the \u2581current \u2581values \u2581of \u2581the \u2581package \u2581variables , \u2581which \u2581are \u2581not \u2581go - routine"], "bleu": 0.05013190407229487, "rouge_l": 0.23371647509578544}
{"id": 6506, "predictions": ["\u2581// \u2581 Stream Server Interceptor \u2581returns \u2581a \u2581new \u2581streaming \u2581server \u2581interceptor \u2581that \u2581 wraps \u2581// \u2581the \u2581server ' s \u2581 rpc \u2581server ."], "references": ["\u2581// \u2581 Stream Server Interceptor \u2581logs \u2581streaming \u2581RPC s \u2581on \u2581the \u2581server \u2581side"], "bleu": 0.23050898626566632, "rouge_l": 0.46788111217641415}
{"id": 7937, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 Element \u2581to \u2581the \u2581segment ."], "references": ["\u2581// \u2581Add \u2581an \u2581item \u2581into \u2581skip list \u2581segment"], "bleu": 0.16108992769687397, "rouge_l": 0.32504440497335696}
{"id": 7903, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581given \u2581value \u2581into \u2581a \u2581 Params \u2581instance ."], "references": ["\u2581// \u2581Parse \u2581discover s \u2581the \u2581given \u2581parameters \u2581structure \u2581and \u2581associate s \u2581the \u2581structure ' s \u2581// \u2581field \u2581names \u2581with \u2581their \u2581values \u2581into \u2581the \u2581 Params \u2581structure ."], "bleu": 0.06131661929667824, "rouge_l": 0.38364779874213834}
{"id": 7019, "predictions": ["\u2581// \u2581 connect \u2581returns \u2581the \u2581 IPV S \u2581 Service \u2581for \u2581the \u2581 container ."], "references": ["\u2581// \u2581 connect \u2581 - \u2581open s \u2581a \u2581new \u2581connection \u2581to \u2581 bigquery , \u2581re using \u2581the \u2581 token \u2581if \u2581possible \u2581or \u2581re generating \u2581a \u2581new \u2581 auth \u2581 token"], "bleu": 0.07197469847714015, "rouge_l": 0.2934707903780069}
{"id": 7060, "predictions": ["\u2581// \u2581 reorder \u2581returns \u2581the \u2581list \u2581of \u2581 items \u2581in \u2581the \u2581list ."], "references": ["\u2581// Perm t ation \u2581generator \u2581for \u2581int \u2581 slice"], "bleu": 0.10571070857151538, "rouge_l": 0.18798151001540828}
{"id": 6408, "predictions": ["\u2581// \u2581Build NS \u2581returns \u2581the \u2581 NS ' s \u2581 name \u2581of \u2581the \u2581given \u2581 Elem ."], "references": ["\u2581// Build NS \u2581 resolves \u2581all \u2581the \u2581namespace \u2581nodes \u2581of \u2581the \u2581element \u2581and \u2581returns \u2581them"], "bleu": 0.12149176141753365, "rouge_l": 0.3160621761658031}
{"id": 7333, "predictions": ["\u2581// \u2581 Mutate Payment \u2581sets \u2581the \u2581 payment \u2581 path \u2581to \u2581the \u2581specified \u2581value"], "references": ["\u2581// \u2581 Mutate Payment \u2581for \u2581 Pay WithPath \u2581sets \u2581the \u2581 Path Payment Op ' s \u2581 Send Asset , \u2581// \u2581 Send Max \u2581and \u2581 Path \u2581fields"], "bleu": 0.12466383462185707, "rouge_l": 0.35935198821796754}
{"id": 7559, "predictions": ["\u2581// \u2581 New Ledger Upgrade \u2581returns \u2581a \u2581new \u2581 Ledger Upgrade"], "references": ["\u2581// \u2581 New Ledger Upgrade \u2581creates \u2581a \u2581new \u2581 Ledger Upgrade ."], "bleu": 0.6710275993197631, "rouge_l": 0.8628005657708628}
{"id": 6479, "predictions": ["\u2581// \u2581 fromString \u2581returns \u2581a \u2581 Type \u2581that \u2581represents \u2581the \u2581 type \u2581of \u2581a \u2581string ."], "references": ["\u2581// \u2581 fromString \u2581parses \u2581a \u2581string \u2581into \u2581an \u2581error \u2581 type . \u2581If \u2581the \u2581 type \u2581is \u2581invalid , \u2581the \u2581// \u2581 Unknown \u2581 type \u2581will \u2581be \u2581returned \u2581as \u2581well"], "bleu": 0.10114899596870505, "rouge_l": 0.32972972972972975}
{"id": 6475, "predictions": ["\u2581// \u2581 GetRequest Metadata \u2581implements \u2581the \u2581 Credentials Credentials \u2581interface \u2581for \u2581 Token Credentials ."], "references": ["\u2581// \u2581 GetRequest Metadata \u2581implements \u2581credentials . Per RPC Credentials"], "bleu": 0.3237722713145643, "rouge_l": 0.4979591836734694}
{"id": 7273, "predictions": ["\u2581// \u2581Get Sorted List \u2581returns \u2581the \u2581 Symbol List \u2581of \u2581the \u2581 symbol ."], "references": ["\u2581// \u2581Get Sorted List \u2581returns \u2581the \u2581 ls it \u2581of \u2581 Lex Symbols \u2581in \u2581order \u2581that \u2581they \u2581should \u2581// \u2581be \u2581 search ed \u2581for \u2581in \u2581the \u2581temp alt e"], "bleu": 0.17650276181725794, "rouge_l": 0.39383070301291256}
{"id": 6333, "predictions": ["\u2581// \u2581validate CommandLine \u2581validates \u2581the \u2581command \u2581line \u2581flags ."], "references": ["\u2581// \u2581Make \u2581sure \u2581all \u2581the \u2581required \u2581information \u2581is \u2581there"], "bleu": 0.15619699684601276, "rouge_l": 0.2222222222222222}
{"id": 7186, "predictions": ["\u2581// \u2581 Signed URL \u2581creates \u2581a \u2581 URL \u2581for \u2581the \u2581 URL ."], "references": ["\u2581// \u2581 Signed URL \u2581creates \u2581a \u2581signed \u2581 URL \u2581using \u2581the \u2581given \u2581 Client , \u2581where \u2581 route \u2581is \u2581the \u2581// \u2581 url \u2581 path \u2581relative \u2581to \u2581the \u2581 BaseURL"], "bleu": 0.14069973643562425, "rouge_l": 0.43416370106761565}
{"id": 7971, "predictions": ["\u2581// \u2581Get Range Split Items \u2581returns \u2581the \u2581 slice \u2581of \u2581 items \u2581in \u2581the \u2581list ."], "references": ["\u2581// \u2581Get Range Split Items \u2581returns \u2581` n way s ` \u2581 split \u2581range \u2581pivot s \u2581of \u2581the \u2581skip list \u2581 items \u2581// \u2581 Explicit \u2581 barrier \u2581and \u2581release \u2581should"], "bleu": 0.17263251558262618, "rouge_l": 0.41216216216216217}
{"id": 7603, "predictions": ["\u2581// \u2581 Printable For Switch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 username \u2581and \u2581 type \u2581of \u2581the \u2581 username \u2581and \u2581// \u2581whether \u2581the \u2581 username \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Stellar Message"], "bleu": 0.11227564716917941, "rouge_l": 0.3696969696969697}
{"id": 6671, "predictions": ["\u2581// \u2581 Context \u2581returns \u2581a \u2581 shallow \u2581copy \u2581of \u2581the \u2581 data \u2581from \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 Context \u2581gets \u2581implements \u2581 RPCServer \u2581interface ."], "bleu": 0.1487964117124549, "rouge_l": 0.40720961281708945}
{"id": 6942, "predictions": ["\u2581// \u2581Get FileReader \u2581returns \u2581a \u2581reader \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get FileReader \u2581returns \u2581a \u2581reader \u2581for \u2581reading \u2581a \u2581given \u2581file"], "bleu": 0.5760844201603896, "rouge_l": 0.7011494252873562}
{"id": 7410, "predictions": ["\u2581// \u2581 Mutate Allow Trust \u2581adds \u2581the \u2581given \u2581trust \u2581 code \u2581to \u2581the \u2581 set \u2581of \u2581 Allow Trust \u2581links"], "references": ["\u2581// \u2581 Mutate Allow Trust \u2581for \u2581 Asset \u2581sets \u2581the \u2581 Allow Trust Op ' s \u2581 Asset \u2581field"], "bleu": 0.3164257177669852, "rouge_l": 0.5152027027027026}
{"id": 7732, "predictions": ["\u2581// \u2581 WaitFor Connection \u2581waits \u2581until \u2581the \u2581connection \u2581is \u2581closed , \u2581and \u2581 unblock s \u2581it \u2581// \u2581to \u2581wait \u2581until \u2581it \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581 WaitFor Connection \u2581waits \u2581for \u2581connection \u2581to \u2581 Elasticsearch \u2581to \u2581be \u2581ready"], "bleu": 0.19696330878717075, "rouge_l": 0.4464775846294603}
{"id": 7239, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 entity \u2581with \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Set \u2581creates \u2581a \u2581new \u2581cache \u2581file \u2581to \u2581store \u2581the \u2581 ByteCode ."], "bleu": 0.16557608079290168, "rouge_l": 0.39713541666666663}
{"id": 7011, "predictions": ["\u2581// \u2581Get Body JSON \u2581returns \u2581the \u2581JSON \u2581 body \u2581of \u2581the \u2581JSON \u2581JSON \u2581encoded \u2581JSON \u2581// \u2581 body ."], "references": ["\u2581// \u2581Get Body JSON \u2581return \u2581a \u2581 json \u2581from \u2581 body"], "bleu": 0.21314568971111159, "rouge_l": 0.4902411021814007}
{"id": 7741, "predictions": ["\u2581// \u2581 Unzip \u2581 unzip s \u2581a \u2581file \u2581to \u2581a \u2581file ."], "references": ["\u2581// \u2581 Unzip \u2581 unzip s \u2581archive \u2581to \u2581target \u2581location"], "bleu": 0.48633831680799433, "rouge_l": 0.646969696969697}
{"id": 6345, "predictions": ["\u2581// \u2581 Publish To \u2581 publishes \u2581a \u2581message \u2581to \u2581the \u2581topic ."], "references": ["\u2581// \u2581 Publish To \u2581sends \u2581a \u2581message \u2581to \u2581a \u2581specific \u2581topic \u2581using \u2581the \u2581producer \u2581 p , \u2581returning \u2581// \u2581an \u2581error \u2581if \u2581it \u2581was \u2581already \u2581closed \u2581or \u2581if \u2581an \u2581error"], "bleu": 0.09345174965705287, "rouge_l": 0.3536231884057971}
{"id": 7999, "predictions": ["\u2581// \u2581 Release \u2581 clear s \u2581the \u2581 relation ."], "references": ["\u2581// \u2581 Release \u2581 marks \u2581leaving \u2581of \u2581an \u2581accessor \u2581in \u2581the \u2581skip list"], "bleu": 0.27203261921057176, "rouge_l": 0.42479108635097496}
{"id": 6272, "predictions": ["\u2581// \u2581 Analyze Param \u2581returns \u2581a \u2581 set \u2581of \u2581 Action Param \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Analyze Param \u2581analyze s \u2581input \u2581parameters \u2581to \u2581methods"], "bleu": 0.18951629567590744, "rouge_l": 0.3012345679012346}
{"id": 6240, "predictions": ["\u2581// \u2581Apply Extract \u2581applies \u2581the \u2581given \u2581 label \u2581to \u2581the \u2581 form \u2581of \u2581the \u2581 form \u2581and \u2581calls \u2581the \u2581// \u2581wrapped \u2581 json . Apply"], "references": ["\u2581// \u2581Apply Extract \u2581applies \u2581selector \u2581to \u2581 js ."], "bleu": 0.15209404090446677, "rouge_l": 0.4499473129610117}
{"id": 7184, "predictions": ["\u2581// \u2581 Sign Request \u2581sign s \u2581the \u2581request \u2581with \u2581the \u2581given \u2581request ."], "references": ["\u2581// \u2581 Sign Request \u2581will \u2581 add \u2581an \u2581 Authorization \u2581header"], "bleu": 0.26584835766658776, "rouge_l": 0.33841886269070737}
{"id": 6317, "predictions": ["\u2581// \u2581 Can Authenticate \u2581checks \u2581if \u2581user \u2581is \u2581authorized \u2581to \u2581access \u2581to \u2581the \u2581user ."], "references": ["\u2581// \u2581 Can Authenticate \u2581makes \u2581a \u2581 test \u2581request \u2581to \u2581 SS \u2581and \u2581returns \u2581true \u2581if \u2581it \u2581is \u2581successful ."], "bleu": 0.19001065413158652, "rouge_l": 0.3899543378995435}
{"id": 8084, "predictions": ["\u2581// \u2581 Panic \u2581calls \u2581the \u2581http . Handler \u2581interface ."], "references": ["\u2581// \u2581 Panic \u2581returns \u2581a \u2581handler \u2581that \u2581invokes \u2581the \u2581passed \u2581handler \u2581 h , \u2581catch ing \u2581any \u2581// \u2581panic s . \u2581If \u2581one \u2581occurs , \u2581an \u2581HTTP \u2581500 \u2581response \u2581is"], "bleu": 0.035140292001790474, "rouge_l": 0.22932330827067668}
{"id": 7897, "predictions": ["\u2581// \u2581Get Group \u2581returns \u2581a \u2581 group \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Group \u2581retrieves \u2581a \u2581 group \u2581from \u2581a \u2581 domain \u2581with \u2581the \u2581given \u2581 group \u2581 name"], "bleu": 0.31344277953063404, "rouge_l": 0.6896197327852005}
{"id": 6874, "predictions": ["\u2581// \u2581 getBase QueryString \u2581returns \u2581the \u2581 serializable \u2581query \u2581for \u2581the \u2581given \u2581unit ."], "references": ["\u2581// \u2581 getMessage Base QueryString \u2581gets \u2581a \u2581 Query string \u2581representing \u2581 this \u2581message ."], "bleu": 0.12880665550475626, "rouge_l": 0.34269662921348315}
{"id": 8001, "predictions": ["\u2581// \u2581Apply \u2581the \u2581 Stats Report \u2581to \u2581the \u2581 Stats \u2581report , \u2581and \u2581returns \u2581the \u2581// \u2581resulting \u2581 Stats Report \u2581object ."], "references": ["\u2581// \u2581Apply \u2581updates \u2581the \u2581report \u2581with \u2581provided \u2581 par it ial \u2581stats"], "bleu": 0.0866852806734874, "rouge_l": 0.31059063136456216}
{"id": 6911, "predictions": ["\u2581// \u2581columns \u2581returns \u2581the \u2581 table \u2581 name \u2581for \u2581the \u2581 table ."], "references": ["\u2581// \u2581columns \u2581returns \u2581the \u2581comma - separated \u2581column \u2581 name \u2581with \u2581quoted ."], "bleu": 0.3161487584488943, "rouge_l": 0.5384615384615383}
{"id": 7676, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581connection \u2581to \u2581the \u2581pool ."], "references": ["\u2581// Get \u2581blocks \u2581for \u2581an \u2581available \u2581connection ."], "bleu": 0.16784459625186196, "rouge_l": 0.35672514619883033}
{"id": 8019, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 config \u2581from \u2581the \u2581 config \u2581file ."], "references": ["\u2581// \u2581 Read \u2581function \u2581reads \u2581configurations \u2581from \u2581the \u2581file \u2581defined \u2581in \u2581// \u2581 Config . filename ."], "bleu": 0.17659650147786382, "rouge_l": 0.5208110992529349}
{"id": 6271, "predictions": ["\u2581// \u2581 Host From Login \u2581returns \u2581the \u2581host \u2581 name \u2581for \u2581the \u2581host ."], "references": ["\u2581// \u2581 Host From Login \u2581returns \u2581the \u2581policy \u2581endpoint \u2581from \u2581its \u2581 login \u2581endpoint . \u2581// \u2581The \u2581following \u2581isn ' t \u2581 great \u2581but \u2581seems \u2581better \u2581than \u2581having \u2581to \u2581"], "bleu": 0.16046573128997854, "rouge_l": 0.3839160839160839}
{"id": 7891, "predictions": ["\u2581// \u2581 Shutdown \u2581 graceful ly \u2581shut s \u2581down \u2581the \u2581 hub \u2581 map ."], "references": ["\u2581// \u2581 Shutdown \u2581will \u2581 close \u2581all \u2581connections \u2581to \u2581backend \u2581stores \u2581and \u2581shutdown \u2581any \u2581// \u2581running \u2581 ring \u2581service \u2581connector . \u2581Note \u2581that \u2581the \u2581 Repl Value Store \u2581can \u2581still"], "bleu": 0.07412555955791748, "rouge_l": 0.2515463917525773}
{"id": 7522, "predictions": ["\u2581// \u2581 FilterBy For Switch \u2581implements \u2581 usb wallet . Dealer s ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 OperationResult Tr"], "bleu": 0.06573090055238992, "rouge_l": 0.24897959183673474}
{"id": 6239, "predictions": ["\u2581// \u2581Apply Single Extract \u2581applies \u2581the \u2581given \u2581 path \u2581to \u2581the \u2581 form \u2581of \u2581the \u2581 form ."], "references": ["\u2581// \u2581Apply Single Extract \u2581applies \u2581the \u2581given \u2581JSON \u2581selector \u2581and \u2581returns \u2581the \u2581results . \u2581// \u2581It ' s \u2581an \u2581error \u2581if \u2581the \u2581selector \u2581yields \u2581more \u2581than \u2581one \u2581value ."], "bleu": 0.21545275860681712, "rouge_l": 0.40829986613119146}
{"id": 6987, "predictions": ["\u2581// \u2581 StrLen In \u2581returns \u2581the \u2581 form \u2581of \u2581a \u2581 controller ."], "references": ["\u2581// \u2581 StrLen In \u2581 param \u2581is \u2581a \u2581string , \u2581 length \u2581is \u2581in \u2581array"], "bleu": 0.2563595152470555, "rouge_l": 0.49364161849710986}
{"id": 7985, "predictions": ["\u2581// \u2581 New With Config \u2581creates \u2581a \u2581new \u2581 N iterator \u2581from \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 New With Config \u2581creates \u2581a \u2581new \u2581 N itr o \u2581instance \u2581based \u2581on \u2581provided \u2581configuration ."], "bleu": 0.5522027108670324, "rouge_l": 0.625349487418453}
{"id": 6242, "predictions": ["\u2581// \u2581 Output \u2581returns \u2581the \u2581output \u2581output \u2581of \u2581the \u2581 form \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Output \u2581returns \u2581the \u2581current \u2581output ."], "bleu": 0.30277029197532096, "rouge_l": 0.6206395348837209}
{"id": 7183, "predictions": ["\u2581// \u2581 set URL \u2581sets \u2581the \u2581 URL \u2581to \u2581the \u2581 URL \u2581 URL ."], "references": ["\u2581// \u2581utility \u2581function \u2581to \u2581create \u2581a \u2581 URL \u2581object \u2581based \u2581on \u2581given \u2581 data"], "bleu": 0.12874330508144843, "rouge_l": 0.3469852104664391}
{"id": 7685, "predictions": ["\u2581// \u2581 Stereo \u2581draw \u2581will \u2581 decode \u2581the \u2581given \u2581 slice \u2581of \u2581 data \u2581into \u2581the \u2581 slice \u2581of \u2581// \u2581 data ."], "references": ["\u2581// \u2581 Stereo Pan \u2581changes \u2581the \u2581 balance \u2581of \u2581the \u2581input \u2581buffer \u2581by \u2581\" panning \" \u2581// \u2581more \u2581to \u2581the \u2581 left \u2581or \u2581the \u2581right . \u2581The \u2581 pan \u2581value"], "bleu": 0.1027415145408844, "rouge_l": 0.3685800604229607}
{"id": 6357, "predictions": ["\u2581// \u2581 New Consul Engine \u2581returns \u2581a \u2581new \u2581 Consul Engine \u2581instance ."], "references": ["\u2581// \u2581 New Consul Engine \u2581creates \u2581and \u2581return \u2581a \u2581new \u2581engine \u2581configured \u2581with \u2581 config ."], "bleu": 0.33033150102492237, "rouge_l": 0.6093229744728079}
{"id": 6330, "predictions": ["\u2581// \u2581 dump Request \u2581 dumps \u2581the \u2581request \u2581 body \u2581to \u2581the \u2581 dump ."], "references": ["\u2581// \u2581 Dump \u2581request \u2581if \u2581needed . \u2581// \u2581Return \u2581request \u2581serialized \u2581as \u2581JSON \u2581if \u2581 Dump Format \u2581is \u2581JSON , \u2581nil \u2581otherwise ."], "bleu": 0.07552677321325839, "rouge_l": 0.2535328345802161}
{"id": 7317, "predictions": ["\u2581// \u2581 Allow \u2581returns \u2581a \u2581middleware \u2581that \u2581sets \u2581the \u2581header \u2581header \u2581and \u2581 headers ."], "references": ["\u2581// \u2581Allows \u2581 CORS \u2581for \u2581requests \u2581those \u2581match \u2581the \u2581provided \u2581options ."], "bleu": 0.10343603005129705, "rouge_l": 0.30235439900867406}
{"id": 7976, "predictions": ["\u2581// \u2581 Emit \u2581implements \u2581the \u2581event . Handler \u2581interface ."], "references": ["\u2581// \u2581 Emit s \u2581an \u2581 Event \u2581from \u2581the \u2581 Event Controller . \u2581Takes \u2581an \u2581 Event Body \u2581which \u2581is \u2581used \u2581// \u2581to \u2581build \u2581an \u2581 Event . \u2581Returns \u2581number"], "bleu": 0.036520949774262054, "rouge_l": 0.27518796992481204}
{"id": 6841, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 New \u2581bot \u2581API"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581API \u2581 Client \u2581for \u2581a \u2581 Telegram \u2581bot \u2581using \u2581the \u2581 apiKey \u2581// \u2581provided . \u2581// \u2581It \u2581will \u2581 call \u2581the \u2581Get Me \u2581method"], "bleu": 0.08443549471793037, "rouge_l": 0.3669172932330827}
{"id": 8061, "predictions": ["\u2581// \u2581 PutUint 8 \u2581adds \u2581a \u2581 byte \u2581value \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 PutUint 8 \u2581sets \u2581an \u2581 8- bit \u2581unsigned \u2581value \u2581for \u2581the \u2581given \u2581string \u2581 name . \u2581The \u2581field \u2581 name \u2581must \u2581be \u2581a \u2581 Uint 8 Field \u2581otherwise"], "bleu": 0.0904056203553595, "rouge_l": 0.3473309608540925}
{"id": 7415, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581 Asset \u2581 equals \u2581another ."], "references": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581` other ` \u2581is \u2581equivalent \u2581to \u2581` a `"], "bleu": 0.37076092418418544, "rouge_l": 0.423121387283237}
{"id": 7412, "predictions": ["\u2581// \u2581 To Asset \u2581converts \u2581a \u2581 changeset \u2581to \u2581a \u2581 changeset"], "references": ["\u2581// \u2581 To Asset \u2581converts \u2581` a ` \u2581to \u2581a \u2581proper \u2581 xdr . Asset"], "bleu": 0.3433134436667271, "rouge_l": 0.5809523809523809}
{"id": 7175, "predictions": ["\u2581// \u2581 Write \u2581implements \u2581 Next . Write ."], "references": ["\u2581// \u2581 Write \u2581implements \u2581the \u2581io . Writer \u2581interface"], "bleu": 0.4111336169005197, "rouge_l": 0.5555555555555556}
{"id": 7012, "predictions": ["\u2581// \u2581Set Session \u2581sets \u2581the \u2581session \u2581 key \u2581to \u2581the \u2581 Context"], "references": ["\u2581// \u2581Set Session \u2581 set \u2581session"], "bleu": 0.21401603033752975, "rouge_l": 0.4728682170542636}
{"id": 7682, "predictions": ["\u2581// \u2581Mono Down mix \u2581computes \u2581the \u2581 ad vert ising \u2581 data \u2581from \u2581the \u2581buffer ."], "references": ["\u2581// \u2581Mono Down mix \u2581converts \u2581the \u2581buffer \u2581to \u2581a \u2581 mono \u2581buffer \u2581// \u2581by \u2581down mixin g \u2581the \u2581channels \u2581together ."], "bleu": 0.19695464984269342, "rouge_l": 0.42214532871972316}
{"id": 8062, "predictions": ["\u2581// \u2581 Put Int 8 \u2581adds \u2581a \u2581 8 - bit \u2581value \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 Put Int 8 \u2581sets \u2581an \u2581 8- bit \u2581signed \u2581value \u2581for \u2581the \u2581given \u2581string \u2581 name . \u2581The \u2581field \u2581 name \u2581must \u2581be \u2581an \u2581 Int 8 Field"], "bleu": 0.13967812699315366, "rouge_l": 0.41216216216216217}
{"id": 6916, "predictions": ["\u2581// \u2581 collect Field Indexes \u2581 collect s \u2581the \u2581fields \u2581of \u2581the \u2581 table \u2581with \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581 collect Field Indexes \u2581returns \u2581the \u2581indexes \u2581of \u2581field \u2581which \u2581doesn ' t \u2581have \u2581skip \u2581tag \u2581and \u2581 pk \u2581tag ."], "bleu": 0.2288699337434303, "rouge_l": 0.4333070244672455}
{"id": 6756, "predictions": ["\u2581// \u2581 Resize \u2581sets \u2581the \u2581 semaphore \u2581 size \u2581of \u2581the \u2581 semaphore ."], "references": ["\u2581// \u2581 Resize \u2581allows \u2581dynamic \u2581 resizing \u2581of \u2581the \u2581 semaphore , \u2581it \u2581can \u2581be \u2581used \u2581if \u2581it \u2581desired \u2581// \u2581to \u2581increase \u2581the \u2581current \u2581number \u2581of \u2581 allowable \u2581con cur"], "bleu": 0.1136281554171264, "rouge_l": 0.3412587412587413}
{"id": 6945, "predictions": ["\u2581// \u2581 Shared Folders Parent Dir \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 guest \u2581 templates ."], "references": ["\u2581// \u2581 Shared Folders Parent Dir \u2581returns \u2581the \u2581parent \u2581 dir \u2581for \u2581share \u2581folders \u2581in \u2581the \u2581 Guest ."], "bleu": 0.4521496016193139, "rouge_l": 0.6600541027953111}
{"id": 7106, "predictions": ["\u2581// \u2581 Respond With Status \u2581writes \u2581a \u2581 status \u2581 status \u2581to \u2581the \u2581response ."], "references": ["\u2581// \u2581 Respond With Status \u2581executes \u2581a \u2581template \u2581with \u2581provided \u2581 data \u2581into \u2581buffer , \u2581// \u2581then \u2581writes \u2581the \u2581the \u2581 status \u2581and \u2581 body \u2581to \u2581the \u2581response \u2581writer ."], "bleu": 0.16574979004171275, "rouge_l": 0.5450171821305841}
{"id": 7152, "predictions": ["\u2581// \u2581 Handle Methods \u2581handles \u2581methods \u2581of \u2581the \u2581handler \u2581for \u2581the \u2581given \u2581handler ."], "references": ["\u2581// \u2581 Handle Methods \u2581uses \u2581a \u2581corresponding \u2581 Handler \u2581based \u2581on \u2581HTTP \u2581request \u2581method . \u2581// \u2581If \u2581 Handler \u2581is \u2581not \u2581found , \u2581a \u2581method \u2581not \u2581allowed \u2581HTTP \u2581response \u2581is"], "bleu": 0.08211416840406867, "rouge_l": 0.21328671328671328}
{"id": 7067, "predictions": ["\u2581// \u2581Validate \u2581validates \u2581the \u2581password \u2581against \u2581a \u2581 Password \u2581password"], "references": ["\u2581// Validate \u2581a \u2581password \u2581against \u2581the \u2581given \u2581requirements \u2581// Returns \u2581a \u2581boolean \u2581indicating \u2581whether \u2581the \u2581password \u2581meets \u2581the \u2581requirements . \u2581// The \u2581second \u2581argument \u2581is \u2581a \u2581string \u2581 explain ing"], "bleu": 0.031752838260252866, "rouge_l": 0.22932330827067668}
{"id": 6507, "predictions": ["\u2581// \u2581 Unary Client Interceptor \u2581returns \u2581a \u2581 unary \u2581client \u2581interceptor \u2581that \u2581 wraps \u2581the \u2581// \u2581 unary \u2581client \u2581interceptor ."], "references": ["\u2581// \u2581 Unary Client Interceptor \u2581logs \u2581 unary \u2581RPC s \u2581on \u2581the \u2581client \u2581side"], "bleu": 0.25306188056493334, "rouge_l": 0.5335276967930028}
{"id": 8120, "predictions": ["\u2581// \u2581Get Task \u2581returns \u2581a \u2581task \u2581by \u2581 ID"], "references": ["\u2581// Get Task \u2581 - \u2581wrapper \u2581to \u2581rest \u2581 call \u2581to \u2581 GET \u2581task \u2581from \u2581 dispense r"], "bleu": 0.06528905536667996, "rouge_l": 0.27949599083619703}
{"id": 7677, "predictions": ["\u2581// \u2581 put \u2581puts \u2581a \u2581new \u2581 redis \u2581connection \u2581to \u2581the \u2581pool ."], "references": ["\u2581// put \u2581puts \u2581the \u2581connection \u2581back \u2581to \u2581the \u2581pool . \u2581If \u2581the \u2581pool \u2581is \u2581closed , \u2581 put \u2581simply \u2581 close \u2581// any \u2581connections \u2581received \u2581and \u2581return \u2581immediately . \u2581"], "bleu": 0.09690337729429557, "rouge_l": 0.3473309608540925}
{"id": 7673, "predictions": ["\u2581// \u2581 Render ToFile \u2581renders \u2581the \u2581 map \u2581with \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 Render ToFile \u2581writes \u2581the \u2581 map \u2581as \u2581an \u2581encoded \u2581image \u2581to \u2581the \u2581file \u2581system ."], "bleu": 0.27638846135789413, "rouge_l": 0.5859124866595516}
{"id": 6349, "predictions": ["\u2581// \u2581 New Consumer \u2581creates \u2581a \u2581new \u2581consumer \u2581with \u2581the \u2581given \u2581configuration ."], "references": ["\u2581// \u2581 New Consumer \u2581configure s \u2581a \u2581new \u2581consumer \u2581instance ."], "bleu": 0.3661926362999429, "rouge_l": 0.6768377253814147}
{"id": 6684, "predictions": ["\u2581// \u2581 A band on \u2581checks \u2581if \u2581the \u2581 active \u2581 active \u2581 token \u2581is \u2581 active ."], "references": ["\u2581// \u2581 A band on \u2581implements \u2581storage \u2581interface ."], "bleu": 0.2592170537135687, "rouge_l": 0.4728682170542636}
{"id": 8070, "predictions": ["\u2581// \u2581 Put Float 32 \u2581adds \u2581a \u2581float 32 \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581 Put Float 32 \u2581writes \u2581a \u2581 32 - bit \u2581float \u2581for \u2581the \u2581given \u2581string \u2581field . \u2581The \u2581field \u2581 type \u2581must \u2581be \u2581` Float 32 Field `, \u2581otherwise"], "bleu": 0.1101034939578856, "rouge_l": 0.3907473309608541}
{"id": 6954, "predictions": ["\u2581// \u2581 Vm x Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 VM \u2581 path ."], "references": ["\u2581// \u2581 Vm x Path \u2581returns \u2581 path \u2581to \u2581the \u2581virtual \u2581machine \u2581configuration \u2581file ."], "bleu": 0.5071960939456881, "rouge_l": 0.7138297872340426}
{"id": 6230, "predictions": ["\u2581// \u2581 New Metadata Writer \u2581returns \u2581a \u2581new \u2581 Metadata Writer ."], "references": ["\u2581// \u2581 New Metadata Writer \u2581creates \u2581a \u2581new \u2581writer \u2581that \u2581generates \u2581metadata \u2581 data \u2581structures ."], "bleu": 0.3242940465804018, "rouge_l": 0.6267123287671232}
{"id": 7310, "predictions": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581 Json Encoder \u2581to \u2581 json ."], "references": ["\u2581// \u2581 json Encoder \u2581is \u2581an \u2581 Encoder \u2581that \u2581produces \u2581JSON - formatted \u2581responses ."], "bleu": 0.14566388281754675, "rouge_l": 0.363095238095238}
{"id": 7209, "predictions": ["\u2581// \u2581 Optimize \u2581 persist s \u2581the \u2581 Naive \u2581 Naive \u2581 Naive \u2581 script \u2581to \u2581the \u2581engine ."], "references": ["\u2581// \u2581 Optimize \u2581 modifies \u2581the \u2581 ByteCode \u2581in \u2581place \u2581to \u2581an \u2581optimized \u2581version"], "bleu": 0.21314568971111159, "rouge_l": 0.4361593462717058}
{"id": 7075, "predictions": ["\u2581// \u2581 Used \u2581to \u2581 set \u2581the \u2581default \u2581 data \u2581from \u2581the \u2581 stdout \u2581and \u2581the \u2581 stdout"], "references": ["\u2581// \u2581 this \u2581 init \u2581function \u2581is \u2581deprecated , \u2581but \u2581 I ' m \u2581keeping \u2581it \u2581// \u2581around \u2581just \u2581in \u2581case \u2581it \u2581 prove s \u2581useful \u2581in \u2581the \u2581future ."], "bleu": 0.056866120606562515, "rouge_l": 0.23921568627450981}
{"id": 7886, "predictions": ["\u2581// \u2581 Profile \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581user ."], "references": ["\u2581// \u2581Fetches \u2581 ran ter ' s \u2581profile \u2581 data"], "bleu": 0.1354599427337814, "rouge_l": 0.28818897637795277}
{"id": 7298, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 sentinel ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 sentinel \u2581server \u2581 group ."], "bleu": 0.6474591278836639, "rouge_l": 0.8356164383561644}
{"id": 6689, "predictions": ["\u2581// \u2581 init Ja e ger \u2581creates \u2581a \u2581 Tracer \u2581for \u2581the \u2581given \u2581node \u2581and \u2581 config ."], "references": ["\u2581// \u2581 init Ja e ger \u2581returns \u2581an \u2581instance \u2581of \u2581 Ja e ger \u2581 Tracer \u2581that \u2581samples \u2581 100% \u2581of \u2581 traces \u2581and \u2581logs \u2581all \u2581spans \u2581to \u2581 stdout"], "bleu": 0.18416274222803952, "rouge_l": 0.3986928104575163}
{"id": 7122, "predictions": ["\u2581// \u2581 Accept \u2581returns \u2581a \u2581 net . Conn \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 connect \u2581to \u2581the \u2581 TLS \u2581listener ."], "references": ["\u2581// \u2581 Accept \u2581accepts \u2581 TCP \u2581connection , \u2581sets \u2581keep \u2581 alive \u2581and \u2581checks \u2581if \u2581a \u2581client \u2581// \u2581requested \u2581an \u2581encrypted \u2581connection ."], "bleu": 0.11714390556561943, "rouge_l": 0.2656023222060958}
{"id": 7056, "predictions": ["\u2581// \u2581 Init P Pro f \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581will \u2581 set \u2581the \u2581 pprof \u2581 vars \u2581for \u2581the \u2581given \u2581// \u2581prefix ."], "references": ["\u2581// \u2581 Init P Pro f \u2581registers \u2581 pprof \u2581 handlers \u2581to \u2581the \u2581 ServeMux . \u2581// \u2581The \u2581 pprof \u2581 handlers \u2581can \u2581be \u2581specified \u2581a \u2581 customize d \u2581prefix"], "bleu": 0.26898521820334415, "rouge_l": 0.4583815028901734}
{"id": 7148, "predictions": ["\u2581// \u2581JSON Unmarshal \u2581unmarshal s \u2581a \u2581JSON \u2581 data \u2581into \u2581a \u2581 json ."], "references": ["\u2581// \u2581JSON Unmarshal \u2581decodes \u2581 data \u2581into \u2581 v \u2581and \u2581returns \u2581 json . SyntaxError \u2581and \u2581// \u2581 json . Unmarshal TypeError \u2581 formated \u2581with \u2581additional \u2581information ."], "bleu": 0.11185594021444578, "rouge_l": 0.40427098674521367}
{"id": 6778, "predictions": ["\u2581// \u2581Save Mail Notifier \u2581saves \u2581a \u2581new \u2581 mail Notifier ."], "references": ["\u2581// \u2581Save \u2581 mail \u2581 notifier \u2581adds \u2581a \u2581new \u2581 mail \u2581 notifier , \u2581it \u2581replaces \u2581the \u2581existing \u2581one \u2581if \u2581there \u2581// \u2581is \u2581already \u2581a \u2581 notifier \u2581available ."], "bleu": 0.0733981312307506, "rouge_l": 0.32373009855951485}
{"id": 7426, "predictions": ["\u2581// \u2581 New Asset \u2581returns \u2581a \u2581new \u2581 Asset"], "references": ["\u2581// \u2581 New Asset \u2581creates \u2581a \u2581new \u2581 Asset ."], "bleu": 0.588837385313777, "rouge_l": 0.8341880341880341}
{"id": 6424, "predictions": ["\u2581// \u2581HTTP StatusCode \u2581returns \u2581the \u2581 status \u2581 code \u2581for \u2581the \u2581HTTP \u2581response ."], "references": ["\u2581// \u2581HTTP StatusCode \u2581returns \u2581the \u2581corresponding \u2581http \u2581 status \u2581 code \u2581from \u2581an \u2581error \u2581 type"], "bleu": 0.4265277238091732, "rouge_l": 0.5928725701943846}
{"id": 6244, "predictions": ["\u2581// \u2581 Analyze \u2581 Analyze s \u2581the \u2581current \u2581version \u2581of \u2581the \u2581API ."], "references": ["\u2581// \u2581 Analyze \u2581iterate \u2581through \u2581all \u2581resources \u2581and \u2581initializes \u2581the \u2581 Resources \u2581and \u2581 ParamTypes \u2581fields \u2581of \u2581// \u2581the \u2581API Analyzer \u2581struct \u2581accordingly ."], "bleu": 0.10306974954353021, "rouge_l": 0.41042893187552554}
{"id": 6988, "predictions": ["\u2581// \u2581 Str In \u2581 searches \u2581the \u2581 controller ' s \u2581value \u2581into \u2581a \u2581string \u2581value ."], "references": ["\u2581// \u2581 Str In \u2581 param \u2581is \u2581a \u2581string , \u2581the \u2581string \u2581is \u2581in \u2581array"], "bleu": 0.3064859599765908, "rouge_l": 0.44248704663212435}
{"id": 7124, "predictions": ["\u2581// \u2581 ServeHTTP \u2581implements \u2581the \u2581http . Handler \u2581interface ."], "references": ["\u2581// \u2581 ServeHTTP \u2581serves \u2581an \u2581HTTP \u2581response \u2581for \u2581a \u2581request ."], "bleu": 0.22447582175704436, "rouge_l": 0.37770897832817335}
{"id": 6957, "predictions": ["\u2581// \u2581 In VM Team \u2581returns \u2581true \u2581if \u2581the \u2581 VM \u2581is \u2581in \u2581the \u2581 VM ."], "references": ["\u2581// \u2581 In VM Team \u2581returns \u2581whether \u2581the \u2581virtual \u2581machine \u2581is \u2581a \u2581member \u2581of \u2581a \u2581team ."], "bleu": 0.3575297164449809, "rouge_l": 0.5294117647058824}
{"id": 6958, "predictions": ["\u2581// \u2581 Power State \u2581returns \u2581the \u2581current \u2581state \u2581of \u2581the \u2581 VM ."], "references": ["\u2581// \u2581 Power State \u2581returns \u2581power \u2581state \u2581of \u2581the \u2581virtual \u2581machine ."], "bleu": 0.45723134461864345, "rouge_l": 0.725231175693527}
{"id": 7157, "predictions": ["\u2581// \u2581HTML Handler \u2581returns \u2581a \u2581handler \u2581that \u2581serves \u2581the \u2581 status \u2581 code \u2581for \u2581the \u2581service ."], "references": ["\u2581// \u2581HTML Handler \u2581is \u2581a \u2581HTTP \u2581middleware \u2581that \u2581should \u2581be \u2581used \u2581// \u2581along id e \u2581HTML \u2581 pages ."], "bleu": 0.14214568275185774, "rouge_l": 0.38503155996393146}
{"id": 6961, "predictions": ["\u2581// \u2581 Guest OS \u2581returns \u2581the \u2581 OS ' s \u2581 OS \u2581 OS \u2581 data ."], "references": ["\u2581// \u2581 Guest OS \u2581returns \u2581the \u2581 guest \u2581os ."], "bleu": 0.40052744847255717, "rouge_l": 0.6216560509554141}
{"id": 7713, "predictions": ["\u2581// \u2581 Print \u2581prints \u2581the \u2581 table \u2581to \u2581the \u2581 table ."], "references": ["\u2581// \u2581 Print \u2581 - \u2581Prints \u2581 table ."], "bleu": 0.2891784933232572, "rouge_l": 0.6842948717948718}
{"id": 7048, "predictions": ["\u2581// \u2581Find \u2581returns \u2581a \u2581 URL \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Find \u2581a \u2581 router \u2581with \u2581the \u2581specific \u2581 path \u2581and \u2581return \u2581it ."], "bleu": 0.18116065851435417, "rouge_l": 0.6069651741293532}
{"id": 6477, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581String \u2581implements \u2581string er"], "bleu": 0.16108992769687397, "rouge_l": 0.40219780219780216}
{"id": 6790, "predictions": ["\u2581// \u2581 Process \u2581returns \u2581the \u2581 CN \u2581 auth \u2581 auth \u2581 auth \u2581header ."], "references": ["\u2581// \u2581 Process \u2581is \u2581the \u2581main \u2581 Entry point"], "bleu": 0.16943571815930883, "rouge_l": 0.4363376251788269}
{"id": 6183, "predictions": ["\u2581// \u2581 shorten Pattern \u2581returns \u2581a \u2581string \u2581indicating \u2581whether \u2581the \u2581pattern \u2581matches \u2581the \u2581pattern \u2581pattern ."], "references": ["\u2581// \u2581 Attempt \u2581to \u2581 shorten \u2581action \u2581pattern \u2581for \u2581 display \u2581by \u2581looking \u2581at \u2581other \u2581action \u2581 href s \u2581// \u2581and \u2581 picking \u2581one \u2581that \u2581doesn ' t \u2581have \u2581the"], "bleu": 0.05554096292333099, "rouge_l": 0.20608108108108109}
{"id": 8118, "predictions": ["\u2581// \u2581 Renderer \u2581creates \u2581a \u2581new \u2581 Handler \u2581with \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 Renderer \u2581is \u2581a \u2581 Middleware \u2581that \u2581maps \u2581a \u2581 render . Render \u2581service \u2581into \u2581the \u2581 Mar t ini \u2581handler \u2581chain . \u2581An \u2581single \u2581 variadic \u2581 render"], "bleu": 0.05717753472068341, "rouge_l": 0.30391459074733096}
{"id": 6946, "predictions": ["\u2581// \u2581 Name \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581snapshot ."], "references": ["\u2581// \u2581 Name \u2581returns \u2581user \u2581defined \u2581 name \u2581for \u2581the \u2581snapshot ."], "bleu": 0.4254627864454672, "rouge_l": 0.7765205091937766}
{"id": 7025, "predictions": ["\u2581// \u2581 page d Query \u2581returns \u2581the \u2581 page \u2581of \u2581the \u2581given \u2581project \u2581with \u2581the \u2581specified \u2581options ."], "references": ["\u2581// \u2581 page d Query \u2581executes \u2581the \u2581query \u2581using \u2581 bq ' s \u2581 paging \u2581mechanism \u2581to \u2581load \u2581all \u2581results \u2581and \u2581sends \u2581them \u2581back \u2581via \u2581 data Chan \u2581if \u2581available"], "bleu": 0.13760426731077202, "rouge_l": 0.2790849673202615}
{"id": 6531, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581configured \u2581 Run deck \u2581client ."], "bleu": 0.1892240568795935, "rouge_l": 0.49061662198391426}
{"id": 7332, "predictions": ["\u2581// \u2581 Mutate Payment \u2581is \u2581the \u2581same \u2581as \u2581 Mutate , \u2581but \u2581it \u2581returns \u2581the \u2581 empty \u2581 path"], "references": ["\u2581// \u2581 Mutate Payment \u2581for \u2581 Native Amount \u2581sets \u2581the \u2581 Payment Op ' s \u2581 currency \u2581field \u2581to \u2581// \u2581native \u2581and \u2581sets \u2581its \u2581amount \u2581to \u2581the \u2581provided \u2581integer"], "bleu": 0.13314596658067834, "rouge_l": 0.32126398946675444}
{"id": 6959, "predictions": ["\u2581// \u2581 Tools State \u2581returns \u2581the \u2581 tools \u2581state \u2581for \u2581the \u2581 VM ."], "references": ["\u2581// \u2581 Tools State \u2581returns \u2581state \u2581of \u2581the \u2581 VMware \u2581 Tools \u2581suite \u2581in \u2581the \u2581 guest ."], "bleu": 0.3147349861565793, "rouge_l": 0.6112224448897796}
{"id": 6692, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581a \u2581 DoubleArray \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Read \u2581 loads \u2581a \u2581double \u2581array ."], "bleu": 0.24384183193426084, "rouge_l": 0.5091819699499166}
{"id": 7307, "predictions": ["\u2581// \u2581convert And Append Context Funcs \u2581returns \u2581a \u2581function \u2581that \u2581sets \u2581the \u2581function \u2581 set \u2581to \u2581the \u2581// \u2581context . Context . Context ."], "references": ["\u2581// \u2581convert And Append Context Funcs \u2581converts \u2581and \u2581appends \u2581func s \u2581in \u2581 v \u2581to \u2581 o ."], "bleu": 0.250737833894674, "rouge_l": 0.43990384615384615}
{"id": 6947, "predictions": ["\u2581// \u2581 Description \u2581returns \u2581the \u2581 description \u2581of \u2581the \u2581snapshot ."], "references": ["\u2581// \u2581 Description \u2581returns \u2581user \u2581defined \u2581 description \u2581for \u2581the \u2581snapshot ."], "bleu": 0.4254627864454672, "rouge_l": 0.7765205091937766}
{"id": 7695, "predictions": ["\u2581// \u2581 initConfig \u2581initializes \u2581the \u2581 Vi per \u2581from \u2581 config \u2581file"], "references": ["\u2581// \u2581 Read \u2581in \u2581 config \u2581file \u2581and \u2581 ENV \u2581variables \u2581if \u2581 set ."], "bleu": 0.18614186692801712, "rouge_l": 0.363095238095238}
{"id": 7360, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581transaction \u2581for \u2581the \u2581given \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Manage Offer Builder \u2581causes \u2581the \u2581under y lying \u2581// \u2581 Manage Data \u2581to \u2581be \u2581added \u2581to \u2581the \u2581operation \u2581list \u2581for \u2581the \u2581provided \u2581// \u2581transaction"], "bleu": 0.07902598128872206, "rouge_l": 0.3536231884057971}
{"id": 6363, "predictions": ["\u2581// \u2581 Read Command \u2581reads \u2581a \u2581command \u2581line \u2581and \u2581returns \u2581a \u2581 Command ."], "references": ["\u2581// \u2581 Read Command \u2581reads \u2581cmd \u2581from \u2581 r , \u2581or \u2581returns \u2581an \u2581error \u2581if \u2581no \u2581commands \u2581could \u2581be \u2581// \u2581read ."], "bleu": 0.20234579857560134, "rouge_l": 0.3739054290718039}
{"id": 6381, "predictions": ["\u2581// \u2581 Open \u2581open s \u2581a \u2581 config \u2581file \u2581using \u2581the \u2581provided \u2581 URL ."], "references": ["\u2581// \u2581 Open \u2581requests \u2581the \u2581 S 3 \u2581object \u2581at \u2581 url . \u2581An \u2581HTTP \u2581 status \u2581other \u2581than \u2581200 \u2581is \u2581// \u2581considered \u2581an \u2581error . \u2581// \u2581// \u2581If \u2581"], "bleu": 0.06698000413523514, "rouge_l": 0.2515463917525773}
{"id": 6956, "predictions": ["\u2581// \u2581 ReadOnly \u2581returns \u2581true \u2581if \u2581the \u2581 VM \u2581is \u2581 empty ."], "references": ["\u2581// \u2581 ReadOnly \u2581tells \u2581whether \u2581or \u2581not \u2581the \u2581 VM \u2581is \u2581read - only ."], "bleu": 0.3139750015312652, "rouge_l": 0.5641618497109826}
{"id": 6809, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581list \u2581of \u2581paths \u2581to \u2581the \u2581watcher"], "references": ["\u2581// \u2581The \u2581Add \u2581method \u2581takes \u2581a \u2581variable \u2581number \u2581of \u2581string \u2581arguments \u2581and \u2581adds \u2581those \u2581// \u2581files \u2581to \u2581the \u2581 watch \u2581list , \u2581returning \u2581the \u2581number \u2581of \u2581files \u2581added ."], "bleu": 0.03265707737796057, "rouge_l": 0.2828438948995363}
{"id": 7760, "predictions": ["\u2581// \u2581Build Job \u2581builds \u2581the \u2581job \u2581from \u2581the \u2581 Job \u2581 meta ."], "references": ["\u2581// Build Job \u2581 - \u2581function \u2581to \u2581create \u2581a \u2581compiled \u2581version \u2581of \u2581the \u2581current \u2581job"], "bleu": 0.12817975762352776, "rouge_l": 0.2820809248554913}
{"id": 7256, "predictions": ["\u2581// \u2581 New HTTP Source \u2581returns \u2581a \u2581new \u2581HTTP Source \u2581with \u2581the \u2581given \u2581 body"], "references": ["\u2581// \u2581 New HTTP Source \u2581creates \u2581a \u2581new \u2581HTTP Source \u2581instance"], "bleu": 0.4578831372133982, "rouge_l": 0.7120622568093385}
{"id": 7366, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581transaction \u2581to \u2581 view \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Payment Builder \u2581causes \u2581the \u2581under y lying \u2581 Payment Op \u2581// \u2581or \u2581 Path Payment Op \u2581to \u2581be \u2581added \u2581to \u2581the \u2581operation \u2581list \u2581for"], "bleu": 0.08327766790020474, "rouge_l": 0.30391459074733096}
{"id": 7058, "predictions": ["\u2581// \u2581 Run \u2581returns \u2581the \u2581 slice \u2581of \u2581the \u2581given \u2581 slice \u2581of \u2581 n ' s \u2581 runes ."], "references": ["\u2581// Combination \u2581generator \u2581for \u2581int \u2581 slice"], "bleu": 0.08638804535733371, "rouge_l": 0.2433510638297872}
{"id": 6505, "predictions": ["\u2581// \u2581 UnaryServer Interceptor \u2581returns \u2581a \u2581new \u2581 unary \u2581server \u2581interceptor \u2581that \u2581logs \u2581the \u2581// \u2581 data \u2581from \u2581the \u2581server ."], "references": ["\u2581// \u2581 UnaryServer Interceptor \u2581logs \u2581 unary \u2581RPC s \u2581on \u2581the \u2581server \u2581side"], "bleu": 0.21279882820441612, "rouge_l": 0.4914400805639476}
{"id": 7376, "predictions": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581version \u2581checksum \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581provided \u2581 data \u2581to \u2581a \u2581 Str Key , \u2581using \u2581the \u2581provided \u2581version \u2581// \u2581 byte ."], "bleu": 0.23651619543303382, "rouge_l": 0.4807355516637478}
{"id": 6960, "predictions": ["\u2581// \u2581 IsRunning \u2581returns \u2581true \u2581if \u2581the \u2581 VM \u2581is \u2581in \u2581the \u2581 VM ."], "references": ["\u2581// \u2581 IsRunning \u2581returns \u2581whether \u2581the \u2581virtual \u2581machine \u2581is \u2581running ."], "bleu": 0.25748661016289676, "rouge_l": 0.5538261997405965}
{"id": 6818, "predictions": ["\u2581// \u2581 Send \u2581a \u2581request \u2581to \u2581the \u2581 URL"], "references": ["\u2581// go \u2581client \u2581for \u2581performance \u2581testing"], "bleu": 0.14113991930789777, "rouge_l": 0.13832199546485258}
{"id": 7330, "predictions": ["\u2581// \u2581 Mutate Payment \u2581returns \u2581the \u2581 credit \u2581 type \u2581of \u2581the \u2581given \u2581object ."], "references": ["\u2581// \u2581 Mutate Payment \u2581for \u2581 Asset \u2581sets \u2581the \u2581 Payment Op ' s \u2581 Asset \u2581field"], "bleu": 0.23827376217791343, "rouge_l": 0.4326241134751773}
{"id": 6953, "predictions": ["\u2581// \u2581 V tc \u2581returns \u2581the \u2581 v 2."], "references": ["\u2581// \u2581 V cpus \u2581returns \u2581number \u2581of \u2581virtual \u2581 CPUs \u2581configured \u2581for \u2581the \u2581virtual \u2581machine ."], "bleu": 0.13880978816525083, "rouge_l": 0.38077403245942576}
{"id": 6293, "predictions": ["\u2581// \u2581 NewClient Writer \u2581returns \u2581a \u2581new \u2581 Client Writer ."], "references": ["\u2581// \u2581 NewClient Writer \u2581is \u2581the \u2581client \u2581writer \u2581factory ."], "bleu": 0.33180774028439425, "rouge_l": 0.4803149606299213}
{"id": 7702, "predictions": ["\u2581// \u2581 Logging \u2581returns \u2581a \u2581handler \u2581that \u2581writes \u2581the \u2581 status \u2581 code \u2581to \u2581the \u2581log ."], "references": ["\u2581// Logging \u2581logs \u2581http \u2581requests"], "bleu": 0.07994607499472013, "rouge_l": 0.20165289256198346}
{"id": 6371, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Render \u2581instance \u2581with \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581 New \u2581 init alize \u2581the \u2581 render \u2581struct ."], "bleu": 0.18207052811092136, "rouge_l": 0.5538261997405965}
{"id": 7445, "predictions": ["\u2581// \u2581 New Allow Trust Op Asset \u2581creates \u2581a \u2581new \u2581 Allow Trust Op Asset"], "references": ["\u2581// \u2581 New Allow Trust Op Asset \u2581creates \u2581a \u2581new \u2581 Allow Trust Op Asset ."], "bleu": 0.9355069850316178, "rouge_l": 0.9621451104100947}
{"id": 6680, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 Storage \u2581 Session ."], "references": ["\u2581// \u2581 Start \u2581implements \u2581storage \u2581interface ."], "bleu": 0.24808415001701817, "rouge_l": 0.48605577689243035}
{"id": 6789, "predictions": ["\u2581// \u2581Validate Request \u2581validates \u2581the \u2581 Auth ' s \u2581 TLS \u2581certificate \u2581and \u2581verifies \u2581that \u2581it \u2581is \u2581valid"], "references": ["\u2581// \u2581Validate Request \u2581 perf om rs \u2581verification \u2581on \u2581the \u2581 TLS \u2581 certs \u2581and \u2581chain"], "bleu": 0.17636478563502966, "rouge_l": 0.4161793372319688}
{"id": 6225, "predictions": ["\u2581// \u2581 Encrypt \u2581encrypt s \u2581the \u2581 data \u2581using \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 Encrypt \u2581encrypt s \u2581the \u2581given \u2581 text \u2581with \u2581a \u2581hard - code d \u2581 secret . \u2581 Not \u2581 tr u ly \u2581 secure ."], "bleu": 0.2302838752454149, "rouge_l": 0.4614220877458397}
{"id": 6468, "predictions": ["\u2581// \u2581 Interceptor \u2581returns \u2581a \u2581new \u2581 Stream Client Interceptor \u2581that \u2581 wraps \u2581 Client ."], "references": ["\u2581// \u2581 Interceptor \u2581automatically \u2581restart s \u2581streams \u2581on \u2581non - expected \u2581errors \u2581// \u2581 To \u2581do \u2581so , \u2581the \u2581application \u2581should \u2581create \u2581a \u2581for - loop \u2581around \u2581 RecvMsg ,"], "bleu": 0.06864479323814217, "rouge_l": 0.20608108108108109}
{"id": 6460, "predictions": ["\u2581// \u2581 IsEnabled \u2581returns \u2581true \u2581if \u2581the \u2581namespace \u2581is \u2581in \u2581the \u2581namespace"], "references": ["\u2581// \u2581 isEnabled \u2581checks \u2581 w ether \u2581or \u2581not \u2581the \u2581namespace \u2581is \u2581enabled"], "bleu": 0.21158739010149644, "rouge_l": 0.39713541666666663}
{"id": 7496, "predictions": ["\u2581// \u2581 New Manage Offer Success Result Offer \u2581creates \u2581a \u2581new \u2581 Manage Offer Success Result \u2581instance"], "references": ["\u2581// \u2581 New Manage Offer Success Result Offer \u2581creates \u2581a \u2581new \u2581 Manage Offer Success Result Offer ."], "bleu": 0.885456332889736, "rouge_l": 0.9095992544268408}
{"id": 7770, "predictions": ["\u2581// \u2581 All \u2581implements \u2581the \u2581 Cmd \u2581interface \u2581for \u2581 Show Cmd ."], "references": ["\u2581// \u2581 All \u2581writes \u2581out \u2581all \u2581the \u2581release \u2581 data \u2581to \u2581writer ."], "bleu": 0.2044800736021839, "rouge_l": 0.4615384615384617}
{"id": 7490, "predictions": ["\u2581// \u2581 NewPath Payment Result \u2581returns \u2581a \u2581 Path Payment Result \u2581from \u2581the \u2581given \u2581 code \u2581 type ."], "references": ["\u2581// \u2581 NewPath Payment Result \u2581creates \u2581a \u2581new \u2581 Path Payment Result ."], "bleu": 0.3751840463233443, "rouge_l": 0.711558854718982}
{"id": 6955, "predictions": ["\u2581// \u2581 MemorySize \u2581returns \u2581the \u2581 VM ' s \u2581 name \u2581and \u2581 type ."], "references": ["\u2581// \u2581 MemorySize \u2581returns \u2581memory \u2581 size \u2581of \u2581the \u2581virtual \u2581machine ."], "bleu": 0.25748661016289676, "rouge_l": 0.4535315985130111}
{"id": 7181, "predictions": ["\u2581// \u2581 post \u2581a \u2581 post - mail ."], "references": ["\u2581// \u2581Add \u2581entry . Input \u2581and \u2581entry . Output \u2581to \u2581schema URLs , \u2581if \u2581they \u2581are \u2581 set"], "bleu": 0.061746576272781344, "rouge_l": 0.13974799541809851}
{"id": 7766, "predictions": ["\u2581// \u2581 Push Cloud Config \u2581 push s \u2581the \u2581 cloud \u2581 config \u2581to \u2581the \u2581 cloud ."], "references": ["\u2581// \u2581 Push Cloud Config \u2581 uploads \u2581a \u2581 cloud \u2581 config \u2581to \u2581 bosh ."], "bleu": 0.5184341074271375, "rouge_l": 0.7729044834307992}
{"id": 6805, "predictions": ["\u2581// \u2581new Watcher \u2581returns \u2581a \u2581new \u2581watcher \u2581that \u2581 watches \u2581the \u2581 watch \u2581files \u2581// \u2581and \u2581 watches \u2581the \u2581watcher ."], "references": ["\u2581// \u2581new Watcher \u2581is \u2581the \u2581internal \u2581function \u2581for \u2581properly \u2581setting \u2581up \u2581a \u2581new \u2581watcher ."], "bleu": 0.17428995613227577, "rouge_l": 0.40093896713615024}
{"id": 7885, "predictions": ["\u2581// \u2581 Ran t \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581Fetches \u2581a \u2581 r ant \u2581and \u2581its \u2581comments \u2581given \u2581a \u2581valid \u2581 r ant \u2581 id"], "bleu": 0.07305267243289862, "rouge_l": 0.2145998240985048}
{"id": 8050, "predictions": ["\u2581// \u2581lex Comment \u2581scan s \u2581the \u2581 comment ."], "references": ["\u2581// \u2581 Lex es \u2581a \u2581 comment \u2581line"], "bleu": 0.19960198807747329, "rouge_l": 0.35672514619883033}
{"id": 7374, "predictions": ["\u2581// \u2581change \u2581implements \u2581the \u2581 Bundle \u2581interface \u2581for \u2581 Bundle ."], "references": ["\u2581// \u2581changes \u2581returns \u2581any \u2581changes \u2581within \u2581the \u2581bundle \u2581that \u2581 apply \u2581to \u2581the \u2581entry \u2581// \u2581identified \u2581by \u2581` key ` \u2581that \u2581occurred \u2581at \u2581or \u2581before \u2581` max Op `."], "bleu": 0.026372250361614762, "rouge_l": 0.13874147081122062}
{"id": 7020, "predictions": ["\u2581// \u2581 Insert Row \u2581inserts \u2581a \u2581new \u2581row \u2581from \u2581the \u2581 InfluxDB ."], "references": ["\u2581// \u2581 Insert Row \u2581inserts \u2581a \u2581new \u2581row \u2581into \u2581the \u2581desired \u2581project , \u2581dataset \u2581and \u2581 table \u2581or \u2581returns \u2581an \u2581error"], "bleu": 0.33846480697579384, "rouge_l": 0.5642923219241442}
{"id": 6334, "predictions": ["\u2581// \u2581 APIClient \u2581returns \u2581the \u2581command \u2581for \u2581the \u2581specified \u2581command"], "references": ["\u2581// \u2581 APIClient \u2581instantiate s \u2581a \u2581client \u2581with \u2581the \u2581given \u2581 name \u2581from \u2581command \u2581line \u2581arguments ."], "bleu": 0.12894015634133696, "rouge_l": 0.3538283062645011}
{"id": 6202, "predictions": ["\u2581// \u2581extract Arg \u2581returns \u2581a \u2581string \u2581containing \u2581the \u2581arguments \u2581that \u2581are \u2581// \u2581 checked \u2581by \u2581the \u2581argument ."], "references": ["\u2581// \u2581Extract \u2581command \u2581line \u2581argument \u2581with \u2581given \u2581 name \u2581and \u2581return \u2581remaining \u2581arguments"], "bleu": 0.08562365224473284, "rouge_l": 0.13289760348583876}
{"id": 6296, "predictions": ["\u2581// \u2581 Write Type \u2581writes \u2581a \u2581 type \u2581of \u2581 data \u2581to \u2581a \u2581writer ."], "references": ["\u2581// \u2581 Write Type \u2581writes t \u2581the \u2581 type \u2581declaration \u2581for \u2581a \u2581resource \u2581action \u2581arguments ."], "bleu": 0.3352042383309152, "rouge_l": 0.5772870662460569}
{"id": 6455, "predictions": ["\u2581// \u2581 GRPC Code \u2581returns \u2581a \u2581 grpc \u2581 code \u2581for \u2581a \u2581 GRPC \u2581 type ."], "references": ["\u2581// \u2581 GRPC Code \u2581returns \u2581the \u2581corresponding \u2581http \u2581 status \u2581 code \u2581from \u2581an \u2581error \u2581 type"], "bleu": 0.33491517492026424, "rouge_l": 0.5882352941176471}
{"id": 7085, "predictions": ["\u2581// \u2581Assert \u2581checks \u2581the \u2581 t ual \u2581 t \u2581of \u2581the \u2581 t ual \u2581 t \u2581and \u2581 b ."], "references": ["\u2581// \u2581Simple \u2581assert \u2581 call \u2581for \u2581unit \u2581and \u2581 functional \u2581tests"], "bleu": 0.09134423666564473, "rouge_l": 0.2723214285714286}
{"id": 6337, "predictions": ["\u2581// \u2581to Pattern \u2581renders \u2581a \u2581pattern \u2581and \u2581returns \u2581a \u2581 Path Pattern \u2581for \u2581the \u2581pattern ."], "references": ["\u2581// \u2581Create \u2581 path \u2581pattern \u2581from \u2581HTTP \u2581verb \u2581and \u2581request \u2581 path"], "bleu": 0.09672649511413092, "rouge_l": 0.2932692307692307}
{"id": 6226, "predictions": ["\u2581// \u2581 Decrypt \u2581returns \u2581a \u2581 AES - encoded \u2581string \u2581from \u2581the \u2581 text ."], "references": ["\u2581// \u2581 Decrypt \u2581decrypt s \u2581the \u2581given \u2581encrypted \u2581string \u2581using \u2581the \u2581hard - code d \u2581 secret ."], "bleu": 0.15352138726197065, "rouge_l": 0.41739980449657876}
{"id": 7258, "predictions": ["\u2581// \u2581 Load String \u2581 loads \u2581a \u2581 GCE \u2581instance \u2581from \u2581the \u2581string \u2581 format ."], "references": ["\u2581// \u2581 Load String \u2581takes \u2581a \u2581template \u2581string \u2581and \u2581 compile s \u2581it \u2581into \u2581vm . ByteCode"], "bleu": 0.23295550779211424, "rouge_l": 0.4822134387351779}
{"id": 7570, "predictions": ["\u2581// \u2581 New Bucket Entry \u2581returns \u2581a \u2581new \u2581 Bucket Entry \u2581instance"], "references": ["\u2581// \u2581 New Bucket Entry \u2581creates \u2581a \u2581new \u2581 Bucket Entry ."], "bleu": 0.6703420896351792, "rouge_l": 0.8333333333333334}
{"id": 7114, "predictions": ["\u2581// \u2581 GetRequest IPs \u2581returns \u2581the \u2581 IP \u2581of \u2581the \u2581 IP \u2581address \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581 GetRequest IPs \u2581returns \u2581all \u2581possible \u2581 IPs \u2581found \u2581in \u2581HTTP \u2581request ."], "bleu": 0.3064859599765908, "rouge_l": 0.5252960172228203}
{"id": 7597, "predictions": ["\u2581// \u2581 New Peer Address Ip \u2581returns \u2581a \u2581new \u2581 Peer Address Ip \u2581with \u2581the \u2581given \u2581 type ."], "references": ["\u2581// \u2581 New Peer Address Ip \u2581creates \u2581a \u2581new \u2581 Peer Address Ip ."], "bleu": 0.5374512308135861, "rouge_l": 0.8100102145045965}
{"id": 7126, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581is \u2581defined \u2581for \u2581JSON \u2581decoding \u2581of \u2581a \u2581 Options"], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581 json . Un a mr sha ler \u2581interface . \u2581// \u2581It \u2581parses \u2581time . Duration \u2581as \u2581strings ."], "bleu": 0.059261672579474046, "rouge_l": 0.17150890346766634}
{"id": 7128, "predictions": ["\u2581// \u2581 Unmarshal YAML \u2581implements \u2581the \u2581yaml . Unmarshaler \u2581interface \u2581for \u2581 Options ."], "references": ["\u2581// \u2581 Unmarshal YAML \u2581implements \u2581yaml . Un a mr sha ler \u2581interface . \u2581// \u2581It \u2581parses \u2581time . Duration \u2581as \u2581strings ."], "bleu": 0.2024453664093323, "rouge_l": 0.4660441426146011}
{"id": 6761, "predictions": ["\u2581// \u2581parseInt 64 \u2581converts \u2581the \u2581given \u2581bytes \u2581into \u2581a \u2581 64- bit \u2581integer ."], "references": ["\u2581// \u2581parseInt 64 \u2581treat s \u2581the \u2581given \u2581bytes \u2581as \u2581a \u2581big - endian , \u2581signed \u2581integer \u2581and \u2581// \u2581returns \u2581the \u2581result ."], "bleu": 0.14689890756841023, "rouge_l": 0.4807355516637478}
{"id": 6763, "predictions": ["\u2581// \u2581parse BigInt \u2581parses \u2581a \u2581big - endian \u2581integer \u2581into \u2581a \u2581big . Int ."], "references": ["\u2581// \u2581parse BigInt \u2581treat s \u2581the \u2581given \u2581bytes \u2581as \u2581a \u2581big - endian , \u2581signed \u2581integer \u2581and \u2581returns \u2581// \u2581the \u2581result ."], "bleu": 0.20303405745542988, "rouge_l": 0.47043701799485865}
{"id": 8008, "predictions": ["\u2581// \u2581 Seek With Cmp \u2581compares \u2581the \u2581 iterator \u2581and \u2581returns \u2581true \u2581if \u2581the \u2581 iterator \u2581is \u2581 unsafe ."], "references": ["\u2581// \u2581 Seek With Cmp \u2581moves \u2581 iterator \u2581to \u2581a \u2581provided \u2581item \u2581by \u2581using \u2581custom \u2581comparator"], "bleu": 0.2516441111691874, "rouge_l": 0.39684014869888473}
{"id": 7763, "predictions": ["\u2581// \u2581read Bosh Release \u2581reads \u2581the \u2581 Bosh \u2581release \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581read Bosh Release \u2581reads \u2581a \u2581 bosh \u2581release \u2581out \u2581of \u2581the \u2581given \u2581reader \u2581into \u2581a \u2581new \u2581// \u2581 bosh Release \u2581struct"], "bleu": 0.2302902990251662, "rouge_l": 0.4605704697986578}
{"id": 7928, "predictions": ["\u2581// \u2581 Subscribers \u2581returns \u2581the \u2581list \u2581of \u2581 email ."], "references": ["\u2581// \u2581 Subscribers \u2581returns \u2581a \u2581list \u2581of \u2581subscriber \u2581of \u2581a \u2581 mailing \u2581list ."], "bleu": 0.2880327380699664, "rouge_l": 0.6472148541114059}
{"id": 6389, "predictions": ["\u2581// \u2581 Call \u2581invokes \u2581the \u2581 One \u2581interface ."], "references": ["\u2581// Call \u2581checks \u2581the \u2581arguments \u2581and \u2581calls \u2581 Fn \u2581if \u2581they \u2581are \u2581valid"], "bleu": 0.11379288211086455, "rouge_l": 0.35209235209235207}
{"id": 6454, "predictions": ["\u2581// \u2581fix \u2581performs \u2581a \u2581 dot - encoded \u2581 type \u2581of \u2581 v \u2581and \u2581 v ."], "references": ["\u2581// \u2581 Fix \u2581coerce s \u2581types \u2581that \u2581cannot \u2581be \u2581formatted \u2581by \u2581message format \u2581to \u2581string"], "bleu": 0.07994607499472013, "rouge_l": 0.12642487046632125}
{"id": 6802, "predictions": ["\u2581// \u2581Create \u2581creates \u2581a \u2581new \u2581 container"], "references": ["\u2581// \u2581Create \u2581creates \u2581a \u2581 role \u2581if \u2581it \u2581doesn ' t \u2581exist \u2581yet . \u2581 Creating \u2581 roles \u2581is \u2581 idempotent \u2581// \u2581in \u2581the \u2581vault \u2581 api , \u2581so \u2581no"], "bleu": 0.02024397159183122, "rouge_l": 0.24302788844621512}
{"id": 6764, "predictions": ["\u2581// \u2581parse Bit String \u2581parses \u2581a \u2581string \u2581 slice \u2581into \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 BIT \u2581 STRING \u2581// \u2581parse Bit String \u2581parses \u2581an \u2581 ASN . 1 \u2581bit \u2581string \u2581from \u2581the \u2581given \u2581 byte \u2581 slice \u2581and \u2581returns \u2581it ."], "bleu": 0.21596990345101727, "rouge_l": 0.4765625}
{"id": 7238, "predictions": ["\u2581// \u2581Get \u2581retrieves \u2581the \u2581 entity \u2581with \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581cached \u2581vm . ByteCode , \u2581if \u2581available"], "bleu": 0.15537125692760353, "rouge_l": 0.3505747126436781}
{"id": 6936, "predictions": ["\u2581// \u2581next Network Adapter ID \u2581returns \u2581the \u2581next \u2581network \u2581 ID \u2581of \u2581the \u2581 VM ."], "references": ["\u2581// \u2581next Network Adapter ID \u2581returns \u2581the \u2581next \u2581available \u2581 ethernet \u2581 ID , \u2581re using \u2581 ids \u2581if \u2581// \u2581the \u2581 ethernet \u2581adapter \u2581has \u2581\" present \" \u2581equal \u2581to"], "bleu": 0.23178932956622444, "rouge_l": 0.49459459459459465}
{"id": 6672, "predictions": ["\u2581// \u2581 Token \u2581returns \u2581the \u2581 oauth 2. Token \u2581for \u2581the \u2581session ."], "references": ["\u2581// \u2581 Token \u2581implements \u2581 oauth 2. Token Source \u2581interface ."], "bleu": 0.3661926362999429, "rouge_l": 0.6768377253814147}
{"id": 7753, "predictions": ["\u2581// \u2581 List \u2581all \u2581 Bosh s \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581all Bosh Release Names \u2581returns \u2581a \u2581union \u2581of \u2581unique \u2581 BO SH \u2581release \u2581names \u2581across \u2581all \u2581// \u2581contained \u2581 BO SH \u2581 releases ."], "bleu": 0.04973446919131842, "rouge_l": 0.305}
{"id": 6364, "predictions": ["\u2581// Map Maker Maker \u2581implements \u2581 opentracing . go . Map Maker ."], "references": ["\u2581// \u2581 Func Map \u2581 get \u2581func \u2581maps \u2581from \u2581tmpl"], "bleu": 0.1135935489027116, "rouge_l": 0.2671532846715329}
{"id": 7694, "predictions": ["\u2581// \u2581Get \u2581returns \u2581a \u2581 conf \u2581object \u2581from \u2581the \u2581specified \u2581environment"], "references": ["\u2581// \u2581Get \u2581a \u2581 config"], "bleu": 0.18850319022747347, "rouge_l": 0.5362637362637362}
{"id": 6354, "predictions": ["\u2581// \u2581 ReadResponse \u2581reads \u2581 data \u2581from \u2581the \u2581given \u2581reader ."], "references": ["\u2581// \u2581 ReadResponse \u2581reads \u2581res \u2581from \u2581 r , \u2581or \u2581returns \u2581an \u2581error \u2581if \u2581no \u2581responses \u2581could \u2581be \u2581// \u2581read ."], "bleu": 0.1436507942780557, "rouge_l": 0.35499515033947615}
{"id": 7304, "predictions": ["\u2581// \u2581HTTP \u2581sends \u2581a \u2581handler \u2581to \u2581 Sentinel ."], "references": ["\u2581// \u2581HTTP \u2581creates \u2581a \u2581HTTP \u2581server \u2581and \u2581registers \u2581it \u2581with \u2581the \u2581 sentinel ."], "bleu": 0.12673978475914355, "rouge_l": 0.41838134430727025}
{"id": 7059, "predictions": ["\u2581// \u2581Convert \u2581a \u2581list \u2581of \u2581 runes \u2581to \u2581a \u2581 slice \u2581of \u2581 runes ."], "references": ["\u2581// Repeated \u2581combination \u2581generator \u2581for \u2581int \u2581 slice"], "bleu": 0.11633270842295028, "rouge_l": 0.2760180995475113}
{"id": 6799, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581 PKI \u2581backend \u2581from \u2581the \u2581 Vault \u2581backend"], "references": ["\u2581// \u2581 PKI \u2581management ."], "bleu": 0.14949751774990683, "rouge_l": 0.36237623762376237}
{"id": 7739, "predictions": ["\u2581// \u2581 RunCommand \u2581runs \u2581the \u2581command \u2581with \u2581the \u2581given \u2581arguments \u2581and \u2581args ."], "references": ["\u2581// \u2581 RunCommand \u2581runs \u2581cmd \u2581on \u2581file"], "bleu": 0.26584835766658776, "rouge_l": 0.42287694974003465}
{"id": 6909, "predictions": ["\u2581// \u2581 select ToValue \u2581converts \u2581a \u2581 sql \u2581into \u2581a \u2581 slice \u2581of \u2581 type \u2581 type ."], "references": ["\u2581// \u2581 select ToValue \u2581returns \u2581a \u2581single \u2581value \u2581fetched \u2581from \u2581rows ."], "bleu": 0.2061477352156375, "rouge_l": 0.4149659863945578}
{"id": 7551, "predictions": ["\u2581// \u2581 New Transaction Result Result \u2581returns \u2581a \u2581new \u2581transaction \u2581result \u2581result ."], "references": ["\u2581// \u2581 New Transaction Result Result \u2581creates \u2581a \u2581new \u2581 Transaction Result Result ."], "bleu": 0.45494972964213315, "rouge_l": 0.6622436670687575}
{"id": 6910, "predictions": ["\u2581// \u2581 GetString ByName \u2581returns \u2581the \u2581list \u2581of \u2581all \u2581fields \u2581in \u2581the \u2581 DB ."], "references": ["\u2581// \u2581 fieldIndex ByName \u2581returns \u2581the \u2581nested \u2581field \u2581corresponding \u2581to \u2581the \u2581index \u2581sequence ."], "bleu": 0.195647514979229, "rouge_l": 0.48577929465301484}
{"id": 6383, "predictions": ["\u2581// \u2581 Sign \u2581is \u2581a \u2581wrapper \u2581for \u2581 validating \u2581the \u2581 Service ."], "references": ["\u2581// \u2581 Sign \u2581sign s \u2581an \u2581HTTP \u2581request \u2581with \u2581the \u2581given \u2581 S 3 \u2581 keys \u2581for \u2581use \u2581on \u2581service \u2581 s ."], "bleu": 0.10089378895033659, "rouge_l": 0.31743278404163056}
{"id": 6495, "predictions": ["\u2581// \u2581 New Batch ing Writer \u2581returns \u2581a \u2581new \u2581 Batch ing Writer \u2581that \u2581will \u2581 write \u2581to \u2581the \u2581// \u2581given \u2581 data \u2581and \u2581 write \u2581to \u2581the \u2581underlying \u2581writer"], "references": ["\u2581// \u2581 New Batch ing Writer \u2581creates \u2581new \u2581 Batch ing Writer . \u2581If \u2581 With Scaling Interval \u2581is \u2581not \u2581specified , \u2581Default Scaling Interval \u2581value \u2581is \u2581used . \u2581If"], "bleu": 0.30149936581909087, "rouge_l": 0.4}
{"id": 6769, "predictions": ["\u2581// \u2581is Printable \u2581returns \u2581true \u2581if \u2581the \u2581 byte \u2581 slice \u2581is \u2581a \u2581 Printable \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581is Printable \u2581reports \u2581whether \u2581the \u2581given \u2581 b \u2581is \u2581in \u2581the \u2581 ASN . 1 \u2581 Printable String \u2581 set ."], "bleu": 0.15383211610387781, "rouge_l": 0.47213622291021673}
{"id": 7781, "predictions": ["\u2581// \u2581all JobName s \u2581returns \u2581a \u2581list \u2581of \u2581 zones \u2581in \u2581 this \u2581 slice ."], "references": ["\u2581// \u2581all JobName s \u2581returns \u2581a \u2581union \u2581of \u2581unique \u2581job \u2581names \u2581across \u2581both \u2581 BO SH \u2581 releases"], "bleu": 0.3359784727360691, "rouge_l": 0.523854961832061}
{"id": 6458, "predictions": ["\u2581// \u2581 From GRPC \u2581converts \u2581a \u2581 grpc \u2581error \u2581into \u2581a \u2581 Error ."], "references": ["\u2581// \u2581 From GRPC \u2581parses \u2581a \u2581gRPC \u2581error \u2581and \u2581returns \u2581an \u2581 Error"], "bleu": 0.30130404892785684, "rouge_l": 0.5965770171149144}
{"id": 7343, "predictions": ["\u2581// \u2581 Mutate \u2581sets \u2581the \u2581 Manage Offer Builder \u2581and \u2581 resolves \u2581the \u2581 Manage Offer Builder ."], "references": ["\u2581// \u2581 Mutate \u2581applies \u2581the \u2581provided \u2581 mutator s \u2581to \u2581 this \u2581builder ' s \u2581offer \u2581or \u2581operation ."], "bleu": 0.1425719486811826, "rouge_l": 0.37654320987654327}
{"id": 7351, "predictions": ["\u2581// \u2581 Hash \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Hash \u2581returns \u2581the \u2581hash \u2581of \u2581 this \u2581builder ' s \u2581transaction ."], "bleu": 0.4973403804814283, "rouge_l": 0.7281167108753316}
{"id": 7072, "predictions": ["\u2581// \u2581 New Password s \u2581returns \u2581a \u2581 slice \u2581of \u2581 Password s \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581password \u2581// \u2581of \u2581a \u2581 set \u2581of \u2581password"], "references": ["\u2581// Generate \u2581 n \u2581password s \u2581that \u2581 meet \u2581the \u2581given \u2581requirements"], "bleu": 0.07022952541634667, "rouge_l": 0.31633535004321517}
{"id": 8000, "predictions": ["\u2581// \u2581 Flush Session \u2581 flush es \u2581the \u2581session \u2581 data \u2581to \u2581the \u2581 active \u2581session ."], "references": ["\u2581// \u2581 Flush Session \u2581closes \u2581the \u2581current \u2581 barrier \u2581session \u2581and \u2581starts \u2581the \u2581new \u2581session . \u2581// \u2581The \u2581caller \u2581should \u2581provide \u2581the \u2581 destructor \u2581pointer \u2581for \u2581the \u2581new \u2581session ."], "bleu": 0.12890810515444284, "rouge_l": 0.4458471760797342}
{"id": 7311, "predictions": ["\u2581// \u2581 Json \u2581struct \u2581 type"], "references": ["\u2581// \u2581 Json \u2581is \u2581middleware \u2581to \u2581deserialize \u2581a \u2581JSON \u2581payload \u2581from \u2581the \u2581request \u2581// \u2581into \u2581the \u2581struct \u2581that \u2581is \u2581passed \u2581in . \u2581The \u2581resulting \u2581struct \u2581is \u2581then \u2581// \u2581validated ,"], "bleu": 0.007962190507940116, "rouge_l": 0.1983739837398374}
{"id": 7712, "predictions": ["\u2581// \u2581Add Row \u2581adds \u2581a \u2581row \u2581to \u2581the \u2581 table ."], "references": ["\u2581// \u2581Add Row \u2581 - \u2581Adds \u2581row \u2581to \u2581the \u2581 table ."], "bleu": 0.5789484299135017, "rouge_l": 0.7765205091937766}
{"id": 7678, "predictions": ["\u2581// \u2581Mono To RowKey F 32 \u2581converts \u2581a \u2581 64- bit \u2581float 32 \u2581to \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581Mono To Stereo F 32 \u2581converts \u2581a \u2581 mono \u2581stream \u2581into \u2581a \u2581 stereo \u2581one \u2581// \u2581by \u2581copying \u2581the \u2581 mono \u2581signal \u2581to \u2581both \u2581channels \u2581in \u2581an \u2581 interleaved"], "bleu": 0.19580106943542538, "rouge_l": 0.42468354430379746}
{"id": 7061, "predictions": ["\u2581// \u2581Convert \u2581a \u2581list \u2581of \u2581 items \u2581to \u2581a \u2581list \u2581of \u2581 items \u2581that \u2581are \u2581 left ."], "references": ["\u2581// Repeated \u2581perm t ation \u2581generator \u2581for \u2581int \u2581 slice"], "bleu": 0.07535838128770536, "rouge_l": 0.1506172839506173}
{"id": 6456, "predictions": ["\u2581// \u2581 GRPC Code ToType \u2581converts \u2581a \u2581 code \u2581 code \u2581to \u2581a \u2581 type \u2581 type ."], "references": ["\u2581// \u2581 GRPC Code ToType \u2581converts \u2581the \u2581gRPC \u2581error \u2581 code \u2581to \u2581an \u2581error \u2581 type \u2581or \u2581returns \u2581the \u2581// \u2581 Unknown \u2581 type \u2581if \u2581not \u2581possible ."], "bleu": 0.25861835288412083, "rouge_l": 0.5857338820301784}
{"id": 6810, "predictions": ["\u2581// \u2581 watch \u2581is \u2581called \u2581when \u2581the \u2581watcher \u2581is \u2581closed ."], "references": ["\u2581// \u2581goroutine \u2581that \u2581 cycles \u2581through \u2581the \u2581list \u2581of \u2581paths \u2581and \u2581checks \u2581for \u2581updates ."], "bleu": 0.09956647337521526, "rouge_l": 0.2993865030674847}
{"id": 6325, "predictions": ["\u2581// \u2581new Raw Client \u2581returns \u2581a \u2581new \u2581http . Client \u2581that \u2581will \u2581 connect \u2581to \u2581the \u2581// \u2581given \u2581 URL ."], "references": ["\u2581// \u2581new Raw Client \u2581creates \u2581an \u2581http \u2581package \u2581 Client \u2581taking \u2581into \u2581account \u2581both \u2581the \u2581parameters \u2581and \u2581package \u2581// \u2581variables ."], "bleu": 0.19692215902857169, "rouge_l": 0.42857142857142855}
{"id": 6488, "predictions": ["\u2581// \u2581 Map Filter \u2581filters \u2581a \u2581 filter \u2581that \u2581filters \u2581the \u2581 filter ."], "references": ["\u2581// \u2581 Map Filter \u2581 lift s \u2581the \u2581 filter \u2581to \u2581also \u2581work \u2581on \u2581maps . \u2581It \u2581lose s \u2581the \u2581 type \u2581// \u2581information \u2581of \u2581the \u2581 map \u2581fields"], "bleu": 0.11916777201071171, "rouge_l": 0.39383070301291256}
{"id": 7893, "predictions": ["\u2581// \u2581discover s \u2581the \u2581message \u2581stream \u2581and \u2581 close \u2581all \u2581the \u2581 inbound \u2581messages ."], "references": ["\u2581// \u2581 Listen \u2581for \u2581a \u2581 Shutdown \u2581signal \u2581or \u2581 Outbound \u2581messages ."], "bleu": 0.12874330508144843, "rouge_l": 0.36180308422301305}
{"id": 7923, "predictions": ["\u2581// \u2581 merge In \u2581merges \u2581the \u2581 info \u2581into \u2581the \u2581 data \u2581in \u2581the \u2581 format \u2581of \u2581 data ."], "references": ["\u2581// \u2581 Merge \u2581in \u2581the \u2581given \u2581 info \u2581and \u2581public \u2581message \u2581parts \u2581into \u2581 this \u2581error"], "bleu": 0.1258220555845937, "rouge_l": 0.39684014869888473}
{"id": 7336, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581string \u2581value \u2581into \u2581a \u2581 slice ."], "references": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581provided \u2581as \u2581a \u2581 stellar \u2581\" amount \", \u2581 i . e . \u2581 A \u2581 64- bit \u2581signed \u2581integer \u2581// \u2581that \u2581represents \u2581a \u2581decimal \u2581number"], "bleu": 0.0481610413903312, "rouge_l": 0.2701107011070111}
{"id": 7797, "predictions": ["\u2581// \u2581 Struct Name \u2581returns \u2581the \u2581 name \u2581of \u2581a \u2581struct \u2581field \u2581in \u2581the \u2581 slice \u2581of \u2581 type ."], "references": ["\u2581// Struct Name \u2581 - \u2581gets \u2581struct \u2581 name \u2581for \u2581property"], "bleu": 0.1136930615245481, "rouge_l": 0.40848214285714285}
{"id": 6917, "predictions": ["\u2581// \u2581find PK Index \u2581finds \u2581the \u2581 PK \u2581index \u2581for \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581find PK Index \u2581returns \u2581the \u2581nested \u2581field \u2581corresponding \u2581to \u2581the \u2581index \u2581sequence \u2581of \u2581field \u2581of \u2581primary \u2581 key ."], "bleu": 0.190585840000859, "rouge_l": 0.45607476635514016}
{"id": 6777, "predictions": ["\u2581// \u2581 Mail Notifier \u2581returns \u2581a \u2581new \u2581 Mail Notifier ."], "references": ["\u2581// \u2581 User \u2581returns \u2581the \u2581 Mail \u2581 notifier ."], "bleu": 0.20504572236241866, "rouge_l": 0.5763779527559055}
{"id": 8101, "predictions": ["\u2581// \u2581 Post \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 data \u2581from \u2581the \u2581 Lease ."], "references": ["\u2581// Post \u2581 - \u2581handle \u2581a \u2581 post \u2581lease \u2581 call"], "bleu": 0.10123734869668824, "rouge_l": 0.3831658291457286}
{"id": 6665, "predictions": ["\u2581// \u2581 Random String \u2581returns \u2581a \u2581random \u2581string \u2581from \u2581the \u2581 length \u2581of \u2581the \u2581 length ."], "references": ["\u2581// \u2581 Random String \u2581generates \u2581a \u2581random \u2581 set \u2581of \u2581characters \u2581with \u2581the \u2581given \u2581 lenght ."], "bleu": 0.2646015952359329, "rouge_l": 0.6470588235294118}
{"id": 7318, "predictions": ["\u2581// \u2581 Renderer \u2581returns \u2581a \u2581 Handler \u2581that \u2581invokes \u2581the \u2581given \u2581options ."], "references": ["\u2581// \u2581 Renderer \u2581is \u2581a \u2581 Middleware \u2581that \u2581maps \u2581a \u2581 render . Render \u2581service \u2581into \u2581the \u2581 Mar t ini \u2581handler \u2581chain . \u2581An \u2581single \u2581 variadic \u2581 render"], "bleu": 0.06327734388841769, "rouge_l": 0.3473309608540925}
{"id": 6440, "predictions": ["\u2581// \u2581 ServiceInfo From Metadata \u2581returns \u2581the \u2581service \u2581metadata \u2581for \u2581the \u2581given \u2581metadata ."], "references": ["\u2581// \u2581 ServiceInfo From Metadata \u2581gets \u2581the \u2581service \u2581information \u2581from \u2581the \u2581metadata \u2581or \u2581returns \u2581 empty \u2581strings"], "bleu": 0.3182601175577037, "rouge_l": 0.5706860706860708}
{"id": 7283, "predictions": ["\u2581// \u2581Get HostIP s \u2581returns \u2581the \u2581 IP \u2581addresses \u2581of \u2581the \u2581 IP \u2581address"], "references": ["\u2581// \u2581Get HostIP s \u2581returns \u2581a \u2581list \u2581of \u2581 IP \u2581addresses \u2581of \u2581all \u2581host ' s \u2581interfaces ."], "bleu": 0.3697474574009216, "rouge_l": 0.5501002004008017}
{"id": 6599, "predictions": ["\u2581// \u2581 Attach C drom \u2581 attaches \u2581a \u2581 C drom \u2581device \u2581to \u2581the \u2581 app ."], "references": ["\u2581// Attach C drom \u2581 attaches \u2581a \u2581 CD \u2581 rom"], "bleu": 0.4112175645551036, "rouge_l": 0.6686967113276492}
{"id": 7896, "predictions": ["\u2581// \u2581 Groups \u2581returns \u2581a \u2581list \u2581of \u2581 groups \u2581that \u2581are \u2581 owned \u2581by \u2581the \u2581 domain ."], "references": ["\u2581// \u2581 Groups \u2581lists \u2581the \u2581 groups \u2581of \u2581a \u2581 domain"], "bleu": 0.194086232706272, "rouge_l": 0.5047281323877069}
{"id": 7743, "predictions": ["\u2581// \u2581 New SMTP \u2581 - \u2581 New \u2581 secure \u2581 mail"], "references": ["\u2581// New SMTP \u2581create \u2581new \u2581 SMTP"], "bleu": 0.15537125692760353, "rouge_l": 0.44202898550724634}
{"id": 6181, "predictions": ["\u2581// \u2581 pagination \u2581returns \u2581a \u2581 slice \u2581of \u2581 api \u2581params \u2581that \u2581match \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581 Re construct \u2581query \u2581from \u2581flatten \u2581values"], "bleu": 0.08961672320242714, "rouge_l": 0.16531165311653115}
{"id": 6426, "predictions": ["\u2581// \u2581 HTTPStatus ToType \u2581returns \u2581a \u2581 type \u2581that \u2581represents \u2581the \u2581 status \u2581 code \u2581for \u2581the \u2581// \u2581given \u2581 status \u2581 code ."], "references": ["\u2581// \u2581 HTTPStatus ToType \u2581infer s \u2581the \u2581error \u2581 Type \u2581from \u2581a \u2581HTTP \u2581 Status \u2581 code"], "bleu": 0.18157374168582124, "rouge_l": 0.45297029702970304}
{"id": 7723, "predictions": ["\u2581// \u2581 Decode OAuth 2 Code \u2581decodes \u2581the \u2581 auth 2 Code \u2581 code \u2581from \u2581a \u2581 code ."], "references": ["\u2581// Decode OAuth 2 Code \u2581inverse \u2581of \u2581 Encode OAuth 2 Code"], "bleu": 0.21951524426618454, "rouge_l": 0.538037486218302}
{"id": 6289, "predictions": ["\u2581// \u2581unique TypeName \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581Build \u2581unique \u2581 type \u2581 name \u2581by \u2581appending \u2581\" next \u2581available \u2581index \" \u2581to \u2581given \u2581prefix"], "bleu": 0.13008115034937162, "rouge_l": 0.30138339920948615}
{"id": 6427, "predictions": ["\u2581// \u2581 To HTTP \u2581converts \u2581a \u2581 json \u2581 code \u2581to \u2581a \u2581http . ResponseWriter ."], "references": ["\u2581// \u2581 To HTTP \u2581writes \u2581the \u2581error \u2581to \u2581the \u2581http \u2581response"], "bleu": 0.23287896954139942, "rouge_l": 0.45979899497487436}
{"id": 6683, "predictions": ["\u2581// \u2581 Exists \u2581checks \u2581if \u2581the \u2581 span \u2581 exists \u2581in \u2581the \u2581storage ."], "references": ["\u2581// \u2581 Exists \u2581implements \u2581storage \u2581interface ."], "bleu": 0.18207052811092136, "rouge_l": 0.5066445182724253}
{"id": 6825, "predictions": ["\u2581// \u2581 New Out Forward \u2581returns \u2581a \u2581new \u2581 Out Forward ."], "references": ["\u2581// \u2581 Out Forward \u2581... \u2581 recieve \u2581 Fluent RecordSet \u2581from \u2581channel , \u2581and \u2581send \u2581it \u2581to \u2581passed \u2581logger s \u2581until \u2581 success ."], "bleu": 0.08792719200156415, "rouge_l": 0.31443298969072164}
{"id": 7266, "predictions": ["\u2581// \u2581 Compile \u2581 compile s \u2581a \u2581 universal \u2581compiler ."], "references": ["\u2581// \u2581 Compile \u2581 satisfies \u2581the \u2581compiler . Compiler \u2581interface . \u2581It \u2581accepts \u2581an \u2581AST \u2581// \u2581created \u2581by \u2581parser . Parser , \u2581and \u2581returns \u2581vm . ByteCode \u2581or \u2581an \u2581error"], "bleu": 0.06481950337998618, "rouge_l": 0.2701107011070111}
{"id": 6487, "predictions": ["\u2581// \u2581 Slice Filter \u2581returns \u2581a \u2581 filter \u2581that \u2581filters \u2581the \u2581 filter \u2581with \u2581the \u2581given \u2581 filter ."], "references": ["\u2581// \u2581 Slice Filter \u2581 lift s \u2581the \u2581 filter \u2581to \u2581also \u2581work \u2581on \u2581slices . \u2581It \u2581lose s \u2581the \u2581// \u2581 type \u2581information \u2581of \u2581the \u2581 slice \u2581elements"], "bleu": 0.15673042886844732, "rouge_l": 0.4015799868334431}
{"id": 6986, "predictions": ["\u2581// \u2581 Str Length \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 length \u2581of \u2581a \u2581string"], "references": ["\u2581// \u2581 Str Length \u2581 param \u2581is \u2581a \u2581string , \u2581 length \u2581must \u2581be \u2581 n"], "bleu": 0.281628970004521, "rouge_l": 0.48751248751248744}
{"id": 7303, "predictions": ["\u2581// \u2581 Mux \u2581returns \u2581a \u2581new \u2581 net . Conn \u2581that \u2581 listen s \u2581on \u2581the \u2581 sentinel ."], "references": ["\u2581// \u2581 Mux \u2581creates \u2581a \u2581new \u2581network \u2581connection \u2581mux er \u2581and \u2581registers \u2581its \u2581server , \u2581// \u2581shutdown , \u2581and \u2581ignore \u2581error \u2581func s ."], "bleu": 0.11772825752965133, "rouge_l": 0.3188946975354743}
{"id": 7798, "predictions": ["\u2581// \u2581 TypeName \u2581returns \u2581the \u2581 type \u2581of \u2581a \u2581 type \u2581 type \u2581 type ."], "references": ["\u2581// TypeName \u2581 - \u2581returns \u2581valid \u2581 type \u2581 name \u2581for \u2581a \u2581give \u2581record"], "bleu": 0.17534823156623092, "rouge_l": 0.4048672566371681}
{"id": 6238, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 empty \u2581 slice \u2581containing \u2581the \u2581 contents \u2581of \u2581the \u2581response ."], "references": ["\u2581// \u2581 New Displayer \u2581creates \u2581a \u2581new \u2581 display er \u2581using \u2581the \u2581response \u2581 body ."], "bleu": 0.21479172459878051, "rouge_l": 0.5350877192982456}
{"id": 6603, "predictions": ["\u2581// \u2581 Attach Volume \u2581 attaches \u2581a \u2581volume \u2581to \u2581the \u2581specified \u2581volume ."], "references": ["\u2581// Attach Volume \u2581 attaches \u2581a \u2581volume"], "bleu": 0.44710186192584195, "rouge_l": 0.7400346620450605}
{"id": 7381, "predictions": ["\u2581// \u2581 Ledger Key \u2581returns \u2581the \u2581 ledger \u2581 key \u2581for \u2581the \u2581 ledger ."], "references": ["\u2581// \u2581 Ledger Key \u2581returns \u2581the \u2581 key \u2581for \u2581the \u2581 ledger \u2581entry \u2581that \u2581was \u2581changed \u2581// \u2581in \u2581` change `."], "bleu": 0.49007798762481025, "rouge_l": 0.6472148541114059}
{"id": 7176, "predictions": ["\u2581// \u2581 Seek \u2581implements \u2581the \u2581 bill y . ReadWrite er \u2581interface \u2581for \u2581 ReadWrite Seek er ."], "references": ["\u2581// \u2581 Seek \u2581implements \u2581the \u2581io . Seek er \u2581interface"], "bleu": 0.30826276460621843, "rouge_l": 0.6024691358024692}
{"id": 6257, "predictions": ["\u2581// \u2581Set \u2581returns \u2581the \u2581 set \u2581of \u2581parameters \u2581for \u2581the \u2581 Action"], "references": ["\u2581// \u2581Serialize \u2581action \u2581parameters"], "bleu": 0.11498759556447223, "rouge_l": 0.27477477477477474}
{"id": 6754, "predictions": ["\u2581// \u2581 New Semaphore \u2581creates \u2581a \u2581new \u2581 Semaphore \u2581with \u2581the \u2581given \u2581capacity ."], "references": ["\u2581// \u2581 New Semaphore \u2581is \u2581used \u2581to \u2581create \u2581a \u2581new \u2581 semaphore , \u2581 init al ised \u2581with \u2581a \u2581capacity \u2581// \u2581 this \u2581controls \u2581the \u2581number \u2581of \u2581locks \u2581which \u2581can"], "bleu": 0.1136281554171264, "rouge_l": 0.3839160839160839}
{"id": 7030, "predictions": ["\u2581// \u2581worker \u2581is \u2581used \u2581to \u2581 get \u2581a \u2581 randomize d \u2581 code \u2581for \u2581a \u2581single \u2581job ."], "references": ["\u2581// \u2581worker \u2581gets \u2581a \u2581job \u2581from \u2581the \u2581job _ pipe , \u2581passes \u2581it \u2581to \u2581a \u2581// \u2581sub worker \u2581and \u2581puts \u2581the \u2581job \u2581in \u2581the \u2581done _ pipe \u2581when \u2581finished ."], "bleu": 0.05879651544656695, "rouge_l": 0.23921568627450981}
{"id": 6568, "predictions": ["\u2581// \u2581 Associate Nic \u2581 attaches \u2581a \u2581virtual \u2581 nic \u2581to \u2581the \u2581specified \u2581 VM"], "references": ["\u2581// Associate Nic \u2581attach \u2581a \u2581 nic \u2581to \u2581load \u2581 balancer"], "bleu": 0.20149416157064579, "rouge_l": 0.6329442282749675}
{"id": 7922, "predictions": ["\u2581// \u2581 Wrap \u2581 wraps \u2581the \u2581given \u2581error \u2581and \u2581returns \u2581a \u2581new \u2581 Err Err Err Err Err Err Err Err Err Err Err Err Err Err Err Err Err"], "references": ["\u2581// \u2581 Wrap \u2581the \u2581given \u2581error \u2581in \u2581an \u2581err s . Err . \u2581If \u2581err \u2581is \u2581nil , \u2581 Wrap \u2581returns \u2581nil . \u2581// \u2581Use \u2581 Err . Wrapped Error"], "bleu": 0.13004800471424346, "rouge_l": 0.3}
{"id": 6251, "predictions": ["\u2581// \u2581fetch Audit Entries \u2581returns \u2581a \u2581list \u2581of \u2581 Audit Entry \u2581objects \u2581that \u2581are \u2581 set \u2581to \u2581// \u2581the \u2581 filter \u2581and \u2581 filter ."], "references": ["\u2581// \u2581Make \u2581an \u2581API \u2581 call \u2581and \u2581fetch \u2581the \u2581audit \u2581entries \u2581matching \u2581specified \u2581 criteria"], "bleu": 0.06646016289550873, "rouge_l": 0.2094420600858369}
{"id": 7729, "predictions": ["\u2581// \u2581 Handle \u2581registers \u2581the \u2581handler \u2581for \u2581the \u2581given \u2581pattern ."], "references": ["\u2581// Handle \u2581register \u2581handler"], "bleu": 0.1354599427337814, "rouge_l": 0.43675417661097854}
{"id": 6701, "predictions": ["\u2581// \u2581 Read Index Table \u2581reads \u2581the \u2581index \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Read Index Table \u2581 loads \u2581a \u2581index \u2581 table ."], "bleu": 0.4089601472043678, "rouge_l": 0.5833333333333334}
{"id": 6827, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 InMemory \u2581instance"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Logger ."], "bleu": 0.37991784282579627, "rouge_l": 0.6666666666666666}
{"id": 6561, "predictions": ["\u2581// \u2581 Update FirewallRule \u2581updates \u2581a \u2581 firewall \u2581rule"], "references": ["\u2581// Update FirewallRule \u2581updates \u2581a \u2581 firewall \u2581rule"], "bleu": 0.7825422900366437, "rouge_l": 0.9512670565302144}
{"id": 6729, "predictions": ["\u2581// \u2581 OpenFile \u2581returns \u2581a \u2581new \u2581 Seek Closer ."], "references": ["\u2581// \u2581 OpenFile \u2581open s \u2581file \u2581using \u2581HTTP \u2581protocol \u2581and \u2581uses \u2581` Range ` \u2581 headers \u2581// \u2581to \u2581 seek \u2581to \u2581various \u2581positions \u2581in \u2581the \u2581file , \u2581 this \u2581means"], "bleu": 0.03357453870906747, "rouge_l": 0.18345864661654135}
{"id": 7906, "predictions": ["\u2581// \u2581 Forwarder s \u2581returns \u2581a \u2581list \u2581of \u2581 forwarder s \u2581for \u2581the \u2581 domain ."], "references": ["\u2581// \u2581 Forwarder s \u2581lists \u2581the \u2581 forwarder s \u2581of \u2581a \u2581 domain"], "bleu": 0.34740317390504205, "rouge_l": 0.6324884792626728}
{"id": 7888, "predictions": ["\u2581// \u2581 Sur p Grab \u2581returns \u2581a \u2581 mocked \u2581 call \u2581that \u2581 wraps \u2581the \u2581 Accept - encoded \u2581// \u2581function ."], "references": ["\u2581// \u2581Returns \u2581a \u2581random \u2581 r ant"], "bleu": 0.06586656967644004, "rouge_l": 0.2281795511221945}
{"id": 7006, "predictions": ["\u2581// \u2581 Ok \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 json \u2581message \u2581for \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 Ok \u2581 Response \u2581 json"], "bleu": 0.14051676978912422, "rouge_l": 0.4867021276595744}
{"id": 7125, "predictions": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581the \u2581 Options \u2581into \u2581a \u2581JSON \u2581 byte \u2581array ."], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581of \u2581 json . Marshaler \u2581interface . \u2581// \u2581It \u2581marshal s \u2581string \u2581representation s \u2581of \u2581time . Duration ."], "bleu": 0.08985672276228264, "rouge_l": 0.2670753064798599}
{"id": 7068, "predictions": ["\u2581// \u2581Make Requirements \u2581returns \u2581a \u2581 Password \u2581password \u2581from \u2581the \u2581given \u2581// \u2581password ."], "references": ["\u2581// Generate \u2581password \u2581requirements \u2581from \u2581an \u2581existing \u2581password ."], "bleu": 0.13834368456410945, "rouge_l": 0.45252225519287836}
{"id": 6392, "predictions": ["\u2581// \u2581 Exec \u2581executes \u2581the \u2581 Exec Exec \u2581function \u2581with \u2581the \u2581given \u2581 ast ."], "references": ["\u2581// Exec \u2581executes \u2581the \u2581XPath \u2581expression , \u2581 xp , \u2581against \u2581the \u2581tree , \u2581 t , \u2581with \u2581the \u2581// namespace \u2581mappings , \u2581 ns , \u2581and \u2581returns \u2581the \u2581result"], "bleu": 0.07610397786452734, "rouge_l": 0.3353951890034364}
{"id": 6941, "predictions": ["\u2581// \u2581new Archive \u2581creates \u2581a \u2581new \u2581archive ."], "references": ["\u2581// \u2581 New Archive \u2581uses \u2581 7 z \u2581to \u2581extract \u2581a \u2581list \u2581of \u2581files \u2581in \u2581 . 7 z \u2581archive"], "bleu": 0.04709238035176905, "rouge_l": 0.26521739130434785}
{"id": 6453, "predictions": ["\u2581// \u2581 Format \u2581formats \u2581a \u2581string \u2581with \u2581a \u2581formatted \u2581string ."], "references": ["\u2581// \u2581 Format \u2581formats \u2581the \u2581values \u2581into \u2581the \u2581provided \u2581string"], "bleu": 0.33180774028439425, "rouge_l": 0.4803149606299213}
{"id": 6677, "predictions": ["\u2581// \u2581 getBucket Token \u2581returns \u2581the \u2581 token \u2581for \u2581the \u2581 token ."], "references": ["\u2581// \u2581 RandomAccess Token \u2581generate \u2581 Access \u2581 Token \u2581with \u2581given \u2581 key \u2581and \u2581generated \u2581hash \u2581of \u2581 length \u2581 64."], "bleu": 0.08079339148488096, "rouge_l": 0.2821461609620721}
{"id": 7206, "predictions": ["\u2581// \u2581tx \u2581selects \u2581 Omni - related \u2581 status \u2581 code \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581Executes \u2581what ' s \u2581in \u2581st . s a"], "bleu": 0.07994607499472013, "rouge_l": 0.15541401273885352}
{"id": 6526, "predictions": ["\u2581// \u2581 New Status Policy \u2581returns \u2581a \u2581new \u2581 status \u2581policy"], "references": ["\u2581// \u2581 New Status Policy \u2581returns \u2581a \u2581 status \u2581policy \u2581that \u2581assigns \u2581relative \u2581// \u2581severity \u2581in \u2581acc or dance \u2581with \u2581a \u2581user - configurable \u2581prior it ised \u2581 slice ."], "bleu": 0.1306401545111602, "rouge_l": 0.45018450184501846}
{"id": 6346, "predictions": ["\u2581// \u2581 New Local Engine \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Local Engine ."], "references": ["\u2581// \u2581 New Local Engine \u2581creates \u2581and \u2581returns \u2581an \u2581instance \u2581of \u2581 Local Engine \u2581configured \u2581with \u2581// \u2581 config ."], "bleu": 0.3873479811032991, "rouge_l": 0.6841121495327103}
{"id": 7127, "predictions": ["\u2581// \u2581 Marshal YAML \u2581marshal s \u2581the \u2581 Options \u2581into \u2581a \u2581JSON \u2581representation \u2581of \u2581the \u2581// \u2581options ."], "references": ["\u2581// \u2581 Marshal YAML \u2581implements \u2581of \u2581yaml . Marshaler \u2581interface . \u2581// \u2581It \u2581marshal s \u2581string \u2581representation s \u2581of \u2581time . Duration ."], "bleu": 0.1848597563811541, "rouge_l": 0.42957746478873243}
{"id": 8060, "predictions": ["\u2581// \u2581HTTP \u2581 Handler \u2581for \u2581 api"], "references": ["\u2581// \u2581HTTP \u2581returns \u2581a \u2581handler \u2581that \u2581will \u2581check \u2581each \u2581request ' s \u2581method \u2581against \u2581a \u2581// \u2581 predefined \u2581whitelist . \u2581If \u2581the \u2581request ' s \u2581method \u2581is \u2581not \u2581part \u2581of"], "bleu": 0.009828281634510862, "rouge_l": 0.14581673306772908}
{"id": 6787, "predictions": ["\u2581// \u2581 Load CACert File \u2581 loads \u2581a \u2581certificate \u2581from \u2581the \u2581given \u2581certificate ."], "references": ["\u2581// \u2581 Load CACert File \u2581reads \u2581in \u2581a \u2581 CA \u2581cert \u2581file \u2581that \u2581may \u2581contain \u2581multiple \u2581 certs \u2581// \u2581and \u2581gives \u2581you \u2581back \u2581a \u2581proper \u2581 x 509. Cert Pool"], "bleu": 0.11095267705942849, "rouge_l": 0.2986013986013986}
{"id": 6759, "predictions": ["\u2581// \u2581parse Bool \u2581parses \u2581a \u2581string \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581We \u2581start \u2581by \u2581dealing \u2581with \u2581each \u2581of \u2581the \u2581primitive \u2581types \u2581in \u2581 turn . \u2581// \u2581 BOOLEAN"], "bleu": 0.08176074349645106, "rouge_l": 0.18807810894141833}
{"id": 7049, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581 view \u2581to \u2581the \u2581 router s ."], "references": ["\u2581// \u2581Add \u2581a \u2581 router \u2581to \u2581list"], "bleu": 0.20098339913206323, "rouge_l": 0.552536231884058}
{"id": 6785, "predictions": ["\u2581// \u2581Save User \u2581saves \u2581a \u2581user \u2581to \u2581a \u2581 DB"], "references": ["\u2581// \u2581Save User \u2581adds \u2581a \u2581new \u2581user , \u2581replacing \u2581if \u2581the \u2581same \u2581 username \u2581is \u2581in \u2581use ."], "bleu": 0.12125382337993895, "rouge_l": 0.40757238307349664}
{"id": 6801, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581service \u2581instance"], "references": ["\u2581// \u2581 New \u2581takes \u2581a \u2581configuration \u2581and \u2581returns \u2581a \u2581configured \u2581service ."], "bleu": 0.22374550494929327, "rouge_l": 0.5791139240506329}
{"id": 6352, "predictions": ["\u2581// \u2581 RateLimit \u2581returns \u2581a \u2581channel \u2581that \u2581will \u2581be \u2581sent \u2581to \u2581the \u2581channel ."], "references": ["\u2581// \u2581 RateLimit \u2581 consume s \u2581messages \u2581from \u2581the \u2581messages \u2581channel \u2581and \u2581limits \u2581the \u2581 rate \u2581at \u2581// \u2581which \u2581they \u2581are \u2581produced \u2581to \u2581the \u2581channel \u2581returned \u2581by \u2581 this \u2581function"], "bleu": 0.07845539033952299, "rouge_l": 0.2986013986013986}
{"id": 7929, "predictions": ["\u2581// \u2581 Mail ing Lists \u2581returns \u2581a \u2581list \u2581of \u2581 Mail ing List ."], "references": ["\u2581// \u2581 Mail ing Lists \u2581lists \u2581the \u2581 mailing \u2581lists \u2581of \u2581a \u2581 domain"], "bleu": 0.35831291876413535, "rouge_l": 0.5}
{"id": 6254, "predictions": ["\u2581// \u2581extract Unique \u2581returns \u2581a \u2581 slice \u2581of \u2581 Audit Entry \u2581from \u2581the \u2581given \u2581 slice \u2581of \u2581// \u2581 Audit Entry \u2581and \u2581 slice \u2581of \u2581entries ."], "references": ["\u2581// \u2581Extract \u2581unique \u2581audit \u2581entries \u2581from \u2581the \u2581newly \u2581received \u2581list \u2581by \u2581 comparing \u2581the \u2581 href \u2581of \u2581audit \u2581entries \u2581// \u2581in \u2581the \u2581old \u2581list ."], "bleu": 0.07987276352377326, "rouge_l": 0.30984126984126986}
{"id": 7192, "predictions": ["\u2581// \u2581 Replace \u2581the \u2581 data \u2581and \u2581 b"], "references": ["\u2581/** \u2581* \u2581 squeeze \u2581 Performs \u2581a \u2581 squeeze \u2581operation , \u2581using \u2581 B lake 2 b ' s \u2581 G \u2581function \u2581as \u2581the \u2581* \u2581internal \u2581 permutation \u2581* \u2581*"], "bleu": 0.01801259927371443, "rouge_l": 0.18697318007662836}
{"id": 6562, "predictions": ["\u2581// \u2581 Delete FirewallRule \u2581deletes \u2581a \u2581 firewall \u2581rule"], "references": ["\u2581// Delete FirewallRule \u2581deletes \u2581a \u2581 firewall \u2581rule"], "bleu": 0.7825422900366437, "rouge_l": 0.9512670565302144}
{"id": 7121, "predictions": ["\u2581// \u2581 Shutdown \u2581 graceful ly \u2581shut s \u2581down \u2581the \u2581server ."], "references": ["\u2581// \u2581 Shutdown \u2581 graceful ly \u2581stops \u2581all \u2581servers , \u2581by \u2581calling \u2581 Shutdown \u2581method \u2581on \u2581each \u2581of \u2581them ."], "bleu": 0.24969441749072047, "rouge_l": 0.41862745098039217}
{"id": 8100, "predictions": ["\u2581// \u2581 Delete \u2581is \u2581used \u2581to \u2581delete \u2581a \u2581 write \u2581 call \u2581to \u2581the \u2581lease ."], "references": ["\u2581// Delete \u2581 - \u2581handle \u2581a \u2581delete \u2581lease \u2581 call"], "bleu": 0.1332358437599213, "rouge_l": 0.4013157894736842}
{"id": 7854, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581a \u2581JSON \u2581representation \u2581of \u2581the \u2581task ."], "references": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581 this \u2581object \u2581to \u2581a \u2581JSON \u2581structure"], "bleu": 0.18876091382663038, "rouge_l": 0.37770897832817335}
{"id": 8111, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581agent \u2581and \u2581runs \u2581the \u2581 Agent ' s \u2581 status ."], "references": ["\u2581// Run \u2581 - \u2581 this \u2581begins \u2581the \u2581running \u2581of \u2581an \u2581agent ' s \u2581async \u2581process"], "bleu": 0.1332358437599213, "rouge_l": 0.375}
{"id": 7642, "predictions": ["\u2581// \u2581 Safe Unmarshal Base 64 \u2581decodes \u2581the \u2581 Base 64 \u2581encoded \u2581 64 \u2581encoded \u2581string"], "references": ["\u2581// \u2581 Safe Unmarshal Base 64 \u2581first \u2581decodes \u2581the \u2581provided \u2581reader \u2581from \u2581base 64 \u2581before \u2581decoding \u2581the \u2581 xdr \u2581// \u2581into \u2581the \u2581provided \u2581destination . \u2581Also \u2581ensures \u2581that \u2581the \u2581reader"], "bleu": 0.17465195268244285, "rouge_l": 0.41216216216216217}
{"id": 6480, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 periodic \u2581 Start \u2581loop , \u2581and \u2581starts \u2581the \u2581metrics ."], "references": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581stat \u2581process \u2581that \u2581will \u2581log \u2581relevant \u2581memory - related \u2581stats \u2581// \u2581to \u2581 ctx , \u2581at \u2581an \u2581interval \u2581determined \u2581by \u2581interval ."], "bleu": 0.15679201229434211, "rouge_l": 0.3556851311953353}
{"id": 7941, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Node Table ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581node table \u2581instance"], "bleu": 0.24808415001701817, "rouge_l": 0.4535315985130111}
{"id": 6767, "predictions": ["\u2581// \u2581parse \u2581the \u2581time \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581parse Generalized Time \u2581parses \u2581the \u2581 Generalized Time \u2581from \u2581the \u2581given \u2581 byte \u2581 slice \u2581// \u2581and \u2581returns \u2581the \u2581resulting \u2581time ."], "bleu": 0.1371350838389268, "rouge_l": 0.4977334542157752}
{"id": 7155, "predictions": ["\u2581// \u2581 Hashed Path \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581private \u2581 path"], "references": ["\u2581// \u2581 Hashed Path \u2581returns \u2581a \u2581 URL \u2581 path \u2581with \u2581hash \u2581injected \u2581into \u2581the \u2581 filename ."], "bleu": 0.2943554983433483, "rouge_l": 0.5642343268242548}
{"id": 7123, "predictions": ["\u2581// \u2581 New Static Files Handler \u2581returns \u2581a \u2581new \u2581http . Handler \u2581that \u2581serves \u2581 content \u2581from \u2581// \u2581the \u2581http . Handler ."], "references": ["\u2581// \u2581 New Static Files Handler \u2581serves \u2581a \u2581file \u2581under \u2581specified \u2581filesystem \u2581if \u2581it \u2581// \u2581can \u2581be \u2581opened , \u2581otherwise \u2581it \u2581serves \u2581HTTP \u2581from \u2581a \u2581specified \u2581handler ."], "bleu": 0.22056343452565072, "rouge_l": 0.3853442830069488}
{"id": 7900, "predictions": ["\u2581// \u2581 Clean Url \u2581returns \u2581the \u2581 url \u2581of \u2581the \u2581given \u2581 url ."], "references": ["\u2581// \u2581 Clean Url \u2581check \u2581the \u2581character es \u2581in \u2581 url \u2581and \u2581parser \u2581it \u2581with \u2581 url . Parse . \u2581// \u2581If \u2581 url \u2581is \u2581ok \u2581return \u2581one \u2581string \u2581with"], "bleu": 0.11809259173826657, "rouge_l": 0.42657342657342656}
{"id": 6753, "predictions": ["\u2581// \u2581 Reduce \u2581returns \u2581the \u2581 Reduce \u2581 sort \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Reduce \u2581 reduce s \u2581the \u2581ResultSet \u2581into \u2581buckets \u2581defined \u2581by \u2581the \u2581given \u2581interval"], "bleu": 0.17334889155550148, "rouge_l": 0.3696969696969697}
{"id": 7077, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581 Param Set \u2581into \u2581a \u2581 Param Set ."], "references": ["\u2581// \u2581Parse \u2581parses \u2581parameter \u2581definitions \u2581from \u2581the \u2581 map ."], "bleu": 0.21972813874997157, "rouge_l": 0.5343065693430658}
{"id": 7965, "predictions": ["\u2581// \u2581 New Level \u2581returns \u2581a \u2581new \u2581 Level \u2581for \u2581the \u2581given \u2581 pos ."], "references": ["\u2581// \u2581 New Level \u2581returns \u2581a \u2581random \u2581level \u2581for \u2581the \u2581next \u2581node"], "bleu": 0.41211837513230265, "rouge_l": 0.6047087980173481}
{"id": 7400, "predictions": ["\u2581// \u2581 Mutate Set Options \u2581sets \u2581the \u2581 set \u2581options \u2581for \u2581the \u2581 set \u2581of \u2581options"], "references": ["\u2581// \u2581 Mutate Set Options \u2581for \u2581 Threshold s \u2581sets \u2581the \u2581Set Options Op ' s \u2581 thresholds \u2581fields"], "bleu": 0.2844815007374715, "rouge_l": 0.4501845018450184}
{"id": 7081, "predictions": ["\u2581// \u2581 Device Presence \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 Device Presence Response \u2581// \u2581for \u2581a \u2581given \u2581device \u2581 ID ."], "references": ["\u2581// \u2581 Device Presence \u2581returns \u2581 data \u2581about \u2581presence \u2581of \u2581a \u2581 data"], "bleu": 0.17268932789342512, "rouge_l": 0.45692883895131087}
{"id": 6418, "predictions": ["\u2581// \u2581Register \u2581a \u2581new \u2581error \u2581with \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581Register \u2581registers \u2581a \u2581new \u2581error \u2581 type"], "bleu": 0.27901593935858265, "rouge_l": 0.5669144981412639}
{"id": 7196, "predictions": ["\u2581// \u2581 Load Reader \u2581 loads \u2581a \u2581 GCE \u2581 type \u2581from \u2581a \u2581reader ."], "references": ["\u2581// \u2581 Load Reader \u2581takes \u2581a \u2581io . Reader \u2581and \u2581 compile s \u2581it \u2581into \u2581vm . ByteCode"], "bleu": 0.21081220624616523, "rouge_l": 0.41739980449657876}
{"id": 6570, "predictions": ["\u2581// \u2581 Delete Balance d Nic \u2581deletes \u2581the \u2581 balance d nic \u2581 balance \u2581from \u2581the \u2581given \u2581 ID"], "references": ["\u2581// Delete Balance d Nic \u2581removes \u2581a \u2581 balanced \u2581 nic"], "bleu": 0.20760470031302655, "rouge_l": 0.4902411021814007}
{"id": 7328, "predictions": ["\u2581// \u2581 Trust \u2581returns \u2581the \u2581trust \u2581 set \u2581of \u2581 Change \u2581trust s \u2581for \u2581the \u2581given \u2581 code ."], "references": ["\u2581// \u2581 Trust \u2581is \u2581a \u2581 helper \u2581that \u2581creates \u2581 Change Trust Builder"], "bleu": 0.1481394578697113, "rouge_l": 0.38812301166489926}
{"id": 7912, "predictions": ["\u2581// \u2581 Aliases \u2581returns \u2581the \u2581 aliases \u2581for \u2581the \u2581account ."], "references": ["\u2581// \u2581 Aliases \u2581lists \u2581the \u2581 aliases \u2581of \u2581an \u2581account"], "bleu": 0.317023313852343, "rouge_l": 0.6724409448818898}
{"id": 8104, "predictions": ["\u2581// \u2581 Init From HTTPRequest \u2581 init s \u2581the \u2581 data \u2581from \u2581the \u2581request ."], "references": ["\u2581// Init From HTTPRequest \u2581 - \u2581initialize \u2581a \u2581lease \u2581from \u2581the \u2581http \u2581request \u2581object \u2581 body"], "bleu": 0.26931261122575345, "rouge_l": 0.5131440588853837}
{"id": 7889, "predictions": ["\u2581// \u2581 Week ly R ants \u2581returns \u2581the \u2581 availability \u2581of \u2581the \u2581 container ."], "references": ["\u2581// \u2581Returns \u2581the \u2581 r ants \u2581 tagged \u2581for \u2581' weekly '"], "bleu": 0.12874330508144843, "rouge_l": 0.30235439900867406}
{"id": 6964, "predictions": ["\u2581// \u2581Set MemorySize \u2581sets \u2581the \u2581 VM ' s \u2581 contents \u2581of \u2581the \u2581 VM ."], "references": ["\u2581// \u2581Set MemorySize \u2581sets \u2581memory \u2581 size \u2581in \u2581 mega bytes . \u2581 VM \u2581has \u2581to \u2581be \u2581 powered \u2581off \u2581in \u2581order \u2581to \u2581change \u2581 this \u2581parameter ."], "bleu": 0.12716347944405648, "rouge_l": 0.38991477272727276}
{"id": 7887, "predictions": ["\u2581// \u2581 Search \u2581returns \u2581a \u2581list \u2581of \u2581 plugins \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Search \u2581for \u2581 r ants \u2581matching \u2581the \u2581 search \u2581term"], "bleu": 0.17609282679116184, "rouge_l": 0.4535315985130111}
{"id": 6786, "predictions": ["\u2581// \u2581 DeleteUser \u2581removes \u2581a \u2581user \u2581from \u2581the \u2581 DB ."], "references": ["\u2581// \u2581 DeleteUser \u2581removes \u2581a \u2581user . \u2581 ErrNotFound \u2581is \u2581returned \u2581if \u2581the \u2581user \u2581isn ' t \u2581found ."], "bleu": 0.27242105410537076, "rouge_l": 0.5088633993743482}
{"id": 6447, "predictions": ["\u2581// \u2581 Section \u2581 sort . Interface ."], "references": ["\u2581// \u2581returns \u2581true \u2581if \u2581 i \u2581before \u2581 j"], "bleu": 0.16829946711936866, "rouge_l": 0.34923664122137404}
{"id": 7740, "predictions": ["\u2581// \u2581Remove Duplicates \u2581removes \u2581all \u2581elements \u2581in \u2581the \u2581given \u2581list ."], "references": ["\u2581// \u2581Remove Duplicates \u2581removes \u2581duplicate \u2581 items \u2581from \u2581a \u2581list"], "bleu": 0.33180774028439425, "rouge_l": 0.4803149606299213}
{"id": 6560, "predictions": ["\u2581// \u2581Create FirewallRule \u2581creates \u2581a \u2581new \u2581 firewall"], "references": ["\u2581// Create FirewallRule \u2581creates \u2581a \u2581 firewall \u2581rule"], "bleu": 0.3688939732334406, "rouge_l": 0.75}
{"id": 7692, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581 Mail Service"], "references": ["\u2581// Send \u2581 env o i e \u2581un \u2581 email"], "bleu": 0.14323145079400493, "rouge_l": 0.28818897637795277}
{"id": 6796, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Vault Factory"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581configured \u2581 Vault \u2581factory ."], "bleu": 0.5662068475521798, "rouge_l": 0.7858293075684382}
{"id": 7173, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581 Time \u2581representation \u2581of \u2581the \u2581time ."], "references": ["\u2581// \u2581MarshalJSON \u2581implements \u2581the \u2581 json . Marshaler \u2581interface . \u2581// \u2581The \u2581time \u2581is \u2581a \u2581quoted \u2581string \u2581in \u2581RFC \u2581 3339 \u2581 format , \u2581with \u2581sub - second \u2581precision \u2581added"], "bleu": 0.036450685428881746, "rouge_l": 0.22509225092250923}
{"id": 8021, "predictions": ["\u2581// \u2581 WriteTo \u2581implements \u2581 Config . WriteTo ."], "references": ["\u2581// \u2581 WriteTo \u2581function \u2581writes \u2581the \u2581configuration \u2581to \u2581a \u2581new \u2581file . \u2581This \u2581function \u2581// \u2581re - organize s \u2581the \u2581configuration \u2581and \u2581deletes \u2581all \u2581the \u2581comments ."], "bleu": 0.0393440467350332, "rouge_l": 0.2548036758563075}
{"id": 6713, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 K ero . K \u2581 computing \u2581the \u2581 k 3 th \u2581 key"], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581pointer \u2581to \u2581an \u2581instance \u2581of \u2581 k ace \u2581loaded \u2581with \u2581a \u2581common \u2581// \u2581initial sms \u2581 trie \u2581based \u2581on \u2581the \u2581provided \u2581 map . \u2581"], "bleu": 0.17232681928681598, "rouge_l": 0.3860759493670886}
{"id": 6674, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581daemon \u2581and \u2581closes \u2581the \u2581 container ."], "references": ["\u2581// \u2581 Close \u2581implements \u2581io . Closer \u2581interface ."], "bleu": 0.2044800736021839, "rouge_l": 0.39102564102564097}
{"id": 7982, "predictions": ["\u2581// \u2581Get Node \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581Get Node \u2581implements \u2581lookup \u2581of \u2581an \u2581item \u2581and \u2581return \u2581its \u2581skip list \u2581 Node \u2581// \u2581This \u2581API \u2581enables \u2581to \u2581lookup \u2581an \u2581item \u2581without \u2581using \u2581a \u2581snapshot \u2581handle ."], "bleu": 0.06924687014714571, "rouge_l": 0.2579281183932347}
{"id": 6559, "predictions": ["\u2581// \u2581Get FirewallRule \u2581returns \u2581a \u2581 firewall \u2581rule"], "references": ["\u2581// Get FirewallRule \u2581gets \u2581a \u2581 firewall \u2581rule"], "bleu": 0.48549177170732344, "rouge_l": 0.75}
{"id": 6577, "predictions": ["\u2581// \u2581 Update Nic \u2581updates \u2581the \u2581 nic \u2581 VM \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Update Nic \u2581partial \u2581update \u2581of \u2581 nic \u2581properties"], "bleu": 0.24623953025272613, "rouge_l": 0.48157894736842105}
{"id": 7632, "predictions": ["\u2581// \u2581 Datetime For Switch \u2581renders \u2581the \u2581 lower \u2581 table \u2581 name"], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 S cp Statement Pl edges"], "bleu": 0.06205907210530273, "rouge_l": 0.27456864216054017}
{"id": 8071, "predictions": ["\u2581// \u2581 Classic \u2581creates \u2581a \u2581 classic \u2581 Mar t ini \u2581with \u2581the \u2581given \u2581 router ."], "references": ["\u2581// \u2581 Classic \u2581creates \u2581a \u2581 classic \u2581 Mar t ini \u2581with \u2581some \u2581basic \u2581default \u2581middleware \u2581 - \u2581 mar t ini . Logger , \u2581 mar t ini ."], "bleu": 0.33540967478176476, "rouge_l": 0.5674418604651164}
{"id": 6565, "predictions": ["\u2581// \u2581 Update Load balancer \u2581updates \u2581the \u2581 balancer \u2581 balancer \u2581for \u2581the \u2581given \u2581 id ."], "references": ["\u2581// Update Load balancer \u2581updates \u2581a \u2581load \u2581 balancer"], "bleu": 0.23909453161355018, "rouge_l": 0.5700934579439252}
{"id": 6920, "predictions": ["\u2581// \u2581default From Tag \u2581returns \u2581the \u2581default \u2581value \u2581for \u2581the \u2581tag ."], "references": ["\u2581// \u2581default From Tag \u2581returns \u2581a \u2581\" DEFAULT \u2581 ...\" \u2581keyword . \u2581// \u2581If \u2581\" default \" \u2581tag \u2581specified \u2581to \u2581struct \u2581field , \u2581it \u2581use \u2581as \u2581the \u2581default \u2581value ."], "bleu": 0.11365131166063829, "rouge_l": 0.3978260869565217}
{"id": 6935, "predictions": ["\u2581// \u2581 Disconnect \u2581 disconnect s \u2581the \u2581host \u2581from \u2581the \u2581 Host ."], "references": ["\u2581// \u2581 Disconnect \u2581 destroy s \u2581the \u2581state \u2581for \u2581a \u2581particular \u2581host \u2581instance . \u2581// \u2581// \u2581 Call \u2581 this \u2581function \u2581to \u2581 disconnect \u2581the \u2581host . \u2581 After \u2581you"], "bleu": 0.10292544445539085, "rouge_l": 0.3907473309608541}
{"id": 7284, "predictions": ["\u2581// \u2581Get Private HostIP s \u2581returns \u2581the \u2581 IP \u2581of \u2581the \u2581private \u2581 IP \u2581addresses"], "references": ["\u2581// \u2581Get Private HostIP s \u2581returns \u2581a \u2581list \u2581of \u2581host ' s \u2581private \u2581 IP \u2581addresses ."], "bleu": 0.4746750027854103, "rouge_l": 0.67983789260385}
{"id": 7045, "predictions": ["\u2581// \u2581 Text \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 content \u2581in \u2581the \u2581 content \u2581 type ."], "references": ["\u2581// \u2581 Text \u2581ret runs \u2581a \u2581 Template View \u2581 w itch \u2581uses \u2581 text \u2581 templates \u2581internally ."], "bleu": 0.14683250776815585, "rouge_l": 0.43033509700176364}
{"id": 7044, "predictions": ["\u2581// \u2581 Html \u2581returns \u2581the \u2581 html \u2581 content \u2581of \u2581the \u2581 content \u2581in \u2581the \u2581 content \u2581 type ."], "references": ["\u2581// \u2581 Html \u2581ret runs \u2581a \u2581 Template View \u2581 w itch \u2581uses \u2581HTML \u2581 templates \u2581internally ."], "bleu": 0.1352045976914347, "rouge_l": 0.3719512195121952}
{"id": 6184, "predictions": ["\u2581// \u2581clean Description \u2581 strip s \u2581the \u2581 description \u2581of \u2581the \u2581 model ."], "references": ["\u2581// \u2581clean s \u2581up \u2581 description , \u2581removing \u2581 blank \u2581lines \u2581and \u2581extra neo us \u2581 info"], "bleu": 0.13278644191165734, "rouge_l": 0.3804573804573805}
{"id": 7322, "predictions": ["\u2581// \u2581Basic \u2581 Authentication \u2581 Authentication"], "references": ["\u2581// \u2581Basic \u2581returns \u2581a \u2581 Handler \u2581that \u2581authenticate s \u2581via \u2581Basic \u2581 Auth . \u2581Writes \u2581a \u2581http . Status Unauthorized \u2581// \u2581if \u2581authentication \u2581fails"], "bleu": 0.01819992287248735, "rouge_l": 0.24063116370808674}
{"id": 7302, "predictions": ["\u2581// \u2581Register \u2581is \u2581used \u2581to \u2581register \u2581a \u2581 Sentinel ."], "references": ["\u2581// \u2581Register \u2581registers \u2581a \u2581server , \u2581its \u2581shutdown \u2581func , \u2581and \u2581ignore \u2581error \u2581func s ."], "bleu": 0.1034527442376832, "rouge_l": 0.2953995157384988}
{"id": 7120, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581all \u2581servers"], "references": ["\u2581// \u2581 Close \u2581stops \u2581all \u2581servers , \u2581by \u2581calling \u2581 Close \u2581method \u2581on \u2581each \u2581of \u2581them ."], "bleu": 0.07816888867940848, "rouge_l": 0.400262467191601}
{"id": 7644, "predictions": ["\u2581// \u2581 Send Amount \u2581returns \u2581the \u2581amount \u2581of \u2581 offers \u2581in \u2581the \u2581 path ."], "references": ["\u2581// \u2581 Send Amount \u2581returns \u2581the \u2581amount \u2581 spent , \u2581 den ominated \u2581in \u2581the \u2581source \u2581asset , \u2581in \u2581the \u2581// \u2581 course \u2581of \u2581 this \u2581 path \u2581 payment"], "bleu": 0.20485529000253205, "rouge_l": 0.5030927835051546}
{"id": 6815, "predictions": ["\u2581// \u2581 Catch \u2581 wraps \u2581the \u2581http . Handler \u2581interface ."], "references": ["\u2581// \u2581 Catch \u2581creates \u2581middleware \u2581that \u2581processes \u2581errors \u2581stored \u2581while \u2581 serving \u2581a \u2581// \u2581request . \u2581 Errors \u2581are \u2581passed \u2581to \u2581the \u2581callback , \u2581which \u2581should \u2581 write \u2581them \u2581to"], "bleu": 0.04334741445875218, "rouge_l": 0.22509225092250923}
{"id": 8121, "predictions": ["\u2581// \u2581 Write Image To HTTP \u2581writes \u2581the \u2581image \u2581to \u2581the \u2581http . ResponseWriter"], "references": ["\u2581// \u2581 Write Image To HTTP \u2581Sends \u2581an \u2581image \u2581via \u2581http ."], "bleu": 0.4546697236991713, "rouge_l": 0.7020460358056267}
{"id": 7935, "predictions": ["\u2581// \u2581 Stats \u2581returns \u2581stats \u2581for \u2581 this \u2581 container"], "references": ["\u2581// \u2581 Stats \u2581returns \u2581 allocator \u2581statistics \u2581// \u2581Returns \u2581 je malloc \u2581stats"], "bleu": 0.2923180730788836, "rouge_l": 0.5097493036211699}
{"id": 6569, "predictions": ["\u2581// \u2581Get Balance d Nic \u2581gets \u2581the \u2581 balance \u2581of \u2581the \u2581given \u2581 NIC \u2581with \u2581the \u2581given \u2581 id"], "references": ["\u2581// Get Balance d Nic \u2581gets \u2581a \u2581 balanced \u2581 nic"], "bleu": 0.20158074753947833, "rouge_l": 0.4902411021814007}
{"id": 6405, "predictions": ["\u2581// \u2581 Exec \u2581executes \u2581a \u2581node \u2581in \u2581the \u2581 map \u2581and \u2581returns \u2581a \u2581 map \u2581of \u2581 name \u2581// \u2581and \u2581 templates ."], "references": ["\u2581// Exec \u2581executes \u2581the \u2581XPath \u2581expression , \u2581 xp , \u2581against \u2581the \u2581tree , \u2581 t , \u2581with \u2581the \u2581// namespace \u2581mappings , \u2581 ns ."], "bleu": 0.08259716273008216, "rouge_l": 0.3633355393778954}
{"id": 6318, "predictions": ["\u2581// \u2581extract RedirectURL \u2581returns \u2581the \u2581 URL \u2581of \u2581the \u2581 RedirectURL"], "references": ["\u2581// \u2581extract RedirectURL \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581extracts \u2581the \u2581 Location \u2581header \u2581from \u2581a \u2581redirect \u2581// \u2581response . \u2581It \u2581returns \u2581nil \u2581if \u2581the \u2581header \u2581is \u2581missing , \u2581an"], "bleu": 0.049600265336077476, "rouge_l": 0.2701107011070111}
{"id": 6625, "predictions": ["\u2581// \u2581Add User To Group \u2581adds \u2581a \u2581user \u2581to \u2581the \u2581 group \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581Add User To Group \u2581adds \u2581a \u2581user \u2581to \u2581a \u2581 group"], "bleu": 0.5184341074271375, "rouge_l": 0.7607709750566894}
{"id": 6784, "predictions": ["\u2581// \u2581 Users \u2581returns \u2581a \u2581 User \u2581object \u2581from \u2581the \u2581 map \u2581of \u2581 keys ."], "references": ["\u2581// \u2581 Users \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581users ."], "bleu": 0.3708163623065084, "rouge_l": 0.6130653266331658}
{"id": 6485, "predictions": ["\u2581// \u2581 WithFields \u2581returns \u2581a \u2581new \u2581 empty \u2581 Interface ."], "references": ["\u2581// \u2581 WithFields \u2581filters \u2581the \u2581fields \u2581and \u2581passes \u2581them \u2581on \u2581to \u2581the \u2581wrapped \u2581logger s \u2581 WithFields"], "bleu": 0.1299236773467765, "rouge_l": 0.2750845546786922}
{"id": 6730, "predictions": ["\u2581// \u2581 RoundTrip \u2581implements \u2581 RoundTripper . RoundTrip ."], "references": ["\u2581// \u2581 RoundTrip \u2581 collect s \u2581response \u2581and \u2581error \u2581assuming \u2581fn \u2581has \u2581done \u2581// \u2581HTTP \u2581 round trip"], "bleu": 0.10218289380194193, "rouge_l": 0.27949599083619703}
{"id": 6593, "predictions": ["\u2581// \u2581Create Snapshot \u2581creates \u2581a \u2581new \u2581snapshot"], "references": ["\u2581// Create Snapshot \u2581creates \u2581a \u2581volume \u2581snapshot"], "bleu": 0.38260294162784475, "rouge_l": 0.7142857142857143}
{"id": 7233, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 class ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581 text ual \u2581representation \u2581of \u2581 this \u2581 ByteCode"], "bleu": 0.32898900112277923, "rouge_l": 0.5746971736204576}
{"id": 6359, "predictions": ["\u2581// \u2581 WriteTo \u2581implements \u2581io . Writer To \u2581interface . \u2581It \u2581serialize s \u2581the \u2581// \u2581message \u2581 email \u2581message \u2581to \u2581the \u2581wire \u2581 format ."], "references": ["\u2581// \u2581 WriteTo \u2581writes \u2581the \u2581message \u2581 ID \u2581to \u2581 w . \u2581// \u2581// \u2581This \u2581method \u2581 satisfies \u2581the \u2581io . Writer To \u2581interface ."], "bleu": 0.3226401831048377, "rouge_l": 0.36}
{"id": 6558, "predictions": ["\u2581// \u2581 List FirewallRule s \u2581returns \u2581a \u2581 firewall s \u2581for \u2581the \u2581given \u2581 firewall \u2581 ID ."], "references": ["\u2581// List FirewallRule s \u2581lists \u2581all \u2581 firewall \u2581rules"], "bleu": 0.1566384057330969, "rouge_l": 0.4728682170542636}
{"id": 7402, "predictions": ["\u2581// \u2581 Mutate Set Options \u2581sets \u2581the \u2581 set \u2581options \u2581for \u2581the \u2581 set \u2581of \u2581options ."], "references": ["\u2581// \u2581 Mutate Set Options \u2581for \u2581 Clear Flag \u2581sets \u2581the \u2581Set Options Op ' s \u2581 Clear Flags \u2581field"], "bleu": 0.2701207367992834, "rouge_l": 0.42620087336244544}
{"id": 7407, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581string \u2581into \u2581a \u2581 K P \u2581 K P \u2581 format ."], "references": ["\u2581// \u2581Parse \u2581constructs \u2581a \u2581new \u2581 K P \u2581from \u2581the \u2581provided \u2581string , \u2581which \u2581should \u2581be \u2581either \u2581// \u2581an \u2581address , \u2581or \u2581a \u2581seed . \u2581If \u2581the \u2581provided \u2581input \u2581is"], "bleu": 0.08064320421939998, "rouge_l": 0.2885135135135135}
{"id": 6601, "predictions": ["\u2581// \u2581 Detach C drom \u2581 detach es \u2581a \u2581single \u2581 C AAS \u2581file ."], "references": ["\u2581// Detach C drom \u2581 detach es \u2581a \u2581 CD \u2581 rom"], "bleu": 0.479548279896769, "rouge_l": 0.6802973977695167}
{"id": 7947, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581node \u2581 table ."], "references": ["\u2581// \u2581 Close \u2581 destroy s \u2581the \u2581node table"], "bleu": 0.3356891925037239, "rouge_l": 0.6666666666666666}
{"id": 7959, "predictions": ["\u2581// \u2581Remove \u2581removes \u2581the \u2581 key \u2581from \u2581the \u2581list"], "references": ["\u2581// \u2581Remove \u2581a \u2581 key \u2581from \u2581the \u2581node \u2581list"], "bleu": 0.4671379777282001, "rouge_l": 0.7777777777777778}
{"id": 7890, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581 data \u2581from \u2581a \u2581 username \u2581and \u2581password ."], "references": ["\u2581// \u2581Fetches \u2581the \u2581 userId \u2581given \u2581a \u2581valid \u2581 username"], "bleu": 0.13834368456410945, "rouge_l": 0.42957746478873243}
{"id": 7679, "predictions": ["\u2581// \u2581 Bit C networks \u2581computes \u2581the \u2581 minimal \u2581 center \u2581of \u2581the \u2581 data"], "references": ["\u2581// \u2581 Bit C rush \u2581 reduce s \u2581the \u2581resolution \u2581of \u2581the \u2581sample \u2581to \u2581the \u2581target \u2581bit \u2581depth \u2581// \u2581Note \u2581that \u2581bit \u2581 c rush er \u2581 effects \u2581are \u2581usually"], "bleu": 0.10845843803319692, "rouge_l": 0.3353951890034364}
{"id": 6792, "predictions": ["\u2581// \u2581Validate OU \u2581validates \u2581the \u2581certificate \u2581and \u2581checks \u2581if \u2581the \u2581certificate \u2581is \u2581valid"], "references": ["\u2581// \u2581Validate OU \u2581checks \u2581the \u2581 OU \u2581of \u2581a \u2581verified \u2581peer \u2581cert \u2581and \u2581 raises \u2581 403 \u2581if \u2581the \u2581 OU \u2581doesn ' t \u2581match \u2581any \u2581 OU \u2581in \u2581the"], "bleu": 0.06327734388841769, "rouge_l": 0.30391459074733096}
{"id": 6806, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581watcher \u2581and \u2581starts \u2581a \u2581channel ."], "references": ["\u2581// \u2581 Start \u2581begins \u2581 watching \u2581the \u2581files , \u2581sending \u2581notifications \u2581when \u2581files \u2581change . \u2581// \u2581It \u2581returns \u2581a \u2581channel \u2581that \u2581notifications \u2581are \u2581sent \u2581on ."], "bleu": 0.06928211471437327, "rouge_l": 0.3526011560693642}
{"id": 7752, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581the \u2581connection ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581message \u2581to \u2581 GCM \u2581 CC S \u2581server \u2581and \u2581returns \u2581the \u2581number \u2581of \u2581bytes \u2581written \u2581and \u2581any \u2581error \u2581encountered . \u2581// \u2581If \u2581 empty \u2581message"], "bleu": 0.09711460866849594, "rouge_l": 0.4127819548872181}
{"id": 7205, "predictions": ["\u2581// \u2581tx Make Array \u2581returns \u2581a \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581 set \u2581of \u2581 data ."], "references": ["\u2581// \u2581Grab \u2581every \u2581thing \u2581from \u2581current \u2581 mark \u2581up \u2581to \u2581the \u2581 tip \u2581of \u2581the \u2581stack , \u2581// \u2581and \u2581make \u2581it \u2581a \u2581list"], "bleu": 0.08486435912865364, "rouge_l": 0.23407521105141982}
{"id": 7252, "predictions": ["\u2581// \u2581Default Parser \u2581returns \u2581the \u2581 x 2 \u2581 token \u2581 name \u2581of \u2581the \u2581 x ."], "references": ["\u2581// \u2581Default Parser \u2581sets \u2581up \u2581and \u2581assigns \u2581the \u2581default \u2581parser \u2581to \u2581be \u2581used \u2581by \u2581 X s late ."], "bleu": 0.1374787855653662, "rouge_l": 0.33002705139765554}
{"id": 7675, "predictions": ["\u2581// \u2581 Search \u2581returns \u2581a \u2581list \u2581of \u2581 measurements \u2581in \u2581the \u2581given \u2581 search ."], "references": ["\u2581// \u2581 Search \u2581the \u2581network \u2581for \u2581 S SDP \u2581devices \u2581using \u2581the \u2581given \u2581 search \u2581string \u2581and \u2581duration \u2581// \u2581to \u2581discover \u2581new \u2581devices . \u2581This \u2581function \u2581will \u2581return \u2581an \u2581array"], "bleu": 0.11910916223801053, "rouge_l": 0.37731958762886597}
{"id": 8102, "predictions": ["\u2581// \u2581 Re header \u2581returns \u2581the \u2581 active \u2581 active \u2581 active \u2581 active \u2581 active \u2581 active \u2581 data ."], "references": ["\u2581// Re Stock \u2581 - \u2581 this \u2581will \u2581 reclaim \u2581resources \u2581for \u2581a \u2581given \u2581lease"], "bleu": 0.07645949399477267, "rouge_l": 0.28638497652582157}
{"id": 7054, "predictions": ["\u2581// \u2581handleError \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581will \u2581 close \u2581the \u2581 status \u2581 code \u2581if \u2581it \u2581is \u2581 set ."], "references": ["\u2581// \u2581handleError \u2581tests \u2581the \u2581context \u2581` Error ` \u2581and \u2581 assign \u2581it \u2581to \u2581response ."], "bleu": 0.0900911347430732, "rouge_l": 0.3357798165137615}
{"id": 7036, "predictions": ["\u2581// \u2581 WaitFor Job \u2581returns \u2581a \u2581job \u2581that \u2581will \u2581be \u2581run \u2581on \u2581the \u2581pool ."], "references": ["\u2581// \u2581 WaitFor Job \u2581blocks \u2581until \u2581a \u2581completed \u2581job \u2581is \u2581available \u2581and \u2581returns \u2581it . \u2581// \u2581If \u2581there \u2581are \u2581no \u2581jobs \u2581running , \u2581it \u2581returns \u2581nil ."], "bleu": 0.11915360729151166, "rouge_l": 0.31700074239049736}
{"id": 6268, "predictions": ["\u2581// \u2581 Load Config \u2581 loads \u2581the \u2581 config \u2581from \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Load Config \u2581 loads \u2581the \u2581client \u2581configuration \u2581from \u2581disk"], "bleu": 0.45608395453519407, "rouge_l": 0.6329442282749675}
{"id": 7969, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581 data \u2581from \u2581the \u2581list \u2581of \u2581 active \u2581 data . \u2581// \u2581// \u2581It \u2581is \u2581used \u2581to \u2581 call \u2581the \u2581 mutex \u2581to \u2581 remove"], "references": ["\u2581// \u2581 Delete \u2581an \u2581item \u2581from \u2581the \u2581skip list"], "bleu": 0.08928953574702554, "rouge_l": 0.2839851024208566}
{"id": 7916, "predictions": ["\u2581// \u2581 Accounts \u2581returns \u2581all \u2581accounts \u2581that \u2581are \u2581 active ."], "references": ["\u2581// \u2581 Accounts \u2581lists \u2581the \u2581a counts \u2581of \u2581a \u2581 domain"], "bleu": 0.22416933501922287, "rouge_l": 0.36363636363636365}
{"id": 7073, "predictions": ["\u2581// \u2581 add Matching \u2581adds \u2581a \u2581new \u2581 set \u2581of \u2581 centroid \u2581to \u2581the \u2581given \u2581destination ."], "references": ["\u2581// append \u2581digits \u2581to \u2581string"], "bleu": 0.07994607499472013, "rouge_l": 0.20165289256198346}
{"id": 6566, "predictions": ["\u2581// \u2581 Delete Load balancer \u2581deletes \u2581the \u2581 balancer \u2581from \u2581the \u2581specified \u2581 id"], "references": ["\u2581// Delete Load balancer \u2581deletes \u2581a \u2581load \u2581 balancer"], "bleu": 0.29256127307315066, "rouge_l": 0.6335311572700296}
{"id": 6567, "predictions": ["\u2581// \u2581 List Balance d Nic s \u2581returns \u2581a \u2581list \u2581of \u2581 nic s \u2581for \u2581the \u2581given \u2581 NIC ID"], "references": ["\u2581// List Balance d Nic s \u2581lists \u2581 balanced \u2581 nic s"], "bleu": 0.29945160623183903, "rouge_l": 0.5890557939914164}
{"id": 6600, "predictions": ["\u2581// \u2581Get Attached C drom \u2581fetches \u2581the \u2581image \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// Get Attached C drom \u2581gets \u2581attached \u2581 cd \u2581 rom s"], "bleu": 0.18207052811092136, "rouge_l": 0.3900255754475704}
{"id": 6586, "predictions": ["\u2581// \u2581 Update IP Block \u2581updates \u2581the \u2581 IP \u2581block \u2581for \u2581the \u2581given \u2581 IP \u2581address ."], "references": ["\u2581// \u2581 Update IP Block \u2581partial \u2581update \u2581of \u2581 ip block \u2581properties"], "bleu": 0.2749977595322415, "rouge_l": 0.42707117852975496}
{"id": 7401, "predictions": ["\u2581// \u2581 Mutate Set Options \u2581sets \u2581the \u2581flag \u2581options \u2581for \u2581the \u2581 set \u2581of \u2581options ."], "references": ["\u2581// \u2581 Mutate Set Options \u2581for \u2581Set Flag \u2581sets \u2581the \u2581Set Options Op ' s \u2581 SetFlags \u2581field"], "bleu": 0.29569859716493363, "rouge_l": 0.465648854961832}
{"id": 6712, "predictions": ["\u2581// \u2581Find Machine \u2581finds \u2581a \u2581machine \u2581by \u2581 name ."], "references": ["\u2581// \u2581Find Machine \u2581parses \u2581the \u2581 net rc \u2581file \u2581identified \u2581by \u2581 filename \u2581and \u2581returns \u2581// \u2581the \u2581 Machine \u2581named \u2581by \u2581 name . \u2581If \u2581no \u2581 Machine \u2581with \u2581"], "bleu": 0.06350567652050575, "rouge_l": 0.32105263157894737}
{"id": 7680, "predictions": ["\u2581// \u2581Normalize Max \u2581returns \u2581the \u2581maximum \u2581value \u2581of \u2581the \u2581 set \u2581of \u2581 zeros ."], "references": ["\u2581// \u2581Normalize Max \u2581sets \u2581the \u2581max \u2581value \u2581to \u2581 1 \u2581and \u2581normalize \u2581the \u2581rest \u2581of \u2581the \u2581 data ."], "bleu": 0.18988404154440294, "rouge_l": 0.518413597733711}
{"id": 6575, "predictions": ["\u2581// \u2581Create Nic \u2581creates \u2581a \u2581new \u2581 nic"], "references": ["\u2581// \u2581Create Nic \u2581creates \u2581a \u2581 nic \u2581on \u2581a \u2581server"], "bleu": 0.5145013914965352, "rouge_l": 0.7624999999999998}
{"id": 6622, "predictions": ["\u2581// \u2581 Update Share \u2581updates \u2581the \u2581 cloud ."], "references": ["\u2581// \u2581 Update Share \u2581updates \u2581a \u2581share"], "bleu": 0.5169731539571706, "rouge_l": 0.639412997903564}
{"id": 7083, "predictions": ["\u2581// \u2581 Delete Notification \u2581 - \u2581 Delete \u2581notification \u2581for \u2581a \u2581given \u2581 push \u2581event"], "references": ["\u2581// \u2581 Delete Notification \u2581deletes \u2581a \u2581created \u2581notification"], "bleu": 0.2490328638846773, "rouge_l": 0.46003016591251883}
{"id": 7137, "predictions": ["\u2581// \u2581Add Message Error \u2581adds \u2581a \u2581message Error \u2581to \u2581the \u2581error \u2581if \u2581it \u2581is \u2581not \u2581found"], "references": ["\u2581// \u2581Add Message Error \u2581adds \u2581a \u2581new \u2581 Error \u2581isn t ance \u2581with \u2581a \u2581 code \u2581and \u2581message \u2581// \u2581to \u2581the \u2581registry . \u2581// \u2581It \u2581there \u2581already \u2581is \u2581an \u2581error"], "bleu": 0.1761218041576751, "rouge_l": 0.41216216216216217}
{"id": 7146, "predictions": ["\u2581// \u2581 Stream Context \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 ReadCloser \u2581that \u2581reads \u2581from \u2581the \u2581// \u2581provided \u2581 URL \u2581and \u2581 body ."], "references": ["\u2581// \u2581 Stream Context \u2581provides \u2581the \u2581same \u2581functionality \u2581as \u2581 Stream \u2581with \u2581 Context \u2581instance \u2581passing \u2581to \u2581http . Request ."], "bleu": 0.1504843536148922, "rouge_l": 0.3470839260312944}
{"id": 7149, "predictions": ["\u2581// \u2581 Serve TCP \u2581is \u2581used \u2581to \u2581 connect \u2581to \u2581the \u2581 TCP \u2581listener"], "references": ["\u2581// \u2581 Serve TCP \u2581executes \u2581http . Server . Serve \u2581method . \u2581// \u2581If \u2581the \u2581provided \u2581listener \u2581is \u2581 net . TCP Listener , \u2581keep \u2581 alive \u2581// \u2581will \u2581be"], "bleu": 0.09554950856215354, "rouge_l": 0.2986013986013986}
{"id": 7289, "predictions": ["\u2581// \u2581 New Policy \u2581returns \u2581a \u2581new \u2581policy \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581policy \u2581 set ."], "references": ["\u2581// \u2581 New Policy \u2581returns \u2581a \u2581default \u2581password \u2581policy \u2581which \u2581can \u2581be \u2581modified"], "bleu": 0.2988309778054086, "rouge_l": 0.552870090634441}
{"id": 7661, "predictions": ["\u2581// \u2581Register Datasource s \u2581registers \u2581the \u2581 backends \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Register Datasource s \u2581adds \u2581 path \u2581to \u2581the \u2581 Map nik \u2581plugin \u2581 search \u2581 path ."], "bleu": 0.2717233096744495, "rouge_l": 0.5501002004008017}
{"id": 7957, "predictions": ["\u2581// \u2581 Seek \u2581returns \u2581true \u2581if \u2581the \u2581 iterator \u2581is \u2581 left ."], "references": ["\u2581// \u2581 Seek \u2581moves \u2581cursor \u2581to \u2581the \u2581specified \u2581item , \u2581if \u2581present"], "bleu": 0.19674979811155635, "rouge_l": 0.3223249669749009}
{"id": 6515, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581 this \u2581 Perf Datum ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581a \u2581 Perf Datum , \u2581suitable \u2581for \u2581// \u2581check \u2581output ."], "bleu": 0.234092311684103, "rouge_l": 0.6269270298047277}
{"id": 6621, "predictions": ["\u2581// \u2581Add Share \u2581 add \u2581a \u2581new \u2581 group \u2581to \u2581the \u2581 group ."], "references": ["\u2581// \u2581Add Share \u2581adds \u2581a \u2581share"], "bleu": 0.17395797375642236, "rouge_l": 0.43109540636042404}
{"id": 7956, "predictions": ["\u2581// \u2581 Next \u2581moves \u2581the \u2581 iterator \u2581to \u2581the \u2581next \u2581 iterator ."], "references": ["\u2581// \u2581 Next \u2581moves \u2581cursor \u2581to \u2581the \u2581next \u2581item"], "bleu": 0.35556702356686953, "rouge_l": 0.657935285053929}
{"id": 6626, "predictions": ["\u2581// \u2581 DeleteUser From Group \u2581 remove \u2581a \u2581 group \u2581by \u2581 ID"], "references": ["\u2581// \u2581 DeleteUser From Group \u2581removes \u2581a \u2581user \u2581from \u2581a \u2581 group"], "bleu": 0.44534504264163466, "rouge_l": 0.6446499339498017}
{"id": 7662, "predictions": ["\u2581// \u2581Register Fonts \u2581registers \u2581the \u2581 Fonts \u2581 backends \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581Register Datasource s \u2581adds \u2581 path \u2581to \u2581the \u2581 Map nik \u2581 fonts \u2581 search \u2581 path ."], "bleu": 0.16318420051820362, "rouge_l": 0.46081208687440983}
{"id": 7385, "predictions": ["\u2581// \u2581Set Address \u2581sets \u2581the \u2581address \u2581of \u2581the \u2581 AccountId"], "references": ["\u2581// \u2581Set Address \u2581 modifies \u2581the \u2581receiver , \u2581setting \u2581it ' s \u2581value \u2581to \u2581the \u2581 AccountId \u2581 form \u2581// \u2581of \u2581the \u2581provided \u2581address ."], "bleu": 0.08663534476811327, "rouge_l": 0.371304347826087}
{"id": 6355, "predictions": ["\u2581// \u2581backoff \u2581returns \u2581a \u2581random \u2581duration \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 sleep \u2581// \u2581with \u2581the \u2581given \u2581max ."], "references": ["\u2581// \u2581backoff \u2581computes \u2581a \u2581random \u2581 exponential \u2581backoff \u2581value \u2581for \u2581a \u2581given \u2581number \u2581of \u2581// \u2581attempts , \u2581and \u2581boundaries \u2581of \u2581 min \u2581and \u2581max \u2581backoff \u2581duration s ."], "bleu": 0.08082278110477537, "rouge_l": 0.32906271072151044}
{"id": 6451, "predictions": ["\u2581// \u2581 WithField \u2581returns \u2581a \u2581new \u2581 namespaced \u2581 name \u2581and \u2581the \u2581 group \u2581of \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 WithField \u2581adds \u2581a \u2581field \u2581to \u2581the \u2581logger"], "bleu": 0.1326475916741222, "rouge_l": 0.3817271589486859}
{"id": 7109, "predictions": ["\u2581// \u2581 Render Template \u2581renders \u2581a \u2581template \u2581template \u2581and \u2581returns \u2581the \u2581 templates ."], "references": ["\u2581// \u2581 Render Template \u2581executes \u2581a \u2581named \u2581template \u2581and \u2581returns \u2581the \u2581string ."], "bleu": 0.4333207865423752, "rouge_l": 0.7457212713936432}
{"id": 7515, "predictions": ["\u2581// \u2581 New Inf lation Result \u2581returns \u2581an \u2581 inf lation Result \u2581object \u2581from \u2581the \u2581given \u2581 code ."], "references": ["\u2581// \u2581 New Inf lation Result \u2581creates \u2581a \u2581new \u2581 Inf lation Result ."], "bleu": 0.3392375549949802, "rouge_l": 0.6230847803881513}
{"id": 8058, "predictions": ["\u2581// \u2581Get Redact ed Version \u2581returns \u2581the \u2581 Redact ed \u2581version \u2581for \u2581the \u2581given \u2581// \u2581 Task ."], "references": ["\u2581// Get Redact ed Version \u2581 - \u2581returns \u2581a \u2581 redact ed \u2581version \u2581of \u2581 this \u2581task , \u2581removing \u2581private \u2581 info"], "bleu": 0.13712412185339865, "rouge_l": 0.44202898550724634}
{"id": 6246, "predictions": ["\u2581// \u2581 Locator Func \u2581returns \u2581a \u2581 map \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581result \u2581// \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581attribute \u2581 type ."], "references": ["\u2581// \u2581 Locator Func \u2581returns \u2581the \u2581source \u2581 code \u2581for \u2581building \u2581a \u2581locator \u2581instance \u2581from \u2581a \u2581resource ."], "bleu": 0.18012107375362474, "rouge_l": 0.3620178041543027}
{"id": 6776, "predictions": ["\u2581// \u2581 DecodeString \u2581returns \u2581the \u2581 data \u2581in \u2581the \u2581string"], "references": ["\u2581// \u2581 DecodeString \u2581decodes \u2581the \u2581given \u2581base 32 \u2581 encode ed \u2581bytes"], "bleu": 0.21258637840736228, "rouge_l": 0.44721407624633425}
{"id": 6590, "predictions": ["\u2581// \u2581 Update Volume \u2581updates \u2581a \u2581volume \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// Update Volume \u2581updates \u2581a \u2581volume"], "bleu": 0.3636227046500071, "rouge_l": 0.6765249537892792}
{"id": 6623, "predictions": ["\u2581// \u2581 Delete Share \u2581 - \u2581Deletes \u2581a \u2581 group \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 Delete Share \u2581deletes \u2581a \u2581share"], "bleu": 0.25748661016289676, "rouge_l": 0.5066445182724253}
{"id": 7084, "predictions": ["\u2581// \u2581 Notify Device \u2581sends \u2581a \u2581notification \u2581to \u2581a \u2581remote \u2581notification"], "references": ["\u2581// \u2581 Notify Device \u2581sends \u2581notification \u2581 data \u2581to \u2581devices"], "bleu": 0.44833867003844585, "rouge_l": 0.6724409448818898}
{"id": 7383, "predictions": ["\u2581// \u2581 Address \u2581returns \u2581the \u2581 AccountId \u2581of \u2581the \u2581 AccountId ."], "references": ["\u2581// \u2581 Address \u2581returns \u2581the \u2581str key \u2581encoded \u2581 form \u2581of \u2581 this \u2581 AccountId . \u2581This \u2581method \u2581will \u2581// \u2581panic \u2581if \u2581the \u2581account id \u2581is \u2581back ed \u2581by \u2581a"], "bleu": 0.11615063609624245, "rouge_l": 0.44202898550724634}
{"id": 7498, "predictions": ["\u2581// \u2581 New Manage Offer Result \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Manage Offer Result \u2581instance"], "references": ["\u2581// \u2581 New Manage Offer Result \u2581creates \u2581a \u2581new \u2581 Manage Offer Result ."], "bleu": 0.5312583871630396, "rouge_l": 0.8097345132743362}
{"id": 7670, "predictions": ["\u2581// \u2581 Zoom To \u2581computes \u2581the \u2581tile To \u2581 table \u2581for \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Zoom To \u2581 zoom s \u2581to \u2581the \u2581given \u2581bounding \u2581 box ."], "bleu": 0.2803950119994004, "rouge_l": 0.5551763367463025}
{"id": 6884, "predictions": ["\u2581// \u2581 New Inline QueryResult Video \u2581creates \u2581a \u2581new \u2581 inline \u2581query \u2581 video ."], "references": ["\u2581// \u2581 New Inline QueryResult Video \u2581returns \u2581a \u2581new \u2581 Inline QueryResult Video \u2581with \u2581all \u2581// \u2581mandatory \u2581fields \u2581 set ."], "bleu": 0.3212418871334966, "rouge_l": 0.5932802829354553}
{"id": 6366, "predictions": ["\u2581// \u2581Execute \u2581executes \u2581a \u2581template \u2581and \u2581returns \u2581the \u2581response ."], "references": ["\u2581// \u2581Execute \u2581execute \u2581tmpl"], "bleu": 0.16590387014219712, "rouge_l": 0.3096446700507614}
{"id": 6557, "predictions": ["\u2581// \u2581 Wait Till Provisioned \u2581waits \u2581until \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581is \u2581 canceled ."], "references": ["\u2581// Wait Till Provisioned \u2581 helper \u2581function"], "bleu": 0.11408424519986968, "rouge_l": 0.3802992518703242}
{"id": 6564, "predictions": ["\u2581// \u2581Get Load balancer \u2581 loads \u2581a \u2581 balancer \u2581by \u2581 ID ."], "references": ["\u2581// Get Load balancer \u2581pull s \u2581 data \u2581for \u2581the \u2581 Load balancer \u2581where \u2581 id \u2581= \u2581 l bal id \u2581returns \u2581a \u2581 Instance \u2581struct"], "bleu": 0.06735737120156013, "rouge_l": 0.33862014274385405}
{"id": 6576, "predictions": ["\u2581// \u2581Get Nic \u2581gets \u2581the \u2581 Nic ID \u2581by \u2581 ID"], "references": ["\u2581// \u2581Get Nic \u2581pull s \u2581 data \u2581for \u2581the \u2581 nic \u2581where \u2581 id \u2581= \u2581srv id \u2581returns \u2581a \u2581 Instance \u2581struct"], "bleu": 0.0963936476247809, "rouge_l": 0.3430178069353327}
{"id": 7094, "predictions": ["\u2581// \u2581 Hash \u2581implements \u2581the \u2581 MD 5 \u2581interface \u2581for \u2581 MD 5 Hasher ."], "references": ["\u2581// \u2581 Hash \u2581returns \u2581a \u2581part \u2581of \u2581a \u2581 MD 5 \u2581sum \u2581of \u2581a \u2581file ."], "bleu": 0.21417643659566238, "rouge_l": 0.44900105152471087}
{"id": 6594, "predictions": ["\u2581// \u2581 Restore Snapshot \u2581restore s \u2581a \u2581snapshot \u2581from \u2581the \u2581 container"], "references": ["\u2581// \u2581 Restore Snapshot \u2581restore s \u2581a \u2581volume \u2581with \u2581provided \u2581snapshot"], "bleu": 0.5760844201603896, "rouge_l": 0.7011494252873562}
{"id": 7988, "predictions": ["\u2581// \u2581 NewWriter \u2581returns \u2581a \u2581new \u2581 Writer ."], "references": ["\u2581// \u2581 NewWriter \u2581creates \u2581a \u2581 N itr o \u2581writer"], "bleu": 0.2601435417217584, "rouge_l": 0.5213675213675214}
{"id": 6604, "predictions": ["\u2581// \u2581Get Attached Volume \u2581retrieves \u2581the \u2581volume \u2581with \u2581the \u2581specified \u2581 id ."], "references": ["\u2581// Get Attached Volume \u2581gets \u2581an \u2581attached \u2581volume"], "bleu": 0.14283632578659286, "rouge_l": 0.39804241435562804}
{"id": 7790, "predictions": ["\u2581// \u2581read Pi v net Release \u2581 releases \u2581the \u2581given \u2581release \u2581and \u2581removes \u2581it \u2581from \u2581the \u2581// \u2581 Pi v net ."], "references": ["\u2581// \u2581read Pi v net Release \u2581reads \u2581a \u2581 pi v net \u2581release \u2581out \u2581of \u2581the \u2581given \u2581reader \u2581into \u2581a \u2581new \u2581// \u2581 pi v net Release \u2581struct"], "bleu": 0.25559187246032133, "rouge_l": 0.5089858793324775}
{"id": 7853, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581unmarshal s \u2581a \u2581 Task \u2581 Task \u2581 Task \u2581 Task \u2581 Task \u2581response ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581unmarshal s \u2581 this \u2581object \u2581from \u2581a \u2581JSON \u2581structure"], "bleu": 0.2186976686325118, "rouge_l": 0.3714981729598051}
{"id": 7764, "predictions": ["\u2581// \u2581read Bosh Job \u2581 collect s \u2581the \u2581 Bosh \u2581from \u2581the \u2581 Bosh ."], "references": ["\u2581// \u2581read Bosh Job \u2581reads \u2581a \u2581 BO SH \u2581job \u2581manifest \u2581out \u2581of \u2581the \u2581given \u2581reader \u2581into \u2581a \u2581new \u2581// \u2581 Job Manifest \u2581struct"], "bleu": 0.14131164779580413, "rouge_l": 0.34463276836158196}
{"id": 7082, "predictions": ["\u2581// \u2581 Notification Status \u2581 - \u2581 push \u2581a \u2581notification \u2581to \u2581the \u2581given \u2581 push ."], "references": ["\u2581// \u2581 Notification Status \u2581returns \u2581 status \u2581of \u2581a \u2581particular \u2581notification"], "bleu": 0.24078435074822624, "rouge_l": 0.53643216080402}
{"id": 7300, "predictions": ["\u2581// \u2581 Shutdown \u2581is \u2581used \u2581to \u2581 graceful ly \u2581shutdown \u2581the \u2581 sentinel ."], "references": ["\u2581// \u2581 Shutdown \u2581calls \u2581all \u2581registered \u2581shutdown \u2581func s ."], "bleu": 0.18207052811092136, "rouge_l": 0.42957746478873243}
{"id": 7074, "predictions": ["\u2581// \u2581 Orig uate \u2581returns \u2581the \u2581number \u2581of \u2581characters \u2581in \u2581a \u2581given \u2581word ."], "references": ["\u2581// add \u2581punctuation \u2581characters \u2581to \u2581start \u2581and \u2581end \u2581of \u2581string"], "bleu": 0.10511846841633776, "rouge_l": 0.17183098591549298}
{"id": 8026, "predictions": ["\u2581// \u2581 Hijack \u2581implements \u2581the \u2581http . Hijack er \u2581interface ."], "references": ["\u2581// \u2581 Hijack \u2581tries \u2581to \u2581use \u2581the \u2581original \u2581http . ResponseWriter \u2581for \u2581 hijack ing . \u2581If \u2581the \u2581// \u2581original \u2581writer \u2581doesn ' t \u2581implement \u2581http . Hijack er ,"], "bleu": 0.0797005255163999, "rouge_l": 0.36014760147601477}
{"id": 6791, "predictions": ["\u2581// \u2581Validate CN \u2581validates \u2581the \u2581given \u2581certificate"], "references": ["\u2581// \u2581Validate CN \u2581checks \u2581the \u2581 CN \u2581of \u2581a \u2581verified \u2581peer \u2581cert \u2581and \u2581 raises \u2581a \u2581 403 \u2581if \u2581the \u2581 CN \u2581doesn ' t \u2581match \u2581any \u2581 CN \u2581in"], "bleu": 0.013676828774395773, "rouge_l": 0.1944223107569721}
{"id": 6402, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581 text \u2581 text \u2581from \u2581a \u2581 text \u2581string ."], "references": ["\u2581// Parse \u2581creates \u2581an \u2581AST \u2581tree \u2581for \u2581XPath \u2581expressions ."], "bleu": 0.09782375748961449, "rouge_l": 0.17183098591549298}
{"id": 7881, "predictions": ["\u2581// \u2581 Exit \u2581is \u2581used \u2581to \u2581 exit \u2581 graceful \u2581shutdown"], "references": ["\u2581// \u2581 Exit \u2581the \u2581backend \u2581and \u2581shutdown \u2581all \u2581listeners . \u2581// \u2581Closes \u2581the \u2581 Shutdown Complete \u2581 chan \u2581when \u2581 fin s i h ed ."], "bleu": 0.06235746683221999, "rouge_l": 0.2518579686209744}
{"id": 7995, "predictions": ["\u2581// \u2581Get Snapshots \u2581returns \u2581all \u2581the \u2581snapshots"], "references": ["\u2581// \u2581Get Snapshots \u2581returns \u2581the \u2581list \u2581of \u2581current \u2581live \u2581snapshots \u2581// \u2581This \u2581API \u2581is \u2581mainly \u2581for \u2581debugging \u2581purpose"], "bleu": 0.11682539086422516, "rouge_l": 0.4447144592952612}
{"id": 8106, "predictions": ["\u2581// \u2581 Offset \u2581returns \u2581the \u2581offset \u2581of \u2581the \u2581field \u2581 type ."], "references": ["\u2581// \u2581 Offset \u2581returns \u2581the \u2581 byte \u2581offset \u2581for \u2581the \u2581given \u2581field"], "bleu": 0.4324227075463215, "rouge_l": 0.6666666666666666}
{"id": 6598, "predictions": ["\u2581// \u2581 List Attached C drom s \u2581lists \u2581the \u2581images \u2581for \u2581the \u2581given \u2581image \u2581 id ."], "references": ["\u2581// List Attached C drom s \u2581returns \u2581list \u2581of \u2581attached \u2581 cd \u2581 rom s"], "bleu": 0.2928298013714697, "rouge_l": 0.44248704663212435}
{"id": 6938, "predictions": ["\u2581// \u2581 RemoveAll Network \u2581removes \u2581 this \u2581 VM"], "references": ["\u2581// \u2581 RemoveAll Network Adapters \u2581deletes \u2581all \u2581network \u2581 adapters \u2581from \u2581a \u2581 VM ."], "bleu": 0.23983663471592362, "rouge_l": 0.558169934640523}
{"id": 7325, "predictions": ["\u2581// \u2581 Address To AccountId \u2581converts \u2581a \u2581 key \u2581to \u2581a \u2581 AccountId \u2581 api ."], "references": ["\u2581// \u2581 Address To AccountId \u2581converts \u2581the \u2581provided \u2581address \u2581into \u2581a \u2581 xdr . AccountId"], "bleu": 0.4052127766461669, "rouge_l": 0.5840425531914895}
{"id": 6404, "predictions": ["\u2581// \u2581 Res Value \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581current \u2581 token ."], "references": ["\u2581// Res Value \u2581returns \u2581the \u2581string \u2581value \u2581of \u2581the \u2581attribute"], "bleu": 0.2676032275663791, "rouge_l": 0.5154929577464789}
{"id": 6760, "predictions": ["\u2581// \u2581check Integer \u2581checks \u2581the \u2581value \u2581of \u2581a \u2581string \u2581value ."], "references": ["\u2581// \u2581 INTEGER \u2581// \u2581check Integer \u2581returns \u2581nil \u2581if \u2581the \u2581given \u2581bytes \u2581are \u2581a \u2581valid \u2581 DER - encoded \u2581// \u2581 INTEGER \u2581and \u2581an \u2581error \u2581otherwise ."], "bleu": 0.056938647630047495, "rouge_l": 0.293504410585405}
{"id": 7788, "predictions": ["\u2581// \u2581 Load Pi v net Release \u2581creates \u2581a \u2581new \u2581 Pi v net . Release \u2581object ."], "references": ["\u2581// \u2581 Load Pi v net Release \u2581creates \u2581an \u2581initialized \u2581 pi v net Release \u2581instance \u2581from \u2581the \u2581// \u2581specified \u2581 . pivot al \u2581file ."], "bleu": 0.31858640734921484, "rouge_l": 0.5721500721500721}
{"id": 7510, "predictions": ["\u2581// \u2581 New Account Merge Result \u2581returns \u2581a \u2581new \u2581 Account Merge Result \u2581instance"], "references": ["\u2581// \u2581 New Account Merge Result \u2581creates \u2581a \u2581new \u2581 Account Merge Result ."], "bleu": 0.7241577342575828, "rouge_l": 0.8571428571428571}
{"id": 6952, "predictions": ["\u2581// \u2581 New VirtualMachine \u2581creates \u2581a \u2581new \u2581 VirtualMachine \u2581object \u2581from \u2581the \u2581given \u2581 Vi x \u2581and \u2581 attaches \u2581it \u2581to \u2581the \u2581given \u2581 VM ."], "references": ["\u2581// \u2581 New VirtualMachine \u2581creates \u2581a \u2581new \u2581 VM \u2581instance ."], "bleu": 0.31520930587913804, "rouge_l": 0.5831739961759083}
{"id": 6574, "predictions": ["\u2581// \u2581 List Nic s \u2581returns \u2581the \u2581 Nic s \u2581for \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 List Nic s \u2581returns \u2581a \u2581 Nic s \u2581struct \u2581collection"], "bleu": 0.42818185319516083, "rouge_l": 0.6598557692307692}
{"id": 6572, "predictions": ["\u2581// \u2581Get La n \u2581 - \u2581 get \u2581 La n \u2581 n \u2581 data \u2581for \u2581a \u2581given \u2581 product \u2581 id"], "references": ["\u2581// \u2581Get La n \u2581pull s \u2581 data \u2581for \u2581the \u2581 lan \u2581where \u2581 id \u2581= \u2581 lan id \u2581returns \u2581an \u2581 Instance \u2581struct"], "bleu": 0.2209029809672966, "rouge_l": 0.4314002828854314}
{"id": 6695, "predictions": ["\u2581// \u2581Get Other \u2581returns \u2581the \u2581 Node \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581Get Other \u2581returns \u2581node \u2581for \u2581given \u2581access \u2581 token . \u2581// \u2581Returns \u2581false \u2581if \u2581cluster \u2581is \u2581nil , \u2581has \u2581only \u2581one \u2581element \u2581or \u2581if \u2581node \u2581that \u2581was \u2581found \u2581has"], "bleu": 0.08086124506504899, "rouge_l": 0.30391459074733096}
{"id": 7027, "predictions": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581given \u2581dataset ."], "references": ["\u2581// \u2581 Count \u2581 loads \u2581the \u2581row \u2581count \u2581for \u2581the \u2581provided \u2581dataset . tablename"], "bleu": 0.21651956746181053, "rouge_l": 0.5}
{"id": 6989, "predictions": ["\u2581// \u2581Get Email \u2581gets \u2581the \u2581 email \u2581associated \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Email \u2581check \u2581is \u2581a \u2581 email"], "bleu": 0.195647514979229, "rouge_l": 0.47805642633228845}
{"id": 6446, "predictions": ["\u2581// \u2581 Outgoing Context With Limit And Offset \u2581returns \u2581the \u2581context \u2581with \u2581the \u2581given \u2581limit \u2581offset"], "references": ["\u2581// \u2581 Outgoing Context With Limit And Offset \u2581returns \u2581an \u2581outgoing \u2581context \u2581with \u2581the \u2581limit \u2581and \u2581offset"], "bleu": 0.6135721921239692, "rouge_l": 0.8438735177865612}
{"id": 7855, "predictions": ["\u2581// \u2581Validate \u2581validates \u2581 this \u2581task \u2581 data"], "references": ["\u2581// \u2581Validate \u2581validates \u2581 this \u2581task"], "bleu": 0.7259795291154771, "rouge_l": 0.8798076923076923}
{"id": 7080, "predictions": ["\u2581// \u2581 Device Info \u2581returns \u2581information \u2581about \u2581a \u2581device ."], "references": ["\u2581// \u2581 Device Info \u2581returns \u2581information \u2581about \u2581a \u2581particular \u2581device"], "bleu": 0.8070557274927982, "rouge_l": 0.9}
{"id": 6222, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581API \u2581client"], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581API \u2581client \u2581that \u2581uses \u2581the \u2581given \u2581 authenticator . \u2581// \u2581host \u2581may \u2581be \u2581 blank \u2581in \u2581which \u2581case \u2581client \u2581attempts \u2581to \u2581 resolve \u2581it \u2581using"], "bleu": 0.0422328460129871, "rouge_l": 0.33359374999999997}
{"id": 7032, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581pool ."], "references": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 Pool \u2581by \u2581launch ing \u2581the \u2581workers . \u2581// \u2581It ' s \u2581 OK \u2581to \u2581start \u2581an \u2581 empty \u2581 Pool . \u2581The \u2581jobs \u2581will"], "bleu": 0.026455588012078576, "rouge_l": 0.29163346613545815}
{"id": 7920, "predictions": ["\u2581// \u2581 Domains \u2581retrieves \u2581all \u2581 \u2581domains \u2581from \u2581the \u2581 C \u2581cluster"], "references": ["\u2581// \u2581 Domains \u2581lists \u2581the \u2581domains \u2581on \u2581the \u2581server"], "bleu": 0.21401603033752975, "rouge_l": 0.48878205128205127}
{"id": 6340, "predictions": ["\u2581// \u2581 New Producer \u2581creates \u2581a \u2581new \u2581producer"], "references": ["\u2581// \u2581 New Producer \u2581configure s \u2581a \u2581new \u2581producer \u2581instance ."], "bleu": 0.41027677084858105, "rouge_l": 0.716442953020134}
{"id": 6633, "predictions": ["\u2581// \u2581 GetResource ByType \u2581 - \u2581returns \u2581resource \u2581with \u2581the \u2581given \u2581 type ."], "references": ["\u2581// GetResource ByType \u2581gets \u2581a \u2581resource \u2581by \u2581 type"], "bleu": 0.15911783110981517, "rouge_l": 0.543026706231454}
{"id": 6700, "predictions": ["\u2581// \u2581 WriteTo \u2581implements \u2581io . Writer To \u2581interface . \u2581It \u2581serialize s \u2581the \u2581index \u2581// \u2581 table \u2581to \u2581the \u2581wire \u2581 format ."], "references": ["\u2581// \u2581 WriteTo \u2581saves \u2581a \u2581index \u2581 table ."], "bleu": 0.12049514584750938, "rouge_l": 0.4621212121212121}
{"id": 6991, "predictions": ["\u2581// \u2581 Full Type Hierarchy \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 type \u2581of \u2581// \u2581 Full Type ."], "references": ["\u2581// Full \u2581 type \u2581hierarchy \u2581is \u2581returned \u2581when \u2581provided \u2581either \u2581the \u2581concept \u2581 type \u2581// \u2581or \u2581full \u2581 uri \u2581of \u2581the \u2581most \u2581specific \u2581concept \u2581 type"], "bleu": 0.08768005785989223, "rouge_l": 0.3026222537207654}
{"id": 6511, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Handler \u2581that \u2581will \u2581 emit \u2581the \u2581 color \u2581of \u2581the \u2581 JS \u2581// \u2581 controller ."], "references": ["\u2581// \u2581 New \u2581handler ."], "bleu": 0.10414419091986513, "rouge_l": 0.32317880794701986}
{"id": 6555, "predictions": ["\u2581// \u2581 Update DataCenter \u2581updates \u2581the \u2581 datacenter ' s \u2581 datacenter \u2581for \u2581the \u2581given \u2581 datacenter ."], "references": ["\u2581// Update DataCenter \u2581updates \u2581a \u2581 data \u2581 center"], "bleu": 0.1457684614972261, "rouge_l": 0.4728682170542636}
{"id": 6602, "predictions": ["\u2581// \u2581 List Attached Volumes \u2581 - \u2581returns \u2581a \u2581list \u2581of \u2581volumes \u2581for \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// List Attached Volumes \u2581lists \u2581attached \u2581volumes"], "bleu": 0.14025775160081475, "rouge_l": 0.4344729344729345}
{"id": 6849, "predictions": ["\u2581// \u2581 New Outgoing V en ue \u2581creates \u2581a \u2581new \u2581 Outgoing V en ue \u2581for \u2581the \u2581given \u2581 V 3 \u2581API"], "references": ["\u2581// \u2581 New Outgoing V en ue \u2581creates \u2581a \u2581new \u2581outgoing \u2581location ."], "bleu": 0.43937095446369245, "rouge_l": 0.5992141453831041}
{"id": 6620, "predictions": ["\u2581// \u2581Get Share \u2581 - \u2581Returns \u2581the \u2581 group \u2581with \u2581the \u2581given \u2581 group ."], "references": ["\u2581// \u2581Get Share \u2581gets \u2581a \u2581share"], "bleu": 0.15310245441182443, "rouge_l": 0.3096446700507614}
{"id": 7041, "predictions": ["\u2581// \u2581 Preload File \u2581 loads \u2581the \u2581file \u2581 content \u2581from \u2581the \u2581file \u2581file ."], "references": ["\u2581// \u2581 Preload File \u2581returns \u2581the \u2581 view \u2581which \u2581can \u2581 preload \u2581static \u2581files \u2581and \u2581serve \u2581them . \u2581// \u2581The \u2581different \u2581between \u2581` Static File ` \u2581and \u2581` Preload File"], "bleu": 0.09755472262973743, "rouge_l": 0.2934707903780069}
{"id": 6563, "predictions": ["\u2581// \u2581 List Load balancer s \u2581fetches \u2581the \u2581 balancer s \u2581from \u2581the \u2581 config ."], "references": ["\u2581// List Load balancer s \u2581returns \u2581a \u2581 Collection \u2581struct \u2581for \u2581 loadbalancer s \u2581in \u2581the \u2581 Datacenter"], "bleu": 0.24330140957587487, "rouge_l": 0.523854961832061}
{"id": 6617, "predictions": ["\u2581// \u2581 Update Group \u2581updates \u2581the \u2581 group \u2581with \u2581the \u2581given \u2581 group ."], "references": ["\u2581// Update Group \u2581updates \u2581a \u2581 group"], "bleu": 0.20333448190047887, "rouge_l": 0.6079734219269103}
{"id": 6581, "predictions": ["\u2581// \u2581 Delete Snapshot \u2581deletes \u2581a \u2581snapshot \u2581from \u2581the \u2581 Client ."], "references": ["\u2581// \u2581 Delete Snapshot \u2581deletes \u2581a \u2581specified \u2581snapshot"], "bleu": 0.48633831680799433, "rouge_l": 0.7261904761904763}
{"id": 7909, "predictions": ["\u2581// \u2581 Escape IdentityKey \u2581returns \u2581a \u2581 set \u2581of \u2581 escape \u2581characters \u2581in \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// Escape CommaSeparated \u2581escapes \u2581the \u2581args \u2581and \u2581make \u2581a \u2581comma \u2581 sep are ted \u2581list \u2581with \u2581it ."], "bleu": 0.0931377532902409, "rouge_l": 0.2777777777777778}
{"id": 6367, "predictions": ["\u2581// \u2581Register Path \u2581registers \u2581a \u2581 path \u2581to \u2581the \u2581filesystem"], "references": ["\u2581// \u2581Register Path \u2581register \u2581 view \u2581paths"], "bleu": 0.24808415001701817, "rouge_l": 0.48605577689243035}
{"id": 7344, "predictions": ["\u2581// \u2581 Mutate Manage Offer \u2581sets \u2581the \u2581 set \u2581of \u2581 Manage Offer \u2581 Offer"], "references": ["\u2581// \u2581 Mutate Manage Offer \u2581for \u2581 Amount \u2581sets \u2581the \u2581 Manage Offer Op ' s \u2581 Amount \u2581field"], "bleu": 0.35890711875544457, "rouge_l": 0.6336166194523135}
{"id": 8075, "predictions": ["\u2581// \u2581 URL \u2581returns \u2581the \u2581 URL \u2581of \u2581the \u2581 URL \u2581in \u2581the \u2581 URL"], "references": ["\u2581// \u2581 URL \u2581prefixes \u2581a \u2581 url \u2581string \u2581with \u2581the \u2581request \u2581 language ."], "bleu": 0.17609282679116184, "rouge_l": 0.416382252559727}
{"id": 7287, "predictions": ["\u2581// \u2581 GetUser \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 name \u2581in \u2581the \u2581 name , \u2581or \u2581nil \u2581if \u2581the \u2581// \u2581 name \u2581is \u2581not \u2581found ."], "references": ["\u2581// \u2581Just \u2581like \u2581os . Getenv , \u2581but \u2581with \u2581a \u2581second \u2581return \u2581value ; \u2581a \u2581boolean \u2581specifying \u2581// \u2581if \u2581 name \u2581was \u2581actually \u2581 set \u2581in \u2581the \u2581environment ."], "bleu": 0.0840620032518797, "rouge_l": 0.24840023269342645}
{"id": 7088, "predictions": ["\u2581// \u2581Add Field Error \u2581adds \u2581a \u2581field \u2581to \u2581the \u2581 form \u2581of \u2581the \u2581field ."], "references": ["\u2581// \u2581Add Field Error \u2581appends \u2581an \u2581error \u2581to \u2581a \u2581list \u2581of \u2581field \u2581specific \u2581errors ."], "bleu": 0.2722589423069702, "rouge_l": 0.5333333333333332}
{"id": 6218, "predictions": ["\u2581// \u2581 New Multi Writer \u2581returns \u2581a \u2581new \u2581 empty \u2581 slice \u2581of \u2581 type \u2581 data ."], "references": ["\u2581// \u2581 New Angular Writer \u2581creates \u2581a \u2581new \u2581 code \u2581writer \u2581that \u2581generates \u2581 angular . js \u2581types ."], "bleu": 0.18955995242264623, "rouge_l": 0.48412698412698413}
{"id": 7472, "predictions": ["\u2581// \u2581 Combinations For Switch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 Switch ' s \u2581 data \u2581from \u2581the \u2581// \u2581 blockchain . \u2581If \u2581the \u2581 type \u2581is \u2581not \u2581"], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Memo"], "bleu": 0.11227564716917941, "rouge_l": 0.3779429987608426}
{"id": 7379, "predictions": ["\u2581// \u2581 Checksum \u2581returns \u2581the \u2581checksum \u2581of \u2581the \u2581 data"], "references": ["\u2581// \u2581 Checksum \u2581returns \u2581the \u2581 2- byte \u2581checksum \u2581for \u2581the \u2581provided \u2581 data"], "bleu": 0.3825346091989868, "rouge_l": 0.7281167108753316}
{"id": 7581, "predictions": ["\u2581// \u2581 getController For Switch \u2581implements \u2581the \u2581 ledger . Ledger Store \u2581interface"], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Ledger Entry Change"], "bleu": 0.06540289896438653, "rouge_l": 0.33862014274385405}
{"id": 7894, "predictions": ["\u2581// \u2581parse \u2581is \u2581a \u2581long - through \u2581to \u2581the \u2581 Message Stream \u2581interface ."], "references": ["\u2581// \u2581Parse \u2581incoming \u2581message"], "bleu": 0.08839374326825923, "rouge_l": 0.1234817813765182}
{"id": 7319, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581Returns \u2581the \u2581parsed \u2581 languages \u2581in \u2581a \u2581human \u2581readable \u2581 f ash ion ."], "bleu": 0.09956647337521526, "rouge_l": 0.2993865030674847}
{"id": 6584, "predictions": ["\u2581// \u2581 Reserve IP Block \u2581 reserve s \u2581a \u2581 IP \u2581block ."], "references": ["\u2581// Reserve IP Block \u2581creates \u2581an \u2581 IP \u2581block"], "bleu": 0.2658483576665877, "rouge_l": 0.657935285053929}
{"id": 6618, "predictions": ["\u2581// \u2581 Delete Group \u2581 - \u2581Deletes \u2581a \u2581 group \u2581with \u2581the \u2581given \u2581 group \u2581 ID ."], "references": ["\u2581// Delete Group \u2581deletes \u2581a \u2581 group"], "bleu": 0.1566384057330969, "rouge_l": 0.5213675213675213}
{"id": 6308, "predictions": ["\u2581// \u2581 New SS Authenticator \u2581returns \u2581a \u2581new \u2581 Authenticator \u2581that \u2581uses \u2581 SS r \u2581to \u2581 get \u2581the \u2581 SS Authenticator"], "references": ["\u2581// \u2581 New SS Authenticator \u2581returns \u2581an \u2581 authenticator \u2581that \u2581 wraps \u2581another \u2581one \u2581and \u2581adds \u2581the \u2581logic \u2581needed \u2581to \u2581// \u2581create \u2581sessions \u2581in \u2581 Self - Service ."], "bleu": 0.2129347734163967, "rouge_l": 0.42095357590966126}
{"id": 6467, "predictions": ["\u2581// \u2581 Stream Client Interceptor \u2581returns \u2581a \u2581 Stream Client \u2581interceptor \u2581that \u2581 wraps \u2581 Client ."], "references": ["\u2581// \u2581 Stream Client Interceptor \u2581applies \u2581fn \u2581to \u2581errors \u2581 recieve d \u2581by \u2581client ."], "bleu": 0.28433291815307693, "rouge_l": 0.44248704663212435}
{"id": 7160, "predictions": ["\u2581// \u2581 On Handler \u2581implements \u2581 Service . On Handler ."], "references": ["\u2581// \u2581 On Handler \u2581can \u2581be \u2581used \u2581in \u2581JSON - encoded \u2581HTTP \u2581API \u2581to \u2581 enable \u2581 maintenance . \u2581// \u2581It \u2581returns \u2581HTTP \u2581 Status \u2581 Created \u2581if \u2581the \u2581"], "bleu": 0.06130250142137494, "rouge_l": 0.2701107011070111}
{"id": 6395, "predictions": ["\u2581// \u2581 Exec Node \u2581executes \u2581the \u2581 exec . Node . Exec Node ."], "references": ["\u2581// Exec Node \u2581is \u2581like \u2581 Exec , \u2581except \u2581it \u2581will \u2581attempt \u2581to \u2581return \u2581the \u2581result \u2581as \u2581a \u2581node - set ."], "bleu": 0.09290702674134467, "rouge_l": 0.32049036777583184}
{"id": 6736, "predictions": ["\u2581// \u2581Convert Response \u2581converts \u2581a \u2581response \u2581to \u2581an \u2581error ."], "references": ["\u2581// \u2581Convert Response \u2581converts \u2581http \u2581error \u2581to \u2581internal \u2581error \u2581 type \u2581// \u2581based \u2581on \u2581HTTP \u2581response \u2581 code \u2581and \u2581HTTP \u2581 body \u2581 contents"], "bleu": 0.09730423377030238, "rouge_l": 0.3285457809694794}
{"id": 6937, "predictions": ["\u2581// \u2581total Network VLAN \u2581returns \u2581the \u2581 slice \u2581of \u2581network \u2581 data \u2581in \u2581the \u2581 VM ."], "references": ["\u2581// \u2581total Network Adapters \u2581returns \u2581the \u2581total \u2581number \u2581of \u2581network \u2581 adapters \u2581in \u2581the \u2581 VM X \u2581file ."], "bleu": 0.3217481072613722, "rouge_l": 0.7150586113615871}
{"id": 6708, "predictions": ["\u2581// \u2581 Switch Mode \u2581sets \u2581the \u2581 info Mode \u2581for \u2581the \u2581request ."], "references": ["\u2581// \u2581 Switch Mode \u2581is \u2581handle \u2581to \u2581store \u2581switch \u2581 status \u2581in \u2581cookie"], "bleu": 0.27824623288353134, "rouge_l": 0.38461538461538464}
{"id": 6949, "predictions": ["\u2581// \u2581 Bus Type From ID \u2581returns \u2581a \u2581new \u2581 Bus Type \u2581struct \u2581from \u2581the \u2581 ID"], "references": ["\u2581// \u2581 Bus Type From ID \u2581gets \u2581 Bus Type \u2581from \u2581device \u2581 ID ."], "bleu": 0.44219732271776674, "rouge_l": 0.7585492227979275}
{"id": 7967, "predictions": ["\u2581// \u2581 Insert 2 \u2581inserts \u2581a \u2581new \u2581 set \u2581of \u2581 items \u2581into \u2581a \u2581 set \u2581of \u2581 items ."], "references": ["\u2581// \u2581 Insert 2 \u2581is \u2581a \u2581more \u2581verbose \u2581version \u2581of \u2581 Insert"], "bleu": 0.20217803037339238, "rouge_l": 0.4581545064377682}
{"id": 6875, "predictions": ["\u2581// \u2581 Implement \u2581 Outgoing Audio \u2581method"], "references": ["\u2581// \u2581 querystring \u2581implements \u2581 querystring er \u2581to \u2581represent \u2581the \u2581audio \u2581file ."], "bleu": 0.1114789227233716, "rouge_l": 0.2846034214618974}
{"id": 7384, "predictions": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581the \u2581 AccountId \u2581 equals \u2581another ."], "references": ["\u2581// \u2581 Equals \u2581returns \u2581true \u2581if \u2581` other ` \u2581is \u2581equivalent \u2581to \u2581` a id `"], "bleu": 0.3433101852760102, "rouge_l": 0.4062153163152054}
{"id": 7279, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581of \u2581the \u2581 top \u2581of \u2581the \u2581stack ."], "references": ["\u2581// \u2581Set \u2581sets \u2581the \u2581element \u2581at \u2581position \u2581` i ` \u2581to \u2581` v `. \u2581The \u2581stack \u2581 size \u2581is \u2581automatically \u2581// \u2581adjusted ."], "bleu": 0.1385451410028015, "rouge_l": 0.31743278404163056}
{"id": 7647, "predictions": ["\u2581// \u2581 Submit Transaction \u2581 submit s \u2581a \u2581transaction \u2581to \u2581the \u2581client ."], "references": ["\u2581// \u2581 Submit Transaction \u2581 submit s \u2581a \u2581transaction \u2581to \u2581the \u2581network . \u2581err \u2581can \u2581be \u2581either \u2581error \u2581object \u2581or \u2581 horizon . Error \u2581object ."], "bleu": 0.3147304951658491, "rouge_l": 0.5804916732751786}
{"id": 6912, "predictions": ["\u2581// \u2581tags From Field \u2581returns \u2581a \u2581 set \u2581of \u2581tags \u2581that \u2581are \u2581 set \u2581to \u2581the \u2581field ."], "references": ["\u2581// \u2581tags From Field \u2581returns \u2581a \u2581 slice \u2581of \u2581option \u2581strings ."], "bleu": 0.38761990534234064, "rouge_l": 0.6224489795918368}
{"id": 6630, "predictions": ["\u2581// \u2581 UpdateUser \u2581updates \u2581a \u2581user \u2581with \u2581the \u2581given \u2581user ."], "references": ["\u2581// UpdateUser \u2581updates \u2581user \u2581information"], "bleu": 0.17033186037639278, "rouge_l": 0.5362637362637362}
{"id": 6585, "predictions": ["\u2581// \u2581Get IP Block \u2581returns \u2581the \u2581 IP \u2581block \u2581for \u2581the \u2581given \u2581 IP \u2581address ."], "references": ["\u2581// Get IP Block \u2581gets \u2581an \u2581 IP \u2581blocks"], "bleu": 0.1332358437599213, "rouge_l": 0.4212707182320442}
{"id": 7689, "predictions": ["\u2581// \u2581 GetRequest ID \u2581returns \u2581the \u2581 ID \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581 GetRequest ID \u2581returns \u2581a \u2581request \u2581 ID \u2581from \u2581the \u2581given \u2581context \u2581if \u2581one \u2581is \u2581present . \u2581// \u2581Returns \u2581the \u2581 empty \u2581string \u2581if \u2581a \u2581request \u2581 ID \u2581cannot"], "bleu": 0.10984848946840269, "rouge_l": 0.3978260869565217}
{"id": 6656, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581environment \u2581variables \u2581and \u2581returns \u2581the \u2581 Environment Flags \u2581// \u2581as \u2581well \u2581as \u2581the \u2581 name \u2581of \u2581the \u2581environment \u2581variable ."], "references": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581environment \u2581flags \u2581from \u2581os . Environ . \u2581Must \u2581be \u2581called \u2581// \u2581after \u2581all \u2581flags \u2581are \u2581defined \u2581and \u2581before \u2581flags \u2581are \u2581accessed \u2581by \u2581the \u2581// \u2581program ."], "bleu": 0.1642058972901059, "rouge_l": 0.3267857142857143}
{"id": 6720, "predictions": ["\u2581// \u2581is Path Safe \u2581checks \u2581if \u2581the \u2581string \u2581 s \u2581is \u2581a \u2581valid \u2581 path ."], "references": ["\u2581// \u2581is Path Safe \u2581checks \u2581if \u2581the \u2581passed \u2581in \u2581 path \u2581 conform s \u2581to \u2581a \u2581whitelist ."], "bleu": 0.43461124548383323, "rouge_l": 0.6402671755725191}
{"id": 7761, "predictions": ["\u2581// \u2581 Load Bosh Release \u2581 loads \u2581the \u2581 Bosh \u2581release \u2581from \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Load Bosh Release \u2581creates \u2581an \u2581initialized \u2581 bosh Release \u2581instance \u2581from \u2581the \u2581// \u2581spec if ed \u2581local \u2581or \u2581remote \u2581 . tgz \u2581file"], "bleu": 0.20129095230626776, "rouge_l": 0.460377358490566}
{"id": 6596, "predictions": ["\u2581// \u2581Get Server \u2581returns \u2581the \u2581server \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581Get Server \u2581pull s \u2581 data \u2581for \u2581the \u2581server \u2581where \u2581 id \u2581= \u2581srv id \u2581returns \u2581a \u2581 Instance \u2581struct"], "bleu": 0.1271189933503357, "rouge_l": 0.4043560606060606}
{"id": 6782, "predictions": ["\u2581// \u2581log Panic \u2581logs \u2581the \u2581given \u2581interface \u2581and \u2581returns \u2581the \u2581 empty \u2581 map"], "references": ["\u2581// \u2581log Panic \u2581logs \u2581the \u2581caller \u2581tree \u2581when \u2581a \u2581panic \u2581occurs ."], "bleu": 0.3237722713145643, "rouge_l": 0.3900255754475704}
{"id": 6201, "predictions": ["\u2581// \u2581 readAll Async \u2581returns \u2581a \u2581 slice \u2581of \u2581bytes \u2581that \u2581can \u2581be \u2581used \u2581to \u2581read \u2581the \u2581result \u2581// \u2581of \u2581the \u2581result ."], "references": ["\u2581// \u2581 Read \u2581file \u2581asynchronously"], "bleu": 0.06964541799727335, "rouge_l": 0.16158940397350993}
{"id": 6284, "predictions": ["\u2581// \u2581Create \u2581a \u2581 key \u2581from \u2581the \u2581registry"], "references": ["\u2581// \u2581Create NamedType \u2581returns \u2581a \u2581new \u2581 type \u2581given \u2581a \u2581 name , \u2581the \u2581 name \u2581must \u2581be \u2581unique ."], "bleu": 0.06197705798903779, "rouge_l": 0.3315217391304348}
{"id": 6393, "predictions": ["\u2581// \u2581 Exec Bool \u2581executes \u2581the \u2581 exec \u2581function \u2581as \u2581a \u2581 type , \u2581returning \u2581true \u2581if \u2581the \u2581 data \u2581is \u2581not \u2581// \u2581 set ."], "references": ["\u2581// Exec Bool \u2581is \u2581like \u2581 Exec , \u2581except \u2581it \u2581will \u2581attempt \u2581to \u2581convert \u2581the \u2581result \u2581to \u2581its \u2581boolean \u2581value ."], "bleu": 0.08947853200770763, "rouge_l": 0.3036984352773826}
{"id": 6571, "predictions": ["\u2581// \u2581 List L 8 \u2581returns \u2581the \u2581 L UN"], "references": ["\u2581// \u2581 List L ans \u2581returns \u2581a \u2581 Collection \u2581for \u2581 lan s \u2581in \u2581the \u2581 Datacenter"], "bleu": 0.20718837189559308, "rouge_l": 0.4953596287703016}
{"id": 7204, "predictions": ["\u2581// \u2581 New Loop Var \u2581returns \u2581a \u2581new \u2581 Loop Var \u2581from \u2581the \u2581given \u2581array \u2581and \u2581values ."], "references": ["\u2581// \u2581 New Loop Var \u2581creates \u2581the \u2581loop \u2581variable"], "bleu": 0.2592170537135687, "rouge_l": 0.4728682170542636}
{"id": 7321, "predictions": ["\u2581// \u2581 Prefix \u2581returns \u2581a \u2581handler \u2581that \u2581 wraps \u2581the \u2581prefix \u2581of \u2581the \u2581given \u2581prefix ."], "references": ["\u2581// \u2581 strip \u2581 Prefix \u2581for \u2581every \u2581incoming \u2581http \u2581request"], "bleu": 0.12729922658368398, "rouge_l": 0.24078947368421053}
{"id": 6631, "predictions": ["\u2581// \u2581 DeleteUser \u2581 - \u2581 remove \u2581a \u2581user \u2581from \u2581the \u2581user ."], "references": ["\u2581// DeleteUser \u2581deletes \u2581the \u2581specified \u2581user"], "bleu": 0.12011055432195765, "rouge_l": 0.45101663585951934}
{"id": 7359, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581transaction \u2581for \u2581the \u2581 Manage \u2581 data"], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Manage Data Builder \u2581causes \u2581the \u2581under y lying \u2581// \u2581 Manage Data \u2581to \u2581be \u2581added \u2581to \u2581the \u2581operation \u2581list \u2581for \u2581the \u2581provided \u2581// \u2581transaction"], "bleu": 0.09903439518775721, "rouge_l": 0.3473309608540925}
{"id": 7135, "predictions": ["\u2581// \u2581 New Map Error Registry \u2581creates \u2581a \u2581new \u2581 Map Error Registry ."], "references": ["\u2581// \u2581 New Map Error Registry \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Map Error Registry ."], "bleu": 0.7595203410282167, "rouge_l": 0.9222462203023757}
{"id": 7355, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581transaction \u2581to \u2581be \u2581 set \u2581to \u2581the \u2581trust \u2581operation"], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Change Trust Builder \u2581causes \u2581the \u2581under y lying \u2581// \u2581 CreateAccount Op \u2581to \u2581be \u2581added \u2581to \u2581the \u2581operation \u2581list \u2581for \u2581the \u2581provided \u2581// \u2581transaction"], "bleu": 0.11835764736093043, "rouge_l": 0.41924398625429554}
{"id": 7907, "predictions": ["\u2581// \u2581Get Forwarder \u2581returns \u2581a \u2581 Forwarder \u2581for \u2581the \u2581given \u2581 name"], "references": ["\u2581// \u2581Get Forwarder \u2581ret re ive s \u2581a \u2581 forwarder \u2581with \u2581the \u2581given \u2581 name"], "bleu": 0.331012249304298, "rouge_l": 0.6535714285714286}
{"id": 7354, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581transaction \u2581to \u2581be \u2581 set \u2581to \u2581the \u2581given \u2581transaction"], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Allow Trust Builder \u2581causes \u2581the \u2581under y lying \u2581 Allow Trust Op \u2581// \u2581to \u2581be \u2581added \u2581to \u2581the \u2581operation \u2581list \u2581for \u2581the \u2581provided \u2581transaction"], "bleu": 0.11601277025340072, "rouge_l": 0.41924398625429554}
{"id": 7683, "predictions": ["\u2581// \u2581 Quant ize \u2581 turn s \u2581a \u2581 byte \u2581to \u2581the \u2581buffer \u2581and \u2581 increments \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Quant ize \u2581 quantize s \u2581the \u2581audio \u2581signal \u2581to \u2581match \u2581the \u2581target \u2581bit Depth"], "bleu": 0.25422541413895555, "rouge_l": 0.4535315985130111}
{"id": 8107, "predictions": ["\u2581// \u2581 WriteTo \u2581implements \u2581io . Writer To \u2581interface . \u2581It \u2581serialize s \u2581the \u2581tuple \u2581// \u2581into \u2581the \u2581wire \u2581 format ."], "references": ["\u2581// \u2581 WriteTo \u2581sends \u2581the \u2581binary \u2581representation \u2581of \u2581the \u2581 Tuple \u2581to \u2581// \u2581the \u2581given \u2581io . Writer ."], "bleu": 0.17059573701616804, "rouge_l": 0.34602917341977313}
{"id": 6660, "predictions": ["\u2581// \u2581 Line Reader From \u2581reads \u2581a \u2581line \u2581from \u2581a \u2581file \u2581and \u2581returns \u2581a \u2581channel \u2581that \u2581// \u2581will \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581 contents \u2581of \u2581the \u2581file ."], "references": ["\u2581// \u2581 Line Reader From \u2581returns \u2581a \u2581channel \u2581that \u2581reads \u2581the \u2581 contents \u2581of \u2581a \u2581file \u2581// \u2581line - by - line ."], "bleu": 0.3357825043105124, "rouge_l": 0.5798479087452472}
{"id": 6624, "predictions": ["\u2581// \u2581 List Group Users \u2581lists \u2581the \u2581users \u2581 group \u2581by \u2581 ID ."], "references": ["\u2581// List Group Users \u2581lists \u2581 Users \u2581in \u2581a \u2581 group"], "bleu": 0.30130404892785684, "rouge_l": 0.5723860589812332}
{"id": 6877, "predictions": ["\u2581// \u2581 Total \u2581returns \u2581the \u2581current \u2581 serializable \u2581metric"], "references": ["\u2581// \u2581 querystring \u2581implements \u2581 querystring er \u2581to \u2581represent \u2581the \u2581request ."], "bleu": 0.15122637383061946, "rouge_l": 0.2785388127853881}
{"id": 6394, "predictions": ["\u2581// \u2581 Exec Num \u2581executes \u2581the \u2581 data \u2581in \u2581the \u2581 data \u2581 table ."], "references": ["\u2581// Exec Num \u2581is \u2581like \u2581 Exec , \u2581except \u2581it \u2581will \u2581attempt \u2581to \u2581convert \u2581the \u2581result \u2581to \u2581its \u2581number \u2581value ."], "bleu": 0.09925819503773099, "rouge_l": 0.32360742705570295}
{"id": 6580, "predictions": ["\u2581// \u2581Get Snapshot \u2581retrieves \u2581a \u2581snapshot \u2581from \u2581the \u2581 Client ."], "references": ["\u2581// Get Snapshot \u2581gets \u2581a \u2581specific \u2581snapshot"], "bleu": 0.14323145079400493, "rouge_l": 0.4629981024667932}
{"id": 6817, "predictions": ["\u2581// \u2581 Recover \u2581creates \u2581a \u2581middleware \u2581that \u2581recover s \u2581the \u2581middleware ."], "references": ["\u2581// \u2581 Recover \u2581creates \u2581middleware \u2581that \u2581can \u2581recover \u2581from \u2581a \u2581panic \u2581in \u2581a \u2581handler , \u2581// \u2581storing \u2581a \u2581 Panic Error \u2581for \u2581future \u2581handling ."], "bleu": 0.12307371330782801, "rouge_l": 0.4066666666666666}
{"id": 6891, "predictions": ["\u2581// \u2581 New APIClient \u2581returns \u2581a \u2581new \u2581 APIClient \u2581with \u2581the \u2581given \u2581configuration"], "references": ["\u2581// \u2581 New APIClient \u2581creates \u2581a \u2581new \u2581API \u2581client . \u2581 Requires \u2581a \u2581 userAgent \u2581string \u2581describing \u2581your \u2581application . \u2581// \u2581optionally \u2581a \u2581custom \u2581http . Client \u2581to \u2581allow \u2581for"], "bleu": 0.08550035685780794, "rouge_l": 0.30391459074733096}
{"id": 7862, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Functions"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581function s \u2581client"], "bleu": 0.6406746857842317, "rouge_l": 0.6984732824427481}
{"id": 7795, "predictions": ["\u2581// \u2581 Job \u2581 - \u2581 get \u2581job \u2581 status \u2581of \u2581 Diff ."], "references": ["\u2581// \u2581 Job \u2581writes \u2581out \u2581the \u2581job \u2581differences \u2581between \u2581the \u2581specified \u2581 releases"], "bleu": 0.18207052811092136, "rouge_l": 0.3728606356968216}
{"id": 6556, "predictions": ["\u2581// \u2581 Delete Datacenter \u2581deletes \u2581the \u2581 datacenter \u2581for \u2581the \u2581given \u2581 id ."], "references": ["\u2581// Delete Datacenter \u2581deletes \u2581a \u2581 data \u2581 center"], "bleu": 0.1892240568795935, "rouge_l": 0.543026706231454}
{"id": 6331, "predictions": ["\u2581// \u2581 write Headers \u2581writes \u2581a \u2581 headers \u2581to \u2581the \u2581 dump ."], "references": ["\u2581// \u2581 write Headers \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581writes \u2581the \u2581given \u2581HTTP \u2581 headers \u2581to \u2581the \u2581given \u2581buffer \u2581as \u2581// \u2581human \u2581readable \u2581strings . \u2581If \u2581 Dump Format"], "bleu": 0.13651999589026034, "rouge_l": 0.43416370106761565}
{"id": 7331, "predictions": ["\u2581// \u2581 Mutate Payment \u2581sets \u2581the \u2581 Destination \u2581for \u2581the \u2581given \u2581object"], "references": ["\u2581// \u2581 Mutate Payment \u2581for \u2581 Destination \u2581sets \u2581the \u2581 Payment Op ' s \u2581 Destination \u2581field"], "bleu": 0.2801958197510242, "rouge_l": 0.5350877192982455}
{"id": 7367, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581 body \u2581of \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581Set Options Builder \u2581causes \u2581the \u2581under y lying \u2581// \u2581Set Options Op \u2581to \u2581be \u2581added \u2581to \u2581the \u2581operation \u2581list \u2581for \u2581the \u2581provided \u2581// \u2581transaction"], "bleu": 0.07887610750746875, "rouge_l": 0.31770833333333337}
{"id": 7558, "predictions": ["\u2581// \u2581 GroupID For Switch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 ledger \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Ledger Upgrade"], "bleu": 0.13069935064415725, "rouge_l": 0.44363636363636366}
{"id": 6951, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581file \u2581to \u2581the \u2581 VM X \u2581file"], "references": ["\u2581// \u2581 Write \u2581marshal s \u2581and \u2581writes \u2581 VM X \u2581file \u2581to \u2581disk"], "bleu": 0.39104476750171163, "rouge_l": 0.6354166666666667}
{"id": 6553, "predictions": ["\u2581// \u2581Create Datacenter \u2581creates \u2581a \u2581new \u2581 datacenter \u2581for \u2581the \u2581client ."], "references": ["\u2581// Create Datacenter \u2581creates \u2581a \u2581 data \u2581 center"], "bleu": 0.21401603033752975, "rouge_l": 0.48878205128205127}
{"id": 7356, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581transaction \u2581for \u2581the \u2581given \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 CreateAccount Builder \u2581causes \u2581the \u2581under y lying \u2581// \u2581 CreateAccount Op \u2581to \u2581be \u2581added \u2581to \u2581the \u2581operation \u2581list \u2581for \u2581the \u2581provided \u2581// \u2581transaction"], "bleu": 0.08589365908010088, "rouge_l": 0.363095238095238}
{"id": 7035, "predictions": ["\u2581// \u2581 Results \u2581returns \u2581a \u2581 slice \u2581of \u2581all \u2581the \u2581 Job \u2581 items \u2581from \u2581the \u2581pool ."], "references": ["\u2581// \u2581 Results \u2581retrieves \u2581the \u2581completed \u2581jobs ."], "bleu": 0.14025775160081475, "rouge_l": 0.413279132791328}
{"id": 7996, "predictions": ["\u2581// \u2581 Memory InUse \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581 items \u2581in \u2581the \u2581 set \u2581of \u2581 active \u2581 data ."], "references": ["\u2581// \u2581 Memory InUse \u2581returns \u2581total \u2581memory \u2581used \u2581by \u2581all \u2581 N itr o \u2581instances \u2581in \u2581the \u2581current \u2581process"], "bleu": 0.23498697990013487, "rouge_l": 0.39546191247974066}
{"id": 7579, "predictions": ["\u2581// \u2581 New S cp History Entry \u2581creates \u2581a \u2581new \u2581 S cp History Entry \u2581instance"], "references": ["\u2581// \u2581 New S cp History Entry \u2581creates \u2581a \u2581new \u2581 S cp History Entry ."], "bleu": 0.9351334836242398, "rouge_l": 0.9375000000000001}
{"id": 6634, "predictions": ["\u2581// \u2581 ListResource sByType \u2581returns \u2581the \u2581list \u2581of \u2581resources \u2581for \u2581the \u2581given \u2581resource \u2581 type ."], "references": ["\u2581// ListResource sByType \u2581list \u2581resources \u2581by \u2581 type"], "bleu": 0.1431712315455507, "rouge_l": 0.6206395348837209}
{"id": 6362, "predictions": ["\u2581// \u2581 Re queue \u2581adds \u2581the \u2581given \u2581timeout \u2581to \u2581the \u2581 Message ."], "references": ["\u2581// \u2581 Re queue \u2581must \u2581be \u2581called \u2581on \u2581messages \u2581received \u2581from \u2581a \u2581consumer \u2581to \u2581let \u2581the \u2581 NS Q \u2581// \u2581server \u2581know \u2581that \u2581the \u2581message \u2581could \u2581not \u2581be \u2581 pro"], "bleu": 0.0880554129240232, "rouge_l": 0.30391459074733096}
{"id": 7546, "predictions": ["\u2581// \u2581 New OperationResult \u2581returns \u2581a \u2581new \u2581 OperationResult ."], "references": ["\u2581// \u2581 New OperationResult \u2581creates \u2581a \u2581new \u2581 OperationResult ."], "bleu": 0.7016879391277371, "rouge_l": 0.9}
{"id": 8080, "predictions": ["\u2581// \u2581 Load File \u2581 loads \u2581a \u2581package \u2581from \u2581the \u2581file ."], "references": ["\u2581// \u2581 Load File \u2581reads \u2581a \u2581schema \u2581document \u2581from \u2581a \u2581file ."], "bleu": 0.3541698766144061, "rouge_l": 0.6666666666666666}
{"id": 6619, "predictions": ["\u2581// \u2581 List Shares \u2581 - \u2581returns \u2581a \u2581 CSI \u2581 group \u2581for \u2581the \u2581 group ."], "references": ["\u2581// List Shares \u2581lists \u2581all \u2581 shares"], "bleu": 0.10802314890908067, "rouge_l": 0.3604135893648449}
{"id": 6615, "predictions": ["\u2581// \u2581Get Group \u2581returns \u2581the \u2581 group \u2581with \u2581the \u2581given \u2581 group \u2581 ID ."], "references": ["\u2581// Get Group \u2581gets \u2581a \u2581 group"], "bleu": 0.12300686288463772, "rouge_l": 0.3891547049441786}
{"id": 7371, "predictions": ["\u2581// \u2581 InitialState \u2581returns \u2581a \u2581new \u2581 ledger \u2581for \u2581the \u2581given \u2581 key \u2581and \u2581 key"], "references": ["\u2581// \u2581 InitialState \u2581returns \u2581the \u2581initial \u2581state \u2581of \u2581the \u2581 Ledger Entry \u2581identified \u2581by \u2581` key ` \u2581// \u2581just \u2581prior \u2581to \u2581the \u2581application \u2581of \u2581the \u2581transaction \u2581the \u2581produced \u2581` b"], "bleu": 0.10037385075988395, "rouge_l": 0.2885135135135135}
{"id": 6860, "predictions": ["\u2581// \u2581 New Outgoing Document \u2581creates \u2581a \u2581new \u2581 Outgoing Document \u2581with \u2581the \u2581given \u2581 content \u2581// \u2581and \u2581 fileName"], "references": ["\u2581// \u2581 New Outgoing Document \u2581creates \u2581a \u2581new \u2581outgoing \u2581file ."], "bleu": 0.380913704166708, "rouge_l": 0.5446428571428572}
{"id": 6883, "predictions": ["\u2581// \u2581 New Inline QueryResult M GIF 4 G if \u2581creates \u2581a \u2581new \u2581 inline \u2581query ."], "references": ["\u2581// \u2581 New Inline QueryResult M peg 4 G if \u2581returns \u2581a \u2581new \u2581 Inline QueryResult M peg 4 G if \u2581// \u2581with \u2581all \u2581mandatory \u2581fields \u2581 set ."], "bleu": 0.23728896330831575, "rouge_l": 0.5398230088495575}
{"id": 6858, "predictions": ["\u2581// \u2581 New Outgoing Audio \u2581creates \u2581a \u2581new \u2581audio \u2581audio \u2581with \u2581a \u2581given \u2581recipient \u2581 name ."], "references": ["\u2581// \u2581 New Outgoing Audio \u2581creates \u2581a \u2581new \u2581outgoing \u2581audio \u2581file ."], "bleu": 0.4736415826167952, "rouge_l": 0.7117852975495915}
{"id": 6616, "predictions": ["\u2581// \u2581Create Group \u2581creates \u2581a \u2581new \u2581 group \u2581with \u2581the \u2581given \u2581 group ."], "references": ["\u2581// Create Group \u2581creates \u2581a \u2581 group"], "bleu": 0.20333448190047887, "rouge_l": 0.6079734219269103}
{"id": 6409, "predictions": ["\u2581// \u2581Get Attribute \u2581returns \u2581the \u2581attribute \u2581of \u2581the \u2581given \u2581 path ."], "references": ["\u2581// Get Attribute \u2581is \u2581a \u2581convenience \u2581function \u2581for \u2581getting \u2581the \u2581specified \u2581attribute \u2581from \u2581an \u2581element . \u2581// false \u2581is \u2581returned \u2581if \u2581the \u2581attribute \u2581is \u2581not \u2581found ."], "bleu": 0.048421092687854064, "rouge_l": 0.28773584905660377}
{"id": 6856, "predictions": ["\u2581// \u2581 New Outgoing Voice \u2581creates \u2581a \u2581new \u2581 voice \u2581 voice"], "references": ["\u2581// \u2581 New Outgoing Voice \u2581creates \u2581a \u2581new \u2581outgoing \u2581 voice \u2581note ."], "bleu": 0.6455064609748772, "rouge_l": 0.7942708333333333}
{"id": 6850, "predictions": ["\u2581// \u2581 New Outgoing Video \u2581creates \u2581a \u2581new \u2581 Outgoing Video \u2581object \u2581from \u2581the \u2581given \u2581// \u2581 content \u2581 name ."], "references": ["\u2581// \u2581 New Outgoing Video \u2581creates \u2581a \u2581new \u2581outgoing \u2581 video \u2581file ."], "bleu": 0.38091370416670794, "rouge_l": 0.6143001007049346}
{"id": 6854, "predictions": ["\u2581// \u2581 New Outgoing Sticker \u2581creates \u2581a \u2581new \u2581 Outgoing Sticker"], "references": ["\u2581// \u2581 New Outgoing Sticker \u2581creates \u2581a \u2581new \u2581outgoing \u2581 sticker \u2581message ."], "bleu": 0.6080202955051607, "rouge_l": 0.7388963660834454}
{"id": 6852, "predictions": ["\u2581// \u2581 New Outgoing Photo \u2581creates \u2581a \u2581new \u2581 photo \u2581of \u2581 photo ."], "references": ["\u2581// \u2581 New Outgoing Photo \u2581creates \u2581a \u2581new \u2581outgoing \u2581 photo ."], "bleu": 0.6475445426291286, "rouge_l": 0.8580562659846547}
{"id": 7312, "predictions": ["\u2581// \u2581 Performs \u2581a \u2581 GraphQL \u2581function \u2581that \u2581will \u2581 call \u2581the \u2581 type \u2581of \u2581the \u2581object \u2581to \u2581 t ini ."], "references": ["\u2581// \u2581 Performs \u2581validation \u2581and \u2581combine s \u2581errors \u2581from \u2581validation \u2581// \u2581with \u2581errors \u2581from \u2581 deserialization , \u2581then \u2581maps \u2581both \u2581the \u2581// \u2581resulting \u2581struct \u2581and \u2581the \u2581errors \u2581to \u2581the \u2581context"], "bleu": 0.08521873661091375, "rouge_l": 0.2619631901840491}
{"id": 7358, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581transaction \u2581for \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Inf lation Builder \u2581causes \u2581the \u2581under y lying \u2581// \u2581 Inf lation Op \u2581to \u2581be \u2581added \u2581to \u2581the \u2581operation \u2581list \u2581for \u2581the \u2581provided \u2581//"], "bleu": 0.06701988620057787, "rouge_l": 0.3151291512915129}
{"id": 7566, "predictions": ["\u2581// \u2581 GroupID For Switch \u2581returns \u2581the \u2581 data \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Ledger Key"], "bleu": 0.10621165710621107, "rouge_l": 0.4305882352941176}
{"id": 7202, "predictions": ["\u2581// \u2581tx Print \u2581returns \u2581a \u2581 structured \u2581 description \u2581of \u2581the \u2581 State ."], "references": ["\u2581// \u2581Prints \u2581the \u2581 contents \u2581of \u2581register \u2581sa \u2581to \u2581 Output . \u2581// \u2581 Force fully \u2581applies \u2581 html \u2581 escaping \u2581unless \u2581the \u2581variable \u2581in \u2581sa \u2581is \u2581marked \u2581\" raw"], "bleu": 0.04740863723237132, "rouge_l": 0.21328671328671328}
{"id": 6368, "predictions": ["\u2581// \u2581 Asset \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581asset"], "references": ["\u2581// \u2581 Asset \u2581 get \u2581 content \u2581with \u2581 name \u2581from \u2581asset fs"], "bleu": 0.19235610974773318, "rouge_l": 0.42479108635097496}
{"id": 6628, "predictions": ["\u2581// \u2581 GetUser \u2581retrieves \u2581the \u2581user \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 GetUser \u2581gets \u2581a \u2581user"], "bleu": 0.24808415001701817, "rouge_l": 0.5236051502145923}
{"id": 6595, "predictions": ["\u2581// \u2581 List Servers \u2581returns \u2581a \u2581list \u2581of \u2581servers \u2581on \u2581the \u2581given \u2581server ."], "references": ["\u2581// \u2581 List Servers \u2581returns \u2581a \u2581server \u2581struct \u2581collection"], "bleu": 0.41374412020518814, "rouge_l": 0.6335311572700296}
{"id": 6448, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 type \u2581that \u2581is \u2581not \u2581registered \u2581with \u2581the \u2581// \u2581given \u2581attributes ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581error \u2581based \u2581on \u2581the \u2581error \u2581descriptor"], "bleu": 0.1336412760311249, "rouge_l": 0.3824451410658307}
{"id": 6629, "predictions": ["\u2581// \u2581 CreateUser \u2581creates \u2581a \u2581user \u2581with \u2581the \u2581provided \u2581user ."], "references": ["\u2581// CreateUser \u2581creates \u2581a \u2581user"], "bleu": 0.33180774028439425, "rouge_l": 0.6703296703296704}
{"id": 7420, "predictions": ["\u2581// \u2581 New PublicKey \u2581returns \u2581a \u2581new \u2581 PublicKey \u2581object ."], "references": ["\u2581// \u2581 New PublicKey \u2581creates \u2581a \u2581new \u2581 PublicKey ."], "bleu": 0.5452469119630863, "rouge_l": 0.8645669291338582}
{"id": 6514, "predictions": ["\u2581// \u2581 Names \u2581returns \u2581the \u2581names \u2581of \u2581the \u2581 stylesheet \u2581in \u2581the \u2581 stylesheet ."], "references": ["\u2581// \u2581 Names \u2581returns \u2581the \u2581names \u2581of \u2581all \u2581variables \u2581within \u2581the \u2581template ."], "bleu": 0.4682568791024402, "rouge_l": 0.6512455516014234}
{"id": 7948, "predictions": ["\u2581// \u2581 Memory InUse \u2581returns \u2581the \u2581number \u2581of \u2581 active \u2581 items \u2581in \u2581the \u2581 set \u2581of \u2581 active \u2581// \u2581 data ."], "references": ["\u2581// \u2581 Memory InUse \u2581returns \u2581total \u2581memory \u2581used \u2581by \u2581node tables \u2581in \u2581a \u2581process"], "bleu": 0.20144990145560465, "rouge_l": 0.3392029657089898}
{"id": 6182, "predictions": ["\u2581// \u2581build Payload \u2581returns \u2581a \u2581 API Params \u2581instance \u2581of \u2581the \u2581given \u2581 slice \u2581of \u2581params ."], "references": ["\u2581// \u2581 Re construct \u2581payload \u2581 map \u2581from \u2581flatten \u2581values"], "bleu": 0.0859076483566362, "rouge_l": 0.2331210191082802}
{"id": 6554, "predictions": ["\u2581// \u2581Get Datacenter \u2581returns \u2581the \u2581 datacenter \u2581for \u2581the \u2581given \u2581 id ."], "references": ["\u2581// Get Datacenter \u2581gets \u2581a \u2581 datacenter"], "bleu": 0.14283632578659286, "rouge_l": 0.42287694974003465}
{"id": 6369, "predictions": ["\u2581// \u2581 Glob \u2581returns \u2581all \u2581paths \u2581for \u2581the \u2581given \u2581pattern"], "references": ["\u2581// \u2581 Glob \u2581list \u2581matched \u2581files \u2581from \u2581asset fs"], "bleu": 0.23462350320528, "rouge_l": 0.31881533101045295}
{"id": 7944, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 key ' s \u2581value \u2581from \u2581the \u2581 table ."], "references": ["\u2581// \u2581Get \u2581returns \u2581node \u2581pointer \u2581for \u2581the \u2581lookup \u2581 key"], "bleu": 0.20333448190047887, "rouge_l": 0.5154929577464789}
{"id": 7213, "predictions": ["\u2581// \u2581 NewFile Template Fetcher \u2581returns \u2581a \u2581new \u2581 File Template Fetcher"], "references": ["\u2581// \u2581 NewFile Template Fetcher \u2581creates \u2581a \u2581new \u2581struct . \u2581` paths ` \u2581must \u2581give \u2581 us \u2581the \u2581// \u2581directories \u2581for \u2581 us \u2581to \u2581look \u2581the \u2581 templates \u2581in"], "bleu": 0.10690891317104145, "rouge_l": 0.363095238095238}
{"id": 6968, "predictions": ["\u2581// \u2581Set Virtual H w Version \u2581sets \u2581the \u2581version \u2581of \u2581the \u2581 VM ."], "references": ["\u2581// \u2581Set Virtual H w Version \u2581sets \u2581a \u2581virtual \u2581 hardware \u2581version \u2581in \u2581the \u2581 VM X \u2581file \u2581of \u2581the \u2581 VM ."], "bleu": 0.3946215884137919, "rouge_l": 0.6731748726655348}
{"id": 6636, "predictions": ["\u2581// \u2581 GetRequest \u2581 - \u2581 get \u2581request \u2581 data"], "references": ["\u2581// GetRequest \u2581gets \u2581a \u2581specific \u2581request"], "bleu": 0.14991106946711685, "rouge_l": 0.3927038626609442}
{"id": 7095, "predictions": ["\u2581// \u2581 Is Hash \u2581checks \u2581if \u2581the \u2581given \u2581hash \u2581is \u2581a \u2581hash ."], "references": ["\u2581// \u2581 Is Hash \u2581checks \u2581is \u2581provided \u2581string \u2581a \u2581valid \u2581hash ."], "bleu": 0.4160751652217845, "rouge_l": 0.725231175693527}
{"id": 6384, "predictions": ["\u2581// \u2581 Read dir \u2581reads \u2581a \u2581file \u2581from \u2581the \u2581file ."], "references": ["\u2581// \u2581 Read dir \u2581requests \u2581a \u2581list \u2581of \u2581entries \u2581in \u2581the \u2581 S 3 \u2581directory \u2581// \u2581represented \u2581by \u2581 f \u2581and \u2581returns \u2581a \u2581 slice \u2581of \u2581up \u2581to \u2581 n"], "bleu": 0.06130250142137494, "rouge_l": 0.2701107011070111}
{"id": 6783, "predictions": ["\u2581// \u2581 User \u2581returns \u2581the \u2581user ' s \u2581user ' s \u2581 username \u2581and \u2581 User ."], "references": ["\u2581// \u2581 User \u2581returns \u2581the \u2581user \u2581with \u2581the \u2581given \u2581 username . \u2581 Error \u2581is \u2581 set \u2581to \u2581// \u2581ErrMissing User \u2581if \u2581user \u2581is \u2581not \u2581found ."], "bleu": 0.220326805476668, "rouge_l": 0.4803149606299213}
{"id": 6609, "predictions": ["\u2581// \u2581Get Location \u2581returns \u2581the \u2581location \u2581of \u2581the \u2581location ."], "references": ["\u2581// \u2581Get Location \u2581returns \u2581location \u2581 data"], "bleu": 0.3672056269893592, "rouge_l": 0.6075697211155379}
{"id": 6583, "predictions": ["\u2581// \u2581 List IP Blocks \u2581returns \u2581a \u2581list \u2581of \u2581 IP Blocks \u2581for \u2581the \u2581 IP \u2581address ."], "references": ["\u2581// List IP Blocks \u2581lists \u2581all \u2581 IP \u2581blocks"], "bleu": 0.1566384057330969, "rouge_l": 0.4728682170542636}
{"id": 7161, "predictions": ["\u2581// \u2581 Off Handler \u2581 - \u2581 Off \u2581 GET \u2581requests"], "references": ["\u2581// \u2581 Off Handler \u2581can \u2581be \u2581used \u2581in \u2581JSON - encoded \u2581HTTP \u2581API \u2581to \u2581 disable \u2581 maintenance ."], "bleu": 0.17229420271138707, "rouge_l": 0.44525547445255476}
{"id": 6895, "predictions": ["\u2581// \u2581 From \u2581returns \u2581a \u2581 slice \u2581of \u2581 type \u2581 type \u2581from \u2581the \u2581 type \u2581of \u2581 data \u2581in \u2581the \u2581 DB ."], "references": ["\u2581// \u2581 From \u2581returns \u2581a \u2581\" FROM \" \u2581statement . \u2581// \u2581 A \u2581 table \u2581 name \u2581will \u2581be \u2581determined \u2581from \u2581 name \u2581of \u2581struct \u2581of \u2581arg . \u2581// \u2581If"], "bleu": 0.17861616445529885, "rouge_l": 0.43571428571428567}
{"id": 7955, "predictions": ["\u2581// \u2581 Seek First \u2581returns \u2581the \u2581first \u2581 iterator \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Seek First \u2581moves \u2581cursor \u2581to \u2581the \u2581first \u2581item"], "bleu": 0.28295596283263513, "rouge_l": 0.5154929577464789}
{"id": 7110, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Server \u2581instance"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Server ."], "bleu": 0.29271373977119725, "rouge_l": 0.6876006441223833}
{"id": 6639, "predictions": ["\u2581// \u2581Get Serializable Argument \u2581 - \u2581 get \u2581the \u2581value \u2581of \u2581the \u2581 data \u2581object , \u2581or \u2581nil \u2581if \u2581not \u2581found ."], "references": ["\u2581// \u2581Get Serializable Argument \u2581 get \u2581 serializable \u2581argument"], "bleu": 0.22816849039973935, "rouge_l": 0.48855835240274603}
{"id": 7952, "predictions": ["\u2581// \u2581 Refresh \u2581 refresh es \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Refresh \u2581is \u2581a \u2581 helper \u2581API \u2581to \u2581 call \u2581 refresh \u2581accessor \u2581tokens \u2581manually \u2581// \u2581This \u2581would \u2581 enable \u2581 S MR \u2581to \u2581 reclaim \u2581objects \u2581faster \u2581if"], "bleu": 0.039244314509059776, "rouge_l": 0.27518796992481204}
{"id": 6706, "predictions": ["\u2581// \u2581 Func Map \u2581implements \u2581the \u2581 Node Map \u2581interface ."], "references": ["\u2581// \u2581 Func Map \u2581will \u2581return \u2581 helper \u2581to \u2581 render \u2581 inline \u2581 edit \u2581 button"], "bleu": 0.1923085590015063, "rouge_l": 0.3438556933483653}
{"id": 6995, "predictions": ["\u2581// \u2581 refresh \u2581 refresh es \u2581the \u2581 data \u2581from \u2581the \u2581 set \u2581of \u2581 SID ."], "references": ["\u2581// \u2581 refresh \u2581 refresh \u2581store \u2581to \u2581 redis"], "bleu": 0.2749977595322415, "rouge_l": 0.4886515353805074}
{"id": 6552, "predictions": ["\u2581// \u2581 List Datacenter s \u2581returns \u2581a \u2581list \u2581of \u2581 datacenter s \u2581that \u2581are \u2581 set \u2581in \u2581the \u2581client ."], "references": ["\u2581// List Datacenter s \u2581lists \u2581all \u2581 data \u2581 centers"], "bleu": 0.1307655887510901, "rouge_l": 0.42558139534883715}
{"id": 6637, "predictions": ["\u2581// \u2581 GetRequest Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 status \u2581 code ."], "references": ["\u2581// \u2581 GetRequest Status \u2581 retur s n \u2581 status \u2581of \u2581the \u2581request"], "bleu": 0.393755531055134, "rouge_l": 0.5788849347568209}
{"id": 7643, "predictions": ["\u2581// \u2581 Safe Unmarshal \u2581 - \u2581 Safe Unmarshal \u2581to \u2581read \u2581from \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 Safe Unmarshal \u2581decodes \u2581the \u2581provided \u2581reader \u2581into \u2581the \u2581destination \u2581and \u2581verifies \u2581// \u2581that \u2581provided \u2581bytes \u2581are \u2581all \u2581consumed \u2581by \u2581the \u2581 unmarshall ing \u2581process ."], "bleu": 0.12556679167060034, "rouge_l": 0.3056549749463135}
{"id": 7364, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581 content \u2581of \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Memo Text \u2581sets \u2581the \u2581memo ."], "bleu": 0.3541698766144061, "rouge_l": 0.5833333333333334}
{"id": 6711, "predictions": ["\u2581// \u2581Parse File \u2581parses \u2581a \u2581 slice \u2581of \u2581 Machine \u2581 type \u2581and \u2581returns \u2581a \u2581 slice \u2581of \u2581// \u2581 machines ."], "references": ["\u2581// \u2581Parse File \u2581parses \u2581the \u2581 net rc \u2581file \u2581identified \u2581by \u2581 filename \u2581and \u2581returns \u2581the \u2581 set \u2581of \u2581// \u2581machine \u2581information \u2581and \u2581 macros \u2581defined \u2581in \u2581it . \u2581The"], "bleu": 0.15340249250781882, "rouge_l": 0.48650306748466265}
{"id": 6862, "predictions": ["\u2581// \u2581 New Outgoing Forward \u2581creates \u2581a \u2581new \u2581 Outgoing Forward"], "references": ["\u2581// \u2581 New Outgoing Forward \u2581creates \u2581a \u2581new \u2581outgoing , \u2581 forwarded \u2581message ."], "bleu": 0.555183767339915, "rouge_l": 0.7047496790757382}
{"id": 6445, "predictions": ["\u2581// \u2581 Limit And Offset From Incoming Context \u2581creates \u2581metadata \u2581from \u2581the \u2581context ."], "references": ["\u2581// \u2581 Limit And Offset From Incoming Context \u2581gets \u2581the \u2581limit \u2581and \u2581offset \u2581from \u2581the \u2581incoming \u2581context"], "bleu": 0.4923446067600677, "rouge_l": 0.6975051975051975}
{"id": 7880, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581server ."], "references": ["\u2581// \u2581 Stop \u2581the \u2581backend \u2581and \u2581shutdown \u2581all \u2581listeners . \u2581// \u2581Does \u2581NOT \u2581exist \u2581the \u2581process ."], "bleu": 0.09169119150678522, "rouge_l": 0.38754764930114366}
{"id": 7217, "predictions": ["\u2581// \u2581 New State \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 State \u2581struct ."], "references": ["\u2581// \u2581 New State \u2581creates \u2581a \u2581new \u2581 State \u2581struct"], "bleu": 0.3615855225145535, "rouge_l": 0.7732394366197185}
{"id": 6738, "predictions": ["\u2581// \u2581 Write Answer \u2581writes \u2581the \u2581 form \u2581of \u2581the \u2581 type \u2581as \u2581a \u2581string"], "references": ["\u2581// \u2581This \u2581is \u2581useful \u2581with \u2581 survey \u2581prompt ing \u2581library"], "bleu": 0.09103526405546068, "rouge_l": 0.1659863945578231}
{"id": 6885, "predictions": ["\u2581// \u2581 Send \u2581 downloads \u2581the \u2581request \u2581and \u2581returns \u2581the \u2581 LDAP \u2581 Response ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581request . \u2581// \u2581 On \u2581 success , \u2581the \u2581 photos \u2581are \u2581returned \u2581as \u2581a \u2581 UserProfile Photos Response ."], "bleu": 0.12302413241264154, "rouge_l": 0.47843137254901963}
{"id": 6292, "predictions": ["\u2581// \u2581Make Uniq \u2581creates \u2581a \u2581new \u2581 empty \u2581string \u2581with \u2581the \u2581given \u2581prefix ."], "references": ["\u2581// \u2581Make Uniq \u2581makes \u2581a \u2581unique \u2581 name \u2581given \u2581a \u2581prefix \u2581and \u2581a \u2581 set \u2581of \u2581names ."], "bleu": 0.1514182871075832, "rouge_l": 0.48897795591182364}
{"id": 8043, "predictions": ["\u2581// \u2581 emit \u2581emits \u2581a \u2581 token \u2581to \u2581the \u2581end \u2581of \u2581the \u2581 Lexer ."], "references": ["\u2581// \u2581 emit \u2581passes \u2581an \u2581item \u2581 pack \u2581to \u2581the \u2581client"], "bleu": 0.1892240568795935, "rouge_l": 0.4747081712062256}
{"id": 7630, "predictions": ["\u2581// \u2581 New Authenticated Message \u2581returns \u2581a \u2581new \u2581 Authenticated Message ."], "references": ["\u2581// \u2581 New Authenticated Message \u2581creates \u2581a \u2581new \u2581 Authenticated Message ."], "bleu": 0.7611606003349892, "rouge_l": 0.9166666666666665}
{"id": 6298, "predictions": ["\u2581// \u2581 With Trail \u2581returns \u2581a \u2581new \u2581 Eval Ctx \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581value ."], "references": ["\u2581// \u2581 With Trail \u2581creates \u2581a \u2581new \u2581context \u2581with \u2581 trail \u2581appended \u2581to"], "bleu": 0.23210911117419966, "rouge_l": 0.531590413943355}
{"id": 7794, "predictions": ["\u2581// \u2581 All \u2581implements \u2581the \u2581 Cmd \u2581interface \u2581for \u2581 Diff Cmd ."], "references": ["\u2581// \u2581 All \u2581writes \u2581out \u2581all \u2581the \u2581differences \u2581between \u2581the \u2581specified \u2581 releases"], "bleu": 0.19674979811155635, "rouge_l": 0.38461538461538464}
{"id": 6996, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 redis \u2581session \u2581by \u2581 ID ."], "references": ["\u2581// \u2581Get \u2581read \u2581 redis \u2581session \u2581by \u2581 sid"], "bleu": 0.46924700641055994, "rouge_l": 0.7128547579298832}
{"id": 6519, "predictions": ["\u2581// \u2581Add Result \u2581adds \u2581a \u2581 status \u2581to \u2581the \u2581 status \u2581of \u2581the \u2581check ."], "references": ["\u2581// \u2581Add Result \u2581adds \u2581a \u2581check \u2581result . \u2581This \u2581will \u2581not \u2581terminate \u2581the \u2581check . \u2581If \u2581// \u2581 status \u2581is \u2581the \u2581highest \u2581yet \u2581reported , \u2581 this \u2581will \u2581update \u2581the"], "bleu": 0.1599248714366856, "rouge_l": 0.41924398625429554}
{"id": 6977, "predictions": ["\u2581// \u2581 Stack With Caller \u2581calls \u2581the \u2581stack \u2581 trace \u2581on \u2581the \u2581stack ."], "references": ["\u2581// \u2581 Stack With Caller \u2581logs \u2581the \u2581error \u2581err \u2581with \u2581the \u2581caller \u2581package \u2581 name \u2581and \u2581the \u2581stack \u2581 trace ."], "bleu": 0.3123470470585429, "rouge_l": 0.5515370705244123}
{"id": 6702, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 empty \u2581 v ."], "references": ["\u2581// \u2581 New \u2581will \u2581create \u2581an \u2581 ActionBar \u2581object"], "bleu": 0.22416933501922287, "rouge_l": 0.4073455759599332}
{"id": 6232, "predictions": ["\u2581// \u2581 Write Metadata \u2581writes \u2581the \u2581metadata \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Write Metadata \u2581writes \u2581the \u2581 data \u2581structures \u2581that \u2581describe \u2581the \u2581API \u2581resources \u2581and \u2581actions ."], "bleu": 0.34754009089004634, "rouge_l": 0.5208110992529349}
{"id": 6873, "predictions": ["\u2581// \u2581 getBase QueryString \u2581 get \u2581the \u2581current \u2581time \u2581of \u2581the \u2581current \u2581time ."], "references": ["\u2581// \u2581 getBase QueryString \u2581gets \u2581a \u2581 Query string \u2581representing \u2581 this \u2581message ."], "bleu": 0.2676032275663791, "rouge_l": 0.42857142857142855}
{"id": 7646, "predictions": ["\u2581// \u2581 Sequence For Account \u2581returns \u2581the \u2581sequence \u2581of \u2581 key \u2581in \u2581the \u2581account ."], "references": ["\u2581// \u2581 Sequence For Account \u2581implements \u2581build . Sequence Provider"], "bleu": 0.31314224813827346, "rouge_l": 0.4979591836734694}
{"id": 7272, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 symbol \u2581 set ."], "references": ["\u2581// \u2581Set \u2581creates \u2581and \u2581sets \u2581a \u2581new \u2581 Lex Item \u2581to \u2581` name `"], "bleu": 0.12109261383365659, "rouge_l": 0.3347050754458162}
{"id": 6752, "predictions": ["\u2581// \u2581 Write Tabular Data \u2581writes \u2581the \u2581 tabular \u2581 data \u2581 data \u2581for \u2581the \u2581given \u2581// \u2581 data ."], "references": ["\u2581// \u2581 Write Tabular Data \u2581writes \u2581the \u2581given \u2581results \u2581to \u2581the \u2581given \u2581output \u2581stream"], "bleu": 0.3595290285752277, "rouge_l": 0.5468127490039841}
{"id": 6819, "predictions": ["\u2581// \u2581 Sync Handler \u2581 synchronize s \u2581a \u2581 container \u2581handler"], "references": ["\u2581// Sync Handler \u2581is \u2581a \u2581small \u2581wrapper \u2581around \u2581 Sync \u2581which \u2581simply \u2581 syn chron is es \u2581// all \u2581incoming \u2581connections . \u2581Use \u2581 Sync \u2581if \u2581you \u2581wish \u2581to \u2581implement"], "bleu": 0.03768805162013936, "rouge_l": 0.22509225092250923}
{"id": 6610, "predictions": ["\u2581// \u2581Get Contract Resources \u2581retrieves \u2581the \u2581 Contract Resources \u2581from \u2581the \u2581 api ."], "references": ["\u2581// \u2581Get Contract Resources \u2581returns \u2581list \u2581of \u2581contract \u2581resources"], "bleu": 0.24601372576927535, "rouge_l": 0.3620178041543027}
{"id": 7990, "predictions": ["\u2581// \u2581 Encode \u2581encodes \u2581the \u2581snapshot \u2581into \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Encode \u2581implements \u2581 Binary \u2581encoder \u2581for \u2581snapshot \u2581metadata"], "bleu": 0.19674979811155635, "rouge_l": 0.3562043795620438}
{"id": 6762, "predictions": ["\u2581// \u2581parseInt 32 \u2581converts \u2581a \u2581 byte \u2581 slice \u2581into \u2581a \u2581int 32 ."], "references": ["\u2581// \u2581parseInt \u2581treat s \u2581the \u2581given \u2581bytes \u2581as \u2581a \u2581big - endian , \u2581signed \u2581integer \u2581and \u2581returns \u2581// \u2581the \u2581result ."], "bleu": 0.08017090493873653, "rouge_l": 0.2206148282097649}
{"id": 6484, "predictions": ["\u2581// \u2581 WithField \u2581returns \u2581a \u2581new \u2581 filter \u2581that \u2581will \u2581be \u2581executed \u2581with \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 WithField \u2581filters \u2581the \u2581field \u2581and \u2581passes \u2581it \u2581on \u2581to \u2581the \u2581wrapped \u2581logger s \u2581 WithField"], "bleu": 0.1487964117124549, "rouge_l": 0.2352941176470588}
{"id": 6973, "predictions": ["\u2581// \u2581new Compiler \u2581returns \u2581a \u2581new \u2581 empty \u2581 Summary \u2581object ."], "references": ["\u2581// \u2581new StackFrame \u2581returns \u2581a \u2581new \u2581stack \u2581frame \u2581initialized \u2581from \u2581the \u2581passed \u2581// \u2581in \u2581program \u2581counter ."], "bleu": 0.15756568859158712, "rouge_l": 0.4013157894736842}
{"id": 7717, "predictions": ["\u2581// \u2581field String \u2581returns \u2581the \u2581string \u2581value \u2581of \u2581a \u2581 table ."], "references": ["\u2581// \u2581field String \u2581 - \u2581Creates \u2581field \u2581value \u2581string ."], "bleu": 0.22997519112894443, "rouge_l": 0.46212121212121204}
{"id": 7140, "predictions": ["\u2581// \u2581Add Handler \u2581adds \u2581a \u2581handler \u2581to \u2581 Rollbar \u2581with \u2581the \u2581given \u2581 code ."], "references": ["\u2581// \u2581Add Handler \u2581adds \u2581a \u2581new \u2581error \u2581handler \u2581with \u2581a \u2581 code \u2581to \u2581the \u2581registry . \u2581// \u2581It \u2581there \u2581already \u2581is \u2581an \u2581error \u2581or \u2581handler \u2581with \u2581the \u2581same \u2581 code"], "bleu": 0.1490173002837311, "rouge_l": 0.4611683848797251}
{"id": 6608, "predictions": ["\u2581// \u2581Get Regional Locations \u2581returns \u2581the \u2581 Regional \u2581 Locations \u2581for \u2581the \u2581given \u2581 id"], "references": ["\u2581// \u2581Get Regional Locations \u2581returns \u2581a \u2581list \u2581of \u2581available \u2581locations \u2581in \u2581a \u2581specific \u2581region"], "bleu": 0.30130404892785684, "rouge_l": 0.3469852104664391}
{"id": 7684, "predictions": ["\u2581// \u2581 PCM Scale \u2581 increments \u2581the \u2581scale \u2581for \u2581the \u2581given \u2581bit \u2581and \u2581 size ."], "references": ["\u2581// \u2581 PCM Scale \u2581converts \u2581a \u2581buffer \u2581with \u2581audio \u2581 content \u2581from \u2581-1 \u2581to \u2581 1 \u2581into \u2581// \u2581the \u2581 PCM \u2581scale \u2581based \u2581on \u2581the \u2581passed \u2581bit depth . \u2581//"], "bleu": 0.11108192584666195, "rouge_l": 0.41216216216216217}
{"id": 8051, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Tuple Type ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Tuple Type \u2581with \u2581the \u2581given \u2581namespace \u2581and \u2581 type \u2581 name"], "bleu": 0.2640833808024579, "rouge_l": 0.5434298440979956}
{"id": 7949, "predictions": ["\u2581// \u2581 debug Mark Free \u2581 marks \u2581the \u2581 size \u2581of \u2581the \u2581 left - tree ."], "references": ["\u2581// \u2581 Fill \u2581free \u2581blocks \u2581with \u2581a \u2581const \u2581// \u2581This \u2581can \u2581help \u2581debugging \u2581of \u2581memory \u2581 reclaim er \u2581 bugs"], "bleu": 0.09477023156017751, "rouge_l": 0.21310043668122272}
{"id": 6294, "predictions": ["\u2581// \u2581 WriteHeader \u2581writes \u2581the \u2581 content \u2581of \u2581the \u2581 data \u2581to \u2581the \u2581given \u2581 filename ."], "references": ["\u2581// \u2581 WriteHeader \u2581writes \u2581the \u2581header \u2581 text ."], "bleu": 0.28433291815307693, "rouge_l": 0.5700934579439252}
{"id": 6755, "predictions": ["\u2581// \u2581 Release \u2581 releases \u2581the \u2581 semaphore \u2581 data \u2581from \u2581the \u2581 semaphore"], "references": ["\u2581// \u2581 Release \u2581 unlock s \u2581the \u2581 semaphore \u2581and \u2581allows \u2581new \u2581lock \u2581instances \u2581to \u2581be \u2581called \u2581without \u2581// \u2581blocking \u2581if \u2581the \u2581number \u2581of \u2581locks \u2581currently \u2581equal \u2581the \u2581capacity ."], "bleu": 0.10806832313179944, "rouge_l": 0.3412587412587413}
{"id": 8095, "predictions": ["\u2581// \u2581 Store Nonce \u2581 wraps \u2581the \u2581 ctx . Context \u2581and \u2581 ctx . Context ."], "references": ["\u2581// \u2581 Store Nonce \u2581generates \u2581and \u2581stores \u2581a \u2581nonce \u2581in \u2581the \u2581outgoing \u2581response ."], "bleu": 0.22612164703205964, "rouge_l": 0.39397201291711514}
{"id": 6607, "predictions": ["\u2581// \u2581 List Locations \u2581returns \u2581a \u2581list \u2581of \u2581locations \u2581in \u2581the \u2581 Locations ."], "references": ["\u2581// \u2581 List Locations \u2581returns \u2581location \u2581collection \u2581 data"], "bleu": 0.33649324423301513, "rouge_l": 0.543026706231454}
{"id": 6627, "predictions": ["\u2581// \u2581 List Users \u2581returns \u2581a \u2581list \u2581of \u2581users ."], "references": ["\u2581// List Users \u2581lists \u2581all \u2581users"], "bleu": 0.18850319022747347, "rouge_l": 0.5236051502145923}
{"id": 6614, "predictions": ["\u2581// \u2581 List Groups \u2581returns \u2581a \u2581list \u2581of \u2581 Groups \u2581 groups"], "references": ["\u2581// List Groups \u2581lists \u2581all \u2581 groups"], "bleu": 0.17996531271765898, "rouge_l": 0.552536231884058}
{"id": 6466, "predictions": ["\u2581// \u2581 Unary Client Interceptor \u2581returns \u2581a \u2581 unary \u2581client \u2581interceptor \u2581that \u2581 wraps \u2581 Unary Client ."], "references": ["\u2581// \u2581 Unary Client Interceptor \u2581applies \u2581fn \u2581to \u2581errors \u2581 recieve d \u2581by \u2581client ."], "bleu": 0.27602580646531577, "rouge_l": 0.4929292929292929}
{"id": 6611, "predictions": ["\u2581// \u2581 List Images \u2581returns \u2581a \u2581list \u2581of \u2581images ."], "references": ["\u2581// \u2581 List Images \u2581returns \u2581an \u2581 Collection \u2581struct"], "bleu": 0.4617366309441026, "rouge_l": 0.5313588850174217}
{"id": 7989, "predictions": ["\u2581// \u2581 Snapshot Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581snapshot ."], "references": ["\u2581// \u2581 Snapshot Size \u2581returns \u2581the \u2581memory \u2581used \u2581by \u2581 N itr o \u2581snapshot \u2581metadata"], "bleu": 0.3900793834627842, "rouge_l": 0.5809523809523809}
{"id": 8059, "predictions": ["\u2581// \u2581 Equal \u2581returns \u2581true \u2581if \u2581the \u2581 Task \u2581 equals \u2581 b ."], "references": ["\u2581// \u2581 Equal \u2581 - \u2581define \u2581task \u2581equality"], "bleu": 0.17395797375642236, "rouge_l": 0.3824451410658307}
{"id": 6324, "predictions": ["\u2581// \u2581new Variable Dump Client \u2581returns \u2581a \u2581new \u2581 HTTPClient ."], "references": ["\u2581// \u2581new Variable Dump Client \u2581defines \u2581 accessors \u2581for \u2581package \u2581variables , \u2581which \u2581are \u2581not \u2581// \u2581go - routine \u2581safe \u2581so \u2581can \u2581the o ret ically \u2581change \u2581value \u2581while \u2581the"], "bleu": 0.0770838146104225, "rouge_l": 0.2701107011070111}
{"id": 6322, "predictions": ["\u2581// \u2581find Matches \u2581returns \u2581a \u2581list \u2581of \u2581 path \u2581matches \u2581matching \u2581the \u2581 path \u2581matches ."], "references": ["\u2581// \u2581Find \u2581paths \u2581that \u2581match \u2581given \u2581 href"], "bleu": 0.08513012360883544, "rouge_l": 0.17732558139534885}
{"id": 7425, "predictions": ["\u2581// \u2581 Exported For Switch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 Asset \u2581 type , \u2581or \u2581false \u2581if \u2581// \u2581the \u2581 type \u2581is \u2581not \u2581 empty ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Asset"], "bleu": 0.13367326676376465, "rouge_l": 0.3900255754475704}
{"id": 6579, "predictions": ["\u2581// \u2581 List Snapshots \u2581returns \u2581a \u2581list \u2581of \u2581snapshots ."], "references": ["\u2581// List Snapshots \u2581lists \u2581all \u2581snapshots"], "bleu": 0.18850319022747347, "rouge_l": 0.5236051502145923}
{"id": 6632, "predictions": ["\u2581// \u2581 List Resources \u2581returns \u2581the \u2581resources \u2581for \u2581the \u2581 Resources"], "references": ["\u2581// List Resources \u2581lists \u2581all \u2581resources"], "bleu": 0.17033186037639278, "rouge_l": 0.4969450101832994}
{"id": 7942, "predictions": ["\u2581// \u2581 Stats \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581node ."], "references": ["\u2581// \u2581 Stats \u2581returns \u2581node table \u2581statistics"], "bleu": 0.33180774028439425, "rouge_l": 0.5787476280834916}
{"id": 6635, "predictions": ["\u2581// \u2581 List Requests \u2581returns \u2581the \u2581request \u2581 headers \u2581for \u2581the \u2581client ."], "references": ["\u2581// List Requests \u2581lists \u2581all \u2581requests"], "bleu": 0.1350862565735141, "rouge_l": 0.3382624768946396}
{"id": 6476, "predictions": ["\u2581// \u2581 Fields From Incoming Context \u2581extracts \u2581the \u2581 token \u2581from \u2581the \u2581context ."], "references": ["\u2581// \u2581 Fields From Incoming Context \u2581returns \u2581peer \u2581information \u2581and \u2581 MD Log Fields \u2581from \u2581the \u2581given \u2581context"], "bleu": 0.3499129931669441, "rouge_l": 0.6112224448897796}
{"id": 7219, "predictions": ["\u2581// \u2581 Pop Frame \u2581returns \u2581the \u2581last \u2581frame \u2581of \u2581the \u2581frame ."], "references": ["\u2581// \u2581 Pop Frame \u2581 pop s \u2581the \u2581frame \u2581from \u2581the \u2581 top \u2581of \u2581the \u2581frame \u2581stack"], "bleu": 0.2696031451698737, "rouge_l": 0.6019736842105263}
{"id": 6950, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581the \u2581 VM X \u2581file \u2581from \u2581the \u2581file ."], "references": ["\u2581// \u2581 Read \u2581reads \u2581 VM X \u2581file \u2581from \u2581disk \u2581and \u2581unmarshal s \u2581it"], "bleu": 0.4923304640404836, "rouge_l": 0.6622436670687575}
{"id": 7250, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 children ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581 text ual \u2581representation \u2581of \u2581 this \u2581AST"], "bleu": 0.261569480628307, "rouge_l": 0.5176803394625177}
{"id": 7234, "predictions": ["\u2581// \u2581 New Cached \u2581returns \u2581an \u2581initialized \u2581 Cached Unexpected Loader \u2581instance"], "references": ["\u2581// \u2581 New Cached ByteCode Loader \u2581creates \u2581a \u2581new \u2581 Cached ByteCode Loader"], "bleu": 0.31639694591005163, "rouge_l": 0.5559895833333334}
{"id": 6361, "predictions": ["\u2581// \u2581 Finish \u2581sends \u2581the \u2581message \u2581to \u2581the \u2581 Message ."], "references": ["\u2581// \u2581 Finish \u2581must \u2581be \u2581called \u2581on \u2581every \u2581message \u2581received \u2581from \u2581a \u2581consumer \u2581to \u2581let \u2581the \u2581// \u2581 NS Q \u2581server \u2581know \u2581that \u2581the \u2581message \u2581was \u2581successfully \u2581processed . \u2581//"], "bleu": 0.0509241011835078, "rouge_l": 0.36014760147601477}
{"id": 7899, "predictions": ["\u2581// \u2581Check Password \u2581checks \u2581if \u2581the \u2581password \u2581is \u2581valid ."], "references": ["\u2581// \u2581Check \u2581the \u2581user \u2581password . \u2581 Graphics \u2581character \u2581are \u2581allowed . \u2581See \u2581unicode . Is Graphic ."], "bleu": 0.08864993685523051, "rouge_l": 0.33964365256124723}
{"id": 7008, "predictions": ["\u2581// \u2581 Res Status \u2581sets \u2581the \u2581 status \u2581of \u2581the \u2581context ."], "references": ["\u2581// \u2581 Res Status \u2581 Response \u2581 status \u2581 code , \u2581use \u2581http . StatusText \u2581to \u2581 write \u2581the \u2581response ."], "bleu": 0.16729800370105752, "rouge_l": 0.4621212121212121}
{"id": 6348, "predictions": ["\u2581// \u2581 New Consumer \u2581initializes \u2581a \u2581new \u2581 Consumer Config \u2581with \u2581default \u2581values ."], "references": ["\u2581// \u2581defaults \u2581will \u2581 set \u2581up \u2581 this \u2581configuration \u2581with \u2581the \u2581global \u2581defaults \u2581where \u2581they \u2581// \u2581were \u2581not \u2581already \u2581 set ."], "bleu": 0.06569518862868472, "rouge_l": 0.2670753064798599}
{"id": 7153, "predictions": ["\u2581// \u2581 New Set Headers Handler \u2581returns \u2581a \u2581handler \u2581that \u2581serves \u2581 headers \u2581with \u2581the \u2581given \u2581 headers ."], "references": ["\u2581// \u2581 New Set Headers Handler \u2581sets \u2581 prov i ed \u2581 headers \u2581on \u2581HTTP \u2581response ."], "bleu": 0.3392375549949802, "rouge_l": 0.5611775528978842}
{"id": 6851, "predictions": ["\u2581// \u2581 New Outgoing Video Visibility \u2581creates \u2581a \u2581new \u2581 Outgoing Video Messages \u2581that \u2581 contains \u2581the \u2581// \u2581given \u2581 video ID \u2581and \u2581 ID ."], "references": ["\u2581// \u2581 New Outgoing Video Resend \u2581creates \u2581a \u2581new \u2581outgoing \u2581 video \u2581file \u2581for \u2581re - sending ."], "bleu": 0.24180681260144146, "rouge_l": 0.516949152542373}
{"id": 6861, "predictions": ["\u2581// \u2581 New Outgoing Document Visibility \u2581creates \u2581a \u2581new \u2581 Outgoing Document \u2581with \u2581the \u2581given \u2581 content \u2581 ID \u2581and \u2581 ID ID"], "references": ["\u2581// \u2581 New Outgoing Document Resend \u2581creates \u2581a \u2581new \u2581outgoing \u2581file \u2581for \u2581re - sending ."], "bleu": 0.24672473365009281, "rouge_l": 0.4239791485664639}
{"id": 7972, "predictions": ["\u2581// \u2581 Bytes \u2581returns \u2581the \u2581 data \u2581from \u2581the \u2581 Item"], "references": ["\u2581// \u2581 Bytes \u2581return \u2581item \u2581 data \u2581bytes"], "bleu": 0.2521193618434983, "rouge_l": 0.5417406749555951}
{"id": 6859, "predictions": ["\u2581// \u2581 New Outgoing Audio \u2581audio \u2581creates \u2581a \u2581new \u2581audio \u2581audio \u2581with \u2581a \u2581given \u2581 patient"], "references": ["\u2581// \u2581 New Outgoing Audio Resend \u2581creates \u2581a \u2581new \u2581outgoing \u2581audio \u2581file \u2581for \u2581re - sending ."], "bleu": 0.34590502408647367, "rouge_l": 0.5424901185770752}
{"id": 6857, "predictions": ["\u2581// \u2581 New Outgoing Voice AsStream \u2581creates \u2581a \u2581new \u2581 Outgoing Voice Messages"], "references": ["\u2581// \u2581 New Outgoing Voice Resend \u2581creates \u2581a \u2581new \u2581outgoing \u2581 voice \u2581note \u2581for \u2581re - sending ."], "bleu": 0.3112430451839831, "rouge_l": 0.5642343268242548}
{"id": 6855, "predictions": ["\u2581// \u2581 New Outgoing Sticker Permutation \u2581creates \u2581a \u2581new \u2581 Outgoing Sticker"], "references": ["\u2581// \u2581 New Outgoing Sticker Resend \u2581creates \u2581a \u2581new \u2581outgoing \u2581 sticker \u2581message \u2581for \u2581// \u2581re - sending ."], "bleu": 0.27754253845721066, "rouge_l": 0.5579268292682926}
{"id": 6853, "predictions": ["\u2581// \u2581 New Outgoing Photo sheet \u2581creates \u2581a \u2581new \u2581 photo \u2581of \u2581 photo"], "references": ["\u2581// \u2581 New Outgoing Photo Resend \u2581creates \u2581a \u2581new \u2581outgoing \u2581 photo \u2581for \u2581re - sending ."], "bleu": 0.3616133091432861, "rouge_l": 0.6340956340956342}
{"id": 7878, "predictions": ["\u2581// \u2581 Startup \u2581 initiate s \u2581a \u2581new \u2581 semaphore \u2581 group"], "references": ["\u2581// \u2581 Startup \u2581is \u2581not \u2581required \u2581to \u2581use \u2581the \u2581 Repl Group Store ; \u2581it \u2581will \u2581automatically \u2581// \u2581 connect \u2581to \u2581backend \u2581stores \u2581as \u2581needed . \u2581However , \u2581if \u2581you"], "bleu": 0.04775343112354423, "rouge_l": 0.22101449275362317}
{"id": 7998, "predictions": ["\u2581// \u2581 Acquire \u2581is \u2581used \u2581to \u2581 unlock \u2581a \u2581 relation ."], "references": ["\u2581// \u2581 Acquire \u2581 marks \u2581 enter \u2581of \u2581an \u2581accessor \u2581in \u2581the \u2581skip list"], "bleu": 0.18116065851435417, "rouge_l": 0.3793532338308458}
{"id": 7785, "predictions": ["\u2581// \u2581Add Remote Stemcell \u2581adds \u2581a \u2581 set \u2581of \u2581 active \u2581 data \u2581to \u2581the \u2581 Deployment Manifest ."], "references": ["\u2581// \u2581Add Remote Stemcell \u2581adds \u2581a \u2581remote \u2581 stemcell \u2581to \u2581the \u2581manifest . \u2581// \u2581The \u2581 URL \u2581should \u2581not \u2581contain \u2581version \u2581information ."], "bleu": 0.280879890671304, "rouge_l": 0.5149654643131236}
{"id": 6459, "predictions": ["\u2581// \u2581 To GRPC \u2581converts \u2581a \u2581 grpc \u2581error \u2581to \u2581a \u2581gRPC \u2581 type ."], "references": ["\u2581// \u2581 To GRPC \u2581 turn s \u2581an \u2581error \u2581into \u2581a \u2581gRPC \u2581error"], "bleu": 0.2803950119994004, "rouge_l": 0.5788849347568209}
{"id": 7882, "predictions": ["\u2581// \u2581 Self Upgrade \u2581returns \u2581whether \u2581the \u2581upgrade \u2581is \u2581 active ."], "references": ["\u2581// \u2581 Self Upgrade \u2581deploy s \u2581an \u2581updated \u2581binary \u2581to \u2581disk \u2581using \u2581cmd ctrl . Github Updater"], "bleu": 0.19952865177726084, "rouge_l": 0.3344298245614035}
{"id": 6220, "predictions": ["\u2581// \u2581 path \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Path \u2581for \u2581given \u2581action , \u2581for \u2581now \u2581 simplify \u2581and \u2581take \u2581first \u2581 path \u2581in \u2581 Path Patterns . \u2581// \u2581 In \u2581the \u2581future \u2581we \u2581may \u2581want \u2581to"], "bleu": 0.06777004483150997, "rouge_l": 0.2837209302325582}
{"id": 6795, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Cert Signer"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581configured \u2581certificate \u2581signer ."], "bleu": 0.571751410886987, "rouge_l": 0.6256410256410255}
{"id": 6788, "predictions": ["\u2581// \u2581 New Auth \u2581creates \u2581a \u2581new \u2581 Auth \u2581instance"], "references": ["\u2581// \u2581 New Auth \u2581returns \u2581an \u2581 auth"], "bleu": 0.3672056269893592, "rouge_l": 0.5669144981412639}
{"id": 7917, "predictions": ["\u2581// \u2581 Exists \u2581checks \u2581if \u2581a \u2581 domain \u2581 exists \u2581in \u2581the \u2581 domain ."], "references": ["\u2581// \u2581 Exists \u2581returns \u2581true \u2581if \u2581the \u2581 domain"], "bleu": 0.22894156860669912, "rouge_l": 0.6108726752503576}
{"id": 7591, "predictions": ["\u2581// \u2581 New Transaction Meta \u2581returns \u2581a \u2581new \u2581 Transaction Meta \u2581object ."], "references": ["\u2581// \u2581 New Transaction Meta \u2581creates \u2581a \u2581new \u2581 Transaction Meta ."], "bleu": 0.6298129992394241, "rouge_l": 0.8863936591809777}
{"id": 6342, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581producer \u2581and \u2581starts \u2581the \u2581 Producer ."], "references": ["\u2581// \u2581 Start \u2581explicitly \u2581begins \u2581the \u2581producer \u2581in \u2581case \u2581it \u2581was \u2581initialized \u2581with \u2581// \u2581 New Producer \u2581instead \u2581of \u2581 Start Producer ."], "bleu": 0.10760390475755063, "rouge_l": 0.43262411347517726}
{"id": 7017, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581client \u2581with \u2581the \u2581given \u2581 PEM - encoded \u2581 path ."], "references": ["\u2581// \u2581 New \u2581instantiate s \u2581a \u2581new \u2581client \u2581with \u2581the \u2581given \u2581params \u2581and \u2581return \u2581a \u2581reference \u2581to \u2581it"], "bleu": 0.3791363335401185, "rouge_l": 0.5116495806150979}
{"id": 6591, "predictions": ["\u2581// \u2581Create Volume \u2581creates \u2581a \u2581new \u2581volume \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// Create Volume \u2581creates \u2581a \u2581volume"], "bleu": 0.19674979811155635, "rouge_l": 0.5637707948243993}
{"id": 6302, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface \u2581for \u2581 this \u2581// \u2581 FSM ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581unmarshaller \u2581interface ."], "bleu": 0.23287896954139942, "rouge_l": 0.5613496932515337}
{"id": 7357, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581 fee \u2581 rate \u2581of \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581Defaults \u2581sets \u2581reasonable \u2581defaults \u2581on \u2581the \u2581transaction \u2581being \u2581built"], "bleu": 0.29256127307315066, "rouge_l": 0.5}
{"id": 8040, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Token ."], "references": ["\u2581// \u2581 Used \u2581to \u2581print \u2581tokens"], "bleu": 0.12605968092174913, "rouge_l": 0.2484725050916497}
{"id": 6536, "predictions": ["\u2581// \u2581 GetJob sFor Project \u2581returns \u2581all \u2581 Jobs \u2581for \u2581a \u2581project ."], "references": ["\u2581// \u2581 GetJob sFor Project \u2581returns \u2581the \u2581full \u2581job \u2581details \u2581of \u2581the \u2581jobs \u2581belonging \u2581to \u2581the \u2581named \u2581project ."], "bleu": 0.30163914385031554, "rouge_l": 0.483647175421209}
{"id": 7071, "predictions": ["\u2581// \u2581 New Password \u2581returns \u2581a \u2581new \u2581 Password \u2581from \u2581a \u2581 Password \u2581password"], "references": ["\u2581// Generate \u2581one \u2581password \u2581that \u2581meets \u2581the \u2581given \u2581requirements"], "bleu": 0.09782375748961449, "rouge_l": 0.18100890207715134}
{"id": 6691, "predictions": ["\u2581// \u2581Build \u2581builds \u2581a \u2581 DoubleArray \u2581from \u2581a \u2581list \u2581of \u2581strings ."], "references": ["\u2581// \u2581Build \u2581constructs \u2581a \u2581double \u2581array \u2581from \u2581given \u2581keywords ."], "bleu": 0.16261701715194898, "rouge_l": 0.46212121212121204}
{"id": 6578, "predictions": ["\u2581// \u2581 Delete Nic \u2581deletes \u2581a \u2581 nic"], "references": ["\u2581// \u2581 Delete Nic \u2581deletes \u2581the \u2581 nic \u2581where \u2581 id = nic id \u2581and \u2581returns \u2581a \u2581 Resp \u2581struct"], "bleu": 0.15777684932819505, "rouge_l": 0.4641304347826086}
{"id": 7009, "predictions": ["\u2581// \u2581 Next \u2581implements \u2581the \u2581 ctx \u2581interface ."], "references": ["\u2581// \u2581 Next \u2581calls \u2581the \u2581next \u2581handler \u2581in \u2581the \u2581stack , \u2581but \u2581only \u2581if \u2581the \u2581response \u2581isn ' t \u2581already \u2581written ."], "bleu": 0.0685730930971447, "rouge_l": 0.2999016715830875}
{"id": 7392, "predictions": ["\u2581// \u2581 Bytes \u2581returns \u2581the \u2581bytes \u2581of \u2581a \u2581transaction ."], "references": ["\u2581// \u2581 Bytes \u2581encodes \u2581the \u2581builder ' s \u2581underlying \u2581envelope \u2581to \u2581 XDR"], "bleu": 0.1837852585949438, "rouge_l": 0.33983286908078}
{"id": 6882, "predictions": ["\u2581// \u2581 New Inline QueryResult G if \u2581creates \u2581a \u2581new \u2581 inline \u2581query \u2581 G if ."], "references": ["\u2581// \u2581 New Inline QueryResult G if \u2581returns \u2581a \u2581new \u2581 Inline QueryResult G if \u2581with \u2581all \u2581// \u2581mandatory \u2581fields \u2581 set ."], "bleu": 0.36330908110842147, "rouge_l": 0.632881085395052}
{"id": 6844, "predictions": ["\u2581// \u2581Get Me \u2581gets \u2581a \u2581user"], "references": ["\u2581// \u2581Get Me \u2581returns \u2581basic \u2581information \u2581about \u2581the \u2581bot \u2581in \u2581 form \u2581of \u2581a \u2581 User Response ."], "bleu": 0.058833072333542666, "rouge_l": 0.30576441102756885}
{"id": 6793, "predictions": ["\u2581// \u2581 Key Len \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 x ."], "references": ["\u2581// \u2581 Key Len \u2581returns \u2581the \u2581minimum \u2581number \u2581of \u2581bytes \u2581required \u2581to \u2581represent \u2581 x ; \u2581the \u2581result \u2581is \u2581 1 \u2581for \u2581 x \u2581== \u25810 . \u2581// \u2581Returns \u2581"], "bleu": 0.14188384982221036, "rouge_l": 0.47758007117437723}
{"id": 6901, "predictions": ["\u2581// \u2581 Count \u2581returns \u2581a \u2581 slice \u2581of \u2581 SQL \u2581with \u2581the \u2581column \u2581 name ."], "references": ["\u2581// \u2581 Count \u2581returns \u2581\" COUNT \" \u2581function ."], "bleu": 0.2240750868020436, "rouge_l": 0.4212707182320442}
{"id": 6943, "predictions": ["\u2581// \u2581Extract To Writer \u2581extracts \u2581the \u2581 contents \u2581of \u2581a \u2581archive \u2581into \u2581a \u2581 Writer ."], "references": ["\u2581// \u2581Extract To Writer \u2581writes \u2581the \u2581 content \u2581of \u2581a \u2581given \u2581file \u2581inside \u2581the \u2581archive \u2581to \u2581dst"], "bleu": 0.26468855947867065, "rouge_l": 0.5424901185770752}
{"id": 6312, "predictions": ["\u2581// \u2581 refresh \u2581 refresh es \u2581the \u2581cookie \u2581from \u2581the \u2581request"], "references": ["\u2581// \u2581 refresh \u2581updates \u2581the \u2581cookie \u2581and \u2581expiration \u2581used \u2581to \u2581sign \u2581requests \u2581from \u2581a \u2581successful \u2581session \u2581// \u2581creation \u2581API \u2581response ."], "bleu": 0.10556737707670708, "rouge_l": 0.35499515033947615}
{"id": 6589, "predictions": ["\u2581// \u2581Get Volume \u2581returns \u2581a \u2581volume \u2581by \u2581 ID ."], "references": ["\u2581// Get Volume \u2581gets \u2581a \u2581volume"], "bleu": 0.18850319022747347, "rouge_l": 0.5236051502145923}
{"id": 7938, "predictions": ["\u2581// \u2581 New Segment \u2581returns \u2581a \u2581new \u2581segment \u2581of \u2581the \u2581 Builder ."], "references": ["\u2581// \u2581 New Segment \u2581creates \u2581a \u2581new \u2581skip list \u2581segment"], "bleu": 0.3161487584488943, "rouge_l": 0.6233576642335765}
{"id": 7136, "predictions": ["\u2581// \u2581 AddError \u2581adds \u2581an \u2581error \u2581to \u2581the \u2581registry ."], "references": ["\u2581// \u2581 AddError \u2581adds \u2581a \u2581new \u2581error \u2581with \u2581a \u2581 code \u2581to \u2581the \u2581registry . \u2581// \u2581It \u2581there \u2581already \u2581is \u2581an \u2581error \u2581or \u2581handler \u2581with \u2581the \u2581same \u2581 code ,"], "bleu": 0.08647154598524984, "rouge_l": 0.4127819548872181}
{"id": 6422, "predictions": ["\u2581// \u2581 Descriptor \u2581returns \u2581a \u2581 Err Descriptor \u2581that \u2581will \u2581 call \u2581 this \u2581error \u2581if \u2581the \u2581// \u2581 type \u2581is \u2581not \u2581a \u2581 set \u2581of \u2581 code ."], "references": ["\u2581// \u2581 Descriptor \u2581returns \u2581the \u2581error \u2581descriptor \u2581from \u2581any \u2581error"], "bleu": 0.1264203703898735, "rouge_l": 0.28110599078341014}
{"id": 6878, "predictions": ["\u2581// \u2581 Implement \u2581the \u2581 Query \u2581interface"], "references": ["\u2581// \u2581 querystring \u2581implements \u2581 querystring er \u2581to \u2581represent \u2581the \u2581outgoing \u2581 video \u2581// \u2581file ."], "bleu": 0.07678812443288274, "rouge_l": 0.3249001331557923}
{"id": 6543, "predictions": ["\u2581// \u2581 DateTime \u2581returns \u2581the \u2581 DateTime ."], "references": ["\u2581// \u2581 DateTime \u2581produces \u2581a \u2581time . Time \u2581object \u2581from \u2581a \u2581System Timestamp \u2581object ."], "bleu": 0.13156100890487687, "rouge_l": 0.32972972972972975}
{"id": 7394, "predictions": ["\u2581// \u2581 Mutate Transaction Envelope \u2581is \u2581the \u2581same \u2581as \u2581 Mutate Transaction , \u2581but \u2581it \u2581does \u2581nothing ."], "references": ["\u2581// \u2581 Mutate Transaction Envelope \u2581for \u2581 Transaction Builder \u2581causes \u2581the \u2581under y lying \u2581// \u2581transaction \u2581to \u2581be \u2581 set \u2581as \u2581the \u2581provided \u2581envelope ' s \u2581 Tx \u2581field"], "bleu": 0.15381081617519557, "rouge_l": 0.32663989290495316}
{"id": 7228, "predictions": ["\u2581// \u2581Get L var \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 L \u2581variable \u2581in \u2581the \u2581frame ."], "references": ["\u2581// \u2581Get L var \u2581gets \u2581the \u2581frame \u2581local \u2581variable \u2581at \u2581position \u2581 i"], "bleu": 0.26220676436185975, "rouge_l": 0.42165898617511516}
{"id": 8023, "predictions": ["\u2581// \u2581check Line \u2581returns \u2581a \u2581string \u2581if \u2581the \u2581line \u2581is \u2581valid ."], "references": ["\u2581// \u2581 To \u2581check \u2581 this \u2581line \u2581is \u2581a \u2581valid \u2581 key - value \u2581pair \u2581or \u2581not ."], "bleu": 0.10598720362242484, "rouge_l": 0.3860759493670886}
{"id": 7237, "predictions": ["\u2581// \u2581Get Cache Path \u2581returns \u2581the \u2581cache \u2581 path \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get Cache Path \u2581creates \u2581a \u2581string \u2581describing \u2581where \u2581a \u2581given \u2581template \u2581 key \u2581// \u2581would \u2581be \u2581cached \u2581in \u2581the \u2581file \u2581system"], "bleu": 0.17583265158983158, "rouge_l": 0.36589545844044563}
{"id": 6605, "predictions": ["\u2581// \u2581 Detach Volume \u2581 detach es \u2581a \u2581volume \u2581from \u2581the \u2581specified \u2581 id ."], "references": ["\u2581// Detach Volume \u2581 detach es \u2581a \u2581volume"], "bleu": 0.45608395453519407, "rouge_l": 0.7360482654600301}
{"id": 7641, "predictions": ["\u2581// \u2581Get No min ate \u2581returns \u2581the \u2581 min t \u2581of \u2581the \u2581 S 3 \u2581 type \u2581of \u2581the \u2581 S cp \u2581statement ."], "references": ["\u2581// \u2581Get No min ate \u2581retrieves \u2581the \u2581 No min ate \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.17600792911442223, "rouge_l": 0.363095238095238}
{"id": 6385, "predictions": ["\u2581// \u2581Find \u2581returns \u2581a \u2581 slice \u2581of \u2581 items \u2581that \u2581match \u2581the \u2581given \u2581 path ."], "references": ["\u2581// Find \u2581finds \u2581nodes \u2581based \u2581on \u2581the \u2581 path expr . Path Expr"], "bleu": 0.1203921753741131, "rouge_l": 0.35138248847926273}
{"id": 8009, "predictions": ["\u2581// \u2581 Seek \u2581moves \u2581the \u2581 iterator \u2581to \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Seek \u2581moves \u2581 iterator \u2581to \u2581a \u2581provided \u2581item"], "bleu": 0.35556702356686953, "rouge_l": 0.6233576642335765}
{"id": 7784, "predictions": ["\u2581// \u2581Add Remote Release \u2581adds \u2581a \u2581new \u2581release \u2581to \u2581the \u2581manifest ."], "references": ["\u2581// Add Remote Release \u2581 - \u2581adds \u2581a \u2581remote \u2581release \u2581to \u2581the \u2581manifest . \u2581 Url \u2581should \u2581not \u2581// contain \u2581version \u2581information"], "bleu": 0.20935175390680777, "rouge_l": 0.5586080586080586}
{"id": 7726, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581server ."], "references": ["\u2581// Stop \u2581the \u2581server ."], "bleu": 0.38260294162784475, "rouge_l": 0.8591549295774649}
{"id": 6847, "predictions": ["\u2581// \u2581 New Outgoing Message \u2581creates \u2581a \u2581new \u2581 Outgoing Message \u2581with \u2581the \u2581given \u2581recipient \u2581 text ."], "references": ["\u2581// \u2581 New Outgoing Message \u2581creates \u2581a \u2581new \u2581outgoing \u2581message ."], "bleu": 0.435949382480739, "rouge_l": 0.648936170212766}
{"id": 7329, "predictions": ["\u2581// \u2581Remove Trust \u2581removes \u2581the \u2581trust \u2581 data \u2581trust \u2581from \u2581the \u2581specified \u2581 code ."], "references": ["\u2581// \u2581Remove Trust \u2581is \u2581a \u2581 helper \u2581that \u2581creates \u2581 Change Trust Builder"], "bleu": 0.16943571815930883, "rouge_l": 0.36180308422301305}
{"id": 7177, "predictions": ["\u2581// \u2581 Read \u2581implements \u2581the \u2581 Read er \u2581interface \u2581for \u2581 ReadWrite Seek er ."], "references": ["\u2581// \u2581 Read \u2581implements \u2581the \u2581io . Reader \u2581interface"], "bleu": 0.3237722713145643, "rouge_l": 0.5236051502145923}
{"id": 6766, "predictions": ["\u2581// \u2581parse Base 128 Int \u2581converts \u2581a \u2581 128 - bit \u2581integer \u2581to \u2581a \u2581 128 - bit \u2581integer \u2581value ."], "references": ["\u2581// \u2581parse Base 128 Int \u2581parses \u2581a \u2581base -128 \u2581encoded \u2581int \u2581from \u2581the \u2581given \u2581offset \u2581in \u2581the \u2581// \u2581given \u2581 byte \u2581 slice . \u2581It \u2581returns \u2581the \u2581value \u2581and \u2581the"], "bleu": 0.1613070631726089, "rouge_l": 0.34205607476635513}
{"id": 6486, "predictions": ["\u2581// \u2581 Filter Matching \u2581returns \u2581a \u2581 filter \u2581that \u2581matches \u2581the \u2581first \u2581matching \u2581 filter \u2581// \u2581that \u2581matches \u2581the \u2581first \u2581 filter ."], "references": ["\u2581// \u2581 Filter Sensitive \u2581creates \u2581a \u2581 Filter \u2581that \u2581filters \u2581most \u2581 sensitive \u2581 data \u2581like \u2581password s , \u2581// \u2581 keys , \u2581access _ tokens , \u2581etc . \u2581and"], "bleu": 0.10053072701122982, "rouge_l": 0.3685800604229607}
{"id": 7029, "predictions": ["\u2581// \u2581sub \u2581worker \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581adds \u2581the \u2581job \u2581to \u2581the \u2581pool ."], "references": ["\u2581// \u2581sub worker \u2581catch es \u2581any \u2581panic \u2581while \u2581running \u2581the \u2581job ."], "bleu": 0.1332358437599213, "rouge_l": 0.36658653846153844}
{"id": 7628, "predictions": ["\u2581// \u2581Get Get S cp Ledger Seq \u2581returns \u2581the \u2581 S cp \u2581 ledger \u2581 info \u2581for \u2581the \u2581given \u2581 S 3 \u2581 ledger ."], "references": ["\u2581// \u2581Get Get S cp Ledger Seq \u2581retrieves \u2581the \u2581Get S cp Ledger Seq \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the"], "bleu": 0.2450620809239739, "rouge_l": 0.3935483870967741}
{"id": 6491, "predictions": ["\u2581// \u2581new Batch Points \u2581returns \u2581a \u2581 functional \u2581 iterator \u2581for \u2581the \u2581given \u2581 set \u2581of \u2581 contexts \u2581// \u2581that \u2581have \u2581been \u2581 set \u2581to \u2581the \u2581 container ."], "references": ["\u2581// \u2581new Batch Points \u2581creates \u2581new \u2581 influxdb . Batch Points \u2581with \u2581specified \u2581bp Conf . \u2581// \u2581 Panic s \u2581on \u2581errors ."], "bleu": 0.13461801293778908, "rouge_l": 0.31423052157115255}
{"id": 6606, "predictions": ["\u2581// \u2581 Start Server \u2581starts \u2581a \u2581 Server \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581 Start Server \u2581starts \u2581a \u2581server"], "bleu": 0.4001601601922499, "rouge_l": 0.6079734219269103}
{"id": 7086, "predictions": ["\u2581// \u2581Create File \u2581creates \u2581a \u2581file \u2581with \u2581the \u2581given \u2581 filename ."], "references": ["\u2581// \u2581We \u2581could \u2581use \u2581 F allocate , \u2581but \u2581some \u2581 test \u2581 CI \u2581systems \u2581// \u2581do \u2581not \u2581support \u2581it , \u2581like \u2581 Travis - ci . org ."], "bleu": 0.029966440614733122, "rouge_l": 0.13616071428571427}
{"id": 6751, "predictions": ["\u2581// \u2581Amazon Request \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581create \u2581a \u2581request \u2581 type"], "references": ["\u2581// \u2581Amazon Request \u2581is \u2581an \u2581example \u2581to \u2581benchmark \u2581a \u2581 call \u2581to \u2581 google s \u2581 homepage"], "bleu": 0.21980365308689628, "rouge_l": 0.4557097118463179}
{"id": 6516, "predictions": ["\u2581// \u2581 Render Perf data \u2581 render \u2581 data \u2581from \u2581 data"], "references": ["\u2581// \u2581 Render Perf data \u2581accepts \u2581a \u2581 slice \u2581of \u2581 Perf Datum \u2581objects \u2581and \u2581returns \u2581their \u2581// \u2581 concatenate d \u2581string \u2581representation s \u2581in \u2581a \u2581 form \u2581suitable \u2581to"], "bleu": 0.09397825921862017, "rouge_l": 0.3536231884057971}
{"id": 6773, "predictions": ["\u2581// \u2581 Unmarshal WithParams \u2581 - \u2581decodes \u2581a \u2581 slice \u2581of \u2581bytes \u2581into \u2581a \u2581 slice \u2581of \u2581bytes ."], "references": ["\u2581// \u2581 Unmarshal WithParams \u2581allows \u2581field \u2581parameters \u2581to \u2581be \u2581specified \u2581for \u2581the \u2581// \u2581 top - level \u2581element . \u2581The \u2581 form \u2581of \u2581the \u2581params \u2581is \u2581the \u2581same \u2581as \u2581the"], "bleu": 0.11946561062132881, "rouge_l": 0.3138263665594856}
{"id": 6663, "predictions": ["\u2581// \u2581Get \u2581a \u2581 dir \u2581from \u2581the \u2581 path"], "references": ["\u2581// \u2581Get PathParts \u2581returns \u2581the \u2581absolute \u2581directory \u2581 path , \u2581the \u2581file \u2581 name , \u2581and \u2581the \u2581// \u2581absolute \u2581 path \u2581of \u2581the \u2581provided \u2581 path \u2581string ."], "bleu": 0.03076828454959815, "rouge_l": 0.29683698296836986}
{"id": 7159, "predictions": ["\u2581// \u2581 Status Handler \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581service ."], "references": ["\u2581// \u2581 Status Handler \u2581can \u2581be \u2581used \u2581in \u2581JSON - encoded \u2581HTTP \u2581API \u2581// \u2581to \u2581check \u2581the \u2581 status \u2581of \u2581 maintenance ."], "bleu": 0.1988679188207215, "rouge_l": 0.4867021276595745}
{"id": 7350, "predictions": ["\u2581// \u2581 Mutate \u2581updates \u2581the \u2581transaction \u2581with \u2581the \u2581given \u2581 Transaction ."], "references": ["\u2581// \u2581 Mutate \u2581applies \u2581the \u2581provided \u2581 Transaction Mutator s \u2581to \u2581 this \u2581builder ' s \u2581transaction"], "bleu": 0.16291446197325232, "rouge_l": 0.4013157894736842}
{"id": 8055, "predictions": ["\u2581// \u2581 Versions \u2581returns \u2581the \u2581versions \u2581of \u2581the \u2581tuple ' s \u2581versions ."], "references": ["\u2581// \u2581 Versions \u2581returns \u2581an \u2581array \u2581of \u2581versions \u2581contained \u2581in \u2581 this \u2581 type"], "bleu": 0.267768029597763, "rouge_l": 0.4414957780458384}
{"id": 7460, "predictions": ["\u2581// \u2581Get Create Create Offer Op \u2581creates \u2581a \u2581new \u2581Fast ly \u2581operation ."], "references": ["\u2581// \u2581Get Create Passive Offer Op \u2581retrieves \u2581the \u2581Create Passive Offer Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is"], "bleu": 0.05717753472068341, "rouge_l": 0.21708185053380782}
{"id": 7291, "predictions": ["\u2581// \u2581 Shuffle \u2581will \u2581return \u2581a \u2581random \u2581 byte \u2581 slice \u2581with \u2581the \u2581 length \u2581of \u2581the \u2581// \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Shuffle \u2581the \u2581given \u2581 byte \u2581string"], "bleu": 0.12173115521158184, "rouge_l": 0.4241019698725377}
{"id": 7954, "predictions": ["\u2581// \u2581 New Iterator \u2581returns \u2581a \u2581new \u2581 Iterator \u2581for \u2581the \u2581given \u2581 Snapshot ."], "references": ["\u2581// \u2581 New Iterator \u2581creates \u2581an \u2581 iterator \u2581for \u2581a \u2581 N itr o \u2581snapshot"], "bleu": 0.26518122980477765, "rouge_l": 0.4666666666666668}
{"id": 6533, "predictions": ["\u2581// \u2581Get Keys In Dir Meta \u2581returns \u2581all \u2581 keys \u2581for \u2581a \u2581given \u2581 path"], "references": ["\u2581// \u2581Get Keys In Dir Meta \u2581returns \u2581the \u2581metadata \u2581for \u2581the \u2581 keys \u2581and \u2581subdirectories \u2581within \u2581// \u2581the \u2581directory \u2581at \u2581the \u2581given \u2581 key store \u2581 path ."], "bleu": 0.23407396631624136, "rouge_l": 0.5292841648590022}
{"id": 6893, "predictions": ["\u2581// \u2581 ColumnName \u2581returns \u2581a \u2581 name \u2581of \u2581the \u2581column \u2581 name \u2581for \u2581the \u2581given \u2581dialect ."], "references": ["\u2581// \u2581 columnName \u2581returns \u2581the \u2581column \u2581 name \u2581that \u2581added \u2581the \u2581 table \u2581 name \u2581with \u2581quoted \u2581if \u2581needed ."], "bleu": 0.23213871012784149, "rouge_l": 0.4794759825327511}
{"id": 6848, "predictions": ["\u2581// \u2581 New Outgoing Location \u2581returns \u2581a \u2581new \u2581 Outgoing Location"], "references": ["\u2581// \u2581 New Outgoing Location \u2581creates \u2581a \u2581new \u2581outgoing \u2581location ."], "bleu": 0.46924700641055994, "rouge_l": 0.6363636363636364}
{"id": 6813, "predictions": ["\u2581// \u2581 Store \u2581sets \u2581the \u2581 data \u2581from \u2581the \u2581request \u2581context ."], "references": ["\u2581// \u2581 Store \u2581stores \u2581an \u2581error \u2581into \u2581the \u2581request ' s \u2581context . \u2581It \u2581panic s \u2581if \u2581the \u2581request \u2581// \u2581was \u2581not \u2581configured \u2581to \u2581store \u2581errors ."], "bleu": 0.07710156689878496, "rouge_l": 0.3356918238993711}
{"id": 7444, "predictions": ["\u2581// \u2581 Known For Switch \u2581implements \u2581 User . REST For Switch"], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Allow Trust Op Asset"], "bleu": 0.05156092536205347, "rouge_l": 0.23977987421383645}
{"id": 6401, "predictions": ["\u2581// \u2581 Res Value \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581XML \u2581document ."], "references": ["\u2581// Res Value \u2581returns \u2581the \u2581string \u2581value \u2581of \u2581the \u2581element \u2581and \u2581 children"], "bleu": 0.32559641262003014, "rouge_l": 0.5384615384615383}
{"id": 6203, "predictions": ["\u2581// \u2581 write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581file ."], "references": ["\u2581// \u2581 Helper \u2581function \u2581that \u2581appends \u2581a \u2581string \u2581to \u2581output \u2581file"], "bleu": 0.17033186037639278, "rouge_l": 0.36363636363636365}
{"id": 6823, "predictions": ["\u2581// \u2581 Push \u2581is \u2581used \u2581to \u2581 push \u2581a \u2581 push \u2581to \u2581the \u2581state ."], "references": ["\u2581// Push \u2581the \u2581changes \u2581from \u2581 this \u2581object \u2581to \u2581all \u2581connected \u2581clients . \u2581// Push \u2581is \u2581thread - safe \u2581and \u2581is \u2581 throttled \u2581so \u2581it \u2581can \u2581be \u2581called \u2581// with"], "bleu": 0.052414685822650756, "rouge_l": 0.20962199312714777}
{"id": 7199, "predictions": ["\u2581// \u2581tx Fetch Symbol \u2581checks \u2581if \u2581the \u2581 symbol \u2581 contains \u2581the \u2581current \u2581state \u2581of \u2581the \u2581// \u2581 symbol ."], "references": ["\u2581// \u2581Fetches \u2581a \u2581 symbol \u2581specified \u2581in \u2581op \u2581arg \u2581from \u2581template \u2581variables . \u2581// \u2581XXX \u2581need \u2581to \u2581handle \u2581local \u2581 vars ?"], "bleu": 0.08990497231082373, "rouge_l": 0.23606811145510836}
{"id": 6798, "predictions": ["\u2581// \u2581 New Service \u2581returns \u2581a \u2581new \u2581service \u2581instance"], "references": ["\u2581// \u2581 New Service \u2581creates \u2581a \u2581new \u2581configured \u2581 PKI \u2581 controller ."], "bleu": 0.28968594183032276, "rouge_l": 0.5281385281385281}
{"id": 7651, "predictions": ["\u2581// \u2581Set Offer \u2581sets \u2581the \u2581 ledger \u2581for \u2581the \u2581given \u2581account ."], "references": ["\u2581// \u2581Set Offer \u2581 mutate s \u2581` key ` \u2581such \u2581that \u2581it \u2581represents \u2581the \u2581identity \u2581of \u2581the \u2581// \u2581 data \u2581entry \u2581 owned \u2581by \u2581` account ` \u2581and \u2581for \u2581offer"], "bleu": 0.05131440122676713, "rouge_l": 0.26521739130434785}
{"id": 7652, "predictions": ["\u2581// \u2581Set Trust line \u2581sets \u2581the \u2581trust \u2581line \u2581for \u2581a \u2581 key"], "references": ["\u2581// \u2581Set Trust line \u2581 mutate s \u2581` key ` \u2581such \u2581that \u2581it \u2581represents \u2581the \u2581identity \u2581of \u2581the \u2581// \u2581trust line \u2581 owned \u2581by \u2581` account ` \u2581and \u2581for \u2581`"], "bleu": 0.07673292733354291, "rouge_l": 0.30942028985507253}
{"id": 7758, "predictions": ["\u2581// \u2581 Read \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 Release ."], "references": ["\u2581// \u2581 Read \u2581 downloads \u2581the \u2581specified \u2581 Release \u2581to \u2581the \u2581local \u2581cache \u2581 dir \u2581and \u2581returns \u2581a \u2581// \u2581reader \u2581to \u2581the \u2581under y ling \u2581release \u2581package ."], "bleu": 0.07053944493702909, "rouge_l": 0.3730886850152905}
{"id": 7645, "predictions": ["\u2581// \u2581 Load Account \u2581 loads \u2581the \u2581account \u2581account \u2581from \u2581the \u2581account ."], "references": ["\u2581// \u2581 Load Account \u2581 loads \u2581the \u2581account \u2581state \u2581from \u2581 horizon . \u2581err \u2581can \u2581be \u2581either \u2581error \u2581// \u2581object \u2581or \u2581 horizon . Error \u2581object ."], "bleu": 0.21333883103575624, "rouge_l": 0.47031611410948343}
{"id": 7174, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface \u2581for \u2581// \u2581 Time ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581implements \u2581the \u2581 json . Unmarshaler \u2581interface . \u2581// \u2581The \u2581time \u2581is \u2581expected \u2581to \u2581be \u2581a \u2581quoted \u2581string \u2581in \u2581RFC \u2581 3339 \u2581 format ."], "bleu": 0.2642311722113438, "rouge_l": 0.5537065052950075}
{"id": 6794, "predictions": ["\u2581// \u2581 DefaultConfig \u2581returns \u2581a \u2581default \u2581configuration \u2581for \u2581the \u2581 Vault \u2581 Client"], "references": ["\u2581// \u2581 DefaultConfig \u2581provides \u2581a \u2581default \u2581configuration \u2581to \u2581create \u2581a \u2581certificate \u2581// \u2581signer ."], "bleu": 0.23808318685019736, "rouge_l": 0.4414957780458384}
{"id": 6462, "predictions": ["\u2581// \u2581 Cause \u2581returns \u2581the \u2581error \u2581 type \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Cause \u2581returns \u2581the \u2581cause \u2581of \u2581an \u2581error"], "bleu": 0.4089601472043678, "rouge_l": 0.6842948717948718}
{"id": 6797, "predictions": ["\u2581// \u2581Default ServiceConfig \u2581returns \u2581a \u2581new \u2581 ServiceConfig"], "references": ["\u2581// \u2581Default ServiceConfig \u2581provides \u2581a \u2581default \u2581configuration \u2581to \u2581create \u2581a \u2581 PKI \u2581 controller ."], "bleu": 0.13769637489372183, "rouge_l": 0.41216216216216217}
{"id": 6881, "predictions": ["\u2581// \u2581 New Inline QueryResult Photo \u2581creates \u2581a \u2581new \u2581 inline \u2581query \u2581 photo ."], "references": ["\u2581// \u2581 New Inline QueryResult Photo \u2581returns \u2581a \u2581new \u2581 Inline QueryResult Photo \u2581with \u2581all \u2581// \u2581mandatory \u2581fields \u2581 set ."], "bleu": 0.3212418871334966, "rouge_l": 0.5932802829354553}
{"id": 7735, "predictions": ["\u2581// \u2581 CamelCase \u2581converts \u2581a \u2581string \u2581to \u2581a \u2581string \u2581 format \u2581string"], "references": ["\u2581// \u2581 CamelCase \u2581converts \u2581strings \u2581to \u2581their \u2581 camel \u2581case \u2581equivalent"], "bleu": 0.31455601883230705, "rouge_l": 0.5258620689655172}
{"id": 6573, "predictions": ["\u2581// \u2581 Delete La n \u2581deletes \u2581a \u2581 La n \u2581 n \u2581 n \u2581 n \u2581 n \u2581 data"], "references": ["\u2581// \u2581 Delete La n \u2581deletes \u2581a \u2581 lan \u2581where \u2581 id \u2581== \u2581 lan id"], "bleu": 0.40051071695431895, "rouge_l": 0.5669144981412639}
{"id": 7639, "predictions": ["\u2581// \u2581Get External ize \u2581 translate s \u2581the \u2581 S cp \u2581statement \u2581to \u2581the \u2581 S cp \u2581statement ."], "references": ["\u2581// \u2581Get External ize \u2581retrieves \u2581the \u2581 External ize \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.13314596658067834, "rouge_l": 0.32126398946675444}
{"id": 7517, "predictions": ["\u2581// \u2581Get Pay out s \u2581returns \u2581the \u2581 description \u2581of \u2581 this \u2581 horizontal lation Result ."], "references": ["\u2581// \u2581Get Pay out s \u2581retrieves \u2581the \u2581 Pay out s \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.13852077376731164, "rouge_l": 0.2837209302325582}
{"id": 7650, "predictions": ["\u2581// \u2581 SetData \u2581sets \u2581the \u2581 ledger \u2581 key \u2581for \u2581the \u2581 ledger"], "references": ["\u2581// \u2581 SetData \u2581 mutate s \u2581` key ` \u2581such \u2581that \u2581it \u2581represents \u2581the \u2581identity \u2581of \u2581the \u2581// \u2581 data \u2581entry \u2581 owned \u2581by \u2581` account ` \u2581and \u2581for \u2581`"], "bleu": 0.061915744700364976, "rouge_l": 0.30391459074733096}
{"id": 7447, "predictions": ["\u2581// \u2581Get Asset Code 4 \u2581returns \u2581the \u2581 code \u2581of \u2581the \u2581asset \u2581 4 \u2581 code \u2581for \u2581the \u2581 key"], "references": ["\u2581// \u2581Get Asset Code 4 \u2581retrieves \u2581the \u2581 Asset Code 4 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.16527805953814798, "rouge_l": 0.34746835443037977}
{"id": 7414, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Asset"], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581 display \u2581 friendly \u2581 form \u2581of \u2581the \u2581asset"], "bleu": 0.30908873025793027, "rouge_l": 0.5097493036211699}
{"id": 8048, "predictions": ["\u2581// \u2581error f \u2581is \u2581a \u2581convenience \u2581function \u2581for \u2581 scanning \u2581a \u2581 token ."], "references": ["\u2581// \u2581error f \u2581returns \u2581an \u2581error \u2581 token \u2581and \u2581terminate s \u2581the \u2581scan \u2581// \u2581by \u2581passing \u2581back \u2581a \u2581nil \u2581pointer \u2581that \u2581will \u2581be \u2581the \u2581next \u2581// \u2581state \u2581thus \u2581 terminating"], "bleu": 0.06704593774764558, "rouge_l": 0.2559440559440559}
{"id": 8099, "predictions": ["\u2581// \u2581 New Lease \u2581creates \u2581a \u2581new \u2581 Lease ."], "references": ["\u2581// New Lease \u2581 - \u2581create \u2581and \u2581return \u2581a \u2581new \u2581lease \u2581object"], "bleu": 0.18578670478212825, "rouge_l": 0.44721407624633425}
{"id": 7565, "predictions": ["\u2581// \u2581Get New Max Tx Size \u2581returns \u2581the \u2581maximum \u2581 size \u2581of \u2581 this \u2581 Ledger Upgrade \u2581// \u2581 this \u2581 Ledger Upgrade \u2581is \u2581 set \u2581to \u2581the \u2581 Ledger"], "references": ["\u2581// \u2581Get New Max Tx SetSize \u2581retrieves \u2581the \u2581 New Max Tx SetSize \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value"], "bleu": 0.17572088410223174, "rouge_l": 0.3}
{"id": 8022, "predictions": ["\u2581// \u2581check Section \u2581checks \u2581if \u2581a \u2581line \u2581is \u2581in \u2581the \u2581given \u2581line ."], "references": ["\u2581// \u2581 To \u2581check \u2581 this \u2581line \u2581is \u2581a \u2581section \u2581or \u2581not . \u2581If \u2581it \u2581is \u2581not \u2581a \u2581section , \u2581it \u2581returns \u2581// \u2581\"\" ."], "bleu": 0.06172817896022016, "rouge_l": 0.24897959183673474}
{"id": 6588, "predictions": ["\u2581// \u2581 List Volumes \u2581 - \u2581returns \u2581a \u2581list \u2581of \u2581volumes \u2581for \u2581a \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 List Volumes \u2581returns \u2581a \u2581 Collection \u2581struct \u2581for \u2581volumes \u2581in \u2581the \u2581 Datacenter"], "bleu": 0.25890790939055336, "rouge_l": 0.505699481865285}
{"id": 7405, "predictions": ["\u2581// \u2581 Random \u2581returns \u2581a \u2581new \u2581 Full \u2581object ."], "references": ["\u2581// \u2581 Random \u2581creates \u2581a \u2581random \u2581full \u2581 keypair"], "bleu": 0.25965358893403384, "rouge_l": 0.5313588850174217}
{"id": 6290, "predictions": ["\u2581// \u2581 Mandatory Params \u2581returns \u2581the \u2581list \u2581of \u2581parameters \u2581for \u2581the \u2581action"], "references": ["\u2581// \u2581 Mandatory Params \u2581returns \u2581the \u2581list \u2581of \u2581all \u2581action \u2581mandatory \u2581parameters"], "bleu": 0.6812455364200614, "rouge_l": 0.75}
{"id": 7260, "predictions": ["\u2581// \u2581 New Op \u2581creates \u2581a \u2581new \u2581 Op \u2581instance ."], "references": ["\u2581// \u2581 New Op \u2581creates \u2581a \u2581new \u2581 Op ."], "bleu": 0.8265168183793802, "rouge_l": 0.9606299212598426}
{"id": 7449, "predictions": ["\u2581// \u2581Get Asset Code 12 \u2581is \u2581the \u2581 code \u2581for \u2581 Asset Identifier ."], "references": ["\u2581// \u2581Get Asset Code 12 \u2581retrieves \u2581the \u2581 Asset Code 12 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.12761369906511894, "rouge_l": 0.3412587412587413}
{"id": 7495, "predictions": ["\u2581// \u2581 Orgs For Switch \u2581implements \u2581the \u2581 bakery . Switch \u2581interface \u2581for \u2581// \u2581 Manage Offer Success Result ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Manage Offer Success Result Offer"], "bleu": 0.20163466060263122, "rouge_l": 0.48541114058355433}
{"id": 7470, "predictions": ["\u2581// \u2581Get Manage Data Op \u2581returns \u2581the \u2581 pids \u2581for \u2581the \u2581 Manage \u2581 data \u2581operation"], "references": ["\u2581// \u2581Get Manage Data Op \u2581retrieves \u2581the \u2581 Manage Data Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.15349442398190383, "rouge_l": 0.32972972972972975}
{"id": 7536, "predictions": ["\u2581// \u2581Get Change Trust Result \u2581returns \u2581the \u2581result \u2581of \u2581a \u2581 Change \u2581trust \u2581result"], "references": ["\u2581// \u2581Get Change Trust Result \u2581retrieves \u2581the \u2581 Change Trust Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.11959725930229445, "rouge_l": 0.3412587412587413}
{"id": 7466, "predictions": ["\u2581// \u2581Get Allow Trust Op \u2581returns \u2581true \u2581if \u2581the \u2581 body \u2581of \u2581the \u2581operation \u2581is \u2581 set"], "references": ["\u2581// \u2581Get Allow Trust Op \u2581retrieves \u2581the \u2581 Allow Trust Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.1558932390991464, "rouge_l": 0.36478405315614615}
{"id": 7540, "predictions": ["\u2581// \u2581 GetAccount Merge Result \u2581returns \u2581the \u2581result \u2581of \u2581a \u2581 type \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 resolve \u2581// \u2581the \u2581result \u2581of \u2581the \u2581 oracle \u2581layer ."], "references": ["\u2581// \u2581 GetAccount Merge Result \u2581retrieves \u2581the \u2581 Account Merge Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.17975748186463833, "rouge_l": 0.34269662921348315}
{"id": 7538, "predictions": ["\u2581// \u2581Get Allow Trust Result \u2581returns \u2581true \u2581if \u2581the \u2581 data \u2581has \u2581a \u2581result \u2581of \u2581a \u2581result"], "references": ["\u2581// \u2581Get Allow Trust Result \u2581retrieves \u2581the \u2581 Allow Trust Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.14826537379916113, "rouge_l": 0.2837209302325582}
{"id": 6285, "predictions": ["\u2581// \u2581Create Inline Type \u2581creates \u2581a \u2581new \u2581 inline \u2581 type ."], "references": ["\u2581// \u2581Create Inline Type \u2581creates \u2581a \u2581new \u2581 inline \u2581 type ."], "bleu": 1.0, "rouge_l": 1.0}
{"id": 7529, "predictions": ["\u2581// \u2581Get Path Payment Result \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 path ."], "references": ["\u2581// \u2581Get Path Payment Result \u2581retrieves \u2581the \u2581 Path Payment Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.11959725930229445, "rouge_l": 0.3412587412587413}
{"id": 7345, "predictions": ["\u2581// \u2581 Mutate Manage Offer \u2581sets \u2581the \u2581 relation ' s \u2581permissions"], "references": ["\u2581// \u2581 Mutate Manage Offer \u2581for \u2581 Offer ID \u2581sets \u2581the \u2581 Manage Offer Op ' s \u2581 Offer ID \u2581field"], "bleu": 0.24876730454191603, "rouge_l": 0.5776515151515151}
{"id": 7531, "predictions": ["\u2581// \u2581Get Manage Offer Result \u2581gets \u2581the \u2581result \u2581of \u2581a \u2581 Manage Offer Result \u2581by \u2581 this \u2581 Automaton"], "references": ["\u2581// \u2581Get Manage Offer Result \u2581retrieves \u2581the \u2581 Manage Offer Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.2057612432159977, "rouge_l": 0.392282958199357}
{"id": 7970, "predictions": ["\u2581// \u2581 Delete Node \u2581removes \u2581the \u2581node \u2581from \u2581the \u2581 set \u2581of \u2581 active \u2581 data ."], "references": ["\u2581// \u2581 Delete Node \u2581an \u2581item \u2581from \u2581the \u2581skip list \u2581by \u2581specifying \u2581its \u2581node"], "bleu": 0.23909453161355018, "rouge_l": 0.39397201291711514}
{"id": 6249, "predictions": ["\u2581// \u2581is QueryParam \u2581checks \u2581if \u2581the \u2581 view \u2581is \u2581a \u2581 view ."], "references": ["\u2581// \u2581 Heuristic \u2581to \u2581determine \u2581whether \u2581given \u2581 param \u2581is \u2581a \u2581query \u2581string \u2581 param \u2581// \u2581 For \u2581now \u2581only \u2581consider \u2581 view \u2581and \u2581 filter . . ."], "bleu": 0.051924843374804686, "rouge_l": 0.3119065010956903}
{"id": 6992, "predictions": ["\u2581// \u2581 Sort Types \u2581returns \u2581a \u2581list \u2581of \u2581strings \u2581for \u2581the \u2581given \u2581types ."], "references": ["\u2581// \u2581 Sort Types \u2581sorts \u2581the \u2581given \u2581types \u2581from \u2581least \u2581specific \u2581to \u2581most \u2581specific"], "bleu": 0.3290385879986622, "rouge_l": 0.5}
{"id": 6974, "predictions": ["\u2581// \u2581 Capture \u2581 stacks , \u2581 pos ing \u2581the \u2581stack \u2581and \u2581 pos ing \u2581the \u2581 top - level \u2581// \u2581stack \u2581and \u2581 top \u2581level ."], "references": ["\u2581// \u2581capture Stack \u2581returns \u2581a \u2581 slice \u2581of \u2581stack \u2581frames \u2581representing \u2581the \u2581stack \u2581// \u2581of \u2581the \u2581calling \u2581go \u2581routine ."], "bleu": 0.07779637090949697, "rouge_l": 0.2623655913978495}
{"id": 7489, "predictions": ["\u2581// \u2581 Known For Switch \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 payment \u2581 path \u2581of \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Path Payment Result"], "bleu": 0.11514965884999133, "rouge_l": 0.37577002053388087}
{"id": 7544, "predictions": ["\u2581// \u2581Get Manage Data Result \u2581gets \u2581the \u2581result \u2581of \u2581all \u2581 Manage \u2581objects \u2581in \u2581the \u2581 Automaton"], "references": ["\u2581// \u2581Get Manage Data Result \u2581retrieves \u2581the \u2581 Manage Data Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.15222259087124843, "rouge_l": 0.36478405315614615}
{"id": 7458, "predictions": ["\u2581// \u2581Get Manage Offer Op \u2581returns \u2581the \u2581operation \u2581for \u2581a \u2581 Manage \u2581operation"], "references": ["\u2581// \u2581Get Manage Offer Op \u2581retrieves \u2581the \u2581 Manage Offer Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.10959957458274744, "rouge_l": 0.3473309608540925}
{"id": 7286, "predictions": ["\u2581// \u2581 Environ \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 environ s ."], "references": ["\u2581// \u2581 Identical \u2581to \u2581os . Environ , \u2581but \u2581limited \u2581to \u2581the \u2581environment \u2581variable \u2581equivalent s \u2581// \u2581for \u2581the \u2581flags \u2581your \u2581program \u2581care s \u2581about ."], "bleu": 0.05909819054611191, "rouge_l": 0.33862014274385405}
{"id": 6669, "predictions": ["\u2581// \u2581 Random TCP Port \u2581returns \u2581the \u2581number \u2581of \u2581 TCP \u2581port \u2581 Port"], "references": ["\u2581// \u2581 Random TCP Port \u2581gets \u2581a \u2581free , \u2581random \u2581 TCP \u2581port \u2581between \u2581 102 5- 65535 . \u2581If \u2581no \u2581free \u2581// \u2581ports \u2581are \u2581available \u2581-1 \u2581is \u2581returned ."], "bleu": 0.13493505821280877, "rouge_l": 0.3839160839160839}
{"id": 7542, "predictions": ["\u2581// \u2581Get Inf lation Result \u2581returns \u2581the \u2581result \u2581of \u2581the \u2581result \u2581of \u2581a \u2581 divisor \u2581and \u2581returns \u2581it ."], "references": ["\u2581// \u2581Get Inf lation Result \u2581retrieves \u2581the \u2581 Inf lation Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.146314893916137, "rouge_l": 0.2745980707395499}
{"id": 7456, "predictions": ["\u2581// \u2581Get Path Payment Op \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581to \u2581 remove \u2581a \u2581 path ."], "references": ["\u2581// \u2581Get Path Payment Op \u2581retrieves \u2581the \u2581 Path Payment Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.1571909944256056, "rouge_l": 0.30886075949367087}
{"id": 8045, "predictions": ["\u2581// \u2581next \u2581returns \u2581the \u2581next \u2581rune \u2581in \u2581the \u2581 Lexer ."], "references": ["\u2581// \u2581next \u2581advance s \u2581the \u2581 lexer \u2581position \u2581and \u2581returns \u2581the \u2581next \u2581rune . \u2581If \u2581the \u2581input \u2581// \u2581does \u2581not \u2581have \u2581any \u2581more \u2581 runes , \u2581an \u2581` eof `"], "bleu": 0.07416969631855261, "rouge_l": 0.36014760147601477}
{"id": 7028, "predictions": ["\u2581// \u2581work \u2581returns \u2581a \u2581 randomize d \u2581 page \u2581of \u2581the \u2581given \u2581arguments ."], "references": ["\u2581// \u2581work \u2581uses \u2581 fetcher \u2581to \u2581recursively \u2581 crawl \u2581// \u2581 pages \u2581starting \u2581with \u2581 url , \u2581to \u2581a \u2581maximum \u2581of \u2581depth ."], "bleu": 0.07816362861991664, "rouge_l": 0.31069609507640067}
{"id": 7464, "predictions": ["\u2581// \u2581Get Change Trust Op \u2581returns \u2581the \u2581operation \u2581 set \u2581for \u2581the \u2581operation \u2581// \u2581 this \u2581operation \u2581is \u2581 checked \u2581if \u2581the \u2581operation \u2581is \u2581 empty ."], "references": ["\u2581// \u2581Get Change Trust Op \u2581retrieves \u2581the \u2581 Change Trust Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.18694128848253594, "rouge_l": 0.41709401709401706}
{"id": 7271, "predictions": ["\u2581// \u2581 Copy \u2581returns \u2581a \u2581deep \u2581copy \u2581of \u2581 this \u2581 Symbol Set ."], "references": ["\u2581// \u2581 Copy \u2581creates \u2581a \u2581new \u2581copy \u2581of \u2581the \u2581given \u2581 Lex Symbol Set"], "bleu": 0.23505204106959593, "rouge_l": 0.642857142857143}
{"id": 6370, "predictions": ["\u2581// \u2581 Asset \u2581returns \u2581a \u2581 name \u2581of \u2581the \u2581 Asset FileSystem"], "references": ["\u2581// \u2581 NameSpace \u2581return \u2581 namespaced \u2581filesystem"], "bleu": 0.14694106251955755, "rouge_l": 0.3315217391304348}
{"id": 7428, "predictions": ["\u2581// \u2581Get Alpha Num 4 \u2581returns \u2581the \u2581 Alpha \u2581 4 \u2581 4 \u2581 4 \u2581 4 \u2581 4 \u2581 4 \u2581 4 \u2581 4 \u2581 4 \u2581 4 \u2581"], "references": ["\u2581// \u2581Get Alpha Num 4 \u2581retrieves \u2581the \u2581 Alpha Num 4 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.19310235945664556, "rouge_l": 0.3}
{"id": 7119, "predictions": ["\u2581// \u2581 UDP Addr \u2581returns \u2581the \u2581 UDP \u2581address \u2581of \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 UDP Addr \u2581returns \u2581a \u2581 UDP \u2581address \u2581of \u2581the \u2581listener \u2581that \u2581a \u2581server \u2581// \u2581with \u2581a \u2581specific \u2581 name \u2581is \u2581using . \u2581If \u2581there \u2581are \u2581more \u2581servers \u2581//"], "bleu": 0.21290402927764981, "rouge_l": 0.5450171821305841}
{"id": 7765, "predictions": ["\u2581// \u2581 NewRequest \u2581creates \u2581a \u2581new \u2581http . Request \u2581with \u2581the \u2581given \u2581 url \u2581and \u2581 body ."], "references": ["\u2581// \u2581 NewRequest \u2581is \u2581like \u2581http . NewRequest , \u2581with \u2581the \u2581exception \u2581that \u2581it \u2581will \u2581 add \u2581// \u2581basic \u2581 auth \u2581 headers \u2581if \u2581the \u2581client \u2581is \u2581configured \u2581for \u2581basic"], "bleu": 0.09296545364621185, "rouge_l": 0.3588235294117647}
{"id": 7430, "predictions": ["\u2581// \u2581Get Alpha Num 12 \u2581returns \u2581the \u2581 Alpha \u2581 12 \u2581 12 ."], "references": ["\u2581// \u2581Get Alpha Num 12 \u2581retrieves \u2581the \u2581 Alpha Num 12 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.13493505821280877, "rouge_l": 0.3839160839160839}
{"id": 7398, "predictions": ["\u2581// \u2581 Mutate Set Options \u2581sets \u2581the \u2581 Signer \u2581for \u2581the \u2581 Signer ."], "references": ["\u2581// \u2581 Mutate Set Options \u2581for \u2581 Signer \u2581sets \u2581the \u2581Set Options Op ' s \u2581signer \u2581field"], "bleu": 0.33076451862959516, "rouge_l": 0.5072765072765073}
{"id": 7462, "predictions": ["\u2581// \u2581Get Set Options Op \u2581returns \u2581the \u2581option \u2581for \u2581 set \u2581options ."], "references": ["\u2581// \u2581Get Set Options Op \u2581retrieves \u2581the \u2581Set Options Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.1016776327105769, "rouge_l": 0.30391459074733096}
{"id": 7512, "predictions": ["\u2581// \u2581Get Source Account Balance \u2581returns \u2581the \u2581 balance \u2581of \u2581the \u2581account \u2581 balance ."], "references": ["\u2581// \u2581Get Source Account Balance \u2581retrieves \u2581the \u2581 Source Account Balance \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.1283892352937859, "rouge_l": 0.3353951890034364}
{"id": 6697, "predictions": ["\u2581// \u2581 Scan \u2581implements \u2581the \u2581 src \u2581interface ."], "references": ["\u2581// \u2581 Scan \u2581satisfy \u2581 sql . Scanner \u2581interface ."], "bleu": 0.29052561567528307, "rouge_l": 0.6256410256410255}
{"id": 7534, "predictions": ["\u2581// \u2581Get Set Options Result \u2581returns \u2581the \u2581result \u2581of \u2581the \u2581 set \u2581options \u2581for \u2581the \u2581 reactions ."], "references": ["\u2581// \u2581Get Set Options Result \u2581retrieves \u2581the \u2581Set Options Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.14549879798120413, "rouge_l": 0.3588235294117647}
{"id": 7705, "predictions": ["\u2581// \u2581 Hijack \u2581implements \u2581the \u2581http . Hijack er \u2581interface ."], "references": ["\u2581// Hijack \u2581 Satisfy \u2581the \u2581http . ResponseWriter \u2581interface"], "bleu": 0.2521193618434983, "rouge_l": 0.6110183639398998}
{"id": 7147, "predictions": ["\u2581// \u2581 Stream \u2581is \u2581a \u2581wrapper \u2581around \u2581 Stream . Stream ."], "references": ["\u2581// \u2581 Stream \u2581makes \u2581a \u2581HTTP \u2581request \u2581and \u2581returns \u2581request \u2581 body \u2581as \u2581io . ReadCloser , \u2581// \u2581to \u2581be \u2581 able \u2581to \u2581read \u2581long \u2581running \u2581responses . \u2581 Returned"], "bleu": 0.05131440122676713, "rouge_l": 0.30942028985507253}
{"id": 6347, "predictions": ["\u2581// \u2581validate \u2581validates \u2581the \u2581 Consumer Config \u2581and \u2581returns \u2581a \u2581new \u2581 Copy Config ."], "references": ["\u2581// \u2581validate \u2581ensures \u2581that \u2581 this \u2581configuration \u2581is \u2581well - formed ."], "bleu": 0.12300686288463772, "rouge_l": 0.30235439900867406}
{"id": 6221, "predictions": ["\u2581// \u2581 helper \u2581function \u2581to \u2581check \u2581if \u2581the \u2581given \u2581 name \u2581is \u2581a \u2581valid \u2581 type"], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581parameter \u2581with \u2581given \u2581 name \u2581is \u2581mandatory"], "bleu": 0.23287896954139942, "rouge_l": 0.45979899497487436}
{"id": 6871, "predictions": ["\u2581// \u2581MarshalJSON \u2581implements \u2581the \u2581 json . Marshaler \u2581interface \u2581for \u2581 Recipient ."], "references": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581the \u2581recipient \u2581to \u2581JSON ."], "bleu": 0.14283632578659286, "rouge_l": 0.37596302003081655}
{"id": 6582, "predictions": ["\u2581// \u2581 Update Snapshot \u2581updates \u2581a \u2581snapshot \u2581of \u2581a \u2581snapshot"], "references": ["\u2581// \u2581 Update Snapshot \u2581updates \u2581a \u2581snapshot"], "bleu": 0.6786502681586726, "rouge_l": 0.850597609561753}
{"id": 7051, "predictions": ["\u2581// \u2581 NewServer Mux \u2581returns \u2581a \u2581new \u2581 multiplexer ."], "references": ["\u2581// \u2581 NewServer Mux \u2581returns \u2581a \u2581new \u2581 Handler ."], "bleu": 0.8070557274927982, "rouge_l": 0.9}
{"id": 6828, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581connection \u2581and \u2581closes \u2581the \u2581connection ."], "references": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581connection ."], "bleu": 0.6132297420585351, "rouge_l": 0.8102466793168881}
{"id": 7622, "predictions": ["\u2581// \u2581Get Q Set Hash \u2581returns \u2581the \u2581 set \u2581of \u2581 key \u2581 set \u2581to \u2581be \u2581used \u2581for \u2581 this \u2581user ."], "references": ["\u2581// \u2581Get Q Set Hash \u2581retrieves \u2581the \u2581 Q Set Hash \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.15860994075331664, "rouge_l": 0.2619631901840491}
{"id": 8047, "predictions": ["\u2581// \u2581 Offset \u2581returns \u2581the \u2581position \u2581of \u2581the \u2581current \u2581line \u2581position \u2581of \u2581the \u2581 Lexer ."], "references": ["\u2581// \u2581 Offset \u2581determines \u2581the \u2581character \u2581offset \u2581from \u2581the \u2581beginning \u2581of \u2581the \u2581current \u2581line"], "bleu": 0.30277029197532096, "rouge_l": 0.5398230088495575}
{"id": 7624, "predictions": ["\u2581// \u2581Get Q Set \u2581returns \u2581the \u2581 set \u2581of \u2581 display \u2581 data \u2581in \u2581 this \u2581 subreddit ."], "references": ["\u2581// \u2581Get Q Set \u2581retrieves \u2581the \u2581 Q Set \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.1259216806662938, "rouge_l": 0.28110599078341014}
{"id": 6746, "predictions": ["\u2581// \u2581Do \u2581executes \u2581a \u2581transaction ."], "references": ["\u2581// \u2581Do \u2581executes \u2581the \u2581function \u2581in \u2581a \u2581transaction ."], "bleu": 0.36064528799877893, "rouge_l": 0.7721518987341772}
{"id": 6464, "predictions": ["\u2581// \u2581 UnaryServer Interceptor \u2581returns \u2581a \u2581new \u2581 unary \u2581interceptor \u2581that \u2581sets \u2581the \u2581interceptor \u2581for \u2581// \u2581the \u2581 grpc \u2581server ."], "references": ["\u2581// \u2581 UnaryServer Interceptor \u2581applies \u2581fn \u2581to \u2581errors \u2581returned \u2581by \u2581server ."], "bleu": 0.18597237212366716, "rouge_l": 0.3824451410658307}
{"id": 7395, "predictions": ["\u2581// \u2581 Mutate Set Options \u2581sets \u2581the \u2581 home \u2581 set \u2581of \u2581 keys \u2581in \u2581the \u2581 Home \u2581 Domain"], "references": ["\u2581// \u2581 Mutate Set Options \u2581for \u2581 Home Domain \u2581sets \u2581the \u2581Set Options Op ' s \u2581 Home Domain \u2581field"], "bleu": 0.28943182557959846, "rouge_l": 0.5}
{"id": 7616, "predictions": ["\u2581// \u2581Get Tx Set Hash \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581 form \u2581of \u2581 this \u2581 Stellar Message ."], "references": ["\u2581// \u2581Get Tx Set Hash \u2581retrieves \u2581the \u2581 Tx Set Hash \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.17002441111880234, "rouge_l": 0.29486404833836855}
{"id": 7561, "predictions": ["\u2581// \u2581Get New Ledger Version \u2581returns \u2581the \u2581 ledger \u2581 Version \u2581version \u2581of \u2581the \u2581 Ledger Upgrade"], "references": ["\u2581// \u2581Get New Ledger Version \u2581retrieves \u2581the \u2581 New Ledger Version \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.14999976662462458, "rouge_l": 0.36478405315614615}
{"id": 7635, "predictions": ["\u2581// \u2581Get Prepare Statement \u2581 get \u2581the \u2581 S cp \u2581statement \u2581with \u2581the \u2581 S cp \u2581statement ."], "references": ["\u2581// \u2581Get Prepare \u2581retrieves \u2581the \u2581Prepare \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.09346387876362833, "rouge_l": 0.26406926406926406}
{"id": 6592, "predictions": ["\u2581// \u2581 Delete Volume \u2581deletes \u2581a \u2581volume \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 Delete Volume \u2581deletes \u2581a \u2581volume"], "bleu": 0.6132297420585351, "rouge_l": 0.8102466793168881}
{"id": 7719, "predictions": ["\u2581// \u2581print Markdown Dash \u2581prints \u2581the \u2581 content \u2581of \u2581the \u2581 table \u2581to \u2581the \u2581 table ."], "references": ["\u2581// \u2581print Markdown Dash \u2581 - \u2581Prints \u2581 dash \u2581in \u2581middle \u2581of \u2581 table ."], "bleu": 0.29118923373789324, "rouge_l": 0.5689119170984456}
{"id": 7637, "predictions": ["\u2581// \u2581Get Confirm Statement \u2581 get \u2581the \u2581 Confirm \u2581 type \u2581of \u2581 Confirm"], "references": ["\u2581// \u2581Get Confirm \u2581retrieves \u2581the \u2581 Confirm \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.09401299839033414, "rouge_l": 0.27685325264750377}
{"id": 7563, "predictions": ["\u2581// \u2581Get New Base Fee \u2581returns \u2581the \u2581 fee \u2581 fee \u2581for \u2581the \u2581 ledger"], "references": ["\u2581// \u2581Get New Base Fee \u2581retrieves \u2581the \u2581 New Base Fee \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid"], "bleu": 0.1283892352937859, "rouge_l": 0.3353951890034364}
{"id": 6965, "predictions": ["\u2581// \u2581Set Number V 3 \u2581sets \u2581the \u2581number \u2581of \u2581 VM \u2581sets \u2581to \u2581the \u2581 VM ."], "references": ["\u2581// \u2581Set Number V cpus \u2581sets \u2581number \u2581of \u2581virtual \u2581 cpus \u2581assigned \u2581to \u2581 this \u2581machine . \u2581 VM \u2581has \u2581to \u2581be \u2581 powered \u2581off \u2581in \u2581order \u2581to \u2581change \u2581"], "bleu": 0.13151362577162526, "rouge_l": 0.4458471760797342}
{"id": 6420, "predictions": ["\u2581// \u2581 GetAll \u2581returns \u2581all \u2581 keys \u2581in \u2581the \u2581registry ."], "references": ["\u2581// \u2581 GetAll \u2581returns \u2581all \u2581registered \u2581error \u2581descriptors"], "bleu": 0.41722614486115056, "rouge_l": 0.5417406749555951}
{"id": 7154, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581server \u2581with \u2581the \u2581given \u2581root \u2581directory \u2581and \u2581options ."], "references": ["\u2581// \u2581 New \u2581initializes \u2581a \u2581new \u2581instance \u2581of \u2581 Server ."], "bleu": 0.1892240568795935, "rouge_l": 0.4747081712062256}
{"id": 7118, "predictions": ["\u2581// \u2581 TCPAddr \u2581returns \u2581a \u2581 slice \u2581of \u2581 net . TCPAddr \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 TCPAddr \u2581returns \u2581a \u2581 TCP \u2581address \u2581of \u2581the \u2581listener \u2581that \u2581a \u2581server \u2581// \u2581with \u2581a \u2581specific \u2581 name \u2581is \u2581using . \u2581If \u2581there \u2581are \u2581more \u2581servers \u2581// \u2581with"], "bleu": 0.18821269497432028, "rouge_l": 0.438562091503268}
{"id": 6918, "predictions": ["\u2581// \u2581 size From Tag \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581tag ."], "references": ["\u2581// \u2581 size From Tag \u2581returns \u2581a \u2581 size \u2581from \u2581tag . \u2581// \u2581If \u2581\" size \" \u2581tag \u2581specified \u2581to \u2581struct \u2581field , \u2581it \u2581will \u2581converted \u2581to \u2581uint 64 \u2581and"], "bleu": 0.14069973643562425, "rouge_l": 0.43416370106761565}
{"id": 6668, "predictions": ["\u2581// \u2581 Is TCP Port Available \u2581returns \u2581true \u2581if \u2581the \u2581port \u2581is \u2581a \u2581 TCP Port"], "references": ["\u2581// \u2581 Is TCP Port Available \u2581returns \u2581a \u2581flag \u2581indicating \u2581whether \u2581or \u2581not \u2581a \u2581 TCP \u2581port \u2581is \u2581// \u2581available ."], "bleu": 0.38867693905746575, "rouge_l": 0.5276816608996538}
{"id": 6270, "predictions": ["\u2581// \u2581from API \u2581returns \u2581a \u2581new \u2581API \u2581API \u2581server ."], "references": ["\u2581// \u2581 Wrap \u2581generic \u2581client \u2581into \u2581API \u25811.0 \u2581client"], "bleu": 0.13950796967929133, "rouge_l": 0.21254355400696867}
{"id": 7966, "predictions": ["\u2581// \u2581 Insert \u2581inserts \u2581a \u2581new \u2581 set \u2581of \u2581 items \u2581into \u2581the \u2581list ."], "references": ["\u2581// \u2581 Insert \u2581adds \u2581an \u2581item \u2581into \u2581the \u2581skip list"], "bleu": 0.18207052811092128, "rouge_l": 0.4149659863945578}
{"id": 7776, "predictions": ["\u2581// \u2581Add Resource \u2581adds \u2581a \u2581new \u2581resource \u2581to \u2581the \u2581 set \u2581of \u2581 this \u2581 type ."], "references": ["\u2581// Add Resource \u2581 helper \u2581to \u2581 add \u2581a \u2581resource \u2581to \u2581the \u2581pipeline \u2581manifest"], "bleu": 0.16467029855845897, "rouge_l": 0.39397201291711514}
{"id": 7768, "predictions": ["\u2581// \u2581Create New Record \u2581creates \u2581a \u2581new \u2581record ."], "references": ["\u2581// Create New Record \u2581 - \u2581creates \u2581a \u2581record \u2581from \u2581a \u2581given \u2581period \u2581 delimited \u2581property \u2581and \u2581 e nam l . Job Manifest Property"], "bleu": 0.0443982750529626, "rouge_l": 0.37955555555555565}
{"id": 7113, "predictions": ["\u2581// \u2581 Qui c Headers Handler \u2581 - \u2581 binds \u2581the \u2581http \u2581handler \u2581to \u2581 bind \u2581to \u2581the \u2581 router ."], "references": ["\u2581// \u2581 Qui c Headers Handler \u2581should \u2581be \u2581used \u2581as \u2581a \u2581middleware \u2581to \u2581 set \u2581// \u2581 qui c \u2581related \u2581 headers \u2581to \u2581 TCP \u2581server \u2581that \u2581 suggest \u2581alternative"], "bleu": 0.20786685602546306, "rouge_l": 0.41806853582554515}
{"id": 8020, "predictions": ["\u2581// \u2581 Del \u2581removes \u2581a \u2581value \u2581from \u2581the \u2581 config ."], "references": ["\u2581// \u2581 Del \u2581function \u2581deletes \u2581a \u2581 key \u2581from \u2581the \u2581configuration ."], "bleu": 0.25476965408249, "rouge_l": 0.603960396039604}
{"id": 6980, "predictions": ["\u2581// \u2581 NewError Struct \u2581returns \u2581a \u2581pointer \u2581to \u2581an \u2581API \u2581struct ."], "references": ["\u2581// \u2581 httpResponse Struct \u2581returns \u2581the \u2581response \u2581structure \u2581after \u2581going \u2581 t rough \u2581all \u2581the \u2581inter media ry \u2581response \u2581 writers ."], "bleu": 0.07821260250051068, "rouge_l": 0.2793040293040293}
{"id": 7738, "predictions": ["\u2581// \u2581Get SHA 256 \u2581returns \u2581the \u2581 SHA 256 \u2581hash \u2581of \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get SHA 256 \u2581calculates \u2581a \u2581file ' s \u2581 sha 256 sum"], "bleu": 0.23287896954139942, "rouge_l": 0.42165898617511516}
{"id": 7290, "predictions": ["\u2581// \u2581Create Random \u2581creates \u2581a \u2581new \u2581 byte \u2581 slice \u2581with \u2581the \u2581given \u2581 length ."], "references": ["\u2581// \u2581Create Random \u2581returns \u2581a \u2581random \u2581 byte \u2581string \u2581of \u2581given \u2581 length \u2581from \u2581given \u2581 byte \u2581string"], "bleu": 0.21413242614610398, "rouge_l": 0.523854961832061}
{"id": 7720, "predictions": ["\u2581// \u2581string Markdown Dash \u2581returns \u2581the \u2581 Markdown \u2581 Markdown \u2581string \u2581for \u2581the \u2581 table ."], "references": ["\u2581// \u2581string Markdown Dash \u2581 - \u2581output \u2581 dash \u2581in \u2581middle \u2581of \u2581 table ."], "bleu": 0.30277029197532096, "rouge_l": 0.5840425531914895}
{"id": 7599, "predictions": ["\u2581// \u2581Get ipv 4 \u2581returns \u2581the \u2581 ipv 4 \u2581 4 \u2581 4 \u2581 4 \u2581 IP \u2581address \u2581of \u2581the \u2581peer ."], "references": ["\u2581// \u2581Get Ipv 4 \u2581retrieves \u2581the \u2581 Ipv 4 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.07723361827774358, "rouge_l": 0.3061480552070263}
{"id": 7601, "predictions": ["\u2581// \u2581Get ipv 6 \u2581returns \u2581the \u2581IPv 6 \u2581address \u2581of \u2581the \u2581peer ."], "references": ["\u2581// \u2581Get Ipv 6 \u2581retrieves \u2581the \u2581 Ipv 6 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.04691939251060089, "rouge_l": 0.3119065010956903}
{"id": 6690, "predictions": ["\u2581// \u2581 Usage \u2581prints \u2581the \u2581usage \u2581of \u2581the \u2581 page \u2581to \u2581 stdout"], "references": ["\u2581// Usage \u2581prints \u2581to \u2581 stdout \u2581information \u2581about \u2581the \u2581 tool"], "bleu": 0.24739977342883948, "rouge_l": 0.507628294036061}
{"id": 6587, "predictions": ["\u2581// \u2581 Release IP Block \u2581 releases \u2581the \u2581 IP \u2581address \u2581of \u2581the \u2581given \u2581 IP \u2581address ."], "references": ["\u2581// Release IP Block \u2581deletes \u2581an \u2581 IP \u2581block"], "bleu": 0.1566384057330969, "rouge_l": 0.4728682170542636}
{"id": 7525, "predictions": ["\u2581// \u2581Get CreateAccount Result \u2581returns \u2581the \u2581result \u2581of \u2581a \u2581mock \u2581document"], "references": ["\u2581// \u2581Get CreateAccount Result \u2581retrieves \u2581the \u2581 CreateAccount Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.06459855675488532, "rouge_l": 0.23123578468536773}
{"id": 7574, "predictions": ["\u2581// \u2581Get Dead Entry \u2581returns \u2581the \u2581 Block \u2581 Key \u2581for \u2581the \u2581given \u2581 entity ."], "references": ["\u2581// \u2581Get Dead Entry \u2581retrieves \u2581the \u2581 Dead Entry \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.11635354637063881, "rouge_l": 0.3379501385041551}
{"id": 6696, "predictions": ["\u2581// \u2581 GoString \u2581renders \u2581the \u2581cluster \u2581 data \u2581to \u2581the \u2581 Cluster ."], "references": ["\u2581// \u2581 GoString \u2581implements \u2581fmt \u2581 GoString er \u2581interface ."], "bleu": 0.19674979811155635, "rouge_l": 0.44525547445255476}
{"id": 7040, "predictions": ["\u2581// \u2581 Static File \u2581returns \u2581a \u2581 File File \u2581for \u2581the \u2581given \u2581file \u2581 path ."], "references": ["\u2581// \u2581 Static File \u2581returns \u2581the \u2581 view \u2581which \u2581can \u2581serve \u2581static \u2581files ."], "bleu": 0.31181814978096556, "rouge_l": 0.5398230088495575}
{"id": 6981, "predictions": ["\u2581// \u2581Set Detected ContentType \u2581sets \u2581the \u2581 content \u2581 type ."], "references": ["\u2581// \u2581Set Detected ContentType \u2581detect s , \u2581sets \u2581and \u2581returns \u2581the \u2581response \u2581 Cont en - Type \u2581header \u2581value ."], "bleu": 0.16202330201580606, "rouge_l": 0.49045226130653274}
{"id": 7572, "predictions": ["\u2581// \u2581Get Live Entry \u2581returns \u2581the \u2581 Block Entry \u2581of \u2581the \u2581entry \u2581in \u2581the \u2581bucket ."], "references": ["\u2581// \u2581Get Live Entry \u2581retrieves \u2581the \u2581 Live Entry \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.12233963169959136, "rouge_l": 0.4224376731301939}
{"id": 7665, "predictions": ["\u2581// \u2581 Load \u2581 loads \u2581the \u2581 map \u2581from \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Load \u2581reads \u2581in \u2581a \u2581 Map nik \u2581 map \u2581XML ."], "bleu": 0.22718709780542312, "rouge_l": 0.5384615384615383}
{"id": 7569, "predictions": ["\u2581// \u2581 getParent For Switch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581entry \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Bucket Entry"], "bleu": 0.128455960397243, "rouge_l": 0.45185185185185184}
{"id": 6356, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Frame Type ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581human - readable \u2581representation \u2581of \u2581the \u2581frame \u2581 type ."], "bleu": 0.34617729081707266, "rouge_l": 0.6828358208955225}
{"id": 6880, "predictions": ["\u2581// \u2581 New Inline QueryResult Article \u2581creates \u2581a \u2581new \u2581 inline \u2581query \u2581 article ."], "references": ["\u2581// \u2581 New Inline QueryResult Article \u2581returns \u2581a \u2581new \u2581 Inline QueryResult Article \u2581with \u2581// \u2581all \u2581mandatory \u2581fields \u2581 set ."], "bleu": 0.3212418871334966, "rouge_l": 0.5932802829354553}
{"id": 7454, "predictions": ["\u2581// \u2581Get Payment Op \u2581returns \u2581the \u2581 Payment Op \u2581field \u2581if \u2581it ' s \u2581non - nil , \u2581otherwise \u2581false \u2581otherwise ."], "references": ["\u2581// \u2581Get Payment Op \u2581retrieves \u2581the \u2581 Payment Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.21691658609338924, "rouge_l": 0.45922208281053956}
{"id": 7612, "predictions": ["\u2581// \u2581Get Dont Have \u2581returns \u2581the \u2581 mutator \u2581of \u2581the \u2581 Stellar ' s \u2581parameters ."], "references": ["\u2581// \u2581Get Dont Have \u2581retrieves \u2581the \u2581 Dont Have \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.12804495747708067, "rouge_l": 0.4224376731301939}
{"id": 7452, "predictions": ["\u2581// \u2581Get CreateAccount Op \u2581returns \u2581the \u2581 CreateAccount \u2581operation \u2581for \u2581the \u2581 authorizer \u2581on \u2581the \u2581 org ."], "references": ["\u2581// \u2581Get CreateAccount Op \u2581retrieves \u2581the \u2581 CreateAccount Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.14897299351763904, "rouge_l": 0.40829986613119146}
{"id": 6666, "predictions": ["\u2581// \u2581Parse Address \u2581parses \u2581a \u2581string \u2581and \u2581returns \u2581the \u2581 path \u2581to \u2581a \u2581string ."], "references": ["\u2581// \u2581Parse Address \u2581parses \u2581a \u2581standard \u2581 golang \u2581network \u2581address \u2581and \u2581returns \u2581the \u2581// \u2581protocol \u2581and \u2581 path ."], "bleu": 0.32636840103640724, "rouge_l": 0.6336166194523135}
{"id": 7492, "predictions": ["\u2581// \u2581Get No Issuer \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 Payment ."], "references": ["\u2581// \u2581Get No Issuer \u2581retrieves \u2581the \u2581 No Issuer \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.1248062504457896, "rouge_l": 0.3737236215112321}
{"id": 6870, "predictions": ["\u2581// \u2581 Type \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581update \u2581 type ."], "references": ["\u2581// \u2581 Type \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581update ."], "bleu": 0.7744031410142033, "rouge_l": 0.9306518723994452}
{"id": 6732, "predictions": ["\u2581// \u2581 FileName \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581response"], "references": ["\u2581// \u2581 FileName \u2581returns \u2581HTTP \u2581file \u2581 name"], "bleu": 0.3672056269893592, "rouge_l": 0.5669144981412639}
{"id": 8094, "predictions": ["\u2581// \u2581 Nonce Value FromRequest \u2581returns \u2581the \u2581 status \u2581 status \u2581from \u2581the \u2581request \u2581context ."], "references": ["\u2581// \u2581 Nonce Value FromRequest \u2581validates \u2581a \u2581nonce \u2581in \u2581the \u2581given \u2581request , \u2581and \u2581returns \u2581// \u2581the \u2581validation \u2581 status ."], "bleu": 0.26176096731853526, "rouge_l": 0.5276816608996538}
{"id": 7913, "predictions": ["\u2581// \u2581 Real Name \u2581 - \u2581 Real \u2581 Name \u2581 name"], "references": ["\u2581// \u2581 Real Name \u2581return \u2581the \u2581real \u2581 name \u2581of \u2581the \u2581account \u2581as \u2581registered"], "bleu": 0.28154193371754427, "rouge_l": 0.45522388059701485}
{"id": 6313, "predictions": ["\u2581// \u2581 Sign \u2581sign s \u2581the \u2581request \u2581and \u2581stores \u2581the \u2581 token ."], "references": ["\u2581// \u2581 Sign \u2581sets \u2581the \u2581OAuth \u2581authorization \u2581header"], "bleu": 0.18798317647335086, "rouge_l": 0.39804241435562804}
{"id": 7117, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 Server \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581server \u2581instance \u2581by \u2581a \u2581custom \u2581 name \u2581and \u2581with \u2581// \u2581address \u2581to \u2581 listen \u2581to ."], "bleu": 0.19099435745046806, "rouge_l": 0.47332686711930166}
{"id": 6915, "predictions": ["\u2581// \u2581is AutoIncrement able \u2581returns \u2581true \u2581if \u2581the \u2581field \u2581is \u2581a \u2581 AutoIncrement able \u2581struct ."], "references": ["\u2581// \u2581is AutoIncrement able \u2581returns \u2581whether \u2581the \u2581struct \u2581field \u2581is \u2581integer ."], "bleu": 0.34315019159021515, "rouge_l": 0.6598557692307692}
{"id": 7527, "predictions": ["\u2581// \u2581Get Payment Result \u2581returns \u2581the \u2581result \u2581of \u2581a \u2581 Payment Result \u2581if \u2581it \u2581is \u2581 empty ."], "references": ["\u2581// \u2581Get Payment Result \u2581retrieves \u2581the \u2581 Payment Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.1522490827901986, "rouge_l": 0.4491298527443106}
{"id": 6929, "predictions": ["\u2581// \u2581Set Format \u2581sets \u2581the \u2581 format \u2581of \u2581the \u2581template ."], "references": ["\u2581// \u2581Set Format \u2581sets \u2581the \u2581 format \u2581for \u2581logging ."], "bleu": 0.6315552371794037, "rouge_l": 0.768503937007874}
{"id": 7710, "predictions": ["\u2581// \u2581 Print Horizontal \u2581prints \u2581a \u2581 horizontal \u2581 map ."], "references": ["\u2581// \u2581 Print Horizontal \u2581 - \u2581Prints \u2581 horizontal \u2581 table \u2581from \u2581a \u2581 map ."], "bleu": 0.34103433521328896, "rouge_l": 0.6451233842538191}
{"id": 7618, "predictions": ["\u2581// \u2581Get Tx Set \u2581returns \u2581the \u2581 set \u2581of \u2581transaction \u2581 set \u2581in \u2581the \u2581 subreddit ."], "references": ["\u2581// \u2581Get Tx Set \u2581retrieves \u2581the \u2581 Tx Set \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.12156175551149294, "rouge_l": 0.3321987746766508}
{"id": 6990, "predictions": ["\u2581// \u2581 Most Specific Type \u2581returns \u2581the \u2581 type \u2581of \u2581the \u2581given \u2581 type \u2581of \u2581the \u2581given \u2581 type"], "references": ["\u2581// \u2581 Most Specific \u2581returns \u2581the \u2581most \u2581specific \u2581from \u2581a \u2581list \u2581of \u2581types \u2581in \u2581an \u2581hierarchy \u2581// \u2581behaviour \u2581is \u2581undefined \u2581if \u2581any \u2581of \u2581the \u2581types \u2581are \u2581 siblings ."], "bleu": 0.1427156163971421, "rouge_l": 0.4015799868334431}
{"id": 7226, "predictions": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581state \u2581of \u2581the \u2581state ."], "references": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581whole \u2581 State \u2581object"], "bleu": 0.4617366309441026, "rouge_l": 0.5313588850174217}
{"id": 7716, "predictions": ["\u2581// \u2581row String \u2581returns \u2581the \u2581string \u2581value \u2581of \u2581a \u2581 table ."], "references": ["\u2581// \u2581row String \u2581 - \u2581Creates \u2581a \u2581string \u2581row ."], "bleu": 0.22997519112894443, "rouge_l": 0.46212121212121204}
{"id": 7144, "predictions": ["\u2581// \u2581 Request \u2581sends \u2581a \u2581request \u2581to \u2581the \u2581 RequestContext ."], "references": ["\u2581// \u2581 Request \u2581makes \u2581a \u2581HTTP \u2581request \u2581based \u2581on \u2581 Client \u2581configuration \u2581and \u2581// \u2581arguments \u2581provided ."], "bleu": 0.14612290578557932, "rouge_l": 0.48139797068771134}
{"id": 6894, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 DB ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 DB . \u2581// \u2581If \u2581any \u2581error \u2581occurs , \u2581it \u2581returns \u2581nil \u2581and \u2581error ."], "bleu": 0.17345667168137843, "rouge_l": 0.49745158002038736}
{"id": 6537, "predictions": ["\u2581// \u2581 GetJob \u2581retrieves \u2581all \u2581 Jobs \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 GetJob \u2581returns \u2581the \u2581full \u2581job \u2581details \u2581of \u2581the \u2581job \u2581with \u2581the \u2581given \u2581 id ."], "bleu": 0.1359826861501784, "rouge_l": 0.3438556933483653}
{"id": 6286, "predictions": ["\u2581// \u2581 Finalize \u2581evaluates \u2581 this \u2581 type \u2581 type \u2581to \u2581a \u2581 type ."], "references": ["\u2581// \u2581 Finalize TypeNames \u2581makes \u2581sure \u2581 type \u2581names \u2581are \u2581unique , \u2581it \u2581should \u2581be \u2581called \u2581after \u2581analysis \u2581// \u2581has \u2581completed ."], "bleu": 0.11866034074028102, "rouge_l": 0.31362467866323906}
{"id": 6252, "predictions": ["\u2581// \u2581 format Time \u2581returns \u2581the \u2581time . Time \u2581value \u2581of \u2581the \u2581time ."], "references": ["\u2581// \u2581Returns \u2581time \u2581in \u2581 Right Scale \u2581API \u2581supported \u2581 format"], "bleu": 0.13217947626377288, "rouge_l": 0.24530831099195713}
{"id": 6497, "predictions": ["\u2581// \u2581Must Parse Level \u2581is \u2581like \u2581Parse Level \u2581but \u2581panic s \u2581if \u2581the \u2581 name \u2581is \u2581not \u2581a \u2581valid \u2581// \u2581 format ."], "references": ["\u2581// \u2581Must Parse Level \u2581is \u2581a \u2581conv i ence \u2581function \u2581that \u2581parses \u2581the \u2581passed \u2581in \u2581string \u2581// \u2581as \u2581a \u2581log \u2581level \u2581and \u2581sets \u2581the \u2581log \u2581level \u2581of \u2581the \u2581a pex"], "bleu": 0.1582255431531305, "rouge_l": 0.2580060422960725}
{"id": 7294, "predictions": ["\u2581// \u2581Ignore \u2581sets \u2581the \u2581 Sentinel \u2581 sentinel s ."], "references": ["\u2581// \u2581Ignore \u2581is \u2581a \u2581 sentinel \u2581option \u2581to \u2581 add \u2581ignore \u2581error \u2581 handlers ."], "bleu": 0.13763417606301584, "rouge_l": 0.3860759493670886}
{"id": 7586, "predictions": ["\u2581// \u2581Get Updated \u2581returns \u2581the \u2581 ledger \u2581 data \u2581for \u2581the \u2581 Ledger Entry Change ."], "references": ["\u2581// \u2581Get Updated \u2581retrieves \u2581the \u2581 Updated \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.09199632683713635, "rouge_l": 0.3112244897959183}
{"id": 7590, "predictions": ["\u2581// \u2581 GetState \u2581returns \u2581the \u2581 ledger \u2581 data \u2581for \u2581the \u2581 ledger"], "references": ["\u2581// \u2581 GetState \u2581retrieves \u2581the \u2581 State \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.07484864234270017, "rouge_l": 0.28218966846569005}
{"id": 7584, "predictions": ["\u2581// \u2581Get Created \u2581returns \u2581the \u2581 ledger \u2581for \u2581the \u2581 ledger \u2581 data"], "references": ["\u2581// \u2581Get Created \u2581retrieves \u2581the \u2581 Created \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.07484864234270017, "rouge_l": 0.28218966846569005}
{"id": 7958, "predictions": ["\u2581// \u2581 Keys \u2581returns \u2581the \u2581 keys \u2581of \u2581the \u2581 set \u2581of \u2581 keys \u2581in \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Keys \u2581returns \u2581all \u2581 keys \u2581from \u2581the \u2581node \u2581list"], "bleu": 0.21314568971111159, "rouge_l": 0.4902411021814007}
{"id": 6319, "predictions": ["\u2581// \u2581build URL \u2581generates \u2581a \u2581 URL \u2581for \u2581the \u2581given \u2581host \u2581and \u2581 path ."], "references": ["\u2581// \u2581Compute \u2581API \u2581 URL \u2581given \u2581a \u2581 scheme , \u2581hostname \u2581and \u2581a \u2581 path"], "bleu": 0.16943571815930883, "rouge_l": 0.4666666666666668}
{"id": 6465, "predictions": ["\u2581// \u2581 Stream Server Interceptor \u2581returns \u2581a \u2581new \u2581streaming \u2581server \u2581interceptor \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581// \u2581the \u2581interceptor \u2581for \u2581a \u2581gRPC \u2581server ."], "references": ["\u2581// \u2581 Stream Server Interceptor \u2581applies \u2581fn \u2581to \u2581errors \u2581returned \u2581by \u2581server ."], "bleu": 0.19804854714851308, "rouge_l": 0.4364937388193202}
{"id": 7588, "predictions": ["\u2581// \u2581Get Removed \u2581returns \u2581true \u2581if \u2581the \u2581 ledger \u2581 data \u2581has \u2581been \u2581 tracked"], "references": ["\u2581// \u2581Get Removed \u2581retrieves \u2581the \u2581 Removed \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.08990177513008257, "rouge_l": 0.22642910170749816}
{"id": 7037, "predictions": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581 active \u2581 status \u2581of \u2581the \u2581pool ."], "references": ["\u2581// \u2581 Status \u2581returns \u2581a \u2581\" stats \" \u2581instance ."], "bleu": 0.27824623288353134, "rouge_l": 0.44525547445255476}
{"id": 7863, "predictions": ["\u2581// \u2581Set Transport \u2581sets \u2581the \u2581transport \u2581for \u2581the \u2581given \u2581transport ."], "references": ["\u2581// \u2581Set Transport \u2581changes \u2581the \u2581transport \u2581on \u2581the \u2581client \u2581and \u2581all \u2581its \u2581 subresources"], "bleu": 0.19947981050038782, "rouge_l": 0.4698331193838254}
{"id": 7918, "predictions": ["\u2581// \u2581 Aliases \u2581returns \u2581the \u2581 aliases \u2581for \u2581the \u2581 domain ."], "references": ["\u2581// \u2581 Aliases \u2581returns \u2581a \u2581list \u2581of \u2581 domain \u2581 aliases"], "bleu": 0.3706866381788037, "rouge_l": 0.5258620689655172}
{"id": 7278, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581index ."], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581element \u2581at \u2581position \u2581` i `"], "bleu": 0.35084396956386854, "rouge_l": 0.4}
{"id": 7626, "predictions": ["\u2581// \u2581Get Envelope \u2581returns \u2581the \u2581 S 3 \u2581message \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581Get Envelope \u2581retrieves \u2581the \u2581 Envelope \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.07738947740263583, "rouge_l": 0.3292212798766383}
{"id": 6812, "predictions": ["\u2581// \u2581 State \u2581returns \u2581a \u2581 State \u2581object \u2581that \u2581 watches \u2581the \u2581 Watcher ."], "references": ["\u2581// \u2581 State \u2581returns \u2581a \u2581 slice \u2581of \u2581 Notifications \u2581representing \u2581the \u2581files \u2581being \u2581 watched \u2581// \u2581and \u2581their \u2581last \u2581event ."], "bleu": 0.2614580797068038, "rouge_l": 0.522707797772065}
{"id": 6693, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581node \u2581at \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get \u2581if \u2581possible \u2581returns \u2581node \u2581for \u2581a \u2581given \u2581bucket \u2581 id ."], "bleu": 0.1597214530273207, "rouge_l": 0.5746971736204576}
{"id": 7014, "predictions": ["\u2581// \u2581 Delete Session \u2581deletes \u2581the \u2581session \u2581from \u2581the \u2581context"], "references": ["\u2581// \u2581 Delete Session \u2581delete \u2581session"], "bleu": 0.3672056269893592, "rouge_l": 0.6545064377682404}
{"id": 7390, "predictions": ["\u2581// \u2581 Mutate \u2581adds \u2581a \u2581transaction \u2581to \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Mutate \u2581applies \u2581the \u2581provided \u2581 Transaction Envelope Mutator s \u2581to \u2581 this \u2581builder ' s \u2581// \u2581envelope"], "bleu": 0.10556727130333551, "rouge_l": 0.2612419700214133}
{"id": 6768, "predictions": ["\u2581// \u2581parse Printable String \u2581parses \u2581a \u2581string \u2581 format \u2581string \u2581into \u2581a \u2581string ."], "references": ["\u2581// \u2581 Printable String \u2581// \u2581parse Printable String \u2581parses \u2581a \u2581 ASN . 1 \u2581 Printable String \u2581from \u2581the \u2581given \u2581 byte \u2581// \u2581array \u2581and \u2581returns \u2581it ."], "bleu": 0.15675647312598798, "rouge_l": 0.35935198821796754}
{"id": 7620, "predictions": ["\u2581// \u2581Get Transaction \u2581returns \u2581the \u2581transaction ' s \u2581 Transaction ."], "references": ["\u2581// \u2581Get Transaction \u2581retrieves \u2581the \u2581 Transaction \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.07072856148360326, "rouge_l": 0.34242181234963914}
{"id": 7259, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581value ."], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581variable \u2581stored \u2581in \u2581slot \u2581` x `"], "bleu": 0.3145413833897494, "rouge_l": 0.3929146537842191}
{"id": 7382, "predictions": ["\u2581// \u2581check \u2581if \u2581the \u2581 needle \u2581 contains \u2581a \u2581valid \u2581 lower ible \u2581check ."], "references": ["\u2581// \u2581abort s \u2581the \u2581attempt \u2581if \u2581a \u2581desired \u2581character \u2581is \u2581not \u2581a \u2581valid \u2581base 32 \u2581digit"], "bleu": 0.12044026117975158, "rouge_l": 0.25657202944269186}
{"id": 6739, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581 Bool Option"], "references": ["\u2581// \u2581String \u2581is \u2581required \u2581for \u2581 king pin \u2581to \u2581generate \u2581usage \u2581with \u2581 this \u2581datatype"], "bleu": 0.1119806851646963, "rouge_l": 0.22453987730061348}
{"id": 7649, "predictions": ["\u2581// \u2581Set Account \u2581sets \u2581the \u2581 ledger \u2581for \u2581the \u2581account \u2581 key ."], "references": ["\u2581// \u2581Set Account \u2581 mutate s \u2581` key ` \u2581such \u2581that \u2581it \u2581represents \u2581the \u2581identity \u2581of \u2581` account `"], "bleu": 0.12888648678772435, "rouge_l": 0.3022794846382557}
{"id": 7614, "predictions": ["\u2581// \u2581Get Peers \u2581returns \u2581the \u2581 active \u2581peers \u2581for \u2581the \u2581given \u2581 subreddit ."], "references": ["\u2581// \u2581Get Peers \u2581retrieves \u2581the \u2581 Peers \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.08306834782954896, "rouge_l": 0.32299546142208774}
{"id": 6241, "predictions": ["\u2581// \u2581Apply Header Extract \u2581applies \u2581the \u2581given \u2581header \u2581to \u2581the \u2581 Rollbar \u2581object ."], "references": ["\u2581// \u2581Apply Header Extract \u2581reads \u2581the \u2581value \u2581of \u2581the \u2581given \u2581header ."], "bleu": 0.3479159475128446, "rouge_l": 0.6240409207161125}
{"id": 7550, "predictions": ["\u2581// \u2581 Known For Switch \u2581implements \u2581the \u2581 Transaction Result \u2581interface \u2581for \u2581// \u2581transaction Result Result ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Transaction Result Result"], "bleu": 0.12393296726299324, "rouge_l": 0.4033798677443057}
{"id": 7596, "predictions": ["\u2581// \u2581 Exported For Switch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 IP \u2581address \u2581of \u2581the \u2581 Peer Address Ip ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Peer Address Ip"], "bleu": 0.21065276369453356, "rouge_l": 0.5427789185489391}
{"id": 6276, "predictions": ["\u2581// \u2581 Ref \u2581returns \u2581the \u2581reference \u2581to \u2581the \u2581reference \u2581 ref ."], "references": ["\u2581// \u2581 Ref \u2581gets \u2581a \u2581definition \u2581for \u2581a \u2581 Schema \u2581reference , \u2581if \u2581it \u2581 exists"], "bleu": 0.15334918670155004, "rouge_l": 0.3481735159817351}
{"id": 7593, "predictions": ["\u2581// \u2581Get Operations \u2581returns \u2581the \u2581 Operations \u2581 set \u2581of \u2581 Operations \u2581objects ."], "references": ["\u2581// \u2581Get Operations \u2581retrieves \u2581the \u2581 Operations \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.09720439258164289, "rouge_l": 0.32299546142208774}
{"id": 7553, "predictions": ["\u2581// \u2581Get Results \u2581returns \u2581the \u2581result \u2581of \u2581the \u2581transaction Result \u2581if \u2581it \u2581 exists ."], "references": ["\u2581// \u2581Get Results \u2581retrieves \u2581the \u2581 Results \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.08425432371866676, "rouge_l": 0.31700074239049736}
{"id": 6597, "predictions": ["\u2581// \u2581 Delete Server \u2581deletes \u2581a \u2581server \u2581by \u2581 ID ."], "references": ["\u2581// \u2581 Delete Server \u2581deletes \u2581the \u2581server \u2581where \u2581 id = srv id \u2581and \u2581returns \u2581 Resp \u2581struct"], "bleu": 0.23726680569473446, "rouge_l": 0.46262188515709646}
{"id": 7782, "predictions": ["\u2581// \u2581 New Deployment Manifest FromFile \u2581creates \u2581a \u2581 Deployment Manifest \u2581from \u2581a \u2581file ."], "references": ["\u2581// New Deployment Manifest FromFile \u2581 - \u2581will \u2581read \u2581any \u2581 implementor \u2581of \u2581os . File \u2581and \u2581// initialize \u2581a \u2581deployment \u2581manifest \u2581from \u2581its \u2581bytes . \u2581// this \u2581can \u2581be"], "bleu": 0.10257365769548688, "rouge_l": 0.3353951890034364}
{"id": 7156, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Service ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Handler . \u2581// \u2581The \u2581first \u2581argument \u2581is \u2581the \u2581handler \u2581that \u2581will \u2581be \u2581executed \u2581// \u2581when \u2581 maintenance \u2581mode \u2581is \u2581off ."], "bleu": 0.032552441587899196, "rouge_l": 0.32720306513409964}
{"id": 7246, "predictions": ["\u2581// \u2581 New V 4 \u2581returns \u2581a \u2581new \u2581 UUID"], "references": ["\u2581// \u2581 New V 4 \u2581creates \u2581a \u2581new \u2581 UUID \u2581with \u2581variant \u2581 4 \u2581as \u2581described \u2581in \u2581RFC \u2581 412 2. \u2581 Variant \u2581 4 \u2581based \u2581on \u2581 pure \u2581random"], "bleu": 0.09496313598556735, "rouge_l": 0.4127819548872181}
{"id": 7721, "predictions": ["\u2581// \u2581 Hash Password \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581password \u2581using \u2581the \u2581given \u2581salt ."], "references": ["\u2581// Hash Password \u2581hash \u2581un \u2581 mot \u2581de \u2581pass e"], "bleu": 0.12874330508144843, "rouge_l": 0.3319727891156462}
{"id": 6772, "predictions": ["\u2581// \u2581 CreateBucket \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581field ' s \u2581value \u2581is \u2581a \u2581valid \u2581 Value ."], "references": ["\u2581// \u2581 setDefaultValue \u2581is \u2581used \u2581to \u2581install \u2581a \u2581default \u2581value , \u2581from \u2581a \u2581tag \u2581string , \u2581into \u2581// \u2581a \u2581 Value . \u2581It \u2581is \u2581successful \u2581if \u2581the \u2581field \u2581was \u2581optional"], "bleu": 0.09730091053565328, "rouge_l": 0.2790849673202615}
{"id": 6888, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581 kick \u2581to \u2581a \u2581 delivery ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581 kick \u2581request ."], "bleu": 0.3438931217657843, "rouge_l": 0.6842948717948718}
{"id": 7975, "predictions": ["\u2581// \u2581 Compare KV \u2581returns \u2581a \u2581 slice \u2581of \u2581 b ."], "references": ["\u2581// \u2581 Compare KV \u2581is \u2581a \u2581comparator \u2581for \u2581 KV \u2581item"], "bleu": 0.31455601883230705, "rouge_l": 0.5258620689655172}
{"id": 7203, "predictions": ["\u2581// \u2581tx Print Raw \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 description \u2581of \u2581// \u2581the \u2581 State ."], "references": ["\u2581// \u2581Prints \u2581the \u2581 contents \u2581of \u2581register \u2581sa , \u2581 forcing \u2581raw \u2581string \u2581 semantics"], "bleu": 0.09936036078831874, "rouge_l": 0.2932692307692307}
{"id": 7606, "predictions": ["\u2581// \u2581Get Error \u2581returns \u2581the \u2581error \u2581message \u2581of \u2581the \u2581 Stellar Message ."], "references": ["\u2581// \u2581Get Error \u2581retrieves \u2581the \u2581 Error \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.07738947740263583, "rouge_l": 0.28218966846569005}
{"id": 7610, "predictions": ["\u2581// \u2581Get Auth \u2581returns \u2581the \u2581 Auth \u2581 Auth \u2581value \u2581if \u2581it \u2581is \u2581 set ."], "references": ["\u2581// \u2581Get Auth \u2581retrieves \u2581the \u2581 Auth \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.1311071798547603, "rouge_l": 0.4446064139941691}
{"id": 6233, "predictions": ["\u2581// \u2581location \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 code \u2581 set ."], "references": ["\u2581// \u2581Return \u2581 code \u2581corresponding \u2581to \u2581 param \u2581location"], "bleu": 0.14949751774990683, "rouge_l": 0.37596302003081655}
{"id": 6757, "predictions": ["\u2581// \u2581Add Output \u2581adds \u2581a \u2581 set \u2581of \u2581output \u2581output \u2581to \u2581the \u2581output \u2581output"], "references": ["\u2581// \u2581Add Output \u2581adds \u2581an \u2581output \u2581writer \u2581to \u2581 Bench"], "bleu": 0.27668736912821895, "rouge_l": 0.5154929577464789}
{"id": 7991, "predictions": ["\u2581// \u2581 Decode \u2581decodes \u2581the \u2581snapshot \u2581from \u2581the \u2581given \u2581io . Reader ."], "references": ["\u2581// \u2581 Decode \u2581implements \u2581binary \u2581decoder \u2581for \u2581snapshot \u2581metadata"], "bleu": 0.18798317647335086, "rouge_l": 0.37596302003081655}
{"id": 7608, "predictions": ["\u2581// \u2581Get Hello \u2581implements \u2581the \u2581 Hello Message \u2581interface \u2581for \u2581 Stellar Message ."], "references": ["\u2581// \u2581Get Hello \u2581retrieves \u2581the \u2581 Hello \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.09720439258164289, "rouge_l": 0.32299546142208774}
{"id": 7548, "predictions": ["\u2581// \u2581Get Immutable \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 WebGL Deltas \u2581object \u2581or \u2581an \u2581error \u2581if \u2581not ."], "references": ["\u2581// \u2581Get Tr \u2581retrieves \u2581the \u2581Tr \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.07246904245767809, "rouge_l": 0.25939050318922746}
{"id": 7468, "predictions": ["\u2581// \u2581Get Destination \u2581returns \u2581the \u2581 Destination \u2581for \u2581the \u2581 data ."], "references": ["\u2581// \u2581Get Destination \u2581retrieves \u2581the \u2581 Destination \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.08532691006745015, "rouge_l": 0.38364779874213834}
{"id": 8030, "predictions": ["\u2581// \u2581Get Available Inventory \u2581returns \u2581a \u2581 set \u2581of \u2581available \u2581 inventory \u2581 data \u2581for \u2581a \u2581given \u2581 Task \u2581// \u2581 Task \u2581 ID ."], "references": ["\u2581// Get Available Inventory \u2581 - \u2581 this \u2581should \u2581return \u2581available \u2581 inventory \u2581and \u2581start \u2581a \u2581long \u2581task \u2581 poller"], "bleu": 0.12514328743841557, "rouge_l": 0.40817843866171005}
{"id": 6657, "predictions": ["\u2581// \u2581 WriteString ToFile \u2581writes \u2581the \u2581 contents \u2581of \u2581the \u2581 path \u2581to \u2581the \u2581given \u2581file"], "references": ["\u2581// \u2581 WriteString ToFile \u2581writes \u2581the \u2581string \u2581to \u2581the \u2581file \u2581at \u2581the \u2581provided \u2581 path ."], "bleu": 0.43683636444615426, "rouge_l": 0.5625}
{"id": 7479, "predictions": ["\u2581// \u2581Get Hash \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581 blockchain ."], "references": ["\u2581// \u2581Get Hash \u2581retrieves \u2581the \u2581 Hash \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.06326154857124411, "rouge_l": 0.293504410585405}
{"id": 7504, "predictions": ["\u2581// \u2581 New Change Trust Result \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Change Trust Result \u2581with \u2581the \u2581given \u2581// \u2581 status \u2581 code ."], "references": ["\u2581// \u2581 New Change Trust Result \u2581creates \u2581a \u2581new \u2581 Change Trust Result ."], "bleu": 0.35642944815504496, "rouge_l": 0.7182971014492753}
{"id": 7520, "predictions": ["\u2581// \u2581 New Manage Data Result \u2581returns \u2581a \u2581 Manage Data Result \u2581instance"], "references": ["\u2581// \u2581 New Manage Data Result \u2581creates \u2581a \u2581new \u2581 Manage Data Result ."], "bleu": 0.5831823241186893, "rouge_l": 0.8094089264173704}
{"id": 6889, "predictions": ["\u2581// \u2581 Send \u2581 initiate s \u2581a \u2581 Send \u2581 call \u2581to \u2581 Outgoing Un sched Chat Member"], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581un ban \u2581request ."], "bleu": 0.12673718536830808, "rouge_l": 0.2364341085271318}
{"id": 6887, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581a \u2581 Inline Query \u2581query \u2581to \u2581a \u2581 Inline Query \u2581query ."], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581 inline \u2581query \u2581answer . \u2581// \u2581 On \u2581 success , \u2581nil \u2581is \u2581returned ."], "bleu": 0.19312689920016385, "rouge_l": 0.43571428571428567}
{"id": 6863, "predictions": ["\u2581// \u2581 New Outgoing Chat Action \u2581creates \u2581a \u2581new \u2581 Outgoing Chat Action"], "references": ["\u2581// \u2581 New Outgoing Chat Action \u2581creates \u2581a \u2581new \u2581outgoing \u2581chat \u2581action ."], "bleu": 0.6767781116542884, "rouge_l": 0.6923076923076923}
{"id": 7507, "predictions": ["\u2581// \u2581 New Allow Trust Result \u2581returns \u2581a \u2581new \u2581 Allow Trust Result \u2581instance \u2581with \u2581the \u2581given \u2581parameters"], "references": ["\u2581// \u2581 New Allow Trust Result \u2581creates \u2581a \u2581new \u2581 Allow Trust Result ."], "bleu": 0.557853798004205, "rouge_l": 0.7672955974842767}
{"id": 6343, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581producer \u2581and \u2581stops \u2581the \u2581 Producer ."], "references": ["\u2581// \u2581 Stop \u2581 graceful ly \u2581shut s down \u2581the \u2581producer , \u2581 cancelling \u2581all \u2581 inflight \u2581requests \u2581and \u2581// \u2581waiting \u2581for \u2581all \u2581backend \u2581connections \u2581to \u2581be \u2581closed . \u2581//"], "bleu": 0.056788720057911184, "rouge_l": 0.30942028985507253}
{"id": 8011, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581next \u2581item \u2581from \u2581the \u2581 iterator ."], "references": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581current \u2581item \u2581from \u2581the \u2581skip list"], "bleu": 0.48442732379638637, "rouge_l": 0.7011494252873562}
{"id": 7337, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581 slice ."], "references": ["\u2581// \u2581String \u2581returns \u2581an \u2581\" amount \u2581string \" \u2581from \u2581the \u2581provided \u2581raw \u2581value \u2581` v `."], "bleu": 0.15334918670155004, "rouge_l": 0.3481735159817351}
{"id": 7477, "predictions": ["\u2581// \u2581 GetId \u2581returns \u2581the \u2581 identifier \u2581of \u2581the \u2581 rational ."], "references": ["\u2581// \u2581 GetId \u2581retrieves \u2581the \u2581 Id \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.07080233331346997, "rouge_l": 0.3356918238993711}
{"id": 6535, "predictions": ["\u2581// \u2581 GetJob Summaries For Project \u2581returns \u2581all \u2581 Summaries \u2581for \u2581a \u2581project ."], "references": ["\u2581// \u2581 GetJob Summaries For Project \u2581returns \u2581 summaries \u2581of \u2581the \u2581jobs \u2581belonging \u2581to \u2581the \u2581named \u2581project ."], "bleu": 0.4003878321770868, "rouge_l": 0.6112224448897796}
{"id": 6779, "predictions": ["\u2581// \u2581Register Provider \u2581registers \u2581a \u2581provider \u2581provider ."], "references": ["\u2581// \u2581Register Plugin \u2581registers \u2581a \u2581plugin \u2581by \u2581 name . \u2581This \u2581// \u2581is \u2581expected \u2581to \u2581happen \u2581during \u2581 app \u2581startup ."], "bleu": 0.05469456170663171, "rouge_l": 0.3190376569037656}
{"id": 7666, "predictions": ["\u2581// \u2581 Resize \u2581 resize s \u2581the \u2581 map \u2581with \u2581the \u2581given \u2581 width \u2581and \u2581 height ."], "references": ["\u2581// \u2581 Resize \u2581changes \u2581the \u2581 map \u2581 size \u2581in \u2581pixel . \u2581// \u2581 Sizes \u2581larger \u2581than \u2581 16 k \u2581pixels \u2581are \u2581ignored \u2581by \u2581 Map nik . \u2581Use \u2581"], "bleu": 0.10536407988327054, "rouge_l": 0.3588235294117647}
{"id": 7033, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581 Job \u2581to \u2581the \u2581pool ."], "references": ["\u2581// \u2581Add \u2581creates \u2581a \u2581 Job \u2581from \u2581the \u2581given \u2581function \u2581and \u2581args \u2581and \u2581// \u2581adds \u2581it \u2581to \u2581the \u2581 Pool ."], "bleu": 0.09705048773333114, "rouge_l": 0.47332686711930166}
{"id": 6658, "predictions": ["\u2581// \u2581 ReadFile ToString \u2581reads \u2581a \u2581string \u2581from \u2581a \u2581file ."], "references": ["\u2581// \u2581 ReadFile ToString \u2581reads \u2581the \u2581file \u2581at \u2581the \u2581provided \u2581 path \u2581to \u2581a \u2581string ."], "bleu": 0.31493608995529154, "rouge_l": 0.5734430082256169}
{"id": 7264, "predictions": ["\u2581// \u2581 Arg String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 code ."], "references": ["\u2581// \u2581 Arg String \u2581returns \u2581the \u2581string \u2581represent at in \u2581of \u2581the \u2581argument"], "bleu": 0.5622008276590377, "rouge_l": 0.6923076923076923}
{"id": 7984, "predictions": ["\u2581// \u2581Use Memory Mgmt \u2581sets \u2581the \u2581default \u2581 config \u2581to \u2581 set \u2581the \u2581default \u2581 data ."], "references": ["\u2581// \u2581Use Memory Mgmt \u2581provides \u2581custom \u2581memory \u2581 allocator \u2581for \u2581 N itr o \u2581 items \u2581storage"], "bleu": 0.22612164703205964, "rouge_l": 0.4117647058823529}
{"id": 7771, "predictions": ["\u2581// \u2581 GetDefault Task Image Resource \u2581returns \u2581the \u2581default \u2581task \u2581 Image \u2581 Resource"], "references": ["\u2581// \u2581 GetDefault Task Image Resource \u2581 - \u2581convenience \u2581 helper \u2581to \u2581output \u2581default \u2581object \u2581for \u2581// \u2581task \u2581images"], "bleu": 0.313474585951845, "rouge_l": 0.471953578336557}
{"id": 6243, "predictions": ["\u2581// \u2581 New API Analyzer \u2581creates \u2581a \u2581new \u2581API \u2581analyzer"], "references": ["\u2581// \u2581 New API Analyzer \u2581is \u2581the \u2581factory \u2581method \u2581for \u2581the \u2581API \u2581analyzer"], "bleu": 0.38471221949546625, "rouge_l": 0.5947075208913649}
{"id": 7326, "predictions": ["\u2581// \u2581 Mutate Change Trust \u2581is \u2581the \u2581same \u2581as \u2581 Mutate Change Trust , \u2581but \u2581it \u2581allows \u2581you \u2581to \u2581specify \u2581the \u2581// \u2581 path \u2581to \u2581the \u2581 path \u2581to \u2581the"], "references": ["\u2581// \u2581 Mutate Change Trust \u2581for \u2581 Asset \u2581sets \u2581the \u2581 Change Trust Op ' s \u2581 Line \u2581field"], "bleu": 0.1911416754879601, "rouge_l": 0.42538354253835425}
{"id": 7475, "predictions": ["\u2581// \u2581Get Text \u2581returns \u2581the \u2581 text \u2581 text \u2581for \u2581the \u2581 blockchain ."], "references": ["\u2581// \u2581Get Text \u2581retrieves \u2581the \u2581 Text \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581returning \u2581ok \u2581if \u2581the \u2581union ' s \u2581switch \u2581indicated \u2581the \u2581value \u2581is \u2581valid ."], "bleu": 0.08306834782954896, "rouge_l": 0.32299546142208774}
{"id": 6442, "predictions": ["\u2581// \u2581 Outgoing Context WithService Info \u2581returns \u2581the \u2581 Context \u2581for \u2581the \u2581service ."], "references": ["\u2581// \u2581 Outgoing Context WithService Info \u2581returns \u2581an \u2581outgoing \u2581context \u2581with \u2581the \u2581 id"], "bleu": 0.5202556880807584, "rouge_l": 0.642857142857143}
{"id": 7396, "predictions": ["\u2581// \u2581 Mutate Set Options \u2581sets \u2581the \u2581 hyper lation Dest \u2581 Options \u2581for \u2581the \u2581given \u2581 set \u2581 set \u2581operation"], "references": ["\u2581// \u2581 Mutate Set Options \u2581for \u2581 Inf lation Dest \u2581sets \u2581the \u2581Set Options Op ' s \u2581 Inf lation Dest \u2581field"], "bleu": 0.28204131736466936, "rouge_l": 0.463173880030372}
{"id": 6890, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581 post \u2581callback \u2581to \u2581the \u2581 Outgoing Callback"], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581callback \u2581response ."], "bleu": 0.3636227046500071, "rouge_l": 0.5970636215334422}
{"id": 7295, "predictions": ["\u2581// \u2581 Sig s \u2581is \u2581a \u2581 functional \u2581option \u2581that \u2581sets \u2581the \u2581 Sentinel \u2581// \u2581 sentinel s \u2581for \u2581the \u2581 Sentinel ."], "references": ["\u2581// \u2581 Sig s \u2581is \u2581a \u2581 sentinel \u2581option \u2581to \u2581 set \u2581the \u2581specified \u2581signals \u2581for \u2581shutdown ."], "bleu": 0.338796999974464, "rouge_l": 0.5486508585445625}
{"id": 7681, "predictions": ["\u2581// \u2581 Gain \u2581returns \u2581the \u2581 Gain \u2581of \u2581the \u2581 \u2581audio \u2581buffer"], "references": ["\u2581// \u2581 Gain \u2581applies \u2581the \u2581multiplier \u2581to \u2581the \u2581passed \u2581buffer . \u2581// \u2581 A \u2581multiple r \u2581of \u2581 1 \u2581would \u2581increase \u2581the \u2581 amplitude \u2581of \u2581the \u2581signal \u2581by \u2581 100%"], "bleu": 0.061649414488583236, "rouge_l": 0.3536231884057971}
{"id": 6397, "predictions": ["\u2581// \u2581Parse Exec \u2581parses \u2581a \u2581 text \u2581 table \u2581from \u2581a \u2581 text \u2581tree ."], "references": ["\u2581// Parse Exec \u2581parses \u2581the \u2581XPath \u2581string , \u2581 xp str , \u2581and \u2581runs \u2581 Exec ."], "bleu": 0.11709960242793659, "rouge_l": 0.37082066869300917}
{"id": 7979, "predictions": ["\u2581// \u2581 Compare N \u2581iterators o \u2581 Compare \u2581 N \u2581objects ."], "references": ["\u2581// \u2581 Compare N itr o \u2581implements \u2581comparator \u2581for \u2581 N itr o \u2581instances \u2581based \u2581on \u2581its \u2581 id"], "bleu": 0.19763923872387965, "rouge_l": 0.43394308943089427}
{"id": 6905, "predictions": ["\u2581// \u2581 Commit \u2581commits \u2581the \u2581database ."], "references": ["\u2581// \u2581 Commit \u2581commits \u2581the \u2581transaction . \u2581// \u2581If \u2581 Begin \u2581still \u2581not \u2581called , \u2581or \u2581 Commit \u2581or \u2581 Rollback \u2581already \u2581called , \u2581 Commit \u2581returns \u2581 Err Tx"], "bleu": 0.026455588012078576, "rouge_l": 0.29163346613545815}
{"id": 6866, "predictions": ["\u2581// \u2581 New Outgoing Un ban Chat Member \u2581creates \u2581a \u2581new \u2581 Outgoing Un ban Chat Member"], "references": ["\u2581// \u2581 New Outgoing Un ban Chat Member \u2581creates \u2581a \u2581request \u2581to \u2581un ban \u2581a \u2581member \u2581of \u2581a \u2581// \u2581 group \u2581chat \u2581or \u2581channel ."], "bleu": 0.3732174328624617, "rouge_l": 0.5064150943396226}
{"id": 6994, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581 key \u2581value \u2581pair \u2581to \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Set \u2581value \u2581in \u2581 redis \u2581session"], "bleu": 0.13217947626377288, "rouge_l": 0.4053156146179402}
{"id": 6309, "predictions": ["\u2581// \u2581new Cookie Signer \u2581returns \u2581a \u2581new \u2581 Authenticator \u2581that \u2581sign s \u2581the \u2581 token ."], "references": ["\u2581// \u2581new Cookie Signer \u2581returns \u2581a \u2581cookie \u2581signer \u2581that \u2581uses \u2581the \u2581given \u2581builder \u2581to \u2581build \u2581 login \u2581requests ."], "bleu": 0.32323339053965333, "rouge_l": 0.5627306273062731}
{"id": 6886, "predictions": ["\u2581// \u2581 Send \u2581sends \u2581an \u2581 rpc \u2581 call \u2581to \u2581the \u2581 Chat Chat Action"], "references": ["\u2581// \u2581 Send \u2581sends \u2581the \u2581chat \u2581action . \u2581// \u2581 On \u2581 success , \u2581nil \u2581is \u2581returned ."], "bleu": 0.21081220624616523, "rouge_l": 0.3577712609970674}
{"id": 6704, "predictions": ["\u2581// \u2581 Actions \u2581returns \u2581a \u2581new \u2581 Action \u2581with \u2581the \u2581given \u2581actions ."], "references": ["\u2581// \u2581 Actions \u2581register \u2581actions"], "bleu": 0.18798317647335086, "rouge_l": 0.48316831683168315}
{"id": 6698, "predictions": ["\u2581// \u2581 Value \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 fieldPath"], "references": ["\u2581// \u2581 Value \u2581satisfy \u2581driver . Value r \u2581interface ."], "bleu": 0.21200626759025185, "rouge_l": 0.28818897637795277}
{"id": 6489, "predictions": ["\u2581// \u2581 Restrict Filter \u2581returns \u2581a \u2581 filter \u2581that \u2581filters \u2581the \u2581 filter \u2581with \u2581the \u2581given \u2581// \u2581 filter ."], "references": ["\u2581// \u2581 Restrict Filter \u2581restrict s \u2581the \u2581 filter \u2581to \u2581only \u2581work \u2581on \u2581a \u2581certain \u2581field"], "bleu": 0.23418123261847468, "rouge_l": 0.39684014869888473}
{"id": 6879, "predictions": ["\u2581// \u2581 Implement \u2581the \u2581 Send \u2581method"], "references": ["\u2581// \u2581 querystring \u2581implements \u2581 querystring er \u2581to \u2581represent \u2581the \u2581outgoing \u2581 voice \u2581// \u2581note ."], "bleu": 0.07678812443288274, "rouge_l": 0.3249001331557923}
{"id": 7089, "predictions": ["\u2581// \u2581 Has Errors \u2581returns \u2581true \u2581if \u2581the \u2581 form \u2581 form \u2581 slice ."], "references": ["\u2581// \u2581 Has Errors \u2581returns \u2581 weather \u2581 Form Errors \u2581instance \u2581 contains \u2581at \u2581 le as \u2581one \u2581error ."], "bleu": 0.2453026996845374, "rouge_l": 0.5013698630136987}
{"id": 7092, "predictions": ["\u2581// \u2581 Chain Handlers \u2581returns \u2581a \u2581handler \u2581that \u2581serves \u2581 handlers \u2581in \u2581the \u2581 Handlers ."], "references": ["\u2581// \u2581 Chain Handlers \u2581executes \u2581each \u2581function \u2581from \u2581the \u2581arguments \u2581with \u2581handler \u2581// \u2581from \u2581the \u2581next \u2581function \u2581to \u2581construct \u2581a \u2581 chan \u2581 fo \u2581callers ."], "bleu": 0.13956286647973956, "rouge_l": 0.3652694610778443}
{"id": 7997, "predictions": ["\u2581// \u2581 Compare \u2581compares \u2581 this \u2581 data \u2581to \u2581find \u2581a \u2581 merkle \u2581session ."], "references": ["\u2581// \u2581 Compare BS \u2581is \u2581a \u2581 barrier \u2581session \u2581comparator \u2581based \u2581on \u2581 seqno"], "bleu": 0.195647514979229, "rouge_l": 0.416382252559727}
{"id": 6821, "predictions": ["\u2581// \u2581send \u2581sends \u2581a \u2581 post - trip \u2581to \u2581the \u2581 NATS \u2581 Streaming \u2581connection ."], "references": ["\u2581// send \u2581to \u2581connection , \u2581ensure \u2581only \u2581 1 \u2581 concurrent \u2581sender"], "bleu": 0.10123734869668824, "rouge_l": 0.2932692307692307}
{"id": 6376, "predictions": ["\u2581// \u2581Execute \u2581executes \u2581a \u2581template"], "references": ["\u2581// \u2581Execute \u2581 render \u2581template \u2581with \u2581default \u2581\" application \" \u2581 layout ."], "bleu": 0.07795171967670728, "rouge_l": 0.3086003372681282}
{"id": 8085, "predictions": ["\u2581// \u2581 Deploy V App \u2581retrieves \u2581the \u2581 v Cloud Client Client"], "references": ["\u2581// Deploy V App \u2581 - \u2581fake \u2581out \u2581calling \u2581deploy \u2581 v app"], "bleu": 0.22736544735608616, "rouge_l": 0.4765625000000001}
{"id": 6428, "predictions": ["\u2581// \u2581to Impl \u2581returns \u2581a \u2581 Error \u2581struct \u2581with \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581to Impl \u2581creates \u2581an \u2581equivalent \u2581 impl \u2581for \u2581any \u2581 Error"], "bleu": 0.21142141714303078, "rouge_l": 0.4029062087186261}
{"id": 7267, "predictions": ["\u2581// \u2581 New V 5 \u2581returns \u2581a \u2581new \u2581 UUID \u2581with \u2581a \u2581 UUID"], "references": ["\u2581// \u2581 New V 5 \u2581creates \u2581a \u2581new \u2581 UUID \u2581with \u2581variant \u2581 5 \u2581as \u2581described \u2581in \u2581RFC \u2581 412 2. \u2581// \u2581 Variant \u2581 5 \u2581based \u2581namespace - uuid"], "bleu": 0.18586620255974942, "rouge_l": 0.4692307692307692}
{"id": 7391, "predictions": ["\u2581// \u2581 Mutate TX \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581adds \u2581a \u2581transaction \u2581to \u2581the \u2581transaction . \u2581// \u2581// \u2581This \u2581function \u2581is \u2581safe \u2581for \u2581 concurrent \u2581access ."], "references": ["\u2581// \u2581 Mutate TX \u2581runs \u2581 Mutate \u2581on \u2581the \u2581underlying \u2581transaction \u2581using \u2581the \u2581provided \u2581// \u2581 mutator s ."], "bleu": 0.1466991834074183, "rouge_l": 0.4407514450867053}
{"id": 7501, "predictions": ["\u2581// \u2581 New Set Options Result \u2581returns \u2581a \u2581new \u2581 set Options Result \u2581with \u2581options ."], "references": ["\u2581// \u2581 New Set Options Result \u2581creates \u2581a \u2581new \u2581Set Options Result ."], "bleu": 0.42818185319516083, "rouge_l": 0.7730414746543779}
{"id": 6406, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 Num ."], "references": ["\u2581// Res Value \u2581 satisfies \u2581the \u2581 Res \u2581interface \u2581for \u2581 Num"], "bleu": 0.17212239801819756, "rouge_l": 0.34512022630834516}
{"id": 7664, "predictions": ["\u2581// \u2581 New Size d \u2581returns \u2581a \u2581new \u2581 map \u2581with \u2581the \u2581given \u2581 width \u2581and \u2581 height ."], "references": ["\u2581// \u2581 New Size d \u2581initializes \u2581a \u2581new \u2581 Map \u2581with \u2581the \u2581given \u2581 size ."], "bleu": 0.4284945090100314, "rouge_l": 0.7545195052331113}
{"id": 7774, "predictions": ["\u2581// \u2581 GetResource ByName \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581object \u2581that \u2581is \u2581 set \u2581to \u2581the \u2581given \u2581 name ."], "references": ["\u2581// GetResource ByName \u2581convenience \u2581method \u2581to \u2581find \u2581and \u2581return \u2581a \u2581resource \u2581by \u2581 name"], "bleu": 0.10457995018881573, "rouge_l": 0.3556851311953353}
{"id": 7983, "predictions": ["\u2581// \u2581 SetKey Comparator \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581sets \u2581the \u2581 key \u2581values \u2581// \u2581for \u2581the \u2581given \u2581 Key Key ."], "references": ["\u2581// \u2581 SetKey Comparator \u2581provides \u2581 key \u2581comparator \u2581for \u2581the \u2581 N itr o \u2581item \u2581 data"], "bleu": 0.20630760174539725, "rouge_l": 0.4625105307497894}
{"id": 8052, "predictions": ["\u2581// \u2581Add Version \u2581adds \u2581a \u2581 Tuple Type \u2581to \u2581the \u2581tuple ."], "references": ["\u2581// \u2581Add Version \u2581adds \u2581a \u2581version \u2581to \u2581the \u2581tuple \u2581 type"], "bleu": 0.49735673561245436, "rouge_l": 0.7011494252873562}
{"id": 6944, "predictions": ["\u2581// \u2581Extract ToFile \u2581returns \u2581the \u2581 contents \u2581of \u2581a \u2581file"], "references": ["\u2581// \u2581Extract ToFile \u2581extracts \u2581a \u2581given \u2581file \u2581from \u2581the \u2581archive \u2581to \u2581a \u2581file \u2581on \u2581disk"], "bleu": 0.17588081540816272, "rouge_l": 0.46329113924050636}
{"id": 7762, "predictions": ["\u2581// \u2581read Bosh Release \u2581reads \u2581the \u2581 Bosh \u2581release \u2581from \u2581the \u2581reader ."], "references": ["\u2581// \u2581read Bosh Release \u2581creates \u2581an \u2581initialized \u2581 bosh Release \u2581instance \u2581from \u2581the \u2581// \u2581spec if ed \u2581 . tgz \u2581reader"], "bleu": 0.18065951549294654, "rouge_l": 0.45143385753931536}
{"id": 6280, "predictions": ["\u2581// \u2581 Service \u2581returns \u2581the \u2581service \u2581 ID \u2581of \u2581the \u2581endpoint ."], "references": ["\u2581// \u2581 Service \u2581returns \u2581the \u2581go a . v 2 \u2581service"], "bleu": 0.4089601472043678, "rouge_l": 0.5258620689655172}
{"id": 7951, "predictions": ["\u2581// \u2581 Next \u2581advance s \u2581the \u2581 iterator \u2581to \u2581the \u2581next \u2581 iterator ."], "references": ["\u2581// \u2581 Next \u2581moves \u2581 iterator \u2581cursor \u2581to \u2581the \u2581next \u2581item"], "bleu": 0.26518122980477765, "rouge_l": 0.6541554959785522}
{"id": 6471, "predictions": ["\u2581// \u2581 New Redis Counter \u2581creates \u2581a \u2581new \u2581Redis \u2581counter ."], "references": ["\u2581// \u2581 New Redis Counter \u2581returns \u2581a \u2581new \u2581 redis - based \u2581counter"], "bleu": 0.40292759186936566, "rouge_l": 0.6567967698519516}
{"id": 7737, "predictions": ["\u2581// \u2581Get \u2581the \u2581 key \u2581from \u2581the \u2581given \u2581 config ."], "references": ["\u2581// \u2581Get opts \u2581reads \u2581from \u2581user \u2581input \u2581then \u2581environment \u2581variable \u2581and \u2581finally \u2581a \u2581 sane \u2581default ."], "bleu": 0.10332449756766614, "rouge_l": 0.3438556933483653}
{"id": 7064, "predictions": ["\u2581// \u2581 Fprint m \u2581writes \u2581a \u2581formatted \u2581string \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Fprint m \u2581writes \u2581formatted \u2581string \u2581to \u2581provided \u2581writer . \u2581// \u2581This \u2581is \u2581same \u2581as \u2581fmt . Fprintf , \u2581but \u2581uses \u2581 g string \u2581formatting ."], "bleu": 0.15088499733874192, "rouge_l": 0.4795597484276729}
{"id": 7034, "predictions": ["\u2581// \u2581 Wait \u2581waits \u2581for \u2581the \u2581 set \u2581of \u2581 active \u2581 exit \u2581 data \u2581to \u2581the \u2581pool ."], "references": ["\u2581// \u2581 Wait \u2581blocks \u2581until \u2581all \u2581the \u2581jobs \u2581in \u2581the \u2581 Pool \u2581are \u2581done ."], "bleu": 0.1531682455208201, "rouge_l": 0.3605911330049261}
{"id": 6493, "predictions": ["\u2581// \u2581 Write \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 data \u2581to \u2581the \u2581 container ' s \u2581 Write Points ."], "references": ["\u2581// \u2581 Write \u2581creates \u2581new \u2581 influxdb . Batch Points \u2581containing \u2581 p \u2581and \u2581delegate s \u2581that \u2581to \u2581the \u2581writer"], "bleu": 0.14962848372546667, "rouge_l": 0.34297188755020075}
{"id": 7002, "predictions": ["\u2581// \u2581 Group \u2581returns \u2581a \u2581new \u2581 dom \u2581with \u2581the \u2581 name \u2581and \u2581 router ."], "references": ["\u2581// \u2581 Group \u2581creates \u2581a \u2581new \u2581 router \u2581 group . \u2581You \u2581should \u2581 add \u2581all \u2581the \u2581 routes \u2581that \u2581have \u2581common \u2581mid dl ware s \u2581or \u2581the \u2581same \u2581"], "bleu": 0.10743490739933538, "rouge_l": 0.370945945945946}
{"id": 6694, "predictions": ["\u2581// \u2581 External Nodes \u2581returns \u2581the \u2581list \u2581of \u2581nodes \u2581in \u2581the \u2581cluster ."], "references": ["\u2581// \u2581 External Nodes \u2581returns \u2581all \u2581available \u2581nodes \u2581except \u2581host ."], "bleu": 0.3759663529467017, "rouge_l": 0.5922330097087377}
{"id": 7197, "predictions": ["\u2581// \u2581 New V 3 \u2581returns \u2581a \u2581new \u2581 UUID \u2581with \u2581 name \u2581and \u2581 name ."], "references": ["\u2581// \u2581 New V 3 \u2581creates \u2581a \u2581new \u2581 UUID \u2581with \u2581variant \u2581 3 \u2581as \u2581described \u2581in \u2581RFC \u2581 412 2. \u2581// \u2581 Variant \u2581 3 \u2581based \u2581namespace - uuid"], "bleu": 0.22618966870823295, "rouge_l": 0.48637873754152827}
{"id": 6612, "predictions": ["\u2581// \u2581Get Image \u2581returns \u2581a \u2581image \u2581by \u2581 ID ."], "references": ["\u2581// \u2581Get Image \u2581returns \u2581an \u2581 Instance \u2581struct \u2581where \u2581 id \u2581== image id"], "bleu": 0.24614529278805308, "rouge_l": 0.40450928381962864}
{"id": 6399, "predictions": ["\u2581// \u2581Get Children \u2581returns \u2581the \u2581 children \u2581of \u2581the \u2581XML \u2581document"], "references": ["\u2581// Get Children \u2581returns \u2581all \u2581child \u2581nodes \u2581of \u2581the \u2581element"], "bleu": 0.1972940627795883, "rouge_l": 0.4803149606299213}
{"id": 6400, "predictions": ["\u2581// \u2581Get Attrs \u2581returns \u2581the \u2581attributes \u2581of \u2581the \u2581 xml ."], "references": ["\u2581// Get Attrs \u2581returns \u2581all \u2581attributes \u2581of \u2581the \u2581element"], "bleu": 0.2620251007173263, "rouge_l": 0.6110183639398998}
{"id": 7282, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581stack ."], "references": ["\u2581// \u2581String \u2581returns \u2581the \u2581 text ual \u2581representation \u2581of \u2581the \u2581stack"], "bleu": 0.4245922497016344, "rouge_l": 0.6609907120743034}
{"id": 7746, "predictions": ["\u2581// \u2581Get SMTP \u2581 get \u2581 config"], "references": ["\u2581// Get SMTP \u2581returns \u2581a \u2581 SMTP \u2581 Server \u2581configurations"], "bleu": 0.18094495256969623, "rouge_l": 0.45607476635514016}
{"id": 6255, "predictions": ["\u2581// \u2581 Prepend \u2581 turn s \u2581a \u2581 set \u2581of \u2581 Audit Entry \u2581to \u2581a \u2581 slice \u2581of \u2581 v 1 \u2581 link"], "references": ["\u2581// \u2581Get \u2581the \u2581 href \u2581of \u2581an \u2581audit \u2581entry \u2581from \u2581the \u2581 Links \u2581attribute \u2581by \u2581inspect ing \u2581the \u2581self \u2581 link"], "bleu": 0.08607692533178168, "rouge_l": 0.2749812171299774}
{"id": 6532, "predictions": ["\u2581// \u2581 GetKey Meta \u2581returns \u2581the \u2581 key \u2581for \u2581a \u2581given \u2581 path ."], "references": ["\u2581// \u2581 GetKey Meta \u2581returns \u2581the \u2581metadata \u2581for \u2581the \u2581 key \u2581at \u2581the \u2581given \u2581 key store \u2581 path ."], "bleu": 0.3923805831059463, "rouge_l": 0.6841121495327103}
{"id": 7688, "predictions": ["\u2581// \u2581 New Response \u2581creates \u2581a \u2581new \u2581 Response \u2581with \u2581the \u2581given \u2581 code \u2581and \u2581 code ."], "references": ["\u2581// New Response \u2581returns \u2581a \u2581new \u2581OAuth 2 Response"], "bleu": 0.12257617673006654, "rouge_l": 0.4728682170542636}
{"id": 7277, "predictions": ["\u2581// \u2581 Grow \u2581 g rows \u2581the \u2581 min \u2581and \u2581 height \u2581of \u2581the \u2581stack ."], "references": ["\u2581// \u2581 Grow \u2581automatically \u2581 g rows \u2581the \u2581underlying \u2581buffer \u2581so \u2581that \u2581it \u2581can \u2581hold \u2581at \u2581// \u2581least \u2581` min ` \u2581elements"], "bleu": 0.20268119504170892, "rouge_l": 0.4093959731543625}
{"id": 7301, "predictions": ["\u2581// \u2581 Shutdown Ignore \u2581checks \u2581if \u2581the \u2581given \u2581error \u2581is \u2581in \u2581the \u2581 Sentinel ."], "references": ["\u2581// \u2581 Shutdown Ignore \u2581returns \u2581if \u2581any \u2581of \u2581the \u2581registered \u2581ignore \u2581func s \u2581reported \u2581true ."], "bleu": 0.24088052235950305, "rouge_l": 0.44900105152471087}
{"id": 7316, "predictions": ["\u2581// \u2581 Is Origin Allowed \u2581returns \u2581true \u2581if \u2581the \u2581origin \u2581is \u2581allowed \u2581to \u2581be \u2581used \u2581// \u2581for \u2581the \u2581 model ."], "references": ["\u2581// \u2581Looks \u2581up \u2581if \u2581the \u2581origin \u2581matches \u2581one \u2581of \u2581the \u2581patterns \u2581// \u2581provided \u2581in \u2581 Options . Allow Origin s \u2581patterns ."], "bleu": 0.12964349484265042, "rouge_l": 0.32422171602126043}
{"id": 7248, "predictions": ["\u2581// \u2581Parse Reader \u2581parses \u2581a \u2581 32 - bit \u2581 symbol \u2581and \u2581returns \u2581a \u2581 Statement ."], "references": ["\u2581// \u2581Parse Reader \u2581gets \u2581the \u2581template \u2581 content \u2581from \u2581an \u2581io . Reader \u2581 type"], "bleu": 0.15464260451973766, "rouge_l": 0.3160621761658031}
{"id": 6250, "predictions": ["\u2581// \u2581is PathParam \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 path \u2581is \u2581a \u2581 path \u2581of \u2581the \u2581given \u2581 path \u2581// \u2581and \u2581the \u2581 path \u2581of \u2581the \u2581 path ."], "references": ["\u2581// \u2581Look \u2581in \u2581given \u2581 path \u2581patterns \u2581to \u2581 ch e k \u2581whether \u2581given \u2581parameter \u2581 name \u2581corresponds \u2581to \u2581a \u2581variable \u2581// \u2581 name ."], "bleu": 0.1022875701616399, "rouge_l": 0.37538461538461537}
{"id": 7362, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581transaction \u2581 ID \u2581for \u2581the \u2581given \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Memo ID \u2581sets \u2581the \u2581memo ."], "bleu": 0.31680535338398114, "rouge_l": 0.6240409207161125}
{"id": 6865, "predictions": ["\u2581// \u2581 New Outgoing Kick Chat Member \u2581sends \u2581a \u2581new \u2581 kick ing Chat \u2581notification \u2581for \u2581a \u2581chat"], "references": ["\u2581// \u2581 New Outgoing Kick Chat Member \u2581creates \u2581a \u2581request \u2581to \u2581 kick \u2581a \u2581member \u2581from \u2581a \u2581// \u2581 group \u2581chat \u2581or \u2581channel ."], "bleu": 0.30663736104842276, "rouge_l": 0.5570776255707762}
{"id": 7514, "predictions": ["\u2581// \u2581 Known For Switch \u2581implements \u2581the \u2581 bill y . Result \u2581interface \u2581for \u2581 Gi tiles Result ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Inf lation Result"], "bleu": 0.08768005785989223, "rouge_l": 0.34585400425230334}
{"id": 7509, "predictions": ["\u2581// \u2581 Known For Switch \u2581returns \u2581the \u2581 username \u2581and \u2581account \u2581 info \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Account Merge Result"], "bleu": 0.11204513669898465, "rouge_l": 0.3890857547838413}
{"id": 6277, "predictions": ["\u2581// \u2581 Type \u2581returns \u2581the \u2581 type \u2581of \u2581 ref ."], "references": ["\u2581// \u2581 Type \u2581gets \u2581a \u2581 type \u2581for \u2581a \u2581 Schema \u2581reference , \u2581if \u2581it \u2581 exists"], "bleu": 0.15186405687216434, "rouge_l": 0.4126268320180383}
{"id": 6907, "predictions": ["\u2581// \u2581Set Log Output \u2581sets \u2581the \u2581log \u2581output \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581Set Log Output \u2581sets \u2581output \u2581destination \u2581for \u2581logging . \u2581// \u2581If \u2581 w \u2581is \u2581nil , \u2581it \u2581unset s \u2581output \u2581of \u2581logging ."], "bleu": 0.15044803041493363, "rouge_l": 0.3668384879725086}
{"id": 7370, "predictions": ["\u2581// \u2581 Scan \u2581scan s \u2581the \u2581value \u2581into \u2581the \u2581 Int 64 \u2581value ."], "references": ["\u2581// \u2581 Scan \u2581reads \u2581from \u2581 src \u2581into \u2581an \u2581 Int 64"], "bleu": 0.24601372576927547, "rouge_l": 0.5460358056265985}
{"id": 6904, "predictions": ["\u2581// \u2581 Begin \u2581begins \u2581a \u2581transaction ."], "references": ["\u2581// \u2581 Begin \u2581starts \u2581a \u2581transaction ."], "bleu": 0.5, "rouge_l": 0.8571428571428571}
{"id": 7715, "predictions": ["\u2581// \u2581 PersistentVolume \u2581returns \u2581the \u2581 table ' s \u2581 name ."], "references": ["\u2581// \u2581 getHead \u2581 - \u2581Returns \u2581 table \u2581header \u2581containing \u2581fields \u2581names ."], "bleu": 0.1720815447449501, "rouge_l": 0.39713541666666663}
{"id": 6528, "predictions": ["\u2581// \u2581Check \u2581checks \u2581if \u2581the \u2581given \u2581value \u2581is \u2581a \u2581valid \u2581range ."], "references": ["\u2581// \u2581Check \u2581returns \u2581true \u2581if \u2581an \u2581alert \u2581should \u2581be \u2581raised \u2581based \u2581on \u2581the \u2581range \u2581 ( if \u2581the \u2581// \u2581value \u2581is \u2581outside \u2581the \u2581range \u2581for \u2581normal \u2581 semantics , \u2581or"], "bleu": 0.0431500960424793, "rouge_l": 0.30942028985507253}
{"id": 6868, "predictions": ["\u2581// \u2581 New Inline Query Answer \u2581a \u2581new \u2581 inline \u2581query \u2581keyboard ."], "references": ["\u2581// \u2581 New Inline Query Answer \u2581creates \u2581a \u2581new \u2581 inline \u2581query \u2581answer ."], "bleu": 0.6610397108553554, "rouge_l": 0.8829915560916768}
{"id": 7487, "predictions": ["\u2581// \u2581 New Payment Result \u2581returns \u2581a \u2581 Payment Result \u2581object \u2581from \u2581the \u2581 payment \u2581 code ."], "references": ["\u2581// \u2581 New Payment Result \u2581creates \u2581a \u2581new \u2581 Payment Result ."], "bleu": 0.33380800216772966, "rouge_l": 0.6916099773242631}
{"id": 7484, "predictions": ["\u2581// \u2581 New CreateAccount Result \u2581creates \u2581a \u2581new \u2581account \u2581 Result ."], "references": ["\u2581// \u2581 New CreateAccount Result \u2581creates \u2581a \u2581new \u2581 CreateAccount Result ."], "bleu": 0.7170326647358439, "rouge_l": 0.9166666666666665}
{"id": 7931, "predictions": ["\u2581// \u2581 Compare Bytes \u2581compares \u2581the \u2581 contents \u2581of \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Compare Bytes \u2581is \u2581a \u2581 byte \u2581item \u2581comparator"], "bleu": 0.30620490882364876, "rouge_l": 0.580952380952381}
{"id": 6721, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581 Tracer Tracer ."], "references": ["\u2581// \u2581 Start \u2581is \u2581called \u2581on \u2581start \u2581of \u2581a \u2581request"], "bleu": 0.23506622552594217, "rouge_l": 0.31282051282051276}
{"id": 6998, "predictions": ["\u2581// \u2581 Up Expire \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581 TTL \u2581of \u2581 redis ."], "references": ["\u2581// \u2581 Up Expire \u2581 refresh \u2581session \u2581 expire"], "bleu": 0.23287896954139942, "rouge_l": 0.505524861878453}
{"id": 7640, "predictions": ["\u2581// \u2581Must No min ate \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 S 3 \u2581 type \u2581of \u2581the \u2581 S cp \u2581 type ."], "references": ["\u2581// \u2581Must No min ate \u2581retrieves \u2581the \u2581 No min ate \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.21497151699110278, "rouge_l": 0.43374272786037493}
{"id": 8027, "predictions": ["\u2581// \u2581 Close Notify \u2581closes \u2581the \u2581 Response \u2581 data ."], "references": ["\u2581// \u2581 Close Notify \u2581tries \u2581to \u2581use \u2581the \u2581original \u2581http . ResponseWriter \u2581for \u2581 close \u2581// \u2581notification . \u2581If \u2581the \u2581original \u2581writer \u2581doesn ' t \u2581implement \u2581http . Close Notifier"], "bleu": 0.06338349501054427, "rouge_l": 0.3151291512915129}
{"id": 7288, "predictions": ["\u2581// \u2581flag As Env \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581environment \u2581variable \u2581// \u2581 name ."], "references": ["\u2581// \u2581 To \u2581be \u2581unix ' y , \u2581we \u2581 translate \u2581flag names \u2581to \u2581their \u2581 uppercase \u2581equivalent s ."], "bleu": 0.08958376890679086, "rouge_l": 0.21785714285714283}
{"id": 7132, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581handler \u2581for \u2581the \u2581given \u2581http . Handler ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Handler \u2581from \u2581the \u2581handler \u2581that \u2581is \u2581wrapped \u2581and \u2581// \u2581protected \u2581with \u2581recover \u2581function ."], "bleu": 0.2717441906949932, "rouge_l": 0.4412296564195298}
{"id": 6504, "predictions": ["\u2581// \u2581 Client Options \u2581returns \u2581a \u2581 Dial Option \u2581that \u2581configure s \u2581the \u2581client \u2581to \u2581 connect \u2581to \u2581the \u2581// \u2581given \u2581client ."], "references": ["\u2581// \u2581 Client Options \u2581for \u2581logging \u2581RPC s"], "bleu": 0.15415064977510756, "rouge_l": 0.3534183082271147}
{"id": 7168, "predictions": ["\u2581// \u2581UnmarshalJSON \u2581is \u2581defined \u2581on \u2581the \u2581 json . Unmarshaler \u2581interface ."], "references": ["\u2581// \u2581UnmarshalJSON \u2581is \u2581a \u2581copy \u2581of \u2581the \u2581 json . RawMessage \u2581implementation ."], "bleu": 0.3664801098966879, "rouge_l": 0.6354166666666667}
{"id": 7018, "predictions": ["\u2581// \u2581 Helper \u2581to \u2581 set \u2581the \u2581result \u2581of \u2581a \u2581 set \u2581of \u2581 items \u2581to \u2581be \u2581 set"], "references": ["\u2581// \u2581 setAllow Large Results \u2581 - \u2581private \u2581function \u2581to \u2581 set \u2581the \u2581 Allow Large Results \u2581and \u2581temp TableName \u2581values"], "bleu": 0.19758295513773494, "rouge_l": 0.34687246141348493}
{"id": 6237, "predictions": ["\u2581// \u2581setup Metadata \u2581returns \u2581the \u2581 set \u2581of \u2581metadata \u2581metadata \u2581for \u2581the \u2581 controller ."], "references": ["\u2581// \u2581Initialize \u2581 Gen Metadata \u2581from \u2581each \u2581 CA \u2581API \u2581generated \u2581metadata"], "bleu": 0.1082597837309053, "rouge_l": 0.30235439900867406}
{"id": 8086, "predictions": ["\u2581// \u2581 Un Deploy V App \u2581retrieves \u2581the \u2581 Un Deploy V App Client ."], "references": ["\u2581// Un Deploy V App \u2581 - \u2581executes \u2581a \u2581fake \u2581 undeploy \u2581on \u2581a \u2581fake \u2581client"], "bleu": 0.24088052235950305, "rouge_l": 0.38485804416403785}
{"id": 7747, "predictions": ["\u2581// \u2581 GetConfig \u2581returns \u2581the \u2581 config \u2581for \u2581the \u2581specified \u2581configuration"], "references": ["\u2581// GetConfig \u2581returns \u2581a \u2581 Server \u2581configurations"], "bleu": 0.17033186037639278, "rouge_l": 0.4629981024667932}
{"id": 6332, "predictions": ["\u2581// \u2581copy Hidden Headers \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 set \u2581of \u2581 headers ."], "references": ["\u2581// \u2581copy Hidden Headers \u2581copies \u2581the \u2581given \u2581 map"], "bleu": 0.2490328638846773, "rouge_l": 0.5236051502145923}
{"id": 8006, "predictions": ["\u2581// \u2581 New Iterator \u2581returns \u2581a \u2581new \u2581 Iterator \u2581that \u2581 wraps \u2581the \u2581given \u2581function . \u2581// \u2581It \u2581returns \u2581a \u2581 Iterator \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 fill \u2581the"], "references": ["\u2581// \u2581 New Iterator \u2581creates \u2581an \u2581 iterator \u2581for \u2581skip list"], "bleu": 0.11751163762525296, "rouge_l": 0.26614310645724254}
{"id": 7994, "predictions": ["\u2581// \u2581 GC \u2581 marks \u2581the \u2581 N \u2581iterators ."], "references": ["\u2581// \u2581 GC \u2581implements \u2581manual \u2581garbage \u2581collection \u2581of \u2581 N itr o \u2581snapshots ."], "bleu": 0.19437836223653274, "rouge_l": 0.48541114058355433}
{"id": 7993, "predictions": ["\u2581// \u2581 Compare Snapshot \u2581compares \u2581the \u2581given \u2581snapshot \u2581and \u2581returns \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581// \u2581given \u2581 type ."], "references": ["\u2581// \u2581 Compare Snapshot \u2581implements \u2581comparator \u2581for \u2581snapshots \u2581based \u2581on \u2581snapshot \u2581number"], "bleu": 0.1676784955078518, "rouge_l": 0.3727087576374745}
{"id": 7497, "predictions": ["\u2581// \u2581 Known For Switch \u2581implements \u2581the \u2581 Manage Switch \u2581interface \u2581for \u2581 Manage Offer Result ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Manage Offer Result"], "bleu": 0.16310495756291737, "rouge_l": 0.4481998530492285}
{"id": 6948, "predictions": ["\u2581// \u2581cleanup Snapshot \u2581is \u2581used \u2581to \u2581cleanup \u2581the \u2581snapshot \u2581of \u2581the \u2581snapshot ."], "references": ["\u2581// \u2581cleanup Snapshot \u2581clean s \u2581up \u2581snapshot \u2581internal \u2581 C \u2581handle ."], "bleu": 0.19674979811155635, "rouge_l": 0.4029062087186261}
{"id": 6525, "predictions": ["\u2581// \u2581 New Default Status Policy \u2581returns \u2581a \u2581default \u2581 status \u2581policy"], "references": ["\u2581// \u2581 New Default Status Policy \u2581returns \u2581a \u2581 status \u2581policy \u2581that \u2581assigns \u2581relative \u2581// \u2581severity \u2581in \u2581acc or dance \u2581with \u2581convention al \u2581 N agios \u2581plugin \u2581return \u2581codes ."], "bleu": 0.16983788665142113, "rouge_l": 0.4862318840579709}
{"id": 6522, "predictions": ["\u2581// \u2581 Exit f \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581prints \u2581the \u2581 status \u2581of \u2581the \u2581 exit \u2581 status ."], "references": ["\u2581// \u2581 Exit f \u2581takes \u2581a \u2581 status \u2581 plus \u2581a \u2581 format \u2581string , \u2581and \u2581a \u2581list \u2581of \u2581// \u2581parameters \u2581to \u2581pass \u2581to \u2581 Sprintf . \u2581It \u2581then \u2581immediately"], "bleu": 0.14802288474108125, "rouge_l": 0.38006230529595014}
{"id": 6962, "predictions": ["\u2581// \u2581cleanup VM \u2581removes \u2581a \u2581 VM \u2581from \u2581the \u2581 VM ."], "references": ["\u2581// \u2581cleanup VM \u2581clean s \u2581up \u2581 VM \u2581 VI X \u2581handle ."], "bleu": 0.22736544735608616, "rouge_l": 0.5559895833333334}
{"id": 6971, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581original \u2581error \u2581message \u2581 plus \u2581the \u2581stack \u2581 trace \u2581 captured \u2581// \u2581at \u2581the \u2581time \u2581the \u2581error \u2581was \u2581first \u2581wrapped ."], "bleu": 0.12358617564115112, "rouge_l": 0.40297274979355907}
{"id": 6983, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 DB Error \u2581instance ."], "references": ["\u2581// \u2581 New \u2581 DB Error . New"], "bleu": 0.317023313852343, "rouge_l": 0.7584369449378331}
{"id": 7627, "predictions": ["\u2581// \u2581Must Get S cp Ledger Seq \u2581returns \u2581the \u2581 S cp \u2581error Seq \u2581if \u2581it \u2581is \u2581not \u2581present ."], "references": ["\u2581// \u2581Must Get S cp Ledger Seq \u2581retrieves \u2581the \u2581Get S cp Ledger Seq \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2564407753582117, "rouge_l": 0.5791139240506329}
{"id": 7004, "predictions": ["\u2581// \u2581create \u2581creates \u2581a \u2581new \u2581engine \u2581engine"], "references": ["\u2581// \u2581create \u2581returns \u2581a \u2581new \u2581 blank \u2581 Engine \u2581instance \u2581without \u2581any \u2581middleware \u2581attached ."], "bleu": 0.09802998667062515, "rouge_l": 0.3412587412587413}
{"id": 7050, "predictions": ["\u2581// \u2581 New Router s \u2581returns \u2581a \u2581new \u2581 Router s"], "references": ["\u2581// \u2581 New Router s \u2581 init ail ize s \u2581 Router s \u2581instance ."], "bleu": 0.3691718482299626, "rouge_l": 0.5987730061349694}
{"id": 6541, "predictions": ["\u2581// \u2581 JobSummary \u2581returns \u2581a \u2581 JobSummary \u2581struct"], "references": ["\u2581// \u2581 JobSummary \u2581produces \u2581a \u2581 JobSummary \u2581instance \u2581with \u2581values \u2581populated \u2581from \u2581the \u2581import \u2581result . \u2581// \u2581The \u2581summary \u2581object \u2581won ' t \u2581have \u2581its \u2581 Description \u2581populated , \u2581since"], "bleu": 0.027595740530183054, "rouge_l": 0.2859375}
{"id": 7974, "predictions": ["\u2581// \u2581 KV FromBytes \u2581returns \u2581a \u2581 k - encoded \u2581 key \u2581from \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 KV FromBytes \u2581extracts \u2581 key - value \u2581pair \u2581from \u2581item \u2581bytes \u2581returned \u2581by \u2581 iterator"], "bleu": 0.22537412722674852, "rouge_l": 0.4489420423183072}
{"id": 7353, "predictions": ["\u2581// \u2581 Sign \u2581sign s \u2581a \u2581transaction \u2581using \u2581the \u2581given \u2581 signers ."], "references": ["\u2581// \u2581 Sign \u2581returns \u2581an \u2581new \u2581 Transaction Envelope Builder \u2581using \u2581 this \u2581builder ' s \u2581// \u2581transaction \u2581as \u2581the \u2581basis \u2581and \u2581with \u2581 signatures \u2581of \u2581that \u2581transaction \u2581from \u2581the"], "bleu": 0.05888620369363607, "rouge_l": 0.30391459074733096}
{"id": 8056, "predictions": ["\u2581// \u2581Set Private Meta \u2581sets \u2581the \u2581 Private \u2581 meta \u2581 data \u2581for \u2581the \u2581given \u2581 name"], "references": ["\u2581// Set Private Meta \u2581 - \u2581 set \u2581a \u2581private \u2581 meta \u2581 data \u2581record"], "bleu": 0.25281168697394946, "rouge_l": 0.505699481865285}
{"id": 6816, "predictions": ["\u2581// \u2581Try \u2581to \u2581 add \u2581a \u2581request \u2581to \u2581the \u2581http . Handler ."], "references": ["\u2581// \u2581Try \u2581converts \u2581a \u2581handler \u2581to \u2581a \u2581standard \u2581http . Handler , \u2581storing \u2581any \u2581error \u2581in \u2581the \u2581// \u2581request ' s \u2581context ."], "bleu": 0.11399522493192046, "rouge_l": 0.42324371205550737}
{"id": 6781, "predictions": ["\u2581// \u2581 Until \u2581starts \u2581a \u2581goroutine \u2581that \u2581will \u2581 call \u2581the \u2581function \u2581to \u2581 call \u2581the \u2581function \u2581// \u2581to \u2581 call \u2581the \u2581function \u2581to \u2581 call \u2581the \u2581function \u2581to \u2581"], "references": ["\u2581// \u2581 Until \u2581loops \u2581until \u2581stop \u2581channel \u2581is \u2581closed , \u2581running \u2581 f \u2581every \u2581period . \u2581// \u2581 Catch es \u2581any \u2581panic s , \u2581and \u2581keeps \u2581going . \u2581 f"], "bleu": 0.08928953574702554, "rouge_l": 0.2333333333333334}
{"id": 6444, "predictions": ["\u2581// \u2581 Offset From Metadata \u2581returns \u2581the \u2581offset \u2581from \u2581the \u2581metadata \u2581 data ."], "references": ["\u2581// \u2581 Offset From Metadata \u2581gets \u2581the \u2581offset \u2581from \u2581the \u2581metadata"], "bleu": 0.570282226440554, "rouge_l": 0.8176943699731903}
{"id": 7139, "predictions": ["\u2581// \u2581Must Add Message Error \u2581is \u2581like \u2581Add Message Error \u2581but \u2581panic s \u2581if \u2581the \u2581error \u2581is \u2581not \u2581nil ."], "references": ["\u2581// \u2581Must Add Message Error \u2581calls \u2581Add Message Error \u2581and \u2581panic s \u2581in \u2581case \u2581of \u2581an \u2581error ."], "bleu": 0.32282138800401855, "rouge_l": 0.6376306620209059}
{"id": 6443, "predictions": ["\u2581// \u2581 Limit From Metadata \u2581returns \u2581the \u2581 MD ' s \u2581 MD \u2581metadata \u2581from \u2581the \u2581metadata ."], "references": ["\u2581// \u2581 Limit From Metadata \u2581gets \u2581the \u2581limit \u2581from \u2581the \u2581metadata"], "bleu": 0.32594818888335836, "rouge_l": 0.648936170212766}
{"id": 6260, "predictions": ["\u2581// \u2581to Verb \u2581converts \u2581the \u2581string \u2581to \u2581human \u2581readable \u2581string ."], "references": ["\u2581// \u2581 GET \u2581=> \u2581Get"], "bleu": 0.11390778025531027, "rouge_l": 0.13406593406593406}
{"id": 8088, "predictions": ["\u2581// \u2581 Query Template \u2581retrieves \u2581the \u2581 Query Template Client ."], "references": ["\u2581// Query Template \u2581 - \u2581fake \u2581querying \u2581for \u2581a \u2581template"], "bleu": 0.17033186037639278, "rouge_l": 0.384251968503937}
{"id": 7564, "predictions": ["\u2581// \u2581Must New Max Tx Size \u2581returns \u2581the \u2581maximum \u2581 size \u2581of \u2581the \u2581 Ledger Upgrade \u2581// \u2581to \u2581use \u2581 this \u2581 Ledger Upgrade \u2581to \u2581 get \u2581the \u2581maximum \u2581"], "references": ["\u2581// \u2581Must New Max Tx SetSize \u2581retrieves \u2581the \u2581 New Max Tx SetSize \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.18391565202644336, "rouge_l": 0.37402452619843923}
{"id": 7280, "predictions": ["\u2581// \u2581 Push \u2581pushes \u2581a \u2581value \u2581to \u2581the \u2581stack ."], "references": ["\u2581// \u2581 Push \u2581adds \u2581an \u2581element \u2581at \u2581the \u2581end \u2581of \u2581the \u2581stack"], "bleu": 0.2284389301518129, "rouge_l": 0.44721407624633425}
{"id": 7749, "predictions": ["\u2581// \u2581Get Mongo \u2581returns \u2581the \u2581 config \u2581for \u2581the \u2581given \u2581environment"], "references": ["\u2581// Get Mongo \u2581returns \u2581a \u2581Mongo \u2581configurations"], "bleu": 0.16108992769687397, "rouge_l": 0.3472485768500949}
{"id": 6415, "predictions": ["\u2581// \u2581 New Lexer \u2581returns \u2581a \u2581new \u2581 Lexer \u2581with \u2581the \u2581given \u2581 Reader \u2581and \u2581 size ."], "references": ["\u2581// \u2581 New Lexer \u2581creates \u2581a \u2581new \u2581 Lexer \u2581reading \u2581from \u2581io . Reader . \u2581This \u2581 Lexer \u2581// \u2581has \u2581a \u2581Default Tokenizer \u2581according \u2581to \u2581 posix \u2581and \u2581whitespace split"], "bleu": 0.1820333353227787, "rouge_l": 0.3986928104575163}
{"id": 6807, "predictions": ["\u2581// \u2581 Stop \u2581stops \u2581the \u2581watcher \u2581and \u2581stops \u2581the \u2581watcher ."], "references": ["\u2581// \u2581 Stop \u2581listening \u2581for \u2581changes \u2581to \u2581the \u2581files ."], "bleu": 0.23462350320527994, "rouge_l": 0.4803149606299213}
{"id": 7532, "predictions": ["\u2581// \u2581Must Create Create Offer Result \u2581returns \u2581a \u2581new \u2581Create \u2581an \u2581offer Result ."], "references": ["\u2581// \u2581Must Create Passive Offer Result \u2581retrieves \u2581the \u2581Create Passive Offer Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.07965309748053327, "rouge_l": 0.35935198821796754}
{"id": 7459, "predictions": ["\u2581// \u2581Must Create Create Offer Op \u2581creates \u2581a \u2581new \u2581Fast ly \u2581access \u2581operation ."], "references": ["\u2581// \u2581Must Create Passive Offer Op \u2581retrieves \u2581the \u2581Create Passive Offer Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.07480257557243292, "rouge_l": 0.2695139911634757}
{"id": 7519, "predictions": ["\u2581// \u2581 Known For Switch \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581 Manage Switch \u2581 data \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Manage Data Result"], "bleu": 0.12852355407318108, "rouge_l": 0.3694481830417227}
{"id": 6733, "predictions": ["\u2581// \u2581new Buffers FromFile s \u2581creates \u2581a \u2581 slice \u2581of \u2581 Buffers \u2581from \u2581a \u2581file ."], "references": ["\u2581// \u2581new Buffers FromFile s \u2581 wraps \u2581the \u2581specified \u2581files \u2581with \u2581a \u2581reader \u2581// \u2581that \u2581caches \u2581 data \u2581into \u2581a \u2581memory \u2581buffer"], "bleu": 0.22002920631818335, "rouge_l": 0.4093959731543625}
{"id": 6969, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581error \u2581string ."], "references": ["\u2581// \u2581 Error \u2581returns \u2581a \u2581 description \u2581of \u2581the \u2581error \u2581along \u2581with \u2581its \u2581 code \u2581and \u2581operation \u2581// \u2581implementing \u2581Go ' s \u2581error \u2581interface ."], "bleu": 0.06339158192965766, "rouge_l": 0.3881818181818182}
{"id": 7361, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581given \u2581transaction \u2581to \u2581the \u2581 blockchain ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Memo Hash \u2581sets \u2581the \u2581memo ."], "bleu": 0.32559641262003014, "rouge_l": 0.5640686922060767}
{"id": 6978, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581writer \u2581writer"], "references": ["\u2581// \u2581 Write \u2581calls \u2581the \u2581writer \u2581upstream \u2581after \u2581executing \u2581the \u2581function s \u2581in \u2581the \u2581before \u2581field ."], "bleu": 0.15186405687216434, "rouge_l": 0.3438556933483653}
{"id": 7363, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581given \u2581transaction \u2581to \u2581the \u2581 ledger ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Memo Return \u2581sets \u2581the \u2581memo ."], "bleu": 0.32559641262003014, "rouge_l": 0.5640686922060767}
{"id": 6876, "predictions": ["\u2581// \u2581 Implement \u2581the \u2581 Query \u2581interface"], "references": ["\u2581// \u2581 querystring \u2581implements \u2581 querystring er \u2581to \u2581represent \u2581the \u2581 photo ."], "bleu": 0.13044969897820202, "rouge_l": 0.3794712286158632}
{"id": 7744, "predictions": ["\u2581// \u2581 Send Mail \u2581sends \u2581a \u2581 mail \u2581message \u2581to \u2581the \u2581server ."], "references": ["\u2581// Send Mail \u2581send \u2581an \u2581 email"], "bleu": 0.14283632578659286, "rouge_l": 0.42287694974003465}
{"id": 6253, "predictions": ["\u2581// \u2581print Audit s \u2581prints \u2581a \u2581list \u2581of \u2581 Audit \u2581entries \u2581to \u2581a \u2581given \u2581 Audit Entry ."], "references": ["\u2581// \u2581Prints \u2581the \u2581audit \u2581entries \u2581to \u2581console"], "bleu": 0.09629943614188137, "rouge_l": 0.26068376068376065}
{"id": 7638, "predictions": ["\u2581// \u2581Must External ize \u2581returns \u2581an \u2581 S cp Statement \u2581that \u2581panic s \u2581if \u2581the \u2581 S cp \u2581 type \u2581is \u2581not \u2581 set ."], "references": ["\u2581// \u2581Must External ize \u2581retrieves \u2581the \u2581 External ize \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.3110797281482439, "rouge_l": 0.5199999999999999}
{"id": 7503, "predictions": ["\u2581// \u2581 Known For Switch \u2581returns \u2581the \u2581 username \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Change Trust Result"], "bleu": 0.09936174711464352, "rouge_l": 0.41876430205949655}
{"id": 6510, "predictions": ["\u2581// \u2581 Flush \u2581 flush es \u2581the \u2581 flush ' s \u2581 data \u2581to \u2581the \u2581 h ."], "references": ["\u2581// \u2581 Flush \u2581the \u2581current \u2581` batch `."], "bleu": 0.13400825781778894, "rouge_l": 0.3306233062330623}
{"id": 7021, "predictions": ["\u2581// \u2581 Async Query \u2581returns \u2581a \u2581 slice \u2581of \u2581 data \u2581with \u2581the \u2581specified \u2581options ."], "references": ["\u2581// \u2581 Async Query \u2581 loads \u2581the \u2581 data \u2581by \u2581 paging \u2581through \u2581the \u2581query \u2581results \u2581and \u2581sends \u2581back \u2581payload s \u2581over \u2581the \u2581 data Chan \u2581 - \u2581 data"], "bleu": 0.10930404136525158, "rouge_l": 0.32972972972972975}
{"id": 6549, "predictions": ["\u2581// \u2581 NewClient \u2581returns \u2581a \u2581new \u2581 Client \u2581with \u2581the \u2581given \u2581 username \u2581and \u2581password ."], "references": ["\u2581// NewClient \u2581is \u2581a \u2581 constructor \u2581for \u2581 Client \u2581object"], "bleu": 0.12512236921161915, "rouge_l": 0.4013157894736842}
{"id": 7010, "predictions": ["\u2581// \u2581Get Session \u2581returns \u2581the \u2581session \u2581store"], "references": ["\u2581// \u2581Get Session \u2581 get \u2581session"], "bleu": 0.3655552228545123, "rouge_l": 0.6240409207161125}
{"id": 7516, "predictions": ["\u2581// \u2581Must Pay out s \u2581returns \u2581the \u2581 slice \u2581of \u2581 Pay \u2581transactions ."], "references": ["\u2581// \u2581Must Pay out s \u2581retrieves \u2581the \u2581 Pay out s \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.1619230113724888, "rouge_l": 0.41527987897125573}
{"id": 7773, "predictions": ["\u2581// \u2581Add Group \u2581adds \u2581a \u2581new \u2581 group \u2581to \u2581the \u2581 aggregator Pipeline ."], "references": ["\u2581// Add Group \u2581 helper \u2581to \u2581 add \u2581a \u2581 group \u2581to \u2581the \u2581pipeline \u2581manifest"], "bleu": 0.2653117169252599, "rouge_l": 0.4797752808988765}
{"id": 6737, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581string \u2581value \u2581of \u2581the \u2581 Bool Option"], "references": ["\u2581// \u2581This \u2581is \u2581useful \u2581with \u2581 king pin \u2581option \u2581parser"], "bleu": 0.12605968092174913, "rouge_l": 0.1921259842519685}
{"id": 7506, "predictions": ["\u2581// \u2581 Known For Switch \u2581returns \u2581the \u2581 username \u2581and \u2581 link \u2581trust \u2581for \u2581the \u2581given \u2581 model"], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Allow Trust Result"], "bleu": 0.10980041321013834, "rouge_l": 0.3961038961038961}
{"id": 7218, "predictions": ["\u2581// \u2581 Push Frame \u2581adds \u2581the \u2581 top - level \u2581frame \u2581to \u2581the \u2581current \u2581frame ."], "references": ["\u2581// \u2581 Push Frame \u2581pushes \u2581a \u2581new \u2581frame \u2581to \u2581the \u2581frame \u2581stack"], "bleu": 0.2948993986902436, "rouge_l": 0.5865384615384615}
{"id": 6500, "predictions": ["\u2581// \u2581 Close Recv \u2581closes \u2581the \u2581stream \u2581and \u2581closes \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Close Recv \u2581closes \u2581the \u2581receive \u2581channel"], "bleu": 0.4703709593866897, "rouge_l": 0.6224489795918368}
{"id": 6498, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 protobuf \u2581 Client ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Stream \u2581with \u2581the \u2581given \u2581buffer \u2581 size \u2581and \u2581setup \u2581function ."], "bleu": 0.34314802036051856, "rouge_l": 0.5947995666305526}
{"id": 6377, "predictions": ["\u2581// \u2581Register Func Map \u2581registers \u2581a \u2581function \u2581to \u2581 render \u2581 map \u2581with \u2581 name"], "references": ["\u2581// \u2581Register Func Map \u2581register \u2581 Func Map \u2581for \u2581 render ."], "bleu": 0.2722589423069702, "rouge_l": 0.4535315985130111}
{"id": 6872, "predictions": ["\u2581// \u2581 get \u2581the \u2581current \u2581 set \u2581of \u2581 this \u2581 set \u2581of \u2581 timers ."], "references": ["\u2581// \u2581 querystring \u2581implements \u2581 querystring er \u2581to \u2581represent \u2581the \u2581outgoing \u2581certificate \u2581// \u2581file ."], "bleu": 0.1203921753741131, "rouge_l": 0.25957446808510637}
{"id": 7446, "predictions": ["\u2581// \u2581Must Asset Code 4 \u2581returns \u2581the \u2581 code 4 \u2581 code \u2581for \u2581the \u2581 Asset Code ."], "references": ["\u2581// \u2581Must Asset Code 4 \u2581retrieves \u2581the \u2581 Asset Code 4 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2500698436772118, "rouge_l": 0.47187060478199727}
{"id": 6434, "predictions": ["\u2581// \u2581 Key From Metadata \u2581returns \u2581the \u2581 key \u2581from \u2581metadata \u2581for \u2581the \u2581given \u2581metadata ."], "references": ["\u2581// \u2581 Key From Metadata \u2581gets \u2581the \u2581 key \u2581from \u2581the \u2581metadata \u2581or \u2581returns \u2581 ErrNo Key"], "bleu": 0.429507439295108, "rouge_l": 0.6630434782608695}
{"id": 7448, "predictions": ["\u2581// \u2581Must Asset Code 12 \u2581is \u2581called \u2581when \u2581the \u2581 Asset Code \u2581 key \u2581is \u2581 able \u2581to \u2581 this \u2581// \u2581 this \u2581function ."], "references": ["\u2581// \u2581Must Asset Code 12 \u2581retrieves \u2581the \u2581 Asset Code 12 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.27158179157315115, "rouge_l": 0.4583594239198497}
{"id": 6503, "predictions": ["\u2581// \u2581 Server Options \u2581returns \u2581a \u2581 Server Option \u2581that \u2581sets \u2581the \u2581server \u2581options \u2581for \u2581the \u2581// \u2581given \u2581 token ."], "references": ["\u2581// \u2581 Server Options \u2581for \u2581logging \u2581RPC s"], "bleu": 0.16923267918690046, "rouge_l": 0.37515375153751535}
{"id": 6407, "predictions": ["\u2581// \u2581 Num \u2581returns \u2581the \u2581number \u2581of \u2581bytes \u2581in \u2581the \u2581 set ."], "references": ["\u2581// Num \u2581 satisfies \u2581the \u2581 Has Num \u2581interface \u2581for \u2581String ' s"], "bleu": 0.14949751774990683, "rouge_l": 0.30769230769230765}
{"id": 7709, "predictions": ["\u2581// \u2581 Print Table \u2581prints \u2581 table \u2581 info \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581 Print Table \u2581 - \u2581Prints \u2581 table ."], "bleu": 0.32559641262003014, "rouge_l": 0.6233576642335765}
{"id": 7249, "predictions": ["\u2581// \u2581 Visit \u2581returns \u2581a \u2581channel \u2581that \u2581will \u2581be \u2581called \u2581when \u2581the \u2581last \u2581 call \u2581is \u2581 exhausted ."], "references": ["\u2581// \u2581 Visit \u2581returns \u2581a \u2581channel \u2581which \u2581you \u2581can \u2581receive \u2581 Node \u2581structs \u2581in \u2581order \u2581that \u2581// \u2581that \u2581they \u2581would \u2581be \u2581processed"], "bleu": 0.27217375361788865, "rouge_l": 0.3851617995264404}
{"id": 7745, "predictions": ["\u2581// \u2581Get Environment \u2581returns \u2581the \u2581environment \u2581variables \u2581for \u2581the \u2581environment"], "references": ["\u2581// Get Environment \u2581returns \u2581a \u2581 SMTP \u2581 Server \u2581configuration \u2581for \u2581the \u2581specified \u2581environment \u2581in \u2581parameter"], "bleu": 0.12453655250236591, "rouge_l": 0.44309927360774815}
{"id": 6997, "predictions": ["\u2581// \u2581 Destroy \u2581 destroy s \u2581a \u2581 redis \u2581session ."], "references": ["\u2581// \u2581 Destroy \u2581delete \u2581 redis \u2581session \u2581by \u2581 id"], "bleu": 0.317023313852343, "rouge_l": 0.5763779527559055}
{"id": 6431, "predictions": ["\u2581// \u2581 Token From Metadata \u2581returns \u2581the \u2581 token \u2581from \u2581the \u2581metadata \u2581metadata ."], "references": ["\u2581// \u2581 Token From Metadata \u2581gets \u2581the \u2581 token \u2581from \u2581the \u2581metadata \u2581or \u2581returns \u2581 ErrNo Token"], "bleu": 0.5332085084687793, "rouge_l": 0.6975051975051975}
{"id": 7707, "predictions": ["\u2581// \u2581 Disconnect \u2581 disconnect s \u2581the \u2581 Mongo \u2581 data \u2581from \u2581the \u2581 Mongo \u2581 Client ."], "references": ["\u2581// Disconnect \u2581a \u2581Mongo \u2581client"], "bleu": 0.07535838128770536, "rouge_l": 0.19365079365079363}
{"id": 6780, "predictions": ["\u2581// \u2581 Init Db \u2581initializes \u2581the \u2581 data \u2581from \u2581the \u2581 keyring"], "references": ["\u2581// Set \u2581up \u2581the \u2581indexes \u2581for \u2581the \u2581 Db \u2581// Can \u2581be \u2581called \u2581during \u2581the \u2581initialization"], "bleu": 0.11652018442148637, "rouge_l": 0.2785388127853881}
{"id": 7281, "predictions": ["\u2581// \u2581 Pop \u2581removes \u2581the \u2581first \u2581element \u2581from \u2581the \u2581stack ."], "references": ["\u2581// \u2581 Pop \u2581removes \u2581and \u2581returns \u2581the \u2581item \u2581at \u2581the \u2581end \u2581of \u2581the \u2581stack"], "bleu": 0.28701510322753987, "rouge_l": 0.5481386392811297}
{"id": 6452, "predictions": ["\u2581// \u2581 WithFields \u2581returns \u2581a \u2581new \u2581 namespaced \u2581 Interface ."], "references": ["\u2581// \u2581 WithFields \u2581adds \u2581multiple \u2581fields \u2581to \u2581the \u2581logger"], "bleu": 0.21200626759025185, "rouge_l": 0.3055091819699499}
{"id": 6437, "predictions": ["\u2581// \u2581 ID From Metadata \u2581returns \u2581the \u2581 ID \u2581of \u2581the \u2581metadata \u2581for \u2581the \u2581given \u2581metadata ."], "references": ["\u2581// \u2581 ID From Metadata \u2581gets \u2581the \u2581 key \u2581from \u2581the \u2581metadata \u2581or \u2581returns \u2581 ErrNo ID"], "bleu": 0.3422803488747217, "rouge_l": 0.5294117647058824}
{"id": 7324, "predictions": ["\u2581// \u2581Get ById \u2581returns \u2581the \u2581 ById \u2581with \u2581the \u2581given \u2581 id ."], "references": ["\u2581// \u2581Get ById \u2581will \u2581populate \u2581a \u2581user \u2581object \u2581from \u2581a \u2581database \u2581 model \u2581with \u2581// \u2581a \u2581matching \u2581 id ."], "bleu": 0.15979796246427191, "rouge_l": 0.4669856459330144}
{"id": 6373, "predictions": ["\u2581// \u2581Set Asset FS \u2581 - \u2581 add \u2581asset \u2581asset \u2581 path"], "references": ["\u2581// \u2581Set Asset FS \u2581 set \u2581asset \u2581fs \u2581for \u2581 render"], "bleu": 0.4089601472043678, "rouge_l": 0.6135057471264368}
{"id": 7789, "predictions": ["\u2581// \u2581 Bosh Release \u2581release \u2581 - \u2581 get \u2581 releases \u2581from \u2581the \u2581 set \u2581of \u2581 releases ."], "references": ["\u2581// \u2581 Bosh Release OrEmpty \u2581returns \u2581the \u2581named \u2581 BO SH \u2581release \u2581from \u2581 this \u2581 pi v net \u2581release \u2581// \u2581if \u2581it \u2581 exists , \u2581otherwise \u2581 empty Bosh"], "bleu": 0.12756418106480547, "rouge_l": 0.35305466237942124}
{"id": 6975, "predictions": ["\u2581// \u2581parse FuncName \u2581parses \u2581a \u2581 name \u2581and \u2581returns \u2581a \u2581 packer . Parse \u2581function ."], "references": ["\u2581// \u2581parse FuncName \u2581returns \u2581the \u2581package \u2581 path \u2581and \u2581function \u2581signature \u2581for \u2581a \u2581// \u2581give \u2581 Func \u2581 name ."], "bleu": 0.15768745288210734, "rouge_l": 0.43571428571428567}
{"id": 7986, "predictions": ["\u2581// \u2581 Memory InUse \u2581returns \u2581the \u2581number \u2581of \u2581devices \u2581in \u2581the \u2581 N \u2581iterators ."], "references": ["\u2581// \u2581 Memory InUse \u2581returns \u2581total \u2581memory \u2581used \u2581by \u2581the \u2581 N itr o \u2581instance ."], "bleu": 0.36836104969691197, "rouge_l": 0.5772870662460569}
{"id": 6380, "predictions": ["\u2581// \u2581Create \u2581creates \u2581a \u2581new \u2581 WriteCloser \u2581with \u2581the \u2581given \u2581 url ."], "references": ["\u2581// \u2581Create \u2581creates \u2581an \u2581 S 3 \u2581object \u2581at \u2581 url \u2581and \u2581sends \u2581multipart \u2581upload \u2581requests \u2581as \u2581// \u2581 data \u2581is \u2581written . \u2581// \u2581// \u2581If \u2581 h \u2581is \u2581not"], "bleu": 0.06144125958664295, "rouge_l": 0.30391459074733096}
{"id": 7816, "predictions": ["\u2581// \u2581 UnmarshalBinary \u2581implements \u2581the \u2581encoding . Binary Unmarshaler \u2581interface \u2581for \u2581 Route Wrapper ."], "references": ["\u2581// \u2581 UnmarshalBinary \u2581interface \u2581implementation"], "bleu": 0.16188613565728213, "rouge_l": 0.43963963963963953}
{"id": 8013, "predictions": ["\u2581// \u2581 Init \u2581initializes \u2581a \u2581new \u2581 empty \u2581 Cloud \u2581 Storage \u2581instance ."], "references": ["\u2581// \u2581 Init \u2581 - \u2581external ly \u2581available \u2581 init \u2581method"], "bleu": 0.18207052811092136, "rouge_l": 0.40884718498659517}
{"id": 6919, "predictions": ["\u2581// \u2581column From Tag \u2581returns \u2581the \u2581 form \u2581of \u2581the \u2581tag \u2581field ."], "references": ["\u2581// \u2581column From Tag \u2581returns \u2581the \u2581column \u2581 name . \u2581// \u2581If \u2581\" column \" \u2581tag \u2581specified \u2581to \u2581struct \u2581field , \u2581returns \u2581it . \u2581// \u2581Otherwise , \u2581it \u2581returns \u2581"], "bleu": 0.13093585840137667, "rouge_l": 0.43416370106761565}
{"id": 6546, "predictions": ["\u2581// \u2581Create Project \u2581creates \u2581a \u2581project ."], "references": ["\u2581// \u2581Create Project \u2581creates \u2581a \u2581new , \u2581 empty \u2581project ."], "bleu": 0.43212562934144166, "rouge_l": 0.7478108581436078}
{"id": 6914, "predictions": ["\u2581// \u2581has PK Tag \u2581returns \u2581true \u2581if \u2581the \u2581field \u2581has \u2581a PK \u2581tag \u2581tag ."], "references": ["\u2581// \u2581has PK Tag \u2581returns \u2581whether \u2581the \u2581struct \u2581field \u2581has \u2581the \u2581\" pk \" \u2581tag ."], "bleu": 0.35677496312186124, "rouge_l": 0.6414300736067298}
{"id": 7543, "predictions": ["\u2581// \u2581Must Manage Data Result \u2581returns \u2581the \u2581result \u2581of \u2581a \u2581run \u2581 type"], "references": ["\u2581// \u2581Must Manage Data Result \u2581retrieves \u2581the \u2581 Manage Data Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.12806994700218244, "rouge_l": 0.3292212798766383}
{"id": 7541, "predictions": ["\u2581// \u2581Must Inf lation Result \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581result \u2581in \u2581the \u2581 form \u2581of \u2581 type ."], "references": ["\u2581// \u2581Must Inf lation Result \u2581retrieves \u2581the \u2581 Inf lation Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2043236176252964, "rouge_l": 0.4637180373185902}
{"id": 7511, "predictions": ["\u2581// \u2581Must Source Account Balance \u2581returns \u2581the \u2581 balance \u2581of \u2581the \u2581 data \u2581for \u2581the \u2581// \u2581given \u2581source \u2581 balance ."], "references": ["\u2581// \u2581Must Source Account Balance \u2581retrieves \u2581the \u2581 Source Account Balance \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.20306189345471856, "rouge_l": 0.4482297929191717}
{"id": 7699, "predictions": ["\u2581// \u2581 New OAuth 2 Controller \u2581creates \u2581a \u2581new \u2581 OAuth 2 Controller \u2581instance"], "references": ["\u2581// New OAuth 2 Controller \u2581constructs \u2581new \u2581 Auth Controller"], "bleu": 0.30130404892785684, "rouge_l": 0.6873239436619719}
{"id": 7537, "predictions": ["\u2581// \u2581Must Allow Trust Result \u2581returns \u2581true \u2581if \u2581the \u2581result \u2581is \u2581not \u2581 Allow Trust Result"], "references": ["\u2581// \u2581Must Allow Trust Result \u2581retrieves \u2581the \u2581 Allow Trust Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2635695178058612, "rouge_l": 0.4446064139941691}
{"id": 7535, "predictions": ["\u2581// \u2581Must Change Trust Result \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581change \u2581for \u2581the \u2581given \u2581 Change \u2581trust \u2581// \u2581and \u2581the \u2581result \u2581of \u2581the \u2581result ."], "references": ["\u2581// \u2581Must Change Trust Result \u2581retrieves \u2581the \u2581 Change Trust Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2208742883783905, "rouge_l": 0.42016280525986216}
{"id": 6545, "predictions": ["\u2581// \u2581Get Project \u2581returns \u2581a \u2581project \u2581with \u2581a \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Project \u2581retrieves \u2581and \u2581returns \u2581the \u2581named \u2581project ."], "bleu": 0.2224246939793677, "rouge_l": 0.5545454545454546}
{"id": 7469, "predictions": ["\u2581// \u2581Must Manage Data Op \u2581returns \u2581the \u2581 data \u2581for \u2581the \u2581 Manage Data \u2581operation"], "references": ["\u2581// \u2581Must Manage Data Op \u2581retrieves \u2581the \u2581 Manage Data Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.21533487657190112, "rouge_l": 0.40757238307349664}
{"id": 7427, "predictions": ["\u2581// \u2581Must Alpha Num 4 \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581 Alpha ."], "references": ["\u2581// \u2581Must Alpha Num 4 \u2581retrieves \u2581the \u2581 Alpha Num 4 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.1508533341157943, "rouge_l": 0.423284502698535}
{"id": 7465, "predictions": ["\u2581// \u2581Must Allow Trust Op \u2581returns \u2581the \u2581 Allow Trust Op \u2581that \u2581will \u2581panic \u2581if \u2581the \u2581// \u2581 body \u2581is \u2581not \u2581present ."], "references": ["\u2581// \u2581Must Allow Trust Op \u2581retrieves \u2581the \u2581 Allow Trust Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.3458428840300065, "rouge_l": 0.6308985132514544}
{"id": 7748, "predictions": ["\u2581// \u2581Get Environment \u2581returns \u2581the \u2581environment \u2581variables \u2581for \u2581the \u2581environment"], "references": ["\u2581// Get Environment \u2581returns \u2581a \u2581Mongo \u2581configuration \u2581for \u2581the \u2581specified \u2581environment \u2581in \u2581parameter"], "bleu": 0.16810676226047, "rouge_l": 0.5097493036211699}
{"id": 7429, "predictions": ["\u2581// \u2581Must Alpha Num 12 \u2581returns \u2581the \u2581value \u2581of \u2581 this \u2581 Asset , \u2581or \u2581panic s \u2581if \u2581it \u2581is \u2581not \u2581 empty ."], "references": ["\u2581// \u2581Must Alpha Num 12 \u2581retrieves \u2581the \u2581 Alpha Num 12 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.24886456034260374, "rouge_l": 0.5432569974554707}
{"id": 7932, "predictions": ["\u2581// \u2581 Compare Int \u2581compares \u2581two \u2581int s ."], "references": ["\u2581// \u2581 Compare Int \u2581is \u2581a \u2581 helper \u2581integer \u2581item \u2581comparator"], "bleu": 0.3145413833897494, "rouge_l": 0.3929146537842191}
{"id": 6396, "predictions": ["\u2581// \u2581Must Exec \u2581executes \u2581a \u2581 exec ."], "references": ["\u2581// Must Exec \u2581is \u2581like \u2581 Exec , \u2581but \u2581panic s \u2581instead \u2581of \u2581returning \u2581an \u2581error ."], "bleu": 0.06546599337908265, "rouge_l": 0.3004926108374384}
{"id": 7201, "predictions": ["\u2581// \u2581tx Un mark Raw \u2581returns \u2581the \u2581 mark \u2581of \u2581the \u2581 model ."], "references": ["\u2581// \u2581Sets \u2581the \u2581 contents \u2581of \u2581register \u2581sa \u2581to \u2581a \u2581regular \u2581string , \u2581and \u2581removes \u2581// \u2581the \u2581\" raw \u2581string \" \u2581 mark , \u2581 forcing \u2581 html \u2581escapes \u2581to"], "bleu": 0.052466281662696825, "rouge_l": 0.2559440559440559}
{"id": 7463, "predictions": ["\u2581// \u2581Must Change Trust Op \u2581returns \u2581the \u2581trust \u2581operation \u2581for \u2581the \u2581 changeset \u2581// \u2581and \u2581the \u2581trust \u2581operation ."], "references": ["\u2581// \u2581Must Change Trust Op \u2581retrieves \u2581the \u2581 Change Trust Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.19270427326925227, "rouge_l": 0.4215618521078092}
{"id": 7530, "predictions": ["\u2581// \u2581Must Manage Offer Result \u2581evaluates \u2581the \u2581 mocked \u2581 Manage Offer Result \u2581// \u2581 type , \u2581 this \u2581method \u2581will \u2581return \u2581an \u2581error \u2581if \u2581the \u2581result \u2581is \u2581not \u2581"], "references": ["\u2581// \u2581Must Manage Offer Result \u2581retrieves \u2581the \u2581 Manage Offer Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2991528889155786, "rouge_l": 0.5667828106852496}
{"id": 7200, "predictions": ["\u2581// \u2581tx Mark Raw \u2581returns \u2581the \u2581 mark \u2581of \u2581the \u2581 Mark Raw \u2581field \u2581of \u2581the \u2581// \u2581 State ' s \u2581 type ."], "references": ["\u2581// \u2581Wraps \u2581the \u2581 contents \u2581of \u2581register \u2581sa \u2581with \u2581a \u2581\" raw \u2581string \" \u2581 mark \u2581// \u2581Note \u2581that \u2581 this \u2581effectively \u2581string ifies \u2581the \u2581 contents \u2581of \u2581register \u2581sa"], "bleu": 0.08732955498121404, "rouge_l": 0.29047619047619044}
{"id": 7528, "predictions": ["\u2581// \u2581Must Path Payment Result \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 path \u2581to \u2581 this \u2581 path . \u2581// \u2581If \u2581the \u2581 path \u2581is \u2581not \u2581 Path Payment ,"], "references": ["\u2581// \u2581Must Path Payment Result \u2581retrieves \u2581the \u2581 Path Payment Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2559331300463092, "rouge_l": 0.46051103368176527}
{"id": 7457, "predictions": ["\u2581// \u2581Must Manage Offer Op \u2581creates \u2581a \u2581 Manage Offer Op \u2581operation \u2581for \u2581 this \u2581operation \u2581// \u2581operation ."], "references": ["\u2581// \u2581Must Manage Offer Op \u2581retrieves \u2581the \u2581 Manage Offer Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.25123147896835274, "rouge_l": 0.4637180373185902}
{"id": 7455, "predictions": ["\u2581// \u2581Must Path Payment Op \u2581returns \u2581the \u2581 path \u2581 path \u2581to \u2581the \u2581 path \u2581 body ."], "references": ["\u2581// \u2581Must Path Payment Op \u2581retrieves \u2581the \u2581 Path Payment Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.18424058414926012, "rouge_l": 0.4289732770745429}
{"id": 6256, "predictions": ["\u2581// \u2581fail \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581prints \u2581the \u2581 contents \u2581of \u2581the \u2581 format \u2581to \u2581the \u2581// \u2581 format ."], "references": ["\u2581// \u2581 Print \u2581error \u2581message \u2581and \u2581 exit \u2581with \u2581 code \u2581 1"], "bleu": 0.0866852806734874, "rouge_l": 0.29960707269155207}
{"id": 7116, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Servers ."], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581 Servers \u2581with \u2581applied \u2581options ."], "bleu": 0.20973855958121107, "rouge_l": 0.6694101508916324}
{"id": 6307, "predictions": ["\u2581// \u2581 New Basic Authenticator \u2581returns \u2581a \u2581new \u2581 Authenticator \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 Authenticator ."], "references": ["\u2581// \u2581 New Basic Authenticator \u2581returns \u2581a \u2581 authenticator \u2581that \u2581uses \u2581 email \u2581and \u2581password \u2581to \u2581create \u2581sessions . \u2581// \u2581The \u2581returned \u2581 authenticator \u2581takes \u2581care \u2581of \u2581 refreshing \u2581the"], "bleu": 0.2464958440354513, "rouge_l": 0.44907975460122695}
{"id": 8057, "predictions": ["\u2581// \u2581Set Public Meta \u2581sets \u2581the \u2581public \u2581 key \u2581for \u2581the \u2581given \u2581 name"], "references": ["\u2581// Set Public Meta \u2581 - \u2581 set \u2581a \u2581public \u2581metadata \u2581record"], "bleu": 0.1437791910008819, "rouge_l": 0.3900255754475704}
{"id": 7111, "predictions": ["\u2581// \u2581 Serve UDP \u2581is \u2581used \u2581to \u2581 connect \u2581to \u2581the \u2581server ."], "references": ["\u2581// \u2581 Serve UDP \u2581serves \u2581requests \u2581over \u2581 UDP \u2581connection ."], "bleu": 0.2891784933232572, "rouge_l": 0.507628294036061}
{"id": 7022, "predictions": ["\u2581// \u2581 Query \u2581executes \u2581a \u2581query \u2581and \u2581returns \u2581the \u2581results \u2581of \u2581the \u2581given \u2581project ."], "references": ["\u2581// \u2581 Query \u2581 loads \u2581the \u2581 data \u2581for \u2581the \u2581query \u2581 paging \u2581if \u2581necessary \u2581and \u2581return \u2581the \u2581 data \u2581rows , \u2581 headers \u2581and \u2581error"], "bleu": 0.08744943982389486, "rouge_l": 0.27917620137299776}
{"id": 7653, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581 key \u2581to \u2581the \u2581 set \u2581of \u2581 D Builder ."], "references": ["\u2581// \u2581Add \u2581a \u2581 key \u2581and \u2581value \u2581to \u2581the \u2581hash \u2581 table ."], "bleu": 0.2187405715612322, "rouge_l": 0.6512455516014234}
{"id": 7245, "predictions": ["\u2581// \u2581 NewReader Lexer \u2581returns \u2581a \u2581new \u2581 Lexer \u2581instance ."], "references": ["\u2581// \u2581 NewReader Lexer \u2581creates \u2581a \u2581new \u2581 lexer"], "bleu": 0.4240125351805037, "rouge_l": 0.7128547579298832}
{"id": 6360, "predictions": ["\u2581// \u2581 New Message \u2581creates \u2581a \u2581new \u2581message \u2581with \u2581the \u2581given \u2581 id \u2581and \u2581 body ."], "references": ["\u2581// \u2581 New Message \u2581is \u2581a \u2581 helper \u2581for \u2581creating \u2581 Message \u2581instances \u2581directly . \u2581 A \u2581common \u2581// \u2581use - case \u2581is \u2581for \u2581writing \u2581tests , \u2581generally \u2581you \u2581won"], "bleu": 0.10839836352151985, "rouge_l": 0.3242524916943521}
{"id": 6800, "predictions": ["\u2581// \u2581 Is No Vault Handler Defined \u2581checks \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 Vault \u2581handler"], "references": ["\u2581// \u2581 Is No Vault Handler Defined \u2581 asserts \u2581a \u2581 dirty \u2581string \u2581matching \u2581against \u2581the \u2581error \u2581// \u2581message \u2581provided \u2581by \u2581err . \u2581This \u2581is \u2581necessary \u2581due \u2581to \u2581the \u2581po"], "bleu": 0.20754967504849703, "rouge_l": 0.41216216216216217}
{"id": 6811, "predictions": ["\u2581// \u2581 Watching \u2581returns \u2581all \u2581paths \u2581from \u2581the \u2581 Watcher ."], "references": ["\u2581// \u2581 Watching \u2581returns \u2581a \u2581list \u2581of \u2581the \u2581files \u2581being \u2581 watched ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 7274, "predictions": ["\u2581// \u2581 Top \u2581returns \u2581the \u2581current \u2581 top \u2581of \u2581the \u2581stack ."], "references": ["\u2581// \u2581 Top \u2581returns \u2581the \u2581element \u2581at \u2581the \u2581 top \u2581of \u2581the \u2581stack \u2581or \u2581an \u2581error \u2581if \u2581stack \u2581is \u2581 empty"], "bleu": 0.3166471820381779, "rouge_l": 0.5776515151515151}
{"id": 7621, "predictions": ["\u2581// \u2581Must Q Set Hash \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 form \u2581of \u2581 this \u2581 Stellar Message ."], "references": ["\u2581// \u2581Must Q Set Hash \u2581retrieves \u2581the \u2581 Q Set Hash \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.1920257091431042, "rouge_l": 0.41440217391304346}
{"id": 7615, "predictions": ["\u2581// \u2581Must Tx Set Hash \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581 set \u2581of \u2581 keys \u2581in \u2581the \u2581 subreddit ."], "references": ["\u2581// \u2581Must Tx Set Hash \u2581retrieves \u2581the \u2581 Tx Set Hash \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2080816302784264, "rouge_l": 0.41440217391304346}
{"id": 7560, "predictions": ["\u2581// \u2581Must New Ledger Version \u2581returns \u2581a \u2581new \u2581 ledger"], "references": ["\u2581// \u2581Must New Ledger Version \u2581retrieves \u2581the \u2581 New Ledger Version \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.08766584191041153, "rouge_l": 0.2995090016366612}
{"id": 7562, "predictions": ["\u2581// \u2581Must New Base Fee \u2581returns \u2581a \u2581new \u2581 Base Fee \u2581instance"], "references": ["\u2581// \u2581Must New Base Fee \u2581retrieves \u2581the \u2581 New Base Fee \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.12629795780275901, "rouge_l": 0.38364779874213834}
{"id": 7950, "predictions": ["\u2581// \u2581 Seek \u2581moves \u2581the \u2581 iterator \u2581to \u2581the \u2581next \u2581 iterator ."], "references": ["\u2581// \u2581 Seek \u2581to \u2581a \u2581specified \u2581 key \u2581or \u2581the \u2581next \u2581bigger \u2581one \u2581if \u2581an \u2581item \u2581with \u2581 key \u2581does \u2581not \u2581// \u2581exist ."], "bleu": 0.10306974954353021, "rouge_l": 0.41042893187552554}
{"id": 7107, "predictions": ["\u2581// \u2581 Respond Template \u2581writes \u2581a \u2581template \u2581to \u2581a \u2581template"], "references": ["\u2581// \u2581 Respond Template \u2581executes \u2581a \u2581named \u2581template \u2581with \u2581provided \u2581 data \u2581into \u2581buffer , \u2581// \u2581then \u2581writes \u2581the \u2581the \u2581 body \u2581to \u2581the \u2581response \u2581writer . \u2581// \u2581 A"], "bleu": 0.05499752915127494, "rouge_l": 0.32105263157894737}
{"id": 7347, "predictions": ["\u2581// \u2581 Mutate Operation \u2581sets \u2581the \u2581 set \u2581of \u2581 this \u2581 Source Account \u2581operation ."], "references": ["\u2581// \u2581 Mutate Operation \u2581for \u2581 Source Account \u2581sets \u2581the \u2581operation ' s \u2581 Source Account \u2581// \u2581to \u2581the \u2581 pub i lic \u2581 key \u2581for \u2581the \u2581address \u2581provided"], "bleu": 0.154159223933992, "rouge_l": 0.38019390581717455}
{"id": 7270, "predictions": ["\u2581// \u2581 Swap \u2581swap s \u2581the \u2581 symbol \u2581and \u2581 j \u2581of \u2581the \u2581 Symbol Symbol ."], "references": ["\u2581// \u2581 Swap \u2581swap s \u2581the \u2581elements \u2581at \u2581 i \u2581and \u2581 j"], "bleu": 0.41180376356915777, "rouge_l": 0.6830907054871221}
{"id": 7143, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Client ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581 Client \u2581with \u2581default \u2581values ."], "bleu": 0.703040551379714, "rouge_l": 0.8613607188703466}
{"id": 7545, "predictions": ["\u2581// \u2581 Exported For Switch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 Switch \u2581if \u2581it \u2581 exists ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 OperationResult"], "bleu": 0.13287234247278082, "rouge_l": 0.4178082191780822}
{"id": 7539, "predictions": ["\u2581// \u2581Must Account Merge Result \u2581returns \u2581the \u2581result \u2581of \u2581a \u2581 Account Merge Result \u2581if \u2581it \u2581is \u2581not \u2581 set ."], "references": ["\u2581// \u2581Must Account Merge Result \u2581retrieves \u2581the \u2581 Account Merge Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.376110494067217, "rouge_l": 0.6519706078824314}
{"id": 7241, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581cache \u2581 entity \u2581with \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581cached \u2581 ByteCode"], "bleu": 0.27824623288353134, "rouge_l": 0.5285961871750434}
{"id": 6544, "predictions": ["\u2581// \u2581 GetAll Projects \u2581returns \u2581all \u2581projects ."], "references": ["\u2581// \u2581 GetAll Projects \u2581retrieves \u2581and \u2581returns \u2581all \u2581of \u2581the \u2581projects \u2581defined \u2581in \u2581the \u2581 Run deck \u2581server ."], "bleu": 0.13821035475663104, "rouge_l": 0.5520361990950226}
{"id": 7141, "predictions": ["\u2581// \u2581Must Add Handler \u2581is \u2581a \u2581convenience \u2581function \u2581that \u2581returns \u2581a \u2581 map \u2581of \u2581 Add Handler"], "references": ["\u2581// \u2581Must Add Handler \u2581calls \u2581Add Handler \u2581and \u2581panic s \u2581in \u2581case \u2581of \u2581an \u2581error ."], "bleu": 0.2186976686325118, "rouge_l": 0.3046953046953047}
{"id": 7500, "predictions": ["\u2581// \u2581 Known For Switch \u2581returns \u2581the \u2581 username \u2581and \u2581the \u2581 model \u2581 set \u2581of \u2581the \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581Set Options Result"], "bleu": 0.1165307802951804, "rouge_l": 0.3485714285714286}
{"id": 6734, "predictions": ["\u2581// \u2581new File Buffer \u2581creates \u2581a \u2581new \u2581file \u2581buffer ."], "references": ["\u2581// \u2581new File Buffer \u2581creates \u2581a \u2581buffer \u2581for \u2581reading \u2581from \u2581the \u2581specified \u2581 File \u2581file"], "bleu": 0.36857629704487194, "rouge_l": 0.540506329113924}
{"id": 6470, "predictions": ["\u2581// \u2581 New Counter \u2581creates \u2581a \u2581new \u2581 Counter ."], "references": ["\u2581// \u2581 New Counter \u2581returns \u2581a \u2581new \u2581 rate \u2581counter \u2581with \u2581the \u2581given \u2581bucket \u2581 size \u2581and \u2581 retention"], "bleu": 0.19078159573063605, "rouge_l": 0.45717344753747313}
{"id": 7099, "predictions": ["\u2581// \u2581 With Templates FromFile s \u2581sets \u2581the \u2581 templates \u2581for \u2581the \u2581given \u2581 map ."], "references": ["\u2581// \u2581 With Templates FromFile s \u2581adds \u2581a \u2581 map \u2581of \u2581 templates \u2581parsed \u2581from \u2581files ."], "bleu": 0.4022396261512161, "rouge_l": 0.5424901185770752}
{"id": 7101, "predictions": ["\u2581// \u2581 With Templates FromString s \u2581returns \u2581a \u2581 Option \u2581that \u2581sets \u2581the \u2581 templates \u2581for \u2581the \u2581given \u2581 map ."], "references": ["\u2581// \u2581 With Templates FromString s \u2581adds \u2581a \u2581 map \u2581of \u2581 templates \u2581parsed \u2581from \u2581strings ."], "bleu": 0.33977981168234306, "rouge_l": 0.5901495162708883}
{"id": 6747, "predictions": ["\u2581// \u2581 NewFile \u2581creates \u2581a \u2581new \u2581 Writer \u2581with \u2581the \u2581given \u2581 filename ."], "references": ["\u2581// \u2581 NewFile \u2581is \u2581a \u2581convenience \u2581function \u2581which \u2581creates \u2581and \u2581open s \u2581a \u2581file"], "bleu": 0.18207052811092136, "rouge_l": 0.35714285714285715}
{"id": 7800, "predictions": ["\u2581// \u2581 New Backoff \u2581creates \u2581a \u2581new \u2581backoff \u2581strategy ."], "references": ["\u2581// \u2581 New Backoff \u2581creates \u2581a \u2581new \u2581 Backoff \u2581using \u2581the \u2581specified \u2581 Backoff Strategy , \u2581start \u2581duration \u2581and \u2581limit ."], "bleu": 0.23265384026956723, "rouge_l": 0.4850894632206759}
{"id": 6441, "predictions": ["\u2581// \u2581 ServiceInfo From Incoming Context \u2581creates \u2581a \u2581service \u2581from \u2581the \u2581context ."], "references": ["\u2581// \u2581 ServiceInfo From Incoming Context \u2581gets \u2581the \u2581service \u2581information \u2581from \u2581the \u2581incoming \u2581context \u2581or \u2581returns \u2581 empty \u2581strings"], "bleu": 0.3171576880628693, "rouge_l": 0.6045589692765114}
{"id": 7244, "predictions": ["\u2581// \u2581 NewString Lexer \u2581creates \u2581a \u2581new \u2581 Lexer \u2581with \u2581a \u2581string \u2581 set ."], "references": ["\u2581// \u2581 NewString Lexer \u2581creates \u2581a \u2581new \u2581 lexer"], "bleu": 0.5129497107827519, "rouge_l": 0.698140200286123}
{"id": 7636, "predictions": ["\u2581// \u2581Must Confirm \u2581returns \u2581the \u2581 S 1 \u2581 placeholder \u2581for \u2581the \u2581 data \u2581in \u2581the \u2581 S cp \u2581statement"], "references": ["\u2581// \u2581Must Confirm \u2581retrieves \u2581the \u2581 Confirm \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.1287864294428961, "rouge_l": 0.36746987951807225}
{"id": 7461, "predictions": ["\u2581// \u2581Must Set Options Op \u2581sets \u2581the \u2581default \u2581options \u2581for \u2581the \u2581operation ."], "references": ["\u2581// \u2581Must Set Options Op \u2581retrieves \u2581the \u2581Set Options Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.14244349737885736, "rouge_l": 0.38699444885011897}
{"id": 6521, "predictions": ["\u2581// \u2581String \u2581implements \u2581the \u2581String er \u2581interface \u2581for \u2581 validating \u2581the \u2581 status \u2581// \u2581of \u2581the \u2581 status \u2581 code ."], "references": ["\u2581// \u2581String \u2581representation \u2581of \u2581the \u2581check \u2581results , \u2581suitable \u2581for \u2581output \u2581and \u2581// \u2581parsing \u2581by \u2581 N agios ."], "bleu": 0.11136136561010289, "rouge_l": 0.35318444995864345}
{"id": 7352, "predictions": ["\u2581// \u2581 Hash Hex \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581transaction ."], "references": ["\u2581// \u2581 Hash Hex \u2581returns \u2581the \u2581 hex - encoded \u2581hash \u2581of \u2581 this \u2581builder ' s \u2581transaction"], "bleu": 0.3100692387325164, "rouge_l": 0.5947995666305526}
{"id": 6311, "predictions": ["\u2581// \u2581 Can Authenticate \u2581checks \u2581if \u2581the \u2581request \u2581is \u2581a \u2581 username \u2581and \u2581the \u2581 login \u2581request"], "references": ["\u2581// \u2581 Can Authenticate \u2581makes \u2581a \u2581 test \u2581request \u2581to \u2581CM \u25811.5 \u2581and \u2581returns \u2581true \u2581if \u2581it \u2581is \u2581successful ."], "bleu": 0.2170226764908127, "rouge_l": 0.37292576419213974}
{"id": 7182, "predictions": ["\u2581// \u2581Create Temporary Credentials \u2581returns \u2581a \u2581new \u2581 Credentials \u2581that \u2581will \u2581 write \u2581the \u2581credentials \u2581// \u2581to \u2581the \u2581given \u2581 Credentials ."], "references": ["\u2581// \u2581Create Temporary Credentials \u2581is \u2581an \u2581 alias \u2581for \u2581Create Named Temporary Credentials \u2581// \u2581with \u2581an \u2581 empty \u2581 name ."], "bleu": 0.18773749983024723, "rouge_l": 0.4203675344563553}
{"id": 6804, "predictions": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581 Config ."], "references": ["\u2581// \u2581 Run \u2581starts \u2581the \u2581job"], "bleu": 0.5873949094699213, "rouge_l": 0.7331730769230769}
{"id": 7533, "predictions": ["\u2581// \u2581Must Set Options Result \u2581is \u2581used \u2581to \u2581 set \u2581the \u2581value \u2581of \u2581a \u2581 set \u2581options ."], "references": ["\u2581// \u2581Must Set Options Result \u2581retrieves \u2581the \u2581Set Options Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.20686956954554064, "rouge_l": 0.4401154401154401}
{"id": 7134, "predictions": ["\u2581// \u2581 NewContext Func \u2581returns \u2581a \u2581new \u2581 empty \u2581 map \u2581that \u2581is \u2581used \u2581by \u2581 key ."], "references": ["\u2581// \u2581 NewContext Func \u2581creates \u2581a \u2581new \u2581function \u2581that \u2581can \u2581be \u2581used \u2581to \u2581store \u2581// \u2581and \u2581access \u2581arbitrary \u2581 data \u2581by \u2581 keys ."], "bleu": 0.190830541849147, "rouge_l": 0.510654490106545}
{"id": 6803, "predictions": ["\u2581// \u2581Create Job \u2581creates \u2581a \u2581new \u2581 config ."], "references": ["\u2581// \u2581Create Job \u2581creates \u2581a \u2581basic \u2581 empty \u2581configuration \u2581with \u2581some \u2581defaults ."], "bleu": 0.35619097022762314, "rouge_l": 0.6161616161616162}
{"id": 7703, "predictions": ["\u2581// \u2581 Single File \u2581returns \u2581a \u2581http . Handler \u2581that \u2581will \u2581serve \u2581a \u2581file ."], "references": ["\u2581// Single File \u2581returns \u2581a \u2581handler"], "bleu": 0.23961829057131984, "rouge_l": 0.5160744500846023}
{"id": 7663, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Map \u2581instance ."], "references": ["\u2581// \u2581 New \u2581initializes \u2581a \u2581new \u2581 Map ."], "bleu": 0.4832697830906221, "rouge_l": 0.8501742160278747}
{"id": 7483, "predictions": ["\u2581// \u2581 Known For Switch \u2581returns \u2581the \u2581 username \u2581and \u2581 name \u2581of \u2581the \u2581 CreateAccount \u2581account \u2581for \u2581the \u2581given \u2581 model ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 CreateAccount Result"], "bleu": 0.14416875522600464, "rouge_l": 0.41355932203389834}
{"id": 7578, "predictions": ["\u2581// \u2581 New Ledger Header History Entry Ext \u2581returns \u2581a \u2581new \u2581 Ledger Header History Entry Ext \u2581instance"], "references": ["\u2581// \u2581 New Ledger Header History Entry Ext \u2581creates \u2581a \u2581new \u2581 Ledger Header History Entry Ext ."], "bleu": 0.7912619863720214, "rouge_l": 0.8888888888888888}
{"id": 7486, "predictions": ["\u2581// \u2581 Known For Switch \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 payment \u2581of \u2581the \u2581 payment \u2581// \u2581of \u2581the \u2581 payment \u2581result ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Payment Result"], "bleu": 0.1352459492093481, "rouge_l": 0.4066666666666667}
{"id": 7065, "predictions": ["\u2581// \u2581 Print m \u2581prints \u2581a \u2581formatted \u2581string \u2581with \u2581the \u2581 format \u2581of \u2581 format ."], "references": ["\u2581// \u2581 Printf \u2581prints \u2581formatted \u2581string \u2581to \u2581 stdout . \u2581// \u2581This \u2581is \u2581same \u2581as \u2581fmt . Printf , \u2581but \u2581uses \u2581 g string \u2581formatting ."], "bleu": 0.07892413670616552, "rouge_l": 0.3652694610778443}
{"id": 8098, "predictions": ["\u2581// \u2581Do \u2581implements \u2581the \u2581http . Client \u2581interface ."], "references": ["\u2581// Do \u2581 - \u2581fake \u2581do \u2581method"], "bleu": 0.14113991930789777, "rouge_l": 0.1278825995807128}
{"id": 7623, "predictions": ["\u2581// \u2581Must Q Set \u2581returns \u2581a \u2581 S cp \u2581 sketch \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 Q ."], "references": ["\u2581// \u2581Must Q Set \u2581retrieves \u2581the \u2581 Q Set \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.16648988145989838, "rouge_l": 0.3485714285714286}
{"id": 7577, "predictions": ["\u2581// \u2581 New Transaction History Result Entry Ext \u2581returns \u2581a \u2581new \u2581 Transaction History Result Entry \u2581// \u2581with \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 New Transaction History Result Entry Ext \u2581creates \u2581a \u2581new \u2581 Transaction History Result Entry Ext ."], "bleu": 0.6054657750562688, "rouge_l": 0.8146911519198664}
{"id": 6534, "predictions": ["\u2581// \u2581 GetKey Content \u2581returns \u2581the \u2581 content \u2581of \u2581a \u2581 key"], "references": ["\u2581// \u2581 GetKey Content \u2581retrieves \u2581and \u2581returns \u2581the \u2581 content \u2581of \u2581the \u2581 key \u2581at \u2581the \u2581given \u2581 key store \u2581 path . \u2581// \u2581 Private \u2581 keys \u2581are \u2581"], "bleu": 0.13910338728763874, "rouge_l": 0.4862318840579709}
{"id": 6688, "predictions": ["\u2581// \u2581 T ear Down \u2581 clear s \u2581the \u2581storage \u2581 data \u2581for \u2581the \u2581 Storage ."], "references": ["\u2581// \u2581 T ear Down \u2581implements \u2581storage \u2581interface ."], "bleu": 0.28433291815307693, "rouge_l": 0.5700934579439252}
{"id": 8074, "predictions": ["\u2581// \u2581 Data \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581request \u2581context ."], "references": ["\u2581// Data \u2581returns \u2581the \u2581 language \u2581 data \u2581stored \u2581in \u2581the \u2581request ."], "bleu": 0.23263035362970588, "rouge_l": 0.5746971736204576}
{"id": 6542, "predictions": ["\u2581// \u2581Get SystemInfo \u2581returns \u2581 SystemInfo"], "references": ["\u2581// \u2581Get SystemInfo \u2581retrieves \u2581and \u2581returns \u2581 misc el lane ous \u2581system \u2581information \u2581about \u2581the \u2581 Run deck \u2581server \u2581// \u2581and \u2581the \u2581machine \u2581it ' s \u2581running \u2581on ."], "bleu": 0.010579008689718995, "rouge_l": 0.25544388609715246}
{"id": 8076, "predictions": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 size ."], "references": ["\u2581// \u2581Returns \u2581the \u2581terminal \u2581 size"], "bleu": 0.15537125692760353, "rouge_l": 0.4728682170542636}
{"id": 6282, "predictions": ["\u2581// \u2581 New Type Registry \u2581creates \u2581a \u2581new \u2581 Type Registry ."], "references": ["\u2581// \u2581 New Type Registry \u2581creates \u2581a \u2581 type \u2581registry ."], "bleu": 0.591460168684858, "rouge_l": 0.7887931034482759}
{"id": 6758, "predictions": ["\u2581// \u2581 Run Benchmark \u2581executes \u2581the \u2581benchmark \u2581and \u2581returns \u2581the \u2581results ."], "references": ["\u2581// \u2581 Run Benchmark s \u2581runs \u2581the \u2581benchmark ing \u2581for \u2581the \u2581given \u2581function"], "bleu": 0.31639694591005163, "rouge_l": 0.5559895833333334}
{"id": 7215, "predictions": ["\u2581// \u2581 Reader \u2581returns \u2581a \u2581reader \u2581for \u2581the \u2581file ."], "references": ["\u2581// \u2581 Reader \u2581returns \u2581the \u2581io . Reader \u2581instance \u2581for \u2581the \u2581file \u2581source"], "bleu": 0.3580150608184344, "rouge_l": 0.5947075208913649}
{"id": 6386, "predictions": ["\u2581// \u2581 Lex \u2581 concatenate s \u2581a \u2581 set \u2581of \u2581 X Item \u2581to \u2581a \u2581 slice \u2581of \u2581 X Item"], "references": ["\u2581// Lex \u2581an \u2581XPath \u2581 expr e sion \u2581on \u2581the \u2581io . Reader"], "bleu": 0.0690889519686715, "rouge_l": 0.18429003021148035}
{"id": 7423, "predictions": ["\u2581// \u2581 New AccountId \u2581creates \u2581a \u2581new \u2581 AccountId \u2581instance"], "references": ["\u2581// \u2581 New AccountId \u2581creates \u2581a \u2581new \u2581 AccountId ."], "bleu": 0.8931539818068694, "rouge_l": 0.9}
{"id": 7422, "predictions": ["\u2581// \u2581 New NodeId \u2581returns \u2581a \u2581new \u2581 NodeId \u2581 type ."], "references": ["\u2581// \u2581 New NodeId \u2581creates \u2581a \u2581new \u2581 NodeId ."], "bleu": 0.49735673561245436, "rouge_l": 0.8318181818181818}
{"id": 7757, "predictions": ["\u2581// \u2581 Concat \u2581 concatenate s \u2581the \u2581 Result \u2581into \u2581the \u2581result ."], "references": ["\u2581// \u2581 Concat \u2581adds \u2581the \u2581other \u2581result \u2581to \u2581 this \u2581result"], "bleu": 0.2044800736021839, "rouge_l": 0.507628294036061}
{"id": 6490, "predictions": ["\u2581// \u2581 LowerCase Filter \u2581filters \u2581a \u2581 filter \u2581that \u2581matches \u2581the \u2581 filter ."], "references": ["\u2581// \u2581 LowerCase Filter \u2581creates \u2581a \u2581 filter \u2581that \u2581only \u2581 get \u2581passed \u2581lowercase \u2581field \u2581names"], "bleu": 0.3667915167619415, "rouge_l": 0.5928725701943846}
{"id": 7634, "predictions": ["\u2581// \u2581Must Prepare \u2581returns \u2581a \u2581new \u2581Prepare \u2581function \u2581that \u2581panic s \u2581if \u2581the \u2581 S cp \u2581 type \u2581is \u2581invalid ."], "references": ["\u2581// \u2581Must Prepare \u2581retrieves \u2581the \u2581Prepare \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.14267030358858288, "rouge_l": 0.4168564920273349}
{"id": 6358, "predictions": ["\u2581// \u2581Parse MessageID \u2581parses \u2581a \u2581string \u2581representation \u2581of \u2581a \u2581 email \u2581string ."], "references": ["\u2581// \u2581Parse MessageID \u2581attempts \u2581to \u2581parse \u2581 s , \u2581which \u2581should \u2581be \u2581an \u2581 hex a decimal \u2581// \u2581representation \u2581of \u2581an \u2581 8 \u2581 byte \u2581message \u2581 ID ."], "bleu": 0.06635404122679839, "rouge_l": 0.3119065010956903}
{"id": 6659, "predictions": ["\u2581// \u2581 Line Reader \u2581reads \u2581a \u2581reader \u2581from \u2581the \u2581reader \u2581and \u2581returns \u2581the \u2581 chan \u2581// \u2581 chan \u2581of \u2581the \u2581reader ."], "references": ["\u2581// \u2581 Line Reader \u2581returns \u2581a \u2581channel \u2581that \u2581reads \u2581the \u2581 contents \u2581of \u2581a \u2581reader \u2581// \u2581line - by - line ."], "bleu": 0.22067731046885494, "rouge_l": 0.45454545454545453}
{"id": 7380, "predictions": ["\u2581// \u2581Validate \u2581validates \u2581the \u2581given \u2581 data \u2581and \u2581validates \u2581the \u2581 contents \u2581of \u2581the \u2581// \u2581provided \u2581 byte \u2581array ."], "references": ["\u2581// \u2581Validate \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581provided \u2581checksum \u2581does \u2581not \u2581match \u2581// \u2581the \u2581calculated \u2581checksum \u2581of \u2581the \u2581provided \u2581 data"], "bleu": 0.1330629351884775, "rouge_l": 0.3885350318471337}
{"id": 8114, "predictions": ["\u2581// \u2581 Wait \u2581waits \u2581for \u2581the \u2581 WaitGroup \u2581to \u2581 exit ."], "references": ["\u2581// \u2581 Wait \u2581until \u2581all \u2581of \u2581the \u2581 throttled \u2581goroutines \u2581have \u2581signal ed \u2581they \u2581are \u2581done ."], "bleu": 0.15756568859158712, "rouge_l": 0.4013157894736842}
{"id": 7598, "predictions": ["\u2581// \u2581Must Ipv 4 \u2581returns \u2581the \u2581 ipv 4 \u2581 IP \u2581address \u2581of \u2581the \u2581 Peer Address Ip ."], "references": ["\u2581// \u2581Must Ipv 4 \u2581retrieves \u2581the \u2581 Ipv 4 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.16830871463941022, "rouge_l": 0.44363636363636366}
{"id": 8024, "predictions": ["\u2581// \u2581check Comment \u2581checks \u2581if \u2581the \u2581given \u2581 comment \u2581is \u2581valid ."], "references": ["\u2581// \u2581 To \u2581check \u2581 this \u2581line \u2581is \u2581a \u2581whole \u2581line \u2581 comment \u2581or \u2581not ."], "bleu": 0.12109824820829695, "rouge_l": 0.3481735159817351}
{"id": 6338, "predictions": ["\u2581// \u2581 With Client IP \u2581returns \u2581a \u2581context \u2581with \u2581the \u2581given \u2581 IP \u2581address ."], "references": ["\u2581// \u2581 With Client IP \u2581returns \u2581a \u2581context \u2581which \u2581carrie s \u2581the \u2581given \u2581client \u2581 IP ."], "bleu": 0.5301121316223074, "rouge_l": 0.8034447821681862}
{"id": 8041, "predictions": ["\u2581// \u2581 New Lexer \u2581creates \u2581a \u2581new \u2581 Lexer \u2581with \u2581a \u2581given \u2581input \u2581string ."], "references": ["\u2581// \u2581 New Lexer \u2581creates \u2581a \u2581new \u2581scanner \u2581from \u2581the \u2581input"], "bleu": 0.45608395453519407, "rouge_l": 0.6329442282749675}
{"id": 7600, "predictions": ["\u2581// \u2581Must Ipv 6 \u2581returns \u2581the \u2581 ipv 6 \u2581IPv 6 \u2581address \u2581of \u2581the \u2581peer ."], "references": ["\u2581// \u2581Must Ipv 6 \u2581retrieves \u2581the \u2581 Ipv 6 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.15338843552704398, "rouge_l": 0.42230769230769233}
{"id": 6520, "predictions": ["\u2581// \u2581Add Result f \u2581adds \u2581a \u2581 status \u2581 status \u2581to \u2581the \u2581 status \u2581of \u2581the \u2581check ."], "references": ["\u2581// \u2581Add Result f \u2581function s \u2581as \u2581Add Result , \u2581but \u2581takes \u2581a \u2581 printf - style \u2581 format \u2581// \u2581string \u2581and \u2581arguments ."], "bleu": 0.16631344562576664, "rouge_l": 0.3713850837138508}
{"id": 6966, "predictions": ["\u2581// \u2581Set DisplayName \u2581 set \u2581 name"], "references": ["\u2581// \u2581Set DisplayName \u2581sets \u2581virtual \u2581machine \u2581 name ."], "bleu": 0.30895757752065417, "rouge_l": 0.6112224448897796}
{"id": 8014, "predictions": ["\u2581// \u2581 FromURL \u2581 - \u2581 get \u2581a \u2581string \u2581from \u2581a \u2581 URL"], "references": ["\u2581// \u2581 FromURL \u2581converts \u2581the \u2581given \u2581 URL \u2581to \u2581a \u2581folder \u2581 name"], "bleu": 0.22718709780542312, "rouge_l": 0.4615384615384617}
{"id": 8015, "predictions": ["\u2581// \u2581 To URL \u2581converts \u2581a \u2581 URL \u2581to \u2581a \u2581 URL"], "references": ["\u2581// \u2581 To URL \u2581converts \u2581the \u2581given \u2581folder \u2581to \u2581an \u2581 URL"], "bleu": 0.4408231875586727, "rouge_l": 0.6666666666666666}
{"id": 7573, "predictions": ["\u2581// \u2581Must Dead Entry \u2581returns \u2581the \u2581 Block Key \u2581for \u2581the \u2581given \u2581 Block . \u2581If \u2581the \u2581// \u2581 Block \u2581is \u2581not \u2581 Dead , \u2581it \u2581returns \u2581the \u2581 empty"], "references": ["\u2581// \u2581Must Dead Entry \u2581retrieves \u2581the \u2581 Dead Entry \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.19189570068047393, "rouge_l": 0.4066666666666666}
{"id": 6550, "predictions": ["\u2581// \u2581 NewClient by Token \u2581creates \u2581a \u2581client \u2581for \u2581 talk ing \u2581to \u2581 this \u2581 token"], "references": ["\u2581// \u2581 NewClient by Token \u2581is \u2581a \u2581 constructor \u2581for \u2581 Client \u2581object \u2581using \u2581 bearer \u2581tokens \u2581for \u2581// \u2581authentication \u2581instead \u2581of \u2581 username , \u2581password"], "bleu": 0.1897918330305524, "rouge_l": 0.4481998530492285}
{"id": 6864, "predictions": ["\u2581// \u2581 New Outgoing UserProfile Photos Request \u2581returns \u2581a \u2581new \u2581 Outgoing UserProfile \u2581for \u2581the \u2581given \u2581user"], "references": ["\u2581// \u2581 New Outgoing UserProfile Photos Request \u2581creates \u2581a \u2581new \u2581request \u2581for \u2581a \u2581users \u2581// \u2581profile \u2581 photos ."], "bleu": 0.39561384915756864, "rouge_l": 0.5500450856627592}
{"id": 7697, "predictions": ["\u2581// \u2581 New Auth Controller \u2581creates \u2581a \u2581new \u2581 Auth Controller"], "references": ["\u2581// New Auth Controller \u2581constructs \u2581new \u2581 Auth Controller"], "bleu": 0.4366835442847812, "rouge_l": 0.8146911519198664}
{"id": 8032, "predictions": ["\u2581// \u2581 Claim er \u2581is \u2581a \u2581 Token Opt \u2581that \u2581sets \u2581the \u2581claims \u2581for \u2581the \u2581 token ."], "references": ["\u2581// \u2581 Claim er \u2581is \u2581responsible \u2581for \u2581transform ing \u2581a \u2581standard \u2581claims \u2581object \u2581into \u2581a \u2581// \u2581custom \u2581one ."], "bleu": 0.26807825559890497, "rouge_l": 0.43033509700176364}
{"id": 7708, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Table ."], "references": ["\u2581// \u2581 New \u2581 - \u2581Creates \u2581a \u2581new \u2581 table ."], "bleu": 0.3145413833897494, "rouge_l": 0.6876006441223833}
{"id": 6867, "predictions": ["\u2581// \u2581 New Outgoing Callback QueryResponse \u2581returns \u2581a \u2581new \u2581 Outgoing Callback \u2581callback"], "references": ["\u2581// \u2581 New Outgoing Callback QueryResponse \u2581creates \u2581a \u2581response \u2581to \u2581a \u2581callback \u2581query ."], "bleu": 0.42637068891603985, "rouge_l": 0.5886610373944512}
{"id": 7526, "predictions": ["\u2581// \u2581Must Payment Result \u2581returns \u2581a \u2581 Payment Result \u2581if \u2581it \u2581is \u2581 empty ."], "references": ["\u2581// \u2581Must Payment Result \u2581retrieves \u2581the \u2581 Payment Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.17398239655714115, "rouge_l": 0.5262745098039217}
{"id": 7524, "predictions": ["\u2581// \u2581Must CreateAccount Result \u2581returns \u2581an \u2581account \u2581value \u2581for \u2581a \u2581specific \u2581 CreateAccount \u2581document ."], "references": ["\u2581// \u2581Must CreateAccount Result \u2581retrieves \u2581the \u2581 CreateAccount Result \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.14395959925184124, "rouge_l": 0.3349019607843138}
{"id": 7980, "predictions": ["\u2581// \u2581 DefaultConfig \u2581returns \u2581the \u2581default \u2581configuration \u2581for \u2581the \u2581 config ."], "references": ["\u2581// \u2581 DefaultConfig \u2581 - \u2581 N itr o \u2581configuration"], "bleu": 0.21401603033752975, "rouge_l": 0.3696969696969697}
{"id": 7575, "predictions": ["\u2581// \u2581 New Transaction History Entry Ext \u2581returns \u2581a \u2581new \u2581transaction \u2581 history \u2581entry \u2581for \u2581the \u2581given \u2581// \u2581value \u2581and \u2581value ."], "references": ["\u2581// \u2581 New Transaction History Entry Ext \u2581creates \u2581a \u2581new \u2581 Transaction History Entry Ext ."], "bleu": 0.341191474032336, "rouge_l": 0.5959147424511545}
{"id": 7571, "predictions": ["\u2581// \u2581Must Live Entry \u2581returns \u2581the \u2581entry ' s \u2581 Block Entry , \u2581or \u2581an \u2581error \u2581if \u2581the \u2581entry \u2581was \u2581not \u2581found ."], "references": ["\u2581// \u2581Must Live Entry \u2581retrieves \u2581the \u2581 Live Entry \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.18128261233695467, "rouge_l": 0.49627118644067797}
{"id": 7306, "predictions": ["\u2581// \u2581Ignore Net Op Error \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 net Op Error \u2581error ."], "references": ["\u2581// \u2581Ignore Net Op Error \u2581returns \u2581true \u2581when \u2581the \u2581passed \u2581error \u2581is \u2581a \u2581 net . Op Error \u2581with \u2581// \u2581error \u2581\" use \u2581of \u2581closed \u2581network \u2581connection \" ."], "bleu": 0.33565849210798865, "rouge_l": 0.6941097724230254}
{"id": 7436, "predictions": ["\u2581// \u2581 New Trust Line Entry Ext \u2581creates \u2581a \u2581new \u2581trust Line Entry \u2581entry"], "references": ["\u2581// \u2581 New Trust Line Entry Ext \u2581creates \u2581a \u2581new \u2581 Trust Line Entry Ext ."], "bleu": 0.6490663456299871, "rouge_l": 0.7904967602591793}
{"id": 7927, "predictions": ["\u2581// \u2581 Subscriber \u2581returns \u2581a \u2581subscriber \u2581 \u2581subscriber \u2581for \u2581the \u2581given \u2581 email ."], "references": ["\u2581// \u2581 Subscriber \u2581create \u2581a \u2581 Subscriber \u2581 type \u2581from \u2581a \u2581 Mal ing List , \u2581with \u2581the \u2581given \u2581 email \u2581// \u2581and \u2581 name"], "bleu": 0.15857800775727895, "rouge_l": 0.4392000000000001}
{"id": 6976, "predictions": ["\u2581// \u2581 Stack \u2581prints \u2581the \u2581stack \u2581to \u2581the \u2581stack ."], "references": ["\u2581// \u2581 Stack \u2581logs \u2581the \u2581error \u2581err \u2581with \u2581the \u2581stack \u2581 trace ."], "bleu": 0.22211370348624584, "rouge_l": 0.5947075208913649}
{"id": 7451, "predictions": ["\u2581// \u2581Must CreateAccount Op \u2581returns \u2581an \u2581update \u2581operation \u2581for \u2581the \u2581 authorizer"], "references": ["\u2581// \u2581Must CreateAccount Op \u2581retrieves \u2581the \u2581 CreateAccount Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.11257444488053998, "rouge_l": 0.305}
{"id": 7453, "predictions": ["\u2581// \u2581Must Payment Op \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581operation \u2581is \u2581not \u2581 Payment Op ."], "references": ["\u2581// \u2581Must Payment Op \u2581retrieves \u2581the \u2581 Payment Op \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.21555533179942715, "rouge_l": 0.4692307692307693}
{"id": 6967, "predictions": ["\u2581// \u2581Set Annotation \u2581sets \u2581the \u2581annotation \u2581to \u2581the \u2581 VM ."], "references": ["\u2581// \u2581Set Annotation \u2581sets \u2581annotations \u2581for \u2581the \u2581virtual \u2581machine ."], "bleu": 0.3448444257953326, "rouge_l": 0.5763779527559055}
{"id": 7216, "predictions": ["\u2581// \u2581 Bytes \u2581returns \u2581the \u2581bytes \u2581of \u2581the \u2581file ."], "references": ["\u2581// \u2581 Bytes \u2581returns \u2581the \u2581bytes \u2581in \u2581 t e h \u2581template \u2581file"], "bleu": 0.43711747430744424, "rouge_l": 0.5947075208913649}
{"id": 7397, "predictions": ["\u2581// \u2581 Mutate Set Options \u2581sets \u2581the \u2581 set \u2581options \u2581for \u2581the \u2581master Weight"], "references": ["\u2581// \u2581 Mutate Set Options \u2581for \u2581 Master Weight \u2581sets \u2581the \u2581Set Options Op ' s \u2581 Master Weight \u2581field"], "bleu": 0.2568733890448442, "rouge_l": 0.5130841121495328}
{"id": 7617, "predictions": ["\u2581// \u2581Must Tx Set \u2581returns \u2581the \u2581 set \u2581of \u2581 this \u2581transaction \u2581 set ."], "references": ["\u2581// \u2581Must Tx Set \u2581retrieves \u2581the \u2581 Tx Set \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.172761392028045, "rouge_l": 0.4305882352941176}
{"id": 7611, "predictions": ["\u2581// \u2581Must Dont Have \u2581returns \u2581the \u2581default \u2581value \u2581for \u2581 validating \u2581if \u2581it \u2581is \u2581not \u2581 impossible ."], "references": ["\u2581// \u2581Must Dont Have \u2581retrieves \u2581the \u2581 Dont Have \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.193979169841197, "rouge_l": 0.49703703703703705}
{"id": 6474, "predictions": ["\u2581// \u2581 With Token Func \u2581returns \u2581a \u2581 Token Credentials \u2581that \u2581uses \u2581the \u2581given \u2581 token Func \u2581// \u2581and \u2581returns \u2581a \u2581 Token Credentials \u2581that \u2581will \u2581 set \u2581the \u2581"], "references": ["\u2581// \u2581 With Token Func \u2581returns \u2581 Token Credentials \u2581that \u2581execute \u2581the \u2581 token Func \u2581on \u2581each \u2581request \u2581// \u2581The \u2581value \u2581of \u2581 v \u2581sent \u2581to \u2581the \u2581 token Fun"], "bleu": 0.33150414660895594, "rouge_l": 0.6}
{"id": 6279, "predictions": ["\u2581// \u2581 ID \u2581returns \u2581the \u2581 ID \u2581of \u2581the \u2581reference"], "references": ["\u2581// \u2581 ID \u2581of \u2581the \u2581reference"], "bleu": 0.5310725349788701, "rouge_l": 0.7854077253218884}
{"id": 7491, "predictions": ["\u2581// \u2581Must No Issuer \u2581returns \u2581the \u2581 Asset \u2581 type \u2581for \u2581the \u2581 type \u2581of \u2581the \u2581 type"], "references": ["\u2581// \u2581Must No Issuer \u2581retrieves \u2581the \u2581 No Issuer \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.16152481884552053, "rouge_l": 0.4066666666666666}
{"id": 7096, "predictions": ["\u2581// \u2581 With MkdirAll \u2581returns \u2581a \u2581 Option \u2581that \u2581sets \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581directory ."], "references": ["\u2581// \u2581 With BaseDir \u2581sets \u2581the \u2581directory \u2581in \u2581which \u2581template \u2581files \u2581// \u2581are \u2581stored ."], "bleu": 0.1619557012853241, "rouge_l": 0.43131313131313137}
{"id": 6832, "predictions": ["\u2581// \u2581 Null Notification \u2581creates \u2581a \u2581new \u2581 G Notifier ."], "references": ["\u2581// \u2581 Null Notification \u2581is \u2581the \u2581builder \u2581for \u2581tests \u2581where \u2581no \u2581side \u2581 effects \u2581are \u2581desired"], "bleu": 0.21061045684478352, "rouge_l": 0.3584018801410106}
{"id": 6742, "predictions": ["\u2581// \u2581 Trigger Incident Key With Details \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 structured \u2581 key \u2581// \u2581for \u2581the \u2581 status \u2581 key ."], "references": ["\u2581// \u2581 Trigger Incident Key With Details \u2581triggers \u2581an \u2581 incident \u2581using \u2581the \u2581default \u2581client \u2581// \u2581with \u2581a \u2581given \u2581 incident \u2581 key \u2581only \u2581if \u2581that \u2581 incident \u2581has \u2581been"], "bleu": 0.27011662223713945, "rouge_l": 0.45185185185185195}
{"id": 7421, "predictions": ["\u2581// \u2581Must Ed 25519 \u2581returns \u2581the \u2581 Ed 25519 \u2581 key \u2581for \u2581the \u2581 PublicKey"], "references": ["\u2581// \u2581Must Ed 25519 \u2581retrieves \u2581the \u2581 Ed 25519 \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.20703567376576862, "rouge_l": 0.47843137254901963}
{"id": 6513, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 empty \u2581 Interface ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Random , \u2581in \u2581most \u2581cases \u2581you \u2581can \u2581also \u2581just \u2581use \u2581the \u2581global \u2581func s"], "bleu": 0.24706432794919053, "rouge_l": 0.414161008729389}
{"id": 7416, "predictions": ["\u2581// \u2581Must Extract \u2581is \u2581like \u2581Extract \u2581but \u2581panic s \u2581if \u2581the \u2581error \u2581is \u2581not \u2581found ."], "references": ["\u2581// \u2581Must Extract \u2581be have s \u2581as \u2581Extract , \u2581but \u2581panic s \u2581if \u2581an \u2581error \u2581occurs ."], "bleu": 0.29128493630228175, "rouge_l": 0.6027667984189723}
{"id": 6350, "predictions": ["\u2581// \u2581 Start Consumer \u2581starts \u2581a \u2581consumer \u2581with \u2581the \u2581given \u2581consumer \u2581configuration ."], "references": ["\u2581// \u2581 Start Consumer \u2581creates \u2581and \u2581starts \u2581 consuming \u2581from \u2581 NS Q \u2581right \u2581away . \u2581This \u2581is \u2581the \u2581// \u2581 fastest \u2581way \u2581to \u2581 get \u2581up \u2581and \u2581running ."], "bleu": 0.08086124506504899, "rouge_l": 0.30391459074733096}
{"id": 6375, "predictions": ["\u2581// \u2581 Funcs \u2581returns \u2581a \u2581 Template \u2581template \u2581with \u2581the \u2581given \u2581function \u2581 map ."], "references": ["\u2581// \u2581 Funcs \u2581 set \u2581 helper \u2581function s \u2581for \u2581template \u2581with \u2581default \u2581\" application \" \u2581 layout ."], "bleu": 0.15844917324845162, "rouge_l": 0.46081208687440983}
{"id": 7657, "predictions": ["\u2581// \u2581 Read \u2581reads \u2581a \u2581 GeoJSON \u2581 D \u2581from \u2581a \u2581reader ."], "references": ["\u2581// \u2581 Read \u2581a \u2581serialized \u2581 CH D ."], "bleu": 0.21142141714303078, "rouge_l": 0.657935285053929}
{"id": 6478, "predictions": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581the \u2581 Text Unmarshaler \u2581interface \u2581for \u2581 Type ."], "references": ["\u2581// \u2581 Unmarshal Text \u2581implements \u2581 Text Un mar s he ler"], "bleu": 0.3641410562218426, "rouge_l": 0.5460358056265985}
{"id": 7413, "predictions": ["\u2581// \u2581Set Native \u2581sets \u2581the \u2581 Asset Asset \u2581 type"], "references": ["\u2581// \u2581Set Native \u2581overwrite s \u2581` a ` \u2581with \u2581the \u2581native \u2581asset \u2581 type"], "bleu": 0.19437836223653274, "rouge_l": 0.48541114058355433}
{"id": 8117, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581a \u2581 structured \u2581error \u2581message \u2581with \u2581the \u2581given \u2581error \u2581 status ."], "references": ["\u2581// \u2581 Error \u2581writes \u2581the \u2581given \u2581HTTP \u2581 status \u2581to \u2581the \u2581current \u2581 ResponseWriter"], "bleu": 0.19923405658137924, "rouge_l": 0.4723451327433628}
{"id": 7963, "predictions": ["\u2581// \u2581Make Buf \u2581creates \u2581a \u2581new \u2581 Action Buffer ."], "references": ["\u2581// \u2581Make Buf \u2581creates \u2581an \u2581action \u2581buffer"], "bleu": 0.35084396956386854, "rouge_l": 0.48605577689243035}
{"id": 8083, "predictions": ["\u2581// \u2581 NewDecoder Size \u2581returns \u2581a \u2581 Decoder \u2581that \u2581will \u2581 set \u2581the \u2581 size \u2581of \u2581the \u2581given \u2581// \u2581 size ."], "references": ["\u2581// \u2581 NewDecoder Size \u2581creates \u2581a \u2581new \u2581 Decoder \u2581using \u2581a \u2581 type \u2581 Registry , \u2581a \u2581max \u2581 size \u2581and \u2581an \u2581io . Reader ."], "bleu": 0.18770920735501118, "rouge_l": 0.4925975773889637}
{"id": 8105, "predictions": ["\u2581// \u2581 Is \u2581returns \u2581true \u2581if \u2581the \u2581 Tuple Type \u2581is \u2581a \u2581 type \u2581of \u2581 type ."], "references": ["\u2581// \u2581 Is \u2581determines \u2581if \u2581a \u2581tuple \u2581is \u2581a \u2581certain \u2581 type ."], "bleu": 0.209734257913107, "rouge_l": 0.5980392156862745}
{"id": 7053, "predictions": ["\u2581// \u2581 HandleFunc \u2581registers \u2581a \u2581handler \u2581for \u2581the \u2581 router ."], "references": ["\u2581// \u2581 HandleFunc \u2581specifies \u2581a \u2581pair \u2581of \u2581handler \u2581and \u2581 view \u2581to \u2581handle \u2581// \u2581the \u2581request \u2581 w itch \u2581matching \u2581 router ."], "bleu": 0.11260117078286856, "rouge_l": 0.4977334542157752}
{"id": 8113, "predictions": ["\u2581// \u2581Add \u2581 increments \u2581the \u2581 WaitGroup ' s \u2581 exit \u2581 code ."], "references": ["\u2581// \u2581Add \u2581will \u2581block \u2581until \u2581the \u2581number \u2581of \u2581goroutines \u2581being \u2581 throttled \u2581// \u2581has \u2581fall en \u2581below \u2581the \u2581 throttle ."], "bleu": 0.09650984307507958, "rouge_l": 0.3309222423146474}
{"id": 7977, "predictions": ["\u2581// \u2581 Unregister Handler \u2581removes \u2581the \u2581handler \u2581from \u2581the \u2581 controller ."], "references": ["\u2581// \u2581 Unregister s \u2581 Handler \u2581from \u2581the \u2581 Event Controller . \u2581This \u2581is \u2581 idempotent \u2581where \u2581if \u2581a \u2581 Handler \u2581is \u2581// \u2581not \u2581registered \u2581no \u2581error \u2581is \u2581returned ."], "bleu": 0.0664526643775935, "rouge_l": 0.3536231884057971}
{"id": 7933, "predictions": ["\u2581// \u2581 M alloc \u2581 - \u2581 allocate s \u2581a \u2581new \u2581pointer \u2581to \u2581a \u2581new \u2581 unsafe . Pointer ."], "references": ["\u2581// \u2581 M alloc \u2581implements \u2581 C \u2581like \u2581memory \u2581 allocator"], "bleu": 0.18493046910349434, "rouge_l": 0.40848214285714285}
{"id": 6548, "predictions": ["\u2581// \u2581Set ProjectConfig \u2581sets \u2581the \u2581project \u2581 config \u2581for \u2581the \u2581project ."], "references": ["\u2581// \u2581Set ProjectConfig \u2581replaces \u2581the \u2581configuration \u2581of \u2581the \u2581named \u2581project ."], "bleu": 0.24712442545253582, "rouge_l": 0.6135057471264368}
{"id": 7293, "predictions": ["\u2581// \u2581 Executable Folder \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581executable \u2581folder ."], "references": ["\u2581// \u2581Returns \u2581same \u2581 path \u2581as \u2581 Executable , \u2581returns \u2581just \u2581the \u2581folder \u2581// \u2581 path . \u2581 Excludes \u2581the \u2581executable \u2581 name ."], "bleu": 0.0959172097516456, "rouge_l": 0.5130361648444071}
{"id": 6341, "predictions": ["\u2581// \u2581 Start Producer \u2581creates \u2581a \u2581producer \u2581from \u2581a \u2581producer"], "references": ["\u2581// \u2581 Start Producer \u2581starts \u2581and \u2581returns \u2581a \u2581new \u2581producer \u2581 p , \u2581configured \u2581with \u2581the \u2581// \u2581variables \u2581from \u2581the \u2581 config \u2581parameter , \u2581or \u2581returning \u2581an \u2581non - nil"], "bleu": 0.05340169573435527, "rouge_l": 0.32105263157894737}
{"id": 7232, "predictions": ["\u2581// \u2581 Append Op \u2581adds \u2581a \u2581new \u2581 i \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Append Op \u2581is \u2581an \u2581utility \u2581method \u2581to \u2581create \u2581AND \u2581 append \u2581a \u2581new \u2581op \u2581 code \u2581to \u2581the \u2581// \u2581current \u2581list \u2581of \u2581op \u2581codes"], "bleu": 0.14071338487055604, "rouge_l": 0.426905132192846}
{"id": 7103, "predictions": ["\u2581// \u2581 With Functions \u2581sets \u2581the \u2581function \u2581for \u2581each \u2581 Func \u2581that \u2581will \u2581be \u2581executed \u2581on \u2581the \u2581// \u2581provided \u2581function ."], "references": ["\u2581// \u2581 With Functions \u2581adds \u2581function \u2581 map \u2581to \u2581 templates ."], "bleu": 0.18185234853618293, "rouge_l": 0.4461859979101358}
{"id": 7555, "predictions": ["\u2581// \u2581 New Stellar Value Ext \u2581creates \u2581a \u2581new \u2581 Stellar Value Ext \u2581object ."], "references": ["\u2581// \u2581 New Stellar Value Ext \u2581creates \u2581a \u2581new \u2581 Stellar Value Ext ."], "bleu": 0.8761560783209453, "rouge_l": 0.9715585893060297}
{"id": 7556, "predictions": ["\u2581// \u2581 New Ledger Header Ext \u2581creates \u2581a \u2581new \u2581 ledger \u2581 Header \u2581for \u2581the \u2581given \u2581 v ."], "references": ["\u2581// \u2581 New Ledger Header Ext \u2581creates \u2581a \u2581new \u2581 Ledger Header Ext ."], "bleu": 0.532650950581161, "rouge_l": 0.7477017364657813}
{"id": 7480, "predictions": ["\u2581// \u2581Must Ret Hash \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581 type \u2581of \u2581the \u2581 type \u2581that \u2581is \u2581not \u2581 set ."], "references": ["\u2581// \u2581Must Ret Hash \u2581retrieves \u2581the \u2581 Ret Hash \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.2994444686615303, "rouge_l": 0.5136842105263157}
{"id": 7254, "predictions": ["\u2581// \u2581Default VM \u2581is \u2581a \u2581convenience \u2581method \u2581to \u2581create \u2581a \u2581 VM ."], "references": ["\u2581// \u2581Default VM \u2581sets \u2581up \u2581and \u2581assigns \u2581the \u2581default \u2581 VM \u2581to \u2581be \u2581used \u2581by \u2581 X s late"], "bleu": 0.1384975433204608, "rouge_l": 0.3022794846382557}
{"id": 7057, "predictions": ["\u2581// \u2581 Start Session \u2581starts \u2581a \u2581session \u2581with \u2581the \u2581given \u2581 Session Func ."], "references": ["\u2581// \u2581 Start Session \u2581 init a ill ize s \u2581a \u2581session \u2581context . \u2581// \u2581This \u2581function \u2581should \u2581be \u2581called \u2581in \u2581a \u2581implementation \u2581// \u2581of \u2581 pos sum . HandleFunc"], "bleu": 0.09608783695135598, "rouge_l": 0.3412587412587413}
{"id": 6483, "predictions": ["\u2581// \u2581 With Filters \u2581returns \u2581a \u2581new \u2581 filter \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581 filter \u2581// \u2581for \u2581each \u2581 filter ."], "references": ["\u2581// \u2581 With Filter \u2581creates \u2581a \u2581new \u2581 Filtered \u2581that \u2581will \u2581use \u2581the \u2581extra \u2581filters"], "bleu": 0.13927409128834833, "rouge_l": 0.4188841201716738}
{"id": 7220, "predictions": ["\u2581// \u2581 Current Frame \u2581returns \u2581the \u2581current \u2581frame \u2581of \u2581the \u2581current \u2581frame ."], "references": ["\u2581// \u2581 Current Frame \u2581returns \u2581the \u2581frame \u2581currently \u2581at \u2581the \u2581 top \u2581of \u2581the \u2581frame \u2581stack"], "bleu": 0.39948184491239747, "rouge_l": 0.6770255271920089}
{"id": 6473, "predictions": ["\u2581// \u2581 With Insecure \u2581sets \u2581the \u2581 token \u2581credentials \u2581for \u2581the \u2581 token ."], "references": ["\u2581// \u2581 With Insecure \u2581returns \u2581a \u2581copy \u2581of \u2581the \u2581 Token Credentials , \u2581allowing \u2581 insecure \u2581transport"], "bleu": 0.23613139558382978, "rouge_l": 0.4438669438669438}
{"id": 7805, "predictions": ["\u2581// \u2581Get Line Size \u2581returns \u2581the \u2581line \u2581 size \u2581of \u2581the \u2581line \u2581of \u2581the \u2581line \u2581of \u2581the \u2581line"], "references": ["\u2581// \u2581Get Line Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 sap in \u2581for \u2581a \u2581specified \u2581 floor \u2581and \u2581line ."], "bleu": 0.38005091615616293, "rouge_l": 0.5563847429519072}
{"id": 7438, "predictions": ["\u2581// \u2581 New Offer Entry Ext \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Offer Entry Ext ."], "references": ["\u2581// \u2581 New Offer Entry Ext \u2581creates \u2581a \u2581new \u2581 Offer Entry Ext ."], "bleu": 0.7160350546947922, "rouge_l": 0.9192680301399355}
{"id": 6457, "predictions": ["\u2581// \u2581 GRPC Code \u2581returns \u2581a \u2581 GRPC \u2581 code \u2581for \u2581a \u2581 GRPC \u2581error ."], "references": ["\u2581// \u2581 GRPC Code \u2581returns \u2581the \u2581corresponding \u2581http \u2581 status \u2581 code \u2581from \u2581an \u2581error"], "bleu": 0.33507040795147514, "rouge_l": 0.5840425531914895}
{"id": 7791, "predictions": ["\u2581// \u2581 decode Yaml \u2581decodes \u2581 v \u2581into \u2581 v ."], "references": ["\u2581// \u2581 decode Yaml \u2581takes \u2581a \u2581reader \u2581to \u2581a \u2581YAML \u2581file \u2581and \u2581unmarshal s \u2581it \u2581to \u2581the \u2581given \u2581struct ."], "bleu": 0.14640458033296533, "rouge_l": 0.3065326633165829}
{"id": 7340, "predictions": ["\u2581// \u2581 Update Offer \u2581updates \u2581an \u2581 Offer Offer ."], "references": ["\u2581// \u2581 Update Offer \u2581updates \u2581an \u2581existing \u2581offer"], "bleu": 0.5706745777055999, "rouge_l": 0.6802973977695167}
{"id": 6667, "predictions": ["\u2581// \u2581 HomeDir \u2581returns \u2581the \u2581 home \u2581 home \u2581directory"], "references": ["\u2581// \u2581 HomeDir \u2581returns \u2581the \u2581 home \u2581directory \u2581of \u2581the \u2581user \u2581that \u2581 owns \u2581the \u2581current \u2581process ."], "bleu": 0.34647557718139516, "rouge_l": 0.5434298440979956}
{"id": 7587, "predictions": ["\u2581// \u2581Must Removed \u2581returns \u2581the \u2581 ledger \u2581 key \u2581for \u2581the \u2581 ledger \u2581 key"], "references": ["\u2581// \u2581Must Removed \u2581retrieves \u2581the \u2581 Removed \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.11477587501909702, "rouge_l": 0.35494596841230264}
{"id": 7583, "predictions": ["\u2581// \u2581Must Created \u2581returns \u2581the \u2581 ledger Entry \u2581for \u2581the \u2581 ledger"], "references": ["\u2581// \u2581Must Created \u2581retrieves \u2581the \u2581 Created \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.09881261609736544, "rouge_l": 0.3785460992907802}
{"id": 7585, "predictions": ["\u2581// \u2581Must Updated \u2581returns \u2581the \u2581 ledger \u2581 data \u2581for \u2581the \u2581 Ledger Entry Change"], "references": ["\u2581// \u2581Must Updated \u2581retrieves \u2581the \u2581 Updated \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.11477587501909702, "rouge_l": 0.35494596841230264}
{"id": 6934, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581archive \u2581file ."], "references": ["\u2581// \u2581 New \u2581archive \u2581// \u2581If \u2581the \u2581ex ent ions \u2581of \u2581the \u2581target \u2581file \u2581is \u2581 . zip , \u2581the \u2581archive \u2581will \u2581be \u2581in \u2581the \u2581zip \u2581// \u2581 format ,"], "bleu": 0.02929887179387845, "rouge_l": 0.28045977011494255}
{"id": 7625, "predictions": ["\u2581// \u2581Must Envelope \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 S 3 \u2581message \u2581// \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581Must Envelope \u2581retrieves \u2581the \u2581 Envelope \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.13541215405468016, "rouge_l": 0.36746987951807225}
{"id": 7434, "predictions": ["\u2581// \u2581 New Account Entry Ext \u2581creates \u2581a \u2581new \u2581account Entry \u2581entry ."], "references": ["\u2581// \u2581 New Account Entry Ext \u2581creates \u2581a \u2581new \u2581 Account Entry Ext ."], "bleu": 0.6558950419449827, "rouge_l": 0.8094089264173704}
{"id": 7439, "predictions": ["\u2581// \u2581 New Data Entry Ext \u2581creates \u2581a \u2581new \u2581 Data Entry Ext \u2581object ."], "references": ["\u2581// \u2581 New Data Entry Ext \u2581creates \u2581a \u2581new \u2581 Data Entry Ext ."], "bleu": 0.8761560783209453, "rouge_l": 0.9715585893060297}
{"id": 6839, "predictions": ["\u2581// \u2581 Is s u ing Certificate URL \u2581returns \u2581an \u2581 Option \u2581that \u2581sets \u2581the \u2581 URL \u2581to \u2581the \u2581 Is s u ing Certificate URL ."], "references": ["\u2581// \u2581 Is s u ing Certificate URL \u2581is \u2581an \u2581 Option \u2581for \u2581setting \u2581the \u2581identity ' s \u2581certificate ' s \u2581// \u2581 Is s u ing Certificate URL ."], "bleu": 0.5175275855616804, "rouge_l": 0.6951566951566951}
{"id": 7441, "predictions": ["\u2581// \u2581 New Ledger Entry Ext \u2581creates \u2581a \u2581new \u2581 ledger \u2581 Entry \u2581for \u2581the \u2581given \u2581 data \u2581and \u2581value ."], "references": ["\u2581// \u2581 New Ledger Entry Ext \u2581creates \u2581a \u2581new \u2581 Ledger Entry Ext ."], "bleu": 0.4805212179017457, "rouge_l": 0.7113702623906706}
{"id": 7936, "predictions": ["\u2581// \u2581 Free OS Memory \u2581returns \u2581the \u2581memory \u2581 operating \u2581system ."], "references": ["\u2581// \u2581 Free OS Memory \u2581force s \u2581 je malloc \u2581to \u2581 scrub \u2581memory \u2581and \u2581release \u2581back \u2581to \u2581 OS"], "bleu": 0.20996714057681126, "rouge_l": 0.41862745098039217}
{"id": 7924, "predictions": ["\u2581// \u2581 Implements \u2581the \u2581 Error \u2581interface ."], "references": ["\u2581// \u2581Get \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581wrapper \u2581error , \u2581// \u2581or \u2581an \u2581 empty \u2581string \u2581if \u2581wrapped Err \u2581is \u2581nil"], "bleu": 0.03755268705124013, "rouge_l": 0.1914225941422594}
{"id": 6403, "predictions": ["\u2581// \u2581Get Token \u2581returns \u2581the \u2581 token \u2581of \u2581the \u2581node ."], "references": ["\u2581// Get Token \u2581returns \u2581the \u2581 xml . Token \u2581representation \u2581of \u2581the \u2581node"], "bleu": 0.3738036744304997, "rouge_l": 0.6567967698519516}
{"id": 7554, "predictions": ["\u2581// \u2581 New Transaction Result Ext \u2581returns \u2581a \u2581transaction \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581result \u2581of \u2581the \u2581result ."], "references": ["\u2581// \u2581 New Transaction Result Ext \u2581creates \u2581a \u2581new \u2581 Transaction Result Ext ."], "bleu": 0.2619087743398409, "rouge_l": 0.5088044485634847}
{"id": 6492, "predictions": ["\u2581// \u2581 New Single Point Writer \u2581returns \u2581a \u2581new \u2581 Single Point Writer \u2581that \u2581will \u2581be \u2581used \u2581to \u2581 write \u2581// \u2581the \u2581 data \u2581to \u2581the \u2581given \u2581 C Point"], "references": ["\u2581// \u2581 New Single Point Writer \u2581creates \u2581new \u2581 Single Point Writer"], "bleu": 0.2955261230535602, "rouge_l": 0.5676818950930625}
{"id": 7038, "predictions": ["\u2581// \u2581 Wrap HTTP HandlerFunc \u2581returns \u2581a \u2581new \u2581handler \u2581for \u2581 f \u2581with \u2581the \u2581given \u2581http . HandlerFunc"], "references": ["\u2581// \u2581 Wrap HTTP HandlerFunc \u2581 wraps \u2581http . HandlerFunc \u2581in \u2581 pos sum . HandlerFunc . \u2581// \u2581See \u2581 pprof . go ."], "bleu": 0.23355208295974578, "rouge_l": 0.4178082191780822}
{"id": 6295, "predictions": ["\u2581// \u2581 Write Resource Header \u2581writes \u2581a \u2581header \u2581header \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Write Resource Header \u2581writes \u2581the \u2581resource \u2581header ."], "bleu": 0.47275266063115623, "rouge_l": 0.7124087591240876}
{"id": 7793, "predictions": ["\u2581// \u2581 New Diff Cmd \u2581returns \u2581a \u2581new \u2581 Diff Cmd \u2581that \u2581can \u2581be \u2581used \u2581to \u2581release \u2581a \u2581// \u2581 Diff Cmd ."], "references": ["\u2581// \u2581 New Diff Cmd \u2581creates \u2581a \u2581new \u2581 Diff Cmd \u2581instance ."], "bleu": 0.3489214645008508, "rouge_l": 0.6433365292425695}
{"id": 7669, "predictions": ["\u2581// \u2581 Zoom All \u2581returns \u2581all \u2581 zoom s \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Zoom All \u2581 zoom s \u2581to \u2581the \u2581maximum \u2581extent ."], "bleu": 0.3479159475128446, "rouge_l": 0.7020460358056267}
{"id": 7962, "predictions": ["\u2581// \u2581 Free Node \u2581 releases \u2581the \u2581node \u2581from \u2581the \u2581list \u2581of \u2581 active \u2581nodes ."], "references": ["\u2581// \u2581 Free Node \u2581 deallocate s \u2581the \u2581skip list \u2581node \u2581memory"], "bleu": 0.30277029197532096, "rouge_l": 0.5132211538461539}
{"id": 7629, "predictions": ["\u2581// \u2581 getSignature For Switch \u2581implements \u2581 Authenticated . Converter For Switch"], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Authenticated Message"], "bleu": 0.06802593162663181, "rouge_l": 0.305}
{"id": 7592, "predictions": ["\u2581// \u2581Must Operations \u2581returns \u2581the \u2581 set \u2581of \u2581 items \u2581in \u2581the \u2581transaction ."], "references": ["\u2581// \u2581Must Operations \u2581retrieves \u2581the \u2581 Operations \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.12358754831123009, "rouge_l": 0.3624787775891341}
{"id": 6163, "predictions": ["\u2581// \u2581 Server Template Multi Cloud Image Locator \u2581returns \u2581a \u2581 Server Template Multi \u2581instance \u2581of \u2581// \u2581 api Template ."], "references": ["\u2581// \u2581 Server Template Multi Cloud Image Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3892904392414698, "rouge_l": 0.5901495162708883}
{"id": 6320, "predictions": ["\u2581// \u2581Get Action \u2581returns \u2581the \u2581action \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581Get Action \u2581returns \u2581the \u2581action \u2581with \u2581the \u2581given \u2581 name , \u2581returns \u2581nil \u2581if \u2581 none \u2581is \u2581found ."], "bleu": 0.3517336950818949, "rouge_l": 0.657843137254902}
{"id": 7589, "predictions": ["\u2581// \u2581Must State \u2581returns \u2581the \u2581current \u2581state \u2581of \u2581the \u2581 ledger ."], "references": ["\u2581// \u2581Must State \u2581retrieves \u2581the \u2581 State \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.09881261609736544, "rouge_l": 0.3785460992907802}
{"id": 6321, "predictions": ["\u2581// \u2581 Has Link \u2581returns \u2581true \u2581if \u2581the \u2581resource \u2581 exists \u2581in \u2581the \u2581resource ."], "references": ["\u2581// \u2581 Has Link \u2581returns \u2581whether \u2581the \u2581resource \u2581has \u2581a \u2581 link \u2581with \u2581the \u2581given \u2581 name ."], "bleu": 0.3004358411920608, "rouge_l": 0.5962854349951124}
{"id": 7377, "predictions": ["\u2581// \u2581Must Encode \u2581is \u2581a \u2581convenience \u2581wrapper \u2581around \u2581 Encode ."], "references": ["\u2581// \u2581Must Encode \u2581is \u2581like \u2581 Encode , \u2581but \u2581panic s \u2581on \u2581error"], "bleu": 0.3040101477525803, "rouge_l": 0.4925975773889637}
{"id": 7619, "predictions": ["\u2581// \u2581Must Transaction \u2581returns \u2581the \u2581transaction ' s \u2581transaction ."], "references": ["\u2581// \u2581Must Transaction \u2581retrieves \u2581the \u2581 Transaction \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.07076385815990868, "rouge_l": 0.2829313543599258}
{"id": 7799, "predictions": ["\u2581// \u2581 New T gz Walker \u2581creates \u2581a \u2581new \u2581 Walker ."], "references": ["\u2581// \u2581 New T gz Walker \u2581creates \u2581a \u2581new \u2581 Walker \u2581instance \u2581that \u2581can \u2581read \u2581a \u2581 . tgz \u2581stream"], "bleu": 0.47778846571793115, "rouge_l": 0.7176470588235294}
{"id": 7730, "predictions": ["\u2581// \u2581 HandleFunc \u2581registers \u2581a \u2581handler \u2581for \u2581the \u2581 ServeMux ."], "references": ["\u2581// \u2581 HandleFunc \u2581registers \u2581the \u2581handler \u2581function \u2581for \u2581the \u2581given \u2581pattern ."], "bleu": 0.35453206016838706, "rouge_l": 0.6902404526166903}
{"id": 8039, "predictions": ["\u2581// \u2581 Claims \u2581extracts \u2581the \u2581claims \u2581from \u2581the \u2581request \u2581context"], "references": ["\u2581// \u2581 Claims \u2581returns \u2581the \u2581claims \u2581stored \u2581in \u2581the \u2581request"], "bleu": 0.31702331385234306, "rouge_l": 0.7000000000000001}
{"id": 7828, "predictions": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581patch \u2581 o \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.712738576053638, "rouge_l": 0.8863247863247863}
{"id": 7838, "predictions": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581 put \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.7073598946210904, "rouge_l": 0.8780694326841659}
{"id": 7613, "predictions": ["\u2581// \u2581Must Peers \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581 BLE \u2581 Message ."], "references": ["\u2581// \u2581Must Peers \u2581retrieves \u2581the \u2581 Peers \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.11384339562526971, "rouge_l": 0.41426146010186754}
{"id": 6209, "predictions": ["\u2581// \u2581 Debug Co e book Path Locator \u2581returns \u2581a \u2581 Debug Co e book Locator \u2581instance"], "references": ["\u2581// \u2581 Debug Co ok book Path Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.28433291815307693, "rouge_l": 0.5294117647058824}
{"id": 8119, "predictions": ["\u2581// \u2581 NewClient \u2581creates \u2581a \u2581new \u2581 PD \u2581client"], "references": ["\u2581// NewClient \u2581 - \u2581 constructor \u2581for \u2581a \u2581new \u2581 dispense r \u2581client"], "bleu": 0.20030090221863772, "rouge_l": 0.5281385281385281}
{"id": 7883, "predictions": ["\u2581// \u2581 Software Version \u2581returns \u2581the \u2581 software \u2581version \u2581of \u2581the \u2581 software"], "references": ["\u2581// \u2581 Software Version \u2581returns \u2581the \u2581version \u2581of \u2581the \u2581currently \u2581running \u2581instance"], "bleu": 0.5316967153331754, "rouge_l": 0.725231175693527}
{"id": 6509, "predictions": ["\u2581// \u2581 get \u2581the \u2581default \u2581 config ."], "references": ["\u2581// \u2581defaults \u2581applies \u2581defaults \u2581to \u2581the \u2581 config ."], "bleu": 0.29150322793751426, "rouge_l": 0.5820610687022901}
{"id": 7138, "predictions": ["\u2581// \u2581Must AddError \u2581panic s \u2581if \u2581error \u2581is \u2581not \u2581nil ."], "references": ["\u2581// \u2581Must AddError \u2581calls \u2581 AddError \u2581and \u2581panic s \u2581in \u2581case \u2581of \u2581an \u2581error ."], "bleu": 0.1883283134652959, "rouge_l": 0.5239263803680982}
{"id": 7268, "predictions": ["\u2581// \u2581 Sort \u2581sorts \u2581the \u2581 Symbol List \u2581and \u2581sorts \u2581the \u2581 Symbol List ."], "references": ["\u2581// \u2581 Sort \u2581returns \u2581a \u2581sorted \u2581list \u2581of \u2581 Lex Symbols , \u2581sorted \u2581by \u2581 Priority"], "bleu": 0.15850829785188195, "rouge_l": 0.3207150368033649}
{"id": 6923, "predictions": ["\u2581// \u2581 Or \u2581 wraps \u2581a \u2581condition \u2581to \u2581 call \u2581to \u2581 test \u2581if \u2581the \u2581condition \u2581is \u2581 set ."], "references": ["\u2581// \u2581 Or \u2581adds \u2581\" OR \" \u2581operator \u2581to \u2581the \u2581 Condition \u2581and \u2581returns \u2581it \u2581for \u2581method \u2581chain ."], "bleu": 0.1352045976914347, "rouge_l": 0.36064189189189183}
{"id": 6922, "predictions": ["\u2581// \u2581 And \u2581 wraps \u2581a \u2581condition ."], "references": ["\u2581// \u2581 And \u2581adds \u2581\" AND \" \u2581operator \u2581to \u2581the \u2581 Condition \u2581and \u2581returns \u2581it \u2581for \u2581method \u2581chain ."], "bleu": 0.0835170731043272, "rouge_l": 0.34502262443438914}
{"id": 6921, "predictions": ["\u2581// \u2581 Where \u2581 add \u2581a \u2581condition \u2581to \u2581the \u2581condition ."], "references": ["\u2581// \u2581 Where \u2581adds \u2581\" WHERE \" \u2581clause \u2581to \u2581the \u2581 Condition \u2581and \u2581returns \u2581it \u2581for \u2581method \u2581chain ."], "bleu": 0.13091528365100127, "rouge_l": 0.38164754953076124}
{"id": 7208, "predictions": ["\u2581// \u2581 Dump \u2581 dumps \u2581the \u2581flags \u2581to \u2581the \u2581 set \u2581of \u2581flags ."], "references": ["\u2581// \u2581 Dump ByteCode \u2581sets \u2581the \u2581 bitmask \u2581for \u2581 Dump ByteCode \u2581 debug \u2581flag"], "bleu": 0.18931716792793718, "rouge_l": 0.34269662921348315}
{"id": 7207, "predictions": ["\u2581// \u2581 Dump AST \u2581 dumps \u2581the \u2581flags \u2581to \u2581the \u2581 format ."], "references": ["\u2581// \u2581 Dump AST \u2581sets \u2581the \u2581 bitmask \u2581for \u2581 Dump AST \u2581 debug \u2581flag"], "bleu": 0.337388095989748, "rouge_l": 0.423121387283237}
{"id": 6387, "predictions": ["\u2581// \u2581Must Parse XML \u2581parses \u2581a \u2581 helper \u2581to \u2581parse \u2581the \u2581 contents \u2581of \u2581the \u2581 r ."], "references": ["\u2581// Must Parse XML \u2581is \u2581like \u2581Parse XML , \u2581but \u2581panic s \u2581instead \u2581of \u2581returning \u2581an \u2581error ."], "bleu": 0.10657284485555579, "rouge_l": 0.2777777777777778}
{"id": 7285, "predictions": ["\u2581// \u2581 Is Private \u2581checks \u2581if \u2581the \u2581given \u2581 IP \u2581is \u2581valid"], "references": ["\u2581// \u2581 Is Private \u2581determines \u2581whether \u2581a \u2581passed \u2581 IP \u2581address \u2581is \u2581from \u2581one \u2581of \u2581private \u2581blocks \u2581or \u2581not ."], "bleu": 0.17656061583211333, "rouge_l": 0.41862745098039217}
{"id": 6351, "predictions": ["\u2581// \u2581 Start \u2581starts \u2581the \u2581consumer \u2581and \u2581starts \u2581the \u2581consumer ."], "references": ["\u2581// \u2581 Start \u2581explicitly \u2581begins \u2581 consumption \u2581in \u2581case \u2581the \u2581consumer \u2581was \u2581initialized \u2581// \u2581with \u2581 New Consumer \u2581instead \u2581of \u2581 Start Consumer ."], "bleu": 0.08036848499107174, "rouge_l": 0.32133450395083407}
{"id": 6725, "predictions": ["\u2581// \u2581 BasicAuth \u2581returns \u2581a \u2581 Client Param \u2581that \u2581sets \u2581the \u2581 username \u2581and \u2581password ."], "references": ["\u2581// \u2581 BasicAuth \u2581sets \u2581 username \u2581and \u2581password \u2581for \u2581HTTP \u2581client"], "bleu": 0.2948993986902436, "rouge_l": 0.6130653266331658}
{"id": 7406, "predictions": ["\u2581// \u2581 Master \u2581returns \u2581the \u2581master \u2581 key \u2581for \u2581the \u2581given \u2581network \u2581 type ."], "references": ["\u2581// \u2581 Master \u2581returns \u2581the \u2581master \u2581 keypair \u2581for \u2581a \u2581given \u2581network \u2581 passphrase"], "bleu": 0.5423782837718303, "rouge_l": 0.7633674630261661}
{"id": 7404, "predictions": ["\u2581// \u2581 Mutate CreateAccount \u2581updates \u2581the \u2581 2 \u2581policy \u2581operation"], "references": ["\u2581// \u2581 Mutate CreateAccount \u2581for \u2581 Native Amount \u2581sets \u2581the \u2581 CreateAccount Op ' s \u2581// \u2581 Starting Balance \u2581field"], "bleu": 0.14844960501213117, "rouge_l": 0.37731958762886597}
{"id": 7327, "predictions": ["\u2581// \u2581 Mutate Change Trust \u2581is \u2581the \u2581same \u2581as \u2581 Mutate Change Trust , \u2581but \u2581it \u2581allows \u2581the \u2581// \u2581 Limit \u2581to \u2581the \u2581 replace \u2581 this \u2581operation \u2581on \u2581the"], "references": ["\u2581// \u2581 Mutate Change Trust \u2581for \u2581 Limit \u2581sets \u2581the \u2581 Change Trust Op ' s \u2581 Limit \u2581field"], "bleu": 0.20162477784805663, "rouge_l": 0.46792189679218965}
{"id": 7375, "predictions": ["\u2581// \u2581Must Decode \u2581reads \u2581and \u2581returns \u2581the \u2581 contents \u2581of \u2581the \u2581given \u2581 src ."], "references": ["\u2581// \u2581Must Decode \u2581is \u2581like \u2581 Decode , \u2581but \u2581panic s \u2581on \u2581error"], "bleu": 0.16188613565728213, "rouge_l": 0.28944246737841045}
{"id": 6703, "predictions": ["\u2581// \u2581Register Action \u2581adds \u2581a \u2581new \u2581action \u2581to \u2581the \u2581 set \u2581of \u2581actions"], "references": ["\u2581// \u2581Register Action \u2581register \u2581global \u2581action"], "bleu": 0.18798317647335086, "rouge_l": 0.45101663585951934}
{"id": 6831, "predictions": ["\u2581// \u2581 Notification \u2581creates \u2581a \u2581new \u2581 G Notifier \u2581instance ."], "references": ["\u2581// \u2581 Notification \u2581is \u2581the \u2581builder"], "bleu": 0.21200626759025185, "rouge_l": 0.3727087576374745}
{"id": 7576, "predictions": ["\u2581// \u2581 Known For Switch \u2581implements \u2581the \u2581 Transaction \u2581interface \u2581for \u2581 Transaction History Result ."], "references": ["\u2581// \u2581 Arm For Switch \u2581returns \u2581which \u2581field \u2581 name \u2581should \u2581be \u2581used \u2581for \u2581storing \u2581// \u2581the \u2581value \u2581for \u2581an \u2581instance \u2581of \u2581 Transaction History Result Entry Ext"], "bleu": 0.13930061236470848, "rouge_l": 0.43323863636363635}
{"id": 7224, "predictions": ["\u2581// \u2581 Current Mark \u2581returns \u2581the \u2581current \u2581 mark \u2581of \u2581the \u2581state ."], "references": ["\u2581// \u2581 Current Mark \u2581returns \u2581the \u2581 mark \u2581stored \u2581at \u2581the \u2581 top \u2581of \u2581the \u2581 mark \u2581stack"], "bleu": 0.35414449717483615, "rouge_l": 0.6269270298047277}
{"id": 6518, "predictions": ["\u2581// \u2581 New Check WithOptions \u2581returns \u2581a \u2581new \u2581Check WithOptions \u2581with \u2581the \u2581default \u2581options ."], "references": ["\u2581// \u2581 New Check WithOptions \u2581returns \u2581an \u2581 empty \u2581Check \u2581object \u2581with \u2581// \u2581caller - specified \u2581behaviour al \u2581modifications . \u2581See \u2581Check Options ."], "bleu": 0.22343333347312685, "rouge_l": 0.44309927360774815}
{"id": 7240, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581given \u2581 key \u2581from \u2581the \u2581cache ."], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581cache"], "bleu": 0.41397900200299415, "rouge_l": 0.7093023255813954}
{"id": 6410, "predictions": ["\u2581// \u2581Get Attribute Val \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581given \u2581 key \u2581in \u2581the \u2581given \u2581 path ."], "references": ["\u2581// Get Attribute Val \u2581is \u2581like \u2581Get Attribute , \u2581except \u2581it \u2581returns \u2581the \u2581attribute ' s \u2581value ."], "bleu": 0.1402577516008147, "rouge_l": 0.3888888888888889}
{"id": 7552, "predictions": ["\u2581// \u2581Must Results \u2581returns \u2581the \u2581result \u2581of \u2581the \u2581result ."], "references": ["\u2581// \u2581Must Results \u2581retrieves \u2581the \u2581 Results \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.07354416148731348, "rouge_l": 0.3395176252319109}
{"id": 7826, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581patch \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6908080566015539, "rouge_l": 0.8714285714285713}
{"id": 7605, "predictions": ["\u2581// \u2581Must Error \u2581returns \u2581the \u2581error \u2581message ."], "references": ["\u2581// \u2581Must Error \u2581retrieves \u2581the \u2581 Error \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.05065566544723581, "rouge_l": 0.29669260700389105}
{"id": 8116, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 In n \u2581 Client"], "references": ["\u2581// \u2581 New \u2581 - \u2581create \u2581a \u2581new \u2581 api \u2581client"], "bleu": 0.317023313852343, "rouge_l": 0.5454545454545454}
{"id": 6481, "predictions": ["\u2581// \u2581 New Simple \u2581returns \u2581a \u2581new \u2581Simple \u2581 call ."], "references": ["\u2581// \u2581 New Simple \u2581returns \u2581a \u2581new \u2581Simple \u2581 Queue"], "bleu": 0.8070557274927982, "rouge_l": 0.8645669291338582}
{"id": 7779, "predictions": ["\u2581// \u2581Add Bosh Deployment Resource \u2581adds \u2581a \u2581new \u2581 Bosh Deployment \u2581resource ."], "references": ["\u2581// Add Bosh Deployment Resource \u2581 bosh \u2581deployment \u2581resource \u2581 add"], "bleu": 0.2044800736021839, "rouge_l": 0.507628294036061}
{"id": 7418, "predictions": ["\u2581// \u2581 Marshal \u2581marshal s \u2581the \u2581given \u2581object \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 Marshal \u2581writes \u2581an \u2581 xdr \u2581element \u2581` v ` \u2581into \u2581` w `."], "bleu": 0.1524322797652235, "rouge_l": 0.2115606936416185}
{"id": 7417, "predictions": ["\u2581// \u2581 Unmarshal \u2581unmarshal s \u2581the \u2581 data \u2581from \u2581the \u2581 Reader ."], "references": ["\u2581// \u2581 Unmarshal \u2581reads \u2581an \u2581 xdr \u2581element \u2581from \u2581` r ` \u2581into \u2581` v `."], "bleu": 0.15620412264187214, "rouge_l": 0.33851276359600446}
{"id": 6281, "predictions": ["\u2581// \u2581 Method \u2581returns \u2581the \u2581endpoint ' s \u2581method ."], "references": ["\u2581// \u2581 Methods \u2581returns \u2581the \u2581go a . v 2 \u2581method"], "bleu": 0.20532606309031395, "rouge_l": 0.47213622291021673}
{"id": 7778, "predictions": ["\u2581// \u2581Add Bosh IO Resource \u2581adds \u2581a \u2581quota \u2581to \u2581the \u2581 Bosh \u2581 name"], "references": ["\u2581// Add Bosh IO Resource \u2581 bosh \u2581io \u2581specific \u2581resource \u2581 add"], "bleu": 0.1892240568795935, "rouge_l": 0.4680306905370844}
{"id": 7742, "predictions": ["\u2581// \u2581 Slice Contains String \u2581returns \u2581true \u2581if \u2581the \u2581string \u2581 slice \u2581is \u2581a \u2581string \u2581 slice ."], "references": ["\u2581// \u2581 Slice Contains String \u2581returns \u2581if \u2581 slice \u2581 contains \u2581 substring"], "bleu": 0.35870004213153, "rouge_l": 0.6644880174291938}
{"id": 6175, "predictions": ["\u2581// \u2581Register Commands \u2581registers \u2581the \u2581 handlers \u2581for \u2581the \u2581 type \u2581of \u2581 plugins ."], "references": ["\u2581// \u2581Register Commands \u2581registers \u2581all \u2581the \u2581commands \u2581with \u2581the \u2581 k in pin \u2581application ."], "bleu": 0.2803950119994004, "rouge_l": 0.5333333333333332}
{"id": 7399, "predictions": ["\u2581// \u2581Set Threshold s \u2581sets \u2581the \u2581 Threshold s \u2581for \u2581a \u2581given \u2581 set \u2581of \u2581 s ."], "references": ["\u2581// \u2581Set Threshold s \u2581creates \u2581 Threshold s \u2581 mutator"], "bleu": 0.26104909033290696, "rouge_l": 0.6024691358024692}
{"id": 7341, "predictions": ["\u2581// \u2581 Delete Offer \u2581deletes \u2581a \u2581 Offer Rule \u2581from \u2581the \u2581given \u2581 rate ."], "references": ["\u2581// \u2581 Delete Offer \u2581deletes \u2581an \u2581existing \u2581offer"], "bleu": 0.30130404892785684, "rouge_l": 0.46003016591251883}
{"id": 7884, "predictions": ["\u2581// \u2581 Shutdown \u2581implements \u2581the \u2581 group Store \u2581interface ."], "references": ["\u2581// \u2581 Shutdown \u2581will \u2581 close \u2581any \u2581existing \u2581connections ; \u2581note \u2581that \u2581 Startup \u2581may \u2581// \u2581automatically \u2581 get \u2581called \u2581with \u2581any \u2581further \u2581activity , \u2581but \u2581it \u2581will \u2581use \u2581a"], "bleu": 0.03357453870906747, "rouge_l": 0.18345864661654135}
{"id": 6982, "predictions": ["\u2581// \u2581 New \u2581implements \u2581 Export able Error"], "references": ["\u2581// \u2581 New \u2581 ServerError . New"], "bleu": 0.3155984539112945, "rouge_l": 0.5398230088495575}
{"id": 6822, "predictions": ["\u2581// \u2581 Num Connections \u2581returns \u2581the \u2581number \u2581of \u2581connections \u2581currently \u2581connected \u2581to ."], "references": ["\u2581// Num Connections \u2581currently \u2581 active"], "bleu": 0.14949751774990683, "rouge_l": 0.45101663585951934}
{"id": 7704, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 Write \u2581 Satisfy \u2581the \u2581http . ResponseWriter \u2581interface"], "bleu": 0.22997519112894443, "rouge_l": 0.5545454545454546}
{"id": 7866, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6450399987171931, "rouge_l": 0.8169642857142859}
{"id": 7607, "predictions": ["\u2581// \u2581Must Hello \u2581implements \u2581 Hello ."], "references": ["\u2581// \u2581Must Hello \u2581retrieves \u2581the \u2581 Hello \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.04345568346400208, "rouge_l": 0.3649052841475573}
{"id": 7609, "predictions": ["\u2581// \u2581Must Auth \u2581returns \u2581the \u2581 Auth \u2581 type \u2581of \u2581the \u2581 Auth Message ."], "references": ["\u2581// \u2581Must Auth \u2581retrieves \u2581the \u2581 Auth \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.14201310847830698, "rouge_l": 0.456359102244389}
{"id": 8007, "predictions": ["\u2581// \u2581 Seek First \u2581moves \u2581the \u2581 iterator \u2581to \u2581the \u2581first \u2581element ."], "references": ["\u2581// \u2581 Seek First \u2581moves \u2581cursor \u2581to \u2581the \u2581start"], "bleu": 0.3934995962231127, "rouge_l": 0.657935285053929}
{"id": 7481, "predictions": ["\u2581// \u2581 New Transaction Ext \u2581is \u2581a \u2581convenience \u2581method \u2581for \u2581creating \u2581a \u2581transaction \u2581// \u2581 Ext ing \u2581function ."], "references": ["\u2581// \u2581 New Transaction Ext \u2581creates \u2581a \u2581new \u2581 Transaction Ext ."], "bleu": 0.2680165156355778, "rouge_l": 0.6052921719955899}
{"id": 7859, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 GetApp \u2581 route \u2581 route \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.5751147795414654, "rouge_l": 0.7747671464860287}
{"id": 7275, "predictions": ["\u2581// \u2581 Resize \u2581sets \u2581the \u2581 size \u2581of \u2581the \u2581stack"], "references": ["\u2581// \u2581 Resize \u2581changes \u2581the \u2581 size \u2581of \u2581the \u2581underlying \u2581buffer"], "bleu": 0.5317986230889064, "rouge_l": 0.7554179566563467}
{"id": 7467, "predictions": ["\u2581// \u2581Must Destination \u2581returns \u2581the \u2581 AccountId \u2581of \u2581the \u2581 Destination Body ."], "references": ["\u2581// \u2581Must Destination \u2581retrieves \u2581the \u2581 Destination \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.13025332144680646, "rouge_l": 0.42324371205550737}
{"id": 8082, "predictions": ["\u2581// \u2581 NewDecoder \u2581returns \u2581a \u2581new \u2581 Decoder \u2581that \u2581reads \u2581from \u2581the \u2581provided \u2581 Registry ."], "references": ["\u2581// \u2581 NewDecoder \u2581creates \u2581a \u2581new \u2581 Decoder \u2581using \u2581a \u2581 type \u2581 Registry \u2581and \u2581an \u2581io . Reader ."], "bleu": 0.2509715586630676, "rouge_l": 0.5446428571428571}
{"id": 8003, "predictions": ["\u2581// \u2581 AddUint 64 \u2581 allocate s \u2581a \u2581uint 64 \u2581value \u2581from \u2581the \u2581 slice \u2581of \u2581uint 64 \u2581values ."], "references": ["\u2581// \u2581 AddUint 64 \u2581provides \u2581atomic \u2581 add"], "bleu": 0.17793925745339384, "rouge_l": 0.38705583756345174}
{"id": 7655, "predictions": ["\u2581// \u2581 Hash Index FromKey \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581 key \u2581in \u2581the \u2581 form \u2581of \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Hash \u2581index \u2581from \u2581 key ."], "bleu": 0.1336412760311249, "rouge_l": 0.4501845018450184}
{"id": 6984, "predictions": ["\u2581// \u2581 New \u2581 - \u2581 Not \u2581 Not \u2581 held"], "references": ["\u2581// \u2581 New \u2581ValidationError . New"], "bleu": 0.21200626759025185, "rouge_l": 0.3727087576374745}
{"id": 7211, "predictions": ["\u2581// \u2581Get \u2581gets \u2581the \u2581value \u2581for \u2581the \u2581given \u2581 key"], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581function \u2581associated \u2581with \u2581the \u2581given \u2581 key . \u2581The \u2581function \u2581// \u2581is \u2581wrapped \u2581as \u2581reflect . Value \u2581so \u2581 reflection \u2581can \u2581be \u2581used \u2581to \u2581determine \u2581//"], "bleu": 0.05646541848850381, "rouge_l": 0.32105263157894737}
{"id": 7342, "predictions": ["\u2581// \u2581 Manage Offer \u2581 marks \u2581the \u2581given \u2581 ingress \u2581and \u2581 mark \u2581the \u2581 Manage Offer"], "references": ["\u2581// \u2581 Manage Offer \u2581 groups \u2581the \u2581creation \u2581of \u2581a \u2581new \u2581 Manage Offer Builder \u2581with \u2581a \u2581 call \u2581to \u2581 Mutate ."], "bleu": 0.2542898723853484, "rouge_l": 0.4381484437350359}
{"id": 6814, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581 Request \u2581if \u2581it \u2581is \u2581not \u2581present ."], "references": ["\u2581// \u2581Get \u2581retrieves \u2581an \u2581error \u2581from \u2581the \u2581request ' s \u2581context . \u2581It \u2581returns \u2581nil \u2581if \u2581the \u2581// \u2581request \u2581was \u2581not \u2581configured \u2581to \u2581store \u2581errors ."], "bleu": 0.06843288490221233, "rouge_l": 0.27917620137299776}
{"id": 7063, "predictions": ["\u2581// \u2581 Error m \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581formatted \u2581error \u2581message ."], "references": ["\u2581// \u2581interface \u2581similar \u2581to \u2581\" fmt \" \u2581package \u2581// \u2581 Error m \u2581returns \u2581error \u2581instance \u2581with \u2581formatted \u2581error \u2581message . \u2581// \u2581This \u2581is \u2581same \u2581as \u2581fmt . Errorf , \u2581but"], "bleu": 0.15719574079799944, "rouge_l": 0.370945945945946}
{"id": 8038, "predictions": ["\u2581// \u2581 Token \u2581returns \u2581the \u2581 token \u2581 token \u2581for \u2581the \u2581request ."], "references": ["\u2581// \u2581 Token \u2581returns \u2581the \u2581 token \u2581string \u2581stored \u2581in \u2581the \u2581request \u2581context , \u2581or \u2581an \u2581 empty \u2581// \u2581string ."], "bleu": 0.31800111989750024, "rouge_l": 0.5642923219241442}
{"id": 7066, "predictions": ["\u2581// \u2581 Sprint \u2581a \u2581string \u2581to \u2581 stdout"], "references": ["\u2581// \u2581 Sprintf \u2581returns \u2581formatted \u2581string . \u2581// \u2581This \u2581is \u2581same \u2581as \u2581fmt . Sprintf , \u2581but \u2581uses \u2581 g string \u2581formatting ."], "bleu": 0.036774976148415406, "rouge_l": 0.23735408560311283}
{"id": 6278, "predictions": ["\u2581// \u2581 Required \u2581returns \u2581the \u2581 set \u2581of \u2581 refs \u2581that \u2581are \u2581required \u2581for \u2581the \u2581 Ref"], "references": ["\u2581// \u2581 Required \u2581gets \u2581a \u2581 type \u2581for \u2581a \u2581 Schema \u2581reference , \u2581if \u2581it \u2581 exists"], "bleu": 0.1598921499894403, "rouge_l": 0.3529411764705882}
{"id": 8002, "predictions": ["\u2581// \u2581 AddInt 64 \u2581 append \u2581 data \u2581to \u2581int 64 \u2581if \u2581possible"], "references": ["\u2581// \u2581 AddInt 64 \u2581provides \u2581atomic \u2581 add"], "bleu": 0.27824623288353134, "rouge_l": 0.4975530179445351}
{"id": 7873, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 data \u2581store ."], "references": ["\u2581// \u2581 Close \u2581will \u2581shutdown \u2581outgoing \u2581 connectivity \u2581and \u2581stop \u2581all \u2581background \u2581// \u2581goroutines ; \u2581note \u2581that \u2581the \u2581value Store \u2581is \u2581no \u2581longer \u2581 usable \u2581after \u2581a \u2581 call \u2581to"], "bleu": 0.028191241370329752, "rouge_l": 0.23371647509578544}
{"id": 6843, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581 Bot Bot \u2581API ."], "references": ["\u2581// \u2581 Close \u2581shut s \u2581down \u2581 this \u2581client . \u2581// \u2581 Until \u2581 Close \u2581returns , \u2581new \u2581updates \u2581and \u2581errors \u2581will \u2581be \u2581 put \u2581into \u2581the \u2581// \u2581respective \u2581channels"], "bleu": 0.036520949774262054, "rouge_l": 0.22932330827067668}
{"id": 6411, "predictions": ["\u2581// \u2581Get Attr Val \u2581retrieves \u2581the \u2581value \u2581of \u2581a \u2581given \u2581 name , \u2581or \u2581an \u2581error \u2581if \u2581not \u2581found ."], "references": ["\u2581// Get Attr Val OrEmpty \u2581is \u2581like \u2581Get Attribute Val , \u2581except \u2581it \u2581returns \u2581an \u2581 empty \u2581string \u2581if \u2581// the \u2581attribute \u2581is \u2581not \u2581found \u2581instead \u2581of \u2581false ."], "bleu": 0.08184926536782175, "rouge_l": 0.35556994818652854}
{"id": 6833, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 Identity \u2581 Provider"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 CA ."], "bleu": 0.21972813874997157, "rouge_l": 0.563944530046225}
{"id": 6985, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 NotFoundError"], "references": ["\u2581// \u2581 New \u2581 NotFoundError . New"], "bleu": 0.3549481056010052, "rouge_l": 0.6747787610619468}
{"id": 7895, "predictions": ["\u2581// \u2581 Group \u2581returns \u2581a \u2581 Group \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 group ."], "references": ["\u2581// \u2581 Group \u2581creates \u2581a \u2581 Group \u2581 type \u2581from \u2581a \u2581 domain , \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581members"], "bleu": 0.3744617317882231, "rouge_l": 0.6332179930795847}
{"id": 7834, "predictions": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581 post \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581 post \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.7462638751423939, "rouge_l": 0.8800721370604146}
{"id": 6670, "predictions": ["\u2581// \u2581 Hash String \u2581returns \u2581a \u2581hash \u2581of \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Hash String \u2581works \u2581like \u2581hash \u2581but \u2581accept \u2581string \u2581as \u2581an \u2581input ."], "bleu": 0.267768029597763, "rouge_l": 0.4414957780458384}
{"id": 7547, "predictions": ["\u2581// \u2581Must ReadFile \u2581returns \u2581the \u2581 KVPair \u2581for \u2581the \u2581given \u2581 objectID . \u2581// \u2581If \u2581the \u2581 dropout \u2581fails , \u2581it \u2581panic s ."], "references": ["\u2581// \u2581Must Tr \u2581retrieves \u2581the \u2581Tr \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.0922635643555325, "rouge_l": 0.3505747126436781}
{"id": 6314, "predictions": ["\u2581// \u2581 Sign \u2581adds \u2581the \u2581 data \u2581to \u2581the \u2581request ."], "references": ["\u2581// \u2581 RL 10 \u2581 authenticator \u2581uses \u2581special \u2581header"], "bleu": 0.16108992769687397, "rouge_l": 0.3055091819699499}
{"id": 7108, "predictions": ["\u2581// \u2581 Respond \u2581to \u2581 templates"], "references": ["\u2581// \u2581 Respond \u2581executes \u2581template \u2581with \u2581provided \u2581 data \u2581into \u2581buffer , \u2581// \u2581then \u2581writes \u2581the \u2581the \u2581 body \u2581to \u2581the \u2581response \u2581writer . \u2581// \u2581 A \u2581panic \u2581will \u2581be"], "bleu": 0.008333508372144402, "rouge_l": 0.2479674796747967}
{"id": 6654, "predictions": ["\u2581// \u2581 Duration Var \u2581returns \u2581a \u2581 set \u2581of \u2581flags \u2581for \u2581a \u2581given \u2581time . Duration ."], "references": ["\u2581// \u2581 Duration Var \u2581defines \u2581a \u2581time . Duration \u2581flag \u2581with \u2581specified \u2581 name , \u2581// \u2581default \u2581value , \u2581and \u2581usage \u2581string . \u2581The \u2581argument \u2581 p \u2581points \u2581to \u2581a"], "bleu": 0.13852077376731164, "rouge_l": 0.36478405315614615}
{"id": 7387, "predictions": ["\u2581// \u2581 Through \u2581returns \u2581a \u2581 Pay \u2581 responder \u2581with \u2581the \u2581specified \u2581image"], "references": ["\u2581// \u2581 Through \u2581appends \u2581a \u2581new \u2581asset \u2581to \u2581the \u2581 path"], "bleu": 0.2044800736021839, "rouge_l": 0.42302357836338417}
{"id": 7378, "predictions": ["\u2581// \u2581 checkValid Version Byte \u2581returns \u2581the \u2581 major \u2581version \u2581of \u2581the \u2581version ."], "references": ["\u2581// \u2581 checkValid Version Byte \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581provided \u2581value \u2581// \u2581is \u2581not \u2581one \u2581of \u2581the \u2581defined \u2581valid \u2581version \u2581 byte \u2581constants ."], "bleu": 0.2212842454916693, "rouge_l": 0.5368}
{"id": 7372, "predictions": ["\u2581// \u2581 Changes \u2581returns \u2581the \u2581 ledger \u2581 data \u2581for \u2581the \u2581given \u2581 ledger \u2581 key ."], "references": ["\u2581// \u2581 Changes \u2581returns \u2581any \u2581changes \u2581within \u2581the \u2581bundle \u2581that \u2581 apply \u2581to \u2581the \u2581entry \u2581// \u2581identified \u2581by \u2581` key `."], "bleu": 0.18405318356016778, "rouge_l": 0.4132091447925486}
{"id": 7476, "predictions": ["\u2581// \u2581Must Id \u2581returns \u2581the \u2581 identifier \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581Must Id \u2581retrieves \u2581the \u2581 Id \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.10176549002043046, "rouge_l": 0.43262411347517726}
{"id": 7478, "predictions": ["\u2581// \u2581Must Hash \u2581returns \u2581the \u2581hash \u2581of \u2581the \u2581 type ."], "references": ["\u2581// \u2581Must Hash \u2581retrieves \u2581the \u2581 Hash \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.09100496456461053, "rouge_l": 0.3871260199456029}
{"id": 7130, "predictions": ["\u2581// \u2581 With Panic Response \u2581sets \u2581the \u2581 Content - Type \u2581header \u2581to \u2581the \u2581handler ."], "references": ["\u2581// \u2581 With Panic Response \u2581sets \u2581a \u2581fixed \u2581 body \u2581and \u2581its \u2581 content \u2581 type \u2581HTTP \u2581header \u2581// \u2581that \u2581will \u2581be \u2581returned \u2581as \u2581HTTP \u2581response \u2581on \u2581panic \u2581event ."], "bleu": 0.15870499296152796, "rouge_l": 0.370945945945946}
{"id": 7832, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 post \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 post \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.7462638751423939, "rouge_l": 0.8800721370604146}
{"id": 6219, "predictions": ["\u2581// \u2581 Write Resource \u2581writes \u2581the \u2581given \u2581resource \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Write Resource \u2581writes \u2581the \u2581 code \u2581for \u2581a \u2581resource ."], "bleu": 0.5008718428920987, "rouge_l": 0.6666666666666666}
{"id": 6740, "predictions": ["\u2581// \u2581 Trigger Incident Key \u2581 searches \u2581the \u2581 incident \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Trigger Incident Key \u2581triggers \u2581an \u2581 incident \u2581using \u2581the \u2581default \u2581client \u2581with \u2581a \u2581// \u2581given \u2581 incident \u2581 key \u2581only \u2581if \u2581that \u2581 incident \u2581has \u2581been \u2581resolved \u2581or"], "bleu": 0.16026877777852916, "rouge_l": 0.45337837837837835}
{"id": 6731, "predictions": ["\u2581// \u2581Set AuthHeader \u2581sets \u2581the \u2581http . Header \u2581for \u2581the \u2581client ."], "references": ["\u2581// \u2581Set AuthHeader \u2581sets \u2581client ' s \u2581authorization \u2581 headers \u2581if \u2581client \u2581// \u2581was \u2581configured \u2581to \u2581work \u2581with \u2581authorization"], "bleu": 0.1688973573215144, "rouge_l": 0.30995934959349586}
{"id": 7015, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581 data \u2581to \u2581the \u2581underlying \u2581writer ."], "references": ["\u2581// \u2581 Write \u2581sets \u2581the \u2581context ' s \u2581written \u2581flag \u2581before \u2581writing \u2581the \u2581response ."], "bleu": 0.17322452584554915, "rouge_l": 0.43571428571428567}
{"id": 7104, "predictions": ["\u2581// \u2581 With Delim s \u2581specifies \u2581the \u2581 close \u2581 close \u2581on \u2581the \u2581 Options ."], "references": ["\u2581// \u2581 With Delim s \u2581sets \u2581the \u2581 delimiters \u2581used \u2581in \u2581 templates ."], "bleu": 0.33507040795147514, "rouge_l": 0.6073008849557523}
{"id": 7247, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581 32 \u2581geometry \u2581element \u2581into \u2581a \u2581 32 - bit \u2581AST ."], "references": ["\u2581// \u2581Parse \u2581parses \u2581the \u2581given \u2581template \u2581and \u2581creates \u2581an \u2581AST"], "bleu": 0.1513851459876605, "rouge_l": 0.32105263157894737}
{"id": 7780, "predictions": ["\u2581// \u2581Add Git Resource \u2581adds \u2581a \u2581new \u2581 git \u2581resource \u2581to \u2581the \u2581 Pipeline Pipeline"], "references": ["\u2581// Add Git Resource \u2581 git \u2581specific \u2581resource \u2581 add"], "bleu": 0.15310245441182443, "rouge_l": 0.580952380952381}
{"id": 7777, "predictions": ["\u2581// \u2581Add Github Resource \u2581adds \u2581a \u2581new \u2581 Github \u2581resource \u2581to \u2581the \u2581 model ."], "references": ["\u2581// Add Github Resource \u2581 github \u2581specific \u2581resource \u2581 add"], "bleu": 0.13380161378318955, "rouge_l": 0.4979591836734694}
{"id": 6297, "predictions": ["\u2581// \u2581 Write Resource \u2581writes \u2581the \u2581given \u2581resource \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 Write Resource \u2581writes t \u2581the \u2581 code \u2581for \u2581a \u2581resource ."], "bleu": 0.38750553682729766, "rouge_l": 0.6354166666666667}
{"id": 6339, "predictions": ["\u2581// \u2581 Client IP \u2581returns \u2581the \u2581 IP \u2581address \u2581of \u2581the \u2581 IP \u2581address ."], "references": ["\u2581// \u2581 Client IP \u2581returns \u2581the \u2581client \u2581 IP \u2581embedded \u2581in \u2581the \u2581context , \u2581or \u2581nil \u2581if \u2581 none \u2581were \u2581// \u2581found ."], "bleu": 0.25979628668095894, "rouge_l": 0.5577722360764755}
{"id": 7674, "predictions": ["\u2581// \u2581Set BufferSize \u2581sets \u2581the \u2581 size \u2581of \u2581the \u2581 map"], "references": ["\u2581// \u2581Set BufferSize \u2581sets \u2581the \u2581pixel \u2581buffer \u2581at \u2581the \u2581 map \u2581image \u2581edges \u2581where \u2581 Map nik \u2581should \u2581not \u2581 render \u2581any \u2581labels ."], "bleu": 0.16723843685421352, "rouge_l": 0.42844600526777876}
{"id": 7001, "predictions": ["\u2581// \u2581Use \u2581adds \u2581the \u2581middleware \u2581to \u2581the \u2581 router"], "references": ["\u2581// \u2581Use \u2581adds \u2581middleware \u2581to \u2581the \u2581 group , \u2581see \u2581example \u2581 code \u2581in \u2581 github ."], "bleu": 0.21599098873054193, "rouge_l": 0.5101553166069295}
{"id": 7187, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581encoding \u2581of \u2581 this \u2581 Ha wk Signature Response"], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Ha wk Signature Authentication Response \u2581is \u2581of \u2581 type \u2581 json"], "bleu": 0.10574291356198637, "rouge_l": 0.3839160839160839}
{"id": 7711, "predictions": ["\u2581// \u2581 Print Row \u2581prints \u2581a \u2581 slice \u2581of \u2581strings \u2581to \u2581the \u2581 table ."], "references": ["\u2581// \u2581 Print Row \u2581 - \u2581Prints \u2581 table \u2581with \u2581only \u2581one \u2581row ."], "bleu": 0.2803950119994004, "rouge_l": 0.5551763367463025}
{"id": 7393, "predictions": ["\u2581// \u2581 Base 64 \u2581implements \u2581the \u2581 Transaction \u2581interface ."], "references": ["\u2581// \u2581 Base 64 \u2581returns \u2581a \u2581string \u2581which \u2581is \u2581the \u2581 xdr - then - base 64- encoded \u2581 form \u2581// \u2581of \u2581the \u2581builder ' s \u2581underlying \u2581transaction \u2581envelope"], "bleu": 0.060355105398408514, "rouge_l": 0.2828438948995363}
{"id": 8044, "predictions": ["\u2581// \u2581 skipWhitespace \u2581 consume s \u2581the \u2581 Lexer \u2581in \u2581the \u2581 Lexer ."], "references": ["\u2581// \u2581 skipWhitespace \u2581ignores \u2581all \u2581whitespace \u2581characters"], "bleu": 0.16451929399933107, "rouge_l": 0.30398671096345514}
{"id": 7842, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 GetApp \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.6469161553933025, "rouge_l": 0.8250676284941387}
{"id": 6710, "predictions": ["\u2581// \u2581 Error \u2581returns \u2581the \u2581error \u2581string \u2581representation \u2581of \u2581the \u2581error ."], "references": ["\u2581// \u2581 Error \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581error \u2581 e ."], "bleu": 0.4089601472043678, "rouge_l": 0.75}
{"id": 7474, "predictions": ["\u2581// \u2581Must Text \u2581returns \u2581the \u2581 text \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581Must Text \u2581retrieves \u2581the \u2581 Text \u2581value \u2581from \u2581the \u2581union , \u2581// \u2581panic ing \u2581if \u2581the \u2581value \u2581is \u2581not \u2581 set ."], "bleu": 0.08801710869124744, "rouge_l": 0.3318223028105167}
{"id": 6499, "predictions": ["\u2581// \u2581Set Logger \u2581sets \u2581the \u2581logger \u2581to \u2581 set \u2581the \u2581logger ."], "references": ["\u2581// \u2581Set Logger \u2581sets \u2581the \u2581logger \u2581for \u2581 this \u2581stream buffer"], "bleu": 0.48633831680799433, "rouge_l": 0.6135057471264368}
{"id": 6707, "predictions": ["\u2581// \u2581 getProcess \u2581returns \u2581a \u2581 set \u2581of \u2581 active \u2581 data ."], "references": ["\u2581// \u2581 EditMode \u2581return \u2581whether \u2581current \u2581mode \u2581is \u2581` Preview ` \u2581or \u2581` Edit `"], "bleu": 0.10778589869371448, "rouge_l": 0.14104046242774565}
{"id": 6450, "predictions": ["\u2581// \u2581 Wrap \u2581creates \u2581a \u2581 namespaced \u2581 namespaced \u2581 group \u2581of \u2581the \u2581given \u2581arguments ."], "references": ["\u2581// \u2581 Wrap \u2581 wraps \u2581the \u2581logger \u2581in \u2581a \u2581 Namespaced \u2581logger \u2581and \u2581enables \u2581the \u2581specified \u2581// \u2581namespaces . \u2581See \u2581Set Namespaces \u2581for \u2581information \u2581on \u2581how \u2581to \u2581 set \u2581the"], "bleu": 0.08064320421939998, "rouge_l": 0.2885135135135135}
{"id": 7860, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 GetApp \u2581 route \u2581 route \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.5751147795414654, "rouge_l": 0.7747671464860287}
{"id": 6326, "predictions": ["\u2581// \u2581Do Hidden \u2581is \u2581a \u2581convenience \u2581method \u2581that \u2581returns \u2581the \u2581 body \u2581of \u2581the \u2581 dump ."], "references": ["\u2581// \u2581Do Hidden \u2581is \u2581equivalent \u2581to \u2581Do \u2581with \u2581the \u2581exception \u2581that \u2581nothing \u2581gets \u2581logged \u2581unless \u2581 Dump Format \u2581is \u2581// \u2581 set \u2581to \u2581 Verbose ."], "bleu": 0.14081503754799551, "rouge_l": 0.3585598824393828}
{"id": 6932, "predictions": ["\u2581// \u2581 Quote \u2581 - \u2581 quote \u2581string"], "references": ["\u2581// \u2581 Quote \u2581returns \u2581a \u2581quoted \u2581 s \u2581for \u2581a \u2581column \u2581 name ."], "bleu": 0.15603043420373067, "rouge_l": 0.43323863636363635}
{"id": 7827, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581patch \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6908080566015539, "rouge_l": 0.8714285714285713}
{"id": 7953, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581underlying \u2581 iterator ."], "references": ["\u2581// \u2581 Close \u2581executes \u2581 destructor \u2581for \u2581 iterator"], "bleu": 0.31239399369202553, "rouge_l": 0.5555555555555556}
{"id": 7825, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581patch \u2581 o \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6763925456312474, "rouge_l": 0.8730916030534353}
{"id": 7824, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581patch \u2581 o \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6763925456312474, "rouge_l": 0.8730916030534353}
{"id": 7861, "predictions": ["\u2581// \u2581 With Route \u2581adds \u2581the \u2581 route \u2581to \u2581the \u2581 GetApp \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 With Route \u2581adds \u2581the \u2581 route \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6184731924713537, "rouge_l": 0.8264182895850972}
{"id": 6972, "predictions": ["\u2581// \u2581string \u2581returns \u2581the \u2581string \u2581representation \u2581of \u2581the \u2581 set ."], "references": ["\u2581// \u2581string \u2581converts \u2581a \u2581given \u2581stack \u2581frame \u2581to \u2581a \u2581 formated \u2581string ."], "bleu": 0.1486375602900724, "rouge_l": 0.3283983849259758}
{"id": 7839, "predictions": ["\u2581// \u2581 With Route \u2581adds \u2581the \u2581 route \u2581to \u2581the \u2581 put \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With Route \u2581adds \u2581the \u2581 route \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6634358725689058, "rouge_l": 0.8264182895850972}
{"id": 6897, "predictions": ["\u2581// \u2581 OrderBy \u2581 OrderBy \u2581 ORDER \u2581BY ."], "references": ["\u2581// \u2581 OrderBy \u2581returns \u2581a \u2581new \u2581 Condition \u2581of \u2581\" ORDER \u2581BY \" \u2581clause ."], "bleu": 0.1723485781056391, "rouge_l": 0.558169934640523}
{"id": 6435, "predictions": ["\u2581// \u2581 Key From Incoming Context \u2581creates \u2581a \u2581 Key \u2581from \u2581the \u2581context ."], "references": ["\u2581// \u2581 Key From Incoming Context \u2581gets \u2581the \u2581 key \u2581from \u2581the \u2581incoming \u2581context \u2581or \u2581returns \u2581 ErrNo Key"], "bleu": 0.332955486025796, "rouge_l": 0.5899419729206964}
{"id": 7837, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 put \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.7073598946210904, "rouge_l": 0.8780694326841659}
{"id": 6432, "predictions": ["\u2581// \u2581 Token From Incoming Context \u2581creates \u2581a \u2581 token \u2581from \u2581the \u2581context ."], "references": ["\u2581// \u2581 Token From Incoming Context \u2581gets \u2581the \u2581 token \u2581from \u2581the \u2581incoming \u2581context \u2581or \u2581returns \u2581 ErrNo Token"], "bleu": 0.4077855239117876, "rouge_l": 0.6489361702127658}
{"id": 7755, "predictions": ["\u2581// \u2581 Removed Property \u2581removes \u2581the \u2581given \u2581 data \u2581from \u2581the \u2581 set \u2581of \u2581 items \u2581that \u2581were \u2581// \u2581added \u2581to \u2581the \u2581 top \u2581of \u2581the \u2581 e - value"], "references": ["\u2581// \u2581 Removed Property \u2581adds \u2581a \u2581new \u2581\" removed \" \u2581job \u2581property \u2581to \u2581the \u2581list \u2581of \u2581differences"], "bleu": 0.13351899845512327, "rouge_l": 0.3135095447870778}
{"id": 7836, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 put \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6722429092642933, "rouge_l": 0.8640226628895186}
{"id": 7754, "predictions": ["\u2581// \u2581 Added Property \u2581 modifies \u2581the \u2581 e - th \u2581element \u2581of \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Added Property \u2581adds \u2581a \u2581new \u2581\" added \" \u2581job \u2581property \u2581to \u2581the \u2581list \u2581of \u2581differences"], "bleu": 0.2061477352156375, "rouge_l": 0.3446327683615819}
{"id": 7835, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 put \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6722429092642933, "rouge_l": 0.8640226628895186}
{"id": 7848, "predictions": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581patch \u2581 o \u2581 app \u2581params \u2581params"], "references": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581params"], "bleu": 0.7778111223054219, "rouge_l": 0.914085914085914}
{"id": 7852, "predictions": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581 put \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581params"], "bleu": 0.8394327083733336, "rouge_l": 0.9411764705882352}
{"id": 6414, "predictions": ["\u2581// \u2581 Marshal Str \u2581converts \u2581a \u2581 Node \u2581into \u2581a \u2581string ."], "references": ["\u2581// Marshal Str \u2581is \u2581like \u2581 Mar hal , \u2581but \u2581returns \u2581a \u2581string ."], "bleu": 0.20918630991966447, "rouge_l": 0.5310945273631842}
{"id": 7162, "predictions": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581a \u2581 Post \u2581to \u2581JSON ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Post IRC Message Request \u2581is \u2581of \u2581 type \u2581 json ."], "bleu": 0.02954934557527439, "rouge_l": 0.22932330827067668}
{"id": 6913, "predictions": ["\u2581// \u2581has Skip Tag \u2581checks \u2581if \u2581the \u2581field \u2581has \u2581a Skip Tag \u2581tag ."], "references": ["\u2581// \u2581has Skip Tag \u2581returns \u2581whether \u2581the \u2581struct \u2581field \u2581has \u2581the \u2581\"-\" \u2581tag ."], "bleu": 0.3237722713145643, "rouge_l": 0.642857142857143}
{"id": 7857, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 GetApp \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.572665003638186, "rouge_l": 0.8064211520302172}
{"id": 7858, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 GetApp \u2581 route \u2581 route \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.52581479076027, "rouge_l": 0.7488196411709158}
{"id": 6438, "predictions": ["\u2581// \u2581 ID From Incoming Context \u2581extracts \u2581metadata \u2581from \u2581 Incoming Context ."], "references": ["\u2581// \u2581 ID From Incoming Context \u2581gets \u2581the \u2581 key \u2581from \u2581the \u2581incoming \u2581context \u2581or \u2581returns \u2581 ErrNo ID"], "bleu": 0.2902358142268316, "rouge_l": 0.483647175421209}
{"id": 7992, "predictions": ["\u2581// \u2581 Open \u2581returns \u2581true \u2581if \u2581the \u2581snapshot \u2581is \u2581 canceled ."], "references": ["\u2581// \u2581 Open \u2581implements \u2581reference \u2581 c out ing \u2581and \u2581garbage \u2581collection \u2581for \u2581snapshots \u2581// \u2581When \u2581snapshots \u2581are \u2581shared \u2581by \u2581multiple \u2581threads , \u2581each \u2581thread \u2581should \u2581 Open \u2581the \u2581//"], "bleu": 0.04775343112354423, "rouge_l": 0.17681159420289855}
{"id": 7728, "predictions": ["\u2581// \u2581 Handler \u2581returns \u2581a \u2581handler \u2581for \u2581the \u2581 Middleware \u2581 Middleware ."], "references": ["\u2581// \u2581 Handler \u2581 s ast is fy \u2581interface"], "bleu": 0.18798317647335086, "rouge_l": 0.37596302003081655}
{"id": 7829, "predictions": ["\u2581// \u2581 With Route \u2581adds \u2581the \u2581 route \u2581to \u2581the \u2581patch \u2581 app \u2581 route \u2581params"], "references": ["\u2581// \u2581 With Route \u2581adds \u2581the \u2581 route \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6908080566015539, "rouge_l": 0.8714285714285713}
{"id": 6652, "predictions": ["\u2581// \u2581 Float 64 Var \u2581 - \u2581float 64 \u2581value"], "references": ["\u2581// \u2581 Float 64 Var \u2581defines \u2581a \u2581float 64 \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581// \u2581value , \u2581and \u2581usage \u2581string . \u2581The \u2581argument \u2581 p \u2581points \u2581to \u2581a"], "bleu": 0.07431266990320709, "rouge_l": 0.3669172932330827}
{"id": 7349, "predictions": ["\u2581// \u2581 Transaction \u2581returns \u2581a \u2581new \u2581 Transaction Builder ."], "references": ["\u2581// \u2581 Transaction \u2581 groups \u2581the \u2581creation \u2581of \u2581a \u2581new \u2581 Transaction Builder \u2581with \u2581a \u2581 call \u2581// \u2581to \u2581 Mutate ."], "bleu": 0.18174507503326912, "rouge_l": 0.5268714011516316}
{"id": 7369, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581 Source Account \u2581for \u2581the \u2581given \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Source Account \u2581sets \u2581the \u2581transaction ' s \u2581 Source Account \u2581// \u2581to \u2581the \u2581 pub i lic \u2581 key \u2581for \u2581the \u2581address \u2581provided"], "bleu": 0.1408210157510289, "rouge_l": 0.4813486370157819}
{"id": 6472, "predictions": ["\u2581// \u2581 New Limiter \u2581returns \u2581a \u2581new \u2581 Limiter ."], "references": ["\u2581// \u2581 New Limiter \u2581returns \u2581a \u2581new \u2581 limiter"], "bleu": 0.7860753021519787, "rouge_l": 0.8501742160278747}
{"id": 6613, "predictions": ["\u2581// \u2581 Print Headers \u2581prints \u2581the \u2581 headers \u2581of \u2581the \u2581response ."], "references": ["\u2581// \u2581 Print Headers \u2581prints \u2581the \u2581http \u2581 headers \u2581as \u2581 k , v \u2581pairs"], "bleu": 0.4054055547032331, "rouge_l": 0.5809523809523809}
{"id": 6726, "predictions": ["\u2581// \u2581 Bearer Auth \u2581returns \u2581a \u2581 Client Param \u2581that \u2581sets \u2581the \u2581 bearer \u2581 token \u2581to \u2581the \u2581client ."], "references": ["\u2581// \u2581 Bearer Auth \u2581sets \u2581 token \u2581for \u2581HTTP \u2581client"], "bleu": 0.2082198320914845, "rouge_l": 0.5674418604651164}
{"id": 6676, "predictions": ["\u2581// \u2581 AccessToken FromContext \u2581returns \u2581the \u2581 token \u2581 token \u2581from \u2581the \u2581context ."], "references": ["\u2581// \u2581 AccessToken FromContext \u2581returns \u2581the \u2581 token \u2581value \u2581stored \u2581in \u2581context , \u2581if \u2581any ."], "bleu": 0.5024061517596939, "rouge_l": 0.6587473002159828}
{"id": 7411, "predictions": ["\u2581// \u2581 Mutate Allow Trust \u2581replaces \u2581the \u2581trust \u2581trust \u2581for \u2581the \u2581trust"], "references": ["\u2581// \u2581 Mutate Allow Trust \u2581for \u2581 Trust or \u2581sets \u2581the \u2581 Allow Trust Op ' s \u2581 Trust or \u2581field"], "bleu": 0.19317909494338514, "rouge_l": 0.4043560606060606}
{"id": 7868, "predictions": ["\u2581// \u2581 With Route \u2581adds \u2581the \u2581 route \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With Route \u2581adds \u2581the \u2581 route \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6450399987171931, "rouge_l": 0.8169642857142859}
{"id": 6648, "predictions": ["\u2581// \u2581 Uint 64 Var \u2581returns \u2581a \u2581uint 64 \u2581value \u2581from \u2581a \u2581uint 64 \u2581value"], "references": ["\u2581// \u2581 Uint 64 Var \u2581defines \u2581a \u2581uint 64 \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581// \u2581and \u2581usage \u2581string . \u2581The \u2581argument \u2581 p \u2581points \u2581to \u2581a"], "bleu": 0.14834754265891367, "rouge_l": 0.41924398625429554}
{"id": 6644, "predictions": ["\u2581// \u2581 Int 64 Var \u2581returns \u2581a \u2581 set \u2581of \u2581environment \u2581variable \u2581 name \u2581and \u2581usage \u2581string ."], "references": ["\u2581// \u2581 Int 64 Var \u2581defines \u2581an \u2581int 64 \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581// \u2581and \u2581usage \u2581string . \u2581The \u2581argument \u2581 p \u2581points \u2581to \u2581an"], "bleu": 0.21400349630500504, "rouge_l": 0.438562091503268}
{"id": 7867, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6450399987171931, "rouge_l": 0.8169642857142859}
{"id": 7865, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6014225479556896, "rouge_l": 0.7945891783567133}
{"id": 7269, "predictions": ["\u2581// \u2581Less \u2581reports \u2581whether \u2581the \u2581 Symbol \u2581 equals \u2581 j ."], "references": ["\u2581// \u2581Less \u2581returns \u2581true \u2581if \u2581the \u2581 i - th \u2581element ' s \u2581 Priority \u2581is \u2581less \u2581than \u2581the \u2581 j - th \u2581element"], "bleu": 0.07644757114918928, "rouge_l": 0.3668384879725086}
{"id": 6291, "predictions": ["\u2581// \u2581 Has Optional Params \u2581returns \u2581true \u2581if \u2581the \u2581action \u2581is \u2581a \u2581conditional \u2581option"], "references": ["\u2581// \u2581 Has Optional Params \u2581returns \u2581true \u2581if \u2581the \u2581action \u2581takes \u2581optional \u2581parameters , \u2581false \u2581otherwise ."], "bleu": 0.5659554140894317, "rouge_l": 0.6340956340956342}
{"id": 7905, "predictions": ["\u2581// \u2581 Forwarder \u2581returns \u2581a \u2581new \u2581 forwarder"], "references": ["\u2581// \u2581 Forwarder \u2581returns \u2581a \u2581 forwarder \u2581 type \u2581with \u2581the \u2581given \u2581from \u2581and \u2581dest"], "bleu": 0.27539274978744366, "rouge_l": 0.577027027027027}
{"id": 7864, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581 routes \u2581 route \u2581params"], "bleu": 0.6014225479556896, "rouge_l": 0.7945891783567133}
{"id": 7265, "predictions": ["\u2581// \u2581 Append Op \u2581adds \u2581the \u2581given \u2581operation \u2581to \u2581the \u2581context ."], "references": ["\u2581// \u2581 Append Op \u2581creates \u2581and \u2581appends \u2581a \u2581new \u2581op \u2581to \u2581the \u2581current \u2581 set \u2581of \u2581 ByteCode"], "bleu": 0.20173361074811091, "rouge_l": 0.3860759493670886}
{"id": 7814, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 GetApp \u2581 app \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581params"], "bleu": 0.7135770324064035, "rouge_l": 0.8652482269503546}
{"id": 7165, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581encoding \u2581of \u2581 Hook Changed"], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Hook Changed Message \u2581is \u2581of \u2581 type \u2581 json . RawMessage"], "bleu": 0.04290443997281641, "rouge_l": 0.27518796992481204}
{"id": 7408, "predictions": ["\u2581// \u2581Must Parse \u2581returns \u2581a \u2581new \u2581 K P \u2581 K P ."], "references": ["\u2581// \u2581Must Parse \u2581is \u2581the \u2581panic - on - fail \u2581version \u2581of \u2581Parse"], "bleu": 0.1777835117834348, "rouge_l": 0.23076923076923084}
{"id": 7166, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581encoding \u2581of \u2581 Trigger Hook Request ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Trigger Hook Request \u2581is \u2581of \u2581 type \u2581 json . RawMessage"], "bleu": 0.08491894332571055, "rouge_l": 0.3536231884057971}
{"id": 7388, "predictions": ["\u2581// \u2581 Pay With \u2581returns \u2581the \u2581 Pay \u2581 responder \u2581for \u2581the \u2581given \u2581 Asset"], "references": ["\u2581// \u2581 Pay With \u2581is \u2581a \u2581 helper \u2581to \u2581create \u2581 Pay WithPath \u2581struct"], "bleu": 0.2722589423069702, "rouge_l": 0.416382252559727}
{"id": 7822, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581params"], "bleu": 0.8282477531331041, "rouge_l": 0.9375000000000001}
{"id": 8054, "predictions": ["\u2581// \u2581 Offset \u2581returns \u2581the \u2581offset \u2581of \u2581the \u2581given \u2581field ."], "references": ["\u2581// \u2581 Offset \u2581determines \u2581the \u2581 numerical \u2581offset \u2581for \u2581the \u2581given \u2581field"], "bleu": 0.2981247384881109, "rouge_l": 0.6902404526166903}
{"id": 7178, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581representation \u2581of \u2581 Launch ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Launch Specs Response \u2581is \u2581of \u2581 type \u2581 json . RawMessage"], "bleu": 0.03412064524452389, "rouge_l": 0.27518796992481204}
{"id": 7179, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581representation \u2581of \u2581the \u2581 Region ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Region Launch Spec \u2581is \u2581of \u2581 type \u2581 json . RawMessage"], "bleu": 0.040498447060015284, "rouge_l": 0.3151291512915129}
{"id": 7943, "predictions": ["\u2581// \u2581 Memory InUse \u2581returns \u2581the \u2581number \u2581of \u2581devices \u2581in \u2581the \u2581 table ."], "references": ["\u2581// \u2581 Memory InUse \u2581returns \u2581memory \u2581used \u2581by \u2581node table \u2581instance"], "bleu": 0.33649324423301513, "rouge_l": 0.49061662198391426}
{"id": 7164, "predictions": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581a \u2581 Post Artifact Response \u2581into \u2581JSON ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Post Artifact Response \u2581is \u2581of \u2581 type \u2581 json . RawMessage"], "bleu": 0.07673292733354292, "rouge_l": 0.30942028985507253}
{"id": 7163, "predictions": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581a \u2581 Post Artifact Request \u2581to \u2581JSON ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Post Artifact Request \u2581is \u2581of \u2581 type \u2581 json . RawMessage"], "bleu": 0.07673292733354292, "rouge_l": 0.30942028985507253}
{"id": 6327, "predictions": ["\u2581// \u2581Do \u2581 - \u2581 call \u2581the \u2581http . Request \u2581to \u2581 dump \u2581a \u2581request ."], "references": ["\u2581// \u2581Do \u2581 dumps \u2581the \u2581request , \u2581makes \u2581the \u2581request \u2581and \u2581 dumps \u2581the \u2581response \u2581as \u2581specified \u2581by \u2581 Dump Format ."], "bleu": 0.12051495961042724, "rouge_l": 0.358221476510067}
{"id": 7005, "predictions": ["\u2581// \u2581 Redirect \u2581 redirects \u2581the \u2581request \u2581to \u2581the \u2581 URL"], "references": ["\u2581// \u2581 Redirect \u2581 Redirect \u2581 replies \u2581to \u2581the \u2581request \u2581with \u2581a \u2581redirect \u2581to \u2581 url , \u2581which \u2581may \u2581be \u2581a \u2581 path \u2581relative \u2581to \u2581the \u2581request \u2581 path ."], "bleu": 0.07416969631855261, "rouge_l": 0.40516605166051656}
{"id": 7047, "predictions": ["\u2581// \u2581 Close Watcher \u2581 close \u2581the \u2581watcher"], "references": ["\u2581// \u2581 Close Watcher \u2581closes \u2581the \u2581 wa th cer ."], "bleu": 0.33367328963567766, "rouge_l": 0.511744966442953}
{"id": 7167, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581encoding \u2581of \u2581 Trigger Hook Response ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Trigger Hook Response \u2581is \u2581of \u2581 type \u2581 json . RawMessage"], "bleu": 0.08491894332571055, "rouge_l": 0.3536231884057971}
{"id": 8089, "predictions": ["\u2581// \u2581 NewEncoder \u2581returns \u2581a \u2581new \u2581 Encoder \u2581that \u2581writes \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 NewEncoder \u2581creates \u2581a \u2581new \u2581encoder \u2581with \u2581the \u2581given \u2581io . Writer"], "bleu": 0.21305413619585087, "rouge_l": 0.5788849347568209}
{"id": 7792, "predictions": ["\u2581// \u2581 New Zip Walker \u2581creates \u2581a \u2581new \u2581 Zip Walker ."], "references": ["\u2581// \u2581 New Zip Walker \u2581creates \u2581a \u2581new \u2581 Walker \u2581instance \u2581that \u2581can \u2581read \u2581a \u2581 . zip \u2581stream"], "bleu": 0.42996705172356336, "rouge_l": 0.681910569105691}
{"id": 6463, "predictions": ["\u2581// \u2581parse Code \u2581parses \u2581a \u2581string \u2581 code \u2581from \u2581a \u2581string ."], "references": ["\u2581// \u2581 par e Code \u2581parses \u2581a \u2581string \u2581into \u2581a \u2581 Code \u2581or \u2581returns \u25810 \u2581if \u2581the \u2581parse \u2581failed"], "bleu": 0.18691565163288468, "rouge_l": 0.3719512195121951}
{"id": 7803, "predictions": ["\u2581// \u2581 New Exponential Full Jitter \u2581creates \u2581a \u2581new \u2581 Backoff \u2581with \u2581the \u2581given \u2581 size ."], "references": ["\u2581// \u2581 New Exponential Full Jitter \u2581creates \u2581a \u2581new \u2581backoff \u2581using \u2581the \u2581 exponential \u2581with \u2581full \u2581 jitter \u2581backoff \u2581algorithm ."], "bleu": 0.4476724256890489, "rouge_l": 0.6714648602878917}
{"id": 7227, "predictions": ["\u2581// \u2581 Declare Var \u2581is \u2581a \u2581 stub \u2581of \u2581the \u2581 AMQP \u2581frame"], "references": ["\u2581// \u2581 Declare Var \u2581puts \u2581a \u2581new \u2581variable \u2581in \u2581the \u2581stack , \u2581and \u2581returns \u2581the \u2581// \u2581index \u2581where \u2581it \u2581now \u2581re sides"], "bleu": 0.14471067859881398, "rouge_l": 0.3276633840644584}
{"id": 6840, "predictions": ["\u2581// \u2581 OCSP Server \u2581creates \u2581a \u2581 functional \u2581option \u2581that \u2581sets \u2581the \u2581 OCSP \u2581server \u2581// \u2581to \u2581the \u2581 OCSP \u2581server ."], "references": ["\u2581// \u2581 OCSP Server \u2581is \u2581an \u2581 Option \u2581for \u2581setting \u2581the \u2581identity ' s \u2581certificate ' s \u2581 OCSP Server ."], "bleu": 0.19383418023456658, "rouge_l": 0.4203675344563553}
{"id": 7195, "predictions": ["\u2581// \u2581 NewReader \u2581returns \u2581a \u2581new \u2581 loader \u2581that \u2581 loads \u2581the \u2581 data \u2581from \u2581the \u2581 config \u2581file ."], "references": ["\u2581// \u2581 NewReader ByteCode Loader \u2581creates \u2581a \u2581new \u2581object"], "bleu": 0.1352045976914347, "rouge_l": 0.37014563106796117}
{"id": 6419, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581 Err Descriptor \u2581for \u2581the \u2581given \u2581 code ."], "references": ["\u2581// \u2581Get \u2581returns \u2581the \u2581descriptor \u2581if \u2581it \u2581 exists \u2581or \u2581nil \u2581otherwise"], "bleu": 0.27824623288353134, "rouge_l": 0.4029062087186261}
{"id": 7926, "predictions": ["\u2581// \u2581 Mail ing List \u2581creates \u2581a \u2581new \u2581 Mail ing List ."], "references": ["\u2581// \u2581 Mail ing List \u2581creates \u2581a \u2581 Mail ing List \u2581 type \u2581from \u2581a \u2581 domain , \u2581with \u2581the \u2581given \u2581 name"], "bleu": 0.3242437493508171, "rouge_l": 0.5819601040763227}
{"id": 6425, "predictions": ["\u2581// \u2581HTTP StatusCode \u2581returns \u2581http . StatusCode \u2581from \u2581the \u2581error \u2581 type ."], "references": ["\u2581// \u2581HTTP StatusCode \u2581returns \u2581the \u2581HTTP \u2581 status \u2581 code \u2581for \u2581the \u2581given \u2581error \u2581or \u2581500 \u2581if \u2581it \u2581doesn ' t \u2581know"], "bleu": 0.14962307185302257, "rouge_l": 0.3276633840644584}
{"id": 7846, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581patch \u2581 o \u2581 app \u2581params \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581params"], "bleu": 0.7778111223054219, "rouge_l": 0.914085914085914}
{"id": 8010, "predictions": ["\u2581// \u2581 Valid \u2581returns \u2581true \u2581if \u2581the \u2581 iterator \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid \u2581returns \u2581true \u2581when \u2581 iterator \u2581reach es \u2581the \u2581end"], "bleu": 0.4408231875586727, "rouge_l": 0.5833333333333334}
{"id": 7257, "predictions": ["\u2581// \u2581 NewString string Loader \u2581creates \u2581a \u2581new \u2581String \u2581instance \u2581from \u2581the \u2581 set \u2581of \u2581 type \u2581// \u2581 vars ."], "references": ["\u2581// \u2581 NewString ByteCode Loader \u2581creates \u2581a \u2581new \u2581object"], "bleu": 0.2162601067591834, "rouge_l": 0.5029446407538279}
{"id": 6743, "predictions": ["\u2581// \u2581 Merge \u2581merges \u2581two \u2581 src \u2581into \u2581dst ."], "references": ["\u2581// \u2581 Merge \u2581will \u2581attempt \u2581to \u2581 merge \u2581the \u2581 data \u2581from \u2581 src \u2581into \u2581dst . \u2581They \u2581 s hou d \u2581be \u2581either \u2581both \u2581maps \u2581or \u2581both \u2581structs ."], "bleu": 0.07954038575990627, "rouge_l": 0.3669172932330827}
{"id": 6214, "predictions": ["\u2581// \u2581 R l 10 Locator \u2581creates \u2581a \u2581 R l 10 Locator \u2581instance ."], "references": ["\u2581// \u2581 R l 10 Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.4071220775553065, "rouge_l": 0.6}
{"id": 6517, "predictions": ["\u2581// \u2581 Exit \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581prints \u2581the \u2581 status \u2581of \u2581the \u2581message ."], "references": ["\u2581// \u2581 Exit \u2581is \u2581a \u2581 standalone \u2581 exit \u2581function \u2581for \u2581simple \u2581checks \u2581without \u2581multiple \u2581results \u2581// \u2581or \u2581 perf data ."], "bleu": 0.2664271464448004, "rouge_l": 0.45110928512736237}
{"id": 6217, "predictions": ["\u2581// \u2581 T SS Plugin Locator \u2581creates \u2581a \u2581 T SS Plugin Locator ."], "references": ["\u2581// \u2581 T SS Plugin Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.4073224091836952, "rouge_l": 0.6168539325842697}
{"id": 6741, "predictions": ["\u2581// \u2581 Trigger With Details \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581a \u2581 structured \u2581 status \u2581// \u2581for \u2581the \u2581given \u2581 description ."], "references": ["\u2581// \u2581 Trigger With Details \u2581triggers \u2581an \u2581 incident \u2581using \u2581the \u2581default \u2581client \u2581with \u2581a \u2581// \u2581 description \u2581string \u2581and \u2581a \u2581 key - value \u2581 map \u2581that \u2581will \u2581be"], "bleu": 0.20088650124042018, "rouge_l": 0.363095238095238}
{"id": 6153, "predictions": ["\u2581// \u2581 Right Script Attachment Locator \u2581returns \u2581a \u2581 script Attachment Locator \u2581that \u2581will \u2581 remove \u2581the \u2581// \u2581 script \u2581as \u2581a \u2581 script ."], "references": ["\u2581// \u2581 Right Script Attachment Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.24628069710700265, "rouge_l": 0.5236051502145923}
{"id": 7830, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 post \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 post \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.7135770324064035, "rouge_l": 0.8652482269503546}
{"id": 6216, "predictions": ["\u2581// \u2581 T SS Control Locator \u2581creates \u2581a \u2581 T SS Control Locator \u2581instance"], "references": ["\u2581// \u2581 T SS Control Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3967335525478968, "rouge_l": 0.548314606741573}
{"id": 6925, "predictions": ["\u2581// \u2581 Between \u2581returns \u2581a \u2581new \u2581condition \u2581with \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 Between \u2581adds \u2581\" BETWEEN \u2581... \u2581AND \u2581 ...\" \u2581clause \u2581to \u2581the \u2581 Condition \u2581and \u2581returns \u2581it \u2581for \u2581method \u2581chain ."], "bleu": 0.09666537353116829, "rouge_l": 0.2793040293040293}
{"id": 6646, "predictions": ["\u2581// \u2581 Uint Var \u2581returns \u2581a \u2581uint 64 \u2581value \u2581from \u2581a \u2581uint 32 \u2581value"], "references": ["\u2581// \u2581 Uint Var \u2581defines \u2581a \u2581uint \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581and \u2581// \u2581usage \u2581string . \u2581The \u2581argument \u2581 p \u2581points \u2581to \u2581a \u2581uint \u2581variable"], "bleu": 0.10325310040189022, "rouge_l": 0.3839160839160839}
{"id": 6199, "predictions": ["\u2581// \u2581 Temp Instance Price Locator \u2581returns \u2581a \u2581new \u2581instance \u2581of \u2581the \u2581 trie \u2581locator \u2581// \u2581with \u2581the \u2581given \u2581 data ."], "references": ["\u2581// \u2581 Temp Instance Price Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3292010361291119, "rouge_l": 0.671559633027523}
{"id": 6267, "predictions": ["\u2581// \u2581 User Preference Info Locator \u2581returns \u2581a \u2581 User Preference Info Locator ."], "references": ["\u2581// \u2581 User Preference Info Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.4073224091836952, "rouge_l": 0.6168539325842697}
{"id": 7297, "predictions": ["\u2581// \u2581 Errorf \u2581is \u2581a \u2581 functional \u2581option \u2581that \u2581sets \u2581the \u2581 Sentinel \u2581function ."], "references": ["\u2581// \u2581 Errorf \u2581is \u2581a \u2581 sentinel \u2581option \u2581to \u2581 set \u2581a \u2581error \u2581logger ."], "bleu": 0.4071220775553065, "rouge_l": 0.6}
{"id": 6189, "predictions": ["\u2581// \u2581 Cloud Pins Metric Locator \u2581returns \u2581a \u2581 Cloud \u2581 Metric \u2581that Metric Locator \u2581// \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Cloud Bill Metric Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.17470942957770763, "rouge_l": 0.5596330275229358}
{"id": 7801, "predictions": ["\u2581// \u2581 Reset \u2581resets \u2581the \u2581backoff \u2581duration \u2581to \u2581the \u2581next \u2581backoff ."], "references": ["\u2581// \u2581 Reset \u2581sets \u2581the \u2581 Backoff \u2581to \u2581its \u2581initial \u2581conditions \u2581ready \u2581to \u2581start \u2581over ."], "bleu": 0.15937425748101036, "rouge_l": 0.4178082191780822}
{"id": 7811, "predictions": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581 post \u2581 Apps \u2581params"], "references": ["\u2581// \u2581 With Body \u2581adds \u2581the \u2581 body \u2581to \u2581the \u2581 post \u2581 apps \u2581params"], "bleu": 0.8761560783209453, "rouge_l": 0.9333333333333336}
{"id": 8112, "predictions": ["\u2581// \u2581 New WaitGroup \u2581returns \u2581a \u2581 WaitGroup \u2581that \u2581will \u2581 emit \u2581 WaitGroup ."], "references": ["\u2581// \u2581 New WaitGroup \u2581instantiate s \u2581a \u2581new \u2581 WaitGroup \u2581with \u2581the \u2581given \u2581 throttle ."], "bleu": 0.26931261122575345, "rouge_l": 0.5772870662460569}
{"id": 7296, "predictions": ["\u2581// \u2581 Logf \u2581is \u2581a \u2581 functional \u2581option \u2581to \u2581 set \u2581the \u2581 Sentinel \u2581function ."], "references": ["\u2581// \u2581 Logf \u2581is \u2581a \u2581 sentinel \u2581option \u2581to \u2581 set \u2581a \u2581logger ."], "bleu": 0.5071960939456881, "rouge_l": 0.7422566371681415}
{"id": 7901, "predictions": ["\u2581// \u2581 New Parameter \u2581creates \u2581a \u2581new \u2581 Parameter \u2581 Parameter"], "references": ["\u2581// \u2581 A \u2581capacity \u2581of \u2581 2 \u2581seems \u2581to \u2581be \u2581a \u2581good \u2581guess \u2581for \u2581the \u2581number \u2581of \u2581 aliases ."], "bleu": 0.07866097995352442, "rouge_l": 0.24522613065326637}
{"id": 6336, "predictions": ["\u2581// \u2581 Interactive \u2581returns \u2581a \u2581new \u2581 Logger \u2581that \u2581logs \u2581logs \u2581to \u2581the \u2581log \u2581logger ."], "references": ["\u2581// \u2581 Interactive \u2581configure s \u2581the \u2581logger \u2581to \u2581log \u2581messages \u2581of \u2581level \u2581 Info \u2581or \u2581higher \u2581to \u2581 Stdout \u2581and \u2581messages \u2581// \u2581of \u2581level \u2581 Error \u2581or \u2581less er \u2581to"], "bleu": 0.07309601795775379, "rouge_l": 0.20608108108108109}
{"id": 6494, "predictions": ["\u2581// \u2581 With Scaling Interval \u2581sets \u2581the \u2581 set \u2581of \u2581 replicas \u2581for \u2581the \u2581batch ."], "references": ["\u2581// \u2581 With Instance Limit \u2581sets \u2581a \u2581limit \u2581on \u2581amount \u2581of \u2581additional \u2581instances \u2581 spawned \u2581by \u2581 Batch ing Writer"], "bleu": 0.1325988138590531, "rouge_l": 0.3267857142857143}
{"id": 6416, "predictions": ["\u2581// \u2581 New Lexer String \u2581returns \u2581a \u2581new \u2581 Lexer \u2581with \u2581the \u2581given \u2581 name \u2581and \u2581 size ."], "references": ["\u2581// \u2581 New Lexer String \u2581creates \u2581a \u2581new \u2581 Lexer \u2581reading \u2581from \u2581a \u2581string . \u2581This \u2581// \u2581 Lexer \u2581has \u2581a \u2581Default Tokenizer \u2581according \u2581to \u2581 posix \u2581and \u2581whitespace split"], "bleu": 0.21854829007024745, "rouge_l": 0.4315112540192926}
{"id": 7840, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 GetApp \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.6008121812206054, "rouge_l": 0.8034447821681862}
{"id": 6709, "predictions": ["\u2581// \u2581 Inline Edit \u2581 edit \u2581the \u2581 data \u2581to \u2581the \u2581 page ."], "references": ["\u2581// \u2581 Inline Edit \u2581using \u2581to \u2581make \u2581 inline \u2581 edit \u2581resource \u2581shown \u2581as \u2581 slide out"], "bleu": 0.2496785520864577, "rouge_l": 0.4438669438669438}
{"id": 7334, "predictions": ["\u2581// \u2581 Mutate Account Merge \u2581merges \u2581the \u2581given \u2581account \u2581with \u2581the \u2581given \u2581 o o \u2581 o \u2581 Account \u2581// \u2581 Merge \u2581 set \u2581to \u2581the \u2581given \u2581account ."], "references": ["\u2581// \u2581 Mutate Account Merge \u2581for \u2581 Destination \u2581sets \u2581the \u2581 Account Merge Builder ' s \u2581 Destination \u2581field"], "bleu": 0.19037861963633804, "rouge_l": 0.43293115684882894}
{"id": 7843, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 GetApp \u2581 app \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.5977178620446784, "rouge_l": 0.8064211520302172}
{"id": 7368, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581adds \u2581the \u2581 Sequence \u2581to \u2581the \u2581 Sequence ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Sequence \u2581sets \u2581the \u2581 SeqNum \u2581on \u2581the \u2581transaction ."], "bleu": 0.3072189008341865, "rouge_l": 0.6346820809248555}
{"id": 7169, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581encoding \u2581of \u2581 Launch Info"], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Launch Info \u2581is \u2581of \u2581 type \u2581 json . RawMessage ."], "bleu": 0.04290443997281641, "rouge_l": 0.27518796992481204}
{"id": 7403, "predictions": ["\u2581// \u2581 Mutate CreateAccount \u2581creates \u2581the \u2581 Destination \u2581for \u2581the \u2581given \u2581 authorizer"], "references": ["\u2581// \u2581 Mutate CreateAccount \u2581for \u2581 Destination \u2581sets \u2581the \u2581 CreateAccount Op ' s \u2581 Destination \u2581// \u2581field"], "bleu": 0.2381650092972003, "rouge_l": 0.5015416238437821}
{"id": 7833, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 post \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 post \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.7462638751423939, "rouge_l": 0.8800721370604146}
{"id": 7093, "predictions": ["\u2581// \u2581 Final Handler \u2581is \u2581a \u2581handler \u2581that \u2581returns \u2581a \u2581handler \u2581that \u2581serves \u2581the \u2581// \u2581http . Handler ."], "references": ["\u2581// \u2581 Final Handler \u2581is \u2581a \u2581 helper \u2581function \u2581to \u2581wrap \u2581the \u2581last \u2581http . Handler \u2581element \u2581// \u2581in \u2581the \u2581 Chain Handlers \u2581function ."], "bleu": 0.27911891202684125, "rouge_l": 0.488}
{"id": 7775, "predictions": ["\u2581// \u2581Add Raw Resource \u2581adds \u2581a \u2581raw \u2581 Raw Resource \u2581to \u2581the \u2581 Con ML Pipeline"], "references": ["\u2581// Add Raw Resource \u2581 helper \u2581to \u2581 add \u2581a \u2581resource \u2581to \u2581the \u2581pipeline \u2581manifest"], "bleu": 0.1474496993451218, "rouge_l": 0.3893617021276596}
{"id": 7841, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 GetApp \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.6008121812206054, "rouge_l": 0.8034447821681862}
{"id": 6193, "predictions": ["\u2581// \u2581 Instance Usage Period Locator \u2581returns \u2581a \u2581 Instance Usage Locator Locator \u2581instance"], "references": ["\u2581// \u2581 Instance Usage Period Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3967335525478968, "rouge_l": 0.548314606741573}
{"id": 7055, "predictions": ["\u2581// \u2581 Redirect \u2581sets \u2581the \u2581 status \u2581 code \u2581for \u2581the \u2581 status \u2581 code ."], "references": ["\u2581// \u2581 Redirect \u2581performs \u2581a \u2581redirect ing \u2581to \u2581the \u2581 url , \u2581if \u2581the \u2581 code \u2581belongs \u2581to \u2581// \u2581one \u2581of \u2581 Status Moved Permanently , \u2581 Status Found ,"], "bleu": 0.091398435420446, "rouge_l": 0.370945945945946}
{"id": 7831, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 post \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 post \u2581 apps \u2581 app \u2581 routes \u2581params"], "bleu": 0.7135770324064035, "rouge_l": 0.8652482269503546}
{"id": 6664, "predictions": ["\u2581// \u2581Get This \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 path ."], "references": ["\u2581// \u2581Get This PathParts \u2581returns \u2581the \u2581same \u2581information \u2581as \u2581Get PathParts \u2581for \u2581the \u2581// \u2581current \u2581executable ."], "bleu": 0.1619557012853241, "rouge_l": 0.4020715630885123}
{"id": 6231, "predictions": ["\u2581// \u2581 WriteHeader \u2581writes \u2581the \u2581 Metadata \u2581header \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// \u2581 WriteHeader \u2581writes \u2581the \u2581generic \u2581header \u2581 text ."], "bleu": 0.3872015705071016, "rouge_l": 0.6233576642335765}
{"id": 7877, "predictions": ["\u2581// \u2581Get Listen Addr \u2581returns \u2581the \u2581address \u2581of \u2581the \u2581 listen \u2581address"], "references": ["\u2581// \u2581Get Listen Addr \u2581returns \u2581the \u2581current \u2581local node . address 2 \u2581instance"], "bleu": 0.4327621739875601, "rouge_l": 0.4765625000000001}
{"id": 7039, "predictions": ["\u2581// \u2581WebSocket HandlerFunc \u2581returns \u2581a \u2581new \u2581 HandlerFunc \u2581that \u2581implements \u2581the \u2581 HandlerFunc \u2581interface ."], "references": ["\u2581// \u2581WebSocket HandlerFunc \u2581convert \u2581websocket \u2581function \u2581to \u2581 pos sum . HandlerFunc ."], "bleu": 0.17609282679116184, "rouge_l": 0.43416370106761565}
{"id": 7819, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 GetApp \u2581 s \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 get \u2581 apps \u2581params"], "bleu": 0.7505336182671021, "rouge_l": 0.8666666666666667}
{"id": 7013, "predictions": ["\u2581// \u2581 Fresh Session \u2581 clear s \u2581the \u2581session \u2581with \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Fresh Session \u2581 set \u2581session"], "bleu": 0.31314224813827346, "rouge_l": 0.583732057416268}
{"id": 6993, "predictions": ["\u2581// \u2581 Delete \u2581removes \u2581the \u2581 key \u2581from \u2581the \u2581 redis \u2581store"], "references": ["\u2581// \u2581 Delete \u2581value \u2581in \u2581 redis \u2581session"], "bleu": 0.22997519112894443, "rouge_l": 0.5187074829931972}
{"id": 7098, "predictions": ["\u2581// \u2581 With Template FromFile s \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581file \u2581to \u2581the \u2581given \u2581file \u2581 name ."], "references": ["\u2581// \u2581 With Template FromFile s \u2581adds \u2581a \u2581template \u2581parsed \u2581from \u2581files ."], "bleu": 0.28592291256793106, "rouge_l": 0.44111570247933884}
{"id": 7097, "predictions": ["\u2581// \u2581 With File Find Func \u2581returns \u2581a \u2581 Option \u2581that \u2581sets \u2581the \u2581function \u2581for \u2581the \u2581given \u2581function ."], "references": ["\u2581// \u2581 With File Find Func \u2581sets \u2581the \u2581function \u2581that \u2581will \u2581return \u2581the \u2581// \u2581file \u2581 path \u2581on \u2581disk \u2581based \u2581on \u2581 filename \u2581provided \u2581from \u2581files \u2581// \u2581def ind \u2581using"], "bleu": 0.21453652514434138, "rouge_l": 0.392282958199357}
{"id": 6501, "predictions": ["\u2581// \u2581 Stats \u2581returns \u2581the \u2581stats \u2581for \u2581the \u2581stream ."], "references": ["\u2581// \u2581 Stats \u2581of \u2581the \u2581stream"], "bleu": 0.27901593935858265, "rouge_l": 0.6545064377682404}
{"id": 7934, "predictions": ["\u2581// \u2581 Free \u2581 releases \u2581the \u2581 p ' s \u2581free \u2581state ."], "references": ["\u2581// \u2581 Free \u2581implements \u2581 C \u2581like \u2581memory \u2581deal locator"], "bleu": 0.18798317647335086, "rouge_l": 0.3562043795620438}
{"id": 7925, "predictions": ["\u2581// \u2581 concat Args \u2581 - \u2581 get \u2581a \u2581 slice \u2581of \u2581arguments"], "references": ["\u2581// \u2581 Helper \u2581to \u2581 concatenate \u2581arguments \u2581into \u2581a \u2581string , \u2581// \u2581with \u2581spaces \u2581between \u2581the \u2581arguments"], "bleu": 0.10990182654344814, "rouge_l": 0.3255069370330843}
{"id": 7871, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 get \u2581tasks \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 get \u2581tasks \u2581params"], "bleu": 1.0, "rouge_l": 1.0}
{"id": 7091, "predictions": ["\u2581// \u2581 New Field Error \u2581returns \u2581a \u2581new \u2581 Form Errors \u2581instance ."], "references": ["\u2581// \u2581 New Field Error \u2581initializes \u2581 Form Errors \u2581with \u2581one \u2581field \u2581error ."], "bleu": 0.4233784290521556, "rouge_l": 0.6622436670687575}
{"id": 7919, "predictions": ["\u2581// \u2581 Domain \u2581returns \u2581a \u2581 Domain"], "references": ["\u2581// \u2581 Domain \u2581creates \u2581a \u2581 domain \u2581 type \u2581with \u2581the \u2581given \u2581 name"], "bleu": 0.15124760523215705, "rouge_l": 0.4491899852724595}
{"id": 6638, "predictions": ["\u2581// \u2581 Close \u2581closes \u2581the \u2581underlying \u2581file ."], "references": ["\u2581// \u2581 Close \u2581our \u2581writer . \u2581 Subsequent \u2581writes \u2581will \u2581fail ."], "bleu": 0.19142013845510458, "rouge_l": 0.3860759493670886}
{"id": 6390, "predictions": ["\u2581// \u2581Parse \u2581parses \u2581a \u2581 text \u2581 code \u2581into \u2581a \u2581 BER - encoded \u2581 code ."], "references": ["\u2581// Parse \u2581parses \u2581the \u2581XPath \u2581expression , \u2581 xp , \u2581returning \u2581an \u2581XPath \u2581executor ."], "bleu": 0.09083627868206415, "rouge_l": 0.2528497409326425}
{"id": 7973, "predictions": ["\u2581// \u2581 Item Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 size \u2581of \u2581the \u2581 data \u2581in \u2581the \u2581 data ."], "references": ["\u2581// \u2581 Item Size \u2581returns \u2581total \u2581bytes \u2581consumed \u2581by \u2581item \u2581representation"], "bleu": 0.21279882820441612, "rouge_l": 0.33116178067318125}
{"id": 6433, "predictions": ["\u2581// \u2581 Outgoing Context With Token \u2581returns \u2581a \u2581context \u2581with \u2581the \u2581given \u2581 token ."], "references": ["\u2581// \u2581 Outgoing Context With Token \u2581returns \u2581an \u2581outgoing \u2581context \u2581with \u2581the \u2581 token"], "bleu": 0.5681096832337497, "rouge_l": 0.832764505119454}
{"id": 6436, "predictions": ["\u2581// \u2581 Outgoing Context With Key \u2581returns \u2581the \u2581context \u2581with \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Outgoing Context With Key \u2581returns \u2581an \u2581outgoing \u2581context \u2581with \u2581the \u2581 key"], "bleu": 0.5681096832337497, "rouge_l": 0.832764505119454}
{"id": 7172, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581encoding \u2581of \u2581 Var 3"], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Var 3 \u2581is \u2581of \u2581 type \u2581 json . RawMessage ."], "bleu": 0.04290443997281641, "rouge_l": 0.27518796992481204}
{"id": 7171, "predictions": ["\u2581// \u2581MarshalJSON \u2581marshal s \u2581the \u2581variable \u2581 Var 1 \u2581into \u2581JSON \u2581 byte \u2581array ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Var 1 \u2581is \u2581of \u2581 type \u2581 json . RawMessage ."], "bleu": 0.07412555955791748, "rouge_l": 0.3353951890034364}
{"id": 7170, "predictions": ["\u2581// \u2581MarshalJSON \u2581returns \u2581the \u2581JSON \u2581encoding \u2581of \u2581 Var ."], "references": ["\u2581// \u2581MarshalJSON \u2581calls \u2581 json . RawMessage \u2581method \u2581of \u2581the \u2581same \u2581 name . \u2581 Required \u2581since \u2581// \u2581 Var \u2581is \u2581of \u2581 type \u2581 json . RawMessage . ."], "bleu": 0.03412064524452389, "rouge_l": 0.27518796992481204}
{"id": 7769, "predictions": ["\u2581// \u2581 New Show Cmd \u2581returns \u2581a \u2581new \u2581 Show Cmd \u2581instance"], "references": ["\u2581// \u2581 New Show Cmd \u2581creates \u2581a \u2581new \u2581 Show Cmd \u2581instance ."], "bleu": 0.7003015589741095, "rouge_l": 0.8736979166666665}
{"id": 7230, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 empty \u2581 admission \u2581 admission \u2581 set ."], "references": ["\u2581// \u2581 New ByteCode \u2581creates \u2581an \u2581 empty \u2581 ByteCode \u2581instance ."], "bleu": 0.22894156860669912, "rouge_l": 0.5291201982651798}
{"id": 6439, "predictions": ["\u2581// \u2581 Outgoing Context With ID \u2581returns \u2581a \u2581context \u2581with \u2581the \u2581given \u2581 ID ."], "references": ["\u2581// \u2581 Outgoing Context With ID \u2581returns \u2581an \u2581outgoing \u2581context \u2581with \u2581the \u2581 id"], "bleu": 0.5423782837718303, "rouge_l": 0.7633674630261661}
{"id": 7786, "predictions": ["\u2581// \u2581 Tag \u2581returns \u2581the \u2581tag \u2581for \u2581the \u2581given \u2581 key ."], "references": ["\u2581// \u2581 Tag \u2581gets \u2581the \u2581tag \u2581value \u2581for \u2581a \u2581specified \u2581 key ."], "bleu": 0.29444053526895814, "rouge_l": 0.71484375}
{"id": 7718, "predictions": ["\u2581// \u2581string Table Dash \u2581returns \u2581the \u2581 path \u2581of \u2581the \u2581 table \u2581 type ."], "references": ["\u2581// \u2581string Table Dash \u2581 - \u2581output \u2581 table \u2581 dash . \u2581 Markdown \u2581or \u2581not \u2581depending \u2581on \u2581settings ."], "bleu": 0.23199296989247725, "rouge_l": 0.5013698630136987}
{"id": 7221, "predictions": ["\u2581// \u2581 Warnf \u2581logs \u2581a \u2581formatted \u2581formatted \u2581message ."], "references": ["\u2581// \u2581 Warnf \u2581is \u2581used \u2581to \u2581generate \u2581warnings \u2581during \u2581virtual \u2581machine \u2581execution"], "bleu": 0.18822631894109965, "rouge_l": 0.2785388127853881}
{"id": 6834, "predictions": ["\u2581// \u2581 Issue \u2581creates \u2581a \u2581new \u2581 Identity \u2581 Identity"], "references": ["\u2581// \u2581 Issue \u2581issues \u2581a \u2581new \u2581 Identity \u2581with \u2581 this \u2581one \u2581as \u2581its \u2581parent ."], "bleu": 0.26522408033276956, "rouge_l": 0.5907990314769976}
{"id": 7100, "predictions": ["\u2581// \u2581 With Template FromString s \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581 name \u2581to \u2581the \u2581 Options ."], "references": ["\u2581// \u2581 With Template FromString s \u2581adds \u2581a \u2581template \u2581parsed \u2581from \u2581string ."], "bleu": 0.3014335251508215, "rouge_l": 0.4528101802757158}
{"id": 7810, "predictions": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 post \u2581 Apps \u2581params"], "references": ["\u2581// \u2581 With HTTPClient \u2581adds \u2581the \u2581 HTTPClient \u2581to \u2581the \u2581 post \u2581 apps \u2581params"], "bleu": 0.8761560783209453, "rouge_l": 0.9333333333333336}
{"id": 7668, "predictions": ["\u2581// \u2581 S RS \u2581 - \u2581 get \u2581 RS"], "references": ["\u2581// \u2581 S RS \u2581returns \u2581the \u2581projection \u2581of \u2581the \u2581 map ."], "bleu": 0.3006425395194706, "rouge_l": 0.44721407624633425}
{"id": 7981, "predictions": ["\u2581// \u2581 Delete \u2581 - \u2581 Delete \u2581a \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Delete \u2581an \u2581item \u2581// \u2581 Delete \u2581always \u2581 succeed \u2581if \u2581an \u2581item \u2581 exists ."], "bleu": 0.17200565404503979, "rouge_l": 0.5208110992529349}
{"id": 7659, "predictions": ["\u2581// \u2581Iterate \u2581returns \u2581a \u2581 Iterator \u2581for \u2581the \u2581 set \u2581of \u2581elements ."], "references": ["\u2581// \u2581Iterate \u2581over \u2581entries \u2581in \u2581the \u2581hash \u2581 table ."], "bleu": 0.14949751774990683, "rouge_l": 0.44525547445255476}
{"id": 7348, "predictions": ["\u2581// \u2581String \u2581returns \u2581the \u2581 price \u2581of \u2581the \u2581 price ."], "references": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581rep res e nation \u2581of \u2581` p `"], "bleu": 0.1869018372152498, "rouge_l": 0.3283983849259758}
{"id": 6892, "predictions": ["\u2581// \u2581 Before Insert \u2581inserts \u2581a \u2581 set \u2581of \u2581 TimeStamp s \u2581to \u2581the \u2581 trie ."], "references": ["\u2581// \u2581 Before Insert \u2581sets \u2581current \u2581time \u2581to \u2581 CreatedAt \u2581and \u2581 UpdatedAt \u2581field . \u2581// \u2581It \u2581always \u2581returns \u2581nil ."], "bleu": 0.18405318356016778, "rouge_l": 0.36155800169348007}
{"id": 7736, "predictions": ["\u2581// \u2581Get \u2581first \u2581 name \u2581from \u2581the \u2581given \u2581 name \u2581and \u2581returns \u2581it \u2581as \u2581a \u2581string ."], "references": ["\u2581// \u2581Get opt \u2581reads \u2581environment \u2581variables . \u2581// \u2581If \u2581not \u2581found \u2581will \u2581return \u2581a \u2581supplied \u2581default \u2581value"], "bleu": 0.10802314890908067, "rouge_l": 0.1764705882352941}
{"id": 6650, "predictions": ["\u2581// \u2581 StringVar \u2581adds \u2581a \u2581string \u2581to \u2581the \u2581environment \u2581variable ."], "references": ["\u2581// \u2581 StringVar \u2581defines \u2581a \u2581string \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581// \u2581and \u2581usage \u2581string . \u2581The \u2581argument \u2581 p \u2581points \u2581to \u2581a \u2581string \u2581variable \u2581in"], "bleu": 0.049600265336077476, "rouge_l": 0.3151291512915129}
{"id": 8016, "predictions": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581number \u2581of \u2581bytes \u2581in \u2581the \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 Version \u2581 1 \u2581header \u2581 size \u2581 plus \u2581the \u2581 size \u2581of \u2581all \u2581the \u2581offsets"], "bleu": 0.2401843322011395, "rouge_l": 0.37754199823165346}
{"id": 6642, "predictions": ["\u2581// \u2581 IntVar \u2581returns \u2581the \u2581value \u2581of \u2581a \u2581variable \u2581in \u2581the \u2581 form \u2581of \u2581the \u2581environment \u2581variable \u2581// \u2581and \u2581the \u2581value \u2581of \u2581the \u2581environment \u2581variable ."], "references": ["\u2581// \u2581 IntVar \u2581defines \u2581an \u2581int \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581and \u2581// \u2581usage \u2581string . \u2581The \u2581argument \u2581 p \u2581points \u2581to \u2581an \u2581int \u2581variable \u2581in"], "bleu": 0.10308228615017485, "rouge_l": 0.2115606936416185}
{"id": 7815, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 GetApp \u2581 app \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581params"], "bleu": 0.7135770324064035, "rouge_l": 0.8652482269503546}
{"id": 6728, "predictions": ["\u2581// \u2581 Sanitizer Enabled \u2581is \u2581a \u2581 Client Func \u2581that \u2581sets \u2581the \u2581 content \u2581of \u2581the \u2581 healthcheck \u2581// \u2581to \u2581the \u2581 set \u2581of \u2581 matchers ."], "references": ["\u2581// \u2581 Sanitizer Enabled \u2581will \u2581 enable \u2581the \u2581input \u2581 sanitizer \u2581which \u2581passes \u2581the \u2581 URL \u2581// \u2581 path \u2581through \u2581a \u2581strict \u2581whitelist ."], "bleu": 0.17098323692758396, "rouge_l": 0.4756335282651072}
{"id": 7930, "predictions": ["\u2581// \u2581 New Byte Key Item \u2581returns \u2581a \u2581new \u2581pointer \u2581to \u2581a \u2581new \u2581 byte \u2581 slice ."], "references": ["\u2581// \u2581 New Byte Key Item \u2581creates \u2581a \u2581new \u2581item \u2581from \u2581bytes"], "bleu": 0.3411488281065382, "rouge_l": 0.5532879818594103}
{"id": 8025, "predictions": ["\u2581// \u2581 New Response Wrapper \u2581returns \u2581a \u2581 Response Wrapper \u2581with \u2581the \u2581given \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 New Response Wrapper \u2581creates \u2581a \u2581new \u2581wrapper . \u2581The \u2581passed \u2581http . ResponseWriter \u2581is \u2581// \u2581used \u2581in \u2581case \u2581the \u2581wrapper \u2581needs \u2581to \u2581be \u2581 hijack ed ."], "bleu": 0.14548716046396645, "rouge_l": 0.38019390581717455}
{"id": 7874, "predictions": ["\u2581// \u2581Set Backend \u2581sets \u2581the \u2581backend \u2581to \u2581 set \u2581the \u2581backend"], "references": ["\u2581// Set Backend \u2581sets \u2581the \u2581current \u2581backend"], "bleu": 0.23462350320527994, "rouge_l": 0.5787476280834916}
{"id": 7892, "predictions": ["\u2581// \u2581 F Exists \u2581checks \u2581if \u2581the \u2581given \u2581 name \u2581 exists \u2581in \u2581the \u2581 path"], "references": ["\u2581// \u2581 F Exists \u2581true \u2581if \u2581a \u2581file \u2581or \u2581 dir \u2581 exists"], "bleu": 0.26220676436185975, "rouge_l": 0.5622119815668203}
{"id": 8031, "predictions": ["\u2581// \u2581 Expiration \u2581sets \u2581the \u2581 token \u2581to \u2581use \u2581for \u2581the \u2581 token ."], "references": ["\u2581// \u2581 Expiration \u2581sets \u2581the \u2581expiration \u2581time \u2581of \u2581the \u2581 auth \u2581 token"], "bleu": 0.4001601601922499, "rouge_l": 0.5965770171149144}
{"id": 6723, "predictions": ["\u2581// \u2581 Tracer \u2581returns \u2581a \u2581new \u2581 Client Param \u2581that \u2581 wraps \u2581the \u2581 Tracer ."], "references": ["\u2581// \u2581 Tracer \u2581sets \u2581a \u2581request \u2581tracer \u2581 constructor"], "bleu": 0.15844501337268932, "rouge_l": 0.4212707182320442}
{"id": 8036, "predictions": ["\u2581// \u2581 Extractor \u2581creates \u2581a \u2581 Token Opt \u2581that \u2581sets \u2581the \u2581 Extractor \u2581of \u2581the \u2581request ."], "references": ["\u2581// \u2581 Extractor \u2581extracts \u2581a \u2581 token \u2581from \u2581a \u2581request"], "bleu": 0.1661742929957894, "rouge_l": 0.4662420382165604}
{"id": 6661, "predictions": ["\u2581// \u2581 FileExists \u2581checks \u2581if \u2581a \u2581file \u2581 exists \u2581in \u2581the \u2581file \u2581system ."], "references": ["\u2581// \u2581 FileExists \u2581returns \u2581a \u2581flag \u2581indicating \u2581whether \u2581a \u2581provided \u2581file \u2581 path \u2581 exists ."], "bleu": 0.19846438615928746, "rouge_l": 0.5269978401727862}
{"id": 7339, "predictions": ["\u2581// \u2581Create \u2581a \u2581new \u2581 Manage Offer ."], "references": ["\u2581// \u2581Create Passive Offer \u2581creates \u2581a \u2581new \u2581 passive \u2581offer"], "bleu": 0.2872949152245254, "rouge_l": 0.5446428571428571}
{"id": 7921, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Err \u2581instance"], "references": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 Err \u2581with \u2581the \u2581given \u2581 Info \u2581and \u2581optional \u2581public \u2581message"], "bleu": 0.21599098873054193, "rouge_l": 0.5101553166069295}
{"id": 7820, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581params"], "bleu": 0.8003203203844999, "rouge_l": 0.9285714285714285}
{"id": 7964, "predictions": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581last \u2581element \u2581in \u2581the \u2581list ."], "references": ["\u2581// \u2581 Size \u2581returns \u2581the \u2581 size \u2581of \u2581a \u2581node"], "bleu": 0.5129497107827519, "rouge_l": 0.6639455782312924}
{"id": 6524, "predictions": ["\u2581// \u2581 Unknown f \u2581is \u2581a \u2581convenience \u2581method \u2581that \u2581will \u2581 set \u2581the \u2581 status \u2581of \u2581the \u2581check ."], "references": ["\u2581// \u2581 Unknown f \u2581is \u2581a \u2581 shorthand \u2581function \u2581which \u2581exits \u2581the \u2581check \u2581with \u2581 status \u2581// \u2581 UNKNOWN \u2581and \u2581the \u2581message \u2581provided ."], "bleu": 0.2863503559188096, "rouge_l": 0.5466766243465272}
{"id": 6523, "predictions": ["\u2581// \u2581 Critical f \u2581logs \u2581a \u2581 critical \u2581message ."], "references": ["\u2581// \u2581 Critical f \u2581is \u2581a \u2581 shorthand \u2581function \u2581which \u2581exits \u2581the \u2581check \u2581with \u2581 status \u2581// \u2581 CRITICAL \u2581and \u2581the \u2581message \u2581provided ."], "bleu": 0.10596132272025964, "rouge_l": 0.4380610412926392}
{"id": 7783, "predictions": ["\u2581// \u2581 New Deployment Manifest \u2581creates \u2581a \u2581new \u2581 Deployment Manifest ."], "references": ["\u2581// New Deployment Manifest \u2581 - \u2581deployment \u2581manifest \u2581 constructor"], "bleu": 0.2224246939793677, "rouge_l": 0.46212121212121204}
{"id": 7772, "predictions": ["\u2581// \u2581Add Raw Job \u2581adds \u2581a \u2581job \u2581to \u2581the \u2581 set \u2581of \u2581 exports ."], "references": ["\u2581// Add Raw Job \u2581 helper \u2581to \u2581 add \u2581a \u2581job \u2581to \u2581the \u2581pipeline \u2581manifest"], "bleu": 0.28787878181011267, "rouge_l": 0.4666666666666668}
{"id": 6248, "predictions": ["\u2581// \u2581is Deprecated \u2581returns \u2581true \u2581if \u2581the \u2581 path \u2581is \u2581a \u2581 Deprecated"], "references": ["\u2581// \u2581true \u2581if \u2581 path \u2581is \u2581for \u2581a \u2581deprecated \u2581API"], "bleu": 0.22718709780542312, "rouge_l": 0.6233576642335765}
{"id": 7756, "predictions": ["\u2581// \u2581Add Delta Job \u2581adds \u2581a \u2581job \u2581to \u2581the \u2581 Result ."], "references": ["\u2581// \u2581Add Delta Job \u2581adds \u2581a \u2581new \u2581delta \u2581for \u2581a \u2581specific \u2581job"], "bleu": 0.48633831680799433, "rouge_l": 0.5833333333333334}
{"id": 7823, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581params"], "bleu": 0.8282477531331041, "rouge_l": 0.9375000000000001}
{"id": 7821, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581delete \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581delete \u2581 apps \u2581 app \u2581params"], "bleu": 0.8003203203844999, "rouge_l": 0.9285714285714285}
{"id": 7844, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581patch \u2581 o \u2581 app \u2581params \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581params"], "bleu": 0.7447819789879647, "rouge_l": 0.9021615472127418}
{"id": 7845, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581patch \u2581 o \u2581 app \u2581params \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581params"], "bleu": 0.7447819789879647, "rouge_l": 0.9021615472127418}
{"id": 7812, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 GetApp \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581params"], "bleu": 0.6709548263862051, "rouge_l": 0.846242774566474}
{"id": 7978, "predictions": ["\u2581// \u2581 Is Handler Registered \u2581returns \u2581true \u2581if \u2581the \u2581 handlers \u2581is \u2581registered ."], "references": ["\u2581// \u2581Returns \u2581bool \u2581on \u2581whether \u2581the \u2581 Handler \u2581is \u2581registered \u2581with \u2581 this \u2581 Event Controller ."], "bleu": 0.13675457510298145, "rouge_l": 0.3804573804573805}
{"id": 7847, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581patch \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581patch \u2581 apps \u2581 app \u2581params"], "bleu": 0.8282477531331041, "rouge_l": 0.9375000000000001}
{"id": 7813, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 GetApp \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 get \u2581 apps \u2581 app \u2581params"], "bleu": 0.6709548263862051, "rouge_l": 0.846242774566474}
{"id": 6423, "predictions": ["\u2581// \u2581Get Attributes \u2581returns \u2581the \u2581attributes \u2581of \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581Get Attributes \u2581returns \u2581the \u2581error \u2581attributes \u2581or \u2581falls \u2581back \u2581// \u2581to \u2581 empty \u2581attributes"], "bleu": 0.31165990434365387, "rouge_l": 0.44907975460122695}
{"id": 7849, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 put \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581params"], "bleu": 0.8153551038173115, "rouge_l": 0.9333333333333336}
{"id": 7850, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 put \u2581 app \u2581 app \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581params"], "bleu": 0.8153551038173115, "rouge_l": 0.9333333333333336}
{"id": 7851, "predictions": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 put \u2581 app \u2581params \u2581params"], "references": ["\u2581// \u2581 With App \u2581adds \u2581the \u2581 app \u2581to \u2581the \u2581 put \u2581 apps \u2581 app \u2581params"], "bleu": 0.8270778021177791, "rouge_l": 0.9041501976284585}
{"id": 6417, "predictions": ["\u2581// \u2581 Split \u2581returns \u2581a \u2581 slice \u2581of \u2581strings ."], "references": ["\u2581// \u2581 Split \u2581splits \u2581a \u2581string \u2581according \u2581to \u2581 posix \u2581or \u2581non - posix \u2581rules ."], "bleu": 0.14809975431372346, "rouge_l": 0.44309927360774815}
{"id": 6640, "predictions": ["\u2581// \u2581 BoolVar \u2581returns \u2581a \u2581flag \u2581for \u2581the \u2581flag \u2581 name"], "references": ["\u2581// \u2581 BoolVar \u2581defines \u2581a \u2581bool \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581and \u2581// \u2581usage \u2581string . \u2581The \u2581argument \u2581 p \u2581points \u2581to \u2581a \u2581bool \u2581variable \u2581in"], "bleu": 0.0481610413903312, "rouge_l": 0.3151291512915129}
{"id": 8072, "predictions": ["\u2581// \u2581 Languages \u2581returns \u2581the \u2581 Languages \u2581option ."], "references": ["\u2581// \u2581 Languages \u2581provides \u2581the \u2581handler \u2581with \u2581supported \u2581 languages ."], "bleu": 0.24193282889161974, "rouge_l": 0.5893719806763285}
{"id": 7580, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 ledger \u2581 type \u2581 contains \u2581the \u2581given \u2581value ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Ledger Entry ChangeType"], "bleu": 0.15648040544437802, "rouge_l": 0.35209235209235207}
{"id": 6144, "predictions": ["\u2581// \u2581 Placement Group Locator \u2581returns \u2581a \u2581 Placement Group Locator \u2581instance"], "references": ["\u2581// \u2581 Placement Group Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.34617729081707266, "rouge_l": 0.5310945273631842}
{"id": 6159, "predictions": ["\u2581// \u2581 SecurityGroup Rule Locator \u2581returns \u2581a \u2581 SecurityGroup Rule Locator"], "references": ["\u2581// \u2581 SecurityGroup Rule Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3413204028714309, "rouge_l": 0.5481386392811297}
{"id": 6655, "predictions": ["\u2581// \u2581 Duration \u2581returns \u2581a \u2581time . Duration \u2581value \u2581for \u2581a \u2581given \u2581string ."], "references": ["\u2581// \u2581 Duration \u2581defines \u2581a \u2581time . Duration \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581// \u2581value , \u2581and \u2581usage \u2581string . \u2581The \u2581return \u2581value \u2581is \u2581the \u2581address \u2581of \u2581a"], "bleu": 0.12068958508469269, "rouge_l": 0.42657342657342656}
{"id": 7911, "predictions": ["\u2581// \u2581 Email \u2581returns \u2581the \u2581 email \u2581address \u2581of \u2581the \u2581 alias ."], "references": ["\u2581// \u2581 Email \u2581returns \u2581the \u2581 alias \u2581 email \u2581on \u2581the \u2581primary \u2581 domain \u2581 name"], "bleu": 0.432305086182108, "rouge_l": 0.6093229744728079}
{"id": 8081, "predictions": ["\u2581// \u2581 Load Package \u2581 loads \u2581a \u2581package \u2581from \u2581the \u2581given \u2581 text ."], "references": ["\u2581// \u2581 Load Package \u2581parses \u2581a \u2581 text \u2581string ."], "bleu": 0.30130404892785684, "rouge_l": 0.6873239436619719}
{"id": 6152, "predictions": ["\u2581// \u2581 Right Script Locator \u2581returns \u2581a \u2581 Right Script Locator ."], "references": ["\u2581// \u2581 Right Script Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 6150, "predictions": ["\u2581// \u2581 Repository Asset Locator \u2581returns \u2581a \u2581new \u2581 Repository Asset Locator \u2581instance"], "references": ["\u2581// \u2581 Repository Asset Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3481302097077456, "rouge_l": 0.5150784077201447}
{"id": 8110, "predictions": ["\u2581// \u2581 NotFound \u2581 wraps \u2581a \u2581response \u2581with \u2581 status \u2581 code"], "references": ["\u2581// \u2581 NotFound \u2581writes \u2581a \u2581404 \u2581HTTP \u2581response"], "bleu": 0.21401603033752975, "rouge_l": 0.5187074829931972}
{"id": 6148, "predictions": ["\u2581// \u2581 Recurring VolumeAttachment Locator \u2581returns \u2581a \u2581 Recurring VolumeAttachment Locator ."], "references": ["\u2581// \u2581 Recurring VolumeAttachment Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 6147, "predictions": ["\u2581// \u2581 NewFile Lineage Locator \u2581returns \u2581a \u2581 shallow \u2581copy \u2581of \u2581the \u2581 api ."], "references": ["\u2581// \u2581 Publication Lineage Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.15767770262450662, "rouge_l": 0.5551763367463025}
{"id": 6188, "predictions": ["\u2581// \u2581 Cloud Pins Locator \u2581returns \u2581a \u2581 Cloud \u2581 Locator \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581// \u2581 cloud \u2581information \u2581about \u2581a \u2581 cloud ."], "references": ["\u2581// \u2581 Cloud Bill Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.09941490945601678, "rouge_l": 0.3621713316369805}
{"id": 6200, "predictions": ["\u2581// \u2581 User Setting Locator \u2581creates \u2581a \u2581new \u2581 User Setting Locator ."], "references": ["\u2581// \u2581 User Setting Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35853358387875456, "rouge_l": 0.5886610373944512}
{"id": 6539, "predictions": ["\u2581// \u2581 CreateOrUpdate Job \u2581creates \u2581a \u2581job \u2581to \u2581be \u2581executed \u2581by \u2581the \u2581job ."], "references": ["\u2581// \u2581 CreateOrUpdate Job \u2581takes \u2581a \u2581job \u2581 detail \u2581structure \u2581which \u2581has \u2581its \u2581 ID \u2581 set \u2581and \u2581either \u2581updates \u2581// \u2581an \u2581existing \u2581job \u2581with \u2581the \u2581same \u2581 id \u2581or"], "bleu": 0.09608783695135598, "rouge_l": 0.2986013986013986}
{"id": 6198, "predictions": ["\u2581// \u2581 Scheduled Report Locator \u2581returns \u2581a \u2581 Scheduled \u2581report Locator ."], "references": ["\u2581// \u2581 Scheduled Report Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 6196, "predictions": ["\u2581// \u2581 Minimum Purchase Locator \u2581retrieves \u2581a \u2581 set \u2581of \u2581 decay Purchase tion \u2581 items \u2581from \u2581an \u2581AWS \u2581 CloudFormation \u2581template \u2581// \u2581instance ."], "references": ["\u2581// \u2581 ReservedInstance Purchase Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.09313819828348413, "rouge_l": 0.43224092116917623}
{"id": 6204, "predictions": ["\u2581// \u2581 Applied Policy Locator \u2581returns \u2581a \u2581 Applied Policy Locator \u2581with \u2581a \u2581 set \u2581of \u2581 Applied Policy Locator"], "references": ["\u2581// \u2581 Applied Policy Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2404315522172745, "rouge_l": 0.4252988047808765}
{"id": 6896, "predictions": ["\u2581// \u2581 Where \u2581 set \u2581a \u2581condition \u2581with \u2581the \u2581condition \u2581 type ."], "references": ["\u2581// \u2581 Where \u2581returns \u2581a \u2581new \u2581 Condition \u2581of \u2581\" WHERE \" \u2581clause ."], "bleu": 0.18934058951353838, "rouge_l": 0.4414957780458384}
{"id": 6192, "predictions": ["\u2581// \u2581 Instance Metric Locator \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581a \u2581metric Metric Locator \u2581instance ."], "references": ["\u2581// \u2581 Instance Metric Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.30277029197532096, "rouge_l": 0.4723451327433628}
{"id": 6829, "predictions": ["\u2581// \u2581 Is Reconnecting \u2581returns \u2581true \u2581if \u2581the \u2581connection \u2581is \u2581 pinned \u2581to ."], "references": ["\u2581// \u2581 Is Reconnecting \u2581return \u2581true \u2581if \u2581a \u2581 reconnecting \u2581process \u2581in \u2581progress ."], "bleu": 0.30130404892785684, "rouge_l": 0.5714285714285714}
{"id": 6191, "predictions": ["\u2581// \u2581 Instance Bindings Locator \u2581creates \u2581a \u2581new \u2581instance \u2581of \u2581instance \u2581instance \u2581// \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Instance Combination Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.18951629567590741, "rouge_l": 0.5607763023493361}
{"id": 6161, "predictions": ["\u2581// \u2581 Server Array Locator \u2581returns \u2581a \u2581 Server Array Locator ."], "references": ["\u2581// \u2581 Server Array Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 6187, "predictions": ["\u2581// \u2581 Budget Alert Locator \u2581returns \u2581a \u2581new \u2581 Budget Alert Locator \u2581instance"], "references": ["\u2581// \u2581 Budget Alert Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3481302097077456, "rouge_l": 0.5150784077201447}
{"id": 6186, "predictions": ["\u2581// \u2581 Analysis Snapshot Locator \u2581returns \u2581a \u2581new \u2581 Analysis Snapshot Locator ."], "references": ["\u2581// \u2581 Analysis Snapshot Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35853358387875456, "rouge_l": 0.5886610373944512}
{"id": 6735, "predictions": ["\u2581// \u2581 rewind \u2581the \u2581 contents \u2581of \u2581the \u2581buffer"], "references": ["\u2581// \u2581 rewind \u2581resets \u2581 this \u2581file Buffer \u2581to \u2581read \u2581from \u2581the \u2581beginning"], "bleu": 0.1864009928871988, "rouge_l": 0.4401154401154401}
{"id": 6207, "predictions": ["\u2581// \u2581 Policy Template Locator \u2581creates \u2581a \u2581policy \u2581policy \u2581that \u2581can \u2581be \u2581used \u2581to \u2581create \u2581a \u2581// \u2581policy \u2581template Locator ."], "references": ["\u2581// \u2581 Policy Template Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.22866722231574904, "rouge_l": 0.4149659863945578}
{"id": 6208, "predictions": ["\u2581// \u2581 Published Template Locator \u2581returns \u2581a \u2581new \u2581 Published Template Locator \u2581instance"], "references": ["\u2581// \u2581 Published Template Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3481302097077456, "rouge_l": 0.5150784077201447}
{"id": 6724, "predictions": ["\u2581// \u2581 HTTPClient \u2581returns \u2581a \u2581client \u2581that \u2581sets \u2581the \u2581HTTP \u2581client \u2581 data ."], "references": ["\u2581// \u2581 HTTPClient \u2581is \u2581a \u2581 functional \u2581parameter \u2581that \u2581sets \u2581the \u2581internal \u2581// \u2581 HTTPClient \u2581of \u2581the \u2581 round trip \u2581client \u2581wrapper"], "bleu": 0.14689890756841023, "rouge_l": 0.4273204903677758}
{"id": 6174, "predictions": ["\u2581// \u2581 Volume Type Locator \u2581returns \u2581a \u2581 Volume Type Locator \u2581instance"], "references": ["\u2581// \u2581 Volume Type Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.34617729081707266, "rouge_l": 0.5310945273631842}
{"id": 6165, "predictions": ["\u2581// \u2581 Ssh Key Locator \u2581creates \u2581a \u2581new \u2581 Ssh Key Locator \u2581instance ."], "references": ["\u2581// \u2581 Ssh Key Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35831291876413535, "rouge_l": 0.5714285714285714}
{"id": 6162, "predictions": ["\u2581// \u2581 Server Template Locator \u2581creates \u2581a \u2581new \u2581 Server Template Locator ."], "references": ["\u2581// \u2581 Server Template Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35853358387875456, "rouge_l": 0.5886610373944512}
{"id": 7727, "predictions": ["\u2581// \u2581 New Logging ServeMux \u2581returns \u2581a \u2581new \u2581 Logging ServeMux ."], "references": ["\u2581// \u2581 New Logging ServeMux \u2581 allocate s \u2581and \u2581returns \u2581a \u2581new \u2581 Logging ServeMux"], "bleu": 0.5927924715839903, "rouge_l": 0.7988095238095236}
{"id": 7079, "predictions": ["\u2581// \u2581 GetDefault HTTPClient \u2581returns \u2581a \u2581default \u2581http \u2581client"], "references": ["\u2581// \u2581 GetDefault HTTPClient \u2581returns \u2581a \u2581httpClient \u2581with \u2581configured \u2581timeout"], "bleu": 0.571751410886987, "rouge_l": 0.6256410256410255}
{"id": 7150, "predictions": ["\u2581// \u2581 Serve TCP \u2581is \u2581the \u2581main \u2581implementation \u2581of \u2581 Serve TCP ."], "references": ["\u2581// \u2581 Serve TCP \u2581serves \u2581request \u2581on \u2581 TCP \u2581listener ."], "bleu": 0.29899503549981366, "rouge_l": 0.5922330097087377}
{"id": 7787, "predictions": ["\u2581// \u2581Remove Tag \u2581removes \u2581the \u2581tag \u2581from \u2581the \u2581manifest"], "references": ["\u2581// \u2581Remove Tag \u2581removes \u2581the \u2581tag \u2581with \u2581the \u2581specified \u2581 key ."], "bleu": 0.473364131565402, "rouge_l": 0.6499238964992391}
{"id": 6430, "predictions": ["\u2581// \u2581 Metadata From Outgoing Context \u2581returns \u2581metadata \u2581from \u2581the \u2581context"], "references": ["\u2581// \u2581 Metadata From Outgoing Context \u2581gets \u2581the \u2581metadata \u2581from \u2581the \u2581given \u2581context"], "bleu": 0.5413856438654996, "rouge_l": 0.8209959623149395}
{"id": 6429, "predictions": ["\u2581// \u2581 Metadata From Incoming Context \u2581extracts \u2581metadata \u2581from \u2581 ctx . MD ."], "references": ["\u2581// \u2581 Metadata From Incoming Context \u2581gets \u2581the \u2581metadata \u2581from \u2581the \u2581given \u2581context"], "bleu": 0.4428500142691474, "rouge_l": 0.5965770171149144}
{"id": 6261, "predictions": ["\u2581// \u2581 escape Back Header \u2581returns \u2581the \u2581 escape \u2581 format \u2581of \u2581the \u2581 text \u2581in \u2581the \u2581 form \u2581of \u2581the \u2581 form \u2581// \u2581of \u2581the \u2581 form ."], "references": ["\u2581// \u2581 Escape \u2581` \u2581in \u2581string \u2581to \u2581be \u2581wrapped \u2581in \u2581them"], "bleu": 0.059055756167575545, "rouge_l": 0.16324710080285457}
{"id": 6262, "predictions": ["\u2581// \u2581 Account Preference Locator \u2581returns \u2581a \u2581 Account Preference Locator ."], "references": ["\u2581// \u2581 Account Preference Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 6264, "predictions": ["\u2581// \u2581 End User Locator \u2581returns \u2581a \u2581 End User Locator \u2581for \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 End User Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35412968165085734, "rouge_l": 0.6566200215285254}
{"id": 6265, "predictions": ["\u2581// \u2581 Notification Rule Locator \u2581returns \u2581a \u2581 Notification Rule Locator \u2581instance"], "references": ["\u2581// \u2581 Notification Rule Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.34617729081707266, "rouge_l": 0.5310945273631842}
{"id": 6266, "predictions": ["\u2581// \u2581 User Preference Locator \u2581returns \u2581a \u2581 User Preference Locator ."], "references": ["\u2581// \u2581 User Preference Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 7210, "predictions": ["\u2581// \u2581 New Func De pot \u2581creates \u2581a \u2581new \u2581 Func De pot \u2581 type \u2581from \u2581a \u2581given \u2581namespace"], "references": ["\u2581// \u2581 New Func De pot \u2581creates \u2581a \u2581new \u2581 Func De pot \u2581under \u2581the \u2581given \u2581` namespace `"], "bleu": 0.6859238121837058, "rouge_l": 0.736842105263158}
{"id": 6212, "predictions": ["\u2581// \u2581 Login Control Locator \u2581returns \u2581a \u2581 Login Control Locator \u2581instance \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Login Control Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.33380800216772966, "rouge_l": 0.639412997903564}
{"id": 7212, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581value \u2581for \u2581a \u2581given \u2581 key"], "references": ["\u2581// \u2581Set \u2581stores \u2581the \u2581function \u2581under \u2581the \u2581 name \u2581` key `"], "bleu": 0.16153071659734697, "rouge_l": 0.44721407624633425}
{"id": 6283, "predictions": ["\u2581// \u2581Get ImagePath \u2581returns \u2581the \u2581 data \u2581 data \u2581from \u2581the \u2581registry"], "references": ["\u2581// \u2581Get NamedType \u2581retrieves \u2581a \u2581 type \u2581given \u2581its \u2581 name ."], "bleu": 0.15537125692760353, "rouge_l": 0.3333333333333333}
{"id": 7687, "predictions": ["\u2581// \u2581 Is Leader \u2581returns \u2581true \u2581if \u2581the \u2581 Candidate \u2581is \u2581leader ."], "references": ["\u2581// \u2581 Is Leader \u2581returns \u2581true \u2581if \u2581the \u2581candidate \u2581is \u2581currently \u2581a \u2581leader ."], "bleu": 0.6103791130949765, "rouge_l": 0.8094089264173704}
{"id": 6301, "predictions": ["\u2581// \u2581 NetworkInterface Attachment Locator \u2581returns \u2581a \u2581 NetworkInterface Attachment Locator ."], "references": ["\u2581// \u2581 NetworkInterface Attachment Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3565223047958927, "rouge_l": 0.6069651741293532}
{"id": 7335, "predictions": ["\u2581// \u2581Must Parse \u2581is \u2581like \u2581Parse \u2581but \u2581panic s \u2581if \u2581the \u2581 v \u2581is \u2581invalid ."], "references": ["\u2581// \u2581Must Parse \u2581is \u2581the \u2581panic king \u2581version \u2581of \u2581Parse"], "bleu": 0.24078435074822624, "rouge_l": 0.4013157894736842}
{"id": 7338, "predictions": ["\u2581// \u2581Create Offer \u2581creates \u2581a \u2581new \u2581 Manage Offer ."], "references": ["\u2581// \u2581Create Offer \u2581creates \u2581a \u2581new \u2581offer"], "bleu": 0.5706745777055999, "rouge_l": 0.7290836653386453}
{"id": 7409, "predictions": ["\u2581// \u2581 Mutate Allow Trust \u2581sets \u2581the \u2581trust \u2581 key \u2581for \u2581the \u2581given \u2581 o \u2581 Trust"], "references": ["\u2581// \u2581 Mutate Allow Trust \u2581for \u2581 Authorize \u2581sets \u2581the \u2581 Allow Trust Op ' s \u2581 Authorize \u2581field"], "bleu": 0.29870488609461504, "rouge_l": 0.49504057709648325}
{"id": 7631, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 S cp \u2581 type \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 S cp Statement Type"], "bleu": 0.16203941702612082, "rouge_l": 0.3556851311953353}
{"id": 6344, "predictions": ["\u2581// \u2581 Publish \u2581 publishes \u2581message \u2581to \u2581the \u2581given \u2581message ."], "references": ["\u2581// \u2581 Publish \u2581sends \u2581a \u2581message \u2581using \u2581the \u2581producer \u2581 p , \u2581returning \u2581an \u2581error \u2581if \u2581it \u2581was \u2581// \u2581already \u2581closed \u2581or \u2581if \u2581an \u2581error \u2581occurred \u2581while \u2581 publishing \u2581the"], "bleu": 0.04334741445875218, "rouge_l": 0.22509225092250923}
{"id": 7488, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 path \u2581 contains \u2581a \u2581 Enum \u2581value ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Path Payment ResultCode"], "bleu": 0.1729395742839151, "rouge_l": 0.3585598824393828}
{"id": 7513, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581 divisor \u2581is \u2581an \u2581 identifier ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Inf lation ResultCode"], "bleu": 0.12786525665750156, "rouge_l": 0.3320373250388802}
{"id": 6215, "predictions": ["\u2581// \u2581 T SS Locator \u2581creates \u2581a \u2581 T SS Locator \u2581instance ."], "references": ["\u2581// \u2581 T SS Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.35853358387875456, "rouge_l": 0.5886610373944512}
{"id": 7043, "predictions": ["\u2581// \u2581 Init Text Templates \u2581 init s \u2581the \u2581 text \u2581template \u2581for \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Init Text Templates \u2581initial ze s \u2581a \u2581series \u2581of \u2581 plain \u2581 text \u2581 templates \u2581// \u2581in \u2581the \u2581directory \u2581` pattern `."], "bleu": 0.22244100869890948, "rouge_l": 0.4178082191780822}
{"id": 7904, "predictions": ["\u2581// \u2581 Email \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 forwarder"], "references": ["\u2581// \u2581 Email \u2581returns \u2581the \u2581 forwarder \u2581 email \u2581on \u2581the \u2581primary \u2581 domain"], "bleu": 0.4668520397631869, "rouge_l": 0.6264441591784339}
{"id": 7908, "predictions": ["\u2581// \u2581 New \u2581creates \u2581a \u2581new \u2581 C UN"], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581 Comm uni gate \u2581 Pro \u2581client"], "bleu": 0.2435958700345145, "rouge_l": 0.5281385281385281}
{"id": 6719, "predictions": ["\u2581// \u2581 Ke ba b Upper \u2581returns \u2581true \u2581if \u2581the \u2581 key \u2581is \u2581a \u2581 lower - bit \u2581 byte \u2581 code ."], "references": ["\u2581// \u2581 Ke ba b Upper \u2581returns \u2581a \u2581 KE B AB - CASE D \u2581string \u2581with \u2581all \u2581upper \u2581case \u2581letters ."], "bleu": 0.3259889346257788, "rouge_l": 0.4908558888076079}
{"id": 8091, "predictions": ["\u2581// \u2581 Setter \u2581sets \u2581the \u2581 Nonce \u2581 type \u2581to \u2581use \u2581for \u2581the \u2581 Nonce ."], "references": ["\u2581// \u2581 Setter \u2581allows \u2581the \u2581user \u2581to \u2581 set \u2581the \u2581method \u2581by \u2581which \u2581a \u2581nonce \u2581is \u2581stored \u2581in \u2581// \u2581the \u2581outgoing \u2581response ."], "bleu": 0.11321332732247377, "rouge_l": 0.3477198697068404}
{"id": 8090, "predictions": ["\u2581// \u2581 Getter \u2581returns \u2581the \u2581 Option Getter \u2581that \u2581sets \u2581the \u2581 Nonce ' s \u2581 Getter ."], "references": ["\u2581// \u2581 Getter \u2581allows \u2581the \u2581user \u2581to \u2581 set \u2581the \u2581method \u2581by \u2581which \u2581a \u2581nonce \u2581is \u2581retrieved \u2581from \u2581// \u2581the \u2581incoming \u2581request ."], "bleu": 0.11416269191575859, "rouge_l": 0.3341158059467919}
{"id": 7960, "predictions": ["\u2581// \u2581Add \u2581adds \u2581a \u2581new \u2581node \u2581to \u2581the \u2581list ."], "references": ["\u2581// \u2581Add \u2581a \u2581 key \u2581into \u2581the \u2581node \u2581list"], "bleu": 0.20504572236241866, "rouge_l": 0.5313588850174217}
{"id": 7437, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581given \u2581 Offer Entry Flags \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Offer Entry Flags"], "bleu": 0.19368331895860377, "rouge_l": 0.41876430205949655}
{"id": 7435, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 v \u2581is \u2581a \u2581valid \u2581 Enum Line Flags"], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Trust Line Flags"], "bleu": 0.1673795571389396, "rouge_l": 0.3961038961038961}
{"id": 8073, "predictions": ["\u2581// \u2581 Session \u2581returns \u2581a \u2581 Option \u2581that \u2581sets \u2581the \u2581session \u2581 Session ."], "references": ["\u2581// \u2581 Session \u2581will \u2581be \u2581used \u2581to \u2581 set \u2581the \u2581current \u2581 language ."], "bleu": 0.195647514979229, "rouge_l": 0.5}
{"id": 7432, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581 ledger \u2581 type \u2581is \u2581a \u2581valid \u2581 ledger ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Ledger Entry Type"], "bleu": 0.15248415234034404, "rouge_l": 0.3137398971344599}
{"id": 6675, "predictions": ["\u2581// \u2581 New AccessToken Context \u2581returns \u2581a \u2581new \u2581context \u2581with \u2581the \u2581given \u2581 token ."], "references": ["\u2581// \u2581 New AccessToken Context \u2581returns \u2581a \u2581new \u2581 Context \u2581that \u2581carrie s \u2581 token \u2581value ."], "bleu": 0.4968115377062561, "rouge_l": 0.67983789260385}
{"id": 8053, "predictions": ["\u2581// \u2581 Contains \u2581returns \u2581true \u2581if \u2581the \u2581 Tuple Type \u2581is \u2581a \u2581field \u2581 name ."], "references": ["\u2581// \u2581 Contains \u2581determines \u2581is \u2581a \u2581field \u2581 exists \u2581in \u2581the \u2581 Tuple Type"], "bleu": 0.4295136946366521, "rouge_l": 0.4723451327433628}
{"id": 6900, "predictions": ["\u2581// \u2581 Join \u2581 joins \u2581a \u2581 table \u2581to \u2581a \u2581 join ."], "references": ["\u2581// \u2581 Join \u2581returns \u2581a \u2581new \u2581 Join Condition \u2581of \u2581\" JOIN \" \u2581clause ."], "bleu": 0.175322016496728, "rouge_l": 0.423121387283237}
{"id": 7869, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 get \u2581tasks \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 get \u2581tasks \u2581params"], "bleu": 1.0, "rouge_l": 1.0}
{"id": 6421, "predictions": ["\u2581// \u2581 From \u2581returns \u2581a \u2581 Error \u2581from \u2581the \u2581error ."], "references": ["\u2581// \u2581 From \u2581 lift s \u2581an \u2581error \u2581to \u2581be \u2581and \u2581 Error"], "bleu": 0.2184641923320139, "rouge_l": 0.41049798115746977}
{"id": 6176, "predictions": ["\u2581// \u2581 Show Command Help \u2581prints \u2581the \u2581help \u2581command \u2581for \u2581the \u2581given \u2581command"], "references": ["\u2581// \u2581 Show Command Help \u2581displays \u2581the \u2581command \u2581help ."], "bleu": 0.3872015705071016, "rouge_l": 0.6233576642335765}
{"id": 6177, "predictions": ["\u2581// \u2581 Show API Actions \u2581shows \u2581the \u2581actions \u2581of \u2581the \u2581specified \u2581actions ."], "references": ["\u2581// \u2581 Show API Actions \u2581displays \u2581the \u2581command \u2581 href s ."], "bleu": 0.3759663529467017, "rouge_l": 0.5640686922060767}
{"id": 7902, "predictions": ["\u2581// \u2581Make Params \u2581creates \u2581a \u2581new \u2581 Params \u2581instance \u2581with \u2581the \u2581number \u2581of \u2581parameters \u2581// \u2581defined \u2581in \u2581the \u2581 map ."], "references": ["\u2581// \u2581 Params \u2581store \u2581the \u2581mapping \u2581of \u2581 ParamName \u2581 -> \u2581 Parameter \u2581for \u2581the \u2581given \u2581structure . \u2581// \u2581Since \u2581multiple \u2581names \u2581can \u2581be \u2581affected \u2581to \u2581a \u2581single \u2581parameter ,"], "bleu": 0.06892441213359227, "rouge_l": 0.26604361370716506}
{"id": 6210, "predictions": ["\u2581// \u2581Docker Control Locator \u2581returns \u2581a \u2581 Docker Control Locator \u2581instance"], "references": ["\u2581// \u2581Docker Control Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2875150462888186, "rouge_l": 0.4925975773889637}
{"id": 7686, "predictions": ["\u2581// \u2581 Leader \u2581returns \u2581the \u2581current \u2581leader \u2581 id"], "references": ["\u2581// \u2581 Leader \u2581returns \u2581the \u2581current \u2581leader ."], "bleu": 0.7598356856515925, "rouge_l": 0.8323586744639376}
{"id": 6771, "predictions": ["\u2581// \u2581invalid Length \u2581returns \u2581the \u2581 length \u2581of \u2581the \u2581 length \u2581of \u2581the \u2581given \u2581 length ."], "references": ["\u2581// \u2581invalid Length \u2581returns \u2581true \u2581if f \u2581offset \u2581+ \u2581 length \u2581 > \u2581 slice Length , \u2581or \u2581if \u2581the \u2581// \u2581addition \u2581would \u2581overflow ."], "bleu": 0.16172287155928802, "rouge_l": 0.4143396226415094}
{"id": 7042, "predictions": ["\u2581// \u2581 Init Html Templates \u2581returns \u2581the \u2581 templates \u2581that \u2581matches \u2581the \u2581given \u2581 path ."], "references": ["\u2581// \u2581 Init Html Templates \u2581initial ze s \u2581a \u2581series \u2581of \u2581HTML \u2581 templates \u2581// \u2581in \u2581the \u2581directory \u2581` pattern `."], "bleu": 0.23876995423519048, "rouge_l": 0.42214532871972316}
{"id": 6156, "predictions": ["\u2581// \u2581generate Binding Locator \u2581creates \u2581a \u2581new \u2581binding Locator \u2581instance"], "references": ["\u2581// \u2581Runnable Binding Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.13964659797714432, "rouge_l": 0.33983286908078}
{"id": 6999, "predictions": ["\u2581// \u2581Use \u2581adds \u2581a \u2581new \u2581 router \u2581handler \u2581to \u2581the \u2581 Handlers \u2581stack ."], "references": ["\u2581// \u2581Use \u2581adds \u2581a \u2581handler \u2581to \u2581the \u2581 handlers \u2581stack ."], "bleu": 0.4480304273880272, "rouge_l": 0.8176943699731903}
{"id": 7870, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 get \u2581tasks \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 get \u2581tasks \u2581params"], "bleu": 1.0, "rouge_l": 1.0}
{"id": 7557, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581 ledger \u2581 type \u2581is \u2581valid \u2581for \u2581the \u2581given \u2581 entity ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Ledger Upgrade Type"], "bleu": 0.15967943932208256, "rouge_l": 0.34585400425230334}
{"id": 7518, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 Manage Data \u2581 contains \u2581the \u2581 data \u2581required \u2581for \u2581the \u2581 Manage \u2581 bridge"], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Manage Data ResultCode"], "bleu": 0.20667438121237922, "rouge_l": 0.4440767703507611}
{"id": 6234, "predictions": ["\u2581// \u2581 New \u2581returns \u2581a \u2581new \u2581API \u2581client \u2581that \u2581will \u2581 get \u2581the \u2581 auth \u2581 api \u2581server \u2581// \u2581for \u2581the \u2581given \u2581host ."], "references": ["\u2581// \u2581 New \u2581returns \u2581a \u2581client \u2581that \u2581uses \u2581 RL 10 \u2581authentication . \u2581// \u2581 accountId , \u2581host \u2581and \u2581 auth \u2581arguments \u2581are \u2581not \u2581used . \u2581// \u2581If \u2581no \u2581HTTP"], "bleu": 0.19767127976889845, "rouge_l": 0.3994047619047618}
{"id": 7940, "predictions": ["\u2581// \u2581 Compare Node Table \u2581returns \u2581the \u2581 table \u2581 table \u2581 type ."], "references": ["\u2581// \u2581 Compare Node Table \u2581implements \u2581comparator \u2581for \u2581node table \u2581instances"], "bleu": 0.33649324423301513, "rouge_l": 0.49061662198391426}
{"id": 7818, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 GetApp \u2581 s \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 get \u2581 apps \u2581params"], "bleu": 0.708339753228812, "rouge_l": 0.8461538461538461}
{"id": 7817, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 GetApp \u2581 s \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 get \u2581 apps \u2581params"], "bleu": 0.708339753228812, "rouge_l": 0.8461538461538461}
{"id": 7809, "predictions": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 post \u2581 Apps \u2581params"], "references": ["\u2581// \u2581 WithContext \u2581adds \u2581the \u2581context \u2581to \u2581the \u2581 post \u2581 apps \u2581params"], "bleu": 0.855526185871245, "rouge_l": 0.9230769230769234}
{"id": 7508, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 Account Merge by \u2581object \u2581has \u2581the \u2581 type \u2581of \u2581the \u2581given \u2581 v ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Account Merge ResultCode"], "bleu": 0.19886115092797074, "rouge_l": 0.3229649238914626}
{"id": 7808, "predictions": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 post \u2581 api \u2581 api \u2581params"], "references": ["\u2581// \u2581 WithTimeout \u2581adds \u2581the \u2581timeout \u2581to \u2581the \u2581 post \u2581 apps \u2581params"], "bleu": 0.7367565054628357, "rouge_l": 0.8683274021352313}
{"id": 7505, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 v \u2581is \u2581a \u2581valid \u2581 identifier \u2581of \u2581the \u2581trust \u2581request"], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Allow Trust ResultCode"], "bleu": 0.1458835234643487, "rouge_l": 0.29735376044568246}
{"id": 7502, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581 v \u2581is \u2581a \u2581valid \u2581 identifier \u2581for \u2581the \u2581given \u2581 v ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Change Trust ResultCode"], "bleu": 0.15996889211611906, "rouge_l": 0.3694481830417227}
{"id": 6538, "predictions": ["\u2581// \u2581Create Job \u2581creates \u2581a \u2581job \u2581to \u2581the \u2581 JobSummary ."], "references": ["\u2581// \u2581Create Job \u2581creates \u2581a \u2581new \u2581job \u2581based \u2581on \u2581the \u2581provided \u2581structure ."], "bleu": 0.3849742634318482, "rouge_l": 0.6567967698519516}
{"id": 7494, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 Manage Offer Binding \u2581target \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Manage Offer Effect"], "bleu": 0.16842862602958808, "rouge_l": 0.3652694610778443}
{"id": 7102, "predictions": ["\u2581// \u2581 With Function \u2581sets \u2581the \u2581function \u2581for \u2581the \u2581function \u2581 name ."], "references": ["\u2581// \u2581 With Function \u2581adds \u2581a \u2581function \u2581to \u2581 templates ."], "bleu": 0.29899503549981366, "rouge_l": 0.5922330097087377}
{"id": 7493, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581 Manage Offer Offer \u2581 grants \u2581access \u2581to \u2581the \u2581 Manage \u2581offer ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Manage Offer ResultCode"], "bleu": 0.19374706156995977, "rouge_l": 0.38231197771587744}
{"id": 8092, "predictions": ["\u2581// \u2581 Age \u2581is \u2581a \u2581 functional \u2581option \u2581to \u2581 set \u2581the \u2581 age \u2581of \u2581the \u2581 age ."], "references": ["\u2581// \u2581 Age \u2581sets \u2581the \u2581maximum \u2581time \u2581duration \u2581a \u2581nonce \u2581can \u2581be \u2581valid"], "bleu": 0.1326475916741222, "rouge_l": 0.2587486744432662}
{"id": 7806, "predictions": ["\u2581// \u2581Get MaxSize \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 S api n ."], "references": ["\u2581// \u2581Get MaxSize \u2581returns \u2581the \u2581 size \u2581of \u2581the \u2581 wide st \u2581part \u2581of \u2581the \u2581 sap in ."], "bleu": 0.501403418091983, "rouge_l": 0.6489361702127658}
{"id": 7568, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581bucket \u2581 type \u2581is \u2581a \u2581valid \u2581 Enum Entry ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Bucket Entry Type"], "bleu": 0.15583745607628852, "rouge_l": 0.3585598824393828}
{"id": 7255, "predictions": ["\u2581// \u2581Get \u2581returns \u2581the \u2581value \u2581of \u2581the \u2581given \u2581 key . \u2581If \u2581the \u2581 key \u2581is \u2581not \u2581found , \u2581// \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581 key \u2581is \u2581not \u2581found"], "references": ["\u2581// \u2581Get \u2581retrieves \u2581the \u2581value \u2581assigned \u2581to \u2581` key `"], "bleu": 0.06987283777978615, "rouge_l": 0.27477477477477474}
{"id": 7231, "predictions": ["\u2581// \u2581 Append \u2581adds \u2581a \u2581new \u2581op \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Append \u2581appends \u2581an \u2581op \u2581 code \u2581to \u2581the \u2581current \u2581list \u2581of \u2581op \u2581codes ."], "bleu": 0.18236394390536398, "rouge_l": 0.48744292237442927}
{"id": 8033, "predictions": ["\u2581// \u2581 Issuer \u2581sets \u2581the \u2581issuer \u2581 token ."], "references": ["\u2581// \u2581 Issuer \u2581sets \u2581the \u2581issuer \u2581in \u2581the \u2581 stand art \u2581claims \u2581object ."], "bleu": 0.39036744537470053, "rouge_l": 0.6694101508916324}
{"id": 7263, "predictions": ["\u2581// \u2581 Arg Int \u2581returns \u2581the \u2581number \u2581of \u2581arguments \u2581in \u2581the \u2581 set \u2581of \u2581the \u2581arguments ."], "references": ["\u2581// \u2581 Arg Int \u2581returns \u2581the \u2581integer \u2581representation \u2581of \u2581the \u2581argument"], "bleu": 0.36191740494054153, "rouge_l": 0.5943970767356882}
{"id": 7485, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 Payment Button \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Payment ResultCode"], "bleu": 0.14373710735990802, "rouge_l": 0.3416}
{"id": 7016, "predictions": ["\u2581// \u2581 WriteHeader \u2581writes \u2581the \u2581 status \u2581 code \u2581to \u2581the \u2581writer ."], "references": ["\u2581// \u2581 WriteHeader \u2581sets \u2581the \u2581context ' s \u2581written \u2581flag \u2581before \u2581writing \u2581the \u2581response \u2581header ."], "bleu": 0.16234136350505612, "rouge_l": 0.4062153163152054}
{"id": 7595, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581given \u2581 IP \u2581address \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Ip Addr Type"], "bleu": 0.11741860619981094, "rouge_l": 0.2846034214618974}
{"id": 8087, "predictions": ["\u2581// \u2581 Auth \u2581is \u2581a \u2581 helper \u2581function \u2581that \u2581returns \u2581the \u2581 Auth Auth Client"], "references": ["\u2581// Auth \u2581 - \u2581fake \u2581out \u2581making \u2581an \u2581 auth \u2581 call"], "bleu": 0.1082597837309053, "rouge_l": 0.30235439900867406}
{"id": 7482, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581account \u2581 authorizer \u2581on \u2581the \u2581account \u2581has \u2581been \u2581 set ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 CreateAccount ResultCode"], "bleu": 0.1487895350818259, "rouge_l": 0.31629629629629635}
{"id": 7229, "predictions": ["\u2581// \u2581Set L var \u2581sets \u2581the \u2581 L \u2581variable \u2581of \u2581the \u2581frame ."], "references": ["\u2581// \u2581Set L var \u2581sets \u2581the \u2581frame \u2581local \u2581variable \u2581at \u2581position \u2581 i"], "bleu": 0.4913270548144421, "rouge_l": 0.5384615384615383}
{"id": 6727, "predictions": ["\u2581// \u2581 CookieJar \u2581returns \u2581the \u2581cookie \u2581jar ."], "references": ["\u2581// \u2581 CookieJar \u2581sets \u2581HTTP \u2581cookie \u2581jar \u2581for \u2581 this \u2581client"], "bleu": 0.24395202750673672, "rouge_l": 0.511744966442953}
{"id": 8069, "predictions": ["\u2581// \u2581 New Package List \u2581creates \u2581a \u2581 Package List"], "references": ["\u2581// \u2581 New Package List \u2581creates \u2581a \u2581new \u2581package \u2581registry"], "bleu": 0.6786502681586726, "rouge_l": 0.7000000000000001}
{"id": 8034, "predictions": ["\u2581// \u2581 User \u2581sets \u2581the \u2581user ' s \u2581 token ."], "references": ["\u2581// \u2581 User \u2581sets \u2581the \u2581query \u2581 key \u2581from \u2581which \u2581to \u2581obtain \u2581the \u2581user ."], "bleu": 0.335942055494089, "rouge_l": 0.5239263803680982}
{"id": 8035, "predictions": ["\u2581// \u2581 Password \u2581sets \u2581the \u2581password \u2581for \u2581the \u2581password ."], "references": ["\u2581// \u2581 Password \u2581sets \u2581the \u2581query \u2581 key \u2581from \u2581which \u2581to \u2581obtain \u2581the \u2581password ."], "bleu": 0.35647527751064534, "rouge_l": 0.6177215189873417}
{"id": 7499, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581options \u2581 exists \u2581in \u2581the \u2581options ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581Set Options ResultCode"], "bleu": 0.13219803357930257, "rouge_l": 0.28705882352941176}
{"id": 6378, "predictions": ["\u2581// \u2581 Asset \u2581 - \u2581 render \u2581asset"], "references": ["\u2581// \u2581 Asset \u2581 get \u2581 content \u2581from \u2581 Asset FS \u2581by \u2581 name"], "bleu": 0.22066035619387875, "rouge_l": 0.43323863636363635}
{"id": 7667, "predictions": ["\u2581// \u2581 Free \u2581 releases \u2581all \u2581the \u2581 map \u2581and \u2581 releases \u2581all \u2581resources ."], "references": ["\u2581// \u2581 Free \u2581 deallocate s \u2581the \u2581 map ."], "bleu": 0.31535540524901323, "rouge_l": 0.6639455782312924}
{"id": 6718, "predictions": ["\u2581// \u2581 Ke ba b \u2581returns \u2581the \u2581 path \u2581to \u2581the \u2581 contents \u2581of \u2581a \u2581 key ."], "references": ["\u2581// \u2581 Ke ba b \u2581returns \u2581a \u2581 kebab - case d \u2581string \u2581with \u2581all \u2581lowercase \u2581letters ."], "bleu": 0.35025412310639736, "rouge_l": 0.5}
{"id": 6374, "predictions": ["\u2581// \u2581 Layout \u2581creates \u2581a \u2581new \u2581template \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Layout \u2581 set \u2581 layout \u2581for \u2581template ."], "bleu": 0.2044800736021839, "rouge_l": 0.44525547445255476}
{"id": 6715, "predictions": ["\u2581// \u2581 Pa s cal \u2581returns \u2581the \u2581 lower \u2581 text \u2581 separator \u2581of \u2581the \u2581 key"], "references": ["\u2581// \u2581 Pa s cal \u2581returns \u2581a \u2581 Pa s cal Case d \u2581string ."], "bleu": 0.3381307292971254, "rouge_l": 0.44248704663212435}
{"id": 7915, "predictions": ["\u2581// \u2581 Account \u2581returns \u2581a \u2581 Account \u2581object \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581account \u2581// \u2581associated \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 Account \u2581returns \u2581an \u2581account \u2581 type \u2581with \u2581the \u2581given \u2581 name"], "bleu": 0.2830789070123405, "rouge_l": 0.5580969807868252}
{"id": 7914, "predictions": ["\u2581// \u2581 Email \u2581returns \u2581the \u2581 email \u2581address \u2581of \u2581the \u2581account ."], "references": ["\u2581// \u2581 Email \u2581returns \u2581the \u2581primary \u2581 email \u2581of \u2581the \u2581account"], "bleu": 0.5266403878479265, "rouge_l": 0.8764367816091955}
{"id": 7365, "predictions": ["\u2581// \u2581 Mutate Transaction \u2581sets \u2581the \u2581 Network \u2581for \u2581the \u2581given \u2581transaction ."], "references": ["\u2581// \u2581 Mutate Transaction \u2581for \u2581 Network \u2581sets \u2581the \u2581 Network \u2581 ID \u2581to \u2581use \u2581when \u2581signing \u2581 this \u2581transaction"], "bleu": 0.2732960100977615, "rouge_l": 0.525358851674641}
{"id": 7142, "predictions": ["\u2581// \u2581 Handler \u2581returns \u2581the \u2581 body \u2581of \u2581the \u2581 map"], "references": ["\u2581// \u2581 Handler \u2581returns \u2581a \u2581handler \u2581that \u2581is \u2581registered \u2581under \u2581the \u2581provided \u2581 code ."], "bleu": 0.2397165088338231, "rouge_l": 0.44907975460122695}
{"id": 7078, "predictions": ["\u2581// \u2581 Unmarshal \u2581unmarshal s \u2581the \u2581value \u2581into \u2581a \u2581 Param Set ."], "references": ["\u2581// \u2581 Unmarshal \u2581parses \u2581the \u2581JSON \u2581payload \u2581from \u2581the \u2581command \u2581// \u2581arguments \u2581and \u2581unmarshal \u2581into \u2581a \u2581value \u2581pointed \u2581to \u2581by \u2581 v ."], "bleu": 0.11399522493192046, "rouge_l": 0.42324371205550737}
{"id": 7131, "predictions": ["\u2581// \u2581 With Panic \u2581500 \u2581sets \u2581the \u2581http . Handler \u2581for \u2581the \u2581HTTP \u2581request ."], "references": ["\u2581// \u2581 With Panic ResponseHandler \u2581sets \u2581http . Handler \u2581that \u2581will \u2581be \u2581executed \u2581on \u2581// \u2581panic \u2581event . \u2581It \u2581is \u2581useful \u2581when \u2581the \u2581response \u2581has \u2581dynamic \u2581 content . \u2581//"], "bleu": 0.12198132354332664, "rouge_l": 0.41924398625429554}
{"id": 7876, "predictions": ["\u2581// \u2581Get Local ID \u2581returns \u2581the \u2581local \u2581 ID \u2581of \u2581the \u2581local \u2581server"], "references": ["\u2581// \u2581Get Local ID \u2581returns \u2581the \u2581current \u2581local \u2581 id"], "bleu": 0.4785543921093738, "rouge_l": 0.7124087591240876}
{"id": 7875, "predictions": ["\u2581// \u2581 Ring \u2581returns \u2581the \u2581 ring \u2581 ring \u2581the \u2581 ring ."], "references": ["\u2581// \u2581 Ring \u2581returns \u2581an \u2581instance \u2581of \u2581the \u2581current \u2581 Ring"], "bleu": 0.2891784933232572, "rouge_l": 0.507628294036061}
{"id": 6259, "predictions": ["\u2581// \u2581 MaxSize \u2581returns \u2581the \u2581 name \u2581of \u2581the \u2581 javascript \u2581string ."], "references": ["\u2581// \u2581 Command \u2581line \u2581used \u2581to \u2581run \u2581 tool"], "bleu": 0.1350862565735141, "rouge_l": 0.2819722650231125}
{"id": 6461, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581namespace \u2581of \u2581the \u2581namespace ."], "references": ["\u2581// \u2581Set \u2581updates \u2581the \u2581namespaces"], "bleu": 0.19960198807747329, "rouge_l": 0.4518518518518518}
{"id": 6168, "predictions": ["\u2581// \u2581 Task Locator \u2581creates \u2581a \u2581new \u2581 Task Locator ."], "references": ["\u2581// \u2581 Task Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 7431, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 Threshold Indexes \u2581is \u2581equal \u2581to \u2581the \u2581 Threshold Indexes ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Threshold Indexes"], "bleu": 0.19673122508577473, "rouge_l": 0.3992727272727273}
{"id": 6197, "predictions": ["\u2581// \u2581 Eth Locator \u2581returns \u2581a \u2581 rolling Locator \u2581instance"], "references": ["\u2581// \u2581 Scenario Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.14615903653944176, "rouge_l": 0.42479108635097496}
{"id": 6211, "predictions": ["\u2581// \u2581 Env Locator \u2581creates \u2581a \u2581new \u2581 Env Locator ."], "references": ["\u2581// \u2581 Env Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 6164, "predictions": ["\u2581// \u2581 Session Locator \u2581creates \u2581a \u2581new \u2581session Locator ."], "references": ["\u2581// \u2581 Session Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 7419, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 type \u2581 type \u2581is \u2581a \u2581valid \u2581 name ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 CryptoKey Type"], "bleu": 0.1654197781065828, "rouge_l": 0.31629629629629635}
{"id": 6166, "predictions": ["\u2581// \u2581 Subnet Locator \u2581returns \u2581a \u2581 Subnet Locator \u2581instance"], "references": ["\u2581// \u2581 Subnet Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 6167, "predictions": ["\u2581// \u2581 Tag Locator \u2581returns \u2581a \u2581 Tag Locator \u2581instance ."], "references": ["\u2581// \u2581 Tag Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 6160, "predictions": ["\u2581// \u2581 Server Locator \u2581returns \u2581a \u2581new \u2581 Server Locator ."], "references": ["\u2581// \u2581 Server Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 6169, "predictions": ["\u2581// \u2581 User Locator \u2581returns \u2581a \u2581new \u2581 User Locator \u2581instance ."], "references": ["\u2581// \u2581 User Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.299229756708663, "rouge_l": 0.5559895833333334}
{"id": 6190, "predictions": ["\u2581// \u2581 CurrentUser Locator \u2581returns \u2581a \u2581 CurrentUser Locator \u2581that \u2581 contains \u2581the \u2581given \u2581// \u2581 H Locator ."], "references": ["\u2581// \u2581 CurrentUser Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.22537412722674852, "rouge_l": 0.5821845174973489}
{"id": 6171, "predictions": ["\u2581// \u2581 Volume Locator \u2581returns \u2581a \u2581 Volume Locator \u2581object ."], "references": ["\u2581// \u2581 Volume Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 7151, "predictions": ["\u2581// \u2581 Shutdown \u2581 graceful ly \u2581shut s \u2581down \u2581the \u2581server ."], "references": ["\u2581// \u2581 Shutdown \u2581executes \u2581 grpc . Server . Graceful Stop \u2581method ."], "bleu": 0.19690425335318407, "rouge_l": 0.39713541666666663}
{"id": 6353, "predictions": ["\u2581// \u2581 Write \u2581writes \u2581the \u2581response \u2581to \u2581the \u2581 ResponseWriter ."], "references": ["\u2581// \u2581 Write \u2581outputs \u2581the \u2581response \u2581to \u2581 w ."], "bleu": 0.3264971028628052, "rouge_l": 0.768503937007874}
{"id": 6213, "predictions": ["\u2581// \u2581 Proc Locator \u2581returns \u2581a \u2581 Proc Locator ."], "references": ["\u2581// \u2581 Proc Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2923180730788836, "rouge_l": 0.5947075208913649}
{"id": 6547, "predictions": ["\u2581// \u2581 Delete Project \u2581deletes \u2581a \u2581project ."], "references": ["\u2581// \u2581 Delete Project \u2581deletes \u2581a \u2581project \u2581and \u2581all \u2581of \u2581its \u2581jobs ."], "bleu": 0.4759221886616705, "rouge_l": 0.7305389221556886}
{"id": 6172, "predictions": ["\u2581// \u2581 VolumeAttachment Locator \u2581returns \u2581a \u2581 VolumeAttachment Locator ."], "references": ["\u2581// \u2581 VolumeAttachment Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2923180730788836, "rouge_l": 0.5947075208913649}
{"id": 6173, "predictions": ["\u2581// \u2581 VolumeSnapshot Locator \u2581returns \u2581a \u2581 VolumeSnapshot Locator ."], "references": ["\u2581// \u2581 VolumeSnapshot Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2923180730788836, "rouge_l": 0.5947075208913649}
{"id": 6151, "predictions": ["\u2581// \u2581 ResourceGroup Locator \u2581returns \u2581a \u2581 ResourceGroup Locator \u2581instance \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 ResourceGroup Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.30277029197532096, "rouge_l": 0.6324884792626728}
{"id": 6206, "predictions": ["\u2581// \u2581 Incident Locator \u2581returns \u2581a \u2581 Incident Locator \u2581instance"], "references": ["\u2581// \u2581 Incident Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 6145, "predictions": ["\u2581// \u2581 Preference Locator \u2581returns \u2581a \u2581 Preference Locator \u2581that \u2581notifies \u2581of \u2581the \u2581// \u2581parameters \u2581that \u2581are \u2581 pinned \u2581to \u2581the \u2581given \u2581 URL ."], "references": ["\u2581// \u2581 Preference Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.1912481314888403, "rouge_l": 0.5022872827081427}
{"id": 7087, "predictions": ["\u2581// \u2581 AddError \u2581adds \u2581a \u2581 text \u2581to \u2581the \u2581 form \u2581of \u2581the \u2581 form \u2581 form ."], "references": ["\u2581// \u2581 AddError \u2581appends \u2581an \u2581error \u2581to \u2581a \u2581list \u2581of \u2581general \u2581errors ."], "bleu": 0.15071676257541072, "rouge_l": 0.3986928104575163}
{"id": 6146, "predictions": ["\u2581// \u2581 NewFile Locator \u2581returns \u2581a \u2581new \u2581 WWW Locator \u2581instance ."], "references": ["\u2581// \u2581 Publication Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.15549322861581405, "rouge_l": 0.4765625000000001}
{"id": 6205, "predictions": ["\u2581// \u2581 Approval Locator \u2581returns \u2581a \u2581 Approval Locator \u2581instance ."], "references": ["\u2581// \u2581 Approval Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 7549, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 Transaction by \u2581value \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Transaction ResultCode"], "bleu": 0.15469465675339542, "rouge_l": 0.3349019607843138}
{"id": 7521, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 WebGL \u2581enum \u2581 code \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 OperationResult Code"], "bleu": 0.15338843552704398, "rouge_l": 0.32846153846153847}
{"id": 6979, "predictions": ["\u2581// \u2581 NewTimer \u2581returns \u2581a \u2581 ResponseWriter \u2581that \u2581writes \u2581the \u2581result \u2581to \u2581the \u2581response ."], "references": ["\u2581// \u2581 ResponseStatus \u2581returns \u2581the \u2581HTTP \u2581response \u2581 status . \u2581// \u2581 Remember \u2581that \u2581the \u2581 status \u2581is \u2581only \u2581 set \u2581by \u2581the \u2581server \u2581after \u2581 WriteHeader \u2581has \u2581been \u2581called"], "bleu": 0.05381363882327819, "rouge_l": 0.2934707903780069}
{"id": 6149, "predictions": ["\u2581// \u2581 Repository Locator \u2581returns \u2581a \u2581new \u2581 Repository Locator \u2581instance"], "references": ["\u2581// \u2581 Repository Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2875150462888186, "rouge_l": 0.4925975773889637}
{"id": 6645, "predictions": ["\u2581// \u2581 Int 64 \u2581returns \u2581a \u2581 64 - bit \u2581integer \u2581value \u2581for \u2581a \u2581given \u2581string ."], "references": ["\u2581// \u2581 Int 64 \u2581defines \u2581an \u2581int 64 \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581and \u2581// \u2581usage \u2581string . \u2581The \u2581return \u2581value \u2581is \u2581the \u2581address \u2581of \u2581an"], "bleu": 0.11767646173056052, "rouge_l": 0.3242524916943521}
{"id": 7433, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581 Account Flags \u2581 v \u2581is \u2581valid ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Account Flags"], "bleu": 0.1769273065212052, "rouge_l": 0.38274509803921564}
{"id": 6154, "predictions": ["\u2581// \u2581 Route Locator \u2581returns \u2581a \u2581 Route Locator \u2581instance"], "references": ["\u2581// \u2581 Route Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 6155, "predictions": ["\u2581// \u2581 RouteTable Locator \u2581returns \u2581a \u2581 RouteTable Locator \u2581instance"], "references": ["\u2581// \u2581 RouteTable Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 6649, "predictions": ["\u2581// \u2581 Uint 64 \u2581returns \u2581a \u2581uint 64 \u2581value \u2581from \u2581a \u2581string"], "references": ["\u2581// \u2581 Uint 64 \u2581defines \u2581a \u2581uint 64 \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581// \u2581and \u2581usage \u2581string . \u2581The \u2581return \u2581value \u2581is \u2581the \u2581address \u2581of \u2581a"], "bleu": 0.09345174965705287, "rouge_l": 0.3978260869565217}
{"id": 7910, "predictions": ["\u2581// \u2581 Alias \u2581returns \u2581an \u2581 alias \u2581for \u2581the \u2581account ."], "references": ["\u2581// \u2581 Alias \u2581creates \u2581an \u2581 Alias \u2581 type \u2581from \u2581an \u2581account"], "bleu": 0.23925530714892257, "rouge_l": 0.5176803394625177}
{"id": 6540, "predictions": ["\u2581// \u2581 Delete Job \u2581deletes \u2581a \u2581job \u2581from \u2581the \u2581 Client ."], "references": ["\u2581// \u2581 Delete Job \u2581deletes \u2581the \u2581job \u2581with \u2581the \u2581given \u2581 id ."], "bleu": 0.39784809683688244, "rouge_l": 0.71484375}
{"id": 6928, "predictions": ["\u2581// \u2581 Offset \u2581returns \u2581the \u2581 Condition \u2581for \u2581the \u2581given \u2581offset ."], "references": ["\u2581// \u2581 Offset \u2581adds \u2581\" OFFSET \" \u2581clause \u2581to \u2581the \u2581 Condition \u2581and \u2581returns \u2581it \u2581for \u2581method \u2581chain ."], "bleu": 0.1706298645835138, "rouge_l": 0.4959349593495934}
{"id": 6653, "predictions": ["\u2581// \u2581 Float 64 \u2581returns \u2581a \u2581float 64 \u2581value \u2581from \u2581a \u2581string"], "references": ["\u2581// \u2581 Float 64 \u2581defines \u2581a \u2581float 64 \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581// \u2581and \u2581usage \u2581string . \u2581The \u2581return \u2581value \u2581is \u2581the \u2581address \u2581of \u2581a"], "bleu": 0.09345174965705287, "rouge_l": 0.3978260869565217}
{"id": 6157, "predictions": ["\u2581// \u2581 Scheduler Locator \u2581returns \u2581a \u2581new \u2581 Scheduler Locator \u2581instance"], "references": ["\u2581// \u2581 Scheduler Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2875150462888186, "rouge_l": 0.4925975773889637}
{"id": 6158, "predictions": ["\u2581// \u2581 SecurityGroup Locator \u2581returns \u2581a \u2581 SecurityGroup Locator \u2581with \u2581the \u2581given \u2581 name ."], "references": ["\u2581// \u2581 SecurityGroup Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.3237722713145643, "rouge_l": 0.6512455516014234}
{"id": 6170, "predictions": ["\u2581// \u2581 UserData Locator \u2581returns \u2581a \u2581 UserData Locator \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581 Locator \u2581for \u2581a \u2581 username ."], "references": ["\u2581// \u2581 UserData Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.15663915411954296, "rouge_l": 0.4464775846294603}
{"id": 6717, "predictions": ["\u2581// \u2581 Snake Upper \u2581 translate s \u2581 s \u2581to \u2581 snake \u2581case"], "references": ["\u2581// \u2581 Snake Upper \u2581returns \u2581a \u2581 SN AKE _ CASE D \u2581string \u2581with \u2581all \u2581upper \u2581case \u2581letters ."], "bleu": 0.18227301762182052, "rouge_l": 0.3627353815659069}
{"id": 6305, "predictions": ["\u2581// \u2581 Operation Locator \u2581returns \u2581a \u2581 Operation Locator \u2581instance ."], "references": ["\u2581// \u2581 Operation Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 6838, "predictions": ["\u2581// \u2581 Not After \u2581 set \u2581the \u2581value \u2581of \u2581the \u2581 Client ' s \u2581 Time"], "references": ["\u2581// \u2581 Not After \u2581is \u2581an \u2581 Option \u2581for \u2581setting \u2581the \u2581identity ' s \u2581certificate ' s \u2581 Not After ."], "bleu": 0.22151147758988282, "rouge_l": 0.47491349480968864}
{"id": 6306, "predictions": ["\u2581// \u2581 ScheduledAction Locator \u2581creates \u2581a \u2581 ScheduledAction Locator ."], "references": ["\u2581// \u2581 ScheduledAction Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2923180730788836, "rouge_l": 0.5947075208913649}
{"id": 6300, "predictions": ["\u2581// \u2581 NetworkInterface Locator \u2581returns \u2581a \u2581 NetworkInterface Locator \u2581instance"], "references": ["\u2581// \u2581 NetworkInterface Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2827207475294753, "rouge_l": 0.5097493036211699}
{"id": 7052, "predictions": ["\u2581// \u2581error \u2581is \u2581the \u2581error \u2581handler \u2581for \u2581the \u2581given \u2581error ."], "references": ["\u2581// \u2581 Internal \u2581error \u2581handler"], "bleu": 0.16108992769687397, "rouge_l": 0.40219780219780216}
{"id": 6194, "predictions": ["\u2581// \u2581 Pattern Locator \u2581creates \u2581a \u2581new \u2581pattern Locator \u2581with \u2581a \u2581 Pattern Locator ."], "references": ["\u2581// \u2581 Pattern Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.25748661016289676, "rouge_l": 0.5065243179122182}
{"id": 8028, "predictions": ["\u2581// \u2581 DateFormat \u2581sets \u2581the \u2581 name \u2581of \u2581the \u2581 set \u2581of \u2581 this \u2581option ."], "references": ["\u2581// \u2581 DateFormat \u2581is \u2581used \u2581to \u2581 format \u2581the \u2581timestamp ."], "bleu": 0.16467029855845897, "rouge_l": 0.45979899497487436}
{"id": 6304, "predictions": ["\u2581// \u2581 Notification Locator \u2581returns \u2581a \u2581 Notification Locator \u2581instance ."], "references": ["\u2581// \u2581 Notification Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 6303, "predictions": ["\u2581// \u2581 Execution Locator \u2581creates \u2581a \u2581 Execution Locator ."], "references": ["\u2581// \u2581 Execution Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2923180730788836, "rouge_l": 0.5947075208913649}
{"id": 6195, "predictions": ["\u2581// \u2581 Minimum Locator \u2581returns \u2581a \u2581 slice \u2581of \u2581 type Locator \u2581instance ."], "references": ["\u2581// \u2581 ReservedInstance Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.1437791910008819, "rouge_l": 0.4474327628361858}
{"id": 6482, "predictions": ["\u2581// \u2581 Wrap \u2581returns \u2581a \u2581new \u2581 Filtered \u2581instance \u2581that \u2581can \u2581be \u2581used \u2581to \u2581 get \u2581the \u2581// \u2581given \u2581filters ."], "references": ["\u2581// \u2581 Wrap \u2581 wraps \u2581an \u2581existing \u2581logger , \u2581filtering \u2581the \u2581fields \u2581as \u2581it \u2581goes \u2581along \u2581// \u2581using \u2581the \u2581provided \u2581filters"], "bleu": 0.12858902882463452, "rouge_l": 0.3333333333333333}
{"id": 6263, "predictions": ["\u2581// \u2581 Application Locator \u2581returns \u2581a \u2581 Application Locator \u2581instance ."], "references": ["\u2581// \u2581 Application Locator \u2581builds \u2581a \u2581locator \u2581from \u2581the \u2581given \u2581 href ."], "bleu": 0.2972751205801448, "rouge_l": 0.5746971736204576}
{"id": 6835, "predictions": ["\u2581// \u2581 Subject \u2581sets \u2581the \u2581 subject \u2581 name \u2581to \u2581the \u2581configuration"], "references": ["\u2581// \u2581 Subject \u2581is \u2581an \u2581 Option \u2581that \u2581sets \u2581a \u2581identity ' s \u2581 subject \u2581field ."], "bleu": 0.16291446197325232, "rouge_l": 0.4013157894736842}
{"id": 8005, "predictions": ["\u2581// \u2581Get Stats \u2581returns \u2581the \u2581current \u2581stats \u2581report ."], "references": ["\u2581// \u2581Get Stats \u2581returns \u2581skip list \u2581stats"], "bleu": 0.4111336169005197, "rouge_l": 0.639412997903564}
{"id": 6391, "predictions": ["\u2581// \u2581Must Parse \u2581 loads \u2581the \u2581 ast . Exec \u2581from \u2581a \u2581 format ."], "references": ["\u2581// Must Parse \u2581is \u2581like \u2581Parse , \u2581but \u2581panic s \u2581instead \u2581of \u2581returning \u2581an \u2581error ."], "bleu": 0.09151480843357339, "rouge_l": 0.19242902208201892}
{"id": 7223, "predictions": ["\u2581// \u2581 Pop mark \u2581 pop s \u2581the \u2581current \u2581state \u2581of \u2581the \u2581state ."], "references": ["\u2581// \u2581 Pop mark \u2581 pop s \u2581the \u2581 mark \u2581stored \u2581at \u2581the \u2581 top \u2581of \u2581the \u2581 mark \u2581stack"], "bleu": 0.3888292623591039, "rouge_l": 0.5700934579439253}
{"id": 7443, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581receiver \u2581is \u2581a \u2581valid \u2581 map ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 OperationType"], "bleu": 0.145534544590586, "rouge_l": 0.34463276836158196}
{"id": 6927, "predictions": ["\u2581// \u2581 Limit \u2581adds \u2581a \u2581 Condition \u2581to \u2581the \u2581 Condition ."], "references": ["\u2581// \u2581 Limit \u2581adds \u2581\" LIMIT \" \u2581clause \u2581to \u2581the \u2581 Condition \u2581and \u2581returns \u2581it \u2581for \u2581method \u2581chain ."], "bleu": 0.27754253845721066, "rouge_l": 0.5579268292682926}
{"id": 6449, "predictions": ["\u2581// \u2581 With Namespace \u2581returns \u2581a \u2581 Interface \u2581that \u2581uses \u2581the \u2581namespace \u2581to \u2581use \u2581for \u2581the \u2581namespace ."], "references": ["\u2581// \u2581 With Namespace \u2581adds \u2581a \u2581namespace \u2581to \u2581the \u2581logging \u2581context"], "bleu": 0.23210911117419966, "rouge_l": 0.5768321513002365}
{"id": 7112, "predictions": ["\u2581// \u2581 Shutdown \u2581is \u2581used \u2581to \u2581 graceful ly \u2581shutdown \u2581the \u2581server ."], "references": ["\u2581// \u2581 Shutdown \u2581calls \u2581 h 2 qui c . Server . Close \u2581method ."], "bleu": 0.168694047994874, "rouge_l": 0.35260115606936415}
{"id": 7471, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581value \u2581is \u2581a \u2581valid \u2581 type ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Memo Type"], "bleu": 0.14506582581782648, "rouge_l": 0.32846153846153847}
{"id": 7225, "predictions": ["\u2581// \u2581 Load \u2581a \u2581 key \u2581from \u2581the \u2581state ."], "references": ["\u2581// \u2581 Load ByteCode \u2581 loads \u2581a \u2581new \u2581 ByteCode . \u2581This \u2581is \u2581used \u2581for \u2581op \u2581codes \u2581that \u2581// \u2581 call \u2581to \u2581external \u2581 templates \u2581such \u2581as \u2581` include `"], "bleu": 0.036520949774262054, "rouge_l": 0.27518796992481204}
{"id": 6837, "predictions": ["\u2581// \u2581 GetId \u2581is \u2581the \u2581 functional \u2581option \u2581for \u2581 configuring \u2581the \u2581configuration"], "references": ["\u2581// \u2581 NotBefore \u2581is \u2581an \u2581 Option \u2581for \u2581setting \u2581the \u2581identity ' s \u2581certificate ' s \u2581 NotBefore ."], "bleu": 0.10125700062662704, "rouge_l": 0.3627353815659069}
{"id": 7276, "predictions": ["\u2581// \u2581 Extend \u2581adds \u2581the \u2581 left \u2581to \u2581the \u2581 top \u2581of \u2581the \u2581stack ."], "references": ["\u2581// \u2581 Extend \u2581changes \u2581the \u2581 size \u2581of \u2581the \u2581underlying \u2581buffer , \u2581extending \u2581it \u2581by \u2581` extend By `"], "bleu": 0.15844917324845162, "rouge_l": 0.4032105760151086}
{"id": 7802, "predictions": ["\u2581// \u2581 New Exponential \u2581creates \u2581a \u2581new \u2581backoff \u2581strategy ."], "references": ["\u2581// \u2581 New Exponential \u2581creates \u2581a \u2581new \u2581backoff \u2581using \u2581the \u2581 exponential \u2581backoff \u2581algorithm ."], "bleu": 0.4895040428210662, "rouge_l": 0.6949367088607595}
{"id": 6647, "predictions": ["\u2581// \u2581 Uint \u2581returns \u2581a \u2581uint 64 \u2581value \u2581from \u2581a \u2581string"], "references": ["\u2581// \u2581 Uint \u2581defines \u2581a \u2581uint \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581and \u2581// \u2581usage \u2581string . \u2581The \u2581return \u2581value \u2581is \u2581the \u2581address \u2581of \u2581a \u2581uint \u2581variable"], "bleu": 0.049600265336077476, "rouge_l": 0.3151291512915129}
{"id": 7804, "predictions": ["\u2581// \u2581 New Linear \u2581creates \u2581a \u2581new \u2581 Backoff \u2581with \u2581the \u2581given \u2581start \u2581and \u2581max \u2581interval ."], "references": ["\u2581// \u2581 New Linear \u2581creates \u2581a \u2581new \u2581backoff \u2581using \u2581the \u2581linear \u2581backoff \u2581algorithm ."], "bleu": 0.4112175645551036, "rouge_l": 0.5909580193756728}
{"id": 6808, "predictions": ["\u2581// \u2581 Active \u2581returns \u2581true \u2581if \u2581the \u2581watcher \u2581is \u2581 active ."], "references": ["\u2581// \u2581Returns \u2581true \u2581if \u2581the \u2581 Watcher \u2581is \u2581 active ly \u2581looking \u2581for \u2581changes ."], "bleu": 0.23813315910350882, "rouge_l": 0.5809523809523809}
{"id": 6643, "predictions": ["\u2581// \u2581 Int \u2581returns \u2581a \u2581int 64 \u2581value \u2581with \u2581the \u2581given \u2581string \u2581value ."], "references": ["\u2581// \u2581 Int \u2581defines \u2581an \u2581int \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581and \u2581// \u2581usage \u2581string . \u2581The \u2581return \u2581value \u2581is \u2581the \u2581address \u2581of \u2581an \u2581int \u2581variable"], "bleu": 0.06756370544334084, "rouge_l": 0.2986013986013986}
{"id": 6641, "predictions": ["\u2581// \u2581 Bool \u2581returns \u2581a \u2581bool \u2581value \u2581for \u2581the \u2581given \u2581 name"], "references": ["\u2581// \u2581 Bool \u2581defines \u2581a \u2581bool \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581and \u2581// \u2581usage \u2581string . \u2581The \u2581return \u2581value \u2581is \u2581the \u2581address \u2581of \u2581a \u2581bool \u2581variable"], "bleu": 0.061649414488583236, "rouge_l": 0.30942028985507253}
{"id": 7594, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581true \u2581if \u2581the \u2581 ErrorCode \u2581 contains \u2581the \u2581given \u2581 v ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 ErrorCode"], "bleu": 0.179520268787505, "rouge_l": 0.37858805275407287}
{"id": 7236, "predictions": ["\u2581// \u2581 NewFile Cache \u2581creates \u2581a \u2581new \u2581 File Cache"], "references": ["\u2581// \u2581 NewFile Cache \u2581creates \u2581a \u2581new \u2581 File Cache \u2581which \u2581stores \u2581caches \u2581under neat h \u2581// \u2581the \u2581directory \u2581specified \u2581by \u2581` dir `"], "bleu": 0.2465969639416065, "rouge_l": 0.5475763016157988}
{"id": 6714, "predictions": ["\u2581// \u2581 Camel \u2581 - \u2581 Camel \u2581 k"], "references": ["\u2581// \u2581 Camel \u2581returns \u2581a \u2581 camelCase d \u2581string ."], "bleu": 0.24855227187657006, "rouge_l": 0.41709401709401706}
{"id": 7442, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581envelope Type \u2581is \u2581a \u2581valid \u2581 Envelope ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Envelope Type"], "bleu": 0.15136594372455933, "rouge_l": 0.3349019607843138}
{"id": 7323, "predictions": ["\u2581// \u2581 UpdateUser \u2581updates \u2581a \u2581user \u2581with \u2581the \u2581given \u2581 username \u2581and \u2581password ."], "references": ["\u2581// \u2581 UpdateUser \u2581updates \u2581the \u2581 User \u2581object \u2581stored \u2581in \u2581the \u2581session . \u2581This \u2581is \u2581useful \u2581in case \u2581a \u2581change \u2581// \u2581is \u2581made \u2581to \u2581the \u2581user \u2581 model \u2581that \u2581needs"], "bleu": 0.09329970840207648, "rouge_l": 0.2986013986013986}
{"id": 6365, "predictions": ["\u2581// \u2581 Funcs \u2581returns \u2581a \u2581new \u2581 Template \u2581template ."], "references": ["\u2581// \u2581 Funcs \u2581register \u2581 Funcs \u2581for \u2581tmpl"], "bleu": 0.24808415001701817, "rouge_l": 0.4535315985130111}
{"id": 7879, "predictions": ["\u2581// \u2581shutdown Finished \u2581is \u2581used \u2581to \u2581shutdown \u2581the \u2581 status \u2581of \u2581the \u2581server ."], "references": ["\u2581// \u2581shutdown Finished \u2581closes \u2581the \u2581shutdown Complete \u2581channel \u2581// \u2581 10 \u2581 mili seconds \u2581after \u2581being \u2581invoked \u2581 ( to \u2581give \u2581a \u2581cmd \u2581ctrl \u2581client \u2581// \u2581a \u2581chance \u2581to \u2581return"], "bleu": 0.062393275451015855, "rouge_l": 0.21328671328671328}
{"id": 7656, "predictions": ["\u2581// \u2581 Read Int \u2581reads \u2581a \u2581single \u2581uint 64 \u2581from \u2581the \u2581 slice ."], "references": ["\u2581// \u2581 Des p ite \u2581returning \u2581a \u2581uint 64, \u2581 this \u2581actually \u2581reads \u2581a \u2581uint 32 . \u2581 All \u2581 table \u2581indices \u2581// \u2581and \u2581lengths \u2581are \u2581stored \u2581as \u2581uint 32"], "bleu": 0.052466281662696825, "rouge_l": 0.2559440559440559}
{"id": 6716, "predictions": ["\u2581// \u2581 Snake \u2581 format \u2581string"], "references": ["\u2581// \u2581 Snake \u2581returns \u2581a \u2581 snake _ case d \u2581string \u2581with \u2581all \u2581lowercase \u2581letters ."], "bleu": 0.08593729255651557, "rouge_l": 0.42011019283746553}
{"id": 6379, "predictions": ["\u2581// \u2581 New Plain Client \u2581returns \u2581a \u2581new \u2581 plain \u2581 PDU ."], "references": ["\u2581// \u2581 A \u2581client \u2581implementation \u2581of \u2581the \u2581 PLAIN \u2581authentication \u2581mechanism , \u2581as \u2581described \u2581// \u2581in \u2581RFC \u2581 46 16 . \u2581 Authorization \u2581identity \u2581may \u2581be \u2581 left \u2581 blank"], "bleu": 0.040430622532524496, "rouge_l": 0.21708185053380782}
{"id": 7424, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581 Asset Type \u2581is \u2581a \u2581valid \u2581 type ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 Asset Type"], "bleu": 0.18765261572384642, "rouge_l": 0.37538461538461537}
{"id": 8042, "predictions": ["\u2581// \u2581run \u2581runs \u2581the \u2581 Lexer ."], "references": ["\u2581// \u2581 Run \u2581lex es \u2581the \u2581input \u2581by \u2581executing \u2581state \u2581function s \u2581// \u2581until \u2581the \u2581state \u2581is \u2581nil"], "bleu": 0.045890725128646594, "rouge_l": 0.14823815309842042}
{"id": 6235, "predictions": ["\u2581// \u2581from API \u2581returns \u2581a \u2581new \u2581API \u2581API ."], "references": ["\u2581// \u2581 Wrap \u2581generic \u2581client \u2581into \u2581 RL 10 \u2581client"], "bleu": 0.1262975489687145, "rouge_l": 0.10427350427350426}
{"id": 6699, "predictions": ["\u2581// \u2581 Has \u2581returns \u2581true \u2581if \u2581the \u2581 temporal \u2581 key \u2581is \u2581present \u2581in \u2581the \u2581 pack file ."], "references": ["\u2581// \u2581 Has \u2581checks \u2581if \u2581the \u2581given \u2581 key \u2581is \u2581 set ."], "bleu": 0.20313747122261766, "rouge_l": 0.6468716861081654}
{"id": 6836, "predictions": ["\u2581// \u2581 PrivateKey \u2581sets \u2581the \u2581 Signer \u2581to \u2581use \u2581for \u2581the \u2581configuration"], "references": ["\u2581// \u2581 PrivateKey \u2581is \u2581an \u2581 Option \u2581for \u2581setting \u2581the \u2581identity ' s \u2581private \u2581 key ."], "bleu": 0.14663139543109924, "rouge_l": 0.4013157894736842}
{"id": 7602, "predictions": ["\u2581// \u2581 Valid Enum \u2581returns \u2581whether \u2581the \u2581 MessageType \u2581is \u2581a \u2581valid \u2581 type ."], "references": ["\u2581// \u2581 Valid Enum \u2581validates \u2581a \u2581 proposed \u2581value \u2581for \u2581 this \u2581enum . \u2581 Implements \u2581// \u2581the \u2581 Enum \u2581interface \u2581for \u2581 MessageType"], "bleu": 0.1693465876195648, "rouge_l": 0.34463276836158196}
{"id": 7242, "predictions": ["\u2581// \u2581Set \u2581sets \u2581the \u2581cache \u2581 key \u2581for \u2581the \u2581given \u2581 key"], "references": ["\u2581// \u2581Set \u2581stores \u2581the \u2581 ByteCode"], "bleu": 0.15537125692760353, "rouge_l": 0.4728682170542636}
{"id": 6651, "predictions": ["\u2581// \u2581String \u2581returns \u2581a \u2581string \u2581representation \u2581of \u2581the \u2581given \u2581string ."], "references": ["\u2581// \u2581String \u2581defines \u2581a \u2581string \u2581flag \u2581with \u2581specified \u2581 name , \u2581default \u2581value , \u2581// \u2581and \u2581usage \u2581string . \u2581The \u2581return \u2581value \u2581is \u2581the \u2581address \u2581of \u2581a \u2581string \u2581// \u2581variable"], "bleu": 0.041708685316740636, "rouge_l": 0.2701107011070111}
{"id": 7309, "predictions": ["\u2581// \u2581build Info Handler \u2581builds \u2581a \u2581 structured \u2581 info \u2581for \u2581the \u2581given \u2581http . Request ."], "references": ["\u2581// \u2581build Info Handler \u2581 - \u2581This \u2581is \u2581a \u2581stop \u2581gap \u2581and \u2581will \u2581be \u2581added \u2581to \u2581when \u2581we \u2581can \u2581define \u2581what \u2581we \u2581should \u2581 display \u2581here"], "bleu": 0.1331746401824839, "rouge_l": 0.26891991182953706}
{"id": 8046, "predictions": ["\u2581// \u2581 Like \u2581 pos ."], "references": ["\u2581// \u2581 LineNum \u2581returns \u2581the \u2581current \u2581line \u2581based \u2581on \u2581the \u2581 data \u2581processed \u2581so \u2581far"], "bleu": 0.06970452184190923, "rouge_l": 0.26521739130434785}
{"id": 6224, "predictions": ["\u2581// \u2581 Can Authenticate \u2581returns \u2581a \u2581 Auth \u2581error \u2581if \u2581the \u2581API \u2581is \u2581not \u2581 disabled ."], "references": ["\u2581// \u2581 Can Authenticate \u2581makes \u2581a \u2581 test \u2581authenticated \u2581request \u2581to \u2581the \u2581 Right Scale \u2581API \u2581and \u2581returns \u2581an \u2581error \u2581// \u2581if \u2581it \u2581fails ."], "bleu": 0.17177315072610655, "rouge_l": 0.4143396226415094}
{"id": 6924, "predictions": ["\u2581// \u2581 Like \u2581 render \u2581expression"], "references": ["\u2581// \u2581 Like \u2581adds \u2581\" LIKE \" \u2581clause \u2581to \u2581the \u2581 Condition \u2581and \u2581returns \u2581it \u2581for \u2581method \u2581chain ."], "bleu": 0.04980112054951144, "rouge_l": 0.2925659472422062}
{"id": 7158, "predictions": ["\u2581// \u2581 Status \u2581returns \u2581the \u2581 status \u2581of \u2581the \u2581service ."], "references": ["\u2581// \u2581 Status \u2581returns \u2581whether \u2581the \u2581 maintenance \u2581mode \u2581is \u2581enabled ."], "bleu": 0.3442447960363952, "rouge_l": 0.603960396039604}
{"id": 6551, "predictions": ["\u2581// \u2581Set Depth \u2581sets \u2581the \u2581depth \u2581of \u2581the \u2581client \u2581to \u2581 set \u2581the \u2581 Client ' s \u2581depth \u2581// \u2581and \u2581 set \u2581to \u2581the \u2581 Client ' s \u2581depth ."], "references": ["\u2581// \u2581Set Depth \u2581sets \u2581depth \u2581parameter \u2581for \u2581 api \u2581calls"], "bleu": 0.12212865548711085, "rouge_l": 0.32972972972972975}
{"id": 6469, "predictions": ["\u2581// \u2581 Wrap \u2581 wraps \u2581the \u2581logger . Logger \u2581with \u2581the \u2581given \u2581logger ."], "references": ["\u2581// \u2581 Wrap \u2581logrus . Logger"], "bleu": 0.195647514979229, "rouge_l": 0.5388692579505301}
{"id": 7305, "predictions": ["\u2581// \u2581Ignore Error \u2581returns \u2581true \u2581if \u2581the \u2581error \u2581is \u2581a \u2581 Error \u2581error ."], "references": ["\u2581// \u2581Ignore Error \u2581returns \u2581a \u2581func \u2581that \u2581will \u2581return \u2581true \u2581when \u2581the \u2581passed \u2581errors \u2581// \u2581match ."], "bleu": 0.22999286394728397, "rouge_l": 0.4438669438669438}
{"id": 6899, "predictions": ["\u2581// \u2581 Offset \u2581returns \u2581the \u2581current \u2581value \u2581of \u2581the \u2581given \u2581offset ."], "references": ["\u2581// \u2581 Offset \u2581returns \u2581a \u2581new \u2581 Condition \u2581of \u2581\" OFFSET \" \u2581clause ."], "bleu": 0.2662659213958957, "rouge_l": 0.45522388059701485}
{"id": 6898, "predictions": ["\u2581// \u2581 Limit \u2581specifies \u2581the \u2581number \u2581of \u2581 items \u2581in \u2581the \u2581database ."], "references": ["\u2581// \u2581 Limit \u2581returns \u2581a \u2581new \u2581 Condition \u2581of \u2581\" LIMIT \" \u2581clause ."], "bleu": 0.18934058951353838, "rouge_l": 0.36791314837153194}
{"id": 7076, "predictions": ["\u2581// \u2581 Param \u2581adds \u2581a \u2581parameter \u2581to \u2581the \u2581 set ."], "references": ["\u2581// \u2581 Param \u2581defines \u2581a \u2581parameter \u2581with \u2581the \u2581specified \u2581 name ."], "bleu": 0.25476965408249, "rouge_l": 0.6902404526166903}
{"id": 6931, "predictions": ["\u2581// \u2581 Print \u2581 - \u2581 Print \u2581a \u2581message \u2581with \u2581 DEBUG \u2581level"], "references": ["\u2581// \u2581 Print \u2581is \u2581a \u2581dummy \u2581method ."], "bleu": 0.18798317647335086, "rouge_l": 0.39804241435562804}
{"id": 6662, "predictions": ["\u2581// \u2581 FileExists In Path \u2581returns \u2581true \u2581if \u2581the \u2581given \u2581file \u2581 exists \u2581in \u2581the \u2581 path"], "references": ["\u2581// \u2581 FileExists In Path \u2581returns \u2581a \u2581flag \u2581indicating \u2581whether \u2581the \u2581provided \u2581file \u2581 exists \u2581// \u2581in \u2581the \u2581current \u2581 path ."], "bleu": 0.35063784378108986, "rouge_l": 0.7017255546425636}
{"id": 8109, "predictions": ["\u2581// \u2581 WriteString \u2581writes \u2581a \u2581string \u2581to \u2581the \u2581 content \u2581 form"], "references": ["\u2581// \u2581 WriteString \u2581writes \u2581string \u2581 data \u2581into \u2581the \u2581response \u2581object ."], "bleu": 0.32523403430389786, "rouge_l": 0.5}
{"id": 6382, "predictions": ["\u2581// \u2581 Sign \u2581sets \u2581the \u2581 key \u2581and \u2581 key"], "references": ["\u2581// \u2581 Sign \u2581sign s \u2581an \u2581HTTP \u2581request \u2581with \u2581the \u2581given \u2581 S 3 \u2581 keys . \u2581// \u2581// \u2581This \u2581function \u2581is \u2581a \u2581wrapper \u2581around \u2581Default Service . Sign ."], "bleu": 0.036520949774262054, "rouge_l": 0.27518796992481204}
{"id": 7222, "predictions": ["\u2581// \u2581 Append Output String \u2581appends \u2581a \u2581string \u2581to \u2581the \u2581output ."], "references": ["\u2581// \u2581 Append Output String \u2581is \u2581the \u2581same \u2581as \u2581 Append Output , \u2581but \u2581uses \u2581a \u2581string"], "bleu": 0.2906085559731479, "rouge_l": 0.4682017543859649}
{"id": 7313, "predictions": ["\u2581// \u2581 Count \u2581returns \u2581the \u2581number \u2581of \u2581errors \u2581in \u2581the \u2581 Errors"], "references": ["\u2581// \u2581 Total \u2581errors \u2581is \u2581the \u2581sum \u2581of \u2581errors \u2581with \u2581the \u2581request \u2581overall \u2581// \u2581and \u2581errors \u2581on \u2581individual \u2581fields ."], "bleu": 0.0960275499060831, "rouge_l": 0.3588235294117647}
{"id": 7090, "predictions": ["\u2581// \u2581 NewError Errors \u2581returns \u2581an \u2581error \u2581if \u2581the \u2581 type \u2581 contains \u2581the \u2581 type \u2581of \u2581the \u2581 form \u2581of \u2581 type ."], "references": ["\u2581// \u2581 NewError \u2581initializes \u2581 Form Errors \u2581with \u2581one \u2581general \u2581error ."], "bleu": 0.11213336822390839, "rouge_l": 0.3546511627906977}
{"id": 7198, "predictions": ["\u2581// \u2581tx Literal \u2581returns \u2581the \u2581current \u2581 set \u2581of \u2581 State ."], "references": ["\u2581// \u2581Sets \u2581literal \u2581in \u2581op \u2581arg \u2581to \u2581register \u2581sa"], "bleu": 0.10390302174233558, "rouge_l": 0.09775641025641024}
{"id": 6413, "predictions": ["\u2581// \u2581 Marshal \u2581writes \u2581the \u2581 contents \u2581of \u2581the \u2581 Node \u2581to \u2581the \u2581given \u2581writer ."], "references": ["\u2581// Marshal \u2581prints \u2581the \u2581result \u2581tree , \u2581 r , \u2581in \u2581XML \u2581 form \u2581to \u2581 w ."], "bleu": 0.09887278502458893, "rouge_l": 0.40744274809160297}
{"id": 6906, "predictions": ["\u2581// \u2581 Quote \u2581 - \u2581 quote \u2581string"], "references": ["\u2581// \u2581 Quote \u2581returns \u2581a \u2581quoted \u2581 s . \u2581// \u2581It \u2581is \u2581for \u2581a \u2581column \u2581 name , \u2581not \u2581a \u2581value ."], "bleu": 0.05740038894060595, "rouge_l": 0.3074596774193548}
{"id": 6529, "predictions": ["\u2581// \u2581Check Int \u2581checks \u2581if \u2581the \u2581given \u2581value \u2581is \u2581a \u2581valid \u2581 Range ."], "references": ["\u2581// \u2581Check Int \u2581is \u2581a \u2581convenience \u2581method \u2581which \u2581does \u2581an \u2581 unchecked \u2581 type \u2581// \u2581conversion \u2581from \u2581an \u2581int \u2581to \u2581a \u2581float 64."], "bleu": 0.10691083553609226, "rouge_l": 0.31069609507640067}
{"id": 6970, "predictions": ["\u2581// \u2581 Errorf \u2581is \u2581a \u2581convenience \u2581function \u2581to \u2581 emit \u2581a \u2581message \u2581with \u2581the \u2581given \u2581message ."], "references": ["\u2581// \u2581 Errorf \u2581returns \u2581a \u2581 trace able \u2581error \u2581with \u2581the \u2581given \u2581formatted \u2581message ."], "bleu": 0.22786788980326644, "rouge_l": 0.6321243523316062}
{"id": 6530, "predictions": ["\u2581// \u2581Check Uint 64 \u2581checks \u2581if \u2581the \u2581range \u2581is \u2581a \u2581uint 64 \u2581or \u2581not ."], "references": ["\u2581// \u2581Check Uint 64 \u2581is \u2581a \u2581convenience \u2581method \u2581which \u2581does \u2581an \u2581 unchecked \u2581 type \u2581// \u2581conversion \u2581from \u2581an \u2581uint 64 \u2581to \u2581a \u2581float 64."], "bleu": 0.15067317522978252, "rouge_l": 0.38274509803921564}
{"id": 6185, "predictions": ["\u2581// \u2581 Subnet \u2581returns \u2581true \u2581if \u2581file \u2581is \u2581 empty"], "references": ["\u2581// \u2581 fileExists \u2581reads \u2581 content \u2581from \u2581existing \u2581file \u2581and \u2581returns \u2581a \u2581 byte \u2581array"], "bleu": 0.11966489805508941, "rouge_l": 0.30886075949367087}
{"id": 7243, "predictions": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581 key \u2581from \u2581the \u2581cache"], "references": ["\u2581// \u2581 Delete \u2581deletes \u2581the \u2581 ByteCode"], "bleu": 0.5706745777055999, "rouge_l": 0.7290836653386453}
